!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
ALT	kern/driver/console.c	260;"	d	file:
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
ARRAYSIZE	user/testbss.c	4;"	d	file:
AWK	Makefile	/^AWK		:= awk$/;"	m
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
BS_OCMD	kern/driver/kbdreg.h	23;"	d
BUFSIZE	kern/libs/readline.c	3;"	d	file:
C	kern/driver/console.c	323;"	d	file:
CAPSLOCK	kern/driver/console.c	262;"	d	file:
CC	Makefile	/^CC		:= $(GCCPREFIX)gcc$/;"	m
CC	Makefile	/^CC		:= clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
CGA_BASE	kern/driver/console.c	45;"	d	file:
CGA_BUF	kern/driver/console.c	46;"	d	file:
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
CLONE_THREAD	libs/unistd.h	26;"	d
CLONE_VM	libs/unistd.h	25;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
COM1	kern/driver/console.c	21;"	d	file:
COM_DLL	kern/driver/console.c	25;"	d	file:
COM_DLM	kern/driver/console.c	26;"	d	file:
COM_FCR	kern/driver/console.c	30;"	d	file:
COM_IER	kern/driver/console.c	27;"	d	file:
COM_IER_RDI	kern/driver/console.c	28;"	d	file:
COM_IIR	kern/driver/console.c	29;"	d	file:
COM_LCR	kern/driver/console.c	31;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	32;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	33;"	d	file:
COM_LSR	kern/driver/console.c	38;"	d	file:
COM_LSR_DATA	kern/driver/console.c	39;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	41;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	40;"	d	file:
COM_MCR	kern/driver/console.c	34;"	d	file:
COM_MCR_DTR	kern/driver/console.c	36;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	37;"	d	file:
COM_MCR_RTS	kern/driver/console.c	35;"	d	file:
COM_RX	kern/driver/console.c	23;"	d	file:
COM_TX	kern/driver/console.c	24;"	d	file:
CONSBUFSIZE	kern/driver/console.c	208;"	d	file:
COPY	Makefile	/^COPY	:= cp$/;"	m
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
CRT_COLS	kern/driver/console.c	48;"	d	file:
CRT_ROWS	kern/driver/console.c	47;"	d	file:
CRT_SIZE	kern/driver/console.c	49;"	d	file:
CTL	kern/driver/console.c	259;"	d	file:
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
ClearPageProperty	kern/mm/memlayout.h	146;"	d
ClearPageReserved	kern/mm/memlayout.h	143;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DEPTH	user/forktree.c	5;"	d	file:
DPL_KERNEL	kern/mm/memlayout.h	20;"	d
DPL_USER	kern/mm/memlayout.h	21;"	d
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/driver/console.c	266;"	d	file:
E820MAX	kern/mm/memlayout.h	111;"	d
E820_ARM	kern/mm/memlayout.h	112;"	d
E820_ARR	kern/mm/memlayout.h	113;"	d
ELFHDR	boot/bootmain.c	34;"	d	file:
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
EMPTY	Makefile	/^EMPTY	:=$/;"	m
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GD_KDATA	kern/mm/memlayout.h	15;"	d
GD_KTEXT	kern/mm/memlayout.h	14;"	d
GD_TSS	kern/mm/memlayout.h	18;"	d
GD_UDATA	kern/mm/memlayout.h	17;"	d
GD_UTEXT	kern/mm/memlayout.h	16;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= proj$(PROJ)-handin.tar.gz$/;"	m
HASH_LIST_SIZE	kern/process/proc.c	66;"	d	file:
HASH_SHIFT	kern/process/proc.c	65;"	d	file:
HOSTCC	Makefile	/^HOSTCC		:= clang$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2$/;"	m
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
KADDR	kern/mm/pmm.h	69;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KERNBASE	kern/mm/memlayout.h	70;"	d
KERNEL_CS	kern/mm/memlayout.h	23;"	d
KERNEL_DS	kern/mm/memlayout.h	24;"	d
KERNEL_EXECVE	kern/process/proc.c	800;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	812;"	d	file:
KERNEL_EXECVE2	obj/kernel.asm	/^#define KERNEL_EXECVE2(x, xstart, xsize)        __KERNEL_EXECVE2(x, xstart, xsize)$/;"	d
KERNTOP	kern/mm/memlayout.h	72;"	d
KERN_ACCESS	kern/mm/memlayout.h	97;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
KMEMSIZE	kern/mm/memlayout.h	71;"	d
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
KSTACKPAGE	kern/mm/memlayout.h	82;"	d
KSTACKSIZE	kern/mm/memlayout.h	83;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
LPTPORT	kern/driver/console.c	51;"	d	file:
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
MAXERROR	libs/error.h	30;"	d
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	user/libs/syscall.c	6;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
MAX_PID	kern/process/proc.h	38;"	d
MAX_PROCESS	kern/process/proc.h	37;"	d
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MONO_BASE	kern/driver/console.c	43;"	d	file:
MONO_BUF	kern/driver/console.c	44;"	d	file:
MV	Makefile	/^MV		:= mv$/;"	m
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
NO	kern/driver/console.c	256;"	d	file:
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
NULL	libs/defs.h	5;"	d
NUMLOCK	kern/driver/console.c	263;"	d	file:
NUM_SYSCALLS	kern/syscall/syscall.c	79;"	d	file:
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
PADDR	kern/mm/pmm.h	57;"	d
PAGE_NSECT	kern/fs/fs.h	7;"	d
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PF_EXITING	kern/process/proc.h	62;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PG_property	kern/mm/memlayout.h	140;"	d
PG_reserved	kern/mm/memlayout.h	139;"	d
PPN	kern/mm/mmu.h	210;"	d
PROC_NAME_LEN	kern/process/proc.h	36;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
PROJ	Makefile	/^PROJ	:= 5$/;"	m
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	147;"	d
PageReserved	kern/mm/memlayout.h	144;"	d
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback$/;"	m
RAND_MAX	libs/stdlib.h	7;"	d
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
RM	Makefile	/^RM		:= rm -f$/;"	m
ROUNDDOWN	libs/defs.h	43;"	d
ROUNDUP	libs/defs.h	49;"	d
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SCROLLLOCK	kern/driver/console.c	264;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
SECTSIZE	kern/fs/fs.h	6;"	d
SED	Makefile	/^SED		:= sed$/;"	m
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	boot/asm.h	11;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SEG_NULLASM	boot/asm.h	7;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
SH	Makefile	/^SH		:= sh$/;"	m
SHIFT	kern/driver/console.c	258;"	d	file:
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
STA_A	boot/asm.h	23;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	boot/asm.h	20;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	boot/asm.h	19;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	boot/asm.h	22;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	boot/asm.h	21;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	boot/asm.h	18;"	d
STA_X	kern/mm/mmu.h	28;"	d
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
SWAP_DEV_NO	kern/fs/fs.h	9;"	d
SYS_brk	libs/unistd.h	17;"	d
SYS_clone	libs/unistd.h	11;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_mmap	libs/unistd.h	18;"	d
SYS_munmap	libs/unistd.h	19;"	d
SYS_pgdir	libs/unistd.h	22;"	d
SYS_putc	libs/unistd.h	21;"	d
SYS_shmem	libs/unistd.h	20;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_yield	libs/unistd.h	12;"	d
SetPageProperty	kern/mm/memlayout.h	145;"	d
SetPageReserved	kern/mm/memlayout.h	142;"	d
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
TICK_NUM	kern/trap/trap.c	19;"	d	file:
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_SYSCALL	libs/unistd.h	4;"	d
T_TSS	kern/trap/trap.h	19;"	d
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USERBASE	kern/mm/memlayout.h	90;"	d
USERTOP	kern/mm/memlayout.h	85;"	d
USER_ACCESS	kern/mm/memlayout.h	94;"	d
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_CS	kern/mm/memlayout.h	25;"	d
USER_DS	kern/mm/memlayout.h	26;"	d
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
USTAB	kern/mm/memlayout.h	92;"	d
USTACKPAGE	kern/mm/memlayout.h	87;"	d
USTACKSIZE	kern/mm/memlayout.h	88;"	d
USTACKTOP	kern/mm/memlayout.h	86;"	d
UTEXT	kern/mm/memlayout.h	91;"	d
V	Makefile	/^V       := @$/;"	m
VALID_IDE	kern/driver/ide.c	47;"	d	file:
VM_EXEC	kern/mm/vmm.h	27;"	d
VM_READ	kern/mm/vmm.h	25;"	d
VM_STACK	kern/mm/vmm.h	28;"	d
VM_WRITE	kern/mm/vmm.h	26;"	d
VPT	kern/mm/memlayout.h	80;"	d
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
WT_CHILD	kern/process/proc.h	64;"	d
WT_INTERRUPTED	kern/process/proc.h	65;"	d
__BOOT_ASM_H__	boot/asm.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	283;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	264;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	250;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	210;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	234;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__KERNEL_EXECVE	kern/process/proc.c	794;"	d	file:
__KERNEL_EXECVE2	kern/process/proc.c	807;"	d	file:
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
__KERN_FS_SWAPFS_H__	kern/fs/swapfs.h	2;"	d
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
__KERN_MM_KMALLOC_H__	kern/mm/kmalloc.h	2;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
__LIBS_LIST_H__	libs/list.h	2;"	d
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
__LIBS_STRING_H__	libs/string.h	2;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__always_inline	libs/defs.h	8;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
_start	obj/user/badarg.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/exit.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/forktest.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/pgdir.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/waitkill.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_start	user/libs/initcode.S	/^_start:$/;"	l
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon3
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
assert	kern/debug/assert.h	15;"	d
assert	user/libs/ulib.h	15;"	d
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
barrier	libs/x86.h	21;"	d
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon1	file:
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool user_mem_check(struct mm_struct *mm, uintptr_t start, size_t len, bool write);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon2	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
build_run	tools/grade.sh	/^build_run() {$/;"	f
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 a0 12 00 	lgdtl  0x12a018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 a0 12 c0       	mov    $0xc012a000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba b8 f0 19 c0       	mov    $0xc019f0b8,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 2a bf 19 c0       	mov    $0xc019bf2a,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	00 $/;"	l
c010004a	obj/kernel.asm	/^c010004a:	c7 04 24 2a bf 19 c0 	movl   $0xc019bf2a,(%esp)$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 75 ba 00 00       	call   c010bacb <memset>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	e8 80 16 00 00       	call   c01016db <cons_init>$/;"	l
c010005b	obj/kernel.asm	/^c010005b:	c7 45 f4 60 bc 10 c0 	movl   $0xc010bc60,-0xc(%ebp)$/;"	l
c0100062	obj/kernel.asm	/^c0100062:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100065	obj/kernel.asm	/^c0100065:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100069	obj/kernel.asm	/^c0100069:	c7 04 24 7c bc 10 c0 	movl   $0xc010bc7c,(%esp)$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 de 02 00 00       	call   c0100353 <cprintf>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 05 09 00 00       	call   c010097f <print_kerninfo>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 9d 00 00 00       	call   c010011c <grade_backtrace>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 f8 55 00 00       	call   c010567c <pmm_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 30 20 00 00       	call   c01020b9 <pic_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 82 21 00 00       	call   c0102210 <idt_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 9c 84 00 00       	call   c010852f <vmm_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 f6 a9 00 00       	call   c010aa8e <proc_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 6f 17 00 00       	call   c010180c <ide_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 2f 6c 00 00       	call   c0106cd1 <swap_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 ea 0d 00 00       	call   c0100e91 <clock_init>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 7b 1f 00 00       	call   c0102027 <intr_enable>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	e8 9c ab 00 00       	call   c010ac4d <cpu_idle>$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1 <grade_backtrace2>:$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1:	55                   	push   %ebp$/;"	l
c01000b2	obj/kernel.asm	/^c01000b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01000b4	obj/kernel.asm	/^c01000b4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01000b7	obj/kernel.asm	/^c01000b7:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01000be	obj/kernel.asm	/^c01000be:	00 $/;"	l
c01000bf	obj/kernel.asm	/^c01000bf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01000c6	obj/kernel.asm	/^c01000c6:	00 $/;"	l
c01000c7	obj/kernel.asm	/^c01000c7:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c01000ce	obj/kernel.asm	/^c01000ce:	e8 f0 0c 00 00       	call   c0100dc3 <mon_backtrace>$/;"	l
c01000d3	obj/kernel.asm	/^c01000d3:	c9                   	leave  $/;"	l
c01000d4	obj/kernel.asm	/^c01000d4:	c3                   	ret    $/;"	l
c01000d5	obj/kernel.asm	/^c01000d5 <grade_backtrace1>:$/;"	l
c01000d5	obj/kernel.asm	/^c01000d5:	55                   	push   %ebp$/;"	l
c01000d6	obj/kernel.asm	/^c01000d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01000d8	obj/kernel.asm	/^c01000d8:	53                   	push   %ebx$/;"	l
c01000d9	obj/kernel.asm	/^c01000d9:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01000dc	obj/kernel.asm	/^c01000dc:	8d 5d 0c             	lea    0xc(%ebp),%ebx$/;"	l
c01000df	obj/kernel.asm	/^c01000df:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c01000e2	obj/kernel.asm	/^c01000e2:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c01000e5	obj/kernel.asm	/^c01000e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000e8	obj/kernel.asm	/^c01000e8:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c01000ec	obj/kernel.asm	/^c01000ec:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01000f0	obj/kernel.asm	/^c01000f0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01000f4	obj/kernel.asm	/^c01000f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01000f7	obj/kernel.asm	/^c01000f7:	e8 b5 ff ff ff       	call   c01000b1 <grade_backtrace2>$/;"	l
c01000fc	obj/kernel.asm	/^c01000fc:	83 c4 14             	add    $0x14,%esp$/;"	l
c01000ff	obj/kernel.asm	/^c01000ff:	5b                   	pop    %ebx$/;"	l
c0100100	obj/kernel.asm	/^c0100100:	5d                   	pop    %ebp$/;"	l
c0100101	obj/kernel.asm	/^c0100101:	c3                   	ret    $/;"	l
c0100102	obj/kernel.asm	/^c0100102 <grade_backtrace0>:$/;"	l
c0100102	obj/kernel.asm	/^c0100102:	55                   	push   %ebp$/;"	l
c0100103	obj/kernel.asm	/^c0100103:	89 e5                	mov    %esp,%ebp$/;"	l
c0100105	obj/kernel.asm	/^c0100105:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100108	obj/kernel.asm	/^c0100108:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010010b	obj/kernel.asm	/^c010010b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010010f	obj/kernel.asm	/^c010010f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100112	obj/kernel.asm	/^c0100112:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100115	obj/kernel.asm	/^c0100115:	e8 bb ff ff ff       	call   c01000d5 <grade_backtrace1>$/;"	l
c010011a	obj/kernel.asm	/^c010011a:	c9                   	leave  $/;"	l
c010011b	obj/kernel.asm	/^c010011b:	c3                   	ret    $/;"	l
c010011c	obj/kernel.asm	/^c010011c <grade_backtrace>:$/;"	l
c010011c	obj/kernel.asm	/^c010011c:	55                   	push   %ebp$/;"	l
c010011d	obj/kernel.asm	/^c010011d:	89 e5                	mov    %esp,%ebp$/;"	l
c010011f	obj/kernel.asm	/^c010011f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100122	obj/kernel.asm	/^c0100122:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100127	obj/kernel.asm	/^c0100127:	c7 44 24 08 00 00 ff 	movl   $0xffff0000,0x8(%esp)$/;"	l
c010012e	obj/kernel.asm	/^c010012e:	ff $/;"	l
c010012f	obj/kernel.asm	/^c010012f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100133	obj/kernel.asm	/^c0100133:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010013a	obj/kernel.asm	/^c010013a:	e8 c3 ff ff ff       	call   c0100102 <grade_backtrace0>$/;"	l
c010013f	obj/kernel.asm	/^c010013f:	c9                   	leave  $/;"	l
c0100140	obj/kernel.asm	/^c0100140:	c3                   	ret    $/;"	l
c0100141	obj/kernel.asm	/^c0100141 <lab1_print_cur_status>:$/;"	l
c0100141	obj/kernel.asm	/^c0100141:	55                   	push   %ebp$/;"	l
c0100142	obj/kernel.asm	/^c0100142:	89 e5                	mov    %esp,%ebp$/;"	l
c0100144	obj/kernel.asm	/^c0100144:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100147	obj/kernel.asm	/^c0100147:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c010014a	obj/kernel.asm	/^c010014a:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c010014d	obj/kernel.asm	/^c010014d:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c0100150	obj/kernel.asm	/^c0100150:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c0100153	obj/kernel.asm	/^c0100153:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100157	obj/kernel.asm	/^c0100157:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010015a	obj/kernel.asm	/^c010015a:	83 e0 03             	and    $0x3,%eax$/;"	l
c010015d	obj/kernel.asm	/^c010015d:	89 c2                	mov    %eax,%edx$/;"	l
c010015f	obj/kernel.asm	/^c010015f:	a1 40 bf 19 c0       	mov    0xc019bf40,%eax$/;"	l
c0100164	obj/kernel.asm	/^c0100164:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100168	obj/kernel.asm	/^c0100168:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010016c	obj/kernel.asm	/^c010016c:	c7 04 24 81 bc 10 c0 	movl   $0xc010bc81,(%esp)$/;"	l
c0100173	obj/kernel.asm	/^c0100173:	e8 db 01 00 00       	call   c0100353 <cprintf>$/;"	l
c0100178	obj/kernel.asm	/^c0100178:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010017c	obj/kernel.asm	/^c010017c:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010017f	obj/kernel.asm	/^c010017f:	a1 40 bf 19 c0       	mov    0xc019bf40,%eax$/;"	l
c0100184	obj/kernel.asm	/^c0100184:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100188	obj/kernel.asm	/^c0100188:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010018c	obj/kernel.asm	/^c010018c:	c7 04 24 8f bc 10 c0 	movl   $0xc010bc8f,(%esp)$/;"	l
c0100193	obj/kernel.asm	/^c0100193:	e8 bb 01 00 00       	call   c0100353 <cprintf>$/;"	l
c0100198	obj/kernel.asm	/^c0100198:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010019c	obj/kernel.asm	/^c010019c:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010019f	obj/kernel.asm	/^c010019f:	a1 40 bf 19 c0       	mov    0xc019bf40,%eax$/;"	l
c01001a4	obj/kernel.asm	/^c01001a4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001a8	obj/kernel.asm	/^c01001a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001ac	obj/kernel.asm	/^c01001ac:	c7 04 24 9d bc 10 c0 	movl   $0xc010bc9d,(%esp)$/;"	l
c01001b3	obj/kernel.asm	/^c01001b3:	e8 9b 01 00 00       	call   c0100353 <cprintf>$/;"	l
c01001b8	obj/kernel.asm	/^c01001b8:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01001bc	obj/kernel.asm	/^c01001bc:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001bf	obj/kernel.asm	/^c01001bf:	a1 40 bf 19 c0       	mov    0xc019bf40,%eax$/;"	l
c01001c4	obj/kernel.asm	/^c01001c4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001c8	obj/kernel.asm	/^c01001c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001cc	obj/kernel.asm	/^c01001cc:	c7 04 24 ab bc 10 c0 	movl   $0xc010bcab,(%esp)$/;"	l
c01001d3	obj/kernel.asm	/^c01001d3:	e8 7b 01 00 00       	call   c0100353 <cprintf>$/;"	l
c01001d8	obj/kernel.asm	/^c01001d8:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001dc	obj/kernel.asm	/^c01001dc:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001df	obj/kernel.asm	/^c01001df:	a1 40 bf 19 c0       	mov    0xc019bf40,%eax$/;"	l
c01001e4	obj/kernel.asm	/^c01001e4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001e8	obj/kernel.asm	/^c01001e8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001ec	obj/kernel.asm	/^c01001ec:	c7 04 24 b9 bc 10 c0 	movl   $0xc010bcb9,(%esp)$/;"	l
c01001f3	obj/kernel.asm	/^c01001f3:	e8 5b 01 00 00       	call   c0100353 <cprintf>$/;"	l
c01001f8	obj/kernel.asm	/^c01001f8:	a1 40 bf 19 c0       	mov    0xc019bf40,%eax$/;"	l
c01001fd	obj/kernel.asm	/^c01001fd:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100200	obj/kernel.asm	/^c0100200:	a3 40 bf 19 c0       	mov    %eax,0xc019bf40$/;"	l
c0100205	obj/kernel.asm	/^c0100205:	c9                   	leave  $/;"	l
c0100206	obj/kernel.asm	/^c0100206:	c3                   	ret    $/;"	l
c0100207	obj/kernel.asm	/^c0100207 <lab1_switch_to_user>:$/;"	l
c0100207	obj/kernel.asm	/^c0100207:	55                   	push   %ebp$/;"	l
c0100208	obj/kernel.asm	/^c0100208:	89 e5                	mov    %esp,%ebp$/;"	l
c010020a	obj/kernel.asm	/^c010020a:	5d                   	pop    %ebp$/;"	l
c010020b	obj/kernel.asm	/^c010020b:	c3                   	ret    $/;"	l
c010020c	obj/kernel.asm	/^c010020c <lab1_switch_to_kernel>:$/;"	l
c010020c	obj/kernel.asm	/^c010020c:	55                   	push   %ebp$/;"	l
c010020d	obj/kernel.asm	/^c010020d:	89 e5                	mov    %esp,%ebp$/;"	l
c010020f	obj/kernel.asm	/^c010020f:	5d                   	pop    %ebp$/;"	l
c0100210	obj/kernel.asm	/^c0100210:	c3                   	ret    $/;"	l
c0100211	obj/kernel.asm	/^c0100211 <lab1_switch_test>:$/;"	l
c0100211	obj/kernel.asm	/^c0100211:	55                   	push   %ebp$/;"	l
c0100212	obj/kernel.asm	/^c0100212:	89 e5                	mov    %esp,%ebp$/;"	l
c0100214	obj/kernel.asm	/^c0100214:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100217	obj/kernel.asm	/^c0100217:	e8 25 ff ff ff       	call   c0100141 <lab1_print_cur_status>$/;"	l
c010021c	obj/kernel.asm	/^c010021c:	c7 04 24 c8 bc 10 c0 	movl   $0xc010bcc8,(%esp)$/;"	l
c0100223	obj/kernel.asm	/^c0100223:	e8 2b 01 00 00       	call   c0100353 <cprintf>$/;"	l
c0100228	obj/kernel.asm	/^c0100228:	e8 da ff ff ff       	call   c0100207 <lab1_switch_to_user>$/;"	l
c010022d	obj/kernel.asm	/^c010022d:	e8 0f ff ff ff       	call   c0100141 <lab1_print_cur_status>$/;"	l
c0100232	obj/kernel.asm	/^c0100232:	c7 04 24 e8 bc 10 c0 	movl   $0xc010bce8,(%esp)$/;"	l
c0100239	obj/kernel.asm	/^c0100239:	e8 15 01 00 00       	call   c0100353 <cprintf>$/;"	l
c010023e	obj/kernel.asm	/^c010023e:	e8 c9 ff ff ff       	call   c010020c <lab1_switch_to_kernel>$/;"	l
c0100243	obj/kernel.asm	/^c0100243:	e8 f9 fe ff ff       	call   c0100141 <lab1_print_cur_status>$/;"	l
c0100248	obj/kernel.asm	/^c0100248:	c9                   	leave  $/;"	l
c0100249	obj/kernel.asm	/^c0100249:	c3                   	ret    $/;"	l
c010024a	obj/kernel.asm	/^c010024a <readline>:$/;"	l
c010024a	obj/kernel.asm	/^c010024a:	55                   	push   %ebp$/;"	l
c010024b	obj/kernel.asm	/^c010024b:	89 e5                	mov    %esp,%ebp$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100250	obj/kernel.asm	/^c0100250:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100254	obj/kernel.asm	/^c0100254:	74 13                	je     c0100269 <readline+0x1f>$/;"	l
c0100256	obj/kernel.asm	/^c0100256:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100259	obj/kernel.asm	/^c0100259:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010025d	obj/kernel.asm	/^c010025d:	c7 04 24 07 bd 10 c0 	movl   $0xc010bd07,(%esp)$/;"	l
c0100264	obj/kernel.asm	/^c0100264:	e8 ea 00 00 00       	call   c0100353 <cprintf>$/;"	l
c0100269	obj/kernel.asm	/^c0100269:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100270	obj/kernel.asm	/^c0100270:	e8 66 01 00 00       	call   c01003db <getchar>$/;"	l
c0100275	obj/kernel.asm	/^c0100275:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100278	obj/kernel.asm	/^c0100278:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010027c	obj/kernel.asm	/^c010027c:	79 07                	jns    c0100285 <readline+0x3b>$/;"	l
c010027e	obj/kernel.asm	/^c010027e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100283	obj/kernel.asm	/^c0100283:	eb 79                	jmp    c01002fe <readline+0xb4>$/;"	l
c0100285	obj/kernel.asm	/^c0100285:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c0100289	obj/kernel.asm	/^c0100289:	7e 28                	jle    c01002b3 <readline+0x69>$/;"	l
c010028b	obj/kernel.asm	/^c010028b:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c0100292	obj/kernel.asm	/^c0100292:	7f 1f                	jg     c01002b3 <readline+0x69>$/;"	l
c0100294	obj/kernel.asm	/^c0100294:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100297	obj/kernel.asm	/^c0100297:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010029a	obj/kernel.asm	/^c010029a:	e8 da 00 00 00       	call   c0100379 <cputchar>$/;"	l
c010029f	obj/kernel.asm	/^c010029f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002a2	obj/kernel.asm	/^c01002a2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01002a5	obj/kernel.asm	/^c01002a5:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01002a8	obj/kernel.asm	/^c01002a8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01002ab	obj/kernel.asm	/^c01002ab:	88 90 60 bf 19 c0    	mov    %dl,-0x3fe640a0(%eax)$/;"	l
c01002b1	obj/kernel.asm	/^c01002b1:	eb 46                	jmp    c01002f9 <readline+0xaf>$/;"	l
c01002b3	obj/kernel.asm	/^c01002b3:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c01002b7	obj/kernel.asm	/^c01002b7:	75 17                	jne    c01002d0 <readline+0x86>$/;"	l
c01002b9	obj/kernel.asm	/^c01002b9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01002bd	obj/kernel.asm	/^c01002bd:	7e 11                	jle    c01002d0 <readline+0x86>$/;"	l
c01002bf	obj/kernel.asm	/^c01002bf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002c2	obj/kernel.asm	/^c01002c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002c5	obj/kernel.asm	/^c01002c5:	e8 af 00 00 00       	call   c0100379 <cputchar>$/;"	l
c01002ca	obj/kernel.asm	/^c01002ca:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01002ce	obj/kernel.asm	/^c01002ce:	eb 29                	jmp    c01002f9 <readline+0xaf>$/;"	l
c01002d0	obj/kernel.asm	/^c01002d0:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01002d4	obj/kernel.asm	/^c01002d4:	74 06                	je     c01002dc <readline+0x92>$/;"	l
c01002d6	obj/kernel.asm	/^c01002d6:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01002da	obj/kernel.asm	/^c01002da:	75 1d                	jne    c01002f9 <readline+0xaf>$/;"	l
c01002dc	obj/kernel.asm	/^c01002dc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002df	obj/kernel.asm	/^c01002df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002e2	obj/kernel.asm	/^c01002e2:	e8 92 00 00 00       	call   c0100379 <cputchar>$/;"	l
c01002e7	obj/kernel.asm	/^c01002e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002ea	obj/kernel.asm	/^c01002ea:	05 60 bf 19 c0       	add    $0xc019bf60,%eax$/;"	l
c01002ef	obj/kernel.asm	/^c01002ef:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01002f2	obj/kernel.asm	/^c01002f2:	b8 60 bf 19 c0       	mov    $0xc019bf60,%eax$/;"	l
c01002f7	obj/kernel.asm	/^c01002f7:	eb 05                	jmp    c01002fe <readline+0xb4>$/;"	l
c01002f9	obj/kernel.asm	/^c01002f9:	e9 72 ff ff ff       	jmp    c0100270 <readline+0x26>$/;"	l
c01002fe	obj/kernel.asm	/^c01002fe:	c9                   	leave  $/;"	l
c01002ff	obj/kernel.asm	/^c01002ff:	c3                   	ret    $/;"	l
c0100300	obj/kernel.asm	/^c0100300 <cputch>:$/;"	l
c0100300	obj/kernel.asm	/^c0100300:	55                   	push   %ebp$/;"	l
c0100301	obj/kernel.asm	/^c0100301:	89 e5                	mov    %esp,%ebp$/;"	l
c0100303	obj/kernel.asm	/^c0100303:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100306	obj/kernel.asm	/^c0100306:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100309	obj/kernel.asm	/^c0100309:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010030c	obj/kernel.asm	/^c010030c:	e8 f6 13 00 00       	call   c0101707 <cons_putc>$/;"	l
c0100311	obj/kernel.asm	/^c0100311:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100314	obj/kernel.asm	/^c0100314:	8b 00                	mov    (%eax),%eax$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100319	obj/kernel.asm	/^c0100319:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010031c	obj/kernel.asm	/^c010031c:	89 10                	mov    %edx,(%eax)$/;"	l
c010031e	obj/kernel.asm	/^c010031e:	c9                   	leave  $/;"	l
c010031f	obj/kernel.asm	/^c010031f:	c3                   	ret    $/;"	l
c0100320	obj/kernel.asm	/^c0100320 <vcprintf>:$/;"	l
c0100320	obj/kernel.asm	/^c0100320:	55                   	push   %ebp$/;"	l
c0100321	obj/kernel.asm	/^c0100321:	89 e5                	mov    %esp,%ebp$/;"	l
c0100323	obj/kernel.asm	/^c0100323:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100326	obj/kernel.asm	/^c0100326:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010032d	obj/kernel.asm	/^c010032d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100330	obj/kernel.asm	/^c0100330:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0100334	obj/kernel.asm	/^c0100334:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100337	obj/kernel.asm	/^c0100337:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010033b	obj/kernel.asm	/^c010033b:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c010033e	obj/kernel.asm	/^c010033e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100342	obj/kernel.asm	/^c0100342:	c7 04 24 00 03 10 c0 	movl   $0xc0100300,(%esp)$/;"	l
c0100349	obj/kernel.asm	/^c0100349:	e8 be ae 00 00       	call   c010b20c <vprintfmt>$/;"	l
c010034e	obj/kernel.asm	/^c010034e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100351	obj/kernel.asm	/^c0100351:	c9                   	leave  $/;"	l
c0100352	obj/kernel.asm	/^c0100352:	c3                   	ret    $/;"	l
c0100353	obj/kernel.asm	/^c0100353 <cprintf>:$/;"	l
c0100353	obj/kernel.asm	/^c0100353:	55                   	push   %ebp$/;"	l
c0100354	obj/kernel.asm	/^c0100354:	89 e5                	mov    %esp,%ebp$/;"	l
c0100356	obj/kernel.asm	/^c0100356:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100359	obj/kernel.asm	/^c0100359:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c010035c	obj/kernel.asm	/^c010035c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010035f	obj/kernel.asm	/^c010035f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100362	obj/kernel.asm	/^c0100362:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100366	obj/kernel.asm	/^c0100366:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100369	obj/kernel.asm	/^c0100369:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010036c	obj/kernel.asm	/^c010036c:	e8 af ff ff ff       	call   c0100320 <vcprintf>$/;"	l
c0100371	obj/kernel.asm	/^c0100371:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100374	obj/kernel.asm	/^c0100374:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100377	obj/kernel.asm	/^c0100377:	c9                   	leave  $/;"	l
c0100378	obj/kernel.asm	/^c0100378:	c3                   	ret    $/;"	l
c0100379	obj/kernel.asm	/^c0100379 <cputchar>:$/;"	l
c0100379	obj/kernel.asm	/^c0100379:	55                   	push   %ebp$/;"	l
c010037a	obj/kernel.asm	/^c010037a:	89 e5                	mov    %esp,%ebp$/;"	l
c010037c	obj/kernel.asm	/^c010037c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010037f	obj/kernel.asm	/^c010037f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100382	obj/kernel.asm	/^c0100382:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100385	obj/kernel.asm	/^c0100385:	e8 7d 13 00 00       	call   c0101707 <cons_putc>$/;"	l
c010038a	obj/kernel.asm	/^c010038a:	c9                   	leave  $/;"	l
c010038b	obj/kernel.asm	/^c010038b:	c3                   	ret    $/;"	l
c010038c	obj/kernel.asm	/^c010038c <cputs>:$/;"	l
c010038c	obj/kernel.asm	/^c010038c:	55                   	push   %ebp$/;"	l
c010038d	obj/kernel.asm	/^c010038d:	89 e5                	mov    %esp,%ebp$/;"	l
c010038f	obj/kernel.asm	/^c010038f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100392	obj/kernel.asm	/^c0100392:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0100399	obj/kernel.asm	/^c0100399:	eb 13                	jmp    c01003ae <cputs+0x22>$/;"	l
c010039b	obj/kernel.asm	/^c010039b:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c010039f	obj/kernel.asm	/^c010039f:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01003a2	obj/kernel.asm	/^c01003a2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01003a6	obj/kernel.asm	/^c01003a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01003a9	obj/kernel.asm	/^c01003a9:	e8 52 ff ff ff       	call   c0100300 <cputch>$/;"	l
c01003ae	obj/kernel.asm	/^c01003ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01003b1	obj/kernel.asm	/^c01003b1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01003b4	obj/kernel.asm	/^c01003b4:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01003b7	obj/kernel.asm	/^c01003b7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01003ba	obj/kernel.asm	/^c01003ba:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01003bd	obj/kernel.asm	/^c01003bd:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01003c1	obj/kernel.asm	/^c01003c1:	75 d8                	jne    c010039b <cputs+0xf>$/;"	l
c01003c3	obj/kernel.asm	/^c01003c3:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01003c6	obj/kernel.asm	/^c01003c6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01003ca	obj/kernel.asm	/^c01003ca:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c01003d1	obj/kernel.asm	/^c01003d1:	e8 2a ff ff ff       	call   c0100300 <cputch>$/;"	l
c01003d6	obj/kernel.asm	/^c01003d6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01003d9	obj/kernel.asm	/^c01003d9:	c9                   	leave  $/;"	l
c01003da	obj/kernel.asm	/^c01003da:	c3                   	ret    $/;"	l
c01003db	obj/kernel.asm	/^c01003db <getchar>:$/;"	l
c01003db	obj/kernel.asm	/^c01003db:	55                   	push   %ebp$/;"	l
c01003dc	obj/kernel.asm	/^c01003dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01003de	obj/kernel.asm	/^c01003de:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003e1	obj/kernel.asm	/^c01003e1:	e8 5d 13 00 00       	call   c0101743 <cons_getc>$/;"	l
c01003e6	obj/kernel.asm	/^c01003e6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01003e9	obj/kernel.asm	/^c01003e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01003ed	obj/kernel.asm	/^c01003ed:	74 f2                	je     c01003e1 <getchar+0x6>$/;"	l
c01003ef	obj/kernel.asm	/^c01003ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003f2	obj/kernel.asm	/^c01003f2:	c9                   	leave  $/;"	l
c01003f3	obj/kernel.asm	/^c01003f3:	c3                   	ret    $/;"	l
c01003f4	obj/kernel.asm	/^c01003f4 <stab_binsearch>:$/;"	l
c01003f4	obj/kernel.asm	/^c01003f4:	55                   	push   %ebp$/;"	l
c01003f5	obj/kernel.asm	/^c01003f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01003f7	obj/kernel.asm	/^c01003f7:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01003fa	obj/kernel.asm	/^c01003fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01003fd	obj/kernel.asm	/^c01003fd:	8b 00                	mov    (%eax),%eax$/;"	l
c01003ff	obj/kernel.asm	/^c01003ff:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100402	obj/kernel.asm	/^c0100402:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100405	obj/kernel.asm	/^c0100405:	8b 00                	mov    (%eax),%eax$/;"	l
c0100407	obj/kernel.asm	/^c0100407:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010040a	obj/kernel.asm	/^c010040a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100411	obj/kernel.asm	/^c0100411:	e9 d2 00 00 00       	jmp    c01004e8 <stab_binsearch+0xf4>$/;"	l
c0100416	obj/kernel.asm	/^c0100416:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0100419	obj/kernel.asm	/^c0100419:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010041c	obj/kernel.asm	/^c010041c:	01 d0                	add    %edx,%eax$/;"	l
c010041e	obj/kernel.asm	/^c010041e:	89 c2                	mov    %eax,%edx$/;"	l
c0100420	obj/kernel.asm	/^c0100420:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c0100423	obj/kernel.asm	/^c0100423:	01 d0                	add    %edx,%eax$/;"	l
c0100425	obj/kernel.asm	/^c0100425:	d1 f8                	sar    %eax$/;"	d
c0100427	obj/kernel.asm	/^c0100427:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010042a	obj/kernel.asm	/^c010042a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010042d	obj/kernel.asm	/^c010042d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100430	obj/kernel.asm	/^c0100430:	eb 04                	jmp    c0100436 <stab_binsearch+0x42>$/;"	l
c0100432	obj/kernel.asm	/^c0100432:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c0100436	obj/kernel.asm	/^c0100436:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100439	obj/kernel.asm	/^c0100439:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010043c	obj/kernel.asm	/^c010043c:	7c 1f                	jl     c010045d <stab_binsearch+0x69>$/;"	l
c010043e	obj/kernel.asm	/^c010043e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100441	obj/kernel.asm	/^c0100441:	89 d0                	mov    %edx,%eax$/;"	l
c0100443	obj/kernel.asm	/^c0100443:	01 c0                	add    %eax,%eax$/;"	l
c0100445	obj/kernel.asm	/^c0100445:	01 d0                	add    %edx,%eax$/;"	l
c0100447	obj/kernel.asm	/^c0100447:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010044a	obj/kernel.asm	/^c010044a:	89 c2                	mov    %eax,%edx$/;"	l
c010044c	obj/kernel.asm	/^c010044c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010044f	obj/kernel.asm	/^c010044f:	01 d0                	add    %edx,%eax$/;"	l
c0100451	obj/kernel.asm	/^c0100451:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100455	obj/kernel.asm	/^c0100455:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100458	obj/kernel.asm	/^c0100458:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010045b	obj/kernel.asm	/^c010045b:	75 d5                	jne    c0100432 <stab_binsearch+0x3e>$/;"	l
c010045d	obj/kernel.asm	/^c010045d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100460	obj/kernel.asm	/^c0100460:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100463	obj/kernel.asm	/^c0100463:	7d 0b                	jge    c0100470 <stab_binsearch+0x7c>$/;"	l
c0100465	obj/kernel.asm	/^c0100465:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100468	obj/kernel.asm	/^c0100468:	83 c0 01             	add    $0x1,%eax$/;"	l
c010046b	obj/kernel.asm	/^c010046b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010046e	obj/kernel.asm	/^c010046e:	eb 78                	jmp    c01004e8 <stab_binsearch+0xf4>$/;"	l
c0100470	obj/kernel.asm	/^c0100470:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0100477	obj/kernel.asm	/^c0100477:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010047a	obj/kernel.asm	/^c010047a:	89 d0                	mov    %edx,%eax$/;"	l
c010047c	obj/kernel.asm	/^c010047c:	01 c0                	add    %eax,%eax$/;"	l
c010047e	obj/kernel.asm	/^c010047e:	01 d0                	add    %edx,%eax$/;"	l
c0100480	obj/kernel.asm	/^c0100480:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100483	obj/kernel.asm	/^c0100483:	89 c2                	mov    %eax,%edx$/;"	l
c0100485	obj/kernel.asm	/^c0100485:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100488	obj/kernel.asm	/^c0100488:	01 d0                	add    %edx,%eax$/;"	l
c010048a	obj/kernel.asm	/^c010048a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010048d	obj/kernel.asm	/^c010048d:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100490	obj/kernel.asm	/^c0100490:	73 13                	jae    c01004a5 <stab_binsearch+0xb1>$/;"	l
c0100492	obj/kernel.asm	/^c0100492:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100495	obj/kernel.asm	/^c0100495:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100498	obj/kernel.asm	/^c0100498:	89 10                	mov    %edx,(%eax)$/;"	l
c010049a	obj/kernel.asm	/^c010049a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010049d	obj/kernel.asm	/^c010049d:	83 c0 01             	add    $0x1,%eax$/;"	l
c01004a0	obj/kernel.asm	/^c01004a0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004a3	obj/kernel.asm	/^c01004a3:	eb 43                	jmp    c01004e8 <stab_binsearch+0xf4>$/;"	l
c01004a5	obj/kernel.asm	/^c01004a5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01004a8	obj/kernel.asm	/^c01004a8:	89 d0                	mov    %edx,%eax$/;"	l
c01004aa	obj/kernel.asm	/^c01004aa:	01 c0                	add    %eax,%eax$/;"	l
c01004ac	obj/kernel.asm	/^c01004ac:	01 d0                	add    %edx,%eax$/;"	l
c01004ae	obj/kernel.asm	/^c01004ae:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01004b1	obj/kernel.asm	/^c01004b1:	89 c2                	mov    %eax,%edx$/;"	l
c01004b3	obj/kernel.asm	/^c01004b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01004b6	obj/kernel.asm	/^c01004b6:	01 d0                	add    %edx,%eax$/;"	l
c01004b8	obj/kernel.asm	/^c01004b8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01004bb	obj/kernel.asm	/^c01004bb:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c01004be	obj/kernel.asm	/^c01004be:	76 16                	jbe    c01004d6 <stab_binsearch+0xe2>$/;"	l
c01004c0	obj/kernel.asm	/^c01004c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004c3	obj/kernel.asm	/^c01004c3:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01004c6	obj/kernel.asm	/^c01004c6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01004c9	obj/kernel.asm	/^c01004c9:	89 10                	mov    %edx,(%eax)$/;"	l
c01004cb	obj/kernel.asm	/^c01004cb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004ce	obj/kernel.asm	/^c01004ce:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01004d1	obj/kernel.asm	/^c01004d1:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01004d4	obj/kernel.asm	/^c01004d4:	eb 12                	jmp    c01004e8 <stab_binsearch+0xf4>$/;"	l
c01004d6	obj/kernel.asm	/^c01004d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004d9	obj/kernel.asm	/^c01004d9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01004dc	obj/kernel.asm	/^c01004dc:	89 10                	mov    %edx,(%eax)$/;"	l
c01004de	obj/kernel.asm	/^c01004de:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004e1	obj/kernel.asm	/^c01004e1:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004e4	obj/kernel.asm	/^c01004e4:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c01004e8	obj/kernel.asm	/^c01004e8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01004eb	obj/kernel.asm	/^c01004eb:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01004ee	obj/kernel.asm	/^c01004ee:	0f 8e 22 ff ff ff    	jle    c0100416 <stab_binsearch+0x22>$/;"	l
c01004f4	obj/kernel.asm	/^c01004f4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01004f8	obj/kernel.asm	/^c01004f8:	75 0f                	jne    c0100509 <stab_binsearch+0x115>$/;"	l
c01004fa	obj/kernel.asm	/^c01004fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004fd	obj/kernel.asm	/^c01004fd:	8b 00                	mov    (%eax),%eax$/;"	l
c01004ff	obj/kernel.asm	/^c01004ff:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0100502	obj/kernel.asm	/^c0100502:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100505	obj/kernel.asm	/^c0100505:	89 10                	mov    %edx,(%eax)$/;"	l
c0100507	obj/kernel.asm	/^c0100507:	eb 3f                	jmp    c0100548 <stab_binsearch+0x154>$/;"	l
c0100509	obj/kernel.asm	/^c0100509:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010050c	obj/kernel.asm	/^c010050c:	8b 00                	mov    (%eax),%eax$/;"	l
c010050e	obj/kernel.asm	/^c010050e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100511	obj/kernel.asm	/^c0100511:	eb 04                	jmp    c0100517 <stab_binsearch+0x123>$/;"	l
c0100513	obj/kernel.asm	/^c0100513:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c0100517	obj/kernel.asm	/^c0100517:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010051a	obj/kernel.asm	/^c010051a:	8b 00                	mov    (%eax),%eax$/;"	l
c010051c	obj/kernel.asm	/^c010051c:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010051f	obj/kernel.asm	/^c010051f:	7d 1f                	jge    c0100540 <stab_binsearch+0x14c>$/;"	l
c0100521	obj/kernel.asm	/^c0100521:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100524	obj/kernel.asm	/^c0100524:	89 d0                	mov    %edx,%eax$/;"	l
c0100526	obj/kernel.asm	/^c0100526:	01 c0                	add    %eax,%eax$/;"	l
c0100528	obj/kernel.asm	/^c0100528:	01 d0                	add    %edx,%eax$/;"	l
c010052a	obj/kernel.asm	/^c010052a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010052d	obj/kernel.asm	/^c010052d:	89 c2                	mov    %eax,%edx$/;"	l
c010052f	obj/kernel.asm	/^c010052f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100532	obj/kernel.asm	/^c0100532:	01 d0                	add    %edx,%eax$/;"	l
c0100534	obj/kernel.asm	/^c0100534:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100538	obj/kernel.asm	/^c0100538:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010053b	obj/kernel.asm	/^c010053b:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010053e	obj/kernel.asm	/^c010053e:	75 d3                	jne    c0100513 <stab_binsearch+0x11f>$/;"	l
c0100540	obj/kernel.asm	/^c0100540:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100543	obj/kernel.asm	/^c0100543:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100546	obj/kernel.asm	/^c0100546:	89 10                	mov    %edx,(%eax)$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	c9                   	leave  $/;"	l
c0100549	obj/kernel.asm	/^c0100549:	c3                   	ret    $/;"	l
c010054a	obj/kernel.asm	/^c010054a <debuginfo_eip>:$/;"	l
c010054a	obj/kernel.asm	/^c010054a:	55                   	push   %ebp$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	89 e5                	mov    %esp,%ebp$/;"	l
c010054d	obj/kernel.asm	/^c010054d:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100550	obj/kernel.asm	/^c0100550:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100553	obj/kernel.asm	/^c0100553:	c7 00 0c bd 10 c0    	movl   $0xc010bd0c,(%eax)$/;"	l
c0100559	obj/kernel.asm	/^c0100559:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010055c	obj/kernel.asm	/^c010055c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0100563	obj/kernel.asm	/^c0100563:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100566	obj/kernel.asm	/^c0100566:	c7 40 08 0c bd 10 c0 	movl   $0xc010bd0c,0x8(%eax)$/;"	l
c010056d	obj/kernel.asm	/^c010056d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100570	obj/kernel.asm	/^c0100570:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c0100577	obj/kernel.asm	/^c0100577:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010057a	obj/kernel.asm	/^c010057a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010057d	obj/kernel.asm	/^c010057d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100580	obj/kernel.asm	/^c0100580:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100583	obj/kernel.asm	/^c0100583:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010058a	obj/kernel.asm	/^c010058a:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100591	obj/kernel.asm	/^c0100591:	76 21                	jbe    c01005b4 <debuginfo_eip+0x6a>$/;"	l
c0100593	obj/kernel.asm	/^c0100593:	c7 45 f4 40 e3 10 c0 	movl   $0xc010e340,-0xc(%ebp)$/;"	l
c010059a	obj/kernel.asm	/^c010059a:	c7 45 f0 48 25 12 c0 	movl   $0xc0122548,-0x10(%ebp)$/;"	l
c01005a1	obj/kernel.asm	/^c01005a1:	c7 45 ec 49 25 12 c0 	movl   $0xc0122549,-0x14(%ebp)$/;"	l
c01005a8	obj/kernel.asm	/^c01005a8:	c7 45 e8 f9 71 12 c0 	movl   $0xc01271f9,-0x18(%ebp)$/;"	l
c01005af	obj/kernel.asm	/^c01005af:	e9 ea 00 00 00       	jmp    c010069e <debuginfo_eip+0x154>$/;"	l
c01005b4	obj/kernel.asm	/^c01005b4:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c01005bb	obj/kernel.asm	/^c01005bb:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c01005c0	obj/kernel.asm	/^c01005c0:	85 c0                	test   %eax,%eax$/;"	l
c01005c2	obj/kernel.asm	/^c01005c2:	74 11                	je     c01005d5 <debuginfo_eip+0x8b>$/;"	l
c01005c4	obj/kernel.asm	/^c01005c4:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c01005c9	obj/kernel.asm	/^c01005c9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01005cc	obj/kernel.asm	/^c01005cc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01005cf	obj/kernel.asm	/^c01005cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01005d3	obj/kernel.asm	/^c01005d3:	75 0a                	jne    c01005df <debuginfo_eip+0x95>$/;"	l
c01005d5	obj/kernel.asm	/^c01005d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01005da	obj/kernel.asm	/^c01005da:	e9 9e 03 00 00       	jmp    c010097d <debuginfo_eip+0x433>$/;"	l
c01005df	obj/kernel.asm	/^c01005df:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01005e2	obj/kernel.asm	/^c01005e2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01005e9	obj/kernel.asm	/^c01005e9:	00 $/;"	l
c01005ea	obj/kernel.asm	/^c01005ea:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c01005f1	obj/kernel.asm	/^c01005f1:	00 $/;"	l
c01005f2	obj/kernel.asm	/^c01005f2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01005f6	obj/kernel.asm	/^c01005f6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01005f9	obj/kernel.asm	/^c01005f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01005fc	obj/kernel.asm	/^c01005fc:	e8 08 88 00 00       	call   c0108e09 <user_mem_check>$/;"	l
c0100601	obj/kernel.asm	/^c0100601:	85 c0                	test   %eax,%eax$/;"	l
c0100603	obj/kernel.asm	/^c0100603:	75 0a                	jne    c010060f <debuginfo_eip+0xc5>$/;"	l
c0100605	obj/kernel.asm	/^c0100605:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010060a	obj/kernel.asm	/^c010060a:	e9 6e 03 00 00       	jmp    c010097d <debuginfo_eip+0x433>$/;"	l
c010060f	obj/kernel.asm	/^c010060f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100612	obj/kernel.asm	/^c0100612:	8b 00                	mov    (%eax),%eax$/;"	l
c0100614	obj/kernel.asm	/^c0100614:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100617	obj/kernel.asm	/^c0100617:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010061a	obj/kernel.asm	/^c010061a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010061d	obj/kernel.asm	/^c010061d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100620	obj/kernel.asm	/^c0100620:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100623	obj/kernel.asm	/^c0100623:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100626	obj/kernel.asm	/^c0100626:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100629	obj/kernel.asm	/^c0100629:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010062c	obj/kernel.asm	/^c010062c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010062f	obj/kernel.asm	/^c010062f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100632	obj/kernel.asm	/^c0100632:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100635	obj/kernel.asm	/^c0100635:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100638	obj/kernel.asm	/^c0100638:	29 c2                	sub    %eax,%edx$/;"	l
c010063a	obj/kernel.asm	/^c010063a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010063d	obj/kernel.asm	/^c010063d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0100644	obj/kernel.asm	/^c0100644:	00 $/;"	l
c0100645	obj/kernel.asm	/^c0100645:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100649	obj/kernel.asm	/^c0100649:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010064d	obj/kernel.asm	/^c010064d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100650	obj/kernel.asm	/^c0100650:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100653	obj/kernel.asm	/^c0100653:	e8 b1 87 00 00       	call   c0108e09 <user_mem_check>$/;"	l
c0100658	obj/kernel.asm	/^c0100658:	85 c0                	test   %eax,%eax$/;"	l
c010065a	obj/kernel.asm	/^c010065a:	75 0a                	jne    c0100666 <debuginfo_eip+0x11c>$/;"	l
c010065c	obj/kernel.asm	/^c010065c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100661	obj/kernel.asm	/^c0100661:	e9 17 03 00 00       	jmp    c010097d <debuginfo_eip+0x433>$/;"	l
c0100666	obj/kernel.asm	/^c0100666:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0100669	obj/kernel.asm	/^c0100669:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010066c	obj/kernel.asm	/^c010066c:	29 c2                	sub    %eax,%edx$/;"	l
c010066e	obj/kernel.asm	/^c010066e:	89 d0                	mov    %edx,%eax$/;"	l
c0100670	obj/kernel.asm	/^c0100670:	89 c2                	mov    %eax,%edx$/;"	l
c0100672	obj/kernel.asm	/^c0100672:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100675	obj/kernel.asm	/^c0100675:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010067c	obj/kernel.asm	/^c010067c:	00 $/;"	l
c010067d	obj/kernel.asm	/^c010067d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100681	obj/kernel.asm	/^c0100681:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100685	obj/kernel.asm	/^c0100685:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100688	obj/kernel.asm	/^c0100688:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010068b	obj/kernel.asm	/^c010068b:	e8 79 87 00 00       	call   c0108e09 <user_mem_check>$/;"	l
c0100690	obj/kernel.asm	/^c0100690:	85 c0                	test   %eax,%eax$/;"	l
c0100692	obj/kernel.asm	/^c0100692:	75 0a                	jne    c010069e <debuginfo_eip+0x154>$/;"	l
c0100694	obj/kernel.asm	/^c0100694:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100699	obj/kernel.asm	/^c0100699:	e9 df 02 00 00       	jmp    c010097d <debuginfo_eip+0x433>$/;"	l
c010069e	obj/kernel.asm	/^c010069e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01006a1	obj/kernel.asm	/^c01006a1:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01006a4	obj/kernel.asm	/^c01006a4:	76 0d                	jbe    c01006b3 <debuginfo_eip+0x169>$/;"	l
c01006a6	obj/kernel.asm	/^c01006a6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01006a9	obj/kernel.asm	/^c01006a9:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01006ac	obj/kernel.asm	/^c01006ac:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01006af	obj/kernel.asm	/^c01006af:	84 c0                	test   %al,%al$/;"	l
c01006b1	obj/kernel.asm	/^c01006b1:	74 0a                	je     c01006bd <debuginfo_eip+0x173>$/;"	l
c01006b3	obj/kernel.asm	/^c01006b3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006b8	obj/kernel.asm	/^c01006b8:	e9 c0 02 00 00       	jmp    c010097d <debuginfo_eip+0x433>$/;"	l
c01006bd	obj/kernel.asm	/^c01006bd:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01006c4	obj/kernel.asm	/^c01006c4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01006c7	obj/kernel.asm	/^c01006c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006ca	obj/kernel.asm	/^c01006ca:	29 c2                	sub    %eax,%edx$/;"	l
c01006cc	obj/kernel.asm	/^c01006cc:	89 d0                	mov    %edx,%eax$/;"	l
c01006ce	obj/kernel.asm	/^c01006ce:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c01006d1	obj/kernel.asm	/^c01006d1:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c01006d7	obj/kernel.asm	/^c01006d7:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01006da	obj/kernel.asm	/^c01006da:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01006dd	obj/kernel.asm	/^c01006dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01006e0	obj/kernel.asm	/^c01006e0:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c01006e4	obj/kernel.asm	/^c01006e4:	c7 44 24 0c 64 00 00 	movl   $0x64,0xc(%esp)$/;"	l
c01006eb	obj/kernel.asm	/^c01006eb:	00 $/;"	l
c01006ec	obj/kernel.asm	/^c01006ec:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c01006ef	obj/kernel.asm	/^c01006ef:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01006f3	obj/kernel.asm	/^c01006f3:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c01006f6	obj/kernel.asm	/^c01006f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01006fa	obj/kernel.asm	/^c01006fa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006fd	obj/kernel.asm	/^c01006fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100700	obj/kernel.asm	/^c0100700:	e8 ef fc ff ff       	call   c01003f4 <stab_binsearch>$/;"	l
c0100705	obj/kernel.asm	/^c0100705:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100708	obj/kernel.asm	/^c0100708:	85 c0                	test   %eax,%eax$/;"	l
c010070a	obj/kernel.asm	/^c010070a:	75 0a                	jne    c0100716 <debuginfo_eip+0x1cc>$/;"	l
c010070c	obj/kernel.asm	/^c010070c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100711	obj/kernel.asm	/^c0100711:	e9 67 02 00 00       	jmp    c010097d <debuginfo_eip+0x433>$/;"	l
c0100716	obj/kernel.asm	/^c0100716:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100719	obj/kernel.asm	/^c0100719:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010071c	obj/kernel.asm	/^c010071c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010071f	obj/kernel.asm	/^c010071f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100722	obj/kernel.asm	/^c0100722:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100725	obj/kernel.asm	/^c0100725:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0100729	obj/kernel.asm	/^c0100729:	c7 44 24 0c 24 00 00 	movl   $0x24,0xc(%esp)$/;"	l
c0100730	obj/kernel.asm	/^c0100730:	00 $/;"	l
c0100731	obj/kernel.asm	/^c0100731:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c0100734	obj/kernel.asm	/^c0100734:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100738	obj/kernel.asm	/^c0100738:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010073b	obj/kernel.asm	/^c010073b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010073f	obj/kernel.asm	/^c010073f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100742	obj/kernel.asm	/^c0100742:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100745	obj/kernel.asm	/^c0100745:	e8 aa fc ff ff       	call   c01003f4 <stab_binsearch>$/;"	l
c010074a	obj/kernel.asm	/^c010074a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010074d	obj/kernel.asm	/^c010074d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100750	obj/kernel.asm	/^c0100750:	39 c2                	cmp    %eax,%edx$/;"	l
c0100752	obj/kernel.asm	/^c0100752:	7f 7c                	jg     c01007d0 <debuginfo_eip+0x286>$/;"	l
c0100754	obj/kernel.asm	/^c0100754:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100757	obj/kernel.asm	/^c0100757:	89 c2                	mov    %eax,%edx$/;"	l
c0100759	obj/kernel.asm	/^c0100759:	89 d0                	mov    %edx,%eax$/;"	l
c010075b	obj/kernel.asm	/^c010075b:	01 c0                	add    %eax,%eax$/;"	l
c010075d	obj/kernel.asm	/^c010075d:	01 d0                	add    %edx,%eax$/;"	l
c010075f	obj/kernel.asm	/^c010075f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100762	obj/kernel.asm	/^c0100762:	89 c2                	mov    %eax,%edx$/;"	l
c0100764	obj/kernel.asm	/^c0100764:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100767	obj/kernel.asm	/^c0100767:	01 d0                	add    %edx,%eax$/;"	l
c0100769	obj/kernel.asm	/^c0100769:	8b 10                	mov    (%eax),%edx$/;"	l
c010076b	obj/kernel.asm	/^c010076b:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c010076e	obj/kernel.asm	/^c010076e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100771	obj/kernel.asm	/^c0100771:	29 c1                	sub    %eax,%ecx$/;"	l
c0100773	obj/kernel.asm	/^c0100773:	89 c8                	mov    %ecx,%eax$/;"	l
c0100775	obj/kernel.asm	/^c0100775:	39 c2                	cmp    %eax,%edx$/;"	l
c0100777	obj/kernel.asm	/^c0100777:	73 22                	jae    c010079b <debuginfo_eip+0x251>$/;"	l
c0100779	obj/kernel.asm	/^c0100779:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010077c	obj/kernel.asm	/^c010077c:	89 c2                	mov    %eax,%edx$/;"	l
c010077e	obj/kernel.asm	/^c010077e:	89 d0                	mov    %edx,%eax$/;"	l
c0100780	obj/kernel.asm	/^c0100780:	01 c0                	add    %eax,%eax$/;"	l
c0100782	obj/kernel.asm	/^c0100782:	01 d0                	add    %edx,%eax$/;"	l
c0100784	obj/kernel.asm	/^c0100784:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100787	obj/kernel.asm	/^c0100787:	89 c2                	mov    %eax,%edx$/;"	l
c0100789	obj/kernel.asm	/^c0100789:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010078c	obj/kernel.asm	/^c010078c:	01 d0                	add    %edx,%eax$/;"	l
c010078e	obj/kernel.asm	/^c010078e:	8b 10                	mov    (%eax),%edx$/;"	l
c0100790	obj/kernel.asm	/^c0100790:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100793	obj/kernel.asm	/^c0100793:	01 c2                	add    %eax,%edx$/;"	l
c0100795	obj/kernel.asm	/^c0100795:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100798	obj/kernel.asm	/^c0100798:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010079b	obj/kernel.asm	/^c010079b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010079e	obj/kernel.asm	/^c010079e:	89 c2                	mov    %eax,%edx$/;"	l
c01007a0	obj/kernel.asm	/^c01007a0:	89 d0                	mov    %edx,%eax$/;"	l
c01007a2	obj/kernel.asm	/^c01007a2:	01 c0                	add    %eax,%eax$/;"	l
c01007a4	obj/kernel.asm	/^c01007a4:	01 d0                	add    %edx,%eax$/;"	l
c01007a6	obj/kernel.asm	/^c01007a6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01007a9	obj/kernel.asm	/^c01007a9:	89 c2                	mov    %eax,%edx$/;"	l
c01007ab	obj/kernel.asm	/^c01007ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007ae	obj/kernel.asm	/^c01007ae:	01 d0                	add    %edx,%eax$/;"	l
c01007b0	obj/kernel.asm	/^c01007b0:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01007b3	obj/kernel.asm	/^c01007b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007b6	obj/kernel.asm	/^c01007b6:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01007b9	obj/kernel.asm	/^c01007b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007bc	obj/kernel.asm	/^c01007bc:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01007bf	obj/kernel.asm	/^c01007bf:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c01007c2	obj/kernel.asm	/^c01007c2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007c5	obj/kernel.asm	/^c01007c5:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01007c8	obj/kernel.asm	/^c01007c8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01007cb	obj/kernel.asm	/^c01007cb:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01007ce	obj/kernel.asm	/^c01007ce:	eb 15                	jmp    c01007e5 <debuginfo_eip+0x29b>$/;"	l
c01007d0	obj/kernel.asm	/^c01007d0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007d3	obj/kernel.asm	/^c01007d3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01007d6	obj/kernel.asm	/^c01007d6:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01007d9	obj/kernel.asm	/^c01007d9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01007dc	obj/kernel.asm	/^c01007dc:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01007df	obj/kernel.asm	/^c01007df:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01007e2	obj/kernel.asm	/^c01007e2:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01007e5	obj/kernel.asm	/^c01007e5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007e8	obj/kernel.asm	/^c01007e8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01007eb	obj/kernel.asm	/^c01007eb:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c01007f2	obj/kernel.asm	/^c01007f2:	00 $/;"	l
c01007f3	obj/kernel.asm	/^c01007f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01007f6	obj/kernel.asm	/^c01007f6:	e8 44 b1 00 00       	call   c010b93f <strfind>$/;"	l
c01007fb	obj/kernel.asm	/^c01007fb:	89 c2                	mov    %eax,%edx$/;"	l
c01007fd	obj/kernel.asm	/^c01007fd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100800	obj/kernel.asm	/^c0100800:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100803	obj/kernel.asm	/^c0100803:	29 c2                	sub    %eax,%edx$/;"	l
c0100805	obj/kernel.asm	/^c0100805:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100808	obj/kernel.asm	/^c0100808:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010080b	obj/kernel.asm	/^c010080b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010080e	obj/kernel.asm	/^c010080e:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0100812	obj/kernel.asm	/^c0100812:	c7 44 24 0c 44 00 00 	movl   $0x44,0xc(%esp)$/;"	l
c0100819	obj/kernel.asm	/^c0100819:	00 $/;"	l
c010081a	obj/kernel.asm	/^c010081a:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c010081d	obj/kernel.asm	/^c010081d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100821	obj/kernel.asm	/^c0100821:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0100824	obj/kernel.asm	/^c0100824:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100828	obj/kernel.asm	/^c0100828:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010082b	obj/kernel.asm	/^c010082b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010082e	obj/kernel.asm	/^c010082e:	e8 c1 fb ff ff       	call   c01003f4 <stab_binsearch>$/;"	l
c0100833	obj/kernel.asm	/^c0100833:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100836	obj/kernel.asm	/^c0100836:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100839	obj/kernel.asm	/^c0100839:	39 c2                	cmp    %eax,%edx$/;"	l
c010083b	obj/kernel.asm	/^c010083b:	7f 24                	jg     c0100861 <debuginfo_eip+0x317>$/;"	l
c010083d	obj/kernel.asm	/^c010083d:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100840	obj/kernel.asm	/^c0100840:	89 c2                	mov    %eax,%edx$/;"	l
c0100842	obj/kernel.asm	/^c0100842:	89 d0                	mov    %edx,%eax$/;"	l
c0100844	obj/kernel.asm	/^c0100844:	01 c0                	add    %eax,%eax$/;"	l
c0100846	obj/kernel.asm	/^c0100846:	01 d0                	add    %edx,%eax$/;"	l
c0100848	obj/kernel.asm	/^c0100848:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010084b	obj/kernel.asm	/^c010084b:	89 c2                	mov    %eax,%edx$/;"	l
c010084d	obj/kernel.asm	/^c010084d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100850	obj/kernel.asm	/^c0100850:	01 d0                	add    %edx,%eax$/;"	l
c0100852	obj/kernel.asm	/^c0100852:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0100856	obj/kernel.asm	/^c0100856:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100859	obj/kernel.asm	/^c0100859:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010085c	obj/kernel.asm	/^c010085c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010085f	obj/kernel.asm	/^c010085f:	eb 13                	jmp    c0100874 <debuginfo_eip+0x32a>$/;"	l
c0100861	obj/kernel.asm	/^c0100861:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100866	obj/kernel.asm	/^c0100866:	e9 12 01 00 00       	jmp    c010097d <debuginfo_eip+0x433>$/;"	l
c010086b	obj/kernel.asm	/^c010086b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010086e	obj/kernel.asm	/^c010086e:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100871	obj/kernel.asm	/^c0100871:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100874	obj/kernel.asm	/^c0100874:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100877	obj/kernel.asm	/^c0100877:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010087a	obj/kernel.asm	/^c010087a:	39 c2                	cmp    %eax,%edx$/;"	l
c010087c	obj/kernel.asm	/^c010087c:	7c 56                	jl     c01008d4 <debuginfo_eip+0x38a>$/;"	l
c010087e	obj/kernel.asm	/^c010087e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100881	obj/kernel.asm	/^c0100881:	89 c2                	mov    %eax,%edx$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	89 d0                	mov    %edx,%eax$/;"	l
c0100885	obj/kernel.asm	/^c0100885:	01 c0                	add    %eax,%eax$/;"	l
c0100887	obj/kernel.asm	/^c0100887:	01 d0                	add    %edx,%eax$/;"	l
c0100889	obj/kernel.asm	/^c0100889:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010088c	obj/kernel.asm	/^c010088c:	89 c2                	mov    %eax,%edx$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100891	obj/kernel.asm	/^c0100891:	01 d0                	add    %edx,%eax$/;"	l
c0100893	obj/kernel.asm	/^c0100893:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100897	obj/kernel.asm	/^c0100897:	3c 84                	cmp    $0x84,%al$/;"	l
c0100899	obj/kernel.asm	/^c0100899:	74 39                	je     c01008d4 <debuginfo_eip+0x38a>$/;"	l
c010089b	obj/kernel.asm	/^c010089b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	89 c2                	mov    %eax,%edx$/;"	l
c01008a0	obj/kernel.asm	/^c01008a0:	89 d0                	mov    %edx,%eax$/;"	l
c01008a2	obj/kernel.asm	/^c01008a2:	01 c0                	add    %eax,%eax$/;"	l
c01008a4	obj/kernel.asm	/^c01008a4:	01 d0                	add    %edx,%eax$/;"	l
c01008a6	obj/kernel.asm	/^c01008a6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008a9	obj/kernel.asm	/^c01008a9:	89 c2                	mov    %eax,%edx$/;"	l
c01008ab	obj/kernel.asm	/^c01008ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008ae	obj/kernel.asm	/^c01008ae:	01 d0                	add    %edx,%eax$/;"	l
c01008b0	obj/kernel.asm	/^c01008b0:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01008b4	obj/kernel.asm	/^c01008b4:	3c 64                	cmp    $0x64,%al$/;"	l
c01008b6	obj/kernel.asm	/^c01008b6:	75 b3                	jne    c010086b <debuginfo_eip+0x321>$/;"	l
c01008b8	obj/kernel.asm	/^c01008b8:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008bb	obj/kernel.asm	/^c01008bb:	89 c2                	mov    %eax,%edx$/;"	l
c01008bd	obj/kernel.asm	/^c01008bd:	89 d0                	mov    %edx,%eax$/;"	l
c01008bf	obj/kernel.asm	/^c01008bf:	01 c0                	add    %eax,%eax$/;"	l
c01008c1	obj/kernel.asm	/^c01008c1:	01 d0                	add    %edx,%eax$/;"	l
c01008c3	obj/kernel.asm	/^c01008c3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008c6	obj/kernel.asm	/^c01008c6:	89 c2                	mov    %eax,%edx$/;"	l
c01008c8	obj/kernel.asm	/^c01008c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008cb	obj/kernel.asm	/^c01008cb:	01 d0                	add    %edx,%eax$/;"	l
c01008cd	obj/kernel.asm	/^c01008cd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01008d0	obj/kernel.asm	/^c01008d0:	85 c0                	test   %eax,%eax$/;"	l
c01008d2	obj/kernel.asm	/^c01008d2:	74 97                	je     c010086b <debuginfo_eip+0x321>$/;"	l
c01008d4	obj/kernel.asm	/^c01008d4:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01008d7	obj/kernel.asm	/^c01008d7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01008da	obj/kernel.asm	/^c01008da:	39 c2                	cmp    %eax,%edx$/;"	l
c01008dc	obj/kernel.asm	/^c01008dc:	7c 46                	jl     c0100924 <debuginfo_eip+0x3da>$/;"	l
c01008de	obj/kernel.asm	/^c01008de:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008e1	obj/kernel.asm	/^c01008e1:	89 c2                	mov    %eax,%edx$/;"	l
c01008e3	obj/kernel.asm	/^c01008e3:	89 d0                	mov    %edx,%eax$/;"	l
c01008e5	obj/kernel.asm	/^c01008e5:	01 c0                	add    %eax,%eax$/;"	l
c01008e7	obj/kernel.asm	/^c01008e7:	01 d0                	add    %edx,%eax$/;"	l
c01008e9	obj/kernel.asm	/^c01008e9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008ec	obj/kernel.asm	/^c01008ec:	89 c2                	mov    %eax,%edx$/;"	l
c01008ee	obj/kernel.asm	/^c01008ee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008f1	obj/kernel.asm	/^c01008f1:	01 d0                	add    %edx,%eax$/;"	l
c01008f3	obj/kernel.asm	/^c01008f3:	8b 10                	mov    (%eax),%edx$/;"	l
c01008f5	obj/kernel.asm	/^c01008f5:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01008f8	obj/kernel.asm	/^c01008f8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01008fb	obj/kernel.asm	/^c01008fb:	29 c1                	sub    %eax,%ecx$/;"	l
c01008fd	obj/kernel.asm	/^c01008fd:	89 c8                	mov    %ecx,%eax$/;"	l
c01008ff	obj/kernel.asm	/^c01008ff:	39 c2                	cmp    %eax,%edx$/;"	l
c0100901	obj/kernel.asm	/^c0100901:	73 21                	jae    c0100924 <debuginfo_eip+0x3da>$/;"	l
c0100903	obj/kernel.asm	/^c0100903:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100906	obj/kernel.asm	/^c0100906:	89 c2                	mov    %eax,%edx$/;"	l
c0100908	obj/kernel.asm	/^c0100908:	89 d0                	mov    %edx,%eax$/;"	l
c010090a	obj/kernel.asm	/^c010090a:	01 c0                	add    %eax,%eax$/;"	l
c010090c	obj/kernel.asm	/^c010090c:	01 d0                	add    %edx,%eax$/;"	l
c010090e	obj/kernel.asm	/^c010090e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100911	obj/kernel.asm	/^c0100911:	89 c2                	mov    %eax,%edx$/;"	l
c0100913	obj/kernel.asm	/^c0100913:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100916	obj/kernel.asm	/^c0100916:	01 d0                	add    %edx,%eax$/;"	l
c0100918	obj/kernel.asm	/^c0100918:	8b 10                	mov    (%eax),%edx$/;"	l
c010091a	obj/kernel.asm	/^c010091a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010091d	obj/kernel.asm	/^c010091d:	01 c2                	add    %eax,%edx$/;"	l
c010091f	obj/kernel.asm	/^c010091f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100922	obj/kernel.asm	/^c0100922:	89 10                	mov    %edx,(%eax)$/;"	l
c0100924	obj/kernel.asm	/^c0100924:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0100927	obj/kernel.asm	/^c0100927:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010092a	obj/kernel.asm	/^c010092a:	39 c2                	cmp    %eax,%edx$/;"	l
c010092c	obj/kernel.asm	/^c010092c:	7d 4a                	jge    c0100978 <debuginfo_eip+0x42e>$/;"	l
c010092e	obj/kernel.asm	/^c010092e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100931	obj/kernel.asm	/^c0100931:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100934	obj/kernel.asm	/^c0100934:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100937	obj/kernel.asm	/^c0100937:	eb 18                	jmp    c0100951 <debuginfo_eip+0x407>$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010093c	obj/kernel.asm	/^c010093c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010093f	obj/kernel.asm	/^c010093f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100942	obj/kernel.asm	/^c0100942:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100945	obj/kernel.asm	/^c0100945:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0100948	obj/kernel.asm	/^c0100948:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010094b	obj/kernel.asm	/^c010094b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010094e	obj/kernel.asm	/^c010094e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100951	obj/kernel.asm	/^c0100951:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100954	obj/kernel.asm	/^c0100954:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100957	obj/kernel.asm	/^c0100957:	39 c2                	cmp    %eax,%edx$/;"	l
c0100959	obj/kernel.asm	/^c0100959:	7d 1d                	jge    c0100978 <debuginfo_eip+0x42e>$/;"	l
c010095b	obj/kernel.asm	/^c010095b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010095e	obj/kernel.asm	/^c010095e:	89 c2                	mov    %eax,%edx$/;"	l
c0100960	obj/kernel.asm	/^c0100960:	89 d0                	mov    %edx,%eax$/;"	l
c0100962	obj/kernel.asm	/^c0100962:	01 c0                	add    %eax,%eax$/;"	l
c0100964	obj/kernel.asm	/^c0100964:	01 d0                	add    %edx,%eax$/;"	l
c0100966	obj/kernel.asm	/^c0100966:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100969	obj/kernel.asm	/^c0100969:	89 c2                	mov    %eax,%edx$/;"	l
c010096b	obj/kernel.asm	/^c010096b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010096e	obj/kernel.asm	/^c010096e:	01 d0                	add    %edx,%eax$/;"	l
c0100970	obj/kernel.asm	/^c0100970:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100974	obj/kernel.asm	/^c0100974:	3c a0                	cmp    $0xa0,%al$/;"	l
c0100976	obj/kernel.asm	/^c0100976:	74 c1                	je     c0100939 <debuginfo_eip+0x3ef>$/;"	l
c0100978	obj/kernel.asm	/^c0100978:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010097d	obj/kernel.asm	/^c010097d:	c9                   	leave  $/;"	l
c010097e	obj/kernel.asm	/^c010097e:	c3                   	ret    $/;"	l
c010097f	obj/kernel.asm	/^c010097f <print_kerninfo>:$/;"	l
c010097f	obj/kernel.asm	/^c010097f:	55                   	push   %ebp$/;"	l
c0100980	obj/kernel.asm	/^c0100980:	89 e5                	mov    %esp,%ebp$/;"	l
c0100982	obj/kernel.asm	/^c0100982:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100985	obj/kernel.asm	/^c0100985:	c7 04 24 16 bd 10 c0 	movl   $0xc010bd16,(%esp)$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	e8 c2 f9 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100991	obj/kernel.asm	/^c0100991:	c7 44 24 04 2a 00 10 	movl   $0xc010002a,0x4(%esp)$/;"	l
c0100998	obj/kernel.asm	/^c0100998:	c0 $/;"	l
c0100999	obj/kernel.asm	/^c0100999:	c7 04 24 2f bd 10 c0 	movl   $0xc010bd2f,(%esp)$/;"	l
c01009a0	obj/kernel.asm	/^c01009a0:	e8 ae f9 ff ff       	call   c0100353 <cprintf>$/;"	l
c01009a5	obj/kernel.asm	/^c01009a5:	c7 44 24 04 54 bc 10 	movl   $0xc010bc54,0x4(%esp)$/;"	l
c01009ac	obj/kernel.asm	/^c01009ac:	c0 $/;"	l
c01009ad	obj/kernel.asm	/^c01009ad:	c7 04 24 47 bd 10 c0 	movl   $0xc010bd47,(%esp)$/;"	l
c01009b4	obj/kernel.asm	/^c01009b4:	e8 9a f9 ff ff       	call   c0100353 <cprintf>$/;"	l
c01009b9	obj/kernel.asm	/^c01009b9:	c7 44 24 04 2a bf 19 	movl   $0xc019bf2a,0x4(%esp)$/;"	l
c01009c0	obj/kernel.asm	/^c01009c0:	c0 $/;"	l
c01009c1	obj/kernel.asm	/^c01009c1:	c7 04 24 5f bd 10 c0 	movl   $0xc010bd5f,(%esp)$/;"	l
c01009c8	obj/kernel.asm	/^c01009c8:	e8 86 f9 ff ff       	call   c0100353 <cprintf>$/;"	l
c01009cd	obj/kernel.asm	/^c01009cd:	c7 44 24 04 b8 f0 19 	movl   $0xc019f0b8,0x4(%esp)$/;"	l
c01009d4	obj/kernel.asm	/^c01009d4:	c0 $/;"	l
c01009d5	obj/kernel.asm	/^c01009d5:	c7 04 24 77 bd 10 c0 	movl   $0xc010bd77,(%esp)$/;"	l
c01009dc	obj/kernel.asm	/^c01009dc:	e8 72 f9 ff ff       	call   c0100353 <cprintf>$/;"	l
c01009e1	obj/kernel.asm	/^c01009e1:	b8 b8 f0 19 c0       	mov    $0xc019f0b8,%eax$/;"	l
c01009e6	obj/kernel.asm	/^c01009e6:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c01009ec	obj/kernel.asm	/^c01009ec:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c01009f1	obj/kernel.asm	/^c01009f1:	29 c2                	sub    %eax,%edx$/;"	l
c01009f3	obj/kernel.asm	/^c01009f3:	89 d0                	mov    %edx,%eax$/;"	l
c01009f5	obj/kernel.asm	/^c01009f5:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c01009fb	obj/kernel.asm	/^c01009fb:	85 c0                	test   %eax,%eax$/;"	l
c01009fd	obj/kernel.asm	/^c01009fd:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100a00	obj/kernel.asm	/^c0100a00:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100a03	obj/kernel.asm	/^c0100a03:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100a07	obj/kernel.asm	/^c0100a07:	c7 04 24 90 bd 10 c0 	movl   $0xc010bd90,(%esp)$/;"	l
c0100a0e	obj/kernel.asm	/^c0100a0e:	e8 40 f9 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100a13	obj/kernel.asm	/^c0100a13:	c9                   	leave  $/;"	l
c0100a14	obj/kernel.asm	/^c0100a14:	c3                   	ret    $/;"	l
c0100a15	obj/kernel.asm	/^c0100a15 <print_debuginfo>:$/;"	l
c0100a15	obj/kernel.asm	/^c0100a15:	55                   	push   %ebp$/;"	l
c0100a16	obj/kernel.asm	/^c0100a16:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a18	obj/kernel.asm	/^c0100a18:	81 ec 48 01 00 00    	sub    $0x148,%esp$/;"	l
c0100a1e	obj/kernel.asm	/^c0100a1e:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100a21	obj/kernel.asm	/^c0100a21:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100a25	obj/kernel.asm	/^c0100a25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100a28	obj/kernel.asm	/^c0100a28:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100a2b	obj/kernel.asm	/^c0100a2b:	e8 1a fb ff ff       	call   c010054a <debuginfo_eip>$/;"	l
c0100a30	obj/kernel.asm	/^c0100a30:	85 c0                	test   %eax,%eax$/;"	l
c0100a32	obj/kernel.asm	/^c0100a32:	74 15                	je     c0100a49 <print_debuginfo+0x34>$/;"	l
c0100a34	obj/kernel.asm	/^c0100a34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100a37	obj/kernel.asm	/^c0100a37:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100a3b	obj/kernel.asm	/^c0100a3b:	c7 04 24 ba bd 10 c0 	movl   $0xc010bdba,(%esp)$/;"	l
c0100a42	obj/kernel.asm	/^c0100a42:	e8 0c f9 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100a47	obj/kernel.asm	/^c0100a47:	eb 6d                	jmp    c0100ab6 <print_debuginfo+0xa1>$/;"	l
c0100a49	obj/kernel.asm	/^c0100a49:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100a50	obj/kernel.asm	/^c0100a50:	eb 1c                	jmp    c0100a6e <print_debuginfo+0x59>$/;"	l
c0100a52	obj/kernel.asm	/^c0100a52:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100a55	obj/kernel.asm	/^c0100a55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a58	obj/kernel.asm	/^c0100a58:	01 d0                	add    %edx,%eax$/;"	l
c0100a5a	obj/kernel.asm	/^c0100a5a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100a5d	obj/kernel.asm	/^c0100a5d:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100a63	obj/kernel.asm	/^c0100a63:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100a66	obj/kernel.asm	/^c0100a66:	01 ca                	add    %ecx,%edx$/;"	l
c0100a68	obj/kernel.asm	/^c0100a68:	88 02                	mov    %al,(%edx)$/;"	l
c0100a6a	obj/kernel.asm	/^c0100a6a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100a6e	obj/kernel.asm	/^c0100a6e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100a71	obj/kernel.asm	/^c0100a71:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100a74	obj/kernel.asm	/^c0100a74:	7f dc                	jg     c0100a52 <print_debuginfo+0x3d>$/;"	l
c0100a76	obj/kernel.asm	/^c0100a76:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100a7c	obj/kernel.asm	/^c0100a7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a7f	obj/kernel.asm	/^c0100a7f:	01 d0                	add    %edx,%eax$/;"	l
c0100a81	obj/kernel.asm	/^c0100a81:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100a84	obj/kernel.asm	/^c0100a84:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a87	obj/kernel.asm	/^c0100a87:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100a8a	obj/kernel.asm	/^c0100a8a:	89 d1                	mov    %edx,%ecx$/;"	l
c0100a8c	obj/kernel.asm	/^c0100a8c:	29 c1                	sub    %eax,%ecx$/;"	l
c0100a8e	obj/kernel.asm	/^c0100a8e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100a91	obj/kernel.asm	/^c0100a91:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100a94	obj/kernel.asm	/^c0100a94:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0100a98	obj/kernel.asm	/^c0100a98:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100a9e	obj/kernel.asm	/^c0100a9e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0100aa2	obj/kernel.asm	/^c0100aa2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100aa6	obj/kernel.asm	/^c0100aa6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100aaa	obj/kernel.asm	/^c0100aaa:	c7 04 24 d6 bd 10 c0 	movl   $0xc010bdd6,(%esp)$/;"	l
c0100ab1	obj/kernel.asm	/^c0100ab1:	e8 9d f8 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100ab6	obj/kernel.asm	/^c0100ab6:	c9                   	leave  $/;"	l
c0100ab7	obj/kernel.asm	/^c0100ab7:	c3                   	ret    $/;"	l
c0100ab8	obj/kernel.asm	/^c0100ab8 <read_eip>:$/;"	l
c0100ab8	obj/kernel.asm	/^c0100ab8:	55                   	push   %ebp$/;"	l
c0100ab9	obj/kernel.asm	/^c0100ab9:	89 e5                	mov    %esp,%ebp$/;"	l
c0100abb	obj/kernel.asm	/^c0100abb:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100abe	obj/kernel.asm	/^c0100abe:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100ac1	obj/kernel.asm	/^c0100ac1:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100ac4	obj/kernel.asm	/^c0100ac4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7:	c9                   	leave  $/;"	l
c0100ac8	obj/kernel.asm	/^c0100ac8:	c3                   	ret    $/;"	l
c0100ac9	obj/kernel.asm	/^c0100ac9 <print_stackframe>:$/;"	l
c0100ac9	obj/kernel.asm	/^c0100ac9:	55                   	push   %ebp$/;"	l
c0100aca	obj/kernel.asm	/^c0100aca:	89 e5                	mov    %esp,%ebp$/;"	l
c0100acc	obj/kernel.asm	/^c0100acc:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100acf	obj/kernel.asm	/^c0100acf:	89 e8                	mov    %ebp,%eax$/;"	l
c0100ad1	obj/kernel.asm	/^c0100ad1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100ad4	obj/kernel.asm	/^c0100ad4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100ad7	obj/kernel.asm	/^c0100ad7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100ada	obj/kernel.asm	/^c0100ada:	e8 d9 ff ff ff       	call   c0100ab8 <read_eip>$/;"	l
c0100adf	obj/kernel.asm	/^c0100adf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100ae2	obj/kernel.asm	/^c0100ae2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0100ae9	obj/kernel.asm	/^c0100ae9:	e9 88 00 00 00       	jmp    c0100b76 <print_stackframe+0xad>$/;"	l
c0100aee	obj/kernel.asm	/^c0100aee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100af1	obj/kernel.asm	/^c0100af1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100af5	obj/kernel.asm	/^c0100af5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100af8	obj/kernel.asm	/^c0100af8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100afc	obj/kernel.asm	/^c0100afc:	c7 04 24 e8 bd 10 c0 	movl   $0xc010bde8,(%esp)$/;"	l
c0100b03	obj/kernel.asm	/^c0100b03:	e8 4b f8 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100b08	obj/kernel.asm	/^c0100b08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b0b	obj/kernel.asm	/^c0100b0b:	83 c0 08             	add    $0x8,%eax$/;"	l
c0100b0e	obj/kernel.asm	/^c0100b0e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100b11	obj/kernel.asm	/^c0100b11:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0100b18	obj/kernel.asm	/^c0100b18:	eb 25                	jmp    c0100b3f <print_stackframe+0x76>$/;"	l
c0100b1a	obj/kernel.asm	/^c0100b1a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100b1d	obj/kernel.asm	/^c0100b1d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100b24	obj/kernel.asm	/^c0100b24:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100b27	obj/kernel.asm	/^c0100b27:	01 d0                	add    %edx,%eax$/;"	l
c0100b29	obj/kernel.asm	/^c0100b29:	8b 00                	mov    (%eax),%eax$/;"	l
c0100b2b	obj/kernel.asm	/^c0100b2b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b2f	obj/kernel.asm	/^c0100b2f:	c7 04 24 06 be 10 c0 	movl   $0xc010be06,(%esp)$/;"	l
c0100b36	obj/kernel.asm	/^c0100b36:	e8 18 f8 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100b3b	obj/kernel.asm	/^c0100b3b:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
c0100b3f	obj/kernel.asm	/^c0100b3f:	83 7d e8 03          	cmpl   $0x3,-0x18(%ebp)$/;"	l
c0100b43	obj/kernel.asm	/^c0100b43:	7e d5                	jle    c0100b1a <print_stackframe+0x51>$/;"	l
c0100b45	obj/kernel.asm	/^c0100b45:	c7 04 24 0e be 10 c0 	movl   $0xc010be0e,(%esp)$/;"	l
c0100b4c	obj/kernel.asm	/^c0100b4c:	e8 02 f8 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100b51	obj/kernel.asm	/^c0100b51:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100b54	obj/kernel.asm	/^c0100b54:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100b57	obj/kernel.asm	/^c0100b57:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100b5a	obj/kernel.asm	/^c0100b5a:	e8 b6 fe ff ff       	call   c0100a15 <print_debuginfo>$/;"	l
c0100b5f	obj/kernel.asm	/^c0100b5f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b62	obj/kernel.asm	/^c0100b62:	83 c0 10             	add    $0x10,%eax$/;"	l
c0100b65	obj/kernel.asm	/^c0100b65:	8b 00                	mov    (%eax),%eax$/;"	l
c0100b67	obj/kernel.asm	/^c0100b67:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100b6a	obj/kernel.asm	/^c0100b6a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b6d	obj/kernel.asm	/^c0100b6d:	8b 00                	mov    (%eax),%eax$/;"	l
c0100b6f	obj/kernel.asm	/^c0100b6f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100b72	obj/kernel.asm	/^c0100b72:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0100b76	obj/kernel.asm	/^c0100b76:	83 7d ec 13          	cmpl   $0x13,-0x14(%ebp)$/;"	l
c0100b7a	obj/kernel.asm	/^c0100b7a:	7f 0a                	jg     c0100b86 <print_stackframe+0xbd>$/;"	l
c0100b7c	obj/kernel.asm	/^c0100b7c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100b80	obj/kernel.asm	/^c0100b80:	0f 85 68 ff ff ff    	jne    c0100aee <print_stackframe+0x25>$/;"	l
c0100b86	obj/kernel.asm	/^c0100b86:	c9                   	leave  $/;"	l
c0100b87	obj/kernel.asm	/^c0100b87:	c3                   	ret    $/;"	l
c0100b88	obj/kernel.asm	/^c0100b88 <parse>:$/;"	l
c0100b88	obj/kernel.asm	/^c0100b88:	55                   	push   %ebp$/;"	l
c0100b89	obj/kernel.asm	/^c0100b89:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b8b	obj/kernel.asm	/^c0100b8b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100b8e	obj/kernel.asm	/^c0100b8e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b95	obj/kernel.asm	/^c0100b95:	eb 0c                	jmp    c0100ba3 <parse+0x1b>$/;"	l
c0100b97	obj/kernel.asm	/^c0100b97:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b9a	obj/kernel.asm	/^c0100b9a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100b9d	obj/kernel.asm	/^c0100b9d:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100ba0	obj/kernel.asm	/^c0100ba0:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100ba3	obj/kernel.asm	/^c0100ba3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ba6	obj/kernel.asm	/^c0100ba6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100ba9	obj/kernel.asm	/^c0100ba9:	84 c0                	test   %al,%al$/;"	l
c0100bab	obj/kernel.asm	/^c0100bab:	74 1d                	je     c0100bca <parse+0x42>$/;"	l
c0100bad	obj/kernel.asm	/^c0100bad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bb0	obj/kernel.asm	/^c0100bb0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bb3	obj/kernel.asm	/^c0100bb3:	0f be c0             	movsbl %al,%eax$/;"	l
c0100bb6	obj/kernel.asm	/^c0100bb6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100bba	obj/kernel.asm	/^c0100bba:	c7 04 24 90 be 10 c0 	movl   $0xc010be90,(%esp)$/;"	l
c0100bc1	obj/kernel.asm	/^c0100bc1:	e8 46 ad 00 00       	call   c010b90c <strchr>$/;"	l
c0100bc6	obj/kernel.asm	/^c0100bc6:	85 c0                	test   %eax,%eax$/;"	l
c0100bc8	obj/kernel.asm	/^c0100bc8:	75 cd                	jne    c0100b97 <parse+0xf>$/;"	l
c0100bca	obj/kernel.asm	/^c0100bca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bcd	obj/kernel.asm	/^c0100bcd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bd0	obj/kernel.asm	/^c0100bd0:	84 c0                	test   %al,%al$/;"	l
c0100bd2	obj/kernel.asm	/^c0100bd2:	75 02                	jne    c0100bd6 <parse+0x4e>$/;"	l
c0100bd4	obj/kernel.asm	/^c0100bd4:	eb 67                	jmp    c0100c3d <parse+0xb5>$/;"	l
c0100bd6	obj/kernel.asm	/^c0100bd6:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100bda	obj/kernel.asm	/^c0100bda:	75 14                	jne    c0100bf0 <parse+0x68>$/;"	l
c0100bdc	obj/kernel.asm	/^c0100bdc:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0100be3	obj/kernel.asm	/^c0100be3:	00 $/;"	l
c0100be4	obj/kernel.asm	/^c0100be4:	c7 04 24 95 be 10 c0 	movl   $0xc010be95,(%esp)$/;"	l
c0100beb	obj/kernel.asm	/^c0100beb:	e8 63 f7 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100bf0	obj/kernel.asm	/^c0100bf0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bf3	obj/kernel.asm	/^c0100bf3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100bf6	obj/kernel.asm	/^c0100bf6:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100bf9	obj/kernel.asm	/^c0100bf9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100c00	obj/kernel.asm	/^c0100c00:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100c03	obj/kernel.asm	/^c0100c03:	01 c2                	add    %eax,%edx$/;"	l
c0100c05	obj/kernel.asm	/^c0100c05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c08	obj/kernel.asm	/^c0100c08:	89 02                	mov    %eax,(%edx)$/;"	l
c0100c0a	obj/kernel.asm	/^c0100c0a:	eb 04                	jmp    c0100c10 <parse+0x88>$/;"	l
c0100c0c	obj/kernel.asm	/^c0100c0c:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100c10	obj/kernel.asm	/^c0100c10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c13	obj/kernel.asm	/^c0100c13:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c16	obj/kernel.asm	/^c0100c16:	84 c0                	test   %al,%al$/;"	l
c0100c18	obj/kernel.asm	/^c0100c18:	74 1d                	je     c0100c37 <parse+0xaf>$/;"	l
c0100c1a	obj/kernel.asm	/^c0100c1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c1d	obj/kernel.asm	/^c0100c1d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c20	obj/kernel.asm	/^c0100c20:	0f be c0             	movsbl %al,%eax$/;"	l
c0100c23	obj/kernel.asm	/^c0100c23:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100c27	obj/kernel.asm	/^c0100c27:	c7 04 24 90 be 10 c0 	movl   $0xc010be90,(%esp)$/;"	l
c0100c2e	obj/kernel.asm	/^c0100c2e:	e8 d9 ac 00 00       	call   c010b90c <strchr>$/;"	l
c0100c33	obj/kernel.asm	/^c0100c33:	85 c0                	test   %eax,%eax$/;"	l
c0100c35	obj/kernel.asm	/^c0100c35:	74 d5                	je     c0100c0c <parse+0x84>$/;"	l
c0100c37	obj/kernel.asm	/^c0100c37:	90                   	nop$/;"	l
c0100c38	obj/kernel.asm	/^c0100c38:	e9 66 ff ff ff       	jmp    c0100ba3 <parse+0x1b>$/;"	l
c0100c3d	obj/kernel.asm	/^c0100c3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c40	obj/kernel.asm	/^c0100c40:	c9                   	leave  $/;"	l
c0100c41	obj/kernel.asm	/^c0100c41:	c3                   	ret    $/;"	l
c0100c42	obj/kernel.asm	/^c0100c42 <runcmd>:$/;"	l
c0100c42	obj/kernel.asm	/^c0100c42:	55                   	push   %ebp$/;"	l
c0100c43	obj/kernel.asm	/^c0100c43:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c45	obj/kernel.asm	/^c0100c45:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0100c48	obj/kernel.asm	/^c0100c48:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100c4b	obj/kernel.asm	/^c0100c4b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100c4f	obj/kernel.asm	/^c0100c4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c52	obj/kernel.asm	/^c0100c52:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100c55	obj/kernel.asm	/^c0100c55:	e8 2e ff ff ff       	call   c0100b88 <parse>$/;"	l
c0100c5a	obj/kernel.asm	/^c0100c5a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100c5d	obj/kernel.asm	/^c0100c5d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100c61	obj/kernel.asm	/^c0100c61:	75 0a                	jne    c0100c6d <runcmd+0x2b>$/;"	l
c0100c63	obj/kernel.asm	/^c0100c63:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100c68	obj/kernel.asm	/^c0100c68:	e9 85 00 00 00       	jmp    c0100cf2 <runcmd+0xb0>$/;"	l
c0100c6d	obj/kernel.asm	/^c0100c6d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c74	obj/kernel.asm	/^c0100c74:	eb 5c                	jmp    c0100cd2 <runcmd+0x90>$/;"	l
c0100c76	obj/kernel.asm	/^c0100c76:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100c79	obj/kernel.asm	/^c0100c79:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c7c	obj/kernel.asm	/^c0100c7c:	89 d0                	mov    %edx,%eax$/;"	l
c0100c7e	obj/kernel.asm	/^c0100c7e:	01 c0                	add    %eax,%eax$/;"	l
c0100c80	obj/kernel.asm	/^c0100c80:	01 d0                	add    %edx,%eax$/;"	l
c0100c82	obj/kernel.asm	/^c0100c82:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100c85	obj/kernel.asm	/^c0100c85:	05 20 a0 12 c0       	add    $0xc012a020,%eax$/;"	l
c0100c8a	obj/kernel.asm	/^c0100c8a:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c8c	obj/kernel.asm	/^c0100c8c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0100c90	obj/kernel.asm	/^c0100c90:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100c93	obj/kernel.asm	/^c0100c93:	e8 d5 ab 00 00       	call   c010b86d <strcmp>$/;"	l
c0100c98	obj/kernel.asm	/^c0100c98:	85 c0                	test   %eax,%eax$/;"	l
c0100c9a	obj/kernel.asm	/^c0100c9a:	75 32                	jne    c0100cce <runcmd+0x8c>$/;"	l
c0100c9c	obj/kernel.asm	/^c0100c9c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c9f	obj/kernel.asm	/^c0100c9f:	89 d0                	mov    %edx,%eax$/;"	l
c0100ca1	obj/kernel.asm	/^c0100ca1:	01 c0                	add    %eax,%eax$/;"	l
c0100ca3	obj/kernel.asm	/^c0100ca3:	01 d0                	add    %edx,%eax$/;"	l
c0100ca5	obj/kernel.asm	/^c0100ca5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100ca8	obj/kernel.asm	/^c0100ca8:	05 20 a0 12 c0       	add    $0xc012a020,%eax$/;"	l
c0100cad	obj/kernel.asm	/^c0100cad:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100cb0	obj/kernel.asm	/^c0100cb0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100cb3	obj/kernel.asm	/^c0100cb3:	8d 4a ff             	lea    -0x1(%edx),%ecx$/;"	l
c0100cb6	obj/kernel.asm	/^c0100cb6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0100cb9	obj/kernel.asm	/^c0100cb9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100cbd	obj/kernel.asm	/^c0100cbd:	8d 55 b0             	lea    -0x50(%ebp),%edx$/;"	l
c0100cc0	obj/kernel.asm	/^c0100cc0:	83 c2 04             	add    $0x4,%edx$/;"	l
c0100cc3	obj/kernel.asm	/^c0100cc3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0100cc7	obj/kernel.asm	/^c0100cc7:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
c0100cca	obj/kernel.asm	/^c0100cca:	ff d0                	call   *%eax$/;"	l
c0100ccc	obj/kernel.asm	/^c0100ccc:	eb 24                	jmp    c0100cf2 <runcmd+0xb0>$/;"	l
c0100cce	obj/kernel.asm	/^c0100cce:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100cd2	obj/kernel.asm	/^c0100cd2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100cd5	obj/kernel.asm	/^c0100cd5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100cd8	obj/kernel.asm	/^c0100cd8:	76 9c                	jbe    c0100c76 <runcmd+0x34>$/;"	l
c0100cda	obj/kernel.asm	/^c0100cda:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100cdd	obj/kernel.asm	/^c0100cdd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100ce1	obj/kernel.asm	/^c0100ce1:	c7 04 24 b3 be 10 c0 	movl   $0xc010beb3,(%esp)$/;"	l
c0100ce8	obj/kernel.asm	/^c0100ce8:	e8 66 f6 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100ced	obj/kernel.asm	/^c0100ced:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100cf2	obj/kernel.asm	/^c0100cf2:	c9                   	leave  $/;"	l
c0100cf3	obj/kernel.asm	/^c0100cf3:	c3                   	ret    $/;"	l
c0100cf4	obj/kernel.asm	/^c0100cf4 <kmonitor>:$/;"	l
c0100cf4	obj/kernel.asm	/^c0100cf4:	55                   	push   %ebp$/;"	l
c0100cf5	obj/kernel.asm	/^c0100cf5:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cf7	obj/kernel.asm	/^c0100cf7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100cfa	obj/kernel.asm	/^c0100cfa:	c7 04 24 cc be 10 c0 	movl   $0xc010becc,(%esp)$/;"	l
c0100d01	obj/kernel.asm	/^c0100d01:	e8 4d f6 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100d06	obj/kernel.asm	/^c0100d06:	c7 04 24 f4 be 10 c0 	movl   $0xc010bef4,(%esp)$/;"	l
c0100d0d	obj/kernel.asm	/^c0100d0d:	e8 41 f6 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100d12	obj/kernel.asm	/^c0100d12:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100d16	obj/kernel.asm	/^c0100d16:	74 0b                	je     c0100d23 <kmonitor+0x2f>$/;"	l
c0100d18	obj/kernel.asm	/^c0100d18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d1b	obj/kernel.asm	/^c0100d1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100d1e	obj/kernel.asm	/^c0100d1e:	e8 a5 16 00 00       	call   c01023c8 <print_trapframe>$/;"	l
c0100d23	obj/kernel.asm	/^c0100d23:	c7 04 24 19 bf 10 c0 	movl   $0xc010bf19,(%esp)$/;"	l
c0100d2a	obj/kernel.asm	/^c0100d2a:	e8 1b f5 ff ff       	call   c010024a <readline>$/;"	l
c0100d2f	obj/kernel.asm	/^c0100d2f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100d32	obj/kernel.asm	/^c0100d32:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100d36	obj/kernel.asm	/^c0100d36:	74 18                	je     c0100d50 <kmonitor+0x5c>$/;"	l
c0100d38	obj/kernel.asm	/^c0100d38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d3b	obj/kernel.asm	/^c0100d3b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100d3f	obj/kernel.asm	/^c0100d3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d42	obj/kernel.asm	/^c0100d42:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100d45	obj/kernel.asm	/^c0100d45:	e8 f8 fe ff ff       	call   c0100c42 <runcmd>$/;"	l
c0100d4a	obj/kernel.asm	/^c0100d4a:	85 c0                	test   %eax,%eax$/;"	l
c0100d4c	obj/kernel.asm	/^c0100d4c:	79 02                	jns    c0100d50 <kmonitor+0x5c>$/;"	l
c0100d4e	obj/kernel.asm	/^c0100d4e:	eb 02                	jmp    c0100d52 <kmonitor+0x5e>$/;"	l
c0100d50	obj/kernel.asm	/^c0100d50:	eb d1                	jmp    c0100d23 <kmonitor+0x2f>$/;"	l
c0100d52	obj/kernel.asm	/^c0100d52:	c9                   	leave  $/;"	l
c0100d53	obj/kernel.asm	/^c0100d53:	c3                   	ret    $/;"	l
c0100d54	obj/kernel.asm	/^c0100d54 <mon_help>:$/;"	l
c0100d54	obj/kernel.asm	/^c0100d54:	55                   	push   %ebp$/;"	l
c0100d55	obj/kernel.asm	/^c0100d55:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d57	obj/kernel.asm	/^c0100d57:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100d5a	obj/kernel.asm	/^c0100d5a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100d61	obj/kernel.asm	/^c0100d61:	eb 3f                	jmp    c0100da2 <mon_help+0x4e>$/;"	l
c0100d63	obj/kernel.asm	/^c0100d63:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d66	obj/kernel.asm	/^c0100d66:	89 d0                	mov    %edx,%eax$/;"	l
c0100d68	obj/kernel.asm	/^c0100d68:	01 c0                	add    %eax,%eax$/;"	l
c0100d6a	obj/kernel.asm	/^c0100d6a:	01 d0                	add    %edx,%eax$/;"	l
c0100d6c	obj/kernel.asm	/^c0100d6c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	05 20 a0 12 c0       	add    $0xc012a020,%eax$/;"	l
c0100d74	obj/kernel.asm	/^c0100d74:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100d77	obj/kernel.asm	/^c0100d77:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d7a	obj/kernel.asm	/^c0100d7a:	89 d0                	mov    %edx,%eax$/;"	l
c0100d7c	obj/kernel.asm	/^c0100d7c:	01 c0                	add    %eax,%eax$/;"	l
c0100d7e	obj/kernel.asm	/^c0100d7e:	01 d0                	add    %edx,%eax$/;"	l
c0100d80	obj/kernel.asm	/^c0100d80:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d83	obj/kernel.asm	/^c0100d83:	05 20 a0 12 c0       	add    $0xc012a020,%eax$/;"	l
c0100d88	obj/kernel.asm	/^c0100d88:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d8a	obj/kernel.asm	/^c0100d8a:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0100d8e	obj/kernel.asm	/^c0100d8e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100d92	obj/kernel.asm	/^c0100d92:	c7 04 24 1d bf 10 c0 	movl   $0xc010bf1d,(%esp)$/;"	l
c0100d99	obj/kernel.asm	/^c0100d99:	e8 b5 f5 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100d9e	obj/kernel.asm	/^c0100d9e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100da2	obj/kernel.asm	/^c0100da2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100da5	obj/kernel.asm	/^c0100da5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100da8	obj/kernel.asm	/^c0100da8:	76 b9                	jbe    c0100d63 <mon_help+0xf>$/;"	l
c0100daa	obj/kernel.asm	/^c0100daa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100daf	obj/kernel.asm	/^c0100daf:	c9                   	leave  $/;"	l
c0100db0	obj/kernel.asm	/^c0100db0:	c3                   	ret    $/;"	l
c0100db1	obj/kernel.asm	/^c0100db1 <mon_kerninfo>:$/;"	l
c0100db1	obj/kernel.asm	/^c0100db1:	55                   	push   %ebp$/;"	l
c0100db2	obj/kernel.asm	/^c0100db2:	89 e5                	mov    %esp,%ebp$/;"	l
c0100db4	obj/kernel.asm	/^c0100db4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100db7	obj/kernel.asm	/^c0100db7:	e8 c3 fb ff ff       	call   c010097f <print_kerninfo>$/;"	l
c0100dbc	obj/kernel.asm	/^c0100dbc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100dc1	obj/kernel.asm	/^c0100dc1:	c9                   	leave  $/;"	l
c0100dc2	obj/kernel.asm	/^c0100dc2:	c3                   	ret    $/;"	l
c0100dc3	obj/kernel.asm	/^c0100dc3 <mon_backtrace>:$/;"	l
c0100dc3	obj/kernel.asm	/^c0100dc3:	55                   	push   %ebp$/;"	l
c0100dc4	obj/kernel.asm	/^c0100dc4:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dc6	obj/kernel.asm	/^c0100dc6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100dc9	obj/kernel.asm	/^c0100dc9:	e8 fb fc ff ff       	call   c0100ac9 <print_stackframe>$/;"	l
c0100dce	obj/kernel.asm	/^c0100dce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100dd3	obj/kernel.asm	/^c0100dd3:	c9                   	leave  $/;"	l
c0100dd4	obj/kernel.asm	/^c0100dd4:	c3                   	ret    $/;"	l
c0100dd5	obj/kernel.asm	/^c0100dd5 <__panic>:$/;"	l
c0100dd5	obj/kernel.asm	/^c0100dd5:	55                   	push   %ebp$/;"	l
c0100dd6	obj/kernel.asm	/^c0100dd6:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dd8	obj/kernel.asm	/^c0100dd8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100ddb	obj/kernel.asm	/^c0100ddb:	a1 60 c3 19 c0       	mov    0xc019c360,%eax$/;"	l
c0100de0	obj/kernel.asm	/^c0100de0:	85 c0                	test   %eax,%eax$/;"	l
c0100de2	obj/kernel.asm	/^c0100de2:	74 02                	je     c0100de6 <__panic+0x11>$/;"	l
c0100de4	obj/kernel.asm	/^c0100de4:	eb 48                	jmp    c0100e2e <__panic+0x59>$/;"	l
c0100de6	obj/kernel.asm	/^c0100de6:	c7 05 60 c3 19 c0 01 	movl   $0x1,0xc019c360$/;"	l
c0100ded	obj/kernel.asm	/^c0100ded:	00 00 00 $/;"	l
c0100df0	obj/kernel.asm	/^c0100df0:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100df3	obj/kernel.asm	/^c0100df3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100df6	obj/kernel.asm	/^c0100df6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100df9	obj/kernel.asm	/^c0100df9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100dfd	obj/kernel.asm	/^c0100dfd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e00	obj/kernel.asm	/^c0100e00:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e04	obj/kernel.asm	/^c0100e04:	c7 04 24 26 bf 10 c0 	movl   $0xc010bf26,(%esp)$/;"	l
c0100e0b	obj/kernel.asm	/^c0100e0b:	e8 43 f5 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100e10	obj/kernel.asm	/^c0100e10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e13	obj/kernel.asm	/^c0100e13:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e17	obj/kernel.asm	/^c0100e17:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100e1a	obj/kernel.asm	/^c0100e1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100e1d	obj/kernel.asm	/^c0100e1d:	e8 fe f4 ff ff       	call   c0100320 <vcprintf>$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	c7 04 24 42 bf 10 c0 	movl   $0xc010bf42,(%esp)$/;"	l
c0100e29	obj/kernel.asm	/^c0100e29:	e8 25 f5 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100e2e	obj/kernel.asm	/^c0100e2e:	e8 fa 11 00 00       	call   c010202d <intr_disable>$/;"	l
c0100e33	obj/kernel.asm	/^c0100e33:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100e3a	obj/kernel.asm	/^c0100e3a:	e8 b5 fe ff ff       	call   c0100cf4 <kmonitor>$/;"	l
c0100e3f	obj/kernel.asm	/^c0100e3f:	eb f2                	jmp    c0100e33 <__panic+0x5e>$/;"	l
c0100e41	obj/kernel.asm	/^c0100e41 <__warn>:$/;"	l
c0100e41	obj/kernel.asm	/^c0100e41:	55                   	push   %ebp$/;"	l
c0100e42	obj/kernel.asm	/^c0100e42:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e44	obj/kernel.asm	/^c0100e44:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100e47	obj/kernel.asm	/^c0100e47:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100e4a	obj/kernel.asm	/^c0100e4a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100e4d	obj/kernel.asm	/^c0100e4d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e50	obj/kernel.asm	/^c0100e50:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100e54	obj/kernel.asm	/^c0100e54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e57	obj/kernel.asm	/^c0100e57:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e5b	obj/kernel.asm	/^c0100e5b:	c7 04 24 44 bf 10 c0 	movl   $0xc010bf44,(%esp)$/;"	l
c0100e62	obj/kernel.asm	/^c0100e62:	e8 ec f4 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100e67	obj/kernel.asm	/^c0100e67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e6a	obj/kernel.asm	/^c0100e6a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e6e	obj/kernel.asm	/^c0100e6e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100e71	obj/kernel.asm	/^c0100e71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100e74	obj/kernel.asm	/^c0100e74:	e8 a7 f4 ff ff       	call   c0100320 <vcprintf>$/;"	l
c0100e79	obj/kernel.asm	/^c0100e79:	c7 04 24 42 bf 10 c0 	movl   $0xc010bf42,(%esp)$/;"	l
c0100e80	obj/kernel.asm	/^c0100e80:	e8 ce f4 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100e85	obj/kernel.asm	/^c0100e85:	c9                   	leave  $/;"	l
c0100e86	obj/kernel.asm	/^c0100e86:	c3                   	ret    $/;"	l
c0100e87	obj/kernel.asm	/^c0100e87 <is_kernel_panic>:$/;"	l
c0100e87	obj/kernel.asm	/^c0100e87:	55                   	push   %ebp$/;"	l
c0100e88	obj/kernel.asm	/^c0100e88:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e8a	obj/kernel.asm	/^c0100e8a:	a1 60 c3 19 c0       	mov    0xc019c360,%eax$/;"	l
c0100e8f	obj/kernel.asm	/^c0100e8f:	5d                   	pop    %ebp$/;"	l
c0100e90	obj/kernel.asm	/^c0100e90:	c3                   	ret    $/;"	l
c0100e91	obj/kernel.asm	/^c0100e91 <clock_init>:$/;"	l
c0100e91	obj/kernel.asm	/^c0100e91:	55                   	push   %ebp$/;"	l
c0100e92	obj/kernel.asm	/^c0100e92:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e94	obj/kernel.asm	/^c0100e94:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100e97	obj/kernel.asm	/^c0100e97:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c0100e9d	obj/kernel.asm	/^c0100e9d:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c0100ea1	obj/kernel.asm	/^c0100ea1:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0100ea5	obj/kernel.asm	/^c0100ea5:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0100ea9	obj/kernel.asm	/^c0100ea9:	ee                   	out    %al,(%dx)$/;"	l
c0100eaa	obj/kernel.asm	/^c0100eaa:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c0100eb0	obj/kernel.asm	/^c0100eb0:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c0100eb4	obj/kernel.asm	/^c0100eb4:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0100eb8	obj/kernel.asm	/^c0100eb8:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0100ebc	obj/kernel.asm	/^c0100ebc:	ee                   	out    %al,(%dx)$/;"	l
c0100ebd	obj/kernel.asm	/^c0100ebd:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c0100ec3	obj/kernel.asm	/^c0100ec3:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c0100ec7	obj/kernel.asm	/^c0100ec7:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0100ecb	obj/kernel.asm	/^c0100ecb:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0100ecf	obj/kernel.asm	/^c0100ecf:	ee                   	out    %al,(%dx)$/;"	l
c0100ed0	obj/kernel.asm	/^c0100ed0:	c7 05 b4 ef 19 c0 00 	movl   $0x0,0xc019efb4$/;"	l
c0100ed7	obj/kernel.asm	/^c0100ed7:	00 00 00 $/;"	l
c0100eda	obj/kernel.asm	/^c0100eda:	c7 04 24 62 bf 10 c0 	movl   $0xc010bf62,(%esp)$/;"	l
c0100ee1	obj/kernel.asm	/^c0100ee1:	e8 6d f4 ff ff       	call   c0100353 <cprintf>$/;"	l
c0100ee6	obj/kernel.asm	/^c0100ee6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100eed	obj/kernel.asm	/^c0100eed:	e8 99 11 00 00       	call   c010208b <pic_enable>$/;"	l
c0100ef2	obj/kernel.asm	/^c0100ef2:	c9                   	leave  $/;"	l
c0100ef3	obj/kernel.asm	/^c0100ef3:	c3                   	ret    $/;"	l
c0100ef4	obj/kernel.asm	/^c0100ef4 <__intr_save>:$/;"	l
c0100ef4	obj/kernel.asm	/^c0100ef4:	55                   	push   %ebp$/;"	l
c0100ef5	obj/kernel.asm	/^c0100ef5:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ef7	obj/kernel.asm	/^c0100ef7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100efa	obj/kernel.asm	/^c0100efa:	9c                   	pushf  $/;"	l
c0100efb	obj/kernel.asm	/^c0100efb:	58                   	pop    %eax$/;"	l
c0100efc	obj/kernel.asm	/^c0100efc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100eff	obj/kernel.asm	/^c0100eff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100f02	obj/kernel.asm	/^c0100f02:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0100f07	obj/kernel.asm	/^c0100f07:	85 c0                	test   %eax,%eax$/;"	l
c0100f09	obj/kernel.asm	/^c0100f09:	74 0c                	je     c0100f17 <__intr_save+0x23>$/;"	l
c0100f0b	obj/kernel.asm	/^c0100f0b:	e8 1d 11 00 00       	call   c010202d <intr_disable>$/;"	l
c0100f10	obj/kernel.asm	/^c0100f10:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0100f15	obj/kernel.asm	/^c0100f15:	eb 05                	jmp    c0100f1c <__intr_save+0x28>$/;"	l
c0100f17	obj/kernel.asm	/^c0100f17:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100f1c	obj/kernel.asm	/^c0100f1c:	c9                   	leave  $/;"	l
c0100f1d	obj/kernel.asm	/^c0100f1d:	c3                   	ret    $/;"	l
c0100f1e	obj/kernel.asm	/^c0100f1e <__intr_restore>:$/;"	l
c0100f1e	obj/kernel.asm	/^c0100f1e:	55                   	push   %ebp$/;"	l
c0100f1f	obj/kernel.asm	/^c0100f1f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f21	obj/kernel.asm	/^c0100f21:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100f24	obj/kernel.asm	/^c0100f24:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100f28	obj/kernel.asm	/^c0100f28:	74 05                	je     c0100f2f <__intr_restore+0x11>$/;"	l
c0100f2a	obj/kernel.asm	/^c0100f2a:	e8 f8 10 00 00       	call   c0102027 <intr_enable>$/;"	l
c0100f2f	obj/kernel.asm	/^c0100f2f:	c9                   	leave  $/;"	l
c0100f30	obj/kernel.asm	/^c0100f30:	c3                   	ret    $/;"	l
c0100f31	obj/kernel.asm	/^c0100f31 <delay>:$/;"	l
c0100f31	obj/kernel.asm	/^c0100f31:	55                   	push   %ebp$/;"	l
c0100f32	obj/kernel.asm	/^c0100f32:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100f37	obj/kernel.asm	/^c0100f37:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c0100f3d	obj/kernel.asm	/^c0100f3d:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c0100f41	obj/kernel.asm	/^c0100f41:	89 c2                	mov    %eax,%edx$/;"	l
c0100f43	obj/kernel.asm	/^c0100f43:	ec                   	in     (%dx),%al$/;"	l
c0100f44	obj/kernel.asm	/^c0100f44:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0100f47	obj/kernel.asm	/^c0100f47:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c0100f4d	obj/kernel.asm	/^c0100f4d:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0100f51	obj/kernel.asm	/^c0100f51:	89 c2                	mov    %eax,%edx$/;"	l
c0100f53	obj/kernel.asm	/^c0100f53:	ec                   	in     (%dx),%al$/;"	l
c0100f54	obj/kernel.asm	/^c0100f54:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0100f57	obj/kernel.asm	/^c0100f57:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c0100f5d	obj/kernel.asm	/^c0100f5d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f61	obj/kernel.asm	/^c0100f61:	89 c2                	mov    %eax,%edx$/;"	l
c0100f63	obj/kernel.asm	/^c0100f63:	ec                   	in     (%dx),%al$/;"	l
c0100f64	obj/kernel.asm	/^c0100f64:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0100f67	obj/kernel.asm	/^c0100f67:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c0100f6d	obj/kernel.asm	/^c0100f6d:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0100f71	obj/kernel.asm	/^c0100f71:	89 c2                	mov    %eax,%edx$/;"	l
c0100f73	obj/kernel.asm	/^c0100f73:	ec                   	in     (%dx),%al$/;"	l
c0100f74	obj/kernel.asm	/^c0100f74:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0100f77	obj/kernel.asm	/^c0100f77:	c9                   	leave  $/;"	l
c0100f78	obj/kernel.asm	/^c0100f78:	c3                   	ret    $/;"	l
c0100f79	obj/kernel.asm	/^c0100f79 <cga_init>:$/;"	l
c0100f79	obj/kernel.asm	/^c0100f79:	55                   	push   %ebp$/;"	l
c0100f7a	obj/kernel.asm	/^c0100f7a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f7c	obj/kernel.asm	/^c0100f7c:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0100f7f	obj/kernel.asm	/^c0100f7f:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c0100f86	obj/kernel.asm	/^c0100f86:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100f89	obj/kernel.asm	/^c0100f89:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0100f8c	obj/kernel.asm	/^c0100f8c:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0100f90	obj/kernel.asm	/^c0100f90:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100f93	obj/kernel.asm	/^c0100f93:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c0100f98	obj/kernel.asm	/^c0100f98:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100f9b	obj/kernel.asm	/^c0100f9b:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0100f9e	obj/kernel.asm	/^c0100f9e:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c0100fa2	obj/kernel.asm	/^c0100fa2:	74 12                	je     c0100fb6 <cga_init+0x3d>$/;"	l
c0100fa4	obj/kernel.asm	/^c0100fa4:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c0100fab	obj/kernel.asm	/^c0100fab:	66 c7 05 86 c3 19 c0 	movw   $0x3b4,0xc019c386$/;"	l
c0100fb2	obj/kernel.asm	/^c0100fb2:	b4 03 $/;"	l
c0100fb4	obj/kernel.asm	/^c0100fb4:	eb 13                	jmp    c0100fc9 <cga_init+0x50>$/;"	l
c0100fb6	obj/kernel.asm	/^c0100fb6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100fb9	obj/kernel.asm	/^c0100fb9:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0100fbd	obj/kernel.asm	/^c0100fbd:	66 89 10             	mov    %dx,(%eax)$/;"	l
c0100fc0	obj/kernel.asm	/^c0100fc0:	66 c7 05 86 c3 19 c0 	movw   $0x3d4,0xc019c386$/;"	l
c0100fc7	obj/kernel.asm	/^c0100fc7:	d4 03 $/;"	d
c0100fc9	obj/kernel.asm	/^c0100fc9:	0f b7 05 86 c3 19 c0 	movzwl 0xc019c386,%eax$/;"	l
c0100fd0	obj/kernel.asm	/^c0100fd0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100fd3	obj/kernel.asm	/^c0100fd3:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0100fd7	obj/kernel.asm	/^c0100fd7:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0100fdb	obj/kernel.asm	/^c0100fdb:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0100fdf	obj/kernel.asm	/^c0100fdf:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0100fe3	obj/kernel.asm	/^c0100fe3:	ee                   	out    %al,(%dx)$/;"	l
c0100fe4	obj/kernel.asm	/^c0100fe4:	0f b7 05 86 c3 19 c0 	movzwl 0xc019c386,%eax$/;"	l
c0100feb	obj/kernel.asm	/^c0100feb:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100fee	obj/kernel.asm	/^c0100fee:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100ff1	obj/kernel.asm	/^c0100ff1:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0100ff5	obj/kernel.asm	/^c0100ff5:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c0100ff9	obj/kernel.asm	/^c0100ff9:	89 c2                	mov    %eax,%edx$/;"	l
c0100ffb	obj/kernel.asm	/^c0100ffb:	ec                   	in     (%dx),%al$/;"	l
c0100ffc	obj/kernel.asm	/^c0100ffc:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0100fff	obj/kernel.asm	/^c0100fff:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101003	obj/kernel.asm	/^c0101003:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101006	obj/kernel.asm	/^c0101006:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0101009	obj/kernel.asm	/^c0101009:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010100c	obj/kernel.asm	/^c010100c:	0f b7 05 86 c3 19 c0 	movzwl 0xc019c386,%eax$/;"	l
c0101013	obj/kernel.asm	/^c0101013:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101016	obj/kernel.asm	/^c0101016:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c010101a	obj/kernel.asm	/^c010101a:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c010101e	obj/kernel.asm	/^c010101e:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101022	obj/kernel.asm	/^c0101022:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101026	obj/kernel.asm	/^c0101026:	ee                   	out    %al,(%dx)$/;"	l
c0101027	obj/kernel.asm	/^c0101027:	0f b7 05 86 c3 19 c0 	movzwl 0xc019c386,%eax$/;"	l
c010102e	obj/kernel.asm	/^c010102e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101031	obj/kernel.asm	/^c0101031:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101034	obj/kernel.asm	/^c0101034:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0101038	obj/kernel.asm	/^c0101038:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c010103c	obj/kernel.asm	/^c010103c:	89 c2                	mov    %eax,%edx$/;"	l
c010103e	obj/kernel.asm	/^c010103e:	ec                   	in     (%dx),%al$/;"	l
c010103f	obj/kernel.asm	/^c010103f:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101042	obj/kernel.asm	/^c0101042:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101046	obj/kernel.asm	/^c0101046:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101049	obj/kernel.asm	/^c0101049:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c010104c	obj/kernel.asm	/^c010104c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010104f	obj/kernel.asm	/^c010104f:	a3 80 c3 19 c0       	mov    %eax,0xc019c380$/;"	l
c0101054	obj/kernel.asm	/^c0101054:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101057	obj/kernel.asm	/^c0101057:	66 a3 84 c3 19 c0    	mov    %ax,0xc019c384$/;"	l
c010105d	obj/kernel.asm	/^c010105d:	c9                   	leave  $/;"	l
c010105e	obj/kernel.asm	/^c010105e:	c3                   	ret    $/;"	l
c010105f	obj/kernel.asm	/^c010105f <serial_init>:$/;"	l
c010105f	obj/kernel.asm	/^c010105f:	55                   	push   %ebp$/;"	l
c0101060	obj/kernel.asm	/^c0101060:	89 e5                	mov    %esp,%ebp$/;"	l
c0101062	obj/kernel.asm	/^c0101062:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0101065	obj/kernel.asm	/^c0101065:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c010106b	obj/kernel.asm	/^c010106b:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c010106f	obj/kernel.asm	/^c010106f:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101073	obj/kernel.asm	/^c0101073:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101077	obj/kernel.asm	/^c0101077:	ee                   	out    %al,(%dx)$/;"	l
c0101078	obj/kernel.asm	/^c0101078:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c010107e	obj/kernel.asm	/^c010107e:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c0101082	obj/kernel.asm	/^c0101082:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101086	obj/kernel.asm	/^c0101086:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010108a	obj/kernel.asm	/^c010108a:	ee                   	out    %al,(%dx)$/;"	l
c010108b	obj/kernel.asm	/^c010108b:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c0101091	obj/kernel.asm	/^c0101091:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c0101095	obj/kernel.asm	/^c0101095:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101099	obj/kernel.asm	/^c0101099:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c010109d	obj/kernel.asm	/^c010109d:	ee                   	out    %al,(%dx)$/;"	l
c010109e	obj/kernel.asm	/^c010109e:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01010a4	obj/kernel.asm	/^c01010a4:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01010a8	obj/kernel.asm	/^c01010a8:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01010ac	obj/kernel.asm	/^c01010ac:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01010b0	obj/kernel.asm	/^c01010b0:	ee                   	out    %al,(%dx)$/;"	l
c01010b1	obj/kernel.asm	/^c01010b1:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01010b7	obj/kernel.asm	/^c01010b7:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01010bb	obj/kernel.asm	/^c01010bb:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01010bf	obj/kernel.asm	/^c01010bf:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01010c3	obj/kernel.asm	/^c01010c3:	ee                   	out    %al,(%dx)$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01010ca	obj/kernel.asm	/^c01010ca:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01010ce	obj/kernel.asm	/^c01010ce:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01010d2	obj/kernel.asm	/^c01010d2:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01010d6	obj/kernel.asm	/^c01010d6:	ee                   	out    %al,(%dx)$/;"	l
c01010d7	obj/kernel.asm	/^c01010d7:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01010dd	obj/kernel.asm	/^c01010dd:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c01010e1	obj/kernel.asm	/^c01010e1:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01010e5	obj/kernel.asm	/^c01010e5:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01010e9	obj/kernel.asm	/^c01010e9:	ee                   	out    %al,(%dx)$/;"	l
c01010ea	obj/kernel.asm	/^c01010ea:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c01010f0	obj/kernel.asm	/^c01010f0:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c01010f4	obj/kernel.asm	/^c01010f4:	89 c2                	mov    %eax,%edx$/;"	l
c01010f6	obj/kernel.asm	/^c01010f6:	ec                   	in     (%dx),%al$/;"	l
c01010f7	obj/kernel.asm	/^c01010f7:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01010fa	obj/kernel.asm	/^c01010fa:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01010fe	obj/kernel.asm	/^c01010fe:	3c ff                	cmp    $0xff,%al$/;"	l
c0101100	obj/kernel.asm	/^c0101100:	0f 95 c0             	setne  %al$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101106	obj/kernel.asm	/^c0101106:	a3 88 c3 19 c0       	mov    %eax,0xc019c388$/;"	l
c010110b	obj/kernel.asm	/^c010110b:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c0101111	obj/kernel.asm	/^c0101111:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c0101115	obj/kernel.asm	/^c0101115:	89 c2                	mov    %eax,%edx$/;"	l
c0101117	obj/kernel.asm	/^c0101117:	ec                   	in     (%dx),%al$/;"	l
c0101118	obj/kernel.asm	/^c0101118:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c010111b	obj/kernel.asm	/^c010111b:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c0101121	obj/kernel.asm	/^c0101121:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c0101125	obj/kernel.asm	/^c0101125:	89 c2                	mov    %eax,%edx$/;"	l
c0101127	obj/kernel.asm	/^c0101127:	ec                   	in     (%dx),%al$/;"	l
c0101128	obj/kernel.asm	/^c0101128:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c010112b	obj/kernel.asm	/^c010112b:	a1 88 c3 19 c0       	mov    0xc019c388,%eax$/;"	l
c0101130	obj/kernel.asm	/^c0101130:	85 c0                	test   %eax,%eax$/;"	l
c0101132	obj/kernel.asm	/^c0101132:	74 0c                	je     c0101140 <serial_init+0xe1>$/;"	l
c0101134	obj/kernel.asm	/^c0101134:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c010113b	obj/kernel.asm	/^c010113b:	e8 4b 0f 00 00       	call   c010208b <pic_enable>$/;"	l
c0101140	obj/kernel.asm	/^c0101140:	c9                   	leave  $/;"	l
c0101141	obj/kernel.asm	/^c0101141:	c3                   	ret    $/;"	l
c0101142	obj/kernel.asm	/^c0101142 <lpt_putc_sub>:$/;"	l
c0101142	obj/kernel.asm	/^c0101142:	55                   	push   %ebp$/;"	l
c0101143	obj/kernel.asm	/^c0101143:	89 e5                	mov    %esp,%ebp$/;"	l
c0101145	obj/kernel.asm	/^c0101145:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101148	obj/kernel.asm	/^c0101148:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010114f	obj/kernel.asm	/^c010114f:	eb 09                	jmp    c010115a <lpt_putc_sub+0x18>$/;"	l
c0101151	obj/kernel.asm	/^c0101151:	e8 db fd ff ff       	call   c0100f31 <delay>$/;"	l
c0101156	obj/kernel.asm	/^c0101156:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010115a	obj/kernel.asm	/^c010115a:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c0101160	obj/kernel.asm	/^c0101160:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101164	obj/kernel.asm	/^c0101164:	89 c2                	mov    %eax,%edx$/;"	l
c0101166	obj/kernel.asm	/^c0101166:	ec                   	in     (%dx),%al$/;"	l
c0101167	obj/kernel.asm	/^c0101167:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c010116a	obj/kernel.asm	/^c010116a:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010116e	obj/kernel.asm	/^c010116e:	84 c0                	test   %al,%al$/;"	l
c0101170	obj/kernel.asm	/^c0101170:	78 09                	js     c010117b <lpt_putc_sub+0x39>$/;"	l
c0101172	obj/kernel.asm	/^c0101172:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101179	obj/kernel.asm	/^c0101179:	7e d6                	jle    c0101151 <lpt_putc_sub+0xf>$/;"	l
c010117b	obj/kernel.asm	/^c010117b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010117e	obj/kernel.asm	/^c010117e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101181	obj/kernel.asm	/^c0101181:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c0101187	obj/kernel.asm	/^c0101187:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c010118a	obj/kernel.asm	/^c010118a:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010118e	obj/kernel.asm	/^c010118e:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101192	obj/kernel.asm	/^c0101192:	ee                   	out    %al,(%dx)$/;"	l
c0101193	obj/kernel.asm	/^c0101193:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c0101199	obj/kernel.asm	/^c0101199:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c010119d	obj/kernel.asm	/^c010119d:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01011a1	obj/kernel.asm	/^c01011a1:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01011a5	obj/kernel.asm	/^c01011a5:	ee                   	out    %al,(%dx)$/;"	l
c01011a6	obj/kernel.asm	/^c01011a6:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01011ac	obj/kernel.asm	/^c01011ac:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01011b0	obj/kernel.asm	/^c01011b0:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01011b4	obj/kernel.asm	/^c01011b4:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01011b8	obj/kernel.asm	/^c01011b8:	ee                   	out    %al,(%dx)$/;"	l
c01011b9	obj/kernel.asm	/^c01011b9:	c9                   	leave  $/;"	l
c01011ba	obj/kernel.asm	/^c01011ba:	c3                   	ret    $/;"	l
c01011bb	obj/kernel.asm	/^c01011bb <lpt_putc>:$/;"	l
c01011bb	obj/kernel.asm	/^c01011bb:	55                   	push   %ebp$/;"	l
c01011bc	obj/kernel.asm	/^c01011bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01011be	obj/kernel.asm	/^c01011be:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01011c1	obj/kernel.asm	/^c01011c1:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01011c5	obj/kernel.asm	/^c01011c5:	74 0d                	je     c01011d4 <lpt_putc+0x19>$/;"	l
c01011c7	obj/kernel.asm	/^c01011c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01011ca	obj/kernel.asm	/^c01011ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01011cd	obj/kernel.asm	/^c01011cd:	e8 70 ff ff ff       	call   c0101142 <lpt_putc_sub>$/;"	l
c01011d2	obj/kernel.asm	/^c01011d2:	eb 24                	jmp    c01011f8 <lpt_putc+0x3d>$/;"	l
c01011d4	obj/kernel.asm	/^c01011d4:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01011db	obj/kernel.asm	/^c01011db:	e8 62 ff ff ff       	call   c0101142 <lpt_putc_sub>$/;"	l
c01011e0	obj/kernel.asm	/^c01011e0:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c01011e7	obj/kernel.asm	/^c01011e7:	e8 56 ff ff ff       	call   c0101142 <lpt_putc_sub>$/;"	l
c01011ec	obj/kernel.asm	/^c01011ec:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01011f3	obj/kernel.asm	/^c01011f3:	e8 4a ff ff ff       	call   c0101142 <lpt_putc_sub>$/;"	l
c01011f8	obj/kernel.asm	/^c01011f8:	c9                   	leave  $/;"	l
c01011f9	obj/kernel.asm	/^c01011f9:	c3                   	ret    $/;"	l
c01011fa	obj/kernel.asm	/^c01011fa <cga_putc>:$/;"	l
c01011fa	obj/kernel.asm	/^c01011fa:	55                   	push   %ebp$/;"	l
c01011fb	obj/kernel.asm	/^c01011fb:	89 e5                	mov    %esp,%ebp$/;"	l
c01011fd	obj/kernel.asm	/^c01011fd:	53                   	push   %ebx$/;"	l
c01011fe	obj/kernel.asm	/^c01011fe:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0101201	obj/kernel.asm	/^c0101201:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101204	obj/kernel.asm	/^c0101204:	b0 00                	mov    $0x0,%al$/;"	l
c0101206	obj/kernel.asm	/^c0101206:	85 c0                	test   %eax,%eax$/;"	l
c0101208	obj/kernel.asm	/^c0101208:	75 07                	jne    c0101211 <cga_putc+0x17>$/;"	l
c010120a	obj/kernel.asm	/^c010120a:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c0101211	obj/kernel.asm	/^c0101211:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101214	obj/kernel.asm	/^c0101214:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101217	obj/kernel.asm	/^c0101217:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c010121a	obj/kernel.asm	/^c010121a:	74 4c                	je     c0101268 <cga_putc+0x6e>$/;"	l
c010121c	obj/kernel.asm	/^c010121c:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c010121f	obj/kernel.asm	/^c010121f:	74 57                	je     c0101278 <cga_putc+0x7e>$/;"	l
c0101221	obj/kernel.asm	/^c0101221:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0101224	obj/kernel.asm	/^c0101224:	0f 85 88 00 00 00    	jne    c01012b2 <cga_putc+0xb8>$/;"	l
c010122a	obj/kernel.asm	/^c010122a:	0f b7 05 84 c3 19 c0 	movzwl 0xc019c384,%eax$/;"	l
c0101231	obj/kernel.asm	/^c0101231:	66 85 c0             	test   %ax,%ax$/;"	l
c0101234	obj/kernel.asm	/^c0101234:	74 30                	je     c0101266 <cga_putc+0x6c>$/;"	l
c0101236	obj/kernel.asm	/^c0101236:	0f b7 05 84 c3 19 c0 	movzwl 0xc019c384,%eax$/;"	l
c010123d	obj/kernel.asm	/^c010123d:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101240	obj/kernel.asm	/^c0101240:	66 a3 84 c3 19 c0    	mov    %ax,0xc019c384$/;"	l
c0101246	obj/kernel.asm	/^c0101246:	a1 80 c3 19 c0       	mov    0xc019c380,%eax$/;"	l
c010124b	obj/kernel.asm	/^c010124b:	0f b7 15 84 c3 19 c0 	movzwl 0xc019c384,%edx$/;"	l
c0101252	obj/kernel.asm	/^c0101252:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101255	obj/kernel.asm	/^c0101255:	01 d2                	add    %edx,%edx$/;"	l
c0101257	obj/kernel.asm	/^c0101257:	01 c2                	add    %eax,%edx$/;"	l
c0101259	obj/kernel.asm	/^c0101259:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010125c	obj/kernel.asm	/^c010125c:	b0 00                	mov    $0x0,%al$/;"	l
c010125e	obj/kernel.asm	/^c010125e:	83 c8 20             	or     $0x20,%eax$/;"	l
c0101261	obj/kernel.asm	/^c0101261:	66 89 02             	mov    %ax,(%edx)$/;"	l
c0101264	obj/kernel.asm	/^c0101264:	eb 72                	jmp    c01012d8 <cga_putc+0xde>$/;"	l
c0101266	obj/kernel.asm	/^c0101266:	eb 70                	jmp    c01012d8 <cga_putc+0xde>$/;"	l
c0101268	obj/kernel.asm	/^c0101268:	0f b7 05 84 c3 19 c0 	movzwl 0xc019c384,%eax$/;"	l
c010126f	obj/kernel.asm	/^c010126f:	83 c0 50             	add    $0x50,%eax$/;"	l
c0101272	obj/kernel.asm	/^c0101272:	66 a3 84 c3 19 c0    	mov    %ax,0xc019c384$/;"	l
c0101278	obj/kernel.asm	/^c0101278:	0f b7 1d 84 c3 19 c0 	movzwl 0xc019c384,%ebx$/;"	l
c010127f	obj/kernel.asm	/^c010127f:	0f b7 0d 84 c3 19 c0 	movzwl 0xc019c384,%ecx$/;"	l
c0101286	obj/kernel.asm	/^c0101286:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c0101289	obj/kernel.asm	/^c0101289:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c010128f	obj/kernel.asm	/^c010128f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101292	obj/kernel.asm	/^c0101292:	89 c2                	mov    %eax,%edx$/;"	l
c0101294	obj/kernel.asm	/^c0101294:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c0101298	obj/kernel.asm	/^c0101298:	89 d0                	mov    %edx,%eax$/;"	l
c010129a	obj/kernel.asm	/^c010129a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010129d	obj/kernel.asm	/^c010129d:	01 d0                	add    %edx,%eax$/;"	l
c010129f	obj/kernel.asm	/^c010129f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01012a2	obj/kernel.asm	/^c01012a2:	29 c1                	sub    %eax,%ecx$/;"	l
c01012a4	obj/kernel.asm	/^c01012a4:	89 ca                	mov    %ecx,%edx$/;"	l
c01012a6	obj/kernel.asm	/^c01012a6:	89 d8                	mov    %ebx,%eax$/;"	l
c01012a8	obj/kernel.asm	/^c01012a8:	29 d0                	sub    %edx,%eax$/;"	l
c01012aa	obj/kernel.asm	/^c01012aa:	66 a3 84 c3 19 c0    	mov    %ax,0xc019c384$/;"	l
c01012b0	obj/kernel.asm	/^c01012b0:	eb 26                	jmp    c01012d8 <cga_putc+0xde>$/;"	l
c01012b2	obj/kernel.asm	/^c01012b2:	8b 0d 80 c3 19 c0    	mov    0xc019c380,%ecx$/;"	l
c01012b8	obj/kernel.asm	/^c01012b8:	0f b7 05 84 c3 19 c0 	movzwl 0xc019c384,%eax$/;"	l
c01012bf	obj/kernel.asm	/^c01012bf:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01012c2	obj/kernel.asm	/^c01012c2:	66 89 15 84 c3 19 c0 	mov    %dx,0xc019c384$/;"	l
c01012c9	obj/kernel.asm	/^c01012c9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01012cc	obj/kernel.asm	/^c01012cc:	01 c0                	add    %eax,%eax$/;"	l
c01012ce	obj/kernel.asm	/^c01012ce:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c01012d1	obj/kernel.asm	/^c01012d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01012d4	obj/kernel.asm	/^c01012d4:	66 89 02             	mov    %ax,(%edx)$/;"	l
c01012d7	obj/kernel.asm	/^c01012d7:	90                   	nop$/;"	l
c01012d8	obj/kernel.asm	/^c01012d8:	0f b7 05 84 c3 19 c0 	movzwl 0xc019c384,%eax$/;"	l
c01012df	obj/kernel.asm	/^c01012df:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c01012e3	obj/kernel.asm	/^c01012e3:	76 5b                	jbe    c0101340 <cga_putc+0x146>$/;"	l
c01012e5	obj/kernel.asm	/^c01012e5:	a1 80 c3 19 c0       	mov    0xc019c380,%eax$/;"	l
c01012ea	obj/kernel.asm	/^c01012ea:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c01012f0	obj/kernel.asm	/^c01012f0:	a1 80 c3 19 c0       	mov    0xc019c380,%eax$/;"	l
c01012f5	obj/kernel.asm	/^c01012f5:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
c01012fc	obj/kernel.asm	/^c01012fc:	00 $/;"	l
c01012fd	obj/kernel.asm	/^c01012fd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0101301	obj/kernel.asm	/^c0101301:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101304	obj/kernel.asm	/^c0101304:	e8 01 a8 00 00       	call   c010bb0a <memmove>$/;"	l
c0101309	obj/kernel.asm	/^c0101309:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c0101310	obj/kernel.asm	/^c0101310:	eb 15                	jmp    c0101327 <cga_putc+0x12d>$/;"	l
c0101312	obj/kernel.asm	/^c0101312:	a1 80 c3 19 c0       	mov    0xc019c380,%eax$/;"	l
c0101317	obj/kernel.asm	/^c0101317:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010131a	obj/kernel.asm	/^c010131a:	01 d2                	add    %edx,%edx$/;"	l
c010131c	obj/kernel.asm	/^c010131c:	01 d0                	add    %edx,%eax$/;"	l
c010131e	obj/kernel.asm	/^c010131e:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101323	obj/kernel.asm	/^c0101323:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0101327	obj/kernel.asm	/^c0101327:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c010132e	obj/kernel.asm	/^c010132e:	7e e2                	jle    c0101312 <cga_putc+0x118>$/;"	l
c0101330	obj/kernel.asm	/^c0101330:	0f b7 05 84 c3 19 c0 	movzwl 0xc019c384,%eax$/;"	l
c0101337	obj/kernel.asm	/^c0101337:	83 e8 50             	sub    $0x50,%eax$/;"	l
c010133a	obj/kernel.asm	/^c010133a:	66 a3 84 c3 19 c0    	mov    %ax,0xc019c384$/;"	l
c0101340	obj/kernel.asm	/^c0101340:	0f b7 05 86 c3 19 c0 	movzwl 0xc019c386,%eax$/;"	l
c0101347	obj/kernel.asm	/^c0101347:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010134a	obj/kernel.asm	/^c010134a:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c010134e	obj/kernel.asm	/^c010134e:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0101352	obj/kernel.asm	/^c0101352:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101356	obj/kernel.asm	/^c0101356:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010135a	obj/kernel.asm	/^c010135a:	ee                   	out    %al,(%dx)$/;"	l
c010135b	obj/kernel.asm	/^c010135b:	0f b7 05 84 c3 19 c0 	movzwl 0xc019c384,%eax$/;"	l
c0101362	obj/kernel.asm	/^c0101362:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101366	obj/kernel.asm	/^c0101366:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101369	obj/kernel.asm	/^c0101369:	0f b7 15 86 c3 19 c0 	movzwl 0xc019c386,%edx$/;"	l
c0101370	obj/kernel.asm	/^c0101370:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101373	obj/kernel.asm	/^c0101373:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101376	obj/kernel.asm	/^c0101376:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c010137a	obj/kernel.asm	/^c010137a:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c010137d	obj/kernel.asm	/^c010137d:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101381	obj/kernel.asm	/^c0101381:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101385	obj/kernel.asm	/^c0101385:	ee                   	out    %al,(%dx)$/;"	l
c0101386	obj/kernel.asm	/^c0101386:	0f b7 05 86 c3 19 c0 	movzwl 0xc019c386,%eax$/;"	l
c010138d	obj/kernel.asm	/^c010138d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101390	obj/kernel.asm	/^c0101390:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101394	obj/kernel.asm	/^c0101394:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101398	obj/kernel.asm	/^c0101398:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010139c	obj/kernel.asm	/^c010139c:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01013a0	obj/kernel.asm	/^c01013a0:	ee                   	out    %al,(%dx)$/;"	l
c01013a1	obj/kernel.asm	/^c01013a1:	0f b7 05 84 c3 19 c0 	movzwl 0xc019c384,%eax$/;"	l
c01013a8	obj/kernel.asm	/^c01013a8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01013ab	obj/kernel.asm	/^c01013ab:	0f b7 15 86 c3 19 c0 	movzwl 0xc019c386,%edx$/;"	l
c01013b2	obj/kernel.asm	/^c01013b2:	83 c2 01             	add    $0x1,%edx$/;"	l
c01013b5	obj/kernel.asm	/^c01013b5:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01013b8	obj/kernel.asm	/^c01013b8:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c01013bc	obj/kernel.asm	/^c01013bc:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c01013bf	obj/kernel.asm	/^c01013bf:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01013c3	obj/kernel.asm	/^c01013c3:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01013c7	obj/kernel.asm	/^c01013c7:	ee                   	out    %al,(%dx)$/;"	l
c01013c8	obj/kernel.asm	/^c01013c8:	83 c4 34             	add    $0x34,%esp$/;"	l
c01013cb	obj/kernel.asm	/^c01013cb:	5b                   	pop    %ebx$/;"	l
c01013cc	obj/kernel.asm	/^c01013cc:	5d                   	pop    %ebp$/;"	l
c01013cd	obj/kernel.asm	/^c01013cd:	c3                   	ret    $/;"	l
c01013ce	obj/kernel.asm	/^c01013ce <serial_putc_sub>:$/;"	l
c01013ce	obj/kernel.asm	/^c01013ce:	55                   	push   %ebp$/;"	l
c01013cf	obj/kernel.asm	/^c01013cf:	89 e5                	mov    %esp,%ebp$/;"	l
c01013d1	obj/kernel.asm	/^c01013d1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01013d4	obj/kernel.asm	/^c01013d4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01013db	obj/kernel.asm	/^c01013db:	eb 09                	jmp    c01013e6 <serial_putc_sub+0x18>$/;"	l
c01013dd	obj/kernel.asm	/^c01013dd:	e8 4f fb ff ff       	call   c0100f31 <delay>$/;"	l
c01013e2	obj/kernel.asm	/^c01013e2:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01013e6	obj/kernel.asm	/^c01013e6:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01013ec	obj/kernel.asm	/^c01013ec:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01013f0	obj/kernel.asm	/^c01013f0:	89 c2                	mov    %eax,%edx$/;"	l
c01013f2	obj/kernel.asm	/^c01013f2:	ec                   	in     (%dx),%al$/;"	l
c01013f3	obj/kernel.asm	/^c01013f3:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01013f6	obj/kernel.asm	/^c01013f6:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01013fa	obj/kernel.asm	/^c01013fa:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01013fd	obj/kernel.asm	/^c01013fd:	83 e0 20             	and    $0x20,%eax$/;"	l
c0101400	obj/kernel.asm	/^c0101400:	85 c0                	test   %eax,%eax$/;"	l
c0101402	obj/kernel.asm	/^c0101402:	75 09                	jne    c010140d <serial_putc_sub+0x3f>$/;"	l
c0101404	obj/kernel.asm	/^c0101404:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c010140b	obj/kernel.asm	/^c010140b:	7e d0                	jle    c01013dd <serial_putc_sub+0xf>$/;"	l
c010140d	obj/kernel.asm	/^c010140d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101410	obj/kernel.asm	/^c0101410:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101413	obj/kernel.asm	/^c0101413:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101419	obj/kernel.asm	/^c0101419:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c010141c	obj/kernel.asm	/^c010141c:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101420	obj/kernel.asm	/^c0101420:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101424	obj/kernel.asm	/^c0101424:	ee                   	out    %al,(%dx)$/;"	l
c0101425	obj/kernel.asm	/^c0101425:	c9                   	leave  $/;"	l
c0101426	obj/kernel.asm	/^c0101426:	c3                   	ret    $/;"	l
c0101427	obj/kernel.asm	/^c0101427 <serial_putc>:$/;"	l
c0101427	obj/kernel.asm	/^c0101427:	55                   	push   %ebp$/;"	l
c0101428	obj/kernel.asm	/^c0101428:	89 e5                	mov    %esp,%ebp$/;"	l
c010142a	obj/kernel.asm	/^c010142a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010142d	obj/kernel.asm	/^c010142d:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0101431	obj/kernel.asm	/^c0101431:	74 0d                	je     c0101440 <serial_putc+0x19>$/;"	l
c0101433	obj/kernel.asm	/^c0101433:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101436	obj/kernel.asm	/^c0101436:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101439	obj/kernel.asm	/^c0101439:	e8 90 ff ff ff       	call   c01013ce <serial_putc_sub>$/;"	l
c010143e	obj/kernel.asm	/^c010143e:	eb 24                	jmp    c0101464 <serial_putc+0x3d>$/;"	l
c0101440	obj/kernel.asm	/^c0101440:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c0101447	obj/kernel.asm	/^c0101447:	e8 82 ff ff ff       	call   c01013ce <serial_putc_sub>$/;"	l
c010144c	obj/kernel.asm	/^c010144c:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0101453	obj/kernel.asm	/^c0101453:	e8 76 ff ff ff       	call   c01013ce <serial_putc_sub>$/;"	l
c0101458	obj/kernel.asm	/^c0101458:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c010145f	obj/kernel.asm	/^c010145f:	e8 6a ff ff ff       	call   c01013ce <serial_putc_sub>$/;"	l
c0101464	obj/kernel.asm	/^c0101464:	c9                   	leave  $/;"	l
c0101465	obj/kernel.asm	/^c0101465:	c3                   	ret    $/;"	l
c0101466	obj/kernel.asm	/^c0101466 <cons_intr>:$/;"	l
c0101466	obj/kernel.asm	/^c0101466:	55                   	push   %ebp$/;"	l
c0101467	obj/kernel.asm	/^c0101467:	89 e5                	mov    %esp,%ebp$/;"	l
c0101469	obj/kernel.asm	/^c0101469:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010146c	obj/kernel.asm	/^c010146c:	eb 33                	jmp    c01014a1 <cons_intr+0x3b>$/;"	l
c010146e	obj/kernel.asm	/^c010146e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101472	obj/kernel.asm	/^c0101472:	74 2d                	je     c01014a1 <cons_intr+0x3b>$/;"	l
c0101474	obj/kernel.asm	/^c0101474:	a1 a4 c5 19 c0       	mov    0xc019c5a4,%eax$/;"	l
c0101479	obj/kernel.asm	/^c0101479:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010147c	obj/kernel.asm	/^c010147c:	89 15 a4 c5 19 c0    	mov    %edx,0xc019c5a4$/;"	l
c0101482	obj/kernel.asm	/^c0101482:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101485	obj/kernel.asm	/^c0101485:	88 90 a0 c3 19 c0    	mov    %dl,-0x3fe63c60(%eax)$/;"	l
c010148b	obj/kernel.asm	/^c010148b:	a1 a4 c5 19 c0       	mov    0xc019c5a4,%eax$/;"	l
c0101490	obj/kernel.asm	/^c0101490:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101495	obj/kernel.asm	/^c0101495:	75 0a                	jne    c01014a1 <cons_intr+0x3b>$/;"	l
c0101497	obj/kernel.asm	/^c0101497:	c7 05 a4 c5 19 c0 00 	movl   $0x0,0xc019c5a4$/;"	l
c010149e	obj/kernel.asm	/^c010149e:	00 00 00 $/;"	l
c01014a1	obj/kernel.asm	/^c01014a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01014a4	obj/kernel.asm	/^c01014a4:	ff d0                	call   *%eax$/;"	l
c01014a6	obj/kernel.asm	/^c01014a6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01014a9	obj/kernel.asm	/^c01014a9:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c01014ad	obj/kernel.asm	/^c01014ad:	75 bf                	jne    c010146e <cons_intr+0x8>$/;"	l
c01014af	obj/kernel.asm	/^c01014af:	c9                   	leave  $/;"	l
c01014b0	obj/kernel.asm	/^c01014b0:	c3                   	ret    $/;"	l
c01014b1	obj/kernel.asm	/^c01014b1 <serial_proc_data>:$/;"	l
c01014b1	obj/kernel.asm	/^c01014b1:	55                   	push   %ebp$/;"	l
c01014b2	obj/kernel.asm	/^c01014b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01014b4	obj/kernel.asm	/^c01014b4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01014b7	obj/kernel.asm	/^c01014b7:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01014bd	obj/kernel.asm	/^c01014bd:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01014c1	obj/kernel.asm	/^c01014c1:	89 c2                	mov    %eax,%edx$/;"	l
c01014c3	obj/kernel.asm	/^c01014c3:	ec                   	in     (%dx),%al$/;"	l
c01014c4	obj/kernel.asm	/^c01014c4:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01014c7	obj/kernel.asm	/^c01014c7:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01014cb	obj/kernel.asm	/^c01014cb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014ce	obj/kernel.asm	/^c01014ce:	83 e0 01             	and    $0x1,%eax$/;"	l
c01014d1	obj/kernel.asm	/^c01014d1:	85 c0                	test   %eax,%eax$/;"	l
c01014d3	obj/kernel.asm	/^c01014d3:	75 07                	jne    c01014dc <serial_proc_data+0x2b>$/;"	l
c01014d5	obj/kernel.asm	/^c01014d5:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01014da	obj/kernel.asm	/^c01014da:	eb 2a                	jmp    c0101506 <serial_proc_data+0x55>$/;"	l
c01014dc	obj/kernel.asm	/^c01014dc:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c01014e2	obj/kernel.asm	/^c01014e2:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01014e6	obj/kernel.asm	/^c01014e6:	89 c2                	mov    %eax,%edx$/;"	l
c01014e8	obj/kernel.asm	/^c01014e8:	ec                   	in     (%dx),%al$/;"	l
c01014e9	obj/kernel.asm	/^c01014e9:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01014ec	obj/kernel.asm	/^c01014ec:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01014f0	obj/kernel.asm	/^c01014f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014f3	obj/kernel.asm	/^c01014f3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01014f6	obj/kernel.asm	/^c01014f6:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c01014fa	obj/kernel.asm	/^c01014fa:	75 07                	jne    c0101503 <serial_proc_data+0x52>$/;"	l
c01014fc	obj/kernel.asm	/^c01014fc:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101503	obj/kernel.asm	/^c0101503:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101506	obj/kernel.asm	/^c0101506:	c9                   	leave  $/;"	l
c0101507	obj/kernel.asm	/^c0101507:	c3                   	ret    $/;"	l
c0101508	obj/kernel.asm	/^c0101508 <serial_intr>:$/;"	l
c0101508	obj/kernel.asm	/^c0101508:	55                   	push   %ebp$/;"	l
c0101509	obj/kernel.asm	/^c0101509:	89 e5                	mov    %esp,%ebp$/;"	l
c010150b	obj/kernel.asm	/^c010150b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010150e	obj/kernel.asm	/^c010150e:	a1 88 c3 19 c0       	mov    0xc019c388,%eax$/;"	l
c0101513	obj/kernel.asm	/^c0101513:	85 c0                	test   %eax,%eax$/;"	l
c0101515	obj/kernel.asm	/^c0101515:	74 0c                	je     c0101523 <serial_intr+0x1b>$/;"	l
c0101517	obj/kernel.asm	/^c0101517:	c7 04 24 b1 14 10 c0 	movl   $0xc01014b1,(%esp)$/;"	l
c010151e	obj/kernel.asm	/^c010151e:	e8 43 ff ff ff       	call   c0101466 <cons_intr>$/;"	l
c0101523	obj/kernel.asm	/^c0101523:	c9                   	leave  $/;"	l
c0101524	obj/kernel.asm	/^c0101524:	c3                   	ret    $/;"	l
c0101525	obj/kernel.asm	/^c0101525 <kbd_proc_data>:$/;"	l
c0101525	obj/kernel.asm	/^c0101525:	55                   	push   %ebp$/;"	l
c0101526	obj/kernel.asm	/^c0101526:	89 e5                	mov    %esp,%ebp$/;"	l
c0101528	obj/kernel.asm	/^c0101528:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010152b	obj/kernel.asm	/^c010152b:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c0101531	obj/kernel.asm	/^c0101531:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101535	obj/kernel.asm	/^c0101535:	89 c2                	mov    %eax,%edx$/;"	l
c0101537	obj/kernel.asm	/^c0101537:	ec                   	in     (%dx),%al$/;"	l
c0101538	obj/kernel.asm	/^c0101538:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c010153b	obj/kernel.asm	/^c010153b:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c010153f	obj/kernel.asm	/^c010153f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101542	obj/kernel.asm	/^c0101542:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101545	obj/kernel.asm	/^c0101545:	85 c0                	test   %eax,%eax$/;"	l
c0101547	obj/kernel.asm	/^c0101547:	75 0a                	jne    c0101553 <kbd_proc_data+0x2e>$/;"	l
c0101549	obj/kernel.asm	/^c0101549:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010154e	obj/kernel.asm	/^c010154e:	e9 59 01 00 00       	jmp    c01016ac <kbd_proc_data+0x187>$/;"	l
c0101553	obj/kernel.asm	/^c0101553:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c0101559	obj/kernel.asm	/^c0101559:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c010155d	obj/kernel.asm	/^c010155d:	89 c2                	mov    %eax,%edx$/;"	l
c010155f	obj/kernel.asm	/^c010155f:	ec                   	in     (%dx),%al$/;"	l
c0101560	obj/kernel.asm	/^c0101560:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101563	obj/kernel.asm	/^c0101563:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0101567	obj/kernel.asm	/^c0101567:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c010156a	obj/kernel.asm	/^c010156a:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c010156e	obj/kernel.asm	/^c010156e:	75 17                	jne    c0101587 <kbd_proc_data+0x62>$/;"	l
c0101570	obj/kernel.asm	/^c0101570:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c0101575	obj/kernel.asm	/^c0101575:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101578	obj/kernel.asm	/^c0101578:	a3 a8 c5 19 c0       	mov    %eax,0xc019c5a8$/;"	l
c010157d	obj/kernel.asm	/^c010157d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101582	obj/kernel.asm	/^c0101582:	e9 25 01 00 00       	jmp    c01016ac <kbd_proc_data+0x187>$/;"	l
c0101587	obj/kernel.asm	/^c0101587:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010158b	obj/kernel.asm	/^c010158b:	84 c0                	test   %al,%al$/;"	l
c010158d	obj/kernel.asm	/^c010158d:	79 47                	jns    c01015d6 <kbd_proc_data+0xb1>$/;"	l
c010158f	obj/kernel.asm	/^c010158f:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c0101594	obj/kernel.asm	/^c0101594:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101597	obj/kernel.asm	/^c0101597:	85 c0                	test   %eax,%eax$/;"	l
c0101599	obj/kernel.asm	/^c0101599:	75 09                	jne    c01015a4 <kbd_proc_data+0x7f>$/;"	l
c010159b	obj/kernel.asm	/^c010159b:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010159f	obj/kernel.asm	/^c010159f:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c01015a2	obj/kernel.asm	/^c01015a2:	eb 04                	jmp    c01015a8 <kbd_proc_data+0x83>$/;"	l
c01015a4	obj/kernel.asm	/^c01015a4:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01015a8	obj/kernel.asm	/^c01015a8:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c01015ab	obj/kernel.asm	/^c01015ab:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01015af	obj/kernel.asm	/^c01015af:	0f b6 80 60 a0 12 c0 	movzbl -0x3fed5fa0(%eax),%eax$/;"	l
c01015b6	obj/kernel.asm	/^c01015b6:	83 c8 40             	or     $0x40,%eax$/;"	l
c01015b9	obj/kernel.asm	/^c01015b9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01015bc	obj/kernel.asm	/^c01015bc:	f7 d0                	not    %eax$/;"	l
c01015be	obj/kernel.asm	/^c01015be:	89 c2                	mov    %eax,%edx$/;"	l
c01015c0	obj/kernel.asm	/^c01015c0:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c01015c5	obj/kernel.asm	/^c01015c5:	21 d0                	and    %edx,%eax$/;"	l
c01015c7	obj/kernel.asm	/^c01015c7:	a3 a8 c5 19 c0       	mov    %eax,0xc019c5a8$/;"	l
c01015cc	obj/kernel.asm	/^c01015cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01015d1	obj/kernel.asm	/^c01015d1:	e9 d6 00 00 00       	jmp    c01016ac <kbd_proc_data+0x187>$/;"	l
c01015d6	obj/kernel.asm	/^c01015d6:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c01015db	obj/kernel.asm	/^c01015db:	83 e0 40             	and    $0x40,%eax$/;"	l
c01015de	obj/kernel.asm	/^c01015de:	85 c0                	test   %eax,%eax$/;"	l
c01015e0	obj/kernel.asm	/^c01015e0:	74 11                	je     c01015f3 <kbd_proc_data+0xce>$/;"	l
c01015e2	obj/kernel.asm	/^c01015e2:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c01015e6	obj/kernel.asm	/^c01015e6:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c01015eb	obj/kernel.asm	/^c01015eb:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c01015ee	obj/kernel.asm	/^c01015ee:	a3 a8 c5 19 c0       	mov    %eax,0xc019c5a8$/;"	l
c01015f3	obj/kernel.asm	/^c01015f3:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01015f7	obj/kernel.asm	/^c01015f7:	0f b6 80 60 a0 12 c0 	movzbl -0x3fed5fa0(%eax),%eax$/;"	l
c01015fe	obj/kernel.asm	/^c01015fe:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101601	obj/kernel.asm	/^c0101601:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c0101606	obj/kernel.asm	/^c0101606:	09 d0                	or     %edx,%eax$/;"	l
c0101608	obj/kernel.asm	/^c0101608:	a3 a8 c5 19 c0       	mov    %eax,0xc019c5a8$/;"	l
c010160d	obj/kernel.asm	/^c010160d:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101611	obj/kernel.asm	/^c0101611:	0f b6 80 60 a1 12 c0 	movzbl -0x3fed5ea0(%eax),%eax$/;"	l
c0101618	obj/kernel.asm	/^c0101618:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010161b	obj/kernel.asm	/^c010161b:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c0101620	obj/kernel.asm	/^c0101620:	31 d0                	xor    %edx,%eax$/;"	l
c0101622	obj/kernel.asm	/^c0101622:	a3 a8 c5 19 c0       	mov    %eax,0xc019c5a8$/;"	l
c0101627	obj/kernel.asm	/^c0101627:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c010162c	obj/kernel.asm	/^c010162c:	83 e0 03             	and    $0x3,%eax$/;"	l
c010162f	obj/kernel.asm	/^c010162f:	8b 14 85 60 a5 12 c0 	mov    -0x3fed5aa0(,%eax,4),%edx$/;"	l
c0101636	obj/kernel.asm	/^c0101636:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010163a	obj/kernel.asm	/^c010163a:	01 d0                	add    %edx,%eax$/;"	l
c010163c	obj/kernel.asm	/^c010163c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010163f	obj/kernel.asm	/^c010163f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101642	obj/kernel.asm	/^c0101642:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101645	obj/kernel.asm	/^c0101645:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c010164a	obj/kernel.asm	/^c010164a:	83 e0 08             	and    $0x8,%eax$/;"	l
c010164d	obj/kernel.asm	/^c010164d:	85 c0                	test   %eax,%eax$/;"	l
c010164f	obj/kernel.asm	/^c010164f:	74 22                	je     c0101673 <kbd_proc_data+0x14e>$/;"	l
c0101651	obj/kernel.asm	/^c0101651:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0101655	obj/kernel.asm	/^c0101655:	7e 0c                	jle    c0101663 <kbd_proc_data+0x13e>$/;"	l
c0101657	obj/kernel.asm	/^c0101657:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c010165b	obj/kernel.asm	/^c010165b:	7f 06                	jg     c0101663 <kbd_proc_data+0x13e>$/;"	l
c010165d	obj/kernel.asm	/^c010165d:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c0101661	obj/kernel.asm	/^c0101661:	eb 10                	jmp    c0101673 <kbd_proc_data+0x14e>$/;"	l
c0101663	obj/kernel.asm	/^c0101663:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0101667	obj/kernel.asm	/^c0101667:	7e 0a                	jle    c0101673 <kbd_proc_data+0x14e>$/;"	l
c0101669	obj/kernel.asm	/^c0101669:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c010166d	obj/kernel.asm	/^c010166d:	7f 04                	jg     c0101673 <kbd_proc_data+0x14e>$/;"	l
c010166f	obj/kernel.asm	/^c010166f:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101673	obj/kernel.asm	/^c0101673:	a1 a8 c5 19 c0       	mov    0xc019c5a8,%eax$/;"	l
c0101678	obj/kernel.asm	/^c0101678:	f7 d0                	not    %eax$/;"	l
c010167a	obj/kernel.asm	/^c010167a:	83 e0 06             	and    $0x6,%eax$/;"	l
c010167d	obj/kernel.asm	/^c010167d:	85 c0                	test   %eax,%eax$/;"	l
c010167f	obj/kernel.asm	/^c010167f:	75 28                	jne    c01016a9 <kbd_proc_data+0x184>$/;"	l
c0101681	obj/kernel.asm	/^c0101681:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c0101688	obj/kernel.asm	/^c0101688:	75 1f                	jne    c01016a9 <kbd_proc_data+0x184>$/;"	l
c010168a	obj/kernel.asm	/^c010168a:	c7 04 24 7d bf 10 c0 	movl   $0xc010bf7d,(%esp)$/;"	l
c0101691	obj/kernel.asm	/^c0101691:	e8 bd ec ff ff       	call   c0100353 <cprintf>$/;"	l
c0101696	obj/kernel.asm	/^c0101696:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c010169c	obj/kernel.asm	/^c010169c:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c01016a0	obj/kernel.asm	/^c01016a0:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c01016a4	obj/kernel.asm	/^c01016a4:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c01016a8	obj/kernel.asm	/^c01016a8:	ee                   	out    %al,(%dx)$/;"	l
c01016a9	obj/kernel.asm	/^c01016a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01016ac	obj/kernel.asm	/^c01016ac:	c9                   	leave  $/;"	l
c01016ad	obj/kernel.asm	/^c01016ad:	c3                   	ret    $/;"	l
c01016ae	obj/kernel.asm	/^c01016ae <kbd_intr>:$/;"	l
c01016ae	obj/kernel.asm	/^c01016ae:	55                   	push   %ebp$/;"	l
c01016af	obj/kernel.asm	/^c01016af:	89 e5                	mov    %esp,%ebp$/;"	l
c01016b1	obj/kernel.asm	/^c01016b1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01016b4	obj/kernel.asm	/^c01016b4:	c7 04 24 25 15 10 c0 	movl   $0xc0101525,(%esp)$/;"	l
c01016bb	obj/kernel.asm	/^c01016bb:	e8 a6 fd ff ff       	call   c0101466 <cons_intr>$/;"	l
c01016c0	obj/kernel.asm	/^c01016c0:	c9                   	leave  $/;"	l
c01016c1	obj/kernel.asm	/^c01016c1:	c3                   	ret    $/;"	l
c01016c2	obj/kernel.asm	/^c01016c2 <kbd_init>:$/;"	l
c01016c2	obj/kernel.asm	/^c01016c2:	55                   	push   %ebp$/;"	l
c01016c3	obj/kernel.asm	/^c01016c3:	89 e5                	mov    %esp,%ebp$/;"	l
c01016c5	obj/kernel.asm	/^c01016c5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01016c8	obj/kernel.asm	/^c01016c8:	e8 e1 ff ff ff       	call   c01016ae <kbd_intr>$/;"	l
c01016cd	obj/kernel.asm	/^c01016cd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01016d4	obj/kernel.asm	/^c01016d4:	e8 b2 09 00 00       	call   c010208b <pic_enable>$/;"	l
c01016d9	obj/kernel.asm	/^c01016d9:	c9                   	leave  $/;"	l
c01016da	obj/kernel.asm	/^c01016da:	c3                   	ret    $/;"	l
c01016db	obj/kernel.asm	/^c01016db <cons_init>:$/;"	l
c01016db	obj/kernel.asm	/^c01016db:	55                   	push   %ebp$/;"	l
c01016dc	obj/kernel.asm	/^c01016dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01016de	obj/kernel.asm	/^c01016de:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01016e1	obj/kernel.asm	/^c01016e1:	e8 93 f8 ff ff       	call   c0100f79 <cga_init>$/;"	l
c01016e6	obj/kernel.asm	/^c01016e6:	e8 74 f9 ff ff       	call   c010105f <serial_init>$/;"	l
c01016eb	obj/kernel.asm	/^c01016eb:	e8 d2 ff ff ff       	call   c01016c2 <kbd_init>$/;"	l
c01016f0	obj/kernel.asm	/^c01016f0:	a1 88 c3 19 c0       	mov    0xc019c388,%eax$/;"	l
c01016f5	obj/kernel.asm	/^c01016f5:	85 c0                	test   %eax,%eax$/;"	l
c01016f7	obj/kernel.asm	/^c01016f7:	75 0c                	jne    c0101705 <cons_init+0x2a>$/;"	l
c01016f9	obj/kernel.asm	/^c01016f9:	c7 04 24 89 bf 10 c0 	movl   $0xc010bf89,(%esp)$/;"	l
c0101700	obj/kernel.asm	/^c0101700:	e8 4e ec ff ff       	call   c0100353 <cprintf>$/;"	l
c0101705	obj/kernel.asm	/^c0101705:	c9                   	leave  $/;"	l
c0101706	obj/kernel.asm	/^c0101706:	c3                   	ret    $/;"	l
c0101707	obj/kernel.asm	/^c0101707 <cons_putc>:$/;"	l
c0101707	obj/kernel.asm	/^c0101707:	55                   	push   %ebp$/;"	l
c0101708	obj/kernel.asm	/^c0101708:	89 e5                	mov    %esp,%ebp$/;"	l
c010170a	obj/kernel.asm	/^c010170a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010170d	obj/kernel.asm	/^c010170d:	e8 e2 f7 ff ff       	call   c0100ef4 <__intr_save>$/;"	l
c0101712	obj/kernel.asm	/^c0101712:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101715	obj/kernel.asm	/^c0101715:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101718	obj/kernel.asm	/^c0101718:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010171b	obj/kernel.asm	/^c010171b:	e8 9b fa ff ff       	call   c01011bb <lpt_putc>$/;"	l
c0101720	obj/kernel.asm	/^c0101720:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101723	obj/kernel.asm	/^c0101723:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101726	obj/kernel.asm	/^c0101726:	e8 cf fa ff ff       	call   c01011fa <cga_putc>$/;"	l
c010172b	obj/kernel.asm	/^c010172b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010172e	obj/kernel.asm	/^c010172e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101731	obj/kernel.asm	/^c0101731:	e8 f1 fc ff ff       	call   c0101427 <serial_putc>$/;"	l
c0101736	obj/kernel.asm	/^c0101736:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101739	obj/kernel.asm	/^c0101739:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010173c	obj/kernel.asm	/^c010173c:	e8 dd f7 ff ff       	call   c0100f1e <__intr_restore>$/;"	l
c0101741	obj/kernel.asm	/^c0101741:	c9                   	leave  $/;"	l
c0101742	obj/kernel.asm	/^c0101742:	c3                   	ret    $/;"	l
c0101743	obj/kernel.asm	/^c0101743 <cons_getc>:$/;"	l
c0101743	obj/kernel.asm	/^c0101743:	55                   	push   %ebp$/;"	l
c0101744	obj/kernel.asm	/^c0101744:	89 e5                	mov    %esp,%ebp$/;"	l
c0101746	obj/kernel.asm	/^c0101746:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101749	obj/kernel.asm	/^c0101749:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101750	obj/kernel.asm	/^c0101750:	e8 9f f7 ff ff       	call   c0100ef4 <__intr_save>$/;"	l
c0101755	obj/kernel.asm	/^c0101755:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101758	obj/kernel.asm	/^c0101758:	e8 ab fd ff ff       	call   c0101508 <serial_intr>$/;"	l
c010175d	obj/kernel.asm	/^c010175d:	e8 4c ff ff ff       	call   c01016ae <kbd_intr>$/;"	l
c0101762	obj/kernel.asm	/^c0101762:	8b 15 a0 c5 19 c0    	mov    0xc019c5a0,%edx$/;"	l
c0101768	obj/kernel.asm	/^c0101768:	a1 a4 c5 19 c0       	mov    0xc019c5a4,%eax$/;"	l
c010176d	obj/kernel.asm	/^c010176d:	39 c2                	cmp    %eax,%edx$/;"	l
c010176f	obj/kernel.asm	/^c010176f:	74 31                	je     c01017a2 <cons_getc+0x5f>$/;"	l
c0101771	obj/kernel.asm	/^c0101771:	a1 a0 c5 19 c0       	mov    0xc019c5a0,%eax$/;"	l
c0101776	obj/kernel.asm	/^c0101776:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101779	obj/kernel.asm	/^c0101779:	89 15 a0 c5 19 c0    	mov    %edx,0xc019c5a0$/;"	l
c010177f	obj/kernel.asm	/^c010177f:	0f b6 80 a0 c3 19 c0 	movzbl -0x3fe63c60(%eax),%eax$/;"	l
c0101786	obj/kernel.asm	/^c0101786:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101789	obj/kernel.asm	/^c0101789:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010178c	obj/kernel.asm	/^c010178c:	a1 a0 c5 19 c0       	mov    0xc019c5a0,%eax$/;"	l
c0101791	obj/kernel.asm	/^c0101791:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101796	obj/kernel.asm	/^c0101796:	75 0a                	jne    c01017a2 <cons_getc+0x5f>$/;"	l
c0101798	obj/kernel.asm	/^c0101798:	c7 05 a0 c5 19 c0 00 	movl   $0x0,0xc019c5a0$/;"	l
c010179f	obj/kernel.asm	/^c010179f:	00 00 00 $/;"	l
c01017a2	obj/kernel.asm	/^c01017a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01017a5	obj/kernel.asm	/^c01017a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01017a8	obj/kernel.asm	/^c01017a8:	e8 71 f7 ff ff       	call   c0100f1e <__intr_restore>$/;"	l
c01017ad	obj/kernel.asm	/^c01017ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01017b0	obj/kernel.asm	/^c01017b0:	c9                   	leave  $/;"	l
c01017b1	obj/kernel.asm	/^c01017b1:	c3                   	ret    $/;"	l
c01017b2	obj/kernel.asm	/^c01017b2 <ide_wait_ready>:$/;"	l
c01017b2	obj/kernel.asm	/^c01017b2:	55                   	push   %ebp$/;"	l
c01017b3	obj/kernel.asm	/^c01017b3:	89 e5                	mov    %esp,%ebp$/;"	l
c01017b5	obj/kernel.asm	/^c01017b5:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01017b8	obj/kernel.asm	/^c01017b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01017bb	obj/kernel.asm	/^c01017bb:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c01017bf	obj/kernel.asm	/^c01017bf:	90                   	nop$/;"	l
c01017c0	obj/kernel.asm	/^c01017c0:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01017c4	obj/kernel.asm	/^c01017c4:	83 c0 07             	add    $0x7,%eax$/;"	l
c01017c7	obj/kernel.asm	/^c01017c7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01017ca	obj/kernel.asm	/^c01017ca:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01017ce	obj/kernel.asm	/^c01017ce:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01017d2	obj/kernel.asm	/^c01017d2:	89 c2                	mov    %eax,%edx$/;"	l
c01017d4	obj/kernel.asm	/^c01017d4:	ec                   	in     (%dx),%al$/;"	l
c01017d5	obj/kernel.asm	/^c01017d5:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01017d8	obj/kernel.asm	/^c01017d8:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01017dc	obj/kernel.asm	/^c01017dc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01017df	obj/kernel.asm	/^c01017df:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01017e2	obj/kernel.asm	/^c01017e2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01017e5	obj/kernel.asm	/^c01017e5:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c01017ea	obj/kernel.asm	/^c01017ea:	85 c0                	test   %eax,%eax$/;"	l
c01017ec	obj/kernel.asm	/^c01017ec:	75 d2                	jne    c01017c0 <ide_wait_ready+0xe>$/;"	l
c01017ee	obj/kernel.asm	/^c01017ee:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01017f2	obj/kernel.asm	/^c01017f2:	74 11                	je     c0101805 <ide_wait_ready+0x53>$/;"	l
c01017f4	obj/kernel.asm	/^c01017f4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01017f7	obj/kernel.asm	/^c01017f7:	83 e0 21             	and    $0x21,%eax$/;"	l
c01017fa	obj/kernel.asm	/^c01017fa:	85 c0                	test   %eax,%eax$/;"	l
c01017fc	obj/kernel.asm	/^c01017fc:	74 07                	je     c0101805 <ide_wait_ready+0x53>$/;"	l
c01017fe	obj/kernel.asm	/^c01017fe:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101803	obj/kernel.asm	/^c0101803:	eb 05                	jmp    c010180a <ide_wait_ready+0x58>$/;"	l
c0101805	obj/kernel.asm	/^c0101805:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010180a	obj/kernel.asm	/^c010180a:	c9                   	leave  $/;"	l
c010180b	obj/kernel.asm	/^c010180b:	c3                   	ret    $/;"	l
c010180c	obj/kernel.asm	/^c010180c <ide_init>:$/;"	l
c010180c	obj/kernel.asm	/^c010180c:	55                   	push   %ebp$/;"	l
c010180d	obj/kernel.asm	/^c010180d:	89 e5                	mov    %esp,%ebp$/;"	l
c010180f	obj/kernel.asm	/^c010180f:	57                   	push   %edi$/;"	l
c0101810	obj/kernel.asm	/^c0101810:	53                   	push   %ebx$/;"	l
c0101811	obj/kernel.asm	/^c0101811:	81 ec 50 02 00 00    	sub    $0x250,%esp$/;"	l
c0101817	obj/kernel.asm	/^c0101817:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c010181d	obj/kernel.asm	/^c010181d:	e9 d6 02 00 00       	jmp    c0101af8 <ide_init+0x2ec>$/;"	l
c0101822	obj/kernel.asm	/^c0101822:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101826	obj/kernel.asm	/^c0101826:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101829	obj/kernel.asm	/^c0101829:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101830	obj/kernel.asm	/^c0101830:	29 c2                	sub    %eax,%edx$/;"	l
c0101832	obj/kernel.asm	/^c0101832:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101838	obj/kernel.asm	/^c0101838:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010183b	obj/kernel.asm	/^c010183b:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010183f	obj/kernel.asm	/^c010183f:	66 d1 e8             	shr    %ax$/;"	l
c0101842	obj/kernel.asm	/^c0101842:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101845	obj/kernel.asm	/^c0101845:	0f b7 04 85 a8 bf 10 	movzwl -0x3fef4058(,%eax,4),%eax$/;"	l
c010184c	obj/kernel.asm	/^c010184c:	c0 $/;"	l
c010184d	obj/kernel.asm	/^c010184d:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101851	obj/kernel.asm	/^c0101851:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101855	obj/kernel.asm	/^c0101855:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010185c	obj/kernel.asm	/^c010185c:	00 $/;"	l
c010185d	obj/kernel.asm	/^c010185d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101860	obj/kernel.asm	/^c0101860:	e8 4d ff ff ff       	call   c01017b2 <ide_wait_ready>$/;"	l
c0101865	obj/kernel.asm	/^c0101865:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101869	obj/kernel.asm	/^c0101869:	83 e0 01             	and    $0x1,%eax$/;"	l
c010186c	obj/kernel.asm	/^c010186c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c010186f	obj/kernel.asm	/^c010186f:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101872	obj/kernel.asm	/^c0101872:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101875	obj/kernel.asm	/^c0101875:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101879	obj/kernel.asm	/^c0101879:	83 c2 06             	add    $0x6,%edx$/;"	l
c010187c	obj/kernel.asm	/^c010187c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010187f	obj/kernel.asm	/^c010187f:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0101883	obj/kernel.asm	/^c0101883:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101886	obj/kernel.asm	/^c0101886:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c010188a	obj/kernel.asm	/^c010188a:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c010188e	obj/kernel.asm	/^c010188e:	ee                   	out    %al,(%dx)$/;"	l
c010188f	obj/kernel.asm	/^c010188f:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101893	obj/kernel.asm	/^c0101893:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010189a	obj/kernel.asm	/^c010189a:	00 $/;"	l
c010189b	obj/kernel.asm	/^c010189b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010189e	obj/kernel.asm	/^c010189e:	e8 0f ff ff ff       	call   c01017b2 <ide_wait_ready>$/;"	l
c01018a3	obj/kernel.asm	/^c01018a3:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01018a7	obj/kernel.asm	/^c01018a7:	83 c0 07             	add    $0x7,%eax$/;"	l
c01018aa	obj/kernel.asm	/^c01018aa:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018ad	obj/kernel.asm	/^c01018ad:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c01018b1	obj/kernel.asm	/^c01018b1:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c01018b5	obj/kernel.asm	/^c01018b5:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01018b9	obj/kernel.asm	/^c01018b9:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01018bd	obj/kernel.asm	/^c01018bd:	ee                   	out    %al,(%dx)$/;"	l
c01018be	obj/kernel.asm	/^c01018be:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01018c2	obj/kernel.asm	/^c01018c2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01018c9	obj/kernel.asm	/^c01018c9:	00 $/;"	l
c01018ca	obj/kernel.asm	/^c01018ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01018cd	obj/kernel.asm	/^c01018cd:	e8 e0 fe ff ff       	call   c01017b2 <ide_wait_ready>$/;"	l
c01018d2	obj/kernel.asm	/^c01018d2:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01018d6	obj/kernel.asm	/^c01018d6:	83 c0 07             	add    $0x7,%eax$/;"	l
c01018d9	obj/kernel.asm	/^c01018d9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018dc	obj/kernel.asm	/^c01018dc:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c01018e0	obj/kernel.asm	/^c01018e0:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c01018e4	obj/kernel.asm	/^c01018e4:	89 c2                	mov    %eax,%edx$/;"	l
c01018e6	obj/kernel.asm	/^c01018e6:	ec                   	in     (%dx),%al$/;"	l
c01018e7	obj/kernel.asm	/^c01018e7:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c01018ea	obj/kernel.asm	/^c01018ea:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c01018ee	obj/kernel.asm	/^c01018ee:	84 c0                	test   %al,%al$/;"	l
c01018f0	obj/kernel.asm	/^c01018f0:	0f 84 f7 01 00 00    	je     c0101aed <ide_init+0x2e1>$/;"	l
c01018f6	obj/kernel.asm	/^c01018f6:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01018fa	obj/kernel.asm	/^c01018fa:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101901	obj/kernel.asm	/^c0101901:	00 $/;"	l
c0101902	obj/kernel.asm	/^c0101902:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101905	obj/kernel.asm	/^c0101905:	e8 a8 fe ff ff       	call   c01017b2 <ide_wait_ready>$/;"	l
c010190a	obj/kernel.asm	/^c010190a:	85 c0                	test   %eax,%eax$/;"	l
c010190c	obj/kernel.asm	/^c010190c:	0f 85 db 01 00 00    	jne    c0101aed <ide_init+0x2e1>$/;"	l
c0101912	obj/kernel.asm	/^c0101912:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101916	obj/kernel.asm	/^c0101916:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101919	obj/kernel.asm	/^c0101919:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101920	obj/kernel.asm	/^c0101920:	29 c2                	sub    %eax,%edx$/;"	l
c0101922	obj/kernel.asm	/^c0101922:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101928	obj/kernel.asm	/^c0101928:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c010192b	obj/kernel.asm	/^c010192b:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c010192f	obj/kernel.asm	/^c010192f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0101932	obj/kernel.asm	/^c0101932:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0101938	obj/kernel.asm	/^c0101938:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010193b	obj/kernel.asm	/^c010193b:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0101942	obj/kernel.asm	/^c0101942:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0101945	obj/kernel.asm	/^c0101945:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c0101948	obj/kernel.asm	/^c0101948:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010194b	obj/kernel.asm	/^c010194b:	89 cb                	mov    %ecx,%ebx$/;"	l
c010194d	obj/kernel.asm	/^c010194d:	89 df                	mov    %ebx,%edi$/;"	l
c010194f	obj/kernel.asm	/^c010194f:	89 c1                	mov    %eax,%ecx$/;"	l
c0101951	obj/kernel.asm	/^c0101951:	fc                   	cld    $/;"	l
c0101952	obj/kernel.asm	/^c0101952:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101954	obj/kernel.asm	/^c0101954:	89 c8                	mov    %ecx,%eax$/;"	l
c0101956	obj/kernel.asm	/^c0101956:	89 fb                	mov    %edi,%ebx$/;"	l
c0101958	obj/kernel.asm	/^c0101958:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c010195b	obj/kernel.asm	/^c010195b:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010195e	obj/kernel.asm	/^c010195e:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0101964	obj/kernel.asm	/^c0101964:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0101967	obj/kernel.asm	/^c0101967:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010196a	obj/kernel.asm	/^c010196a:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0101970	obj/kernel.asm	/^c0101970:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0101973	obj/kernel.asm	/^c0101973:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101976	obj/kernel.asm	/^c0101976:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c010197b	obj/kernel.asm	/^c010197b:	85 c0                	test   %eax,%eax$/;"	l
c010197d	obj/kernel.asm	/^c010197d:	74 0e                	je     c010198d <ide_init+0x181>$/;"	l
c010197f	obj/kernel.asm	/^c010197f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101982	obj/kernel.asm	/^c0101982:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c0101988	obj/kernel.asm	/^c0101988:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010198b	obj/kernel.asm	/^c010198b:	eb 09                	jmp    c0101996 <ide_init+0x18a>$/;"	l
c010198d	obj/kernel.asm	/^c010198d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101990	obj/kernel.asm	/^c0101990:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0101993	obj/kernel.asm	/^c0101993:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101996	obj/kernel.asm	/^c0101996:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010199a	obj/kernel.asm	/^c010199a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010199d	obj/kernel.asm	/^c010199d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01019a4	obj/kernel.asm	/^c01019a4:	29 c2                	sub    %eax,%edx$/;"	l
c01019a6	obj/kernel.asm	/^c01019a6:	81 c2 c0 c5 19 c0    	add    $0xc019c5c0,%edx$/;"	l
c01019ac	obj/kernel.asm	/^c01019ac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01019af	obj/kernel.asm	/^c01019af:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c01019b2	obj/kernel.asm	/^c01019b2:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01019b6	obj/kernel.asm	/^c01019b6:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01019b9	obj/kernel.asm	/^c01019b9:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01019c0	obj/kernel.asm	/^c01019c0:	29 c2                	sub    %eax,%edx$/;"	l
c01019c2	obj/kernel.asm	/^c01019c2:	81 c2 c0 c5 19 c0    	add    $0xc019c5c0,%edx$/;"	l
c01019c8	obj/kernel.asm	/^c01019c8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01019cb	obj/kernel.asm	/^c01019cb:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c01019ce	obj/kernel.asm	/^c01019ce:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01019d1	obj/kernel.asm	/^c01019d1:	83 c0 62             	add    $0x62,%eax$/;"	l
c01019d4	obj/kernel.asm	/^c01019d4:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01019d7	obj/kernel.asm	/^c01019d7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019da	obj/kernel.asm	/^c01019da:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01019df	obj/kernel.asm	/^c01019df:	85 c0                	test   %eax,%eax$/;"	l
c01019e1	obj/kernel.asm	/^c01019e1:	75 24                	jne    c0101a07 <ide_init+0x1fb>$/;"	l
c01019e3	obj/kernel.asm	/^c01019e3:	c7 44 24 0c b0 bf 10 	movl   $0xc010bfb0,0xc(%esp)$/;"	l
c01019ea	obj/kernel.asm	/^c01019ea:	c0 $/;"	l
c01019eb	obj/kernel.asm	/^c01019eb:	c7 44 24 08 f3 bf 10 	movl   $0xc010bff3,0x8(%esp)$/;"	l
c01019f2	obj/kernel.asm	/^c01019f2:	c0 $/;"	l
c01019f3	obj/kernel.asm	/^c01019f3:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c01019fa	obj/kernel.asm	/^c01019fa:	00 $/;"	l
c01019fb	obj/kernel.asm	/^c01019fb:	c7 04 24 08 c0 10 c0 	movl   $0xc010c008,(%esp)$/;"	l
c0101a02	obj/kernel.asm	/^c0101a02:	e8 ce f3 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0101a07	obj/kernel.asm	/^c0101a07:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101a0b	obj/kernel.asm	/^c0101a0b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101a0e	obj/kernel.asm	/^c0101a0e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101a15	obj/kernel.asm	/^c0101a15:	29 c2                	sub    %eax,%edx$/;"	l
c0101a17	obj/kernel.asm	/^c0101a17:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101a1d	obj/kernel.asm	/^c0101a1d:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0101a20	obj/kernel.asm	/^c0101a20:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0101a23	obj/kernel.asm	/^c0101a23:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101a26	obj/kernel.asm	/^c0101a26:	83 c0 36             	add    $0x36,%eax$/;"	l
c0101a29	obj/kernel.asm	/^c0101a29:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0101a2c	obj/kernel.asm	/^c0101a2c:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0101a33	obj/kernel.asm	/^c0101a33:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0101a3a	obj/kernel.asm	/^c0101a3a:	eb 34                	jmp    c0101a70 <ide_init+0x264>$/;"	l
c0101a3c	obj/kernel.asm	/^c0101a3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a3f	obj/kernel.asm	/^c0101a3f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101a42	obj/kernel.asm	/^c0101a42:	01 c2                	add    %eax,%edx$/;"	l
c0101a44	obj/kernel.asm	/^c0101a44:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a47	obj/kernel.asm	/^c0101a47:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0101a4a	obj/kernel.asm	/^c0101a4a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0101a4d	obj/kernel.asm	/^c0101a4d:	01 c8                	add    %ecx,%eax$/;"	l
c0101a4f	obj/kernel.asm	/^c0101a4f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101a52	obj/kernel.asm	/^c0101a52:	88 02                	mov    %al,(%edx)$/;"	l
c0101a54	obj/kernel.asm	/^c0101a54:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a57	obj/kernel.asm	/^c0101a57:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101a5a	obj/kernel.asm	/^c0101a5a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101a5d	obj/kernel.asm	/^c0101a5d:	01 c2                	add    %eax,%edx$/;"	l
c0101a5f	obj/kernel.asm	/^c0101a5f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a62	obj/kernel.asm	/^c0101a62:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101a65	obj/kernel.asm	/^c0101a65:	01 c8                	add    %ecx,%eax$/;"	l
c0101a67	obj/kernel.asm	/^c0101a67:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101a6a	obj/kernel.asm	/^c0101a6a:	88 02                	mov    %al,(%edx)$/;"	l
c0101a6c	obj/kernel.asm	/^c0101a6c:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c0101a70	obj/kernel.asm	/^c0101a70:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a73	obj/kernel.asm	/^c0101a73:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0101a76	obj/kernel.asm	/^c0101a76:	72 c4                	jb     c0101a3c <ide_init+0x230>$/;"	l
c0101a78	obj/kernel.asm	/^c0101a78:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a7b	obj/kernel.asm	/^c0101a7b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101a7e	obj/kernel.asm	/^c0101a7e:	01 d0                	add    %edx,%eax$/;"	l
c0101a80	obj/kernel.asm	/^c0101a80:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101a83	obj/kernel.asm	/^c0101a83:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a86	obj/kernel.asm	/^c0101a86:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0101a89	obj/kernel.asm	/^c0101a89:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0101a8c	obj/kernel.asm	/^c0101a8c:	85 c0                	test   %eax,%eax$/;"	l
c0101a8e	obj/kernel.asm	/^c0101a8e:	74 0f                	je     c0101a9f <ide_init+0x293>$/;"	l
c0101a90	obj/kernel.asm	/^c0101a90:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a93	obj/kernel.asm	/^c0101a93:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101a96	obj/kernel.asm	/^c0101a96:	01 d0                	add    %edx,%eax$/;"	l
c0101a98	obj/kernel.asm	/^c0101a98:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101a9b	obj/kernel.asm	/^c0101a9b:	3c 20                	cmp    $0x20,%al$/;"	l
c0101a9d	obj/kernel.asm	/^c0101a9d:	74 d9                	je     c0101a78 <ide_init+0x26c>$/;"	l
c0101a9f	obj/kernel.asm	/^c0101a9f:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101aa3	obj/kernel.asm	/^c0101aa3:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101aa6	obj/kernel.asm	/^c0101aa6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101aad	obj/kernel.asm	/^c0101aad:	29 c2                	sub    %eax,%edx$/;"	l
c0101aaf	obj/kernel.asm	/^c0101aaf:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101ab5	obj/kernel.asm	/^c0101ab5:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c0101ab8	obj/kernel.asm	/^c0101ab8:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101abc	obj/kernel.asm	/^c0101abc:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101abf	obj/kernel.asm	/^c0101abf:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101ac6	obj/kernel.asm	/^c0101ac6:	29 c2                	sub    %eax,%edx$/;"	l
c0101ac8	obj/kernel.asm	/^c0101ac8:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101ace	obj/kernel.asm	/^c0101ace:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0101ad1	obj/kernel.asm	/^c0101ad1:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101ad5	obj/kernel.asm	/^c0101ad5:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0101ad9	obj/kernel.asm	/^c0101ad9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0101add	obj/kernel.asm	/^c0101add:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101ae1	obj/kernel.asm	/^c0101ae1:	c7 04 24 1a c0 10 c0 	movl   $0xc010c01a,(%esp)$/;"	l
c0101ae8	obj/kernel.asm	/^c0101ae8:	e8 66 e8 ff ff       	call   c0100353 <cprintf>$/;"	l
c0101aed	obj/kernel.asm	/^c0101aed:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101af1	obj/kernel.asm	/^c0101af1:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101af4	obj/kernel.asm	/^c0101af4:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c0101af8	obj/kernel.asm	/^c0101af8:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c0101afd	obj/kernel.asm	/^c0101afd:	0f 86 1f fd ff ff    	jbe    c0101822 <ide_init+0x16>$/;"	l
c0101b03	obj/kernel.asm	/^c0101b03:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)$/;"	l
c0101b0a	obj/kernel.asm	/^c0101b0a:	e8 7c 05 00 00       	call   c010208b <pic_enable>$/;"	l
c0101b0f	obj/kernel.asm	/^c0101b0f:	c7 04 24 0f 00 00 00 	movl   $0xf,(%esp)$/;"	l
c0101b16	obj/kernel.asm	/^c0101b16:	e8 70 05 00 00       	call   c010208b <pic_enable>$/;"	l
c0101b1b	obj/kernel.asm	/^c0101b1b:	81 c4 50 02 00 00    	add    $0x250,%esp$/;"	l
c0101b21	obj/kernel.asm	/^c0101b21:	5b                   	pop    %ebx$/;"	l
c0101b22	obj/kernel.asm	/^c0101b22:	5f                   	pop    %edi$/;"	l
c0101b23	obj/kernel.asm	/^c0101b23:	5d                   	pop    %ebp$/;"	l
c0101b24	obj/kernel.asm	/^c0101b24:	c3                   	ret    $/;"	l
c0101b25	obj/kernel.asm	/^c0101b25 <ide_device_valid>:$/;"	l
c0101b25	obj/kernel.asm	/^c0101b25:	55                   	push   %ebp$/;"	l
c0101b26	obj/kernel.asm	/^c0101b26:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b28	obj/kernel.asm	/^c0101b28:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101b2b	obj/kernel.asm	/^c0101b2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101b2e	obj/kernel.asm	/^c0101b2e:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101b32	obj/kernel.asm	/^c0101b32:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c0101b37	obj/kernel.asm	/^c0101b37:	77 24                	ja     c0101b5d <ide_device_valid+0x38>$/;"	l
c0101b39	obj/kernel.asm	/^c0101b39:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101b3d	obj/kernel.asm	/^c0101b3d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101b40	obj/kernel.asm	/^c0101b40:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101b47	obj/kernel.asm	/^c0101b47:	29 c2                	sub    %eax,%edx$/;"	l
c0101b49	obj/kernel.asm	/^c0101b49:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101b4f	obj/kernel.asm	/^c0101b4f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b52	obj/kernel.asm	/^c0101b52:	84 c0                	test   %al,%al$/;"	l
c0101b54	obj/kernel.asm	/^c0101b54:	74 07                	je     c0101b5d <ide_device_valid+0x38>$/;"	l
c0101b56	obj/kernel.asm	/^c0101b56:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101b5b	obj/kernel.asm	/^c0101b5b:	eb 05                	jmp    c0101b62 <ide_device_valid+0x3d>$/;"	l
c0101b5d	obj/kernel.asm	/^c0101b5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101b62	obj/kernel.asm	/^c0101b62:	c9                   	leave  $/;"	l
c0101b63	obj/kernel.asm	/^c0101b63:	c3                   	ret    $/;"	l
c0101b64	obj/kernel.asm	/^c0101b64 <ide_device_size>:$/;"	l
c0101b64	obj/kernel.asm	/^c0101b64:	55                   	push   %ebp$/;"	l
c0101b65	obj/kernel.asm	/^c0101b65:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b67	obj/kernel.asm	/^c0101b67:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101b6a	obj/kernel.asm	/^c0101b6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101b6d	obj/kernel.asm	/^c0101b6d:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101b71	obj/kernel.asm	/^c0101b71:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101b75	obj/kernel.asm	/^c0101b75:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101b78	obj/kernel.asm	/^c0101b78:	e8 a8 ff ff ff       	call   c0101b25 <ide_device_valid>$/;"	l
c0101b7d	obj/kernel.asm	/^c0101b7d:	85 c0                	test   %eax,%eax$/;"	l
c0101b7f	obj/kernel.asm	/^c0101b7f:	74 1b                	je     c0101b9c <ide_device_size+0x38>$/;"	l
c0101b81	obj/kernel.asm	/^c0101b81:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101b85	obj/kernel.asm	/^c0101b85:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101b88	obj/kernel.asm	/^c0101b88:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101b8f	obj/kernel.asm	/^c0101b8f:	29 c2                	sub    %eax,%edx$/;"	l
c0101b91	obj/kernel.asm	/^c0101b91:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101b97	obj/kernel.asm	/^c0101b97:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101b9a	obj/kernel.asm	/^c0101b9a:	eb 05                	jmp    c0101ba1 <ide_device_size+0x3d>$/;"	l
c0101b9c	obj/kernel.asm	/^c0101b9c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101ba1	obj/kernel.asm	/^c0101ba1:	c9                   	leave  $/;"	l
c0101ba2	obj/kernel.asm	/^c0101ba2:	c3                   	ret    $/;"	l
c0101ba3	obj/kernel.asm	/^c0101ba3 <ide_read_secs>:$/;"	l
c0101ba3	obj/kernel.asm	/^c0101ba3:	55                   	push   %ebp$/;"	l
c0101ba4	obj/kernel.asm	/^c0101ba4:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ba6	obj/kernel.asm	/^c0101ba6:	57                   	push   %edi$/;"	l
c0101ba7	obj/kernel.asm	/^c0101ba7:	53                   	push   %ebx$/;"	l
c0101ba8	obj/kernel.asm	/^c0101ba8:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101bab	obj/kernel.asm	/^c0101bab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101bae	obj/kernel.asm	/^c0101bae:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101bb2	obj/kernel.asm	/^c0101bb2:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	77 24                	ja     c0101bdf <ide_read_secs+0x3c>$/;"	l
c0101bbb	obj/kernel.asm	/^c0101bbb:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101bc0	obj/kernel.asm	/^c0101bc0:	77 1d                	ja     c0101bdf <ide_read_secs+0x3c>$/;"	l
c0101bc2	obj/kernel.asm	/^c0101bc2:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101bc6	obj/kernel.asm	/^c0101bc6:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101bc9	obj/kernel.asm	/^c0101bc9:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101bd0	obj/kernel.asm	/^c0101bd0:	29 c2                	sub    %eax,%edx$/;"	l
c0101bd2	obj/kernel.asm	/^c0101bd2:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101bd8	obj/kernel.asm	/^c0101bd8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101bdb	obj/kernel.asm	/^c0101bdb:	84 c0                	test   %al,%al$/;"	l
c0101bdd	obj/kernel.asm	/^c0101bdd:	75 24                	jne    c0101c03 <ide_read_secs+0x60>$/;"	l
c0101bdf	obj/kernel.asm	/^c0101bdf:	c7 44 24 0c 38 c0 10 	movl   $0xc010c038,0xc(%esp)$/;"	l
c0101be6	obj/kernel.asm	/^c0101be6:	c0 $/;"	l
c0101be7	obj/kernel.asm	/^c0101be7:	c7 44 24 08 f3 bf 10 	movl   $0xc010bff3,0x8(%esp)$/;"	l
c0101bee	obj/kernel.asm	/^c0101bee:	c0 $/;"	l
c0101bef	obj/kernel.asm	/^c0101bef:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
c0101bf6	obj/kernel.asm	/^c0101bf6:	00 $/;"	l
c0101bf7	obj/kernel.asm	/^c0101bf7:	c7 04 24 08 c0 10 c0 	movl   $0xc010c008,(%esp)$/;"	l
c0101bfe	obj/kernel.asm	/^c0101bfe:	e8 d2 f1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0101c03	obj/kernel.asm	/^c0101c03:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101c0a	obj/kernel.asm	/^c0101c0a:	77 0f                	ja     c0101c1b <ide_read_secs+0x78>$/;"	l
c0101c0c	obj/kernel.asm	/^c0101c0c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101c0f	obj/kernel.asm	/^c0101c0f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101c12	obj/kernel.asm	/^c0101c12:	01 d0                	add    %edx,%eax$/;"	l
c0101c14	obj/kernel.asm	/^c0101c14:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101c19	obj/kernel.asm	/^c0101c19:	76 24                	jbe    c0101c3f <ide_read_secs+0x9c>$/;"	l
c0101c1b	obj/kernel.asm	/^c0101c1b:	c7 44 24 0c 60 c0 10 	movl   $0xc010c060,0xc(%esp)$/;"	l
c0101c22	obj/kernel.asm	/^c0101c22:	c0 $/;"	l
c0101c23	obj/kernel.asm	/^c0101c23:	c7 44 24 08 f3 bf 10 	movl   $0xc010bff3,0x8(%esp)$/;"	l
c0101c2a	obj/kernel.asm	/^c0101c2a:	c0 $/;"	l
c0101c2b	obj/kernel.asm	/^c0101c2b:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c0101c32	obj/kernel.asm	/^c0101c32:	00 $/;"	l
c0101c33	obj/kernel.asm	/^c0101c33:	c7 04 24 08 c0 10 c0 	movl   $0xc010c008,(%esp)$/;"	l
c0101c3a	obj/kernel.asm	/^c0101c3a:	e8 96 f1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0101c3f	obj/kernel.asm	/^c0101c3f:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101c43	obj/kernel.asm	/^c0101c43:	66 d1 e8             	shr    %ax$/;"	l
c0101c46	obj/kernel.asm	/^c0101c46:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101c49	obj/kernel.asm	/^c0101c49:	0f b7 04 85 a8 bf 10 	movzwl -0x3fef4058(,%eax,4),%eax$/;"	l
c0101c50	obj/kernel.asm	/^c0101c50:	c0 $/;"	l
c0101c51	obj/kernel.asm	/^c0101c51:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101c55	obj/kernel.asm	/^c0101c55:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101c59	obj/kernel.asm	/^c0101c59:	66 d1 e8             	shr    %ax$/;"	l
c0101c5c	obj/kernel.asm	/^c0101c5c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101c5f	obj/kernel.asm	/^c0101c5f:	0f b7 04 85 aa bf 10 	movzwl -0x3fef4056(,%eax,4),%eax$/;"	l
c0101c66	obj/kernel.asm	/^c0101c66:	c0 $/;"	l
c0101c67	obj/kernel.asm	/^c0101c67:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101c6b	obj/kernel.asm	/^c0101c6b:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101c6f	obj/kernel.asm	/^c0101c6f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101c76	obj/kernel.asm	/^c0101c76:	00 $/;"	l
c0101c77	obj/kernel.asm	/^c0101c77:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101c7a	obj/kernel.asm	/^c0101c7a:	e8 33 fb ff ff       	call   c01017b2 <ide_wait_ready>$/;"	l
c0101c7f	obj/kernel.asm	/^c0101c7f:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101c83	obj/kernel.asm	/^c0101c83:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101c86	obj/kernel.asm	/^c0101c86:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101c89	obj/kernel.asm	/^c0101c89:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101c8d	obj/kernel.asm	/^c0101c8d:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101c91	obj/kernel.asm	/^c0101c91:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101c95	obj/kernel.asm	/^c0101c95:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101c99	obj/kernel.asm	/^c0101c99:	ee                   	out    %al,(%dx)$/;"	l
c0101c9a	obj/kernel.asm	/^c0101c9a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101c9d	obj/kernel.asm	/^c0101c9d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ca0	obj/kernel.asm	/^c0101ca0:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101ca4	obj/kernel.asm	/^c0101ca4:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101ca7	obj/kernel.asm	/^c0101ca7:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101caa	obj/kernel.asm	/^c0101caa:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101cae	obj/kernel.asm	/^c0101cae:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101cb1	obj/kernel.asm	/^c0101cb1:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101cb5	obj/kernel.asm	/^c0101cb5:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101cb9	obj/kernel.asm	/^c0101cb9:	ee                   	out    %al,(%dx)$/;"	l
c0101cba	obj/kernel.asm	/^c0101cba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101cbd	obj/kernel.asm	/^c0101cbd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cc0	obj/kernel.asm	/^c0101cc0:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101cc4	obj/kernel.asm	/^c0101cc4:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101cc7	obj/kernel.asm	/^c0101cc7:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101cca	obj/kernel.asm	/^c0101cca:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101cce	obj/kernel.asm	/^c0101cce:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101cd1	obj/kernel.asm	/^c0101cd1:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101cd5	obj/kernel.asm	/^c0101cd5:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101cd9	obj/kernel.asm	/^c0101cd9:	ee                   	out    %al,(%dx)$/;"	l
c0101cda	obj/kernel.asm	/^c0101cda:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101cdd	obj/kernel.asm	/^c0101cdd:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101ce0	obj/kernel.asm	/^c0101ce0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ce3	obj/kernel.asm	/^c0101ce3:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101ce7	obj/kernel.asm	/^c0101ce7:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101cea	obj/kernel.asm	/^c0101cea:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101ced	obj/kernel.asm	/^c0101ced:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101cf1	obj/kernel.asm	/^c0101cf1:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101cf4	obj/kernel.asm	/^c0101cf4:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101cf8	obj/kernel.asm	/^c0101cf8:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101cfc	obj/kernel.asm	/^c0101cfc:	ee                   	out    %al,(%dx)$/;"	l
c0101cfd	obj/kernel.asm	/^c0101cfd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101d00	obj/kernel.asm	/^c0101d00:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101d03	obj/kernel.asm	/^c0101d03:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d06	obj/kernel.asm	/^c0101d06:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101d0a	obj/kernel.asm	/^c0101d0a:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101d0d	obj/kernel.asm	/^c0101d0d:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101d10	obj/kernel.asm	/^c0101d10:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101d14	obj/kernel.asm	/^c0101d14:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101d17	obj/kernel.asm	/^c0101d17:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101d1b	obj/kernel.asm	/^c0101d1b:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101d1f	obj/kernel.asm	/^c0101d1f:	ee                   	out    %al,(%dx)$/;"	l
c0101d20	obj/kernel.asm	/^c0101d20:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101d24	obj/kernel.asm	/^c0101d24:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101d27	obj/kernel.asm	/^c0101d27:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101d2a	obj/kernel.asm	/^c0101d2a:	89 c2                	mov    %eax,%edx$/;"	l
c0101d2c	obj/kernel.asm	/^c0101d2c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101d2f	obj/kernel.asm	/^c0101d2f:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101d32	obj/kernel.asm	/^c0101d32:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101d35	obj/kernel.asm	/^c0101d35:	09 d0                	or     %edx,%eax$/;"	l
c0101d37	obj/kernel.asm	/^c0101d37:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101d3a	obj/kernel.asm	/^c0101d3a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d3d	obj/kernel.asm	/^c0101d3d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101d41	obj/kernel.asm	/^c0101d41:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101d44	obj/kernel.asm	/^c0101d44:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101d47	obj/kernel.asm	/^c0101d47:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101d4b	obj/kernel.asm	/^c0101d4b:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101d4e	obj/kernel.asm	/^c0101d4e:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101d52	obj/kernel.asm	/^c0101d52:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101d56	obj/kernel.asm	/^c0101d56:	ee                   	out    %al,(%dx)$/;"	l
c0101d57	obj/kernel.asm	/^c0101d57:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101d5b	obj/kernel.asm	/^c0101d5b:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101d5e	obj/kernel.asm	/^c0101d5e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101d61	obj/kernel.asm	/^c0101d61:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101d65	obj/kernel.asm	/^c0101d65:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c0101d69	obj/kernel.asm	/^c0101d69:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101d6d	obj/kernel.asm	/^c0101d6d:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101d71	obj/kernel.asm	/^c0101d71:	ee                   	out    %al,(%dx)$/;"	l
c0101d72	obj/kernel.asm	/^c0101d72:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101d79	obj/kernel.asm	/^c0101d79:	eb 5a                	jmp    c0101dd5 <ide_read_secs+0x232>$/;"	l
c0101d7b	obj/kernel.asm	/^c0101d7b:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101d7f	obj/kernel.asm	/^c0101d7f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101d86	obj/kernel.asm	/^c0101d86:	00 $/;"	l
c0101d87	obj/kernel.asm	/^c0101d87:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101d8a	obj/kernel.asm	/^c0101d8a:	e8 23 fa ff ff       	call   c01017b2 <ide_wait_ready>$/;"	l
c0101d8f	obj/kernel.asm	/^c0101d8f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101d92	obj/kernel.asm	/^c0101d92:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101d96	obj/kernel.asm	/^c0101d96:	74 02                	je     c0101d9a <ide_read_secs+0x1f7>$/;"	l
c0101d98	obj/kernel.asm	/^c0101d98:	eb 41                	jmp    c0101ddb <ide_read_secs+0x238>$/;"	l
c0101d9a	obj/kernel.asm	/^c0101d9a:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101d9e	obj/kernel.asm	/^c0101d9e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101da1	obj/kernel.asm	/^c0101da1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101da4	obj/kernel.asm	/^c0101da4:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101da7	obj/kernel.asm	/^c0101da7:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101dae	obj/kernel.asm	/^c0101dae:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101db1	obj/kernel.asm	/^c0101db1:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101db4	obj/kernel.asm	/^c0101db4:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101db7	obj/kernel.asm	/^c0101db7:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101db9	obj/kernel.asm	/^c0101db9:	89 df                	mov    %ebx,%edi$/;"	l
c0101dbb	obj/kernel.asm	/^c0101dbb:	89 c1                	mov    %eax,%ecx$/;"	l
c0101dbd	obj/kernel.asm	/^c0101dbd:	fc                   	cld    $/;"	l
c0101dbe	obj/kernel.asm	/^c0101dbe:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101dc0	obj/kernel.asm	/^c0101dc0:	89 c8                	mov    %ecx,%eax$/;"	l
c0101dc2	obj/kernel.asm	/^c0101dc2:	89 fb                	mov    %edi,%ebx$/;"	l
c0101dc4	obj/kernel.asm	/^c0101dc4:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101dc7	obj/kernel.asm	/^c0101dc7:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101dca	obj/kernel.asm	/^c0101dca:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101dce	obj/kernel.asm	/^c0101dce:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101dd5	obj/kernel.asm	/^c0101dd5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101dd9	obj/kernel.asm	/^c0101dd9:	75 a0                	jne    c0101d7b <ide_read_secs+0x1d8>$/;"	l
c0101ddb	obj/kernel.asm	/^c0101ddb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101dde	obj/kernel.asm	/^c0101dde:	83 c4 50             	add    $0x50,%esp$/;"	l
c0101de1	obj/kernel.asm	/^c0101de1:	5b                   	pop    %ebx$/;"	l
c0101de2	obj/kernel.asm	/^c0101de2:	5f                   	pop    %edi$/;"	l
c0101de3	obj/kernel.asm	/^c0101de3:	5d                   	pop    %ebp$/;"	l
c0101de4	obj/kernel.asm	/^c0101de4:	c3                   	ret    $/;"	l
c0101de5	obj/kernel.asm	/^c0101de5 <ide_write_secs>:$/;"	l
c0101de5	obj/kernel.asm	/^c0101de5:	55                   	push   %ebp$/;"	l
c0101de6	obj/kernel.asm	/^c0101de6:	89 e5                	mov    %esp,%ebp$/;"	l
c0101de8	obj/kernel.asm	/^c0101de8:	56                   	push   %esi$/;"	l
c0101de9	obj/kernel.asm	/^c0101de9:	53                   	push   %ebx$/;"	l
c0101dea	obj/kernel.asm	/^c0101dea:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101ded	obj/kernel.asm	/^c0101ded:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101df0	obj/kernel.asm	/^c0101df0:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101df4	obj/kernel.asm	/^c0101df4:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101dfb	obj/kernel.asm	/^c0101dfb:	77 24                	ja     c0101e21 <ide_write_secs+0x3c>$/;"	l
c0101dfd	obj/kernel.asm	/^c0101dfd:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101e02	obj/kernel.asm	/^c0101e02:	77 1d                	ja     c0101e21 <ide_write_secs+0x3c>$/;"	l
c0101e04	obj/kernel.asm	/^c0101e04:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101e08	obj/kernel.asm	/^c0101e08:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101e0b	obj/kernel.asm	/^c0101e0b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101e12	obj/kernel.asm	/^c0101e12:	29 c2                	sub    %eax,%edx$/;"	l
c0101e14	obj/kernel.asm	/^c0101e14:	8d 82 c0 c5 19 c0    	lea    -0x3fe63a40(%edx),%eax$/;"	l
c0101e1a	obj/kernel.asm	/^c0101e1a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101e1d	obj/kernel.asm	/^c0101e1d:	84 c0                	test   %al,%al$/;"	l
c0101e1f	obj/kernel.asm	/^c0101e1f:	75 24                	jne    c0101e45 <ide_write_secs+0x60>$/;"	l
c0101e21	obj/kernel.asm	/^c0101e21:	c7 44 24 0c 38 c0 10 	movl   $0xc010c038,0xc(%esp)$/;"	l
c0101e28	obj/kernel.asm	/^c0101e28:	c0 $/;"	l
c0101e29	obj/kernel.asm	/^c0101e29:	c7 44 24 08 f3 bf 10 	movl   $0xc010bff3,0x8(%esp)$/;"	l
c0101e30	obj/kernel.asm	/^c0101e30:	c0 $/;"	l
c0101e31	obj/kernel.asm	/^c0101e31:	c7 44 24 04 bc 00 00 	movl   $0xbc,0x4(%esp)$/;"	l
c0101e38	obj/kernel.asm	/^c0101e38:	00 $/;"	l
c0101e39	obj/kernel.asm	/^c0101e39:	c7 04 24 08 c0 10 c0 	movl   $0xc010c008,(%esp)$/;"	l
c0101e40	obj/kernel.asm	/^c0101e40:	e8 90 ef ff ff       	call   c0100dd5 <__panic>$/;"	l
c0101e45	obj/kernel.asm	/^c0101e45:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101e4c	obj/kernel.asm	/^c0101e4c:	77 0f                	ja     c0101e5d <ide_write_secs+0x78>$/;"	l
c0101e4e	obj/kernel.asm	/^c0101e4e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101e51	obj/kernel.asm	/^c0101e51:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101e54	obj/kernel.asm	/^c0101e54:	01 d0                	add    %edx,%eax$/;"	l
c0101e56	obj/kernel.asm	/^c0101e56:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101e5b	obj/kernel.asm	/^c0101e5b:	76 24                	jbe    c0101e81 <ide_write_secs+0x9c>$/;"	l
c0101e5d	obj/kernel.asm	/^c0101e5d:	c7 44 24 0c 60 c0 10 	movl   $0xc010c060,0xc(%esp)$/;"	l
c0101e64	obj/kernel.asm	/^c0101e64:	c0 $/;"	l
c0101e65	obj/kernel.asm	/^c0101e65:	c7 44 24 08 f3 bf 10 	movl   $0xc010bff3,0x8(%esp)$/;"	l
c0101e6c	obj/kernel.asm	/^c0101e6c:	c0 $/;"	l
c0101e6d	obj/kernel.asm	/^c0101e6d:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
c0101e74	obj/kernel.asm	/^c0101e74:	00 $/;"	l
c0101e75	obj/kernel.asm	/^c0101e75:	c7 04 24 08 c0 10 c0 	movl   $0xc010c008,(%esp)$/;"	l
c0101e7c	obj/kernel.asm	/^c0101e7c:	e8 54 ef ff ff       	call   c0100dd5 <__panic>$/;"	l
c0101e81	obj/kernel.asm	/^c0101e81:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101e85	obj/kernel.asm	/^c0101e85:	66 d1 e8             	shr    %ax$/;"	l
c0101e88	obj/kernel.asm	/^c0101e88:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101e8b	obj/kernel.asm	/^c0101e8b:	0f b7 04 85 a8 bf 10 	movzwl -0x3fef4058(,%eax,4),%eax$/;"	l
c0101e92	obj/kernel.asm	/^c0101e92:	c0 $/;"	l
c0101e93	obj/kernel.asm	/^c0101e93:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101e97	obj/kernel.asm	/^c0101e97:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101e9b	obj/kernel.asm	/^c0101e9b:	66 d1 e8             	shr    %ax$/;"	l
c0101e9e	obj/kernel.asm	/^c0101e9e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101ea1	obj/kernel.asm	/^c0101ea1:	0f b7 04 85 aa bf 10 	movzwl -0x3fef4056(,%eax,4),%eax$/;"	l
c0101ea8	obj/kernel.asm	/^c0101ea8:	c0 $/;"	l
c0101ea9	obj/kernel.asm	/^c0101ea9:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101ead	obj/kernel.asm	/^c0101ead:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101eb1	obj/kernel.asm	/^c0101eb1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101eb8	obj/kernel.asm	/^c0101eb8:	00 $/;"	l
c0101eb9	obj/kernel.asm	/^c0101eb9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101ebc	obj/kernel.asm	/^c0101ebc:	e8 f1 f8 ff ff       	call   c01017b2 <ide_wait_ready>$/;"	l
c0101ec1	obj/kernel.asm	/^c0101ec1:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101ec5	obj/kernel.asm	/^c0101ec5:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101ec8	obj/kernel.asm	/^c0101ec8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101ecb	obj/kernel.asm	/^c0101ecb:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101ecf	obj/kernel.asm	/^c0101ecf:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101ed3	obj/kernel.asm	/^c0101ed3:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101ed7	obj/kernel.asm	/^c0101ed7:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101edb	obj/kernel.asm	/^c0101edb:	ee                   	out    %al,(%dx)$/;"	l
c0101edc	obj/kernel.asm	/^c0101edc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101edf	obj/kernel.asm	/^c0101edf:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101ee6	obj/kernel.asm	/^c0101ee6:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101ee9	obj/kernel.asm	/^c0101ee9:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101eec	obj/kernel.asm	/^c0101eec:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101ef0	obj/kernel.asm	/^c0101ef0:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101ef3	obj/kernel.asm	/^c0101ef3:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101ef7	obj/kernel.asm	/^c0101ef7:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101efb	obj/kernel.asm	/^c0101efb:	ee                   	out    %al,(%dx)$/;"	l
c0101efc	obj/kernel.asm	/^c0101efc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101eff	obj/kernel.asm	/^c0101eff:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f02	obj/kernel.asm	/^c0101f02:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101f06	obj/kernel.asm	/^c0101f06:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101f09	obj/kernel.asm	/^c0101f09:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101f0c	obj/kernel.asm	/^c0101f0c:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101f10	obj/kernel.asm	/^c0101f10:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101f13	obj/kernel.asm	/^c0101f13:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101f17	obj/kernel.asm	/^c0101f17:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101f1b	obj/kernel.asm	/^c0101f1b:	ee                   	out    %al,(%dx)$/;"	l
c0101f1c	obj/kernel.asm	/^c0101f1c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f1f	obj/kernel.asm	/^c0101f1f:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101f22	obj/kernel.asm	/^c0101f22:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f25	obj/kernel.asm	/^c0101f25:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101f29	obj/kernel.asm	/^c0101f29:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101f2c	obj/kernel.asm	/^c0101f2c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101f2f	obj/kernel.asm	/^c0101f2f:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101f33	obj/kernel.asm	/^c0101f33:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101f36	obj/kernel.asm	/^c0101f36:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101f3a	obj/kernel.asm	/^c0101f3a:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101f3e	obj/kernel.asm	/^c0101f3e:	ee                   	out    %al,(%dx)$/;"	l
c0101f3f	obj/kernel.asm	/^c0101f3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f42	obj/kernel.asm	/^c0101f42:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101f45	obj/kernel.asm	/^c0101f45:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f48	obj/kernel.asm	/^c0101f48:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101f4c	obj/kernel.asm	/^c0101f4c:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101f4f	obj/kernel.asm	/^c0101f4f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101f52	obj/kernel.asm	/^c0101f52:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101f56	obj/kernel.asm	/^c0101f56:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101f59	obj/kernel.asm	/^c0101f59:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101f5d	obj/kernel.asm	/^c0101f5d:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101f61	obj/kernel.asm	/^c0101f61:	ee                   	out    %al,(%dx)$/;"	l
c0101f62	obj/kernel.asm	/^c0101f62:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101f66	obj/kernel.asm	/^c0101f66:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101f69	obj/kernel.asm	/^c0101f69:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101f6c	obj/kernel.asm	/^c0101f6c:	89 c2                	mov    %eax,%edx$/;"	l
c0101f6e	obj/kernel.asm	/^c0101f6e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f71	obj/kernel.asm	/^c0101f71:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101f74	obj/kernel.asm	/^c0101f74:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101f77	obj/kernel.asm	/^c0101f77:	09 d0                	or     %edx,%eax$/;"	l
c0101f79	obj/kernel.asm	/^c0101f79:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101f7c	obj/kernel.asm	/^c0101f7c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f7f	obj/kernel.asm	/^c0101f7f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101f83	obj/kernel.asm	/^c0101f83:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101f86	obj/kernel.asm	/^c0101f86:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101f89	obj/kernel.asm	/^c0101f89:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101f8d	obj/kernel.asm	/^c0101f8d:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101f90	obj/kernel.asm	/^c0101f90:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101f94	obj/kernel.asm	/^c0101f94:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101f98	obj/kernel.asm	/^c0101f98:	ee                   	out    %al,(%dx)$/;"	l
c0101f99	obj/kernel.asm	/^c0101f99:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101f9d	obj/kernel.asm	/^c0101f9d:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101fa0	obj/kernel.asm	/^c0101fa0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101fa3	obj/kernel.asm	/^c0101fa3:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101fa7	obj/kernel.asm	/^c0101fa7:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c0101fab	obj/kernel.asm	/^c0101fab:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101faf	obj/kernel.asm	/^c0101faf:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101fb3	obj/kernel.asm	/^c0101fb3:	ee                   	out    %al,(%dx)$/;"	l
c0101fb4	obj/kernel.asm	/^c0101fb4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101fbb	obj/kernel.asm	/^c0101fbb:	eb 5a                	jmp    c0102017 <ide_write_secs+0x232>$/;"	l
c0101fbd	obj/kernel.asm	/^c0101fbd:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101fc1	obj/kernel.asm	/^c0101fc1:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101fc8	obj/kernel.asm	/^c0101fc8:	00 $/;"	l
c0101fc9	obj/kernel.asm	/^c0101fc9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101fcc	obj/kernel.asm	/^c0101fcc:	e8 e1 f7 ff ff       	call   c01017b2 <ide_wait_ready>$/;"	l
c0101fd1	obj/kernel.asm	/^c0101fd1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101fd4	obj/kernel.asm	/^c0101fd4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101fd8	obj/kernel.asm	/^c0101fd8:	74 02                	je     c0101fdc <ide_write_secs+0x1f7>$/;"	l
c0101fda	obj/kernel.asm	/^c0101fda:	eb 41                	jmp    c010201d <ide_write_secs+0x238>$/;"	l
c0101fdc	obj/kernel.asm	/^c0101fdc:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101fe0	obj/kernel.asm	/^c0101fe0:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101fe3	obj/kernel.asm	/^c0101fe3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101fe6	obj/kernel.asm	/^c0101fe6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101fe9	obj/kernel.asm	/^c0101fe9:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101ff0	obj/kernel.asm	/^c0101ff0:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101ff3	obj/kernel.asm	/^c0101ff3:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101ff6	obj/kernel.asm	/^c0101ff6:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101ff9	obj/kernel.asm	/^c0101ff9:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101ffb	obj/kernel.asm	/^c0101ffb:	89 de                	mov    %ebx,%esi$/;"	l
c0101ffd	obj/kernel.asm	/^c0101ffd:	89 c1                	mov    %eax,%ecx$/;"	l
c0101fff	obj/kernel.asm	/^c0101fff:	fc                   	cld    $/;"	l
c0102000	obj/kernel.asm	/^c0102000:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c0102002	obj/kernel.asm	/^c0102002:	89 c8                	mov    %ecx,%eax$/;"	l
c0102004	obj/kernel.asm	/^c0102004:	89 f3                	mov    %esi,%ebx$/;"	l
c0102006	obj/kernel.asm	/^c0102006:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0102009	obj/kernel.asm	/^c0102009:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010200c	obj/kernel.asm	/^c010200c:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0102010	obj/kernel.asm	/^c0102010:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0102017	obj/kernel.asm	/^c0102017:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010201b	obj/kernel.asm	/^c010201b:	75 a0                	jne    c0101fbd <ide_write_secs+0x1d8>$/;"	l
c010201d	obj/kernel.asm	/^c010201d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102020	obj/kernel.asm	/^c0102020:	83 c4 50             	add    $0x50,%esp$/;"	l
c0102023	obj/kernel.asm	/^c0102023:	5b                   	pop    %ebx$/;"	l
c0102024	obj/kernel.asm	/^c0102024:	5e                   	pop    %esi$/;"	l
c0102025	obj/kernel.asm	/^c0102025:	5d                   	pop    %ebp$/;"	l
c0102026	obj/kernel.asm	/^c0102026:	c3                   	ret    $/;"	l
c0102027	obj/kernel.asm	/^c0102027 <intr_enable>:$/;"	l
c0102027	obj/kernel.asm	/^c0102027:	55                   	push   %ebp$/;"	l
c0102028	obj/kernel.asm	/^c0102028:	89 e5                	mov    %esp,%ebp$/;"	l
c010202a	obj/kernel.asm	/^c010202a:	fb                   	sti    $/;"	l
c010202b	obj/kernel.asm	/^c010202b:	5d                   	pop    %ebp$/;"	l
c010202c	obj/kernel.asm	/^c010202c:	c3                   	ret    $/;"	l
c010202d	obj/kernel.asm	/^c010202d <intr_disable>:$/;"	l
c010202d	obj/kernel.asm	/^c010202d:	55                   	push   %ebp$/;"	l
c010202e	obj/kernel.asm	/^c010202e:	89 e5                	mov    %esp,%ebp$/;"	l
c0102030	obj/kernel.asm	/^c0102030:	fa                   	cli    $/;"	l
c0102031	obj/kernel.asm	/^c0102031:	5d                   	pop    %ebp$/;"	l
c0102032	obj/kernel.asm	/^c0102032:	c3                   	ret    $/;"	l
c0102033	obj/kernel.asm	/^c0102033 <pic_setmask>:$/;"	l
c0102033	obj/kernel.asm	/^c0102033:	55                   	push   %ebp$/;"	l
c0102034	obj/kernel.asm	/^c0102034:	89 e5                	mov    %esp,%ebp$/;"	l
c0102036	obj/kernel.asm	/^c0102036:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0102039	obj/kernel.asm	/^c0102039:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010203c	obj/kernel.asm	/^c010203c:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0102040	obj/kernel.asm	/^c0102040:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102044	obj/kernel.asm	/^c0102044:	66 a3 70 a5 12 c0    	mov    %ax,0xc012a570$/;"	l
c010204a	obj/kernel.asm	/^c010204a:	a1 a0 c6 19 c0       	mov    0xc019c6a0,%eax$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	85 c0                	test   %eax,%eax$/;"	l
c0102051	obj/kernel.asm	/^c0102051:	74 36                	je     c0102089 <pic_setmask+0x56>$/;"	l
c0102053	obj/kernel.asm	/^c0102053:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102057	obj/kernel.asm	/^c0102057:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010205a	obj/kernel.asm	/^c010205a:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0102060	obj/kernel.asm	/^c0102060:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0102063	obj/kernel.asm	/^c0102063:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0102067	obj/kernel.asm	/^c0102067:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c010206b	obj/kernel.asm	/^c010206b:	ee                   	out    %al,(%dx)$/;"	l
c010206c	obj/kernel.asm	/^c010206c:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102070	obj/kernel.asm	/^c0102070:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0102074	obj/kernel.asm	/^c0102074:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102077	obj/kernel.asm	/^c0102077:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c010207d	obj/kernel.asm	/^c010207d:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0102080	obj/kernel.asm	/^c0102080:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0102084	obj/kernel.asm	/^c0102084:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0102088	obj/kernel.asm	/^c0102088:	ee                   	out    %al,(%dx)$/;"	l
c0102089	obj/kernel.asm	/^c0102089:	c9                   	leave  $/;"	l
c010208a	obj/kernel.asm	/^c010208a:	c3                   	ret    $/;"	l
c010208b	obj/kernel.asm	/^c010208b <pic_enable>:$/;"	l
c010208b	obj/kernel.asm	/^c010208b:	55                   	push   %ebp$/;"	l
c010208c	obj/kernel.asm	/^c010208c:	89 e5                	mov    %esp,%ebp$/;"	l
c010208e	obj/kernel.asm	/^c010208e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102091	obj/kernel.asm	/^c0102091:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102094	obj/kernel.asm	/^c0102094:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0102099	obj/kernel.asm	/^c0102099:	89 c1                	mov    %eax,%ecx$/;"	l
c010209b	obj/kernel.asm	/^c010209b:	d3 e2                	shl    %cl,%edx$/;"	d
c010209d	obj/kernel.asm	/^c010209d:	89 d0                	mov    %edx,%eax$/;"	l
c010209f	obj/kernel.asm	/^c010209f:	f7 d0                	not    %eax$/;"	l
c01020a1	obj/kernel.asm	/^c01020a1:	89 c2                	mov    %eax,%edx$/;"	l
c01020a3	obj/kernel.asm	/^c01020a3:	0f b7 05 70 a5 12 c0 	movzwl 0xc012a570,%eax$/;"	l
c01020aa	obj/kernel.asm	/^c01020aa:	21 d0                	and    %edx,%eax$/;"	l
c01020ac	obj/kernel.asm	/^c01020ac:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01020af	obj/kernel.asm	/^c01020af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01020b2	obj/kernel.asm	/^c01020b2:	e8 7c ff ff ff       	call   c0102033 <pic_setmask>$/;"	l
c01020b7	obj/kernel.asm	/^c01020b7:	c9                   	leave  $/;"	l
c01020b8	obj/kernel.asm	/^c01020b8:	c3                   	ret    $/;"	l
c01020b9	obj/kernel.asm	/^c01020b9 <pic_init>:$/;"	l
c01020b9	obj/kernel.asm	/^c01020b9:	55                   	push   %ebp$/;"	l
c01020ba	obj/kernel.asm	/^c01020ba:	89 e5                	mov    %esp,%ebp$/;"	l
c01020bc	obj/kernel.asm	/^c01020bc:	83 ec 44             	sub    $0x44,%esp$/;"	l
c01020bf	obj/kernel.asm	/^c01020bf:	c7 05 a0 c6 19 c0 01 	movl   $0x1,0xc019c6a0$/;"	l
c01020c6	obj/kernel.asm	/^c01020c6:	00 00 00 $/;"	l
c01020c9	obj/kernel.asm	/^c01020c9:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c01020cf	obj/kernel.asm	/^c01020cf:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c01020d3	obj/kernel.asm	/^c01020d3:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c01020d7	obj/kernel.asm	/^c01020d7:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c01020db	obj/kernel.asm	/^c01020db:	ee                   	out    %al,(%dx)$/;"	l
c01020dc	obj/kernel.asm	/^c01020dc:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c01020e2	obj/kernel.asm	/^c01020e2:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c01020e6	obj/kernel.asm	/^c01020e6:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01020ea	obj/kernel.asm	/^c01020ea:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01020ee	obj/kernel.asm	/^c01020ee:	ee                   	out    %al,(%dx)$/;"	l
c01020ef	obj/kernel.asm	/^c01020ef:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c01020f5	obj/kernel.asm	/^c01020f5:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c01020f9	obj/kernel.asm	/^c01020f9:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01020fd	obj/kernel.asm	/^c01020fd:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0102101	obj/kernel.asm	/^c0102101:	ee                   	out    %al,(%dx)$/;"	l
c0102102	obj/kernel.asm	/^c0102102:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c0102108	obj/kernel.asm	/^c0102108:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c010210c	obj/kernel.asm	/^c010210c:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0102110	obj/kernel.asm	/^c0102110:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102114	obj/kernel.asm	/^c0102114:	ee                   	out    %al,(%dx)$/;"	l
c0102115	obj/kernel.asm	/^c0102115:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c010211b	obj/kernel.asm	/^c010211b:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c010211f	obj/kernel.asm	/^c010211f:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0102123	obj/kernel.asm	/^c0102123:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0102127	obj/kernel.asm	/^c0102127:	ee                   	out    %al,(%dx)$/;"	l
c0102128	obj/kernel.asm	/^c0102128:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c010212e	obj/kernel.asm	/^c010212e:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c0102132	obj/kernel.asm	/^c0102132:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0102136	obj/kernel.asm	/^c0102136:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010213a	obj/kernel.asm	/^c010213a:	ee                   	out    %al,(%dx)$/;"	l
c010213b	obj/kernel.asm	/^c010213b:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c0102141	obj/kernel.asm	/^c0102141:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c0102145	obj/kernel.asm	/^c0102145:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0102149	obj/kernel.asm	/^c0102149:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c010214d	obj/kernel.asm	/^c010214d:	ee                   	out    %al,(%dx)$/;"	l
c010214e	obj/kernel.asm	/^c010214e:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c0102154	obj/kernel.asm	/^c0102154:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c0102158	obj/kernel.asm	/^c0102158:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c010215c	obj/kernel.asm	/^c010215c:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0102160	obj/kernel.asm	/^c0102160:	ee                   	out    %al,(%dx)$/;"	l
c0102161	obj/kernel.asm	/^c0102161:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c0102167	obj/kernel.asm	/^c0102167:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c010216b	obj/kernel.asm	/^c010216b:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c010216f	obj/kernel.asm	/^c010216f:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0102173	obj/kernel.asm	/^c0102173:	ee                   	out    %al,(%dx)$/;"	l
c0102174	obj/kernel.asm	/^c0102174:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c010217a	obj/kernel.asm	/^c010217a:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c010217e	obj/kernel.asm	/^c010217e:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102182	obj/kernel.asm	/^c0102182:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0102186	obj/kernel.asm	/^c0102186:	ee                   	out    %al,(%dx)$/;"	l
c0102187	obj/kernel.asm	/^c0102187:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c010218d	obj/kernel.asm	/^c010218d:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c0102191	obj/kernel.asm	/^c0102191:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0102195	obj/kernel.asm	/^c0102195:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0102199	obj/kernel.asm	/^c0102199:	ee                   	out    %al,(%dx)$/;"	l
c010219a	obj/kernel.asm	/^c010219a:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c01021a0	obj/kernel.asm	/^c01021a0:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c01021a4	obj/kernel.asm	/^c01021a4:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c01021a8	obj/kernel.asm	/^c01021a8:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c01021ac	obj/kernel.asm	/^c01021ac:	ee                   	out    %al,(%dx)$/;"	l
c01021ad	obj/kernel.asm	/^c01021ad:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c01021b3	obj/kernel.asm	/^c01021b3:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c01021b7	obj/kernel.asm	/^c01021b7:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01021bb	obj/kernel.asm	/^c01021bb:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01021bf	obj/kernel.asm	/^c01021bf:	ee                   	out    %al,(%dx)$/;"	l
c01021c0	obj/kernel.asm	/^c01021c0:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c01021c6	obj/kernel.asm	/^c01021c6:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c01021ca	obj/kernel.asm	/^c01021ca:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c01021ce	obj/kernel.asm	/^c01021ce:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c01021d2	obj/kernel.asm	/^c01021d2:	ee                   	out    %al,(%dx)$/;"	l
c01021d3	obj/kernel.asm	/^c01021d3:	0f b7 05 70 a5 12 c0 	movzwl 0xc012a570,%eax$/;"	l
c01021da	obj/kernel.asm	/^c01021da:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c01021de	obj/kernel.asm	/^c01021de:	74 12                	je     c01021f2 <pic_init+0x139>$/;"	l
c01021e0	obj/kernel.asm	/^c01021e0:	0f b7 05 70 a5 12 c0 	movzwl 0xc012a570,%eax$/;"	l
c01021e7	obj/kernel.asm	/^c01021e7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01021ea	obj/kernel.asm	/^c01021ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01021ed	obj/kernel.asm	/^c01021ed:	e8 41 fe ff ff       	call   c0102033 <pic_setmask>$/;"	l
c01021f2	obj/kernel.asm	/^c01021f2:	c9                   	leave  $/;"	l
c01021f3	obj/kernel.asm	/^c01021f3:	c3                   	ret    $/;"	l
c01021f4	obj/kernel.asm	/^c01021f4 <print_ticks>:$/;"	l
c01021f4	obj/kernel.asm	/^c01021f4:	55                   	push   %ebp$/;"	l
c01021f5	obj/kernel.asm	/^c01021f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01021f7	obj/kernel.asm	/^c01021f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01021fa	obj/kernel.asm	/^c01021fa:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0102201	obj/kernel.asm	/^c0102201:	00 $/;"	l
c0102202	obj/kernel.asm	/^c0102202:	c7 04 24 a0 c0 10 c0 	movl   $0xc010c0a0,(%esp)$/;"	l
c0102209	obj/kernel.asm	/^c0102209:	e8 45 e1 ff ff       	call   c0100353 <cprintf>$/;"	l
c010220e	obj/kernel.asm	/^c010220e:	c9                   	leave  $/;"	l
c010220f	obj/kernel.asm	/^c010220f:	c3                   	ret    $/;"	l
c0102210	obj/kernel.asm	/^c0102210 <idt_init>:$/;"	l
c0102210	obj/kernel.asm	/^c0102210:	55                   	push   %ebp$/;"	l
c0102211	obj/kernel.asm	/^c0102211:	89 e5                	mov    %esp,%ebp$/;"	l
c0102213	obj/kernel.asm	/^c0102213:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0102216	obj/kernel.asm	/^c0102216:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010221d	obj/kernel.asm	/^c010221d:	e9 c3 00 00 00       	jmp    c01022e5 <idt_init+0xd5>$/;"	l
c0102222	obj/kernel.asm	/^c0102222:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102225	obj/kernel.asm	/^c0102225:	8b 04 85 00 a6 12 c0 	mov    -0x3fed5a00(,%eax,4),%eax$/;"	l
c010222c	obj/kernel.asm	/^c010222c:	89 c2                	mov    %eax,%edx$/;"	l
c010222e	obj/kernel.asm	/^c010222e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102231	obj/kernel.asm	/^c0102231:	66 89 14 c5 c0 c6 19 	mov    %dx,-0x3fe63940(,%eax,8)$/;"	l
c0102238	obj/kernel.asm	/^c0102238:	c0 $/;"	l
c0102239	obj/kernel.asm	/^c0102239:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010223c	obj/kernel.asm	/^c010223c:	66 c7 04 c5 c2 c6 19 	movw   $0x8,-0x3fe6393e(,%eax,8)$/;"	l
c0102243	obj/kernel.asm	/^c0102243:	c0 08 00 $/;"	l
c0102246	obj/kernel.asm	/^c0102246:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102249	obj/kernel.asm	/^c0102249:	0f b6 14 c5 c4 c6 19 	movzbl -0x3fe6393c(,%eax,8),%edx$/;"	l
c0102250	obj/kernel.asm	/^c0102250:	c0 $/;"	l
c0102251	obj/kernel.asm	/^c0102251:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102254	obj/kernel.asm	/^c0102254:	88 14 c5 c4 c6 19 c0 	mov    %dl,-0x3fe6393c(,%eax,8)$/;"	l
c010225b	obj/kernel.asm	/^c010225b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010225e	obj/kernel.asm	/^c010225e:	0f b6 14 c5 c4 c6 19 	movzbl -0x3fe6393c(,%eax,8),%edx$/;"	l
c0102265	obj/kernel.asm	/^c0102265:	c0 $/;"	l
c0102266	obj/kernel.asm	/^c0102266:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102269	obj/kernel.asm	/^c0102269:	88 14 c5 c4 c6 19 c0 	mov    %dl,-0x3fe6393c(,%eax,8)$/;"	l
c0102270	obj/kernel.asm	/^c0102270:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102273	obj/kernel.asm	/^c0102273:	0f b6 14 c5 c5 c6 19 	movzbl -0x3fe6393b(,%eax,8),%edx$/;"	l
c010227a	obj/kernel.asm	/^c010227a:	c0 $/;"	l
c010227b	obj/kernel.asm	/^c010227b:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c010227e	obj/kernel.asm	/^c010227e:	83 ca 0e             	or     $0xe,%edx$/;"	l
c0102281	obj/kernel.asm	/^c0102281:	88 14 c5 c5 c6 19 c0 	mov    %dl,-0x3fe6393b(,%eax,8)$/;"	l
c0102288	obj/kernel.asm	/^c0102288:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010228b	obj/kernel.asm	/^c010228b:	0f b6 14 c5 c5 c6 19 	movzbl -0x3fe6393b(,%eax,8),%edx$/;"	l
c0102292	obj/kernel.asm	/^c0102292:	c0 $/;"	l
c0102293	obj/kernel.asm	/^c0102293:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102296	obj/kernel.asm	/^c0102296:	88 14 c5 c5 c6 19 c0 	mov    %dl,-0x3fe6393b(,%eax,8)$/;"	l
c010229d	obj/kernel.asm	/^c010229d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022a0	obj/kernel.asm	/^c01022a0:	0f b6 14 c5 c5 c6 19 	movzbl -0x3fe6393b(,%eax,8),%edx$/;"	l
c01022a7	obj/kernel.asm	/^c01022a7:	c0 $/;"	l
c01022a8	obj/kernel.asm	/^c01022a8:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01022ab	obj/kernel.asm	/^c01022ab:	88 14 c5 c5 c6 19 c0 	mov    %dl,-0x3fe6393b(,%eax,8)$/;"	l
c01022b2	obj/kernel.asm	/^c01022b2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022b5	obj/kernel.asm	/^c01022b5:	0f b6 14 c5 c5 c6 19 	movzbl -0x3fe6393b(,%eax,8),%edx$/;"	l
c01022bc	obj/kernel.asm	/^c01022bc:	c0 $/;"	l
c01022bd	obj/kernel.asm	/^c01022bd:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01022c0	obj/kernel.asm	/^c01022c0:	88 14 c5 c5 c6 19 c0 	mov    %dl,-0x3fe6393b(,%eax,8)$/;"	l
c01022c7	obj/kernel.asm	/^c01022c7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022ca	obj/kernel.asm	/^c01022ca:	8b 04 85 00 a6 12 c0 	mov    -0x3fed5a00(,%eax,4),%eax$/;"	l
c01022d1	obj/kernel.asm	/^c01022d1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01022d4	obj/kernel.asm	/^c01022d4:	89 c2                	mov    %eax,%edx$/;"	l
c01022d6	obj/kernel.asm	/^c01022d6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022d9	obj/kernel.asm	/^c01022d9:	66 89 14 c5 c6 c6 19 	mov    %dx,-0x3fe6393a(,%eax,8)$/;"	l
c01022e0	obj/kernel.asm	/^c01022e0:	c0 $/;"	l
c01022e1	obj/kernel.asm	/^c01022e1:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01022e5	obj/kernel.asm	/^c01022e5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022e8	obj/kernel.asm	/^c01022e8:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c01022ed	obj/kernel.asm	/^c01022ed:	0f 86 2f ff ff ff    	jbe    c0102222 <idt_init+0x12>$/;"	l
c01022f3	obj/kernel.asm	/^c01022f3:	a1 e4 a7 12 c0       	mov    0xc012a7e4,%eax$/;"	l
c01022f8	obj/kernel.asm	/^c01022f8:	66 a3 88 ca 19 c0    	mov    %ax,0xc019ca88$/;"	l
c01022fe	obj/kernel.asm	/^c01022fe:	66 c7 05 8a ca 19 c0 	movw   $0x8,0xc019ca8a$/;"	l
c0102305	obj/kernel.asm	/^c0102305:	08 00 $/;"	l
c0102307	obj/kernel.asm	/^c0102307:	0f b6 05 8c ca 19 c0 	movzbl 0xc019ca8c,%eax$/;"	l
c010230e	obj/kernel.asm	/^c010230e:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c0102311	obj/kernel.asm	/^c0102311:	a2 8c ca 19 c0       	mov    %al,0xc019ca8c$/;"	l
c0102316	obj/kernel.asm	/^c0102316:	0f b6 05 8c ca 19 c0 	movzbl 0xc019ca8c,%eax$/;"	l
c010231d	obj/kernel.asm	/^c010231d:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c0102320	obj/kernel.asm	/^c0102320:	a2 8c ca 19 c0       	mov    %al,0xc019ca8c$/;"	l
c0102325	obj/kernel.asm	/^c0102325:	0f b6 05 8d ca 19 c0 	movzbl 0xc019ca8d,%eax$/;"	l
c010232c	obj/kernel.asm	/^c010232c:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c010232f	obj/kernel.asm	/^c010232f:	83 c8 0e             	or     $0xe,%eax$/;"	l
c0102332	obj/kernel.asm	/^c0102332:	a2 8d ca 19 c0       	mov    %al,0xc019ca8d$/;"	l
c0102337	obj/kernel.asm	/^c0102337:	0f b6 05 8d ca 19 c0 	movzbl 0xc019ca8d,%eax$/;"	l
c010233e	obj/kernel.asm	/^c010233e:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0102341	obj/kernel.asm	/^c0102341:	a2 8d ca 19 c0       	mov    %al,0xc019ca8d$/;"	l
c0102346	obj/kernel.asm	/^c0102346:	0f b6 05 8d ca 19 c0 	movzbl 0xc019ca8d,%eax$/;"	l
c010234d	obj/kernel.asm	/^c010234d:	83 c8 60             	or     $0x60,%eax$/;"	l
c0102350	obj/kernel.asm	/^c0102350:	a2 8d ca 19 c0       	mov    %al,0xc019ca8d$/;"	l
c0102355	obj/kernel.asm	/^c0102355:	0f b6 05 8d ca 19 c0 	movzbl 0xc019ca8d,%eax$/;"	l
c010235c	obj/kernel.asm	/^c010235c:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c010235f	obj/kernel.asm	/^c010235f:	a2 8d ca 19 c0       	mov    %al,0xc019ca8d$/;"	l
c0102364	obj/kernel.asm	/^c0102364:	a1 e4 a7 12 c0       	mov    0xc012a7e4,%eax$/;"	l
c0102369	obj/kernel.asm	/^c0102369:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010236c	obj/kernel.asm	/^c010236c:	66 a3 8e ca 19 c0    	mov    %ax,0xc019ca8e$/;"	l
c0102372	obj/kernel.asm	/^c0102372:	c7 45 f8 80 a5 12 c0 	movl   $0xc012a580,-0x8(%ebp)$/;"	l
c0102379	obj/kernel.asm	/^c0102379:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010237c	obj/kernel.asm	/^c010237c:	0f 01 18             	lidtl  (%eax)$/;"	l
c010237f	obj/kernel.asm	/^c010237f:	c9                   	leave  $/;"	l
c0102380	obj/kernel.asm	/^c0102380:	c3                   	ret    $/;"	l
c0102381	obj/kernel.asm	/^c0102381 <trapname>:$/;"	l
c0102381	obj/kernel.asm	/^c0102381:	55                   	push   %ebp$/;"	l
c0102382	obj/kernel.asm	/^c0102382:	89 e5                	mov    %esp,%ebp$/;"	l
c0102384	obj/kernel.asm	/^c0102384:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102387	obj/kernel.asm	/^c0102387:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c010238a	obj/kernel.asm	/^c010238a:	77 0c                	ja     c0102398 <trapname+0x17>$/;"	l
c010238c	obj/kernel.asm	/^c010238c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010238f	obj/kernel.asm	/^c010238f:	8b 04 85 20 c5 10 c0 	mov    -0x3fef3ae0(,%eax,4),%eax$/;"	l
c0102396	obj/kernel.asm	/^c0102396:	eb 18                	jmp    c01023b0 <trapname+0x2f>$/;"	l
c0102398	obj/kernel.asm	/^c0102398:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c010239c	obj/kernel.asm	/^c010239c:	7e 0d                	jle    c01023ab <trapname+0x2a>$/;"	l
c010239e	obj/kernel.asm	/^c010239e:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c01023a2	obj/kernel.asm	/^c01023a2:	7f 07                	jg     c01023ab <trapname+0x2a>$/;"	l
c01023a4	obj/kernel.asm	/^c01023a4:	b8 aa c0 10 c0       	mov    $0xc010c0aa,%eax$/;"	l
c01023a9	obj/kernel.asm	/^c01023a9:	eb 05                	jmp    c01023b0 <trapname+0x2f>$/;"	l
c01023ab	obj/kernel.asm	/^c01023ab:	b8 bd c0 10 c0       	mov    $0xc010c0bd,%eax$/;"	l
c01023b0	obj/kernel.asm	/^c01023b0:	5d                   	pop    %ebp$/;"	l
c01023b1	obj/kernel.asm	/^c01023b1:	c3                   	ret    $/;"	l
c01023b2	obj/kernel.asm	/^c01023b2 <trap_in_kernel>:$/;"	l
c01023b2	obj/kernel.asm	/^c01023b2:	55                   	push   %ebp$/;"	l
c01023b3	obj/kernel.asm	/^c01023b3:	89 e5                	mov    %esp,%ebp$/;"	l
c01023b5	obj/kernel.asm	/^c01023b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023b8	obj/kernel.asm	/^c01023b8:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01023bc	obj/kernel.asm	/^c01023bc:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c01023c0	obj/kernel.asm	/^c01023c0:	0f 94 c0             	sete   %al$/;"	l
c01023c3	obj/kernel.asm	/^c01023c3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01023c6	obj/kernel.asm	/^c01023c6:	5d                   	pop    %ebp$/;"	l
c01023c7	obj/kernel.asm	/^c01023c7:	c3                   	ret    $/;"	l
c01023c8	obj/kernel.asm	/^c01023c8 <print_trapframe>:$/;"	l
c01023c8	obj/kernel.asm	/^c01023c8:	55                   	push   %ebp$/;"	l
c01023c9	obj/kernel.asm	/^c01023c9:	89 e5                	mov    %esp,%ebp$/;"	l
c01023cb	obj/kernel.asm	/^c01023cb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01023ce	obj/kernel.asm	/^c01023ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023d1	obj/kernel.asm	/^c01023d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01023d5	obj/kernel.asm	/^c01023d5:	c7 04 24 fe c0 10 c0 	movl   $0xc010c0fe,(%esp)$/;"	l
c01023dc	obj/kernel.asm	/^c01023dc:	e8 72 df ff ff       	call   c0100353 <cprintf>$/;"	l
c01023e1	obj/kernel.asm	/^c01023e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023e4	obj/kernel.asm	/^c01023e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01023e7	obj/kernel.asm	/^c01023e7:	e8 a1 01 00 00       	call   c010258d <print_regs>$/;"	l
c01023ec	obj/kernel.asm	/^c01023ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023ef	obj/kernel.asm	/^c01023ef:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c01023f3	obj/kernel.asm	/^c01023f3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01023f6	obj/kernel.asm	/^c01023f6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01023fa	obj/kernel.asm	/^c01023fa:	c7 04 24 0f c1 10 c0 	movl   $0xc010c10f,(%esp)$/;"	l
c0102401	obj/kernel.asm	/^c0102401:	e8 4d df ff ff       	call   c0100353 <cprintf>$/;"	l
c0102406	obj/kernel.asm	/^c0102406:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102409	obj/kernel.asm	/^c0102409:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c010240d	obj/kernel.asm	/^c010240d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102410	obj/kernel.asm	/^c0102410:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102414	obj/kernel.asm	/^c0102414:	c7 04 24 22 c1 10 c0 	movl   $0xc010c122,(%esp)$/;"	l
c010241b	obj/kernel.asm	/^c010241b:	e8 33 df ff ff       	call   c0100353 <cprintf>$/;"	l
c0102420	obj/kernel.asm	/^c0102420:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102423	obj/kernel.asm	/^c0102423:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102427	obj/kernel.asm	/^c0102427:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010242a	obj/kernel.asm	/^c010242a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010242e	obj/kernel.asm	/^c010242e:	c7 04 24 35 c1 10 c0 	movl   $0xc010c135,(%esp)$/;"	l
c0102435	obj/kernel.asm	/^c0102435:	e8 19 df ff ff       	call   c0100353 <cprintf>$/;"	l
c010243a	obj/kernel.asm	/^c010243a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010243d	obj/kernel.asm	/^c010243d:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c0102441	obj/kernel.asm	/^c0102441:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102444	obj/kernel.asm	/^c0102444:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102448	obj/kernel.asm	/^c0102448:	c7 04 24 48 c1 10 c0 	movl   $0xc010c148,(%esp)$/;"	l
c010244f	obj/kernel.asm	/^c010244f:	e8 ff de ff ff       	call   c0100353 <cprintf>$/;"	l
c0102454	obj/kernel.asm	/^c0102454:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102457	obj/kernel.asm	/^c0102457:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010245a	obj/kernel.asm	/^c010245a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010245d	obj/kernel.asm	/^c010245d:	e8 1f ff ff ff       	call   c0102381 <trapname>$/;"	l
c0102462	obj/kernel.asm	/^c0102462:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102465	obj/kernel.asm	/^c0102465:	8b 52 30             	mov    0x30(%edx),%edx$/;"	l
c0102468	obj/kernel.asm	/^c0102468:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010246c	obj/kernel.asm	/^c010246c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0102470	obj/kernel.asm	/^c0102470:	c7 04 24 5b c1 10 c0 	movl   $0xc010c15b,(%esp)$/;"	l
c0102477	obj/kernel.asm	/^c0102477:	e8 d7 de ff ff       	call   c0100353 <cprintf>$/;"	l
c010247c	obj/kernel.asm	/^c010247c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010247f	obj/kernel.asm	/^c010247f:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102482	obj/kernel.asm	/^c0102482:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102486	obj/kernel.asm	/^c0102486:	c7 04 24 6d c1 10 c0 	movl   $0xc010c16d,(%esp)$/;"	l
c010248d	obj/kernel.asm	/^c010248d:	e8 c1 de ff ff       	call   c0100353 <cprintf>$/;"	l
c0102492	obj/kernel.asm	/^c0102492:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102495	obj/kernel.asm	/^c0102495:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0102498	obj/kernel.asm	/^c0102498:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010249c	obj/kernel.asm	/^c010249c:	c7 04 24 7c c1 10 c0 	movl   $0xc010c17c,(%esp)$/;"	l
c01024a3	obj/kernel.asm	/^c01024a3:	e8 ab de ff ff       	call   c0100353 <cprintf>$/;"	l
c01024a8	obj/kernel.asm	/^c01024a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024ab	obj/kernel.asm	/^c01024ab:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01024af	obj/kernel.asm	/^c01024af:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01024b2	obj/kernel.asm	/^c01024b2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024b6	obj/kernel.asm	/^c01024b6:	c7 04 24 8b c1 10 c0 	movl   $0xc010c18b,(%esp)$/;"	l
c01024bd	obj/kernel.asm	/^c01024bd:	e8 91 de ff ff       	call   c0100353 <cprintf>$/;"	l
c01024c2	obj/kernel.asm	/^c01024c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024c5	obj/kernel.asm	/^c01024c5:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c01024c8	obj/kernel.asm	/^c01024c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024cc	obj/kernel.asm	/^c01024cc:	c7 04 24 9e c1 10 c0 	movl   $0xc010c19e,(%esp)$/;"	l
c01024d3	obj/kernel.asm	/^c01024d3:	e8 7b de ff ff       	call   c0100353 <cprintf>$/;"	l
c01024d8	obj/kernel.asm	/^c01024d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01024df	obj/kernel.asm	/^c01024df:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c01024e6	obj/kernel.asm	/^c01024e6:	eb 3e                	jmp    c0102526 <print_trapframe+0x15e>$/;"	l
c01024e8	obj/kernel.asm	/^c01024e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024eb	obj/kernel.asm	/^c01024eb:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c01024ee	obj/kernel.asm	/^c01024ee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01024f1	obj/kernel.asm	/^c01024f1:	21 d0                	and    %edx,%eax$/;"	l
c01024f3	obj/kernel.asm	/^c01024f3:	85 c0                	test   %eax,%eax$/;"	l
c01024f5	obj/kernel.asm	/^c01024f5:	74 28                	je     c010251f <print_trapframe+0x157>$/;"	l
c01024f7	obj/kernel.asm	/^c01024f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01024fa	obj/kernel.asm	/^c01024fa:	8b 04 85 a0 a5 12 c0 	mov    -0x3fed5a60(,%eax,4),%eax$/;"	l
c0102501	obj/kernel.asm	/^c0102501:	85 c0                	test   %eax,%eax$/;"	l
c0102503	obj/kernel.asm	/^c0102503:	74 1a                	je     c010251f <print_trapframe+0x157>$/;"	l
c0102505	obj/kernel.asm	/^c0102505:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102508	obj/kernel.asm	/^c0102508:	8b 04 85 a0 a5 12 c0 	mov    -0x3fed5a60(,%eax,4),%eax$/;"	l
c010250f	obj/kernel.asm	/^c010250f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102513	obj/kernel.asm	/^c0102513:	c7 04 24 ad c1 10 c0 	movl   $0xc010c1ad,(%esp)$/;"	l
c010251a	obj/kernel.asm	/^c010251a:	e8 34 de ff ff       	call   c0100353 <cprintf>$/;"	l
c010251f	obj/kernel.asm	/^c010251f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0102523	obj/kernel.asm	/^c0102523:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c0102526	obj/kernel.asm	/^c0102526:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102529	obj/kernel.asm	/^c0102529:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c010252c	obj/kernel.asm	/^c010252c:	76 ba                	jbe    c01024e8 <print_trapframe+0x120>$/;"	l
c010252e	obj/kernel.asm	/^c010252e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102531	obj/kernel.asm	/^c0102531:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102534	obj/kernel.asm	/^c0102534:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c0102539	obj/kernel.asm	/^c0102539:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010253c	obj/kernel.asm	/^c010253c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102540	obj/kernel.asm	/^c0102540:	c7 04 24 b1 c1 10 c0 	movl   $0xc010c1b1,(%esp)$/;"	l
c0102547	obj/kernel.asm	/^c0102547:	e8 07 de ff ff       	call   c0100353 <cprintf>$/;"	l
c010254c	obj/kernel.asm	/^c010254c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010254f	obj/kernel.asm	/^c010254f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102552	obj/kernel.asm	/^c0102552:	e8 5b fe ff ff       	call   c01023b2 <trap_in_kernel>$/;"	l
c0102557	obj/kernel.asm	/^c0102557:	85 c0                	test   %eax,%eax$/;"	l
c0102559	obj/kernel.asm	/^c0102559:	75 30                	jne    c010258b <print_trapframe+0x1c3>$/;"	l
c010255b	obj/kernel.asm	/^c010255b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010255e	obj/kernel.asm	/^c010255e:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102561	obj/kernel.asm	/^c0102561:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102565	obj/kernel.asm	/^c0102565:	c7 04 24 ba c1 10 c0 	movl   $0xc010c1ba,(%esp)$/;"	l
c010256c	obj/kernel.asm	/^c010256c:	e8 e2 dd ff ff       	call   c0100353 <cprintf>$/;"	l
c0102571	obj/kernel.asm	/^c0102571:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102574	obj/kernel.asm	/^c0102574:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c0102578	obj/kernel.asm	/^c0102578:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010257b	obj/kernel.asm	/^c010257b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010257f	obj/kernel.asm	/^c010257f:	c7 04 24 c9 c1 10 c0 	movl   $0xc010c1c9,(%esp)$/;"	l
c0102586	obj/kernel.asm	/^c0102586:	e8 c8 dd ff ff       	call   c0100353 <cprintf>$/;"	l
c010258b	obj/kernel.asm	/^c010258b:	c9                   	leave  $/;"	l
c010258c	obj/kernel.asm	/^c010258c:	c3                   	ret    $/;"	l
c010258d	obj/kernel.asm	/^c010258d <print_regs>:$/;"	l
c010258d	obj/kernel.asm	/^c010258d:	55                   	push   %ebp$/;"	l
c010258e	obj/kernel.asm	/^c010258e:	89 e5                	mov    %esp,%ebp$/;"	l
c0102590	obj/kernel.asm	/^c0102590:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102593	obj/kernel.asm	/^c0102593:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102596	obj/kernel.asm	/^c0102596:	8b 00                	mov    (%eax),%eax$/;"	l
c0102598	obj/kernel.asm	/^c0102598:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010259c	obj/kernel.asm	/^c010259c:	c7 04 24 dc c1 10 c0 	movl   $0xc010c1dc,(%esp)$/;"	l
c01025a3	obj/kernel.asm	/^c01025a3:	e8 ab dd ff ff       	call   c0100353 <cprintf>$/;"	l
c01025a8	obj/kernel.asm	/^c01025a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025ab	obj/kernel.asm	/^c01025ab:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01025ae	obj/kernel.asm	/^c01025ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025b2	obj/kernel.asm	/^c01025b2:	c7 04 24 eb c1 10 c0 	movl   $0xc010c1eb,(%esp)$/;"	l
c01025b9	obj/kernel.asm	/^c01025b9:	e8 95 dd ff ff       	call   c0100353 <cprintf>$/;"	l
c01025be	obj/kernel.asm	/^c01025be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025c1	obj/kernel.asm	/^c01025c1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01025c4	obj/kernel.asm	/^c01025c4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025c8	obj/kernel.asm	/^c01025c8:	c7 04 24 fa c1 10 c0 	movl   $0xc010c1fa,(%esp)$/;"	l
c01025cf	obj/kernel.asm	/^c01025cf:	e8 7f dd ff ff       	call   c0100353 <cprintf>$/;"	l
c01025d4	obj/kernel.asm	/^c01025d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025d7	obj/kernel.asm	/^c01025d7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01025da	obj/kernel.asm	/^c01025da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025de	obj/kernel.asm	/^c01025de:	c7 04 24 09 c2 10 c0 	movl   $0xc010c209,(%esp)$/;"	l
c01025e5	obj/kernel.asm	/^c01025e5:	e8 69 dd ff ff       	call   c0100353 <cprintf>$/;"	l
c01025ea	obj/kernel.asm	/^c01025ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025ed	obj/kernel.asm	/^c01025ed:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01025f0	obj/kernel.asm	/^c01025f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025f4	obj/kernel.asm	/^c01025f4:	c7 04 24 18 c2 10 c0 	movl   $0xc010c218,(%esp)$/;"	l
c01025fb	obj/kernel.asm	/^c01025fb:	e8 53 dd ff ff       	call   c0100353 <cprintf>$/;"	l
c0102600	obj/kernel.asm	/^c0102600:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102603	obj/kernel.asm	/^c0102603:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0102606	obj/kernel.asm	/^c0102606:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010260a	obj/kernel.asm	/^c010260a:	c7 04 24 27 c2 10 c0 	movl   $0xc010c227,(%esp)$/;"	l
c0102611	obj/kernel.asm	/^c0102611:	e8 3d dd ff ff       	call   c0100353 <cprintf>$/;"	l
c0102616	obj/kernel.asm	/^c0102616:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102619	obj/kernel.asm	/^c0102619:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010261c	obj/kernel.asm	/^c010261c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102620	obj/kernel.asm	/^c0102620:	c7 04 24 36 c2 10 c0 	movl   $0xc010c236,(%esp)$/;"	l
c0102627	obj/kernel.asm	/^c0102627:	e8 27 dd ff ff       	call   c0100353 <cprintf>$/;"	l
c010262c	obj/kernel.asm	/^c010262c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010262f	obj/kernel.asm	/^c010262f:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0102632	obj/kernel.asm	/^c0102632:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102636	obj/kernel.asm	/^c0102636:	c7 04 24 45 c2 10 c0 	movl   $0xc010c245,(%esp)$/;"	l
c010263d	obj/kernel.asm	/^c010263d:	e8 11 dd ff ff       	call   c0100353 <cprintf>$/;"	l
c0102642	obj/kernel.asm	/^c0102642:	c9                   	leave  $/;"	l
c0102643	obj/kernel.asm	/^c0102643:	c3                   	ret    $/;"	l
c0102644	obj/kernel.asm	/^c0102644 <print_pgfault>:$/;"	l
c0102644	obj/kernel.asm	/^c0102644:	55                   	push   %ebp$/;"	l
c0102645	obj/kernel.asm	/^c0102645:	89 e5                	mov    %esp,%ebp$/;"	l
c0102647	obj/kernel.asm	/^c0102647:	53                   	push   %ebx$/;"	l
c0102648	obj/kernel.asm	/^c0102648:	83 ec 34             	sub    $0x34,%esp$/;"	l
c010264b	obj/kernel.asm	/^c010264b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010264e	obj/kernel.asm	/^c010264e:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102651	obj/kernel.asm	/^c0102651:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102654	obj/kernel.asm	/^c0102654:	85 c0                	test   %eax,%eax$/;"	l
c0102656	obj/kernel.asm	/^c0102656:	74 07                	je     c010265f <print_pgfault+0x1b>$/;"	l
c0102658	obj/kernel.asm	/^c0102658:	b9 54 c2 10 c0       	mov    $0xc010c254,%ecx$/;"	l
c010265d	obj/kernel.asm	/^c010265d:	eb 05                	jmp    c0102664 <print_pgfault+0x20>$/;"	l
c010265f	obj/kernel.asm	/^c010265f:	b9 65 c2 10 c0       	mov    $0xc010c265,%ecx$/;"	l
c0102664	obj/kernel.asm	/^c0102664:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102667	obj/kernel.asm	/^c0102667:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010266a	obj/kernel.asm	/^c010266a:	83 e0 02             	and    $0x2,%eax$/;"	l
c010266d	obj/kernel.asm	/^c010266d:	85 c0                	test   %eax,%eax$/;"	l
c010266f	obj/kernel.asm	/^c010266f:	74 07                	je     c0102678 <print_pgfault+0x34>$/;"	l
c0102671	obj/kernel.asm	/^c0102671:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
c0102676	obj/kernel.asm	/^c0102676:	eb 05                	jmp    c010267d <print_pgfault+0x39>$/;"	l
c0102678	obj/kernel.asm	/^c0102678:	ba 52 00 00 00       	mov    $0x52,%edx$/;"	l
c010267d	obj/kernel.asm	/^c010267d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102680	obj/kernel.asm	/^c0102680:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102683	obj/kernel.asm	/^c0102683:	83 e0 04             	and    $0x4,%eax$/;"	l
c0102686	obj/kernel.asm	/^c0102686:	85 c0                	test   %eax,%eax$/;"	l
c0102688	obj/kernel.asm	/^c0102688:	74 07                	je     c0102691 <print_pgfault+0x4d>$/;"	l
c010268a	obj/kernel.asm	/^c010268a:	b8 55 00 00 00       	mov    $0x55,%eax$/;"	l
c010268f	obj/kernel.asm	/^c010268f:	eb 05                	jmp    c0102696 <print_pgfault+0x52>$/;"	l
c0102691	obj/kernel.asm	/^c0102691:	b8 4b 00 00 00       	mov    $0x4b,%eax$/;"	l
c0102696	obj/kernel.asm	/^c0102696:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
c0102699	obj/kernel.asm	/^c0102699:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
c010269c	obj/kernel.asm	/^c010269c:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
c010269f	obj/kernel.asm	/^c010269f:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c01026a3	obj/kernel.asm	/^c01026a3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01026a7	obj/kernel.asm	/^c01026a7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01026ab	obj/kernel.asm	/^c01026ab:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c01026af	obj/kernel.asm	/^c01026af:	c7 04 24 74 c2 10 c0 	movl   $0xc010c274,(%esp)$/;"	l
c01026b6	obj/kernel.asm	/^c01026b6:	e8 98 dc ff ff       	call   c0100353 <cprintf>$/;"	l
c01026bb	obj/kernel.asm	/^c01026bb:	83 c4 34             	add    $0x34,%esp$/;"	l
c01026be	obj/kernel.asm	/^c01026be:	5b                   	pop    %ebx$/;"	l
c01026bf	obj/kernel.asm	/^c01026bf:	5d                   	pop    %ebp$/;"	l
c01026c0	obj/kernel.asm	/^c01026c0:	c3                   	ret    $/;"	l
c01026c1	obj/kernel.asm	/^c01026c1 <pgfault_handler>:$/;"	l
c01026c1	obj/kernel.asm	/^c01026c1:	55                   	push   %ebp$/;"	l
c01026c2	obj/kernel.asm	/^c01026c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01026c4	obj/kernel.asm	/^c01026c4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01026c7	obj/kernel.asm	/^c01026c7:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c01026cc	obj/kernel.asm	/^c01026cc:	85 c0                	test   %eax,%eax$/;"	l
c01026ce	obj/kernel.asm	/^c01026ce:	74 0b                	je     c01026db <pgfault_handler+0x1a>$/;"	l
c01026d0	obj/kernel.asm	/^c01026d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026d3	obj/kernel.asm	/^c01026d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01026d6	obj/kernel.asm	/^c01026d6:	e8 69 ff ff ff       	call   c0102644 <print_pgfault>$/;"	l
c01026db	obj/kernel.asm	/^c01026db:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c01026e0	obj/kernel.asm	/^c01026e0:	85 c0                	test   %eax,%eax$/;"	l
c01026e2	obj/kernel.asm	/^c01026e2:	74 3d                	je     c0102721 <pgfault_handler+0x60>$/;"	l
c01026e4	obj/kernel.asm	/^c01026e4:	8b 15 88 cf 19 c0    	mov    0xc019cf88,%edx$/;"	l
c01026ea	obj/kernel.asm	/^c01026ea:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c01026ef	obj/kernel.asm	/^c01026ef:	39 c2                	cmp    %eax,%edx$/;"	l
c01026f1	obj/kernel.asm	/^c01026f1:	74 24                	je     c0102717 <pgfault_handler+0x56>$/;"	l
c01026f3	obj/kernel.asm	/^c01026f3:	c7 44 24 0c 97 c2 10 	movl   $0xc010c297,0xc(%esp)$/;"	l
c01026fa	obj/kernel.asm	/^c01026fa:	c0 $/;"	l
c01026fb	obj/kernel.asm	/^c01026fb:	c7 44 24 08 ab c2 10 	movl   $0xc010c2ab,0x8(%esp)$/;"	l
c0102702	obj/kernel.asm	/^c0102702:	c0 $/;"	l
c0102703	obj/kernel.asm	/^c0102703:	c7 44 24 04 b4 00 00 	movl   $0xb4,0x4(%esp)$/;"	l
c010270a	obj/kernel.asm	/^c010270a:	00 $/;"	l
c010270b	obj/kernel.asm	/^c010270b:	c7 04 24 c0 c2 10 c0 	movl   $0xc010c2c0,(%esp)$/;"	l
c0102712	obj/kernel.asm	/^c0102712:	e8 be e6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0102717	obj/kernel.asm	/^c0102717:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c010271c	obj/kernel.asm	/^c010271c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010271f	obj/kernel.asm	/^c010271f:	eb 46                	jmp    c0102767 <pgfault_handler+0xa6>$/;"	l
c0102721	obj/kernel.asm	/^c0102721:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0102726	obj/kernel.asm	/^c0102726:	85 c0                	test   %eax,%eax$/;"	l
c0102728	obj/kernel.asm	/^c0102728:	75 32                	jne    c010275c <pgfault_handler+0x9b>$/;"	l
c010272a	obj/kernel.asm	/^c010272a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010272d	obj/kernel.asm	/^c010272d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102730	obj/kernel.asm	/^c0102730:	e8 93 fc ff ff       	call   c01023c8 <print_trapframe>$/;"	l
c0102735	obj/kernel.asm	/^c0102735:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102738	obj/kernel.asm	/^c0102738:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010273b	obj/kernel.asm	/^c010273b:	e8 04 ff ff ff       	call   c0102644 <print_pgfault>$/;"	l
c0102740	obj/kernel.asm	/^c0102740:	c7 44 24 08 d1 c2 10 	movl   $0xc010c2d1,0x8(%esp)$/;"	l
c0102747	obj/kernel.asm	/^c0102747:	c0 $/;"	l
c0102748	obj/kernel.asm	/^c0102748:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)$/;"	l
c010274f	obj/kernel.asm	/^c010274f:	00 $/;"	l
c0102750	obj/kernel.asm	/^c0102750:	c7 04 24 c0 c2 10 c0 	movl   $0xc010c2c0,(%esp)$/;"	l
c0102757	obj/kernel.asm	/^c0102757:	e8 79 e6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010275c	obj/kernel.asm	/^c010275c:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0102761	obj/kernel.asm	/^c0102761:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0102764	obj/kernel.asm	/^c0102764:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102767	obj/kernel.asm	/^c0102767:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c010276a	obj/kernel.asm	/^c010276a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010276d	obj/kernel.asm	/^c010276d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102770	obj/kernel.asm	/^c0102770:	89 c2                	mov    %eax,%edx$/;"	l
c0102772	obj/kernel.asm	/^c0102772:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102775	obj/kernel.asm	/^c0102775:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102778	obj/kernel.asm	/^c0102778:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010277c	obj/kernel.asm	/^c010277c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102780	obj/kernel.asm	/^c0102780:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102783	obj/kernel.asm	/^c0102783:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102786	obj/kernel.asm	/^c0102786:	e8 b5 64 00 00       	call   c0108c40 <do_pgfault>$/;"	l
c010278b	obj/kernel.asm	/^c010278b:	c9                   	leave  $/;"	l
c010278c	obj/kernel.asm	/^c010278c:	c3                   	ret    $/;"	l
c010278d	obj/kernel.asm	/^c010278d <trap_dispatch>:$/;"	l
c010278d	obj/kernel.asm	/^c010278d:	55                   	push   %ebp$/;"	l
c010278e	obj/kernel.asm	/^c010278e:	89 e5                	mov    %esp,%ebp$/;"	l
c0102790	obj/kernel.asm	/^c0102790:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0102793	obj/kernel.asm	/^c0102793:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010279a	obj/kernel.asm	/^c010279a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010279d	obj/kernel.asm	/^c010279d:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01027a0	obj/kernel.asm	/^c01027a0:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c01027a3	obj/kernel.asm	/^c01027a3:	77 38                	ja     c01027dd <trap_dispatch+0x50>$/;"	l
c01027a5	obj/kernel.asm	/^c01027a5:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c01027a8	obj/kernel.asm	/^c01027a8:	0f 83 fe 01 00 00    	jae    c01029ac <trap_dispatch+0x21f>$/;"	l
c01027ae	obj/kernel.asm	/^c01027ae:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01027b1	obj/kernel.asm	/^c01027b1:	0f 84 07 01 00 00    	je     c01028be <trap_dispatch+0x131>$/;"	l
c01027b7	obj/kernel.asm	/^c01027b7:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01027ba	obj/kernel.asm	/^c01027ba:	77 0a                	ja     c01027c6 <trap_dispatch+0x39>$/;"	l
c01027bc	obj/kernel.asm	/^c01027bc:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c01027bf	obj/kernel.asm	/^c01027bf:	74 3e                	je     c01027ff <trap_dispatch+0x72>$/;"	l
c01027c1	obj/kernel.asm	/^c01027c1:	e9 9e 01 00 00       	jmp    c0102964 <trap_dispatch+0x1d7>$/;"	l
c01027c6	obj/kernel.asm	/^c01027c6:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c01027c9	obj/kernel.asm	/^c01027c9:	0f 84 53 01 00 00    	je     c0102922 <trap_dispatch+0x195>$/;"	l
c01027cf	obj/kernel.asm	/^c01027cf:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c01027d2	obj/kernel.asm	/^c01027d2:	0f 84 21 01 00 00    	je     c01028f9 <trap_dispatch+0x16c>$/;"	l
c01027d8	obj/kernel.asm	/^c01027d8:	e9 87 01 00 00       	jmp    c0102964 <trap_dispatch+0x1d7>$/;"	l
c01027dd	obj/kernel.asm	/^c01027dd:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c01027e0	obj/kernel.asm	/^c01027e0:	0f 82 7e 01 00 00    	jb     c0102964 <trap_dispatch+0x1d7>$/;"	l
c01027e6	obj/kernel.asm	/^c01027e6:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c01027e9	obj/kernel.asm	/^c01027e9:	0f 86 59 01 00 00    	jbe    c0102948 <trap_dispatch+0x1bb>$/;"	l
c01027ef	obj/kernel.asm	/^c01027ef:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c01027f4	obj/kernel.asm	/^c01027f4:	0f 84 ba 00 00 00    	je     c01028b4 <trap_dispatch+0x127>$/;"	l
c01027fa	obj/kernel.asm	/^c01027fa:	e9 65 01 00 00       	jmp    c0102964 <trap_dispatch+0x1d7>$/;"	l
c01027ff	obj/kernel.asm	/^c01027ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102802	obj/kernel.asm	/^c0102802:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102805	obj/kernel.asm	/^c0102805:	e8 b7 fe ff ff       	call   c01026c1 <pgfault_handler>$/;"	l
c010280a	obj/kernel.asm	/^c010280a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010280d	obj/kernel.asm	/^c010280d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0102811	obj/kernel.asm	/^c0102811:	0f 84 98 00 00 00    	je     c01028af <trap_dispatch+0x122>$/;"	l
c0102817	obj/kernel.asm	/^c0102817:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010281a	obj/kernel.asm	/^c010281a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010281d	obj/kernel.asm	/^c010281d:	e8 a6 fb ff ff       	call   c01023c8 <print_trapframe>$/;"	l
c0102822	obj/kernel.asm	/^c0102822:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0102827	obj/kernel.asm	/^c0102827:	85 c0                	test   %eax,%eax$/;"	l
c0102829	obj/kernel.asm	/^c0102829:	75 23                	jne    c010284e <trap_dispatch+0xc1>$/;"	l
c010282b	obj/kernel.asm	/^c010282b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010282e	obj/kernel.asm	/^c010282e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0102832	obj/kernel.asm	/^c0102832:	c7 44 24 08 e8 c2 10 	movl   $0xc010c2e8,0x8(%esp)$/;"	l
c0102839	obj/kernel.asm	/^c0102839:	c0 $/;"	l
c010283a	obj/kernel.asm	/^c010283a:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
c0102841	obj/kernel.asm	/^c0102841:	00 $/;"	l
c0102842	obj/kernel.asm	/^c0102842:	c7 04 24 c0 c2 10 c0 	movl   $0xc010c2c0,(%esp)$/;"	l
c0102849	obj/kernel.asm	/^c0102849:	e8 87 e5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010284e	obj/kernel.asm	/^c010284e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102851	obj/kernel.asm	/^c0102851:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102854	obj/kernel.asm	/^c0102854:	e8 59 fb ff ff       	call   c01023b2 <trap_in_kernel>$/;"	l
c0102859	obj/kernel.asm	/^c0102859:	85 c0                	test   %eax,%eax$/;"	l
c010285b	obj/kernel.asm	/^c010285b:	74 23                	je     c0102880 <trap_dispatch+0xf3>$/;"	l
c010285d	obj/kernel.asm	/^c010285d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102860	obj/kernel.asm	/^c0102860:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0102864	obj/kernel.asm	/^c0102864:	c7 44 24 08 08 c3 10 	movl   $0xc010c308,0x8(%esp)$/;"	l
c010286b	obj/kernel.asm	/^c010286b:	c0 $/;"	l
c010286c	obj/kernel.asm	/^c010286c:	c7 44 24 04 d4 00 00 	movl   $0xd4,0x4(%esp)$/;"	l
c0102873	obj/kernel.asm	/^c0102873:	00 $/;"	l
c0102874	obj/kernel.asm	/^c0102874:	c7 04 24 c0 c2 10 c0 	movl   $0xc010c2c0,(%esp)$/;"	l
c010287b	obj/kernel.asm	/^c010287b:	e8 55 e5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0102880	obj/kernel.asm	/^c0102880:	c7 04 24 36 c3 10 c0 	movl   $0xc010c336,(%esp)$/;"	l
c0102887	obj/kernel.asm	/^c0102887:	e8 c7 da ff ff       	call   c0100353 <cprintf>$/;"	l
c010288c	obj/kernel.asm	/^c010288c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010288f	obj/kernel.asm	/^c010288f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0102893	obj/kernel.asm	/^c0102893:	c7 44 24 08 4c c3 10 	movl   $0xc010c34c,0x8(%esp)$/;"	l
c010289a	obj/kernel.asm	/^c010289a:	c0 $/;"	l
c010289b	obj/kernel.asm	/^c010289b:	c7 44 24 04 d7 00 00 	movl   $0xd7,0x4(%esp)$/;"	l
c01028a2	obj/kernel.asm	/^c01028a2:	00 $/;"	l
c01028a3	obj/kernel.asm	/^c01028a3:	c7 04 24 c0 c2 10 c0 	movl   $0xc010c2c0,(%esp)$/;"	l
c01028aa	obj/kernel.asm	/^c01028aa:	e8 26 e5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01028af	obj/kernel.asm	/^c01028af:	e9 f9 00 00 00       	jmp    c01029ad <trap_dispatch+0x220>$/;"	l
c01028b4	obj/kernel.asm	/^c01028b4:	e8 9f 86 00 00       	call   c010af58 <syscall>$/;"	l
c01028b9	obj/kernel.asm	/^c01028b9:	e9 ef 00 00 00       	jmp    c01029ad <trap_dispatch+0x220>$/;"	l
c01028be	obj/kernel.asm	/^c01028be:	a1 b4 ef 19 c0       	mov    0xc019efb4,%eax$/;"	l
c01028c3	obj/kernel.asm	/^c01028c3:	83 c0 01             	add    $0x1,%eax$/;"	l
c01028c6	obj/kernel.asm	/^c01028c6:	a3 b4 ef 19 c0       	mov    %eax,0xc019efb4$/;"	l
c01028cb	obj/kernel.asm	/^c01028cb:	8b 0d b4 ef 19 c0    	mov    0xc019efb4,%ecx$/;"	l
c01028d1	obj/kernel.asm	/^c01028d1:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx$/;"	l
c01028d6	obj/kernel.asm	/^c01028d6:	89 c8                	mov    %ecx,%eax$/;"	l
c01028d8	obj/kernel.asm	/^c01028d8:	f7 e2                	mul    %edx$/;"	l
c01028da	obj/kernel.asm	/^c01028da:	89 d0                	mov    %edx,%eax$/;"	l
c01028dc	obj/kernel.asm	/^c01028dc:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c01028df	obj/kernel.asm	/^c01028df:	6b c0 64             	imul   $0x64,%eax,%eax$/;"	l
c01028e2	obj/kernel.asm	/^c01028e2:	29 c1                	sub    %eax,%ecx$/;"	l
c01028e4	obj/kernel.asm	/^c01028e4:	89 c8                	mov    %ecx,%eax$/;"	l
c01028e6	obj/kernel.asm	/^c01028e6:	85 c0                	test   %eax,%eax$/;"	l
c01028e8	obj/kernel.asm	/^c01028e8:	75 0a                	jne    c01028f4 <trap_dispatch+0x167>$/;"	l
c01028ea	obj/kernel.asm	/^c01028ea:	e8 05 f9 ff ff       	call   c01021f4 <print_ticks>$/;"	l
c01028ef	obj/kernel.asm	/^c01028ef:	e9 b9 00 00 00       	jmp    c01029ad <trap_dispatch+0x220>$/;"	l
c01028f4	obj/kernel.asm	/^c01028f4:	e9 b4 00 00 00       	jmp    c01029ad <trap_dispatch+0x220>$/;"	l
c01028f9	obj/kernel.asm	/^c01028f9:	e8 45 ee ff ff       	call   c0101743 <cons_getc>$/;"	l
c01028fe	obj/kernel.asm	/^c01028fe:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0102901	obj/kernel.asm	/^c0102901:	0f be 55 f3          	movsbl -0xd(%ebp),%edx$/;"	l
c0102905	obj/kernel.asm	/^c0102905:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c0102909	obj/kernel.asm	/^c0102909:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010290d	obj/kernel.asm	/^c010290d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102911	obj/kernel.asm	/^c0102911:	c7 04 24 75 c3 10 c0 	movl   $0xc010c375,(%esp)$/;"	l
c0102918	obj/kernel.asm	/^c0102918:	e8 36 da ff ff       	call   c0100353 <cprintf>$/;"	l
c010291d	obj/kernel.asm	/^c010291d:	e9 8b 00 00 00       	jmp    c01029ad <trap_dispatch+0x220>$/;"	l
c0102922	obj/kernel.asm	/^c0102922:	e8 1c ee ff ff       	call   c0101743 <cons_getc>$/;"	l
c0102927	obj/kernel.asm	/^c0102927:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c010292a	obj/kernel.asm	/^c010292a:	0f be 55 f3          	movsbl -0xd(%ebp),%edx$/;"	l
c010292e	obj/kernel.asm	/^c010292e:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c0102932	obj/kernel.asm	/^c0102932:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0102936	obj/kernel.asm	/^c0102936:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010293a	obj/kernel.asm	/^c010293a:	c7 04 24 87 c3 10 c0 	movl   $0xc010c387,(%esp)$/;"	l
c0102941	obj/kernel.asm	/^c0102941:	e8 0d da ff ff       	call   c0100353 <cprintf>$/;"	l
c0102946	obj/kernel.asm	/^c0102946:	eb 65                	jmp    c01029ad <trap_dispatch+0x220>$/;"	l
c0102948	obj/kernel.asm	/^c0102948:	c7 44 24 08 96 c3 10 	movl   $0xc010c396,0x8(%esp)$/;"	l
c010294f	obj/kernel.asm	/^c010294f:	c0 $/;"	l
c0102950	obj/kernel.asm	/^c0102950:	c7 44 24 04 fe 00 00 	movl   $0xfe,0x4(%esp)$/;"	l
c0102957	obj/kernel.asm	/^c0102957:	00 $/;"	l
c0102958	obj/kernel.asm	/^c0102958:	c7 04 24 c0 c2 10 c0 	movl   $0xc010c2c0,(%esp)$/;"	l
c010295f	obj/kernel.asm	/^c010295f:	e8 71 e4 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0102964	obj/kernel.asm	/^c0102964:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102967	obj/kernel.asm	/^c0102967:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010296a	obj/kernel.asm	/^c010296a:	e8 59 fa ff ff       	call   c01023c8 <print_trapframe>$/;"	l
c010296f	obj/kernel.asm	/^c010296f:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0102974	obj/kernel.asm	/^c0102974:	85 c0                	test   %eax,%eax$/;"	l
c0102976	obj/kernel.asm	/^c0102976:	74 18                	je     c0102990 <trap_dispatch+0x203>$/;"	l
c0102978	obj/kernel.asm	/^c0102978:	c7 04 24 a6 c3 10 c0 	movl   $0xc010c3a6,(%esp)$/;"	l
c010297f	obj/kernel.asm	/^c010297f:	e8 cf d9 ff ff       	call   c0100353 <cprintf>$/;"	l
c0102984	obj/kernel.asm	/^c0102984:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c010298b	obj/kernel.asm	/^c010298b:	e8 b9 73 00 00       	call   c0109d49 <do_exit>$/;"	l
c0102990	obj/kernel.asm	/^c0102990:	c7 44 24 08 b7 c3 10 	movl   $0xc010c3b7,0x8(%esp)$/;"	l
c0102997	obj/kernel.asm	/^c0102997:	c0 $/;"	l
c0102998	obj/kernel.asm	/^c0102998:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
c010299f	obj/kernel.asm	/^c010299f:	00 $/;"	l
c01029a0	obj/kernel.asm	/^c01029a0:	c7 04 24 c0 c2 10 c0 	movl   $0xc010c2c0,(%esp)$/;"	l
c01029a7	obj/kernel.asm	/^c01029a7:	e8 29 e4 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01029ac	obj/kernel.asm	/^c01029ac:	90                   	nop$/;"	l
c01029ad	obj/kernel.asm	/^c01029ad:	c9                   	leave  $/;"	l
c01029ae	obj/kernel.asm	/^c01029ae:	c3                   	ret    $/;"	l
c01029af	obj/kernel.asm	/^c01029af <trap>:$/;"	l
c01029af	obj/kernel.asm	/^c01029af:	55                   	push   %ebp$/;"	l
c01029b0	obj/kernel.asm	/^c01029b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01029b2	obj/kernel.asm	/^c01029b2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01029b5	obj/kernel.asm	/^c01029b5:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c01029ba	obj/kernel.asm	/^c01029ba:	85 c0                	test   %eax,%eax$/;"	l
c01029bc	obj/kernel.asm	/^c01029bc:	75 0d                	jne    c01029cb <trap+0x1c>$/;"	l
c01029be	obj/kernel.asm	/^c01029be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01029c1	obj/kernel.asm	/^c01029c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01029c4	obj/kernel.asm	/^c01029c4:	e8 c4 fd ff ff       	call   c010278d <trap_dispatch>$/;"	l
c01029c9	obj/kernel.asm	/^c01029c9:	eb 6c                	jmp    c0102a37 <trap+0x88>$/;"	l
c01029cb	obj/kernel.asm	/^c01029cb:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c01029d0	obj/kernel.asm	/^c01029d0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01029d3	obj/kernel.asm	/^c01029d3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01029d6	obj/kernel.asm	/^c01029d6:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c01029db	obj/kernel.asm	/^c01029db:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01029de	obj/kernel.asm	/^c01029de:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c01029e1	obj/kernel.asm	/^c01029e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01029e4	obj/kernel.asm	/^c01029e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01029e7	obj/kernel.asm	/^c01029e7:	e8 c6 f9 ff ff       	call   c01023b2 <trap_in_kernel>$/;"	l
c01029ec	obj/kernel.asm	/^c01029ec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01029ef	obj/kernel.asm	/^c01029ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01029f2	obj/kernel.asm	/^c01029f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01029f5	obj/kernel.asm	/^c01029f5:	e8 93 fd ff ff       	call   c010278d <trap_dispatch>$/;"	l
c01029fa	obj/kernel.asm	/^c01029fa:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c01029ff	obj/kernel.asm	/^c01029ff:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102a02	obj/kernel.asm	/^c0102a02:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102a05	obj/kernel.asm	/^c0102a05:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102a09	obj/kernel.asm	/^c0102a09:	75 2c                	jne    c0102a37 <trap+0x88>$/;"	l
c0102a0b	obj/kernel.asm	/^c0102a0b:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0102a10	obj/kernel.asm	/^c0102a10:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102a13	obj/kernel.asm	/^c0102a13:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102a16	obj/kernel.asm	/^c0102a16:	85 c0                	test   %eax,%eax$/;"	l
c0102a18	obj/kernel.asm	/^c0102a18:	74 0c                	je     c0102a26 <trap+0x77>$/;"	l
c0102a1a	obj/kernel.asm	/^c0102a1a:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c0102a21	obj/kernel.asm	/^c0102a21:	e8 23 73 00 00       	call   c0109d49 <do_exit>$/;"	l
c0102a26	obj/kernel.asm	/^c0102a26:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0102a2b	obj/kernel.asm	/^c0102a2b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102a2e	obj/kernel.asm	/^c0102a2e:	85 c0                	test   %eax,%eax$/;"	l
c0102a30	obj/kernel.asm	/^c0102a30:	74 05                	je     c0102a37 <trap+0x88>$/;"	l
c0102a32	obj/kernel.asm	/^c0102a32:	e8 29 83 00 00       	call   c010ad60 <schedule>$/;"	l
c0102a37	obj/kernel.asm	/^c0102a37:	c9                   	leave  $/;"	l
c0102a38	obj/kernel.asm	/^c0102a38:	c3                   	ret    $/;"	l
c0102a39	obj/kernel.asm	/^c0102a39 <__alltraps>:$/;"	l
c0102a39	obj/kernel.asm	/^c0102a39:	1e                   	push   %ds$/;"	l
c0102a3a	obj/kernel.asm	/^c0102a3a:	06                   	push   %es$/;"	l
c0102a3b	obj/kernel.asm	/^c0102a3b:	0f a0                	push   %fs$/;"	l
c0102a3d	obj/kernel.asm	/^c0102a3d:	0f a8                	push   %gs$/;"	l
c0102a3f	obj/kernel.asm	/^c0102a3f:	60                   	pusha  $/;"	l
c0102a40	obj/kernel.asm	/^c0102a40:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0102a45	obj/kernel.asm	/^c0102a45:	8e d8                	mov    %eax,%ds$/;"	l
c0102a47	obj/kernel.asm	/^c0102a47:	8e c0                	mov    %eax,%es$/;"	l
c0102a49	obj/kernel.asm	/^c0102a49:	54                   	push   %esp$/;"	l
c0102a4a	obj/kernel.asm	/^c0102a4a:	e8 60 ff ff ff       	call   c01029af <trap>$/;"	l
c0102a4f	obj/kernel.asm	/^c0102a4f:	5c                   	pop    %esp$/;"	l
c0102a50	obj/kernel.asm	/^c0102a50 <__trapret>:$/;"	l
c0102a50	obj/kernel.asm	/^c0102a50:	61                   	popa   $/;"	l
c0102a51	obj/kernel.asm	/^c0102a51:	0f a9                	pop    %gs$/;"	l
c0102a53	obj/kernel.asm	/^c0102a53:	0f a1                	pop    %fs$/;"	l
c0102a55	obj/kernel.asm	/^c0102a55:	07                   	pop    %es$/;"	l
c0102a56	obj/kernel.asm	/^c0102a56:	1f                   	pop    %ds$/;"	l
c0102a57	obj/kernel.asm	/^c0102a57:	83 c4 08             	add    $0x8,%esp$/;"	l
c0102a5a	obj/kernel.asm	/^c0102a5a:	cf                   	iret   $/;"	l
c0102a5b	obj/kernel.asm	/^c0102a5b <forkrets>:$/;"	l
c0102a5b	obj/kernel.asm	/^c0102a5b:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c0102a5f	obj/kernel.asm	/^c0102a5f:	e9 ec ff ff ff       	jmp    c0102a50 <__trapret>$/;"	l
c0102a64	obj/kernel.asm	/^c0102a64 <vector0>:$/;"	l
c0102a64	obj/kernel.asm	/^c0102a64:	6a 00                	push   $0x0$/;"	l
c0102a66	obj/kernel.asm	/^c0102a66:	6a 00                	push   $0x0$/;"	l
c0102a68	obj/kernel.asm	/^c0102a68:	e9 cc ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102a6d	obj/kernel.asm	/^c0102a6d <vector1>:$/;"	l
c0102a6d	obj/kernel.asm	/^c0102a6d:	6a 00                	push   $0x0$/;"	l
c0102a6f	obj/kernel.asm	/^c0102a6f:	6a 01                	push   $0x1$/;"	l
c0102a71	obj/kernel.asm	/^c0102a71:	e9 c3 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102a76	obj/kernel.asm	/^c0102a76 <vector2>:$/;"	l
c0102a76	obj/kernel.asm	/^c0102a76:	6a 00                	push   $0x0$/;"	l
c0102a78	obj/kernel.asm	/^c0102a78:	6a 02                	push   $0x2$/;"	l
c0102a7a	obj/kernel.asm	/^c0102a7a:	e9 ba ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102a7f	obj/kernel.asm	/^c0102a7f <vector3>:$/;"	l
c0102a7f	obj/kernel.asm	/^c0102a7f:	6a 00                	push   $0x0$/;"	l
c0102a81	obj/kernel.asm	/^c0102a81:	6a 03                	push   $0x3$/;"	l
c0102a83	obj/kernel.asm	/^c0102a83:	e9 b1 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102a88	obj/kernel.asm	/^c0102a88 <vector4>:$/;"	l
c0102a88	obj/kernel.asm	/^c0102a88:	6a 00                	push   $0x0$/;"	l
c0102a8a	obj/kernel.asm	/^c0102a8a:	6a 04                	push   $0x4$/;"	l
c0102a8c	obj/kernel.asm	/^c0102a8c:	e9 a8 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102a91	obj/kernel.asm	/^c0102a91 <vector5>:$/;"	l
c0102a91	obj/kernel.asm	/^c0102a91:	6a 00                	push   $0x0$/;"	l
c0102a93	obj/kernel.asm	/^c0102a93:	6a 05                	push   $0x5$/;"	l
c0102a95	obj/kernel.asm	/^c0102a95:	e9 9f ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102a9a	obj/kernel.asm	/^c0102a9a <vector6>:$/;"	l
c0102a9a	obj/kernel.asm	/^c0102a9a:	6a 00                	push   $0x0$/;"	l
c0102a9c	obj/kernel.asm	/^c0102a9c:	6a 06                	push   $0x6$/;"	l
c0102a9e	obj/kernel.asm	/^c0102a9e:	e9 96 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102aa3	obj/kernel.asm	/^c0102aa3 <vector7>:$/;"	l
c0102aa3	obj/kernel.asm	/^c0102aa3:	6a 00                	push   $0x0$/;"	l
c0102aa5	obj/kernel.asm	/^c0102aa5:	6a 07                	push   $0x7$/;"	l
c0102aa7	obj/kernel.asm	/^c0102aa7:	e9 8d ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102aac	obj/kernel.asm	/^c0102aac <vector8>:$/;"	l
c0102aac	obj/kernel.asm	/^c0102aac:	6a 08                	push   $0x8$/;"	l
c0102aae	obj/kernel.asm	/^c0102aae:	e9 86 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3 <vector9>:$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	6a 09                	push   $0x9$/;"	l
c0102ab5	obj/kernel.asm	/^c0102ab5:	e9 7f ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102aba	obj/kernel.asm	/^c0102aba <vector10>:$/;"	l
c0102aba	obj/kernel.asm	/^c0102aba:	6a 0a                	push   $0xa$/;"	l
c0102abc	obj/kernel.asm	/^c0102abc:	e9 78 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ac1	obj/kernel.asm	/^c0102ac1 <vector11>:$/;"	l
c0102ac1	obj/kernel.asm	/^c0102ac1:	6a 0b                	push   $0xb$/;"	l
c0102ac3	obj/kernel.asm	/^c0102ac3:	e9 71 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ac8	obj/kernel.asm	/^c0102ac8 <vector12>:$/;"	l
c0102ac8	obj/kernel.asm	/^c0102ac8:	6a 0c                	push   $0xc$/;"	l
c0102aca	obj/kernel.asm	/^c0102aca:	e9 6a ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102acf	obj/kernel.asm	/^c0102acf <vector13>:$/;"	l
c0102acf	obj/kernel.asm	/^c0102acf:	6a 0d                	push   $0xd$/;"	l
c0102ad1	obj/kernel.asm	/^c0102ad1:	e9 63 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ad6	obj/kernel.asm	/^c0102ad6 <vector14>:$/;"	l
c0102ad6	obj/kernel.asm	/^c0102ad6:	6a 0e                	push   $0xe$/;"	l
c0102ad8	obj/kernel.asm	/^c0102ad8:	e9 5c ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102add	obj/kernel.asm	/^c0102add <vector15>:$/;"	l
c0102add	obj/kernel.asm	/^c0102add:	6a 00                	push   $0x0$/;"	l
c0102adf	obj/kernel.asm	/^c0102adf:	6a 0f                	push   $0xf$/;"	l
c0102ae1	obj/kernel.asm	/^c0102ae1:	e9 53 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ae6	obj/kernel.asm	/^c0102ae6 <vector16>:$/;"	l
c0102ae6	obj/kernel.asm	/^c0102ae6:	6a 00                	push   $0x0$/;"	l
c0102ae8	obj/kernel.asm	/^c0102ae8:	6a 10                	push   $0x10$/;"	l
c0102aea	obj/kernel.asm	/^c0102aea:	e9 4a ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102aef	obj/kernel.asm	/^c0102aef <vector17>:$/;"	l
c0102aef	obj/kernel.asm	/^c0102aef:	6a 11                	push   $0x11$/;"	l
c0102af1	obj/kernel.asm	/^c0102af1:	e9 43 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102af6	obj/kernel.asm	/^c0102af6 <vector18>:$/;"	l
c0102af6	obj/kernel.asm	/^c0102af6:	6a 00                	push   $0x0$/;"	l
c0102af8	obj/kernel.asm	/^c0102af8:	6a 12                	push   $0x12$/;"	l
c0102afa	obj/kernel.asm	/^c0102afa:	e9 3a ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102aff	obj/kernel.asm	/^c0102aff <vector19>:$/;"	l
c0102aff	obj/kernel.asm	/^c0102aff:	6a 00                	push   $0x0$/;"	l
c0102b01	obj/kernel.asm	/^c0102b01:	6a 13                	push   $0x13$/;"	l
c0102b03	obj/kernel.asm	/^c0102b03:	e9 31 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b08	obj/kernel.asm	/^c0102b08 <vector20>:$/;"	l
c0102b08	obj/kernel.asm	/^c0102b08:	6a 00                	push   $0x0$/;"	l
c0102b0a	obj/kernel.asm	/^c0102b0a:	6a 14                	push   $0x14$/;"	l
c0102b0c	obj/kernel.asm	/^c0102b0c:	e9 28 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b11	obj/kernel.asm	/^c0102b11 <vector21>:$/;"	l
c0102b11	obj/kernel.asm	/^c0102b11:	6a 00                	push   $0x0$/;"	l
c0102b13	obj/kernel.asm	/^c0102b13:	6a 15                	push   $0x15$/;"	l
c0102b15	obj/kernel.asm	/^c0102b15:	e9 1f ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b1a	obj/kernel.asm	/^c0102b1a <vector22>:$/;"	l
c0102b1a	obj/kernel.asm	/^c0102b1a:	6a 00                	push   $0x0$/;"	l
c0102b1c	obj/kernel.asm	/^c0102b1c:	6a 16                	push   $0x16$/;"	l
c0102b1e	obj/kernel.asm	/^c0102b1e:	e9 16 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b23	obj/kernel.asm	/^c0102b23 <vector23>:$/;"	l
c0102b23	obj/kernel.asm	/^c0102b23:	6a 00                	push   $0x0$/;"	l
c0102b25	obj/kernel.asm	/^c0102b25:	6a 17                	push   $0x17$/;"	l
c0102b27	obj/kernel.asm	/^c0102b27:	e9 0d ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b2c	obj/kernel.asm	/^c0102b2c <vector24>:$/;"	l
c0102b2c	obj/kernel.asm	/^c0102b2c:	6a 00                	push   $0x0$/;"	l
c0102b2e	obj/kernel.asm	/^c0102b2e:	6a 18                	push   $0x18$/;"	l
c0102b30	obj/kernel.asm	/^c0102b30:	e9 04 ff ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b35	obj/kernel.asm	/^c0102b35 <vector25>:$/;"	l
c0102b35	obj/kernel.asm	/^c0102b35:	6a 00                	push   $0x0$/;"	l
c0102b37	obj/kernel.asm	/^c0102b37:	6a 19                	push   $0x19$/;"	l
c0102b39	obj/kernel.asm	/^c0102b39:	e9 fb fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b3e	obj/kernel.asm	/^c0102b3e <vector26>:$/;"	l
c0102b3e	obj/kernel.asm	/^c0102b3e:	6a 00                	push   $0x0$/;"	l
c0102b40	obj/kernel.asm	/^c0102b40:	6a 1a                	push   $0x1a$/;"	l
c0102b42	obj/kernel.asm	/^c0102b42:	e9 f2 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b47	obj/kernel.asm	/^c0102b47 <vector27>:$/;"	l
c0102b47	obj/kernel.asm	/^c0102b47:	6a 00                	push   $0x0$/;"	l
c0102b49	obj/kernel.asm	/^c0102b49:	6a 1b                	push   $0x1b$/;"	l
c0102b4b	obj/kernel.asm	/^c0102b4b:	e9 e9 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b50	obj/kernel.asm	/^c0102b50 <vector28>:$/;"	l
c0102b50	obj/kernel.asm	/^c0102b50:	6a 00                	push   $0x0$/;"	l
c0102b52	obj/kernel.asm	/^c0102b52:	6a 1c                	push   $0x1c$/;"	l
c0102b54	obj/kernel.asm	/^c0102b54:	e9 e0 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b59	obj/kernel.asm	/^c0102b59 <vector29>:$/;"	l
c0102b59	obj/kernel.asm	/^c0102b59:	6a 00                	push   $0x0$/;"	l
c0102b5b	obj/kernel.asm	/^c0102b5b:	6a 1d                	push   $0x1d$/;"	l
c0102b5d	obj/kernel.asm	/^c0102b5d:	e9 d7 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b62	obj/kernel.asm	/^c0102b62 <vector30>:$/;"	l
c0102b62	obj/kernel.asm	/^c0102b62:	6a 00                	push   $0x0$/;"	l
c0102b64	obj/kernel.asm	/^c0102b64:	6a 1e                	push   $0x1e$/;"	l
c0102b66	obj/kernel.asm	/^c0102b66:	e9 ce fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b6b	obj/kernel.asm	/^c0102b6b <vector31>:$/;"	l
c0102b6b	obj/kernel.asm	/^c0102b6b:	6a 00                	push   $0x0$/;"	l
c0102b6d	obj/kernel.asm	/^c0102b6d:	6a 1f                	push   $0x1f$/;"	l
c0102b6f	obj/kernel.asm	/^c0102b6f:	e9 c5 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b74	obj/kernel.asm	/^c0102b74 <vector32>:$/;"	l
c0102b74	obj/kernel.asm	/^c0102b74:	6a 00                	push   $0x0$/;"	l
c0102b76	obj/kernel.asm	/^c0102b76:	6a 20                	push   $0x20$/;"	l
c0102b78	obj/kernel.asm	/^c0102b78:	e9 bc fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b7d	obj/kernel.asm	/^c0102b7d <vector33>:$/;"	l
c0102b7d	obj/kernel.asm	/^c0102b7d:	6a 00                	push   $0x0$/;"	l
c0102b7f	obj/kernel.asm	/^c0102b7f:	6a 21                	push   $0x21$/;"	l
c0102b81	obj/kernel.asm	/^c0102b81:	e9 b3 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b86	obj/kernel.asm	/^c0102b86 <vector34>:$/;"	l
c0102b86	obj/kernel.asm	/^c0102b86:	6a 00                	push   $0x0$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88:	6a 22                	push   $0x22$/;"	l
c0102b8a	obj/kernel.asm	/^c0102b8a:	e9 aa fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b8f	obj/kernel.asm	/^c0102b8f <vector35>:$/;"	l
c0102b8f	obj/kernel.asm	/^c0102b8f:	6a 00                	push   $0x0$/;"	l
c0102b91	obj/kernel.asm	/^c0102b91:	6a 23                	push   $0x23$/;"	l
c0102b93	obj/kernel.asm	/^c0102b93:	e9 a1 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102b98	obj/kernel.asm	/^c0102b98 <vector36>:$/;"	l
c0102b98	obj/kernel.asm	/^c0102b98:	6a 00                	push   $0x0$/;"	l
c0102b9a	obj/kernel.asm	/^c0102b9a:	6a 24                	push   $0x24$/;"	l
c0102b9c	obj/kernel.asm	/^c0102b9c:	e9 98 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ba1	obj/kernel.asm	/^c0102ba1 <vector37>:$/;"	l
c0102ba1	obj/kernel.asm	/^c0102ba1:	6a 00                	push   $0x0$/;"	l
c0102ba3	obj/kernel.asm	/^c0102ba3:	6a 25                	push   $0x25$/;"	l
c0102ba5	obj/kernel.asm	/^c0102ba5:	e9 8f fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102baa	obj/kernel.asm	/^c0102baa <vector38>:$/;"	l
c0102baa	obj/kernel.asm	/^c0102baa:	6a 00                	push   $0x0$/;"	l
c0102bac	obj/kernel.asm	/^c0102bac:	6a 26                	push   $0x26$/;"	l
c0102bae	obj/kernel.asm	/^c0102bae:	e9 86 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102bb3	obj/kernel.asm	/^c0102bb3 <vector39>:$/;"	l
c0102bb3	obj/kernel.asm	/^c0102bb3:	6a 00                	push   $0x0$/;"	l
c0102bb5	obj/kernel.asm	/^c0102bb5:	6a 27                	push   $0x27$/;"	l
c0102bb7	obj/kernel.asm	/^c0102bb7:	e9 7d fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102bbc	obj/kernel.asm	/^c0102bbc <vector40>:$/;"	l
c0102bbc	obj/kernel.asm	/^c0102bbc:	6a 00                	push   $0x0$/;"	l
c0102bbe	obj/kernel.asm	/^c0102bbe:	6a 28                	push   $0x28$/;"	l
c0102bc0	obj/kernel.asm	/^c0102bc0:	e9 74 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102bc5	obj/kernel.asm	/^c0102bc5 <vector41>:$/;"	l
c0102bc5	obj/kernel.asm	/^c0102bc5:	6a 00                	push   $0x0$/;"	l
c0102bc7	obj/kernel.asm	/^c0102bc7:	6a 29                	push   $0x29$/;"	l
c0102bc9	obj/kernel.asm	/^c0102bc9:	e9 6b fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102bce	obj/kernel.asm	/^c0102bce <vector42>:$/;"	l
c0102bce	obj/kernel.asm	/^c0102bce:	6a 00                	push   $0x0$/;"	l
c0102bd0	obj/kernel.asm	/^c0102bd0:	6a 2a                	push   $0x2a$/;"	l
c0102bd2	obj/kernel.asm	/^c0102bd2:	e9 62 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102bd7	obj/kernel.asm	/^c0102bd7 <vector43>:$/;"	l
c0102bd7	obj/kernel.asm	/^c0102bd7:	6a 00                	push   $0x0$/;"	l
c0102bd9	obj/kernel.asm	/^c0102bd9:	6a 2b                	push   $0x2b$/;"	l
c0102bdb	obj/kernel.asm	/^c0102bdb:	e9 59 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102be0	obj/kernel.asm	/^c0102be0 <vector44>:$/;"	l
c0102be0	obj/kernel.asm	/^c0102be0:	6a 00                	push   $0x0$/;"	l
c0102be2	obj/kernel.asm	/^c0102be2:	6a 2c                	push   $0x2c$/;"	l
c0102be4	obj/kernel.asm	/^c0102be4:	e9 50 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102be9	obj/kernel.asm	/^c0102be9 <vector45>:$/;"	l
c0102be9	obj/kernel.asm	/^c0102be9:	6a 00                	push   $0x0$/;"	l
c0102beb	obj/kernel.asm	/^c0102beb:	6a 2d                	push   $0x2d$/;"	l
c0102bed	obj/kernel.asm	/^c0102bed:	e9 47 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102bf2	obj/kernel.asm	/^c0102bf2 <vector46>:$/;"	l
c0102bf2	obj/kernel.asm	/^c0102bf2:	6a 00                	push   $0x0$/;"	l
c0102bf4	obj/kernel.asm	/^c0102bf4:	6a 2e                	push   $0x2e$/;"	l
c0102bf6	obj/kernel.asm	/^c0102bf6:	e9 3e fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102bfb	obj/kernel.asm	/^c0102bfb <vector47>:$/;"	l
c0102bfb	obj/kernel.asm	/^c0102bfb:	6a 00                	push   $0x0$/;"	l
c0102bfd	obj/kernel.asm	/^c0102bfd:	6a 2f                	push   $0x2f$/;"	l
c0102bff	obj/kernel.asm	/^c0102bff:	e9 35 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c04	obj/kernel.asm	/^c0102c04 <vector48>:$/;"	l
c0102c04	obj/kernel.asm	/^c0102c04:	6a 00                	push   $0x0$/;"	l
c0102c06	obj/kernel.asm	/^c0102c06:	6a 30                	push   $0x30$/;"	l
c0102c08	obj/kernel.asm	/^c0102c08:	e9 2c fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c0d	obj/kernel.asm	/^c0102c0d <vector49>:$/;"	l
c0102c0d	obj/kernel.asm	/^c0102c0d:	6a 00                	push   $0x0$/;"	l
c0102c0f	obj/kernel.asm	/^c0102c0f:	6a 31                	push   $0x31$/;"	l
c0102c11	obj/kernel.asm	/^c0102c11:	e9 23 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c16	obj/kernel.asm	/^c0102c16 <vector50>:$/;"	l
c0102c16	obj/kernel.asm	/^c0102c16:	6a 00                	push   $0x0$/;"	l
c0102c18	obj/kernel.asm	/^c0102c18:	6a 32                	push   $0x32$/;"	l
c0102c1a	obj/kernel.asm	/^c0102c1a:	e9 1a fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c1f	obj/kernel.asm	/^c0102c1f <vector51>:$/;"	l
c0102c1f	obj/kernel.asm	/^c0102c1f:	6a 00                	push   $0x0$/;"	l
c0102c21	obj/kernel.asm	/^c0102c21:	6a 33                	push   $0x33$/;"	l
c0102c23	obj/kernel.asm	/^c0102c23:	e9 11 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c28	obj/kernel.asm	/^c0102c28 <vector52>:$/;"	l
c0102c28	obj/kernel.asm	/^c0102c28:	6a 00                	push   $0x0$/;"	l
c0102c2a	obj/kernel.asm	/^c0102c2a:	6a 34                	push   $0x34$/;"	l
c0102c2c	obj/kernel.asm	/^c0102c2c:	e9 08 fe ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c31	obj/kernel.asm	/^c0102c31 <vector53>:$/;"	l
c0102c31	obj/kernel.asm	/^c0102c31:	6a 00                	push   $0x0$/;"	l
c0102c33	obj/kernel.asm	/^c0102c33:	6a 35                	push   $0x35$/;"	l
c0102c35	obj/kernel.asm	/^c0102c35:	e9 ff fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c3a	obj/kernel.asm	/^c0102c3a <vector54>:$/;"	l
c0102c3a	obj/kernel.asm	/^c0102c3a:	6a 00                	push   $0x0$/;"	l
c0102c3c	obj/kernel.asm	/^c0102c3c:	6a 36                	push   $0x36$/;"	l
c0102c3e	obj/kernel.asm	/^c0102c3e:	e9 f6 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c43	obj/kernel.asm	/^c0102c43 <vector55>:$/;"	l
c0102c43	obj/kernel.asm	/^c0102c43:	6a 00                	push   $0x0$/;"	l
c0102c45	obj/kernel.asm	/^c0102c45:	6a 37                	push   $0x37$/;"	l
c0102c47	obj/kernel.asm	/^c0102c47:	e9 ed fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c4c	obj/kernel.asm	/^c0102c4c <vector56>:$/;"	l
c0102c4c	obj/kernel.asm	/^c0102c4c:	6a 00                	push   $0x0$/;"	l
c0102c4e	obj/kernel.asm	/^c0102c4e:	6a 38                	push   $0x38$/;"	l
c0102c50	obj/kernel.asm	/^c0102c50:	e9 e4 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c55	obj/kernel.asm	/^c0102c55 <vector57>:$/;"	l
c0102c55	obj/kernel.asm	/^c0102c55:	6a 00                	push   $0x0$/;"	l
c0102c57	obj/kernel.asm	/^c0102c57:	6a 39                	push   $0x39$/;"	l
c0102c59	obj/kernel.asm	/^c0102c59:	e9 db fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c5e	obj/kernel.asm	/^c0102c5e <vector58>:$/;"	l
c0102c5e	obj/kernel.asm	/^c0102c5e:	6a 00                	push   $0x0$/;"	l
c0102c60	obj/kernel.asm	/^c0102c60:	6a 3a                	push   $0x3a$/;"	l
c0102c62	obj/kernel.asm	/^c0102c62:	e9 d2 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c67	obj/kernel.asm	/^c0102c67 <vector59>:$/;"	l
c0102c67	obj/kernel.asm	/^c0102c67:	6a 00                	push   $0x0$/;"	l
c0102c69	obj/kernel.asm	/^c0102c69:	6a 3b                	push   $0x3b$/;"	l
c0102c6b	obj/kernel.asm	/^c0102c6b:	e9 c9 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c70	obj/kernel.asm	/^c0102c70 <vector60>:$/;"	l
c0102c70	obj/kernel.asm	/^c0102c70:	6a 00                	push   $0x0$/;"	l
c0102c72	obj/kernel.asm	/^c0102c72:	6a 3c                	push   $0x3c$/;"	l
c0102c74	obj/kernel.asm	/^c0102c74:	e9 c0 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c79	obj/kernel.asm	/^c0102c79 <vector61>:$/;"	l
c0102c79	obj/kernel.asm	/^c0102c79:	6a 00                	push   $0x0$/;"	l
c0102c7b	obj/kernel.asm	/^c0102c7b:	6a 3d                	push   $0x3d$/;"	l
c0102c7d	obj/kernel.asm	/^c0102c7d:	e9 b7 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c82	obj/kernel.asm	/^c0102c82 <vector62>:$/;"	l
c0102c82	obj/kernel.asm	/^c0102c82:	6a 00                	push   $0x0$/;"	l
c0102c84	obj/kernel.asm	/^c0102c84:	6a 3e                	push   $0x3e$/;"	l
c0102c86	obj/kernel.asm	/^c0102c86:	e9 ae fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c8b	obj/kernel.asm	/^c0102c8b <vector63>:$/;"	l
c0102c8b	obj/kernel.asm	/^c0102c8b:	6a 00                	push   $0x0$/;"	l
c0102c8d	obj/kernel.asm	/^c0102c8d:	6a 3f                	push   $0x3f$/;"	l
c0102c8f	obj/kernel.asm	/^c0102c8f:	e9 a5 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c94	obj/kernel.asm	/^c0102c94 <vector64>:$/;"	l
c0102c94	obj/kernel.asm	/^c0102c94:	6a 00                	push   $0x0$/;"	l
c0102c96	obj/kernel.asm	/^c0102c96:	6a 40                	push   $0x40$/;"	l
c0102c98	obj/kernel.asm	/^c0102c98:	e9 9c fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102c9d	obj/kernel.asm	/^c0102c9d <vector65>:$/;"	l
c0102c9d	obj/kernel.asm	/^c0102c9d:	6a 00                	push   $0x0$/;"	l
c0102c9f	obj/kernel.asm	/^c0102c9f:	6a 41                	push   $0x41$/;"	l
c0102ca1	obj/kernel.asm	/^c0102ca1:	e9 93 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ca6	obj/kernel.asm	/^c0102ca6 <vector66>:$/;"	l
c0102ca6	obj/kernel.asm	/^c0102ca6:	6a 00                	push   $0x0$/;"	l
c0102ca8	obj/kernel.asm	/^c0102ca8:	6a 42                	push   $0x42$/;"	l
c0102caa	obj/kernel.asm	/^c0102caa:	e9 8a fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102caf	obj/kernel.asm	/^c0102caf <vector67>:$/;"	l
c0102caf	obj/kernel.asm	/^c0102caf:	6a 00                	push   $0x0$/;"	l
c0102cb1	obj/kernel.asm	/^c0102cb1:	6a 43                	push   $0x43$/;"	l
c0102cb3	obj/kernel.asm	/^c0102cb3:	e9 81 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102cb8	obj/kernel.asm	/^c0102cb8 <vector68>:$/;"	l
c0102cb8	obj/kernel.asm	/^c0102cb8:	6a 00                	push   $0x0$/;"	l
c0102cba	obj/kernel.asm	/^c0102cba:	6a 44                	push   $0x44$/;"	l
c0102cbc	obj/kernel.asm	/^c0102cbc:	e9 78 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102cc1	obj/kernel.asm	/^c0102cc1 <vector69>:$/;"	l
c0102cc1	obj/kernel.asm	/^c0102cc1:	6a 00                	push   $0x0$/;"	l
c0102cc3	obj/kernel.asm	/^c0102cc3:	6a 45                	push   $0x45$/;"	l
c0102cc5	obj/kernel.asm	/^c0102cc5:	e9 6f fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102cca	obj/kernel.asm	/^c0102cca <vector70>:$/;"	l
c0102cca	obj/kernel.asm	/^c0102cca:	6a 00                	push   $0x0$/;"	l
c0102ccc	obj/kernel.asm	/^c0102ccc:	6a 46                	push   $0x46$/;"	l
c0102cce	obj/kernel.asm	/^c0102cce:	e9 66 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102cd3	obj/kernel.asm	/^c0102cd3 <vector71>:$/;"	l
c0102cd3	obj/kernel.asm	/^c0102cd3:	6a 00                	push   $0x0$/;"	l
c0102cd5	obj/kernel.asm	/^c0102cd5:	6a 47                	push   $0x47$/;"	l
c0102cd7	obj/kernel.asm	/^c0102cd7:	e9 5d fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102cdc	obj/kernel.asm	/^c0102cdc <vector72>:$/;"	l
c0102cdc	obj/kernel.asm	/^c0102cdc:	6a 00                	push   $0x0$/;"	l
c0102cde	obj/kernel.asm	/^c0102cde:	6a 48                	push   $0x48$/;"	l
c0102ce0	obj/kernel.asm	/^c0102ce0:	e9 54 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ce5	obj/kernel.asm	/^c0102ce5 <vector73>:$/;"	l
c0102ce5	obj/kernel.asm	/^c0102ce5:	6a 00                	push   $0x0$/;"	l
c0102ce7	obj/kernel.asm	/^c0102ce7:	6a 49                	push   $0x49$/;"	l
c0102ce9	obj/kernel.asm	/^c0102ce9:	e9 4b fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102cee	obj/kernel.asm	/^c0102cee <vector74>:$/;"	l
c0102cee	obj/kernel.asm	/^c0102cee:	6a 00                	push   $0x0$/;"	l
c0102cf0	obj/kernel.asm	/^c0102cf0:	6a 4a                	push   $0x4a$/;"	l
c0102cf2	obj/kernel.asm	/^c0102cf2:	e9 42 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102cf7	obj/kernel.asm	/^c0102cf7 <vector75>:$/;"	l
c0102cf7	obj/kernel.asm	/^c0102cf7:	6a 00                	push   $0x0$/;"	l
c0102cf9	obj/kernel.asm	/^c0102cf9:	6a 4b                	push   $0x4b$/;"	l
c0102cfb	obj/kernel.asm	/^c0102cfb:	e9 39 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d00	obj/kernel.asm	/^c0102d00 <vector76>:$/;"	l
c0102d00	obj/kernel.asm	/^c0102d00:	6a 00                	push   $0x0$/;"	l
c0102d02	obj/kernel.asm	/^c0102d02:	6a 4c                	push   $0x4c$/;"	l
c0102d04	obj/kernel.asm	/^c0102d04:	e9 30 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d09	obj/kernel.asm	/^c0102d09 <vector77>:$/;"	l
c0102d09	obj/kernel.asm	/^c0102d09:	6a 00                	push   $0x0$/;"	l
c0102d0b	obj/kernel.asm	/^c0102d0b:	6a 4d                	push   $0x4d$/;"	l
c0102d0d	obj/kernel.asm	/^c0102d0d:	e9 27 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d12	obj/kernel.asm	/^c0102d12 <vector78>:$/;"	l
c0102d12	obj/kernel.asm	/^c0102d12:	6a 00                	push   $0x0$/;"	l
c0102d14	obj/kernel.asm	/^c0102d14:	6a 4e                	push   $0x4e$/;"	l
c0102d16	obj/kernel.asm	/^c0102d16:	e9 1e fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d1b	obj/kernel.asm	/^c0102d1b <vector79>:$/;"	l
c0102d1b	obj/kernel.asm	/^c0102d1b:	6a 00                	push   $0x0$/;"	l
c0102d1d	obj/kernel.asm	/^c0102d1d:	6a 4f                	push   $0x4f$/;"	l
c0102d1f	obj/kernel.asm	/^c0102d1f:	e9 15 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d24	obj/kernel.asm	/^c0102d24 <vector80>:$/;"	l
c0102d24	obj/kernel.asm	/^c0102d24:	6a 00                	push   $0x0$/;"	l
c0102d26	obj/kernel.asm	/^c0102d26:	6a 50                	push   $0x50$/;"	l
c0102d28	obj/kernel.asm	/^c0102d28:	e9 0c fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d2d	obj/kernel.asm	/^c0102d2d <vector81>:$/;"	l
c0102d2d	obj/kernel.asm	/^c0102d2d:	6a 00                	push   $0x0$/;"	l
c0102d2f	obj/kernel.asm	/^c0102d2f:	6a 51                	push   $0x51$/;"	l
c0102d31	obj/kernel.asm	/^c0102d31:	e9 03 fd ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d36	obj/kernel.asm	/^c0102d36 <vector82>:$/;"	l
c0102d36	obj/kernel.asm	/^c0102d36:	6a 00                	push   $0x0$/;"	l
c0102d38	obj/kernel.asm	/^c0102d38:	6a 52                	push   $0x52$/;"	l
c0102d3a	obj/kernel.asm	/^c0102d3a:	e9 fa fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d3f	obj/kernel.asm	/^c0102d3f <vector83>:$/;"	l
c0102d3f	obj/kernel.asm	/^c0102d3f:	6a 00                	push   $0x0$/;"	l
c0102d41	obj/kernel.asm	/^c0102d41:	6a 53                	push   $0x53$/;"	l
c0102d43	obj/kernel.asm	/^c0102d43:	e9 f1 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d48	obj/kernel.asm	/^c0102d48 <vector84>:$/;"	l
c0102d48	obj/kernel.asm	/^c0102d48:	6a 00                	push   $0x0$/;"	l
c0102d4a	obj/kernel.asm	/^c0102d4a:	6a 54                	push   $0x54$/;"	l
c0102d4c	obj/kernel.asm	/^c0102d4c:	e9 e8 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d51	obj/kernel.asm	/^c0102d51 <vector85>:$/;"	l
c0102d51	obj/kernel.asm	/^c0102d51:	6a 00                	push   $0x0$/;"	l
c0102d53	obj/kernel.asm	/^c0102d53:	6a 55                	push   $0x55$/;"	l
c0102d55	obj/kernel.asm	/^c0102d55:	e9 df fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d5a	obj/kernel.asm	/^c0102d5a <vector86>:$/;"	l
c0102d5a	obj/kernel.asm	/^c0102d5a:	6a 00                	push   $0x0$/;"	l
c0102d5c	obj/kernel.asm	/^c0102d5c:	6a 56                	push   $0x56$/;"	l
c0102d5e	obj/kernel.asm	/^c0102d5e:	e9 d6 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d63	obj/kernel.asm	/^c0102d63 <vector87>:$/;"	l
c0102d63	obj/kernel.asm	/^c0102d63:	6a 00                	push   $0x0$/;"	l
c0102d65	obj/kernel.asm	/^c0102d65:	6a 57                	push   $0x57$/;"	l
c0102d67	obj/kernel.asm	/^c0102d67:	e9 cd fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d6c	obj/kernel.asm	/^c0102d6c <vector88>:$/;"	l
c0102d6c	obj/kernel.asm	/^c0102d6c:	6a 00                	push   $0x0$/;"	l
c0102d6e	obj/kernel.asm	/^c0102d6e:	6a 58                	push   $0x58$/;"	l
c0102d70	obj/kernel.asm	/^c0102d70:	e9 c4 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d75	obj/kernel.asm	/^c0102d75 <vector89>:$/;"	l
c0102d75	obj/kernel.asm	/^c0102d75:	6a 00                	push   $0x0$/;"	l
c0102d77	obj/kernel.asm	/^c0102d77:	6a 59                	push   $0x59$/;"	l
c0102d79	obj/kernel.asm	/^c0102d79:	e9 bb fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d7e	obj/kernel.asm	/^c0102d7e <vector90>:$/;"	l
c0102d7e	obj/kernel.asm	/^c0102d7e:	6a 00                	push   $0x0$/;"	l
c0102d80	obj/kernel.asm	/^c0102d80:	6a 5a                	push   $0x5a$/;"	l
c0102d82	obj/kernel.asm	/^c0102d82:	e9 b2 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d87	obj/kernel.asm	/^c0102d87 <vector91>:$/;"	l
c0102d87	obj/kernel.asm	/^c0102d87:	6a 00                	push   $0x0$/;"	l
c0102d89	obj/kernel.asm	/^c0102d89:	6a 5b                	push   $0x5b$/;"	l
c0102d8b	obj/kernel.asm	/^c0102d8b:	e9 a9 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d90	obj/kernel.asm	/^c0102d90 <vector92>:$/;"	l
c0102d90	obj/kernel.asm	/^c0102d90:	6a 00                	push   $0x0$/;"	l
c0102d92	obj/kernel.asm	/^c0102d92:	6a 5c                	push   $0x5c$/;"	l
c0102d94	obj/kernel.asm	/^c0102d94:	e9 a0 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102d99	obj/kernel.asm	/^c0102d99 <vector93>:$/;"	l
c0102d99	obj/kernel.asm	/^c0102d99:	6a 00                	push   $0x0$/;"	l
c0102d9b	obj/kernel.asm	/^c0102d9b:	6a 5d                	push   $0x5d$/;"	l
c0102d9d	obj/kernel.asm	/^c0102d9d:	e9 97 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102da2	obj/kernel.asm	/^c0102da2 <vector94>:$/;"	l
c0102da2	obj/kernel.asm	/^c0102da2:	6a 00                	push   $0x0$/;"	l
c0102da4	obj/kernel.asm	/^c0102da4:	6a 5e                	push   $0x5e$/;"	l
c0102da6	obj/kernel.asm	/^c0102da6:	e9 8e fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102dab	obj/kernel.asm	/^c0102dab <vector95>:$/;"	l
c0102dab	obj/kernel.asm	/^c0102dab:	6a 00                	push   $0x0$/;"	l
c0102dad	obj/kernel.asm	/^c0102dad:	6a 5f                	push   $0x5f$/;"	l
c0102daf	obj/kernel.asm	/^c0102daf:	e9 85 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102db4	obj/kernel.asm	/^c0102db4 <vector96>:$/;"	l
c0102db4	obj/kernel.asm	/^c0102db4:	6a 00                	push   $0x0$/;"	l
c0102db6	obj/kernel.asm	/^c0102db6:	6a 60                	push   $0x60$/;"	l
c0102db8	obj/kernel.asm	/^c0102db8:	e9 7c fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102dbd	obj/kernel.asm	/^c0102dbd <vector97>:$/;"	l
c0102dbd	obj/kernel.asm	/^c0102dbd:	6a 00                	push   $0x0$/;"	l
c0102dbf	obj/kernel.asm	/^c0102dbf:	6a 61                	push   $0x61$/;"	l
c0102dc1	obj/kernel.asm	/^c0102dc1:	e9 73 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102dc6	obj/kernel.asm	/^c0102dc6 <vector98>:$/;"	l
c0102dc6	obj/kernel.asm	/^c0102dc6:	6a 00                	push   $0x0$/;"	l
c0102dc8	obj/kernel.asm	/^c0102dc8:	6a 62                	push   $0x62$/;"	l
c0102dca	obj/kernel.asm	/^c0102dca:	e9 6a fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102dcf	obj/kernel.asm	/^c0102dcf <vector99>:$/;"	l
c0102dcf	obj/kernel.asm	/^c0102dcf:	6a 00                	push   $0x0$/;"	l
c0102dd1	obj/kernel.asm	/^c0102dd1:	6a 63                	push   $0x63$/;"	l
c0102dd3	obj/kernel.asm	/^c0102dd3:	e9 61 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102dd8	obj/kernel.asm	/^c0102dd8 <vector100>:$/;"	l
c0102dd8	obj/kernel.asm	/^c0102dd8:	6a 00                	push   $0x0$/;"	l
c0102dda	obj/kernel.asm	/^c0102dda:	6a 64                	push   $0x64$/;"	l
c0102ddc	obj/kernel.asm	/^c0102ddc:	e9 58 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102de1	obj/kernel.asm	/^c0102de1 <vector101>:$/;"	l
c0102de1	obj/kernel.asm	/^c0102de1:	6a 00                	push   $0x0$/;"	l
c0102de3	obj/kernel.asm	/^c0102de3:	6a 65                	push   $0x65$/;"	l
c0102de5	obj/kernel.asm	/^c0102de5:	e9 4f fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102dea	obj/kernel.asm	/^c0102dea <vector102>:$/;"	l
c0102dea	obj/kernel.asm	/^c0102dea:	6a 00                	push   $0x0$/;"	l
c0102dec	obj/kernel.asm	/^c0102dec:	6a 66                	push   $0x66$/;"	l
c0102dee	obj/kernel.asm	/^c0102dee:	e9 46 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102df3	obj/kernel.asm	/^c0102df3 <vector103>:$/;"	l
c0102df3	obj/kernel.asm	/^c0102df3:	6a 00                	push   $0x0$/;"	l
c0102df5	obj/kernel.asm	/^c0102df5:	6a 67                	push   $0x67$/;"	l
c0102df7	obj/kernel.asm	/^c0102df7:	e9 3d fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102dfc	obj/kernel.asm	/^c0102dfc <vector104>:$/;"	l
c0102dfc	obj/kernel.asm	/^c0102dfc:	6a 00                	push   $0x0$/;"	l
c0102dfe	obj/kernel.asm	/^c0102dfe:	6a 68                	push   $0x68$/;"	l
c0102e00	obj/kernel.asm	/^c0102e00:	e9 34 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e05	obj/kernel.asm	/^c0102e05 <vector105>:$/;"	l
c0102e05	obj/kernel.asm	/^c0102e05:	6a 00                	push   $0x0$/;"	l
c0102e07	obj/kernel.asm	/^c0102e07:	6a 69                	push   $0x69$/;"	l
c0102e09	obj/kernel.asm	/^c0102e09:	e9 2b fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e0e	obj/kernel.asm	/^c0102e0e <vector106>:$/;"	l
c0102e0e	obj/kernel.asm	/^c0102e0e:	6a 00                	push   $0x0$/;"	l
c0102e10	obj/kernel.asm	/^c0102e10:	6a 6a                	push   $0x6a$/;"	l
c0102e12	obj/kernel.asm	/^c0102e12:	e9 22 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e17	obj/kernel.asm	/^c0102e17 <vector107>:$/;"	l
c0102e17	obj/kernel.asm	/^c0102e17:	6a 00                	push   $0x0$/;"	l
c0102e19	obj/kernel.asm	/^c0102e19:	6a 6b                	push   $0x6b$/;"	l
c0102e1b	obj/kernel.asm	/^c0102e1b:	e9 19 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e20	obj/kernel.asm	/^c0102e20 <vector108>:$/;"	l
c0102e20	obj/kernel.asm	/^c0102e20:	6a 00                	push   $0x0$/;"	l
c0102e22	obj/kernel.asm	/^c0102e22:	6a 6c                	push   $0x6c$/;"	l
c0102e24	obj/kernel.asm	/^c0102e24:	e9 10 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e29	obj/kernel.asm	/^c0102e29 <vector109>:$/;"	l
c0102e29	obj/kernel.asm	/^c0102e29:	6a 00                	push   $0x0$/;"	l
c0102e2b	obj/kernel.asm	/^c0102e2b:	6a 6d                	push   $0x6d$/;"	l
c0102e2d	obj/kernel.asm	/^c0102e2d:	e9 07 fc ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e32	obj/kernel.asm	/^c0102e32 <vector110>:$/;"	l
c0102e32	obj/kernel.asm	/^c0102e32:	6a 00                	push   $0x0$/;"	l
c0102e34	obj/kernel.asm	/^c0102e34:	6a 6e                	push   $0x6e$/;"	l
c0102e36	obj/kernel.asm	/^c0102e36:	e9 fe fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e3b	obj/kernel.asm	/^c0102e3b <vector111>:$/;"	l
c0102e3b	obj/kernel.asm	/^c0102e3b:	6a 00                	push   $0x0$/;"	l
c0102e3d	obj/kernel.asm	/^c0102e3d:	6a 6f                	push   $0x6f$/;"	l
c0102e3f	obj/kernel.asm	/^c0102e3f:	e9 f5 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e44	obj/kernel.asm	/^c0102e44 <vector112>:$/;"	l
c0102e44	obj/kernel.asm	/^c0102e44:	6a 00                	push   $0x0$/;"	l
c0102e46	obj/kernel.asm	/^c0102e46:	6a 70                	push   $0x70$/;"	l
c0102e48	obj/kernel.asm	/^c0102e48:	e9 ec fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e4d	obj/kernel.asm	/^c0102e4d <vector113>:$/;"	l
c0102e4d	obj/kernel.asm	/^c0102e4d:	6a 00                	push   $0x0$/;"	l
c0102e4f	obj/kernel.asm	/^c0102e4f:	6a 71                	push   $0x71$/;"	l
c0102e51	obj/kernel.asm	/^c0102e51:	e9 e3 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e56	obj/kernel.asm	/^c0102e56 <vector114>:$/;"	l
c0102e56	obj/kernel.asm	/^c0102e56:	6a 00                	push   $0x0$/;"	l
c0102e58	obj/kernel.asm	/^c0102e58:	6a 72                	push   $0x72$/;"	l
c0102e5a	obj/kernel.asm	/^c0102e5a:	e9 da fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e5f	obj/kernel.asm	/^c0102e5f <vector115>:$/;"	l
c0102e5f	obj/kernel.asm	/^c0102e5f:	6a 00                	push   $0x0$/;"	l
c0102e61	obj/kernel.asm	/^c0102e61:	6a 73                	push   $0x73$/;"	l
c0102e63	obj/kernel.asm	/^c0102e63:	e9 d1 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e68	obj/kernel.asm	/^c0102e68 <vector116>:$/;"	l
c0102e68	obj/kernel.asm	/^c0102e68:	6a 00                	push   $0x0$/;"	l
c0102e6a	obj/kernel.asm	/^c0102e6a:	6a 74                	push   $0x74$/;"	l
c0102e6c	obj/kernel.asm	/^c0102e6c:	e9 c8 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e71	obj/kernel.asm	/^c0102e71 <vector117>:$/;"	l
c0102e71	obj/kernel.asm	/^c0102e71:	6a 00                	push   $0x0$/;"	l
c0102e73	obj/kernel.asm	/^c0102e73:	6a 75                	push   $0x75$/;"	l
c0102e75	obj/kernel.asm	/^c0102e75:	e9 bf fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e7a	obj/kernel.asm	/^c0102e7a <vector118>:$/;"	l
c0102e7a	obj/kernel.asm	/^c0102e7a:	6a 00                	push   $0x0$/;"	l
c0102e7c	obj/kernel.asm	/^c0102e7c:	6a 76                	push   $0x76$/;"	l
c0102e7e	obj/kernel.asm	/^c0102e7e:	e9 b6 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e83	obj/kernel.asm	/^c0102e83 <vector119>:$/;"	l
c0102e83	obj/kernel.asm	/^c0102e83:	6a 00                	push   $0x0$/;"	l
c0102e85	obj/kernel.asm	/^c0102e85:	6a 77                	push   $0x77$/;"	l
c0102e87	obj/kernel.asm	/^c0102e87:	e9 ad fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e8c	obj/kernel.asm	/^c0102e8c <vector120>:$/;"	l
c0102e8c	obj/kernel.asm	/^c0102e8c:	6a 00                	push   $0x0$/;"	l
c0102e8e	obj/kernel.asm	/^c0102e8e:	6a 78                	push   $0x78$/;"	l
c0102e90	obj/kernel.asm	/^c0102e90:	e9 a4 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e95	obj/kernel.asm	/^c0102e95 <vector121>:$/;"	l
c0102e95	obj/kernel.asm	/^c0102e95:	6a 00                	push   $0x0$/;"	l
c0102e97	obj/kernel.asm	/^c0102e97:	6a 79                	push   $0x79$/;"	l
c0102e99	obj/kernel.asm	/^c0102e99:	e9 9b fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102e9e	obj/kernel.asm	/^c0102e9e <vector122>:$/;"	l
c0102e9e	obj/kernel.asm	/^c0102e9e:	6a 00                	push   $0x0$/;"	l
c0102ea0	obj/kernel.asm	/^c0102ea0:	6a 7a                	push   $0x7a$/;"	l
c0102ea2	obj/kernel.asm	/^c0102ea2:	e9 92 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ea7	obj/kernel.asm	/^c0102ea7 <vector123>:$/;"	l
c0102ea7	obj/kernel.asm	/^c0102ea7:	6a 00                	push   $0x0$/;"	l
c0102ea9	obj/kernel.asm	/^c0102ea9:	6a 7b                	push   $0x7b$/;"	l
c0102eab	obj/kernel.asm	/^c0102eab:	e9 89 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102eb0	obj/kernel.asm	/^c0102eb0 <vector124>:$/;"	l
c0102eb0	obj/kernel.asm	/^c0102eb0:	6a 00                	push   $0x0$/;"	l
c0102eb2	obj/kernel.asm	/^c0102eb2:	6a 7c                	push   $0x7c$/;"	l
c0102eb4	obj/kernel.asm	/^c0102eb4:	e9 80 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102eb9	obj/kernel.asm	/^c0102eb9 <vector125>:$/;"	l
c0102eb9	obj/kernel.asm	/^c0102eb9:	6a 00                	push   $0x0$/;"	l
c0102ebb	obj/kernel.asm	/^c0102ebb:	6a 7d                	push   $0x7d$/;"	l
c0102ebd	obj/kernel.asm	/^c0102ebd:	e9 77 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ec2	obj/kernel.asm	/^c0102ec2 <vector126>:$/;"	l
c0102ec2	obj/kernel.asm	/^c0102ec2:	6a 00                	push   $0x0$/;"	l
c0102ec4	obj/kernel.asm	/^c0102ec4:	6a 7e                	push   $0x7e$/;"	l
c0102ec6	obj/kernel.asm	/^c0102ec6:	e9 6e fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ecb	obj/kernel.asm	/^c0102ecb <vector127>:$/;"	l
c0102ecb	obj/kernel.asm	/^c0102ecb:	6a 00                	push   $0x0$/;"	l
c0102ecd	obj/kernel.asm	/^c0102ecd:	6a 7f                	push   $0x7f$/;"	l
c0102ecf	obj/kernel.asm	/^c0102ecf:	e9 65 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ed4	obj/kernel.asm	/^c0102ed4 <vector128>:$/;"	l
c0102ed4	obj/kernel.asm	/^c0102ed4:	6a 00                	push   $0x0$/;"	l
c0102ed6	obj/kernel.asm	/^c0102ed6:	68 80 00 00 00       	push   $0x80$/;"	l
c0102edb	obj/kernel.asm	/^c0102edb:	e9 59 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ee0	obj/kernel.asm	/^c0102ee0 <vector129>:$/;"	l
c0102ee0	obj/kernel.asm	/^c0102ee0:	6a 00                	push   $0x0$/;"	l
c0102ee2	obj/kernel.asm	/^c0102ee2:	68 81 00 00 00       	push   $0x81$/;"	l
c0102ee7	obj/kernel.asm	/^c0102ee7:	e9 4d fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102eec	obj/kernel.asm	/^c0102eec <vector130>:$/;"	l
c0102eec	obj/kernel.asm	/^c0102eec:	6a 00                	push   $0x0$/;"	l
c0102eee	obj/kernel.asm	/^c0102eee:	68 82 00 00 00       	push   $0x82$/;"	l
c0102ef3	obj/kernel.asm	/^c0102ef3:	e9 41 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ef8	obj/kernel.asm	/^c0102ef8 <vector131>:$/;"	l
c0102ef8	obj/kernel.asm	/^c0102ef8:	6a 00                	push   $0x0$/;"	l
c0102efa	obj/kernel.asm	/^c0102efa:	68 83 00 00 00       	push   $0x83$/;"	l
c0102eff	obj/kernel.asm	/^c0102eff:	e9 35 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f04	obj/kernel.asm	/^c0102f04 <vector132>:$/;"	l
c0102f04	obj/kernel.asm	/^c0102f04:	6a 00                	push   $0x0$/;"	l
c0102f06	obj/kernel.asm	/^c0102f06:	68 84 00 00 00       	push   $0x84$/;"	l
c0102f0b	obj/kernel.asm	/^c0102f0b:	e9 29 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f10	obj/kernel.asm	/^c0102f10 <vector133>:$/;"	l
c0102f10	obj/kernel.asm	/^c0102f10:	6a 00                	push   $0x0$/;"	l
c0102f12	obj/kernel.asm	/^c0102f12:	68 85 00 00 00       	push   $0x85$/;"	l
c0102f17	obj/kernel.asm	/^c0102f17:	e9 1d fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f1c	obj/kernel.asm	/^c0102f1c <vector134>:$/;"	l
c0102f1c	obj/kernel.asm	/^c0102f1c:	6a 00                	push   $0x0$/;"	l
c0102f1e	obj/kernel.asm	/^c0102f1e:	68 86 00 00 00       	push   $0x86$/;"	l
c0102f23	obj/kernel.asm	/^c0102f23:	e9 11 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f28	obj/kernel.asm	/^c0102f28 <vector135>:$/;"	l
c0102f28	obj/kernel.asm	/^c0102f28:	6a 00                	push   $0x0$/;"	l
c0102f2a	obj/kernel.asm	/^c0102f2a:	68 87 00 00 00       	push   $0x87$/;"	l
c0102f2f	obj/kernel.asm	/^c0102f2f:	e9 05 fb ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f34	obj/kernel.asm	/^c0102f34 <vector136>:$/;"	l
c0102f34	obj/kernel.asm	/^c0102f34:	6a 00                	push   $0x0$/;"	l
c0102f36	obj/kernel.asm	/^c0102f36:	68 88 00 00 00       	push   $0x88$/;"	l
c0102f3b	obj/kernel.asm	/^c0102f3b:	e9 f9 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f40	obj/kernel.asm	/^c0102f40 <vector137>:$/;"	l
c0102f40	obj/kernel.asm	/^c0102f40:	6a 00                	push   $0x0$/;"	l
c0102f42	obj/kernel.asm	/^c0102f42:	68 89 00 00 00       	push   $0x89$/;"	l
c0102f47	obj/kernel.asm	/^c0102f47:	e9 ed fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f4c	obj/kernel.asm	/^c0102f4c <vector138>:$/;"	l
c0102f4c	obj/kernel.asm	/^c0102f4c:	6a 00                	push   $0x0$/;"	l
c0102f4e	obj/kernel.asm	/^c0102f4e:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0102f53	obj/kernel.asm	/^c0102f53:	e9 e1 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f58	obj/kernel.asm	/^c0102f58 <vector139>:$/;"	l
c0102f58	obj/kernel.asm	/^c0102f58:	6a 00                	push   $0x0$/;"	l
c0102f5a	obj/kernel.asm	/^c0102f5a:	68 8b 00 00 00       	push   $0x8b$/;"	l
c0102f5f	obj/kernel.asm	/^c0102f5f:	e9 d5 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f64	obj/kernel.asm	/^c0102f64 <vector140>:$/;"	l
c0102f64	obj/kernel.asm	/^c0102f64:	6a 00                	push   $0x0$/;"	l
c0102f66	obj/kernel.asm	/^c0102f66:	68 8c 00 00 00       	push   $0x8c$/;"	l
c0102f6b	obj/kernel.asm	/^c0102f6b:	e9 c9 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f70	obj/kernel.asm	/^c0102f70 <vector141>:$/;"	l
c0102f70	obj/kernel.asm	/^c0102f70:	6a 00                	push   $0x0$/;"	l
c0102f72	obj/kernel.asm	/^c0102f72:	68 8d 00 00 00       	push   $0x8d$/;"	l
c0102f77	obj/kernel.asm	/^c0102f77:	e9 bd fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f7c	obj/kernel.asm	/^c0102f7c <vector142>:$/;"	l
c0102f7c	obj/kernel.asm	/^c0102f7c:	6a 00                	push   $0x0$/;"	l
c0102f7e	obj/kernel.asm	/^c0102f7e:	68 8e 00 00 00       	push   $0x8e$/;"	l
c0102f83	obj/kernel.asm	/^c0102f83:	e9 b1 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f88	obj/kernel.asm	/^c0102f88 <vector143>:$/;"	l
c0102f88	obj/kernel.asm	/^c0102f88:	6a 00                	push   $0x0$/;"	l
c0102f8a	obj/kernel.asm	/^c0102f8a:	68 8f 00 00 00       	push   $0x8f$/;"	l
c0102f8f	obj/kernel.asm	/^c0102f8f:	e9 a5 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102f94	obj/kernel.asm	/^c0102f94 <vector144>:$/;"	l
c0102f94	obj/kernel.asm	/^c0102f94:	6a 00                	push   $0x0$/;"	l
c0102f96	obj/kernel.asm	/^c0102f96:	68 90 00 00 00       	push   $0x90$/;"	l
c0102f9b	obj/kernel.asm	/^c0102f9b:	e9 99 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102fa0	obj/kernel.asm	/^c0102fa0 <vector145>:$/;"	l
c0102fa0	obj/kernel.asm	/^c0102fa0:	6a 00                	push   $0x0$/;"	l
c0102fa2	obj/kernel.asm	/^c0102fa2:	68 91 00 00 00       	push   $0x91$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7:	e9 8d fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102fac	obj/kernel.asm	/^c0102fac <vector146>:$/;"	l
c0102fac	obj/kernel.asm	/^c0102fac:	6a 00                	push   $0x0$/;"	l
c0102fae	obj/kernel.asm	/^c0102fae:	68 92 00 00 00       	push   $0x92$/;"	l
c0102fb3	obj/kernel.asm	/^c0102fb3:	e9 81 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102fb8	obj/kernel.asm	/^c0102fb8 <vector147>:$/;"	l
c0102fb8	obj/kernel.asm	/^c0102fb8:	6a 00                	push   $0x0$/;"	l
c0102fba	obj/kernel.asm	/^c0102fba:	68 93 00 00 00       	push   $0x93$/;"	l
c0102fbf	obj/kernel.asm	/^c0102fbf:	e9 75 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102fc4	obj/kernel.asm	/^c0102fc4 <vector148>:$/;"	l
c0102fc4	obj/kernel.asm	/^c0102fc4:	6a 00                	push   $0x0$/;"	l
c0102fc6	obj/kernel.asm	/^c0102fc6:	68 94 00 00 00       	push   $0x94$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb:	e9 69 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102fd0	obj/kernel.asm	/^c0102fd0 <vector149>:$/;"	l
c0102fd0	obj/kernel.asm	/^c0102fd0:	6a 00                	push   $0x0$/;"	l
c0102fd2	obj/kernel.asm	/^c0102fd2:	68 95 00 00 00       	push   $0x95$/;"	l
c0102fd7	obj/kernel.asm	/^c0102fd7:	e9 5d fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102fdc	obj/kernel.asm	/^c0102fdc <vector150>:$/;"	l
c0102fdc	obj/kernel.asm	/^c0102fdc:	6a 00                	push   $0x0$/;"	l
c0102fde	obj/kernel.asm	/^c0102fde:	68 96 00 00 00       	push   $0x96$/;"	l
c0102fe3	obj/kernel.asm	/^c0102fe3:	e9 51 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102fe8	obj/kernel.asm	/^c0102fe8 <vector151>:$/;"	l
c0102fe8	obj/kernel.asm	/^c0102fe8:	6a 00                	push   $0x0$/;"	l
c0102fea	obj/kernel.asm	/^c0102fea:	68 97 00 00 00       	push   $0x97$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef:	e9 45 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0102ff4	obj/kernel.asm	/^c0102ff4 <vector152>:$/;"	l
c0102ff4	obj/kernel.asm	/^c0102ff4:	6a 00                	push   $0x0$/;"	l
c0102ff6	obj/kernel.asm	/^c0102ff6:	68 98 00 00 00       	push   $0x98$/;"	l
c0102ffb	obj/kernel.asm	/^c0102ffb:	e9 39 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103000	obj/kernel.asm	/^c0103000 <vector153>:$/;"	l
c0103000	obj/kernel.asm	/^c0103000:	6a 00                	push   $0x0$/;"	l
c0103002	obj/kernel.asm	/^c0103002:	68 99 00 00 00       	push   $0x99$/;"	l
c0103007	obj/kernel.asm	/^c0103007:	e9 2d fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010300c	obj/kernel.asm	/^c010300c <vector154>:$/;"	l
c010300c	obj/kernel.asm	/^c010300c:	6a 00                	push   $0x0$/;"	l
c010300e	obj/kernel.asm	/^c010300e:	68 9a 00 00 00       	push   $0x9a$/;"	l
c0103013	obj/kernel.asm	/^c0103013:	e9 21 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103018	obj/kernel.asm	/^c0103018 <vector155>:$/;"	l
c0103018	obj/kernel.asm	/^c0103018:	6a 00                	push   $0x0$/;"	l
c010301a	obj/kernel.asm	/^c010301a:	68 9b 00 00 00       	push   $0x9b$/;"	l
c010301f	obj/kernel.asm	/^c010301f:	e9 15 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103024	obj/kernel.asm	/^c0103024 <vector156>:$/;"	l
c0103024	obj/kernel.asm	/^c0103024:	6a 00                	push   $0x0$/;"	l
c0103026	obj/kernel.asm	/^c0103026:	68 9c 00 00 00       	push   $0x9c$/;"	l
c010302b	obj/kernel.asm	/^c010302b:	e9 09 fa ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103030	obj/kernel.asm	/^c0103030 <vector157>:$/;"	l
c0103030	obj/kernel.asm	/^c0103030:	6a 00                	push   $0x0$/;"	l
c0103032	obj/kernel.asm	/^c0103032:	68 9d 00 00 00       	push   $0x9d$/;"	l
c0103037	obj/kernel.asm	/^c0103037:	e9 fd f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010303c	obj/kernel.asm	/^c010303c <vector158>:$/;"	l
c010303c	obj/kernel.asm	/^c010303c:	6a 00                	push   $0x0$/;"	l
c010303e	obj/kernel.asm	/^c010303e:	68 9e 00 00 00       	push   $0x9e$/;"	l
c0103043	obj/kernel.asm	/^c0103043:	e9 f1 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103048	obj/kernel.asm	/^c0103048 <vector159>:$/;"	l
c0103048	obj/kernel.asm	/^c0103048:	6a 00                	push   $0x0$/;"	l
c010304a	obj/kernel.asm	/^c010304a:	68 9f 00 00 00       	push   $0x9f$/;"	l
c010304f	obj/kernel.asm	/^c010304f:	e9 e5 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103054	obj/kernel.asm	/^c0103054 <vector160>:$/;"	l
c0103054	obj/kernel.asm	/^c0103054:	6a 00                	push   $0x0$/;"	l
c0103056	obj/kernel.asm	/^c0103056:	68 a0 00 00 00       	push   $0xa0$/;"	l
c010305b	obj/kernel.asm	/^c010305b:	e9 d9 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103060	obj/kernel.asm	/^c0103060 <vector161>:$/;"	l
c0103060	obj/kernel.asm	/^c0103060:	6a 00                	push   $0x0$/;"	l
c0103062	obj/kernel.asm	/^c0103062:	68 a1 00 00 00       	push   $0xa1$/;"	l
c0103067	obj/kernel.asm	/^c0103067:	e9 cd f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010306c	obj/kernel.asm	/^c010306c <vector162>:$/;"	l
c010306c	obj/kernel.asm	/^c010306c:	6a 00                	push   $0x0$/;"	l
c010306e	obj/kernel.asm	/^c010306e:	68 a2 00 00 00       	push   $0xa2$/;"	l
c0103073	obj/kernel.asm	/^c0103073:	e9 c1 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103078	obj/kernel.asm	/^c0103078 <vector163>:$/;"	l
c0103078	obj/kernel.asm	/^c0103078:	6a 00                	push   $0x0$/;"	l
c010307a	obj/kernel.asm	/^c010307a:	68 a3 00 00 00       	push   $0xa3$/;"	l
c010307f	obj/kernel.asm	/^c010307f:	e9 b5 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103084	obj/kernel.asm	/^c0103084 <vector164>:$/;"	l
c0103084	obj/kernel.asm	/^c0103084:	6a 00                	push   $0x0$/;"	l
c0103086	obj/kernel.asm	/^c0103086:	68 a4 00 00 00       	push   $0xa4$/;"	l
c010308b	obj/kernel.asm	/^c010308b:	e9 a9 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103090	obj/kernel.asm	/^c0103090 <vector165>:$/;"	l
c0103090	obj/kernel.asm	/^c0103090:	6a 00                	push   $0x0$/;"	l
c0103092	obj/kernel.asm	/^c0103092:	68 a5 00 00 00       	push   $0xa5$/;"	l
c0103097	obj/kernel.asm	/^c0103097:	e9 9d f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010309c	obj/kernel.asm	/^c010309c <vector166>:$/;"	l
c010309c	obj/kernel.asm	/^c010309c:	6a 00                	push   $0x0$/;"	l
c010309e	obj/kernel.asm	/^c010309e:	68 a6 00 00 00       	push   $0xa6$/;"	l
c01030a3	obj/kernel.asm	/^c01030a3:	e9 91 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01030a8	obj/kernel.asm	/^c01030a8 <vector167>:$/;"	l
c01030a8	obj/kernel.asm	/^c01030a8:	6a 00                	push   $0x0$/;"	l
c01030aa	obj/kernel.asm	/^c01030aa:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01030af	obj/kernel.asm	/^c01030af:	e9 85 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01030b4	obj/kernel.asm	/^c01030b4 <vector168>:$/;"	l
c01030b4	obj/kernel.asm	/^c01030b4:	6a 00                	push   $0x0$/;"	l
c01030b6	obj/kernel.asm	/^c01030b6:	68 a8 00 00 00       	push   $0xa8$/;"	l
c01030bb	obj/kernel.asm	/^c01030bb:	e9 79 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01030c0	obj/kernel.asm	/^c01030c0 <vector169>:$/;"	l
c01030c0	obj/kernel.asm	/^c01030c0:	6a 00                	push   $0x0$/;"	l
c01030c2	obj/kernel.asm	/^c01030c2:	68 a9 00 00 00       	push   $0xa9$/;"	l
c01030c7	obj/kernel.asm	/^c01030c7:	e9 6d f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01030cc	obj/kernel.asm	/^c01030cc <vector170>:$/;"	l
c01030cc	obj/kernel.asm	/^c01030cc:	6a 00                	push   $0x0$/;"	l
c01030ce	obj/kernel.asm	/^c01030ce:	68 aa 00 00 00       	push   $0xaa$/;"	l
c01030d3	obj/kernel.asm	/^c01030d3:	e9 61 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01030d8	obj/kernel.asm	/^c01030d8 <vector171>:$/;"	l
c01030d8	obj/kernel.asm	/^c01030d8:	6a 00                	push   $0x0$/;"	l
c01030da	obj/kernel.asm	/^c01030da:	68 ab 00 00 00       	push   $0xab$/;"	l
c01030df	obj/kernel.asm	/^c01030df:	e9 55 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01030e4	obj/kernel.asm	/^c01030e4 <vector172>:$/;"	l
c01030e4	obj/kernel.asm	/^c01030e4:	6a 00                	push   $0x0$/;"	l
c01030e6	obj/kernel.asm	/^c01030e6:	68 ac 00 00 00       	push   $0xac$/;"	l
c01030eb	obj/kernel.asm	/^c01030eb:	e9 49 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01030f0	obj/kernel.asm	/^c01030f0 <vector173>:$/;"	l
c01030f0	obj/kernel.asm	/^c01030f0:	6a 00                	push   $0x0$/;"	l
c01030f2	obj/kernel.asm	/^c01030f2:	68 ad 00 00 00       	push   $0xad$/;"	l
c01030f7	obj/kernel.asm	/^c01030f7:	e9 3d f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01030fc	obj/kernel.asm	/^c01030fc <vector174>:$/;"	l
c01030fc	obj/kernel.asm	/^c01030fc:	6a 00                	push   $0x0$/;"	l
c01030fe	obj/kernel.asm	/^c01030fe:	68 ae 00 00 00       	push   $0xae$/;"	l
c0103103	obj/kernel.asm	/^c0103103:	e9 31 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103108	obj/kernel.asm	/^c0103108 <vector175>:$/;"	l
c0103108	obj/kernel.asm	/^c0103108:	6a 00                	push   $0x0$/;"	l
c010310a	obj/kernel.asm	/^c010310a:	68 af 00 00 00       	push   $0xaf$/;"	l
c010310f	obj/kernel.asm	/^c010310f:	e9 25 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103114	obj/kernel.asm	/^c0103114 <vector176>:$/;"	l
c0103114	obj/kernel.asm	/^c0103114:	6a 00                	push   $0x0$/;"	l
c0103116	obj/kernel.asm	/^c0103116:	68 b0 00 00 00       	push   $0xb0$/;"	l
c010311b	obj/kernel.asm	/^c010311b:	e9 19 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103120	obj/kernel.asm	/^c0103120 <vector177>:$/;"	l
c0103120	obj/kernel.asm	/^c0103120:	6a 00                	push   $0x0$/;"	l
c0103122	obj/kernel.asm	/^c0103122:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0103127	obj/kernel.asm	/^c0103127:	e9 0d f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010312c	obj/kernel.asm	/^c010312c <vector178>:$/;"	l
c010312c	obj/kernel.asm	/^c010312c:	6a 00                	push   $0x0$/;"	l
c010312e	obj/kernel.asm	/^c010312e:	68 b2 00 00 00       	push   $0xb2$/;"	l
c0103133	obj/kernel.asm	/^c0103133:	e9 01 f9 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103138	obj/kernel.asm	/^c0103138 <vector179>:$/;"	l
c0103138	obj/kernel.asm	/^c0103138:	6a 00                	push   $0x0$/;"	l
c010313a	obj/kernel.asm	/^c010313a:	68 b3 00 00 00       	push   $0xb3$/;"	l
c010313f	obj/kernel.asm	/^c010313f:	e9 f5 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103144	obj/kernel.asm	/^c0103144 <vector180>:$/;"	l
c0103144	obj/kernel.asm	/^c0103144:	6a 00                	push   $0x0$/;"	l
c0103146	obj/kernel.asm	/^c0103146:	68 b4 00 00 00       	push   $0xb4$/;"	l
c010314b	obj/kernel.asm	/^c010314b:	e9 e9 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103150	obj/kernel.asm	/^c0103150 <vector181>:$/;"	l
c0103150	obj/kernel.asm	/^c0103150:	6a 00                	push   $0x0$/;"	l
c0103152	obj/kernel.asm	/^c0103152:	68 b5 00 00 00       	push   $0xb5$/;"	l
c0103157	obj/kernel.asm	/^c0103157:	e9 dd f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010315c	obj/kernel.asm	/^c010315c <vector182>:$/;"	l
c010315c	obj/kernel.asm	/^c010315c:	6a 00                	push   $0x0$/;"	l
c010315e	obj/kernel.asm	/^c010315e:	68 b6 00 00 00       	push   $0xb6$/;"	l
c0103163	obj/kernel.asm	/^c0103163:	e9 d1 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103168	obj/kernel.asm	/^c0103168 <vector183>:$/;"	l
c0103168	obj/kernel.asm	/^c0103168:	6a 00                	push   $0x0$/;"	l
c010316a	obj/kernel.asm	/^c010316a:	68 b7 00 00 00       	push   $0xb7$/;"	l
c010316f	obj/kernel.asm	/^c010316f:	e9 c5 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103174	obj/kernel.asm	/^c0103174 <vector184>:$/;"	l
c0103174	obj/kernel.asm	/^c0103174:	6a 00                	push   $0x0$/;"	l
c0103176	obj/kernel.asm	/^c0103176:	68 b8 00 00 00       	push   $0xb8$/;"	l
c010317b	obj/kernel.asm	/^c010317b:	e9 b9 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103180	obj/kernel.asm	/^c0103180 <vector185>:$/;"	l
c0103180	obj/kernel.asm	/^c0103180:	6a 00                	push   $0x0$/;"	l
c0103182	obj/kernel.asm	/^c0103182:	68 b9 00 00 00       	push   $0xb9$/;"	l
c0103187	obj/kernel.asm	/^c0103187:	e9 ad f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010318c	obj/kernel.asm	/^c010318c <vector186>:$/;"	l
c010318c	obj/kernel.asm	/^c010318c:	6a 00                	push   $0x0$/;"	l
c010318e	obj/kernel.asm	/^c010318e:	68 ba 00 00 00       	push   $0xba$/;"	l
c0103193	obj/kernel.asm	/^c0103193:	e9 a1 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103198	obj/kernel.asm	/^c0103198 <vector187>:$/;"	l
c0103198	obj/kernel.asm	/^c0103198:	6a 00                	push   $0x0$/;"	l
c010319a	obj/kernel.asm	/^c010319a:	68 bb 00 00 00       	push   $0xbb$/;"	l
c010319f	obj/kernel.asm	/^c010319f:	e9 95 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01031a4	obj/kernel.asm	/^c01031a4 <vector188>:$/;"	l
c01031a4	obj/kernel.asm	/^c01031a4:	6a 00                	push   $0x0$/;"	l
c01031a6	obj/kernel.asm	/^c01031a6:	68 bc 00 00 00       	push   $0xbc$/;"	l
c01031ab	obj/kernel.asm	/^c01031ab:	e9 89 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01031b0	obj/kernel.asm	/^c01031b0 <vector189>:$/;"	l
c01031b0	obj/kernel.asm	/^c01031b0:	6a 00                	push   $0x0$/;"	l
c01031b2	obj/kernel.asm	/^c01031b2:	68 bd 00 00 00       	push   $0xbd$/;"	l
c01031b7	obj/kernel.asm	/^c01031b7:	e9 7d f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01031bc	obj/kernel.asm	/^c01031bc <vector190>:$/;"	l
c01031bc	obj/kernel.asm	/^c01031bc:	6a 00                	push   $0x0$/;"	l
c01031be	obj/kernel.asm	/^c01031be:	68 be 00 00 00       	push   $0xbe$/;"	l
c01031c3	obj/kernel.asm	/^c01031c3:	e9 71 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01031c8	obj/kernel.asm	/^c01031c8 <vector191>:$/;"	l
c01031c8	obj/kernel.asm	/^c01031c8:	6a 00                	push   $0x0$/;"	l
c01031ca	obj/kernel.asm	/^c01031ca:	68 bf 00 00 00       	push   $0xbf$/;"	l
c01031cf	obj/kernel.asm	/^c01031cf:	e9 65 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01031d4	obj/kernel.asm	/^c01031d4 <vector192>:$/;"	l
c01031d4	obj/kernel.asm	/^c01031d4:	6a 00                	push   $0x0$/;"	l
c01031d6	obj/kernel.asm	/^c01031d6:	68 c0 00 00 00       	push   $0xc0$/;"	l
c01031db	obj/kernel.asm	/^c01031db:	e9 59 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01031e0	obj/kernel.asm	/^c01031e0 <vector193>:$/;"	l
c01031e0	obj/kernel.asm	/^c01031e0:	6a 00                	push   $0x0$/;"	l
c01031e2	obj/kernel.asm	/^c01031e2:	68 c1 00 00 00       	push   $0xc1$/;"	l
c01031e7	obj/kernel.asm	/^c01031e7:	e9 4d f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01031ec	obj/kernel.asm	/^c01031ec <vector194>:$/;"	l
c01031ec	obj/kernel.asm	/^c01031ec:	6a 00                	push   $0x0$/;"	l
c01031ee	obj/kernel.asm	/^c01031ee:	68 c2 00 00 00       	push   $0xc2$/;"	l
c01031f3	obj/kernel.asm	/^c01031f3:	e9 41 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01031f8	obj/kernel.asm	/^c01031f8 <vector195>:$/;"	l
c01031f8	obj/kernel.asm	/^c01031f8:	6a 00                	push   $0x0$/;"	l
c01031fa	obj/kernel.asm	/^c01031fa:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01031ff	obj/kernel.asm	/^c01031ff:	e9 35 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103204	obj/kernel.asm	/^c0103204 <vector196>:$/;"	l
c0103204	obj/kernel.asm	/^c0103204:	6a 00                	push   $0x0$/;"	l
c0103206	obj/kernel.asm	/^c0103206:	68 c4 00 00 00       	push   $0xc4$/;"	l
c010320b	obj/kernel.asm	/^c010320b:	e9 29 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103210	obj/kernel.asm	/^c0103210 <vector197>:$/;"	l
c0103210	obj/kernel.asm	/^c0103210:	6a 00                	push   $0x0$/;"	l
c0103212	obj/kernel.asm	/^c0103212:	68 c5 00 00 00       	push   $0xc5$/;"	l
c0103217	obj/kernel.asm	/^c0103217:	e9 1d f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010321c	obj/kernel.asm	/^c010321c <vector198>:$/;"	l
c010321c	obj/kernel.asm	/^c010321c:	6a 00                	push   $0x0$/;"	l
c010321e	obj/kernel.asm	/^c010321e:	68 c6 00 00 00       	push   $0xc6$/;"	l
c0103223	obj/kernel.asm	/^c0103223:	e9 11 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103228	obj/kernel.asm	/^c0103228 <vector199>:$/;"	l
c0103228	obj/kernel.asm	/^c0103228:	6a 00                	push   $0x0$/;"	l
c010322a	obj/kernel.asm	/^c010322a:	68 c7 00 00 00       	push   $0xc7$/;"	l
c010322f	obj/kernel.asm	/^c010322f:	e9 05 f8 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103234	obj/kernel.asm	/^c0103234 <vector200>:$/;"	l
c0103234	obj/kernel.asm	/^c0103234:	6a 00                	push   $0x0$/;"	l
c0103236	obj/kernel.asm	/^c0103236:	68 c8 00 00 00       	push   $0xc8$/;"	l
c010323b	obj/kernel.asm	/^c010323b:	e9 f9 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103240	obj/kernel.asm	/^c0103240 <vector201>:$/;"	l
c0103240	obj/kernel.asm	/^c0103240:	6a 00                	push   $0x0$/;"	l
c0103242	obj/kernel.asm	/^c0103242:	68 c9 00 00 00       	push   $0xc9$/;"	l
c0103247	obj/kernel.asm	/^c0103247:	e9 ed f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010324c	obj/kernel.asm	/^c010324c <vector202>:$/;"	l
c010324c	obj/kernel.asm	/^c010324c:	6a 00                	push   $0x0$/;"	l
c010324e	obj/kernel.asm	/^c010324e:	68 ca 00 00 00       	push   $0xca$/;"	l
c0103253	obj/kernel.asm	/^c0103253:	e9 e1 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103258	obj/kernel.asm	/^c0103258 <vector203>:$/;"	l
c0103258	obj/kernel.asm	/^c0103258:	6a 00                	push   $0x0$/;"	l
c010325a	obj/kernel.asm	/^c010325a:	68 cb 00 00 00       	push   $0xcb$/;"	l
c010325f	obj/kernel.asm	/^c010325f:	e9 d5 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103264	obj/kernel.asm	/^c0103264 <vector204>:$/;"	l
c0103264	obj/kernel.asm	/^c0103264:	6a 00                	push   $0x0$/;"	l
c0103266	obj/kernel.asm	/^c0103266:	68 cc 00 00 00       	push   $0xcc$/;"	l
c010326b	obj/kernel.asm	/^c010326b:	e9 c9 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103270	obj/kernel.asm	/^c0103270 <vector205>:$/;"	l
c0103270	obj/kernel.asm	/^c0103270:	6a 00                	push   $0x0$/;"	l
c0103272	obj/kernel.asm	/^c0103272:	68 cd 00 00 00       	push   $0xcd$/;"	l
c0103277	obj/kernel.asm	/^c0103277:	e9 bd f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010327c	obj/kernel.asm	/^c010327c <vector206>:$/;"	l
c010327c	obj/kernel.asm	/^c010327c:	6a 00                	push   $0x0$/;"	l
c010327e	obj/kernel.asm	/^c010327e:	68 ce 00 00 00       	push   $0xce$/;"	l
c0103283	obj/kernel.asm	/^c0103283:	e9 b1 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103288	obj/kernel.asm	/^c0103288 <vector207>:$/;"	l
c0103288	obj/kernel.asm	/^c0103288:	6a 00                	push   $0x0$/;"	l
c010328a	obj/kernel.asm	/^c010328a:	68 cf 00 00 00       	push   $0xcf$/;"	l
c010328f	obj/kernel.asm	/^c010328f:	e9 a5 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103294	obj/kernel.asm	/^c0103294 <vector208>:$/;"	l
c0103294	obj/kernel.asm	/^c0103294:	6a 00                	push   $0x0$/;"	l
c0103296	obj/kernel.asm	/^c0103296:	68 d0 00 00 00       	push   $0xd0$/;"	l
c010329b	obj/kernel.asm	/^c010329b:	e9 99 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01032a0	obj/kernel.asm	/^c01032a0 <vector209>:$/;"	l
c01032a0	obj/kernel.asm	/^c01032a0:	6a 00                	push   $0x0$/;"	l
c01032a2	obj/kernel.asm	/^c01032a2:	68 d1 00 00 00       	push   $0xd1$/;"	l
c01032a7	obj/kernel.asm	/^c01032a7:	e9 8d f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01032ac	obj/kernel.asm	/^c01032ac <vector210>:$/;"	l
c01032ac	obj/kernel.asm	/^c01032ac:	6a 00                	push   $0x0$/;"	l
c01032ae	obj/kernel.asm	/^c01032ae:	68 d2 00 00 00       	push   $0xd2$/;"	l
c01032b3	obj/kernel.asm	/^c01032b3:	e9 81 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01032b8	obj/kernel.asm	/^c01032b8 <vector211>:$/;"	l
c01032b8	obj/kernel.asm	/^c01032b8:	6a 00                	push   $0x0$/;"	l
c01032ba	obj/kernel.asm	/^c01032ba:	68 d3 00 00 00       	push   $0xd3$/;"	l
c01032bf	obj/kernel.asm	/^c01032bf:	e9 75 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01032c4	obj/kernel.asm	/^c01032c4 <vector212>:$/;"	l
c01032c4	obj/kernel.asm	/^c01032c4:	6a 00                	push   $0x0$/;"	l
c01032c6	obj/kernel.asm	/^c01032c6:	68 d4 00 00 00       	push   $0xd4$/;"	l
c01032cb	obj/kernel.asm	/^c01032cb:	e9 69 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01032d0	obj/kernel.asm	/^c01032d0 <vector213>:$/;"	l
c01032d0	obj/kernel.asm	/^c01032d0:	6a 00                	push   $0x0$/;"	l
c01032d2	obj/kernel.asm	/^c01032d2:	68 d5 00 00 00       	push   $0xd5$/;"	l
c01032d7	obj/kernel.asm	/^c01032d7:	e9 5d f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01032dc	obj/kernel.asm	/^c01032dc <vector214>:$/;"	l
c01032dc	obj/kernel.asm	/^c01032dc:	6a 00                	push   $0x0$/;"	l
c01032de	obj/kernel.asm	/^c01032de:	68 d6 00 00 00       	push   $0xd6$/;"	l
c01032e3	obj/kernel.asm	/^c01032e3:	e9 51 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01032e8	obj/kernel.asm	/^c01032e8 <vector215>:$/;"	l
c01032e8	obj/kernel.asm	/^c01032e8:	6a 00                	push   $0x0$/;"	l
c01032ea	obj/kernel.asm	/^c01032ea:	68 d7 00 00 00       	push   $0xd7$/;"	l
c01032ef	obj/kernel.asm	/^c01032ef:	e9 45 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01032f4	obj/kernel.asm	/^c01032f4 <vector216>:$/;"	l
c01032f4	obj/kernel.asm	/^c01032f4:	6a 00                	push   $0x0$/;"	l
c01032f6	obj/kernel.asm	/^c01032f6:	68 d8 00 00 00       	push   $0xd8$/;"	l
c01032fb	obj/kernel.asm	/^c01032fb:	e9 39 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103300	obj/kernel.asm	/^c0103300 <vector217>:$/;"	l
c0103300	obj/kernel.asm	/^c0103300:	6a 00                	push   $0x0$/;"	l
c0103302	obj/kernel.asm	/^c0103302:	68 d9 00 00 00       	push   $0xd9$/;"	l
c0103307	obj/kernel.asm	/^c0103307:	e9 2d f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010330c	obj/kernel.asm	/^c010330c <vector218>:$/;"	l
c010330c	obj/kernel.asm	/^c010330c:	6a 00                	push   $0x0$/;"	l
c010330e	obj/kernel.asm	/^c010330e:	68 da 00 00 00       	push   $0xda$/;"	l
c0103313	obj/kernel.asm	/^c0103313:	e9 21 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103318	obj/kernel.asm	/^c0103318 <vector219>:$/;"	l
c0103318	obj/kernel.asm	/^c0103318:	6a 00                	push   $0x0$/;"	l
c010331a	obj/kernel.asm	/^c010331a:	68 db 00 00 00       	push   $0xdb$/;"	l
c010331f	obj/kernel.asm	/^c010331f:	e9 15 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103324	obj/kernel.asm	/^c0103324 <vector220>:$/;"	l
c0103324	obj/kernel.asm	/^c0103324:	6a 00                	push   $0x0$/;"	l
c0103326	obj/kernel.asm	/^c0103326:	68 dc 00 00 00       	push   $0xdc$/;"	l
c010332b	obj/kernel.asm	/^c010332b:	e9 09 f7 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103330	obj/kernel.asm	/^c0103330 <vector221>:$/;"	l
c0103330	obj/kernel.asm	/^c0103330:	6a 00                	push   $0x0$/;"	l
c0103332	obj/kernel.asm	/^c0103332:	68 dd 00 00 00       	push   $0xdd$/;"	l
c0103337	obj/kernel.asm	/^c0103337:	e9 fd f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010333c	obj/kernel.asm	/^c010333c <vector222>:$/;"	l
c010333c	obj/kernel.asm	/^c010333c:	6a 00                	push   $0x0$/;"	l
c010333e	obj/kernel.asm	/^c010333e:	68 de 00 00 00       	push   $0xde$/;"	l
c0103343	obj/kernel.asm	/^c0103343:	e9 f1 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103348	obj/kernel.asm	/^c0103348 <vector223>:$/;"	l
c0103348	obj/kernel.asm	/^c0103348:	6a 00                	push   $0x0$/;"	l
c010334a	obj/kernel.asm	/^c010334a:	68 df 00 00 00       	push   $0xdf$/;"	l
c010334f	obj/kernel.asm	/^c010334f:	e9 e5 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103354	obj/kernel.asm	/^c0103354 <vector224>:$/;"	l
c0103354	obj/kernel.asm	/^c0103354:	6a 00                	push   $0x0$/;"	l
c0103356	obj/kernel.asm	/^c0103356:	68 e0 00 00 00       	push   $0xe0$/;"	l
c010335b	obj/kernel.asm	/^c010335b:	e9 d9 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103360	obj/kernel.asm	/^c0103360 <vector225>:$/;"	l
c0103360	obj/kernel.asm	/^c0103360:	6a 00                	push   $0x0$/;"	l
c0103362	obj/kernel.asm	/^c0103362:	68 e1 00 00 00       	push   $0xe1$/;"	l
c0103367	obj/kernel.asm	/^c0103367:	e9 cd f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010336c	obj/kernel.asm	/^c010336c <vector226>:$/;"	l
c010336c	obj/kernel.asm	/^c010336c:	6a 00                	push   $0x0$/;"	l
c010336e	obj/kernel.asm	/^c010336e:	68 e2 00 00 00       	push   $0xe2$/;"	l
c0103373	obj/kernel.asm	/^c0103373:	e9 c1 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103378	obj/kernel.asm	/^c0103378 <vector227>:$/;"	l
c0103378	obj/kernel.asm	/^c0103378:	6a 00                	push   $0x0$/;"	l
c010337a	obj/kernel.asm	/^c010337a:	68 e3 00 00 00       	push   $0xe3$/;"	l
c010337f	obj/kernel.asm	/^c010337f:	e9 b5 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103384	obj/kernel.asm	/^c0103384 <vector228>:$/;"	l
c0103384	obj/kernel.asm	/^c0103384:	6a 00                	push   $0x0$/;"	l
c0103386	obj/kernel.asm	/^c0103386:	68 e4 00 00 00       	push   $0xe4$/;"	l
c010338b	obj/kernel.asm	/^c010338b:	e9 a9 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103390	obj/kernel.asm	/^c0103390 <vector229>:$/;"	l
c0103390	obj/kernel.asm	/^c0103390:	6a 00                	push   $0x0$/;"	l
c0103392	obj/kernel.asm	/^c0103392:	68 e5 00 00 00       	push   $0xe5$/;"	l
c0103397	obj/kernel.asm	/^c0103397:	e9 9d f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010339c	obj/kernel.asm	/^c010339c <vector230>:$/;"	l
c010339c	obj/kernel.asm	/^c010339c:	6a 00                	push   $0x0$/;"	l
c010339e	obj/kernel.asm	/^c010339e:	68 e6 00 00 00       	push   $0xe6$/;"	l
c01033a3	obj/kernel.asm	/^c01033a3:	e9 91 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01033a8	obj/kernel.asm	/^c01033a8 <vector231>:$/;"	l
c01033a8	obj/kernel.asm	/^c01033a8:	6a 00                	push   $0x0$/;"	l
c01033aa	obj/kernel.asm	/^c01033aa:	68 e7 00 00 00       	push   $0xe7$/;"	l
c01033af	obj/kernel.asm	/^c01033af:	e9 85 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01033b4	obj/kernel.asm	/^c01033b4 <vector232>:$/;"	l
c01033b4	obj/kernel.asm	/^c01033b4:	6a 00                	push   $0x0$/;"	l
c01033b6	obj/kernel.asm	/^c01033b6:	68 e8 00 00 00       	push   $0xe8$/;"	l
c01033bb	obj/kernel.asm	/^c01033bb:	e9 79 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01033c0	obj/kernel.asm	/^c01033c0 <vector233>:$/;"	l
c01033c0	obj/kernel.asm	/^c01033c0:	6a 00                	push   $0x0$/;"	l
c01033c2	obj/kernel.asm	/^c01033c2:	68 e9 00 00 00       	push   $0xe9$/;"	l
c01033c7	obj/kernel.asm	/^c01033c7:	e9 6d f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01033cc	obj/kernel.asm	/^c01033cc <vector234>:$/;"	l
c01033cc	obj/kernel.asm	/^c01033cc:	6a 00                	push   $0x0$/;"	l
c01033ce	obj/kernel.asm	/^c01033ce:	68 ea 00 00 00       	push   $0xea$/;"	l
c01033d3	obj/kernel.asm	/^c01033d3:	e9 61 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01033d8	obj/kernel.asm	/^c01033d8 <vector235>:$/;"	l
c01033d8	obj/kernel.asm	/^c01033d8:	6a 00                	push   $0x0$/;"	l
c01033da	obj/kernel.asm	/^c01033da:	68 eb 00 00 00       	push   $0xeb$/;"	l
c01033df	obj/kernel.asm	/^c01033df:	e9 55 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01033e4	obj/kernel.asm	/^c01033e4 <vector236>:$/;"	l
c01033e4	obj/kernel.asm	/^c01033e4:	6a 00                	push   $0x0$/;"	l
c01033e6	obj/kernel.asm	/^c01033e6:	68 ec 00 00 00       	push   $0xec$/;"	l
c01033eb	obj/kernel.asm	/^c01033eb:	e9 49 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01033f0	obj/kernel.asm	/^c01033f0 <vector237>:$/;"	l
c01033f0	obj/kernel.asm	/^c01033f0:	6a 00                	push   $0x0$/;"	l
c01033f2	obj/kernel.asm	/^c01033f2:	68 ed 00 00 00       	push   $0xed$/;"	l
c01033f7	obj/kernel.asm	/^c01033f7:	e9 3d f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01033fc	obj/kernel.asm	/^c01033fc <vector238>:$/;"	l
c01033fc	obj/kernel.asm	/^c01033fc:	6a 00                	push   $0x0$/;"	l
c01033fe	obj/kernel.asm	/^c01033fe:	68 ee 00 00 00       	push   $0xee$/;"	l
c0103403	obj/kernel.asm	/^c0103403:	e9 31 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103408	obj/kernel.asm	/^c0103408 <vector239>:$/;"	l
c0103408	obj/kernel.asm	/^c0103408:	6a 00                	push   $0x0$/;"	l
c010340a	obj/kernel.asm	/^c010340a:	68 ef 00 00 00       	push   $0xef$/;"	l
c010340f	obj/kernel.asm	/^c010340f:	e9 25 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103414	obj/kernel.asm	/^c0103414 <vector240>:$/;"	l
c0103414	obj/kernel.asm	/^c0103414:	6a 00                	push   $0x0$/;"	l
c0103416	obj/kernel.asm	/^c0103416:	68 f0 00 00 00       	push   $0xf0$/;"	l
c010341b	obj/kernel.asm	/^c010341b:	e9 19 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103420	obj/kernel.asm	/^c0103420 <vector241>:$/;"	l
c0103420	obj/kernel.asm	/^c0103420:	6a 00                	push   $0x0$/;"	l
c0103422	obj/kernel.asm	/^c0103422:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0103427	obj/kernel.asm	/^c0103427:	e9 0d f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010342c	obj/kernel.asm	/^c010342c <vector242>:$/;"	l
c010342c	obj/kernel.asm	/^c010342c:	6a 00                	push   $0x0$/;"	l
c010342e	obj/kernel.asm	/^c010342e:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0103433	obj/kernel.asm	/^c0103433:	e9 01 f6 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103438	obj/kernel.asm	/^c0103438 <vector243>:$/;"	l
c0103438	obj/kernel.asm	/^c0103438:	6a 00                	push   $0x0$/;"	l
c010343a	obj/kernel.asm	/^c010343a:	68 f3 00 00 00       	push   $0xf3$/;"	l
c010343f	obj/kernel.asm	/^c010343f:	e9 f5 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103444	obj/kernel.asm	/^c0103444 <vector244>:$/;"	l
c0103444	obj/kernel.asm	/^c0103444:	6a 00                	push   $0x0$/;"	l
c0103446	obj/kernel.asm	/^c0103446:	68 f4 00 00 00       	push   $0xf4$/;"	l
c010344b	obj/kernel.asm	/^c010344b:	e9 e9 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103450	obj/kernel.asm	/^c0103450 <vector245>:$/;"	l
c0103450	obj/kernel.asm	/^c0103450:	6a 00                	push   $0x0$/;"	l
c0103452	obj/kernel.asm	/^c0103452:	68 f5 00 00 00       	push   $0xf5$/;"	l
c0103457	obj/kernel.asm	/^c0103457:	e9 dd f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010345c	obj/kernel.asm	/^c010345c <vector246>:$/;"	l
c010345c	obj/kernel.asm	/^c010345c:	6a 00                	push   $0x0$/;"	l
c010345e	obj/kernel.asm	/^c010345e:	68 f6 00 00 00       	push   $0xf6$/;"	l
c0103463	obj/kernel.asm	/^c0103463:	e9 d1 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103468	obj/kernel.asm	/^c0103468 <vector247>:$/;"	l
c0103468	obj/kernel.asm	/^c0103468:	6a 00                	push   $0x0$/;"	l
c010346a	obj/kernel.asm	/^c010346a:	68 f7 00 00 00       	push   $0xf7$/;"	l
c010346f	obj/kernel.asm	/^c010346f:	e9 c5 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103474	obj/kernel.asm	/^c0103474 <vector248>:$/;"	l
c0103474	obj/kernel.asm	/^c0103474:	6a 00                	push   $0x0$/;"	l
c0103476	obj/kernel.asm	/^c0103476:	68 f8 00 00 00       	push   $0xf8$/;"	l
c010347b	obj/kernel.asm	/^c010347b:	e9 b9 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103480	obj/kernel.asm	/^c0103480 <vector249>:$/;"	l
c0103480	obj/kernel.asm	/^c0103480:	6a 00                	push   $0x0$/;"	l
c0103482	obj/kernel.asm	/^c0103482:	68 f9 00 00 00       	push   $0xf9$/;"	l
c0103487	obj/kernel.asm	/^c0103487:	e9 ad f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c010348c	obj/kernel.asm	/^c010348c <vector250>:$/;"	l
c010348c	obj/kernel.asm	/^c010348c:	6a 00                	push   $0x0$/;"	l
c010348e	obj/kernel.asm	/^c010348e:	68 fa 00 00 00       	push   $0xfa$/;"	l
c0103493	obj/kernel.asm	/^c0103493:	e9 a1 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c0103498	obj/kernel.asm	/^c0103498 <vector251>:$/;"	l
c0103498	obj/kernel.asm	/^c0103498:	6a 00                	push   $0x0$/;"	l
c010349a	obj/kernel.asm	/^c010349a:	68 fb 00 00 00       	push   $0xfb$/;"	l
c010349f	obj/kernel.asm	/^c010349f:	e9 95 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01034a4	obj/kernel.asm	/^c01034a4 <vector252>:$/;"	l
c01034a4	obj/kernel.asm	/^c01034a4:	6a 00                	push   $0x0$/;"	l
c01034a6	obj/kernel.asm	/^c01034a6:	68 fc 00 00 00       	push   $0xfc$/;"	l
c01034ab	obj/kernel.asm	/^c01034ab:	e9 89 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01034b0	obj/kernel.asm	/^c01034b0 <vector253>:$/;"	l
c01034b0	obj/kernel.asm	/^c01034b0:	6a 00                	push   $0x0$/;"	l
c01034b2	obj/kernel.asm	/^c01034b2:	68 fd 00 00 00       	push   $0xfd$/;"	l
c01034b7	obj/kernel.asm	/^c01034b7:	e9 7d f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01034bc	obj/kernel.asm	/^c01034bc <vector254>:$/;"	l
c01034bc	obj/kernel.asm	/^c01034bc:	6a 00                	push   $0x0$/;"	l
c01034be	obj/kernel.asm	/^c01034be:	68 fe 00 00 00       	push   $0xfe$/;"	l
c01034c3	obj/kernel.asm	/^c01034c3:	e9 71 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01034c8	obj/kernel.asm	/^c01034c8 <vector255>:$/;"	l
c01034c8	obj/kernel.asm	/^c01034c8:	6a 00                	push   $0x0$/;"	l
c01034ca	obj/kernel.asm	/^c01034ca:	68 ff 00 00 00       	push   $0xff$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf:	e9 65 f5 ff ff       	jmp    c0102a39 <__alltraps>$/;"	l
c01034d4	obj/kernel.asm	/^c01034d4 <page2ppn>:$/;"	l
c01034d4	obj/kernel.asm	/^c01034d4:	55                   	push   %ebp$/;"	l
c01034d5	obj/kernel.asm	/^c01034d5:	89 e5                	mov    %esp,%ebp$/;"	l
c01034d7	obj/kernel.asm	/^c01034d7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01034da	obj/kernel.asm	/^c01034da:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c01034df	obj/kernel.asm	/^c01034df:	29 c2                	sub    %eax,%edx$/;"	l
c01034e1	obj/kernel.asm	/^c01034e1:	89 d0                	mov    %edx,%eax$/;"	l
c01034e3	obj/kernel.asm	/^c01034e3:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c01034e6	obj/kernel.asm	/^c01034e6:	5d                   	pop    %ebp$/;"	l
c01034e7	obj/kernel.asm	/^c01034e7:	c3                   	ret    $/;"	l
c01034e8	obj/kernel.asm	/^c01034e8 <page2pa>:$/;"	l
c01034e8	obj/kernel.asm	/^c01034e8:	55                   	push   %ebp$/;"	l
c01034e9	obj/kernel.asm	/^c01034e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01034eb	obj/kernel.asm	/^c01034eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01034ee	obj/kernel.asm	/^c01034ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01034f1	obj/kernel.asm	/^c01034f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01034f4	obj/kernel.asm	/^c01034f4:	e8 db ff ff ff       	call   c01034d4 <page2ppn>$/;"	l
c01034f9	obj/kernel.asm	/^c01034f9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01034fc	obj/kernel.asm	/^c01034fc:	c9                   	leave  $/;"	l
c01034fd	obj/kernel.asm	/^c01034fd:	c3                   	ret    $/;"	l
c01034fe	obj/kernel.asm	/^c01034fe <page_ref>:$/;"	l
c01034fe	obj/kernel.asm	/^c01034fe:	55                   	push   %ebp$/;"	l
c01034ff	obj/kernel.asm	/^c01034ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0103501	obj/kernel.asm	/^c0103501:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103504	obj/kernel.asm	/^c0103504:	8b 00                	mov    (%eax),%eax$/;"	l
c0103506	obj/kernel.asm	/^c0103506:	5d                   	pop    %ebp$/;"	l
c0103507	obj/kernel.asm	/^c0103507:	c3                   	ret    $/;"	l
c0103508	obj/kernel.asm	/^c0103508 <set_page_ref>:$/;"	l
c0103508	obj/kernel.asm	/^c0103508:	55                   	push   %ebp$/;"	l
c0103509	obj/kernel.asm	/^c0103509:	89 e5                	mov    %esp,%ebp$/;"	l
c010350b	obj/kernel.asm	/^c010350b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010350e	obj/kernel.asm	/^c010350e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103511	obj/kernel.asm	/^c0103511:	89 10                	mov    %edx,(%eax)$/;"	l
c0103513	obj/kernel.asm	/^c0103513:	5d                   	pop    %ebp$/;"	l
c0103514	obj/kernel.asm	/^c0103514:	c3                   	ret    $/;"	l
c0103515	obj/kernel.asm	/^c0103515 <default_init>:$/;"	l
c0103515	obj/kernel.asm	/^c0103515:	55                   	push   %ebp$/;"	l
c0103516	obj/kernel.asm	/^c0103516:	89 e5                	mov    %esp,%ebp$/;"	l
c0103518	obj/kernel.asm	/^c0103518:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010351b	obj/kernel.asm	/^c010351b:	c7 45 fc b8 ef 19 c0 	movl   $0xc019efb8,-0x4(%ebp)$/;"	l
c0103522	obj/kernel.asm	/^c0103522:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103525	obj/kernel.asm	/^c0103525:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0103528	obj/kernel.asm	/^c0103528:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010352b	obj/kernel.asm	/^c010352b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010352e	obj/kernel.asm	/^c010352e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0103531	obj/kernel.asm	/^c0103531:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103534	obj/kernel.asm	/^c0103534:	89 10                	mov    %edx,(%eax)$/;"	l
c0103536	obj/kernel.asm	/^c0103536:	c7 05 c0 ef 19 c0 00 	movl   $0x0,0xc019efc0$/;"	l
c010353d	obj/kernel.asm	/^c010353d:	00 00 00 $/;"	l
c0103540	obj/kernel.asm	/^c0103540:	c9                   	leave  $/;"	l
c0103541	obj/kernel.asm	/^c0103541:	c3                   	ret    $/;"	l
c0103542	obj/kernel.asm	/^c0103542 <default_init_memmap>:$/;"	l
c0103542	obj/kernel.asm	/^c0103542:	55                   	push   %ebp$/;"	l
c0103543	obj/kernel.asm	/^c0103543:	89 e5                	mov    %esp,%ebp$/;"	l
c0103545	obj/kernel.asm	/^c0103545:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0103548	obj/kernel.asm	/^c0103548:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010354c	obj/kernel.asm	/^c010354c:	75 24                	jne    c0103572 <default_init_memmap+0x30>$/;"	l
c010354e	obj/kernel.asm	/^c010354e:	c7 44 24 0c 70 c5 10 	movl   $0xc010c570,0xc(%esp)$/;"	l
c0103555	obj/kernel.asm	/^c0103555:	c0 $/;"	l
c0103556	obj/kernel.asm	/^c0103556:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c010355d	obj/kernel.asm	/^c010355d:	c0 $/;"	l
c010355e	obj/kernel.asm	/^c010355e:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)$/;"	l
c0103565	obj/kernel.asm	/^c0103565:	00 $/;"	l
c0103566	obj/kernel.asm	/^c0103566:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c010356d	obj/kernel.asm	/^c010356d:	e8 63 d8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103572	obj/kernel.asm	/^c0103572:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103575	obj/kernel.asm	/^c0103575:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103578	obj/kernel.asm	/^c0103578:	e9 dc 00 00 00       	jmp    c0103659 <default_init_memmap+0x117>$/;"	l
c010357d	obj/kernel.asm	/^c010357d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103580	obj/kernel.asm	/^c0103580:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103583	obj/kernel.asm	/^c0103583:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010358a	obj/kernel.asm	/^c010358a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010358d	obj/kernel.asm	/^c010358d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103590	obj/kernel.asm	/^c0103590:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0103593	obj/kernel.asm	/^c0103593:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0103596	obj/kernel.asm	/^c0103596:	19 c0                	sbb    %eax,%eax$/;"	l
c0103598	obj/kernel.asm	/^c0103598:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010359b	obj/kernel.asm	/^c010359b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010359f	obj/kernel.asm	/^c010359f:	0f 95 c0             	setne  %al$/;"	l
c01035a2	obj/kernel.asm	/^c01035a2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01035a5	obj/kernel.asm	/^c01035a5:	85 c0                	test   %eax,%eax$/;"	l
c01035a7	obj/kernel.asm	/^c01035a7:	75 24                	jne    c01035cd <default_init_memmap+0x8b>$/;"	l
c01035a9	obj/kernel.asm	/^c01035a9:	c7 44 24 0c a1 c5 10 	movl   $0xc010c5a1,0xc(%esp)$/;"	l
c01035b0	obj/kernel.asm	/^c01035b0:	c0 $/;"	l
c01035b1	obj/kernel.asm	/^c01035b1:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01035b8	obj/kernel.asm	/^c01035b8:	c0 $/;"	l
c01035b9	obj/kernel.asm	/^c01035b9:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
c01035c0	obj/kernel.asm	/^c01035c0:	00 $/;"	l
c01035c1	obj/kernel.asm	/^c01035c1:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01035c8	obj/kernel.asm	/^c01035c8:	e8 08 d8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01035cd	obj/kernel.asm	/^c01035cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01035d0	obj/kernel.asm	/^c01035d0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c01035d7	obj/kernel.asm	/^c01035d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01035da	obj/kernel.asm	/^c01035da:	83 c0 04             	add    $0x4,%eax$/;"	l
c01035dd	obj/kernel.asm	/^c01035dd:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c01035e4	obj/kernel.asm	/^c01035e4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01035e7	obj/kernel.asm	/^c01035e7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01035ea	obj/kernel.asm	/^c01035ea:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01035ed	obj/kernel.asm	/^c01035ed:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01035f0	obj/kernel.asm	/^c01035f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01035f3	obj/kernel.asm	/^c01035f3:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01035fa	obj/kernel.asm	/^c01035fa:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0103601	obj/kernel.asm	/^c0103601:	00 $/;"	l
c0103602	obj/kernel.asm	/^c0103602:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103605	obj/kernel.asm	/^c0103605:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103608	obj/kernel.asm	/^c0103608:	e8 fb fe ff ff       	call   c0103508 <set_page_ref>$/;"	l
c010360d	obj/kernel.asm	/^c010360d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103610	obj/kernel.asm	/^c0103610:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0103613	obj/kernel.asm	/^c0103613:	c7 45 dc b8 ef 19 c0 	movl   $0xc019efb8,-0x24(%ebp)$/;"	l
c010361a	obj/kernel.asm	/^c010361a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010361d	obj/kernel.asm	/^c010361d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0103620	obj/kernel.asm	/^c0103620:	8b 00                	mov    (%eax),%eax$/;"	l
c0103622	obj/kernel.asm	/^c0103622:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0103625	obj/kernel.asm	/^c0103625:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103628	obj/kernel.asm	/^c0103628:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010362b	obj/kernel.asm	/^c010362b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010362e	obj/kernel.asm	/^c010362e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0103631	obj/kernel.asm	/^c0103631:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103634	obj/kernel.asm	/^c0103634:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103637	obj/kernel.asm	/^c0103637:	89 10                	mov    %edx,(%eax)$/;"	l
c0103639	obj/kernel.asm	/^c0103639:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010363c	obj/kernel.asm	/^c010363c:	8b 10                	mov    (%eax),%edx$/;"	l
c010363e	obj/kernel.asm	/^c010363e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103641	obj/kernel.asm	/^c0103641:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103644	obj/kernel.asm	/^c0103644:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0103647	obj/kernel.asm	/^c0103647:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010364a	obj/kernel.asm	/^c010364a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010364d	obj/kernel.asm	/^c010364d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0103650	obj/kernel.asm	/^c0103650:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103653	obj/kernel.asm	/^c0103653:	89 10                	mov    %edx,(%eax)$/;"	l
c0103655	obj/kernel.asm	/^c0103655:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0103659	obj/kernel.asm	/^c0103659:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010365c	obj/kernel.asm	/^c010365c:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c010365f	obj/kernel.asm	/^c010365f:	89 c2                	mov    %eax,%edx$/;"	l
c0103661	obj/kernel.asm	/^c0103661:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103664	obj/kernel.asm	/^c0103664:	01 d0                	add    %edx,%eax$/;"	l
c0103666	obj/kernel.asm	/^c0103666:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103669	obj/kernel.asm	/^c0103669:	0f 85 0e ff ff ff    	jne    c010357d <default_init_memmap+0x3b>$/;"	l
c010366f	obj/kernel.asm	/^c010366f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103672	obj/kernel.asm	/^c0103672:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103675	obj/kernel.asm	/^c0103675:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103678	obj/kernel.asm	/^c0103678:	8b 15 c0 ef 19 c0    	mov    0xc019efc0,%edx$/;"	l
c010367e	obj/kernel.asm	/^c010367e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103681	obj/kernel.asm	/^c0103681:	01 d0                	add    %edx,%eax$/;"	l
c0103683	obj/kernel.asm	/^c0103683:	a3 c0 ef 19 c0       	mov    %eax,0xc019efc0$/;"	l
c0103688	obj/kernel.asm	/^c0103688:	c9                   	leave  $/;"	l
c0103689	obj/kernel.asm	/^c0103689:	c3                   	ret    $/;"	l
c010368a	obj/kernel.asm	/^c010368a <default_alloc_pages>:$/;"	l
c010368a	obj/kernel.asm	/^c010368a:	55                   	push   %ebp$/;"	l
c010368b	obj/kernel.asm	/^c010368b:	89 e5                	mov    %esp,%ebp$/;"	l
c010368d	obj/kernel.asm	/^c010368d:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0103690	obj/kernel.asm	/^c0103690:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0103694	obj/kernel.asm	/^c0103694:	75 24                	jne    c01036ba <default_alloc_pages+0x30>$/;"	l
c0103696	obj/kernel.asm	/^c0103696:	c7 44 24 0c 70 c5 10 	movl   $0xc010c570,0xc(%esp)$/;"	l
c010369d	obj/kernel.asm	/^c010369d:	c0 $/;"	l
c010369e	obj/kernel.asm	/^c010369e:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01036a5	obj/kernel.asm	/^c01036a5:	c0 $/;"	l
c01036a6	obj/kernel.asm	/^c01036a6:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
c01036ad	obj/kernel.asm	/^c01036ad:	00 $/;"	l
c01036ae	obj/kernel.asm	/^c01036ae:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01036b5	obj/kernel.asm	/^c01036b5:	e8 1b d7 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01036ba	obj/kernel.asm	/^c01036ba:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c01036bf	obj/kernel.asm	/^c01036bf:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01036c2	obj/kernel.asm	/^c01036c2:	73 0a                	jae    c01036ce <default_alloc_pages+0x44>$/;"	l
c01036c4	obj/kernel.asm	/^c01036c4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01036c9	obj/kernel.asm	/^c01036c9:	e9 37 01 00 00       	jmp    c0103805 <default_alloc_pages+0x17b>$/;"	l
c01036ce	obj/kernel.asm	/^c01036ce:	c7 45 f4 b8 ef 19 c0 	movl   $0xc019efb8,-0xc(%ebp)$/;"	l
c01036d5	obj/kernel.asm	/^c01036d5:	e9 0a 01 00 00       	jmp    c01037e4 <default_alloc_pages+0x15a>$/;"	l
c01036da	obj/kernel.asm	/^c01036da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036dd	obj/kernel.asm	/^c01036dd:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01036e0	obj/kernel.asm	/^c01036e0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01036e3	obj/kernel.asm	/^c01036e3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01036e6	obj/kernel.asm	/^c01036e6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01036e9	obj/kernel.asm	/^c01036e9:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01036ec	obj/kernel.asm	/^c01036ec:	0f 82 f2 00 00 00    	jb     c01037e4 <default_alloc_pages+0x15a>$/;"	l
c01036f2	obj/kernel.asm	/^c01036f2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01036f9	obj/kernel.asm	/^c01036f9:	eb 7c                	jmp    c0103777 <default_alloc_pages+0xed>$/;"	l
c01036fb	obj/kernel.asm	/^c01036fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036fe	obj/kernel.asm	/^c01036fe:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103701	obj/kernel.asm	/^c0103701:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103704	obj/kernel.asm	/^c0103704:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103707	obj/kernel.asm	/^c0103707:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010370a	obj/kernel.asm	/^c010370a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010370d	obj/kernel.asm	/^c010370d:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103710	obj/kernel.asm	/^c0103710:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103713	obj/kernel.asm	/^c0103713:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103716	obj/kernel.asm	/^c0103716:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103719	obj/kernel.asm	/^c0103719:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103720	obj/kernel.asm	/^c0103720:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0103723	obj/kernel.asm	/^c0103723:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0103726	obj/kernel.asm	/^c0103726:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103729	obj/kernel.asm	/^c0103729:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c010372c	obj/kernel.asm	/^c010372c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010372f	obj/kernel.asm	/^c010372f:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103732	obj/kernel.asm	/^c0103732:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
c0103739	obj/kernel.asm	/^c0103739:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010373c	obj/kernel.asm	/^c010373c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010373f	obj/kernel.asm	/^c010373f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103742	obj/kernel.asm	/^c0103742:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0103745	obj/kernel.asm	/^c0103745:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103748	obj/kernel.asm	/^c0103748:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010374b	obj/kernel.asm	/^c010374b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010374e	obj/kernel.asm	/^c010374e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103751	obj/kernel.asm	/^c0103751:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103754	obj/kernel.asm	/^c0103754:	8b 12                	mov    (%edx),%edx$/;"	l
c0103756	obj/kernel.asm	/^c0103756:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0103759	obj/kernel.asm	/^c0103759:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010375c	obj/kernel.asm	/^c010375c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010375f	obj/kernel.asm	/^c010375f:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0103762	obj/kernel.asm	/^c0103762:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103765	obj/kernel.asm	/^c0103765:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103768	obj/kernel.asm	/^c0103768:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010376b	obj/kernel.asm	/^c010376b:	89 10                	mov    %edx,(%eax)$/;"	l
c010376d	obj/kernel.asm	/^c010376d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103770	obj/kernel.asm	/^c0103770:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103773	obj/kernel.asm	/^c0103773:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0103777	obj/kernel.asm	/^c0103777:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010377a	obj/kernel.asm	/^c010377a:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010377d	obj/kernel.asm	/^c010377d:	0f 82 78 ff ff ff    	jb     c01036fb <default_alloc_pages+0x71>$/;"	l
c0103783	obj/kernel.asm	/^c0103783:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103786	obj/kernel.asm	/^c0103786:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103789	obj/kernel.asm	/^c0103789:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010378c	obj/kernel.asm	/^c010378c:	76 12                	jbe    c01037a0 <default_alloc_pages+0x116>$/;"	l
c010378e	obj/kernel.asm	/^c010378e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103791	obj/kernel.asm	/^c0103791:	8d 50 f4             	lea    -0xc(%eax),%edx$/;"	l
c0103794	obj/kernel.asm	/^c0103794:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103797	obj/kernel.asm	/^c0103797:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010379a	obj/kernel.asm	/^c010379a:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c010379d	obj/kernel.asm	/^c010379d:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c01037a0	obj/kernel.asm	/^c01037a0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01037a3	obj/kernel.asm	/^c01037a3:	83 c0 04             	add    $0x4,%eax$/;"	l
c01037a6	obj/kernel.asm	/^c01037a6:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c01037ad	obj/kernel.asm	/^c01037ad:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01037b0	obj/kernel.asm	/^c01037b0:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01037b3	obj/kernel.asm	/^c01037b3:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c01037b6	obj/kernel.asm	/^c01037b6:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c01037b9	obj/kernel.asm	/^c01037b9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01037bc	obj/kernel.asm	/^c01037bc:	83 c0 04             	add    $0x4,%eax$/;"	l
c01037bf	obj/kernel.asm	/^c01037bf:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)$/;"	l
c01037c6	obj/kernel.asm	/^c01037c6:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c01037c9	obj/kernel.asm	/^c01037c9:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01037cc	obj/kernel.asm	/^c01037cc:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c01037cf	obj/kernel.asm	/^c01037cf:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01037d2	obj/kernel.asm	/^c01037d2:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c01037d7	obj/kernel.asm	/^c01037d7:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c01037da	obj/kernel.asm	/^c01037da:	a3 c0 ef 19 c0       	mov    %eax,0xc019efc0$/;"	l
c01037df	obj/kernel.asm	/^c01037df:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01037e2	obj/kernel.asm	/^c01037e2:	eb 21                	jmp    c0103805 <default_alloc_pages+0x17b>$/;"	l
c01037e4	obj/kernel.asm	/^c01037e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037e7	obj/kernel.asm	/^c01037e7:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01037ea	obj/kernel.asm	/^c01037ea:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01037ed	obj/kernel.asm	/^c01037ed:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01037f0	obj/kernel.asm	/^c01037f0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01037f3	obj/kernel.asm	/^c01037f3:	81 7d f4 b8 ef 19 c0 	cmpl   $0xc019efb8,-0xc(%ebp)$/;"	l
c01037fa	obj/kernel.asm	/^c01037fa:	0f 85 da fe ff ff    	jne    c01036da <default_alloc_pages+0x50>$/;"	l
c0103800	obj/kernel.asm	/^c0103800:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0103805	obj/kernel.asm	/^c0103805:	c9                   	leave  $/;"	l
c0103806	obj/kernel.asm	/^c0103806:	c3                   	ret    $/;"	l
c0103807	obj/kernel.asm	/^c0103807 <default_free_pages>:$/;"	l
c0103807	obj/kernel.asm	/^c0103807:	55                   	push   %ebp$/;"	l
c0103808	obj/kernel.asm	/^c0103808:	89 e5                	mov    %esp,%ebp$/;"	l
c010380a	obj/kernel.asm	/^c010380a:	83 ec 68             	sub    $0x68,%esp$/;"	l
c010380d	obj/kernel.asm	/^c010380d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0103811	obj/kernel.asm	/^c0103811:	75 24                	jne    c0103837 <default_free_pages+0x30>$/;"	l
c0103813	obj/kernel.asm	/^c0103813:	c7 44 24 0c 70 c5 10 	movl   $0xc010c570,0xc(%esp)$/;"	l
c010381a	obj/kernel.asm	/^c010381a:	c0 $/;"	l
c010381b	obj/kernel.asm	/^c010381b:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103822	obj/kernel.asm	/^c0103822:	c0 $/;"	l
c0103823	obj/kernel.asm	/^c0103823:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
c010382a	obj/kernel.asm	/^c010382a:	00 $/;"	l
c010382b	obj/kernel.asm	/^c010382b:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103832	obj/kernel.asm	/^c0103832:	e8 9e d5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103837	obj/kernel.asm	/^c0103837:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010383a	obj/kernel.asm	/^c010383a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010383d	obj/kernel.asm	/^c010383d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0103844	obj/kernel.asm	/^c0103844:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103847	obj/kernel.asm	/^c0103847:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010384a	obj/kernel.asm	/^c010384a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010384d	obj/kernel.asm	/^c010384d:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0103850	obj/kernel.asm	/^c0103850:	19 c0                	sbb    %eax,%eax$/;"	l
c0103852	obj/kernel.asm	/^c0103852:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103855	obj/kernel.asm	/^c0103855:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103859	obj/kernel.asm	/^c0103859:	0f 95 c0             	setne  %al$/;"	l
c010385c	obj/kernel.asm	/^c010385c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010385f	obj/kernel.asm	/^c010385f:	85 c0                	test   %eax,%eax$/;"	l
c0103861	obj/kernel.asm	/^c0103861:	75 24                	jne    c0103887 <default_free_pages+0x80>$/;"	l
c0103863	obj/kernel.asm	/^c0103863:	c7 44 24 0c b1 c5 10 	movl   $0xc010c5b1,0xc(%esp)$/;"	l
c010386a	obj/kernel.asm	/^c010386a:	c0 $/;"	l
c010386b	obj/kernel.asm	/^c010386b:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103872	obj/kernel.asm	/^c0103872:	c0 $/;"	l
c0103873	obj/kernel.asm	/^c0103873:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
c010387a	obj/kernel.asm	/^c010387a:	00 $/;"	l
c010387b	obj/kernel.asm	/^c010387b:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103882	obj/kernel.asm	/^c0103882:	e8 4e d5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103887	obj/kernel.asm	/^c0103887:	c7 45 f4 b8 ef 19 c0 	movl   $0xc019efb8,-0xc(%ebp)$/;"	l
c010388e	obj/kernel.asm	/^c010388e:	eb 13                	jmp    c01038a3 <default_free_pages+0x9c>$/;"	l
c0103890	obj/kernel.asm	/^c0103890:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103893	obj/kernel.asm	/^c0103893:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103896	obj/kernel.asm	/^c0103896:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103899	obj/kernel.asm	/^c0103899:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010389c	obj/kernel.asm	/^c010389c:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010389f	obj/kernel.asm	/^c010389f:	76 02                	jbe    c01038a3 <default_free_pages+0x9c>$/;"	l
c01038a1	obj/kernel.asm	/^c01038a1:	eb 18                	jmp    c01038bb <default_free_pages+0xb4>$/;"	l
c01038a3	obj/kernel.asm	/^c01038a3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01038a6	obj/kernel.asm	/^c01038a6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01038a9	obj/kernel.asm	/^c01038a9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01038ac	obj/kernel.asm	/^c01038ac:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01038af	obj/kernel.asm	/^c01038af:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01038b2	obj/kernel.asm	/^c01038b2:	81 7d f4 b8 ef 19 c0 	cmpl   $0xc019efb8,-0xc(%ebp)$/;"	l
c01038b9	obj/kernel.asm	/^c01038b9:	75 d5                	jne    c0103890 <default_free_pages+0x89>$/;"	l
c01038bb	obj/kernel.asm	/^c01038bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01038be	obj/kernel.asm	/^c01038be:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01038c1	obj/kernel.asm	/^c01038c1:	eb 4b                	jmp    c010390e <default_free_pages+0x107>$/;"	l
c01038c3	obj/kernel.asm	/^c01038c3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01038c6	obj/kernel.asm	/^c01038c6:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c01038c9	obj/kernel.asm	/^c01038c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01038cc	obj/kernel.asm	/^c01038cc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01038cf	obj/kernel.asm	/^c01038cf:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c01038d2	obj/kernel.asm	/^c01038d2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01038d5	obj/kernel.asm	/^c01038d5:	8b 00                	mov    (%eax),%eax$/;"	l
c01038d7	obj/kernel.asm	/^c01038d7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01038da	obj/kernel.asm	/^c01038da:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01038dd	obj/kernel.asm	/^c01038dd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01038e0	obj/kernel.asm	/^c01038e0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01038e3	obj/kernel.asm	/^c01038e3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01038e6	obj/kernel.asm	/^c01038e6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01038e9	obj/kernel.asm	/^c01038e9:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01038ec	obj/kernel.asm	/^c01038ec:	89 10                	mov    %edx,(%eax)$/;"	l
c01038ee	obj/kernel.asm	/^c01038ee:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01038f1	obj/kernel.asm	/^c01038f1:	8b 10                	mov    (%eax),%edx$/;"	l
c01038f3	obj/kernel.asm	/^c01038f3:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01038f6	obj/kernel.asm	/^c01038f6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01038f9	obj/kernel.asm	/^c01038f9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01038fc	obj/kernel.asm	/^c01038fc:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01038ff	obj/kernel.asm	/^c01038ff:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103902	obj/kernel.asm	/^c0103902:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0103905	obj/kernel.asm	/^c0103905:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103908	obj/kernel.asm	/^c0103908:	89 10                	mov    %edx,(%eax)$/;"	l
c010390a	obj/kernel.asm	/^c010390a:	83 45 f0 20          	addl   $0x20,-0x10(%ebp)$/;"	l
c010390e	obj/kernel.asm	/^c010390e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103911	obj/kernel.asm	/^c0103911:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103914	obj/kernel.asm	/^c0103914:	89 c2                	mov    %eax,%edx$/;"	l
c0103916	obj/kernel.asm	/^c0103916:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103919	obj/kernel.asm	/^c0103919:	01 d0                	add    %edx,%eax$/;"	l
c010391b	obj/kernel.asm	/^c010391b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010391e	obj/kernel.asm	/^c010391e:	77 a3                	ja     c01038c3 <default_free_pages+0xbc>$/;"	l
c0103920	obj/kernel.asm	/^c0103920:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103923	obj/kernel.asm	/^c0103923:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010392a	obj/kernel.asm	/^c010392a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0103931	obj/kernel.asm	/^c0103931:	00 $/;"	l
c0103932	obj/kernel.asm	/^c0103932:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103935	obj/kernel.asm	/^c0103935:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103938	obj/kernel.asm	/^c0103938:	e8 cb fb ff ff       	call   c0103508 <set_page_ref>$/;"	l
c010393d	obj/kernel.asm	/^c010393d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103940	obj/kernel.asm	/^c0103940:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103943	obj/kernel.asm	/^c0103943:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)$/;"	l
c010394a	obj/kernel.asm	/^c010394a:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010394d	obj/kernel.asm	/^c010394d:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103950	obj/kernel.asm	/^c0103950:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0103953	obj/kernel.asm	/^c0103953:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0103956	obj/kernel.asm	/^c0103956:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103959	obj/kernel.asm	/^c0103959:	83 c0 04             	add    $0x4,%eax$/;"	l
c010395c	obj/kernel.asm	/^c010395c:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0103963	obj/kernel.asm	/^c0103963:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0103966	obj/kernel.asm	/^c0103966:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0103969	obj/kernel.asm	/^c0103969:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010396c	obj/kernel.asm	/^c010396c:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c010396f	obj/kernel.asm	/^c010396f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103972	obj/kernel.asm	/^c0103972:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103975	obj/kernel.asm	/^c0103975:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103978	obj/kernel.asm	/^c0103978:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010397b	obj/kernel.asm	/^c010397b:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010397e	obj/kernel.asm	/^c010397e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103981	obj/kernel.asm	/^c0103981:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103984	obj/kernel.asm	/^c0103984:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103987	obj/kernel.asm	/^c0103987:	89 c2                	mov    %eax,%edx$/;"	l
c0103989	obj/kernel.asm	/^c0103989:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010398c	obj/kernel.asm	/^c010398c:	01 d0                	add    %edx,%eax$/;"	l
c010398e	obj/kernel.asm	/^c010398e:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103991	obj/kernel.asm	/^c0103991:	75 1e                	jne    c01039b1 <default_free_pages+0x1aa>$/;"	l
c0103993	obj/kernel.asm	/^c0103993:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103996	obj/kernel.asm	/^c0103996:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103999	obj/kernel.asm	/^c0103999:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010399c	obj/kernel.asm	/^c010399c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010399f	obj/kernel.asm	/^c010399f:	01 c2                	add    %eax,%edx$/;"	l
c01039a1	obj/kernel.asm	/^c01039a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039a4	obj/kernel.asm	/^c01039a4:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01039a7	obj/kernel.asm	/^c01039a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01039aa	obj/kernel.asm	/^c01039aa:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01039b1	obj/kernel.asm	/^c01039b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039b4	obj/kernel.asm	/^c01039b4:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01039b7	obj/kernel.asm	/^c01039b7:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01039ba	obj/kernel.asm	/^c01039ba:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01039bd	obj/kernel.asm	/^c01039bd:	8b 00                	mov    (%eax),%eax$/;"	l
c01039bf	obj/kernel.asm	/^c01039bf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01039c2	obj/kernel.asm	/^c01039c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01039c5	obj/kernel.asm	/^c01039c5:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01039c8	obj/kernel.asm	/^c01039c8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01039cb	obj/kernel.asm	/^c01039cb:	81 7d f4 b8 ef 19 c0 	cmpl   $0xc019efb8,-0xc(%ebp)$/;"	l
c01039d2	obj/kernel.asm	/^c01039d2:	74 57                	je     c0103a2b <default_free_pages+0x224>$/;"	l
c01039d4	obj/kernel.asm	/^c01039d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039d7	obj/kernel.asm	/^c01039d7:	83 e8 20             	sub    $0x20,%eax$/;"	l
c01039da	obj/kernel.asm	/^c01039da:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01039dd	obj/kernel.asm	/^c01039dd:	75 4c                	jne    c0103a2b <default_free_pages+0x224>$/;"	l
c01039df	obj/kernel.asm	/^c01039df:	eb 41                	jmp    c0103a22 <default_free_pages+0x21b>$/;"	l
c01039e1	obj/kernel.asm	/^c01039e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01039e4	obj/kernel.asm	/^c01039e4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01039e7	obj/kernel.asm	/^c01039e7:	85 c0                	test   %eax,%eax$/;"	l
c01039e9	obj/kernel.asm	/^c01039e9:	74 20                	je     c0103a0b <default_free_pages+0x204>$/;"	l
c01039eb	obj/kernel.asm	/^c01039eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01039ee	obj/kernel.asm	/^c01039ee:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01039f1	obj/kernel.asm	/^c01039f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039f4	obj/kernel.asm	/^c01039f4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01039f7	obj/kernel.asm	/^c01039f7:	01 c2                	add    %eax,%edx$/;"	l
c01039f9	obj/kernel.asm	/^c01039f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01039fc	obj/kernel.asm	/^c01039fc:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01039ff	obj/kernel.asm	/^c01039ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a02	obj/kernel.asm	/^c0103a02:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0103a09	obj/kernel.asm	/^c0103a09:	eb 20                	jmp    c0103a2b <default_free_pages+0x224>$/;"	l
c0103a0b	obj/kernel.asm	/^c0103a0b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a0e	obj/kernel.asm	/^c0103a0e:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0103a11	obj/kernel.asm	/^c0103a11:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0103a14	obj/kernel.asm	/^c0103a14:	8b 00                	mov    (%eax),%eax$/;"	l
c0103a16	obj/kernel.asm	/^c0103a16:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103a19	obj/kernel.asm	/^c0103a19:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a1c	obj/kernel.asm	/^c0103a1c:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103a1f	obj/kernel.asm	/^c0103a1f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a22	obj/kernel.asm	/^c0103a22:	81 7d f4 b8 ef 19 c0 	cmpl   $0xc019efb8,-0xc(%ebp)$/;"	l
c0103a29	obj/kernel.asm	/^c0103a29:	75 b6                	jne    c01039e1 <default_free_pages+0x1da>$/;"	l
c0103a2b	obj/kernel.asm	/^c0103a2b:	8b 15 c0 ef 19 c0    	mov    0xc019efc0,%edx$/;"	l
c0103a31	obj/kernel.asm	/^c0103a31:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103a34	obj/kernel.asm	/^c0103a34:	01 d0                	add    %edx,%eax$/;"	l
c0103a36	obj/kernel.asm	/^c0103a36:	a3 c0 ef 19 c0       	mov    %eax,0xc019efc0$/;"	l
c0103a3b	obj/kernel.asm	/^c0103a3b:	90                   	nop$/;"	l
c0103a3c	obj/kernel.asm	/^c0103a3c:	c9                   	leave  $/;"	l
c0103a3d	obj/kernel.asm	/^c0103a3d:	c3                   	ret    $/;"	l
c0103a3e	obj/kernel.asm	/^c0103a3e <default_nr_free_pages>:$/;"	l
c0103a3e	obj/kernel.asm	/^c0103a3e:	55                   	push   %ebp$/;"	l
c0103a3f	obj/kernel.asm	/^c0103a3f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a41	obj/kernel.asm	/^c0103a41:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c0103a46	obj/kernel.asm	/^c0103a46:	5d                   	pop    %ebp$/;"	l
c0103a47	obj/kernel.asm	/^c0103a47:	c3                   	ret    $/;"	l
c0103a48	obj/kernel.asm	/^c0103a48 <basic_check>:$/;"	l
c0103a48	obj/kernel.asm	/^c0103a48:	55                   	push   %ebp$/;"	l
c0103a49	obj/kernel.asm	/^c0103a49:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a4b	obj/kernel.asm	/^c0103a4b:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0103a4e	obj/kernel.asm	/^c0103a4e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0103a55	obj/kernel.asm	/^c0103a55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a58	obj/kernel.asm	/^c0103a58:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a5b	obj/kernel.asm	/^c0103a5b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a5e	obj/kernel.asm	/^c0103a5e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103a61	obj/kernel.asm	/^c0103a61:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103a68	obj/kernel.asm	/^c0103a68:	e8 dc 15 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103a6d	obj/kernel.asm	/^c0103a6d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103a70	obj/kernel.asm	/^c0103a70:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0103a74	obj/kernel.asm	/^c0103a74:	75 24                	jne    c0103a9a <basic_check+0x52>$/;"	l
c0103a76	obj/kernel.asm	/^c0103a76:	c7 44 24 0c c4 c5 10 	movl   $0xc010c5c4,0xc(%esp)$/;"	l
c0103a7d	obj/kernel.asm	/^c0103a7d:	c0 $/;"	l
c0103a7e	obj/kernel.asm	/^c0103a7e:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103a85	obj/kernel.asm	/^c0103a85:	c0 $/;"	l
c0103a86	obj/kernel.asm	/^c0103a86:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
c0103a8d	obj/kernel.asm	/^c0103a8d:	00 $/;"	l
c0103a8e	obj/kernel.asm	/^c0103a8e:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103a95	obj/kernel.asm	/^c0103a95:	e8 3b d3 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103a9a	obj/kernel.asm	/^c0103a9a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103aa1	obj/kernel.asm	/^c0103aa1:	e8 a3 15 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103aa6	obj/kernel.asm	/^c0103aa6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103aa9	obj/kernel.asm	/^c0103aa9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103aad	obj/kernel.asm	/^c0103aad:	75 24                	jne    c0103ad3 <basic_check+0x8b>$/;"	l
c0103aaf	obj/kernel.asm	/^c0103aaf:	c7 44 24 0c e0 c5 10 	movl   $0xc010c5e0,0xc(%esp)$/;"	l
c0103ab6	obj/kernel.asm	/^c0103ab6:	c0 $/;"	l
c0103ab7	obj/kernel.asm	/^c0103ab7:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103abe	obj/kernel.asm	/^c0103abe:	c0 $/;"	l
c0103abf	obj/kernel.asm	/^c0103abf:	c7 44 24 04 ae 00 00 	movl   $0xae,0x4(%esp)$/;"	l
c0103ac6	obj/kernel.asm	/^c0103ac6:	00 $/;"	l
c0103ac7	obj/kernel.asm	/^c0103ac7:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103ace	obj/kernel.asm	/^c0103ace:	e8 02 d3 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103ad3	obj/kernel.asm	/^c0103ad3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ada	obj/kernel.asm	/^c0103ada:	e8 6a 15 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103adf	obj/kernel.asm	/^c0103adf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103ae2	obj/kernel.asm	/^c0103ae2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103ae6	obj/kernel.asm	/^c0103ae6:	75 24                	jne    c0103b0c <basic_check+0xc4>$/;"	l
c0103ae8	obj/kernel.asm	/^c0103ae8:	c7 44 24 0c fc c5 10 	movl   $0xc010c5fc,0xc(%esp)$/;"	l
c0103aef	obj/kernel.asm	/^c0103aef:	c0 $/;"	l
c0103af0	obj/kernel.asm	/^c0103af0:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103af7	obj/kernel.asm	/^c0103af7:	c0 $/;"	l
c0103af8	obj/kernel.asm	/^c0103af8:	c7 44 24 04 af 00 00 	movl   $0xaf,0x4(%esp)$/;"	l
c0103aff	obj/kernel.asm	/^c0103aff:	00 $/;"	l
c0103b00	obj/kernel.asm	/^c0103b00:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103b07	obj/kernel.asm	/^c0103b07:	e8 c9 d2 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103b0c	obj/kernel.asm	/^c0103b0c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103b0f	obj/kernel.asm	/^c0103b0f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103b12	obj/kernel.asm	/^c0103b12:	74 10                	je     c0103b24 <basic_check+0xdc>$/;"	l
c0103b14	obj/kernel.asm	/^c0103b14:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103b17	obj/kernel.asm	/^c0103b17:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103b1a	obj/kernel.asm	/^c0103b1a:	74 08                	je     c0103b24 <basic_check+0xdc>$/;"	l
c0103b1c	obj/kernel.asm	/^c0103b1c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103b1f	obj/kernel.asm	/^c0103b1f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103b22	obj/kernel.asm	/^c0103b22:	75 24                	jne    c0103b48 <basic_check+0x100>$/;"	l
c0103b24	obj/kernel.asm	/^c0103b24:	c7 44 24 0c 18 c6 10 	movl   $0xc010c618,0xc(%esp)$/;"	l
c0103b2b	obj/kernel.asm	/^c0103b2b:	c0 $/;"	l
c0103b2c	obj/kernel.asm	/^c0103b2c:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103b33	obj/kernel.asm	/^c0103b33:	c0 $/;"	l
c0103b34	obj/kernel.asm	/^c0103b34:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)$/;"	l
c0103b3b	obj/kernel.asm	/^c0103b3b:	00 $/;"	l
c0103b3c	obj/kernel.asm	/^c0103b3c:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103b43	obj/kernel.asm	/^c0103b43:	e8 8d d2 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103b48	obj/kernel.asm	/^c0103b48:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103b4b	obj/kernel.asm	/^c0103b4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103b4e	obj/kernel.asm	/^c0103b4e:	e8 ab f9 ff ff       	call   c01034fe <page_ref>$/;"	l
c0103b53	obj/kernel.asm	/^c0103b53:	85 c0                	test   %eax,%eax$/;"	l
c0103b55	obj/kernel.asm	/^c0103b55:	75 1e                	jne    c0103b75 <basic_check+0x12d>$/;"	l
c0103b57	obj/kernel.asm	/^c0103b57:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103b5a	obj/kernel.asm	/^c0103b5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103b5d	obj/kernel.asm	/^c0103b5d:	e8 9c f9 ff ff       	call   c01034fe <page_ref>$/;"	l
c0103b62	obj/kernel.asm	/^c0103b62:	85 c0                	test   %eax,%eax$/;"	l
c0103b64	obj/kernel.asm	/^c0103b64:	75 0f                	jne    c0103b75 <basic_check+0x12d>$/;"	l
c0103b66	obj/kernel.asm	/^c0103b66:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103b69	obj/kernel.asm	/^c0103b69:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103b6c	obj/kernel.asm	/^c0103b6c:	e8 8d f9 ff ff       	call   c01034fe <page_ref>$/;"	l
c0103b71	obj/kernel.asm	/^c0103b71:	85 c0                	test   %eax,%eax$/;"	l
c0103b73	obj/kernel.asm	/^c0103b73:	74 24                	je     c0103b99 <basic_check+0x151>$/;"	l
c0103b75	obj/kernel.asm	/^c0103b75:	c7 44 24 0c 3c c6 10 	movl   $0xc010c63c,0xc(%esp)$/;"	l
c0103b7c	obj/kernel.asm	/^c0103b7c:	c0 $/;"	l
c0103b7d	obj/kernel.asm	/^c0103b7d:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103b84	obj/kernel.asm	/^c0103b84:	c0 $/;"	l
c0103b85	obj/kernel.asm	/^c0103b85:	c7 44 24 04 b2 00 00 	movl   $0xb2,0x4(%esp)$/;"	l
c0103b8c	obj/kernel.asm	/^c0103b8c:	00 $/;"	l
c0103b8d	obj/kernel.asm	/^c0103b8d:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103b94	obj/kernel.asm	/^c0103b94:	e8 3c d2 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103b99	obj/kernel.asm	/^c0103b99:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103b9c	obj/kernel.asm	/^c0103b9c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103b9f	obj/kernel.asm	/^c0103b9f:	e8 44 f9 ff ff       	call   c01034e8 <page2pa>$/;"	l
c0103ba4	obj/kernel.asm	/^c0103ba4:	8b 15 e0 ce 19 c0    	mov    0xc019cee0,%edx$/;"	l
c0103baa	obj/kernel.asm	/^c0103baa:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103bad	obj/kernel.asm	/^c0103bad:	39 d0                	cmp    %edx,%eax$/;"	l
c0103baf	obj/kernel.asm	/^c0103baf:	72 24                	jb     c0103bd5 <basic_check+0x18d>$/;"	l
c0103bb1	obj/kernel.asm	/^c0103bb1:	c7 44 24 0c 78 c6 10 	movl   $0xc010c678,0xc(%esp)$/;"	l
c0103bb8	obj/kernel.asm	/^c0103bb8:	c0 $/;"	l
c0103bb9	obj/kernel.asm	/^c0103bb9:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103bc0	obj/kernel.asm	/^c0103bc0:	c0 $/;"	l
c0103bc1	obj/kernel.asm	/^c0103bc1:	c7 44 24 04 b4 00 00 	movl   $0xb4,0x4(%esp)$/;"	l
c0103bc8	obj/kernel.asm	/^c0103bc8:	00 $/;"	l
c0103bc9	obj/kernel.asm	/^c0103bc9:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103bd0	obj/kernel.asm	/^c0103bd0:	e8 00 d2 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103bd5	obj/kernel.asm	/^c0103bd5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103bd8	obj/kernel.asm	/^c0103bd8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103bdb	obj/kernel.asm	/^c0103bdb:	e8 08 f9 ff ff       	call   c01034e8 <page2pa>$/;"	l
c0103be0	obj/kernel.asm	/^c0103be0:	8b 15 e0 ce 19 c0    	mov    0xc019cee0,%edx$/;"	l
c0103be6	obj/kernel.asm	/^c0103be6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103be9	obj/kernel.asm	/^c0103be9:	39 d0                	cmp    %edx,%eax$/;"	l
c0103beb	obj/kernel.asm	/^c0103beb:	72 24                	jb     c0103c11 <basic_check+0x1c9>$/;"	l
c0103bed	obj/kernel.asm	/^c0103bed:	c7 44 24 0c 95 c6 10 	movl   $0xc010c695,0xc(%esp)$/;"	l
c0103bf4	obj/kernel.asm	/^c0103bf4:	c0 $/;"	l
c0103bf5	obj/kernel.asm	/^c0103bf5:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103bfc	obj/kernel.asm	/^c0103bfc:	c0 $/;"	l
c0103bfd	obj/kernel.asm	/^c0103bfd:	c7 44 24 04 b5 00 00 	movl   $0xb5,0x4(%esp)$/;"	l
c0103c04	obj/kernel.asm	/^c0103c04:	00 $/;"	l
c0103c05	obj/kernel.asm	/^c0103c05:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103c0c	obj/kernel.asm	/^c0103c0c:	e8 c4 d1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103c11	obj/kernel.asm	/^c0103c11:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103c14	obj/kernel.asm	/^c0103c14:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c17	obj/kernel.asm	/^c0103c17:	e8 cc f8 ff ff       	call   c01034e8 <page2pa>$/;"	l
c0103c1c	obj/kernel.asm	/^c0103c1c:	8b 15 e0 ce 19 c0    	mov    0xc019cee0,%edx$/;"	l
c0103c22	obj/kernel.asm	/^c0103c22:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103c25	obj/kernel.asm	/^c0103c25:	39 d0                	cmp    %edx,%eax$/;"	l
c0103c27	obj/kernel.asm	/^c0103c27:	72 24                	jb     c0103c4d <basic_check+0x205>$/;"	l
c0103c29	obj/kernel.asm	/^c0103c29:	c7 44 24 0c b2 c6 10 	movl   $0xc010c6b2,0xc(%esp)$/;"	l
c0103c30	obj/kernel.asm	/^c0103c30:	c0 $/;"	l
c0103c31	obj/kernel.asm	/^c0103c31:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103c38	obj/kernel.asm	/^c0103c38:	c0 $/;"	l
c0103c39	obj/kernel.asm	/^c0103c39:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
c0103c40	obj/kernel.asm	/^c0103c40:	00 $/;"	l
c0103c41	obj/kernel.asm	/^c0103c41:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103c48	obj/kernel.asm	/^c0103c48:	e8 88 d1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103c4d	obj/kernel.asm	/^c0103c4d:	a1 b8 ef 19 c0       	mov    0xc019efb8,%eax$/;"	l
c0103c52	obj/kernel.asm	/^c0103c52:	8b 15 bc ef 19 c0    	mov    0xc019efbc,%edx$/;"	l
c0103c58	obj/kernel.asm	/^c0103c58:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103c5b	obj/kernel.asm	/^c0103c5b:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103c5e	obj/kernel.asm	/^c0103c5e:	c7 45 e0 b8 ef 19 c0 	movl   $0xc019efb8,-0x20(%ebp)$/;"	l
c0103c65	obj/kernel.asm	/^c0103c65:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103c68	obj/kernel.asm	/^c0103c68:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0103c6b	obj/kernel.asm	/^c0103c6b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103c6e	obj/kernel.asm	/^c0103c6e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103c71	obj/kernel.asm	/^c0103c71:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0103c74	obj/kernel.asm	/^c0103c74:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103c77	obj/kernel.asm	/^c0103c77:	89 10                	mov    %edx,(%eax)$/;"	l
c0103c79	obj/kernel.asm	/^c0103c79:	c7 45 dc b8 ef 19 c0 	movl   $0xc019efb8,-0x24(%ebp)$/;"	l
c0103c80	obj/kernel.asm	/^c0103c80:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0103c83	obj/kernel.asm	/^c0103c83:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103c86	obj/kernel.asm	/^c0103c86:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0103c89	obj/kernel.asm	/^c0103c89:	0f 94 c0             	sete   %al$/;"	l
c0103c8c	obj/kernel.asm	/^c0103c8c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103c8f	obj/kernel.asm	/^c0103c8f:	85 c0                	test   %eax,%eax$/;"	l
c0103c91	obj/kernel.asm	/^c0103c91:	75 24                	jne    c0103cb7 <basic_check+0x26f>$/;"	l
c0103c93	obj/kernel.asm	/^c0103c93:	c7 44 24 0c cf c6 10 	movl   $0xc010c6cf,0xc(%esp)$/;"	l
c0103c9a	obj/kernel.asm	/^c0103c9a:	c0 $/;"	l
c0103c9b	obj/kernel.asm	/^c0103c9b:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103ca2	obj/kernel.asm	/^c0103ca2:	c0 $/;"	l
c0103ca3	obj/kernel.asm	/^c0103ca3:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
c0103caa	obj/kernel.asm	/^c0103caa:	00 $/;"	l
c0103cab	obj/kernel.asm	/^c0103cab:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103cb2	obj/kernel.asm	/^c0103cb2:	e8 1e d1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103cb7	obj/kernel.asm	/^c0103cb7:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c0103cbc	obj/kernel.asm	/^c0103cbc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103cbf	obj/kernel.asm	/^c0103cbf:	c7 05 c0 ef 19 c0 00 	movl   $0x0,0xc019efc0$/;"	l
c0103cc6	obj/kernel.asm	/^c0103cc6:	00 00 00 $/;"	l
c0103cc9	obj/kernel.asm	/^c0103cc9:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103cd0	obj/kernel.asm	/^c0103cd0:	e8 74 13 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103cd5	obj/kernel.asm	/^c0103cd5:	85 c0                	test   %eax,%eax$/;"	l
c0103cd7	obj/kernel.asm	/^c0103cd7:	74 24                	je     c0103cfd <basic_check+0x2b5>$/;"	l
c0103cd9	obj/kernel.asm	/^c0103cd9:	c7 44 24 0c e6 c6 10 	movl   $0xc010c6e6,0xc(%esp)$/;"	l
c0103ce0	obj/kernel.asm	/^c0103ce0:	c0 $/;"	l
c0103ce1	obj/kernel.asm	/^c0103ce1:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103ce8	obj/kernel.asm	/^c0103ce8:	c0 $/;"	l
c0103ce9	obj/kernel.asm	/^c0103ce9:	c7 44 24 04 bf 00 00 	movl   $0xbf,0x4(%esp)$/;"	l
c0103cf0	obj/kernel.asm	/^c0103cf0:	00 $/;"	l
c0103cf1	obj/kernel.asm	/^c0103cf1:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103cf8	obj/kernel.asm	/^c0103cf8:	e8 d8 d0 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103cfd	obj/kernel.asm	/^c0103cfd:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103d04	obj/kernel.asm	/^c0103d04:	00 $/;"	l
c0103d05	obj/kernel.asm	/^c0103d05:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103d08	obj/kernel.asm	/^c0103d08:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103d0b	obj/kernel.asm	/^c0103d0b:	e8 a4 13 00 00       	call   c01050b4 <free_pages>$/;"	l
c0103d10	obj/kernel.asm	/^c0103d10:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103d17	obj/kernel.asm	/^c0103d17:	00 $/;"	l
c0103d18	obj/kernel.asm	/^c0103d18:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103d1b	obj/kernel.asm	/^c0103d1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103d1e	obj/kernel.asm	/^c0103d1e:	e8 91 13 00 00       	call   c01050b4 <free_pages>$/;"	l
c0103d23	obj/kernel.asm	/^c0103d23:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103d2a	obj/kernel.asm	/^c0103d2a:	00 $/;"	l
c0103d2b	obj/kernel.asm	/^c0103d2b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103d2e	obj/kernel.asm	/^c0103d2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103d31	obj/kernel.asm	/^c0103d31:	e8 7e 13 00 00       	call   c01050b4 <free_pages>$/;"	l
c0103d36	obj/kernel.asm	/^c0103d36:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c0103d3b	obj/kernel.asm	/^c0103d3b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0103d3e	obj/kernel.asm	/^c0103d3e:	74 24                	je     c0103d64 <basic_check+0x31c>$/;"	l
c0103d40	obj/kernel.asm	/^c0103d40:	c7 44 24 0c fb c6 10 	movl   $0xc010c6fb,0xc(%esp)$/;"	l
c0103d47	obj/kernel.asm	/^c0103d47:	c0 $/;"	l
c0103d48	obj/kernel.asm	/^c0103d48:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103d4f	obj/kernel.asm	/^c0103d4f:	c0 $/;"	l
c0103d50	obj/kernel.asm	/^c0103d50:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)$/;"	l
c0103d57	obj/kernel.asm	/^c0103d57:	00 $/;"	l
c0103d58	obj/kernel.asm	/^c0103d58:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103d5f	obj/kernel.asm	/^c0103d5f:	e8 71 d0 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103d64	obj/kernel.asm	/^c0103d64:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103d6b	obj/kernel.asm	/^c0103d6b:	e8 d9 12 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103d70	obj/kernel.asm	/^c0103d70:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103d73	obj/kernel.asm	/^c0103d73:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0103d77	obj/kernel.asm	/^c0103d77:	75 24                	jne    c0103d9d <basic_check+0x355>$/;"	l
c0103d79	obj/kernel.asm	/^c0103d79:	c7 44 24 0c c4 c5 10 	movl   $0xc010c5c4,0xc(%esp)$/;"	l
c0103d80	obj/kernel.asm	/^c0103d80:	c0 $/;"	l
c0103d81	obj/kernel.asm	/^c0103d81:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103d88	obj/kernel.asm	/^c0103d88:	c0 $/;"	l
c0103d89	obj/kernel.asm	/^c0103d89:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c0103d90	obj/kernel.asm	/^c0103d90:	00 $/;"	l
c0103d91	obj/kernel.asm	/^c0103d91:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103d98	obj/kernel.asm	/^c0103d98:	e8 38 d0 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103d9d	obj/kernel.asm	/^c0103d9d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103da4	obj/kernel.asm	/^c0103da4:	e8 a0 12 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103da9	obj/kernel.asm	/^c0103da9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103dac	obj/kernel.asm	/^c0103dac:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103db0	obj/kernel.asm	/^c0103db0:	75 24                	jne    c0103dd6 <basic_check+0x38e>$/;"	l
c0103db2	obj/kernel.asm	/^c0103db2:	c7 44 24 0c e0 c5 10 	movl   $0xc010c5e0,0xc(%esp)$/;"	l
c0103db9	obj/kernel.asm	/^c0103db9:	c0 $/;"	l
c0103dba	obj/kernel.asm	/^c0103dba:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103dc1	obj/kernel.asm	/^c0103dc1:	c0 $/;"	l
c0103dc2	obj/kernel.asm	/^c0103dc2:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)$/;"	l
c0103dc9	obj/kernel.asm	/^c0103dc9:	00 $/;"	l
c0103dca	obj/kernel.asm	/^c0103dca:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103dd1	obj/kernel.asm	/^c0103dd1:	e8 ff cf ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103dd6	obj/kernel.asm	/^c0103dd6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ddd	obj/kernel.asm	/^c0103ddd:	e8 67 12 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103de2	obj/kernel.asm	/^c0103de2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103de5	obj/kernel.asm	/^c0103de5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103de9	obj/kernel.asm	/^c0103de9:	75 24                	jne    c0103e0f <basic_check+0x3c7>$/;"	l
c0103deb	obj/kernel.asm	/^c0103deb:	c7 44 24 0c fc c5 10 	movl   $0xc010c5fc,0xc(%esp)$/;"	l
c0103df2	obj/kernel.asm	/^c0103df2:	c0 $/;"	l
c0103df3	obj/kernel.asm	/^c0103df3:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103dfa	obj/kernel.asm	/^c0103dfa:	c0 $/;"	l
c0103dfb	obj/kernel.asm	/^c0103dfb:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
c0103e02	obj/kernel.asm	/^c0103e02:	00 $/;"	l
c0103e03	obj/kernel.asm	/^c0103e03:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103e0a	obj/kernel.asm	/^c0103e0a:	e8 c6 cf ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103e0f	obj/kernel.asm	/^c0103e0f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e16	obj/kernel.asm	/^c0103e16:	e8 2e 12 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103e1b	obj/kernel.asm	/^c0103e1b:	85 c0                	test   %eax,%eax$/;"	l
c0103e1d	obj/kernel.asm	/^c0103e1d:	74 24                	je     c0103e43 <basic_check+0x3fb>$/;"	l
c0103e1f	obj/kernel.asm	/^c0103e1f:	c7 44 24 0c e6 c6 10 	movl   $0xc010c6e6,0xc(%esp)$/;"	l
c0103e26	obj/kernel.asm	/^c0103e26:	c0 $/;"	l
c0103e27	obj/kernel.asm	/^c0103e27:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103e2e	obj/kernel.asm	/^c0103e2e:	c0 $/;"	l
c0103e2f	obj/kernel.asm	/^c0103e2f:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
c0103e36	obj/kernel.asm	/^c0103e36:	00 $/;"	l
c0103e37	obj/kernel.asm	/^c0103e37:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103e3e	obj/kernel.asm	/^c0103e3e:	e8 92 cf ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103e43	obj/kernel.asm	/^c0103e43:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103e4a	obj/kernel.asm	/^c0103e4a:	00 $/;"	l
c0103e4b	obj/kernel.asm	/^c0103e4b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e4e	obj/kernel.asm	/^c0103e4e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103e51	obj/kernel.asm	/^c0103e51:	e8 5e 12 00 00       	call   c01050b4 <free_pages>$/;"	l
c0103e56	obj/kernel.asm	/^c0103e56:	c7 45 d8 b8 ef 19 c0 	movl   $0xc019efb8,-0x28(%ebp)$/;"	l
c0103e5d	obj/kernel.asm	/^c0103e5d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0103e60	obj/kernel.asm	/^c0103e60:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103e63	obj/kernel.asm	/^c0103e63:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c0103e66	obj/kernel.asm	/^c0103e66:	0f 94 c0             	sete   %al$/;"	l
c0103e69	obj/kernel.asm	/^c0103e69:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103e6c	obj/kernel.asm	/^c0103e6c:	85 c0                	test   %eax,%eax$/;"	l
c0103e6e	obj/kernel.asm	/^c0103e6e:	74 24                	je     c0103e94 <basic_check+0x44c>$/;"	l
c0103e70	obj/kernel.asm	/^c0103e70:	c7 44 24 0c 08 c7 10 	movl   $0xc010c708,0xc(%esp)$/;"	l
c0103e77	obj/kernel.asm	/^c0103e77:	c0 $/;"	l
c0103e78	obj/kernel.asm	/^c0103e78:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103e7f	obj/kernel.asm	/^c0103e7f:	c0 $/;"	l
c0103e80	obj/kernel.asm	/^c0103e80:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c0103e87	obj/kernel.asm	/^c0103e87:	00 $/;"	l
c0103e88	obj/kernel.asm	/^c0103e88:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103e8f	obj/kernel.asm	/^c0103e8f:	e8 41 cf ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103e94	obj/kernel.asm	/^c0103e94:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e9b	obj/kernel.asm	/^c0103e9b:	e8 a9 11 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103ea0	obj/kernel.asm	/^c0103ea0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103ea3	obj/kernel.asm	/^c0103ea3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103ea6	obj/kernel.asm	/^c0103ea6:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0103ea9	obj/kernel.asm	/^c0103ea9:	74 24                	je     c0103ecf <basic_check+0x487>$/;"	l
c0103eab	obj/kernel.asm	/^c0103eab:	c7 44 24 0c 20 c7 10 	movl   $0xc010c720,0xc(%esp)$/;"	l
c0103eb2	obj/kernel.asm	/^c0103eb2:	c0 $/;"	l
c0103eb3	obj/kernel.asm	/^c0103eb3:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103eba	obj/kernel.asm	/^c0103eba:	c0 $/;"	l
c0103ebb	obj/kernel.asm	/^c0103ebb:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
c0103ec2	obj/kernel.asm	/^c0103ec2:	00 $/;"	l
c0103ec3	obj/kernel.asm	/^c0103ec3:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103eca	obj/kernel.asm	/^c0103eca:	e8 06 cf ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103ecf	obj/kernel.asm	/^c0103ecf:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ed6	obj/kernel.asm	/^c0103ed6:	e8 6e 11 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0103edb	obj/kernel.asm	/^c0103edb:	85 c0                	test   %eax,%eax$/;"	l
c0103edd	obj/kernel.asm	/^c0103edd:	74 24                	je     c0103f03 <basic_check+0x4bb>$/;"	l
c0103edf	obj/kernel.asm	/^c0103edf:	c7 44 24 0c e6 c6 10 	movl   $0xc010c6e6,0xc(%esp)$/;"	l
c0103ee6	obj/kernel.asm	/^c0103ee6:	c0 $/;"	l
c0103ee7	obj/kernel.asm	/^c0103ee7:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103eee	obj/kernel.asm	/^c0103eee:	c0 $/;"	l
c0103eef	obj/kernel.asm	/^c0103eef:	c7 44 24 04 d1 00 00 	movl   $0xd1,0x4(%esp)$/;"	l
c0103ef6	obj/kernel.asm	/^c0103ef6:	00 $/;"	l
c0103ef7	obj/kernel.asm	/^c0103ef7:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103efe	obj/kernel.asm	/^c0103efe:	e8 d2 ce ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103f03	obj/kernel.asm	/^c0103f03:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c0103f08	obj/kernel.asm	/^c0103f08:	85 c0                	test   %eax,%eax$/;"	l
c0103f0a	obj/kernel.asm	/^c0103f0a:	74 24                	je     c0103f30 <basic_check+0x4e8>$/;"	l
c0103f0c	obj/kernel.asm	/^c0103f0c:	c7 44 24 0c 39 c7 10 	movl   $0xc010c739,0xc(%esp)$/;"	l
c0103f13	obj/kernel.asm	/^c0103f13:	c0 $/;"	l
c0103f14	obj/kernel.asm	/^c0103f14:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103f1b	obj/kernel.asm	/^c0103f1b:	c0 $/;"	l
c0103f1c	obj/kernel.asm	/^c0103f1c:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
c0103f23	obj/kernel.asm	/^c0103f23:	00 $/;"	l
c0103f24	obj/kernel.asm	/^c0103f24:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103f2b	obj/kernel.asm	/^c0103f2b:	e8 a5 ce ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103f30	obj/kernel.asm	/^c0103f30:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103f33	obj/kernel.asm	/^c0103f33:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103f36	obj/kernel.asm	/^c0103f36:	a3 b8 ef 19 c0       	mov    %eax,0xc019efb8$/;"	l
c0103f3b	obj/kernel.asm	/^c0103f3b:	89 15 bc ef 19 c0    	mov    %edx,0xc019efbc$/;"	l
c0103f41	obj/kernel.asm	/^c0103f41:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103f44	obj/kernel.asm	/^c0103f44:	a3 c0 ef 19 c0       	mov    %eax,0xc019efc0$/;"	l
c0103f49	obj/kernel.asm	/^c0103f49:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103f50	obj/kernel.asm	/^c0103f50:	00 $/;"	l
c0103f51	obj/kernel.asm	/^c0103f51:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103f54	obj/kernel.asm	/^c0103f54:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103f57	obj/kernel.asm	/^c0103f57:	e8 58 11 00 00       	call   c01050b4 <free_pages>$/;"	l
c0103f5c	obj/kernel.asm	/^c0103f5c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103f63	obj/kernel.asm	/^c0103f63:	00 $/;"	l
c0103f64	obj/kernel.asm	/^c0103f64:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103f67	obj/kernel.asm	/^c0103f67:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103f6a	obj/kernel.asm	/^c0103f6a:	e8 45 11 00 00       	call   c01050b4 <free_pages>$/;"	l
c0103f6f	obj/kernel.asm	/^c0103f6f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103f76	obj/kernel.asm	/^c0103f76:	00 $/;"	l
c0103f77	obj/kernel.asm	/^c0103f77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103f7a	obj/kernel.asm	/^c0103f7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103f7d	obj/kernel.asm	/^c0103f7d:	e8 32 11 00 00       	call   c01050b4 <free_pages>$/;"	l
c0103f82	obj/kernel.asm	/^c0103f82:	c9                   	leave  $/;"	l
c0103f83	obj/kernel.asm	/^c0103f83:	c3                   	ret    $/;"	l
c0103f84	obj/kernel.asm	/^c0103f84 <default_check>:$/;"	l
c0103f84	obj/kernel.asm	/^c0103f84:	55                   	push   %ebp$/;"	l
c0103f85	obj/kernel.asm	/^c0103f85:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f87	obj/kernel.asm	/^c0103f87:	53                   	push   %ebx$/;"	l
c0103f88	obj/kernel.asm	/^c0103f88:	81 ec 94 00 00 00    	sub    $0x94,%esp$/;"	l
c0103f8e	obj/kernel.asm	/^c0103f8e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0103f95	obj/kernel.asm	/^c0103f95:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0103f9c	obj/kernel.asm	/^c0103f9c:	c7 45 ec b8 ef 19 c0 	movl   $0xc019efb8,-0x14(%ebp)$/;"	l
c0103fa3	obj/kernel.asm	/^c0103fa3:	eb 6b                	jmp    c0104010 <default_check+0x8c>$/;"	l
c0103fa5	obj/kernel.asm	/^c0103fa5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103fa8	obj/kernel.asm	/^c0103fa8:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103fab	obj/kernel.asm	/^c0103fab:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103fae	obj/kernel.asm	/^c0103fae:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103fb1	obj/kernel.asm	/^c0103fb1:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103fb4	obj/kernel.asm	/^c0103fb4:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c0103fbb	obj/kernel.asm	/^c0103fbb:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0103fbe	obj/kernel.asm	/^c0103fbe:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103fc1	obj/kernel.asm	/^c0103fc1:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103fc4	obj/kernel.asm	/^c0103fc4:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0103fc7	obj/kernel.asm	/^c0103fc7:	19 c0                	sbb    %eax,%eax$/;"	l
c0103fc9	obj/kernel.asm	/^c0103fc9:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0103fcc	obj/kernel.asm	/^c0103fcc:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0103fd0	obj/kernel.asm	/^c0103fd0:	0f 95 c0             	setne  %al$/;"	l
c0103fd3	obj/kernel.asm	/^c0103fd3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103fd6	obj/kernel.asm	/^c0103fd6:	85 c0                	test   %eax,%eax$/;"	l
c0103fd8	obj/kernel.asm	/^c0103fd8:	75 24                	jne    c0103ffe <default_check+0x7a>$/;"	l
c0103fda	obj/kernel.asm	/^c0103fda:	c7 44 24 0c 46 c7 10 	movl   $0xc010c746,0xc(%esp)$/;"	l
c0103fe1	obj/kernel.asm	/^c0103fe1:	c0 $/;"	l
c0103fe2	obj/kernel.asm	/^c0103fe2:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0103fe9	obj/kernel.asm	/^c0103fe9:	c0 $/;"	l
c0103fea	obj/kernel.asm	/^c0103fea:	c7 44 24 04 e4 00 00 	movl   $0xe4,0x4(%esp)$/;"	l
c0103ff1	obj/kernel.asm	/^c0103ff1:	00 $/;"	l
c0103ff2	obj/kernel.asm	/^c0103ff2:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0103ff9	obj/kernel.asm	/^c0103ff9:	e8 d7 cd ff ff       	call   c0100dd5 <__panic>$/;"	l
c0103ffe	obj/kernel.asm	/^c0103ffe:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0104002	obj/kernel.asm	/^c0104002:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104005	obj/kernel.asm	/^c0104005:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0104008	obj/kernel.asm	/^c0104008:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010400b	obj/kernel.asm	/^c010400b:	01 d0                	add    %edx,%eax$/;"	l
c010400d	obj/kernel.asm	/^c010400d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104010	obj/kernel.asm	/^c0104010:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104013	obj/kernel.asm	/^c0104013:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0104016	obj/kernel.asm	/^c0104016:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0104019	obj/kernel.asm	/^c0104019:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010401c	obj/kernel.asm	/^c010401c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010401f	obj/kernel.asm	/^c010401f:	81 7d ec b8 ef 19 c0 	cmpl   $0xc019efb8,-0x14(%ebp)$/;"	l
c0104026	obj/kernel.asm	/^c0104026:	0f 85 79 ff ff ff    	jne    c0103fa5 <default_check+0x21>$/;"	l
c010402c	obj/kernel.asm	/^c010402c:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c010402f	obj/kernel.asm	/^c010402f:	e8 b2 10 00 00       	call   c01050e6 <nr_free_pages>$/;"	l
c0104034	obj/kernel.asm	/^c0104034:	39 c3                	cmp    %eax,%ebx$/;"	l
c0104036	obj/kernel.asm	/^c0104036:	74 24                	je     c010405c <default_check+0xd8>$/;"	l
c0104038	obj/kernel.asm	/^c0104038:	c7 44 24 0c 56 c7 10 	movl   $0xc010c756,0xc(%esp)$/;"	l
c010403f	obj/kernel.asm	/^c010403f:	c0 $/;"	l
c0104040	obj/kernel.asm	/^c0104040:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104047	obj/kernel.asm	/^c0104047:	c0 $/;"	l
c0104048	obj/kernel.asm	/^c0104048:	c7 44 24 04 e7 00 00 	movl   $0xe7,0x4(%esp)$/;"	l
c010404f	obj/kernel.asm	/^c010404f:	00 $/;"	l
c0104050	obj/kernel.asm	/^c0104050:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0104057	obj/kernel.asm	/^c0104057:	e8 79 cd ff ff       	call   c0100dd5 <__panic>$/;"	l
c010405c	obj/kernel.asm	/^c010405c:	e8 e7 f9 ff ff       	call   c0103a48 <basic_check>$/;"	l
c0104061	obj/kernel.asm	/^c0104061:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c0104068	obj/kernel.asm	/^c0104068:	e8 dc 0f 00 00       	call   c0105049 <alloc_pages>$/;"	l
c010406d	obj/kernel.asm	/^c010406d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104070	obj/kernel.asm	/^c0104070:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0104074	obj/kernel.asm	/^c0104074:	75 24                	jne    c010409a <default_check+0x116>$/;"	l
c0104076	obj/kernel.asm	/^c0104076:	c7 44 24 0c 6f c7 10 	movl   $0xc010c76f,0xc(%esp)$/;"	l
c010407d	obj/kernel.asm	/^c010407d:	c0 $/;"	l
c010407e	obj/kernel.asm	/^c010407e:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104085	obj/kernel.asm	/^c0104085:	c0 $/;"	l
c0104086	obj/kernel.asm	/^c0104086:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
c010408d	obj/kernel.asm	/^c010408d:	00 $/;"	l
c010408e	obj/kernel.asm	/^c010408e:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0104095	obj/kernel.asm	/^c0104095:	e8 3b cd ff ff       	call   c0100dd5 <__panic>$/;"	l
c010409a	obj/kernel.asm	/^c010409a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010409d	obj/kernel.asm	/^c010409d:	83 c0 04             	add    $0x4,%eax$/;"	l
c01040a0	obj/kernel.asm	/^c01040a0:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c01040a7	obj/kernel.asm	/^c01040a7:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01040aa	obj/kernel.asm	/^c01040aa:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01040ad	obj/kernel.asm	/^c01040ad:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c01040b0	obj/kernel.asm	/^c01040b0:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01040b3	obj/kernel.asm	/^c01040b3:	19 c0                	sbb    %eax,%eax$/;"	l
c01040b5	obj/kernel.asm	/^c01040b5:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01040b8	obj/kernel.asm	/^c01040b8:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c01040bc	obj/kernel.asm	/^c01040bc:	0f 95 c0             	setne  %al$/;"	l
c01040bf	obj/kernel.asm	/^c01040bf:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01040c2	obj/kernel.asm	/^c01040c2:	85 c0                	test   %eax,%eax$/;"	l
c01040c4	obj/kernel.asm	/^c01040c4:	74 24                	je     c01040ea <default_check+0x166>$/;"	l
c01040c6	obj/kernel.asm	/^c01040c6:	c7 44 24 0c 7a c7 10 	movl   $0xc010c77a,0xc(%esp)$/;"	l
c01040cd	obj/kernel.asm	/^c01040cd:	c0 $/;"	l
c01040ce	obj/kernel.asm	/^c01040ce:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01040d5	obj/kernel.asm	/^c01040d5:	c0 $/;"	l
c01040d6	obj/kernel.asm	/^c01040d6:	c7 44 24 04 ed 00 00 	movl   $0xed,0x4(%esp)$/;"	l
c01040dd	obj/kernel.asm	/^c01040dd:	00 $/;"	l
c01040de	obj/kernel.asm	/^c01040de:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01040e5	obj/kernel.asm	/^c01040e5:	e8 eb cc ff ff       	call   c0100dd5 <__panic>$/;"	l
c01040ea	obj/kernel.asm	/^c01040ea:	a1 b8 ef 19 c0       	mov    0xc019efb8,%eax$/;"	l
c01040ef	obj/kernel.asm	/^c01040ef:	8b 15 bc ef 19 c0    	mov    0xc019efbc,%edx$/;"	l
c01040f5	obj/kernel.asm	/^c01040f5:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c01040f8	obj/kernel.asm	/^c01040f8:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c01040fb	obj/kernel.asm	/^c01040fb:	c7 45 b4 b8 ef 19 c0 	movl   $0xc019efb8,-0x4c(%ebp)$/;"	l
c0104102	obj/kernel.asm	/^c0104102:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0104105	obj/kernel.asm	/^c0104105:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0104108	obj/kernel.asm	/^c0104108:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010410b	obj/kernel.asm	/^c010410b:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010410e	obj/kernel.asm	/^c010410e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104111	obj/kernel.asm	/^c0104111:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0104114	obj/kernel.asm	/^c0104114:	89 10                	mov    %edx,(%eax)$/;"	l
c0104116	obj/kernel.asm	/^c0104116:	c7 45 b0 b8 ef 19 c0 	movl   $0xc019efb8,-0x50(%ebp)$/;"	l
c010411d	obj/kernel.asm	/^c010411d:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0104120	obj/kernel.asm	/^c0104120:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104123	obj/kernel.asm	/^c0104123:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c0104126	obj/kernel.asm	/^c0104126:	0f 94 c0             	sete   %al$/;"	l
c0104129	obj/kernel.asm	/^c0104129:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010412c	obj/kernel.asm	/^c010412c:	85 c0                	test   %eax,%eax$/;"	l
c010412e	obj/kernel.asm	/^c010412e:	75 24                	jne    c0104154 <default_check+0x1d0>$/;"	l
c0104130	obj/kernel.asm	/^c0104130:	c7 44 24 0c cf c6 10 	movl   $0xc010c6cf,0xc(%esp)$/;"	l
c0104137	obj/kernel.asm	/^c0104137:	c0 $/;"	l
c0104138	obj/kernel.asm	/^c0104138:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c010413f	obj/kernel.asm	/^c010413f:	c0 $/;"	l
c0104140	obj/kernel.asm	/^c0104140:	c7 44 24 04 f1 00 00 	movl   $0xf1,0x4(%esp)$/;"	l
c0104147	obj/kernel.asm	/^c0104147:	00 $/;"	l
c0104148	obj/kernel.asm	/^c0104148:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c010414f	obj/kernel.asm	/^c010414f:	e8 81 cc ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104154	obj/kernel.asm	/^c0104154:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010415b	obj/kernel.asm	/^c010415b:	e8 e9 0e 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0104160	obj/kernel.asm	/^c0104160:	85 c0                	test   %eax,%eax$/;"	l
c0104162	obj/kernel.asm	/^c0104162:	74 24                	je     c0104188 <default_check+0x204>$/;"	l
c0104164	obj/kernel.asm	/^c0104164:	c7 44 24 0c e6 c6 10 	movl   $0xc010c6e6,0xc(%esp)$/;"	l
c010416b	obj/kernel.asm	/^c010416b:	c0 $/;"	l
c010416c	obj/kernel.asm	/^c010416c:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104173	obj/kernel.asm	/^c0104173:	c0 $/;"	l
c0104174	obj/kernel.asm	/^c0104174:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c010417b	obj/kernel.asm	/^c010417b:	00 $/;"	l
c010417c	obj/kernel.asm	/^c010417c:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0104183	obj/kernel.asm	/^c0104183:	e8 4d cc ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104188	obj/kernel.asm	/^c0104188:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c010418d	obj/kernel.asm	/^c010418d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104190	obj/kernel.asm	/^c0104190:	c7 05 c0 ef 19 c0 00 	movl   $0x0,0xc019efc0$/;"	l
c0104197	obj/kernel.asm	/^c0104197:	00 00 00 $/;"	l
c010419a	obj/kernel.asm	/^c010419a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010419d	obj/kernel.asm	/^c010419d:	83 c0 40             	add    $0x40,%eax$/;"	l
c01041a0	obj/kernel.asm	/^c01041a0:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c01041a7	obj/kernel.asm	/^c01041a7:	00 $/;"	l
c01041a8	obj/kernel.asm	/^c01041a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01041ab	obj/kernel.asm	/^c01041ab:	e8 04 0f 00 00       	call   c01050b4 <free_pages>$/;"	l
c01041b0	obj/kernel.asm	/^c01041b0:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c01041b7	obj/kernel.asm	/^c01041b7:	e8 8d 0e 00 00       	call   c0105049 <alloc_pages>$/;"	l
c01041bc	obj/kernel.asm	/^c01041bc:	85 c0                	test   %eax,%eax$/;"	l
c01041be	obj/kernel.asm	/^c01041be:	74 24                	je     c01041e4 <default_check+0x260>$/;"	l
c01041c0	obj/kernel.asm	/^c01041c0:	c7 44 24 0c 8c c7 10 	movl   $0xc010c78c,0xc(%esp)$/;"	l
c01041c7	obj/kernel.asm	/^c01041c7:	c0 $/;"	l
c01041c8	obj/kernel.asm	/^c01041c8:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01041cf	obj/kernel.asm	/^c01041cf:	c0 $/;"	l
c01041d0	obj/kernel.asm	/^c01041d0:	c7 44 24 04 f8 00 00 	movl   $0xf8,0x4(%esp)$/;"	l
c01041d7	obj/kernel.asm	/^c01041d7:	00 $/;"	l
c01041d8	obj/kernel.asm	/^c01041d8:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01041df	obj/kernel.asm	/^c01041df:	e8 f1 cb ff ff       	call   c0100dd5 <__panic>$/;"	l
c01041e4	obj/kernel.asm	/^c01041e4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01041e7	obj/kernel.asm	/^c01041e7:	83 c0 40             	add    $0x40,%eax$/;"	l
c01041ea	obj/kernel.asm	/^c01041ea:	83 c0 04             	add    $0x4,%eax$/;"	l
c01041ed	obj/kernel.asm	/^c01041ed:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c01041f4	obj/kernel.asm	/^c01041f4:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c01041f7	obj/kernel.asm	/^c01041f7:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01041fa	obj/kernel.asm	/^c01041fa:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c01041fd	obj/kernel.asm	/^c01041fd:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0104200	obj/kernel.asm	/^c0104200:	19 c0                	sbb    %eax,%eax$/;"	l
c0104202	obj/kernel.asm	/^c0104202:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0104205	obj/kernel.asm	/^c0104205:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c0104209	obj/kernel.asm	/^c0104209:	0f 95 c0             	setne  %al$/;"	l
c010420c	obj/kernel.asm	/^c010420c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010420f	obj/kernel.asm	/^c010420f:	85 c0                	test   %eax,%eax$/;"	l
c0104211	obj/kernel.asm	/^c0104211:	74 0e                	je     c0104221 <default_check+0x29d>$/;"	l
c0104213	obj/kernel.asm	/^c0104213:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104216	obj/kernel.asm	/^c0104216:	83 c0 40             	add    $0x40,%eax$/;"	l
c0104219	obj/kernel.asm	/^c0104219:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010421c	obj/kernel.asm	/^c010421c:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010421f	obj/kernel.asm	/^c010421f:	74 24                	je     c0104245 <default_check+0x2c1>$/;"	l
c0104221	obj/kernel.asm	/^c0104221:	c7 44 24 0c a4 c7 10 	movl   $0xc010c7a4,0xc(%esp)$/;"	l
c0104228	obj/kernel.asm	/^c0104228:	c0 $/;"	l
c0104229	obj/kernel.asm	/^c0104229:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104230	obj/kernel.asm	/^c0104230:	c0 $/;"	l
c0104231	obj/kernel.asm	/^c0104231:	c7 44 24 04 f9 00 00 	movl   $0xf9,0x4(%esp)$/;"	l
c0104238	obj/kernel.asm	/^c0104238:	00 $/;"	l
c0104239	obj/kernel.asm	/^c0104239:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0104240	obj/kernel.asm	/^c0104240:	e8 90 cb ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104245	obj/kernel.asm	/^c0104245:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)$/;"	l
c010424c	obj/kernel.asm	/^c010424c:	e8 f8 0d 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0104251	obj/kernel.asm	/^c0104251:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0104254	obj/kernel.asm	/^c0104254:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0104258	obj/kernel.asm	/^c0104258:	75 24                	jne    c010427e <default_check+0x2fa>$/;"	l
c010425a	obj/kernel.asm	/^c010425a:	c7 44 24 0c d0 c7 10 	movl   $0xc010c7d0,0xc(%esp)$/;"	l
c0104261	obj/kernel.asm	/^c0104261:	c0 $/;"	l
c0104262	obj/kernel.asm	/^c0104262:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104269	obj/kernel.asm	/^c0104269:	c0 $/;"	l
c010426a	obj/kernel.asm	/^c010426a:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c0104271	obj/kernel.asm	/^c0104271:	00 $/;"	l
c0104272	obj/kernel.asm	/^c0104272:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0104279	obj/kernel.asm	/^c0104279:	e8 57 cb ff ff       	call   c0100dd5 <__panic>$/;"	l
c010427e	obj/kernel.asm	/^c010427e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104285	obj/kernel.asm	/^c0104285:	e8 bf 0d 00 00       	call   c0105049 <alloc_pages>$/;"	l
c010428a	obj/kernel.asm	/^c010428a:	85 c0                	test   %eax,%eax$/;"	l
c010428c	obj/kernel.asm	/^c010428c:	74 24                	je     c01042b2 <default_check+0x32e>$/;"	l
c010428e	obj/kernel.asm	/^c010428e:	c7 44 24 0c e6 c6 10 	movl   $0xc010c6e6,0xc(%esp)$/;"	l
c0104295	obj/kernel.asm	/^c0104295:	c0 $/;"	l
c0104296	obj/kernel.asm	/^c0104296:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c010429d	obj/kernel.asm	/^c010429d:	c0 $/;"	l
c010429e	obj/kernel.asm	/^c010429e:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c01042a5	obj/kernel.asm	/^c01042a5:	00 $/;"	l
c01042a6	obj/kernel.asm	/^c01042a6:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01042ad	obj/kernel.asm	/^c01042ad:	e8 23 cb ff ff       	call   c0100dd5 <__panic>$/;"	l
c01042b2	obj/kernel.asm	/^c01042b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01042b5	obj/kernel.asm	/^c01042b5:	83 c0 40             	add    $0x40,%eax$/;"	l
c01042b8	obj/kernel.asm	/^c01042b8:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01042bb	obj/kernel.asm	/^c01042bb:	74 24                	je     c01042e1 <default_check+0x35d>$/;"	l
c01042bd	obj/kernel.asm	/^c01042bd:	c7 44 24 0c ee c7 10 	movl   $0xc010c7ee,0xc(%esp)$/;"	l
c01042c4	obj/kernel.asm	/^c01042c4:	c0 $/;"	l
c01042c5	obj/kernel.asm	/^c01042c5:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01042cc	obj/kernel.asm	/^c01042cc:	c0 $/;"	l
c01042cd	obj/kernel.asm	/^c01042cd:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c01042d4	obj/kernel.asm	/^c01042d4:	00 $/;"	l
c01042d5	obj/kernel.asm	/^c01042d5:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01042dc	obj/kernel.asm	/^c01042dc:	e8 f4 ca ff ff       	call   c0100dd5 <__panic>$/;"	l
c01042e1	obj/kernel.asm	/^c01042e1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01042e4	obj/kernel.asm	/^c01042e4:	83 c0 20             	add    $0x20,%eax$/;"	l
c01042e7	obj/kernel.asm	/^c01042e7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01042ea	obj/kernel.asm	/^c01042ea:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01042f1	obj/kernel.asm	/^c01042f1:	00 $/;"	l
c01042f2	obj/kernel.asm	/^c01042f2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01042f5	obj/kernel.asm	/^c01042f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01042f8	obj/kernel.asm	/^c01042f8:	e8 b7 0d 00 00       	call   c01050b4 <free_pages>$/;"	l
c01042fd	obj/kernel.asm	/^c01042fd:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c0104304	obj/kernel.asm	/^c0104304:	00 $/;"	l
c0104305	obj/kernel.asm	/^c0104305:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0104308	obj/kernel.asm	/^c0104308:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010430b	obj/kernel.asm	/^c010430b:	e8 a4 0d 00 00       	call   c01050b4 <free_pages>$/;"	l
c0104310	obj/kernel.asm	/^c0104310:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104313	obj/kernel.asm	/^c0104313:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104316	obj/kernel.asm	/^c0104316:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c010431d	obj/kernel.asm	/^c010431d:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c0104320	obj/kernel.asm	/^c0104320:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0104323	obj/kernel.asm	/^c0104323:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0104326	obj/kernel.asm	/^c0104326:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0104329	obj/kernel.asm	/^c0104329:	19 c0                	sbb    %eax,%eax$/;"	l
c010432b	obj/kernel.asm	/^c010432b:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010432e	obj/kernel.asm	/^c010432e:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c0104332	obj/kernel.asm	/^c0104332:	0f 95 c0             	setne  %al$/;"	l
c0104335	obj/kernel.asm	/^c0104335:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0104338	obj/kernel.asm	/^c0104338:	85 c0                	test   %eax,%eax$/;"	l
c010433a	obj/kernel.asm	/^c010433a:	74 0b                	je     c0104347 <default_check+0x3c3>$/;"	l
c010433c	obj/kernel.asm	/^c010433c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010433f	obj/kernel.asm	/^c010433f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104342	obj/kernel.asm	/^c0104342:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104345	obj/kernel.asm	/^c0104345:	74 24                	je     c010436b <default_check+0x3e7>$/;"	l
c0104347	obj/kernel.asm	/^c0104347:	c7 44 24 0c fc c7 10 	movl   $0xc010c7fc,0xc(%esp)$/;"	l
c010434e	obj/kernel.asm	/^c010434e:	c0 $/;"	l
c010434f	obj/kernel.asm	/^c010434f:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104356	obj/kernel.asm	/^c0104356:	c0 $/;"	l
c0104357	obj/kernel.asm	/^c0104357:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c010435e	obj/kernel.asm	/^c010435e:	00 $/;"	l
c010435f	obj/kernel.asm	/^c010435f:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0104366	obj/kernel.asm	/^c0104366:	e8 6a ca ff ff       	call   c0100dd5 <__panic>$/;"	l
c010436b	obj/kernel.asm	/^c010436b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010436e	obj/kernel.asm	/^c010436e:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104371	obj/kernel.asm	/^c0104371:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c0104378	obj/kernel.asm	/^c0104378:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c010437b	obj/kernel.asm	/^c010437b:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c010437e	obj/kernel.asm	/^c010437e:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0104381	obj/kernel.asm	/^c0104381:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0104384	obj/kernel.asm	/^c0104384:	19 c0                	sbb    %eax,%eax$/;"	l
c0104386	obj/kernel.asm	/^c0104386:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0104389	obj/kernel.asm	/^c0104389:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c010438d	obj/kernel.asm	/^c010438d:	0f 95 c0             	setne  %al$/;"	l
c0104390	obj/kernel.asm	/^c0104390:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0104393	obj/kernel.asm	/^c0104393:	85 c0                	test   %eax,%eax$/;"	l
c0104395	obj/kernel.asm	/^c0104395:	74 0b                	je     c01043a2 <default_check+0x41e>$/;"	l
c0104397	obj/kernel.asm	/^c0104397:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010439a	obj/kernel.asm	/^c010439a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010439d	obj/kernel.asm	/^c010439d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01043a0	obj/kernel.asm	/^c01043a0:	74 24                	je     c01043c6 <default_check+0x442>$/;"	l
c01043a2	obj/kernel.asm	/^c01043a2:	c7 44 24 0c 24 c8 10 	movl   $0xc010c824,0xc(%esp)$/;"	l
c01043a9	obj/kernel.asm	/^c01043a9:	c0 $/;"	l
c01043aa	obj/kernel.asm	/^c01043aa:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01043b1	obj/kernel.asm	/^c01043b1:	c0 $/;"	l
c01043b2	obj/kernel.asm	/^c01043b2:	c7 44 24 04 02 01 00 	movl   $0x102,0x4(%esp)$/;"	l
c01043b9	obj/kernel.asm	/^c01043b9:	00 $/;"	l
c01043ba	obj/kernel.asm	/^c01043ba:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01043c1	obj/kernel.asm	/^c01043c1:	e8 0f ca ff ff       	call   c0100dd5 <__panic>$/;"	l
c01043c6	obj/kernel.asm	/^c01043c6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01043cd	obj/kernel.asm	/^c01043cd:	e8 77 0c 00 00       	call   c0105049 <alloc_pages>$/;"	l
c01043d2	obj/kernel.asm	/^c01043d2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01043d5	obj/kernel.asm	/^c01043d5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01043d8	obj/kernel.asm	/^c01043d8:	83 e8 20             	sub    $0x20,%eax$/;"	l
c01043db	obj/kernel.asm	/^c01043db:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01043de	obj/kernel.asm	/^c01043de:	74 24                	je     c0104404 <default_check+0x480>$/;"	l
c01043e0	obj/kernel.asm	/^c01043e0:	c7 44 24 0c 4a c8 10 	movl   $0xc010c84a,0xc(%esp)$/;"	l
c01043e7	obj/kernel.asm	/^c01043e7:	c0 $/;"	l
c01043e8	obj/kernel.asm	/^c01043e8:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01043ef	obj/kernel.asm	/^c01043ef:	c0 $/;"	l
c01043f0	obj/kernel.asm	/^c01043f0:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)$/;"	l
c01043f7	obj/kernel.asm	/^c01043f7:	00 $/;"	l
c01043f8	obj/kernel.asm	/^c01043f8:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01043ff	obj/kernel.asm	/^c01043ff:	e8 d1 c9 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104404	obj/kernel.asm	/^c0104404:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010440b	obj/kernel.asm	/^c010440b:	00 $/;"	l
c010440c	obj/kernel.asm	/^c010440c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010440f	obj/kernel.asm	/^c010440f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104412	obj/kernel.asm	/^c0104412:	e8 9d 0c 00 00       	call   c01050b4 <free_pages>$/;"	l
c0104417	obj/kernel.asm	/^c0104417:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c010441e	obj/kernel.asm	/^c010441e:	e8 26 0c 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0104423	obj/kernel.asm	/^c0104423:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104426	obj/kernel.asm	/^c0104426:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0104429	obj/kernel.asm	/^c0104429:	83 c0 20             	add    $0x20,%eax$/;"	l
c010442c	obj/kernel.asm	/^c010442c:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010442f	obj/kernel.asm	/^c010442f:	74 24                	je     c0104455 <default_check+0x4d1>$/;"	l
c0104431	obj/kernel.asm	/^c0104431:	c7 44 24 0c 68 c8 10 	movl   $0xc010c868,0xc(%esp)$/;"	l
c0104438	obj/kernel.asm	/^c0104438:	c0 $/;"	l
c0104439	obj/kernel.asm	/^c0104439:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104440	obj/kernel.asm	/^c0104440:	c0 $/;"	l
c0104441	obj/kernel.asm	/^c0104441:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)$/;"	l
c0104448	obj/kernel.asm	/^c0104448:	00 $/;"	l
c0104449	obj/kernel.asm	/^c0104449:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0104450	obj/kernel.asm	/^c0104450:	e8 80 c9 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104455	obj/kernel.asm	/^c0104455:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c010445c	obj/kernel.asm	/^c010445c:	00 $/;"	l
c010445d	obj/kernel.asm	/^c010445d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104460	obj/kernel.asm	/^c0104460:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104463	obj/kernel.asm	/^c0104463:	e8 4c 0c 00 00       	call   c01050b4 <free_pages>$/;"	l
c0104468	obj/kernel.asm	/^c0104468:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010446f	obj/kernel.asm	/^c010446f:	00 $/;"	l
c0104470	obj/kernel.asm	/^c0104470:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0104473	obj/kernel.asm	/^c0104473:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104476	obj/kernel.asm	/^c0104476:	e8 39 0c 00 00       	call   c01050b4 <free_pages>$/;"	l
c010447b	obj/kernel.asm	/^c010447b:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c0104482	obj/kernel.asm	/^c0104482:	e8 c2 0b 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0104487	obj/kernel.asm	/^c0104487:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010448a	obj/kernel.asm	/^c010448a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010448e	obj/kernel.asm	/^c010448e:	75 24                	jne    c01044b4 <default_check+0x530>$/;"	l
c0104490	obj/kernel.asm	/^c0104490:	c7 44 24 0c 88 c8 10 	movl   $0xc010c888,0xc(%esp)$/;"	l
c0104497	obj/kernel.asm	/^c0104497:	c0 $/;"	l
c0104498	obj/kernel.asm	/^c0104498:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c010449f	obj/kernel.asm	/^c010449f:	c0 $/;"	l
c01044a0	obj/kernel.asm	/^c01044a0:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
c01044a7	obj/kernel.asm	/^c01044a7:	00 $/;"	l
c01044a8	obj/kernel.asm	/^c01044a8:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01044af	obj/kernel.asm	/^c01044af:	e8 21 c9 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01044b4	obj/kernel.asm	/^c01044b4:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01044bb	obj/kernel.asm	/^c01044bb:	e8 89 0b 00 00       	call   c0105049 <alloc_pages>$/;"	l
c01044c0	obj/kernel.asm	/^c01044c0:	85 c0                	test   %eax,%eax$/;"	l
c01044c2	obj/kernel.asm	/^c01044c2:	74 24                	je     c01044e8 <default_check+0x564>$/;"	l
c01044c4	obj/kernel.asm	/^c01044c4:	c7 44 24 0c e6 c6 10 	movl   $0xc010c6e6,0xc(%esp)$/;"	l
c01044cb	obj/kernel.asm	/^c01044cb:	c0 $/;"	l
c01044cc	obj/kernel.asm	/^c01044cc:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01044d3	obj/kernel.asm	/^c01044d3:	c0 $/;"	l
c01044d4	obj/kernel.asm	/^c01044d4:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
c01044db	obj/kernel.asm	/^c01044db:	00 $/;"	l
c01044dc	obj/kernel.asm	/^c01044dc:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01044e3	obj/kernel.asm	/^c01044e3:	e8 ed c8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01044e8	obj/kernel.asm	/^c01044e8:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c01044ed	obj/kernel.asm	/^c01044ed:	85 c0                	test   %eax,%eax$/;"	l
c01044ef	obj/kernel.asm	/^c01044ef:	74 24                	je     c0104515 <default_check+0x591>$/;"	l
c01044f1	obj/kernel.asm	/^c01044f1:	c7 44 24 0c 39 c7 10 	movl   $0xc010c739,0xc(%esp)$/;"	l
c01044f8	obj/kernel.asm	/^c01044f8:	c0 $/;"	l
c01044f9	obj/kernel.asm	/^c01044f9:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104500	obj/kernel.asm	/^c0104500:	c0 $/;"	l
c0104501	obj/kernel.asm	/^c0104501:	c7 44 24 04 0e 01 00 	movl   $0x10e,0x4(%esp)$/;"	l
c0104508	obj/kernel.asm	/^c0104508:	00 $/;"	l
c0104509	obj/kernel.asm	/^c0104509:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c0104510	obj/kernel.asm	/^c0104510:	e8 c0 c8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104515	obj/kernel.asm	/^c0104515:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0104518	obj/kernel.asm	/^c0104518:	a3 c0 ef 19 c0       	mov    %eax,0xc019efc0$/;"	l
c010451d	obj/kernel.asm	/^c010451d:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0104520	obj/kernel.asm	/^c0104520:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0104523	obj/kernel.asm	/^c0104523:	a3 b8 ef 19 c0       	mov    %eax,0xc019efb8$/;"	l
c0104528	obj/kernel.asm	/^c0104528:	89 15 bc ef 19 c0    	mov    %edx,0xc019efbc$/;"	l
c010452e	obj/kernel.asm	/^c010452e:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c0104535	obj/kernel.asm	/^c0104535:	00 $/;"	l
c0104536	obj/kernel.asm	/^c0104536:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104539	obj/kernel.asm	/^c0104539:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010453c	obj/kernel.asm	/^c010453c:	e8 73 0b 00 00       	call   c01050b4 <free_pages>$/;"	l
c0104541	obj/kernel.asm	/^c0104541:	c7 45 ec b8 ef 19 c0 	movl   $0xc019efb8,-0x14(%ebp)$/;"	l
c0104548	obj/kernel.asm	/^c0104548:	eb 1d                	jmp    c0104567 <default_check+0x5e3>$/;"	l
c010454a	obj/kernel.asm	/^c010454a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010454d	obj/kernel.asm	/^c010454d:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0104550	obj/kernel.asm	/^c0104550:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0104553	obj/kernel.asm	/^c0104553:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0104557	obj/kernel.asm	/^c0104557:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010455a	obj/kernel.asm	/^c010455a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010455d	obj/kernel.asm	/^c010455d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104560	obj/kernel.asm	/^c0104560:	29 c2                	sub    %eax,%edx$/;"	l
c0104562	obj/kernel.asm	/^c0104562:	89 d0                	mov    %edx,%eax$/;"	l
c0104564	obj/kernel.asm	/^c0104564:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104567	obj/kernel.asm	/^c0104567:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010456a	obj/kernel.asm	/^c010456a:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c010456d	obj/kernel.asm	/^c010456d:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0104570	obj/kernel.asm	/^c0104570:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104573	obj/kernel.asm	/^c0104573:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104576	obj/kernel.asm	/^c0104576:	81 7d ec b8 ef 19 c0 	cmpl   $0xc019efb8,-0x14(%ebp)$/;"	l
c010457d	obj/kernel.asm	/^c010457d:	75 cb                	jne    c010454a <default_check+0x5c6>$/;"	l
c010457f	obj/kernel.asm	/^c010457f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104583	obj/kernel.asm	/^c0104583:	74 24                	je     c01045a9 <default_check+0x625>$/;"	l
c0104585	obj/kernel.asm	/^c0104585:	c7 44 24 0c a6 c8 10 	movl   $0xc010c8a6,0xc(%esp)$/;"	l
c010458c	obj/kernel.asm	/^c010458c:	c0 $/;"	l
c010458d	obj/kernel.asm	/^c010458d:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c0104594	obj/kernel.asm	/^c0104594:	c0 $/;"	l
c0104595	obj/kernel.asm	/^c0104595:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
c010459c	obj/kernel.asm	/^c010459c:	00 $/;"	l
c010459d	obj/kernel.asm	/^c010459d:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01045a4	obj/kernel.asm	/^c01045a4:	e8 2c c8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01045a9	obj/kernel.asm	/^c01045a9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01045ad	obj/kernel.asm	/^c01045ad:	74 24                	je     c01045d3 <default_check+0x64f>$/;"	l
c01045af	obj/kernel.asm	/^c01045af:	c7 44 24 0c b1 c8 10 	movl   $0xc010c8b1,0xc(%esp)$/;"	l
c01045b6	obj/kernel.asm	/^c01045b6:	c0 $/;"	l
c01045b7	obj/kernel.asm	/^c01045b7:	c7 44 24 08 76 c5 10 	movl   $0xc010c576,0x8(%esp)$/;"	l
c01045be	obj/kernel.asm	/^c01045be:	c0 $/;"	l
c01045bf	obj/kernel.asm	/^c01045bf:	c7 44 24 04 1a 01 00 	movl   $0x11a,0x4(%esp)$/;"	l
c01045c6	obj/kernel.asm	/^c01045c6:	00 $/;"	l
c01045c7	obj/kernel.asm	/^c01045c7:	c7 04 24 8b c5 10 c0 	movl   $0xc010c58b,(%esp)$/;"	l
c01045ce	obj/kernel.asm	/^c01045ce:	e8 02 c8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01045d3	obj/kernel.asm	/^c01045d3:	81 c4 94 00 00 00    	add    $0x94,%esp$/;"	l
c01045d9	obj/kernel.asm	/^c01045d9:	5b                   	pop    %ebx$/;"	l
c01045da	obj/kernel.asm	/^c01045da:	5d                   	pop    %ebp$/;"	l
c01045db	obj/kernel.asm	/^c01045db:	c3                   	ret    $/;"	l
c01045dc	obj/kernel.asm	/^c01045dc <__intr_save>:$/;"	l
c01045dc	obj/kernel.asm	/^c01045dc:	55                   	push   %ebp$/;"	l
c01045dd	obj/kernel.asm	/^c01045dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01045df	obj/kernel.asm	/^c01045df:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01045e2	obj/kernel.asm	/^c01045e2:	9c                   	pushf  $/;"	l
c01045e3	obj/kernel.asm	/^c01045e3:	58                   	pop    %eax$/;"	l
c01045e4	obj/kernel.asm	/^c01045e4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01045e7	obj/kernel.asm	/^c01045e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01045ea	obj/kernel.asm	/^c01045ea:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01045ef	obj/kernel.asm	/^c01045ef:	85 c0                	test   %eax,%eax$/;"	l
c01045f1	obj/kernel.asm	/^c01045f1:	74 0c                	je     c01045ff <__intr_save+0x23>$/;"	l
c01045f3	obj/kernel.asm	/^c01045f3:	e8 35 da ff ff       	call   c010202d <intr_disable>$/;"	l
c01045f8	obj/kernel.asm	/^c01045f8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01045fd	obj/kernel.asm	/^c01045fd:	eb 05                	jmp    c0104604 <__intr_save+0x28>$/;"	l
c01045ff	obj/kernel.asm	/^c01045ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104604	obj/kernel.asm	/^c0104604:	c9                   	leave  $/;"	l
c0104605	obj/kernel.asm	/^c0104605:	c3                   	ret    $/;"	l
c0104606	obj/kernel.asm	/^c0104606 <__intr_restore>:$/;"	l
c0104606	obj/kernel.asm	/^c0104606:	55                   	push   %ebp$/;"	l
c0104607	obj/kernel.asm	/^c0104607:	89 e5                	mov    %esp,%ebp$/;"	l
c0104609	obj/kernel.asm	/^c0104609:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010460c	obj/kernel.asm	/^c010460c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104610	obj/kernel.asm	/^c0104610:	74 05                	je     c0104617 <__intr_restore+0x11>$/;"	l
c0104612	obj/kernel.asm	/^c0104612:	e8 10 da ff ff       	call   c0102027 <intr_enable>$/;"	l
c0104617	obj/kernel.asm	/^c0104617:	c9                   	leave  $/;"	l
c0104618	obj/kernel.asm	/^c0104618:	c3                   	ret    $/;"	l
c0104619	obj/kernel.asm	/^c0104619 <page2ppn>:$/;"	l
c0104619	obj/kernel.asm	/^c0104619:	55                   	push   %ebp$/;"	l
c010461a	obj/kernel.asm	/^c010461a:	89 e5                	mov    %esp,%ebp$/;"	l
c010461c	obj/kernel.asm	/^c010461c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010461f	obj/kernel.asm	/^c010461f:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c0104624	obj/kernel.asm	/^c0104624:	29 c2                	sub    %eax,%edx$/;"	l
c0104626	obj/kernel.asm	/^c0104626:	89 d0                	mov    %edx,%eax$/;"	l
c0104628	obj/kernel.asm	/^c0104628:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010462b	obj/kernel.asm	/^c010462b:	5d                   	pop    %ebp$/;"	l
c010462c	obj/kernel.asm	/^c010462c:	c3                   	ret    $/;"	l
c010462d	obj/kernel.asm	/^c010462d <page2pa>:$/;"	l
c010462d	obj/kernel.asm	/^c010462d:	55                   	push   %ebp$/;"	l
c010462e	obj/kernel.asm	/^c010462e:	89 e5                	mov    %esp,%ebp$/;"	l
c0104630	obj/kernel.asm	/^c0104630:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104633	obj/kernel.asm	/^c0104633:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104636	obj/kernel.asm	/^c0104636:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104639	obj/kernel.asm	/^c0104639:	e8 db ff ff ff       	call   c0104619 <page2ppn>$/;"	l
c010463e	obj/kernel.asm	/^c010463e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0104641	obj/kernel.asm	/^c0104641:	c9                   	leave  $/;"	l
c0104642	obj/kernel.asm	/^c0104642:	c3                   	ret    $/;"	l
c0104643	obj/kernel.asm	/^c0104643 <pa2page>:$/;"	l
c0104643	obj/kernel.asm	/^c0104643:	55                   	push   %ebp$/;"	l
c0104644	obj/kernel.asm	/^c0104644:	89 e5                	mov    %esp,%ebp$/;"	l
c0104646	obj/kernel.asm	/^c0104646:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104649	obj/kernel.asm	/^c0104649:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010464c	obj/kernel.asm	/^c010464c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010464f	obj/kernel.asm	/^c010464f:	89 c2                	mov    %eax,%edx$/;"	l
c0104651	obj/kernel.asm	/^c0104651:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0104656	obj/kernel.asm	/^c0104656:	39 c2                	cmp    %eax,%edx$/;"	l
c0104658	obj/kernel.asm	/^c0104658:	72 1c                	jb     c0104676 <pa2page+0x33>$/;"	l
c010465a	obj/kernel.asm	/^c010465a:	c7 44 24 08 ec c8 10 	movl   $0xc010c8ec,0x8(%esp)$/;"	l
c0104661	obj/kernel.asm	/^c0104661:	c0 $/;"	l
c0104662	obj/kernel.asm	/^c0104662:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0104669	obj/kernel.asm	/^c0104669:	00 $/;"	l
c010466a	obj/kernel.asm	/^c010466a:	c7 04 24 0b c9 10 c0 	movl   $0xc010c90b,(%esp)$/;"	l
c0104671	obj/kernel.asm	/^c0104671:	e8 5f c7 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104676	obj/kernel.asm	/^c0104676:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c010467b	obj/kernel.asm	/^c010467b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010467e	obj/kernel.asm	/^c010467e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0104681	obj/kernel.asm	/^c0104681:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0104684	obj/kernel.asm	/^c0104684:	01 d0                	add    %edx,%eax$/;"	l
c0104686	obj/kernel.asm	/^c0104686:	c9                   	leave  $/;"	l
c0104687	obj/kernel.asm	/^c0104687:	c3                   	ret    $/;"	l
c0104688	obj/kernel.asm	/^c0104688 <page2kva>:$/;"	l
c0104688	obj/kernel.asm	/^c0104688:	55                   	push   %ebp$/;"	l
c0104689	obj/kernel.asm	/^c0104689:	89 e5                	mov    %esp,%ebp$/;"	l
c010468b	obj/kernel.asm	/^c010468b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010468e	obj/kernel.asm	/^c010468e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104691	obj/kernel.asm	/^c0104691:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104694	obj/kernel.asm	/^c0104694:	e8 94 ff ff ff       	call   c010462d <page2pa>$/;"	l
c0104699	obj/kernel.asm	/^c0104699:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010469c	obj/kernel.asm	/^c010469c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010469f	obj/kernel.asm	/^c010469f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01046a2	obj/kernel.asm	/^c01046a2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01046a5	obj/kernel.asm	/^c01046a5:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c01046aa	obj/kernel.asm	/^c01046aa:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01046ad	obj/kernel.asm	/^c01046ad:	72 23                	jb     c01046d2 <page2kva+0x4a>$/;"	l
c01046af	obj/kernel.asm	/^c01046af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046b2	obj/kernel.asm	/^c01046b2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01046b6	obj/kernel.asm	/^c01046b6:	c7 44 24 08 1c c9 10 	movl   $0xc010c91c,0x8(%esp)$/;"	l
c01046bd	obj/kernel.asm	/^c01046bd:	c0 $/;"	l
c01046be	obj/kernel.asm	/^c01046be:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c01046c5	obj/kernel.asm	/^c01046c5:	00 $/;"	l
c01046c6	obj/kernel.asm	/^c01046c6:	c7 04 24 0b c9 10 c0 	movl   $0xc010c90b,(%esp)$/;"	l
c01046cd	obj/kernel.asm	/^c01046cd:	e8 03 c7 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01046d2	obj/kernel.asm	/^c01046d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046d5	obj/kernel.asm	/^c01046d5:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01046da	obj/kernel.asm	/^c01046da:	c9                   	leave  $/;"	l
c01046db	obj/kernel.asm	/^c01046db:	c3                   	ret    $/;"	l
c01046dc	obj/kernel.asm	/^c01046dc <kva2page>:$/;"	l
c01046dc	obj/kernel.asm	/^c01046dc:	55                   	push   %ebp$/;"	l
c01046dd	obj/kernel.asm	/^c01046dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01046df	obj/kernel.asm	/^c01046df:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01046e2	obj/kernel.asm	/^c01046e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01046e5	obj/kernel.asm	/^c01046e5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046e8	obj/kernel.asm	/^c01046e8:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c01046ef	obj/kernel.asm	/^c01046ef:	77 23                	ja     c0104714 <kva2page+0x38>$/;"	l
c01046f1	obj/kernel.asm	/^c01046f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046f4	obj/kernel.asm	/^c01046f4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01046f8	obj/kernel.asm	/^c01046f8:	c7 44 24 08 40 c9 10 	movl   $0xc010c940,0x8(%esp)$/;"	l
c01046ff	obj/kernel.asm	/^c01046ff:	c0 $/;"	l
c0104700	obj/kernel.asm	/^c0104700:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0104707	obj/kernel.asm	/^c0104707:	00 $/;"	l
c0104708	obj/kernel.asm	/^c0104708:	c7 04 24 0b c9 10 c0 	movl   $0xc010c90b,(%esp)$/;"	l
c010470f	obj/kernel.asm	/^c010470f:	e8 c1 c6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104714	obj/kernel.asm	/^c0104714:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104717	obj/kernel.asm	/^c0104717:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010471c	obj/kernel.asm	/^c010471c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010471f	obj/kernel.asm	/^c010471f:	e8 1f ff ff ff       	call   c0104643 <pa2page>$/;"	l
c0104724	obj/kernel.asm	/^c0104724:	c9                   	leave  $/;"	l
c0104725	obj/kernel.asm	/^c0104725:	c3                   	ret    $/;"	l
c0104726	obj/kernel.asm	/^c0104726 <__slob_get_free_pages>:$/;"	l
c0104726	obj/kernel.asm	/^c0104726:	55                   	push   %ebp$/;"	l
c0104727	obj/kernel.asm	/^c0104727:	89 e5                	mov    %esp,%ebp$/;"	l
c0104729	obj/kernel.asm	/^c0104729:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010472c	obj/kernel.asm	/^c010472c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010472f	obj/kernel.asm	/^c010472f:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0104734	obj/kernel.asm	/^c0104734:	89 c1                	mov    %eax,%ecx$/;"	l
c0104736	obj/kernel.asm	/^c0104736:	d3 e2                	shl    %cl,%edx$/;"	d
c0104738	obj/kernel.asm	/^c0104738:	89 d0                	mov    %edx,%eax$/;"	l
c010473a	obj/kernel.asm	/^c010473a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010473d	obj/kernel.asm	/^c010473d:	e8 07 09 00 00       	call   c0105049 <alloc_pages>$/;"	l
c0104742	obj/kernel.asm	/^c0104742:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104745	obj/kernel.asm	/^c0104745:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104749	obj/kernel.asm	/^c0104749:	75 07                	jne    c0104752 <__slob_get_free_pages+0x2c>$/;"	l
c010474b	obj/kernel.asm	/^c010474b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104750	obj/kernel.asm	/^c0104750:	eb 0b                	jmp    c010475d <__slob_get_free_pages+0x37>$/;"	l
c0104752	obj/kernel.asm	/^c0104752:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104755	obj/kernel.asm	/^c0104755:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104758	obj/kernel.asm	/^c0104758:	e8 2b ff ff ff       	call   c0104688 <page2kva>$/;"	l
c010475d	obj/kernel.asm	/^c010475d:	c9                   	leave  $/;"	l
c010475e	obj/kernel.asm	/^c010475e:	c3                   	ret    $/;"	l
c010475f	obj/kernel.asm	/^c010475f <__slob_free_pages>:$/;"	l
c010475f	obj/kernel.asm	/^c010475f:	55                   	push   %ebp$/;"	l
c0104760	obj/kernel.asm	/^c0104760:	89 e5                	mov    %esp,%ebp$/;"	l
c0104762	obj/kernel.asm	/^c0104762:	53                   	push   %ebx$/;"	l
c0104763	obj/kernel.asm	/^c0104763:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0104766	obj/kernel.asm	/^c0104766:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104769	obj/kernel.asm	/^c0104769:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c010476e	obj/kernel.asm	/^c010476e:	89 c1                	mov    %eax,%ecx$/;"	l
c0104770	obj/kernel.asm	/^c0104770:	d3 e2                	shl    %cl,%edx$/;"	d
c0104772	obj/kernel.asm	/^c0104772:	89 d0                	mov    %edx,%eax$/;"	l
c0104774	obj/kernel.asm	/^c0104774:	89 c3                	mov    %eax,%ebx$/;"	l
c0104776	obj/kernel.asm	/^c0104776:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104779	obj/kernel.asm	/^c0104779:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010477c	obj/kernel.asm	/^c010477c:	e8 5b ff ff ff       	call   c01046dc <kva2page>$/;"	l
c0104781	obj/kernel.asm	/^c0104781:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0104785	obj/kernel.asm	/^c0104785:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104788	obj/kernel.asm	/^c0104788:	e8 27 09 00 00       	call   c01050b4 <free_pages>$/;"	l
c010478d	obj/kernel.asm	/^c010478d:	83 c4 14             	add    $0x14,%esp$/;"	l
c0104790	obj/kernel.asm	/^c0104790:	5b                   	pop    %ebx$/;"	l
c0104791	obj/kernel.asm	/^c0104791:	5d                   	pop    %ebp$/;"	l
c0104792	obj/kernel.asm	/^c0104792:	c3                   	ret    $/;"	l
c0104793	obj/kernel.asm	/^c0104793 <slob_alloc>:$/;"	l
c0104793	obj/kernel.asm	/^c0104793:	55                   	push   %ebp$/;"	l
c0104794	obj/kernel.asm	/^c0104794:	89 e5                	mov    %esp,%ebp$/;"	l
c0104796	obj/kernel.asm	/^c0104796:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0104799	obj/kernel.asm	/^c0104799:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010479c	obj/kernel.asm	/^c010479c:	83 c0 08             	add    $0x8,%eax$/;"	l
c010479f	obj/kernel.asm	/^c010479f:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c01047a4	obj/kernel.asm	/^c01047a4:	76 24                	jbe    c01047ca <slob_alloc+0x37>$/;"	l
c01047a6	obj/kernel.asm	/^c01047a6:	c7 44 24 0c 64 c9 10 	movl   $0xc010c964,0xc(%esp)$/;"	l
c01047ad	obj/kernel.asm	/^c01047ad:	c0 $/;"	l
c01047ae	obj/kernel.asm	/^c01047ae:	c7 44 24 08 83 c9 10 	movl   $0xc010c983,0x8(%esp)$/;"	l
c01047b5	obj/kernel.asm	/^c01047b5:	c0 $/;"	l
c01047b6	obj/kernel.asm	/^c01047b6:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c01047bd	obj/kernel.asm	/^c01047bd:	00 $/;"	l
c01047be	obj/kernel.asm	/^c01047be:	c7 04 24 98 c9 10 c0 	movl   $0xc010c998,(%esp)$/;"	l
c01047c5	obj/kernel.asm	/^c01047c5:	e8 0b c6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01047ca	obj/kernel.asm	/^c01047ca:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01047d1	obj/kernel.asm	/^c01047d1:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c01047d8	obj/kernel.asm	/^c01047d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01047db	obj/kernel.asm	/^c01047db:	83 c0 07             	add    $0x7,%eax$/;"	l
c01047de	obj/kernel.asm	/^c01047de:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c01047e1	obj/kernel.asm	/^c01047e1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01047e4	obj/kernel.asm	/^c01047e4:	e8 f3 fd ff ff       	call   c01045dc <__intr_save>$/;"	l
c01047e9	obj/kernel.asm	/^c01047e9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01047ec	obj/kernel.asm	/^c01047ec:	a1 08 aa 12 c0       	mov    0xc012aa08,%eax$/;"	l
c01047f1	obj/kernel.asm	/^c01047f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01047f4	obj/kernel.asm	/^c01047f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01047f7	obj/kernel.asm	/^c01047f7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01047fa	obj/kernel.asm	/^c01047fa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01047fd	obj/kernel.asm	/^c01047fd:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104801	obj/kernel.asm	/^c0104801:	74 25                	je     c0104828 <slob_alloc+0x95>$/;"	l
c0104803	obj/kernel.asm	/^c0104803:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104806	obj/kernel.asm	/^c0104806:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104809	obj/kernel.asm	/^c0104809:	01 d0                	add    %edx,%eax$/;"	l
c010480b	obj/kernel.asm	/^c010480b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010480e	obj/kernel.asm	/^c010480e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104811	obj/kernel.asm	/^c0104811:	f7 d8                	neg    %eax$/;"	l
c0104813	obj/kernel.asm	/^c0104813:	21 d0                	and    %edx,%eax$/;"	l
c0104815	obj/kernel.asm	/^c0104815:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104818	obj/kernel.asm	/^c0104818:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010481b	obj/kernel.asm	/^c010481b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010481e	obj/kernel.asm	/^c010481e:	29 c2                	sub    %eax,%edx$/;"	l
c0104820	obj/kernel.asm	/^c0104820:	89 d0                	mov    %edx,%eax$/;"	l
c0104822	obj/kernel.asm	/^c0104822:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c0104825	obj/kernel.asm	/^c0104825:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104828	obj/kernel.asm	/^c0104828:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010482b	obj/kernel.asm	/^c010482b:	8b 00                	mov    (%eax),%eax$/;"	l
c010482d	obj/kernel.asm	/^c010482d:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0104830	obj/kernel.asm	/^c0104830:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0104833	obj/kernel.asm	/^c0104833:	01 ca                	add    %ecx,%edx$/;"	l
c0104835	obj/kernel.asm	/^c0104835:	39 d0                	cmp    %edx,%eax$/;"	l
c0104837	obj/kernel.asm	/^c0104837:	0f 8c aa 00 00 00    	jl     c01048e7 <slob_alloc+0x154>$/;"	l
c010483d	obj/kernel.asm	/^c010483d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0104841	obj/kernel.asm	/^c0104841:	74 38                	je     c010487b <slob_alloc+0xe8>$/;"	l
c0104843	obj/kernel.asm	/^c0104843:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104846	obj/kernel.asm	/^c0104846:	8b 00                	mov    (%eax),%eax$/;"	l
c0104848	obj/kernel.asm	/^c0104848:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c010484b	obj/kernel.asm	/^c010484b:	89 c2                	mov    %eax,%edx$/;"	l
c010484d	obj/kernel.asm	/^c010484d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104850	obj/kernel.asm	/^c0104850:	89 10                	mov    %edx,(%eax)$/;"	l
c0104852	obj/kernel.asm	/^c0104852:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104855	obj/kernel.asm	/^c0104855:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104858	obj/kernel.asm	/^c0104858:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010485b	obj/kernel.asm	/^c010485b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010485e	obj/kernel.asm	/^c010485e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104861	obj/kernel.asm	/^c0104861:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0104864	obj/kernel.asm	/^c0104864:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104867	obj/kernel.asm	/^c0104867:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010486a	obj/kernel.asm	/^c010486a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010486d	obj/kernel.asm	/^c010486d:	89 10                	mov    %edx,(%eax)$/;"	l
c010486f	obj/kernel.asm	/^c010486f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104872	obj/kernel.asm	/^c0104872:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104875	obj/kernel.asm	/^c0104875:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104878	obj/kernel.asm	/^c0104878:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010487b	obj/kernel.asm	/^c010487b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010487e	obj/kernel.asm	/^c010487e:	8b 00                	mov    (%eax),%eax$/;"	l
c0104880	obj/kernel.asm	/^c0104880:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0104883	obj/kernel.asm	/^c0104883:	75 0e                	jne    c0104893 <slob_alloc+0x100>$/;"	l
c0104885	obj/kernel.asm	/^c0104885:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104888	obj/kernel.asm	/^c0104888:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010488b	obj/kernel.asm	/^c010488b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010488e	obj/kernel.asm	/^c010488e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104891	obj/kernel.asm	/^c0104891:	eb 3c                	jmp    c01048cf <slob_alloc+0x13c>$/;"	l
c0104893	obj/kernel.asm	/^c0104893:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0104896	obj/kernel.asm	/^c0104896:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010489d	obj/kernel.asm	/^c010489d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048a0	obj/kernel.asm	/^c01048a0:	01 c2                	add    %eax,%edx$/;"	l
c01048a2	obj/kernel.asm	/^c01048a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01048a5	obj/kernel.asm	/^c01048a5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01048a8	obj/kernel.asm	/^c01048a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01048ab	obj/kernel.asm	/^c01048ab:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01048ae	obj/kernel.asm	/^c01048ae:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01048b1	obj/kernel.asm	/^c01048b1:	8b 12                	mov    (%edx),%edx$/;"	l
c01048b3	obj/kernel.asm	/^c01048b3:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c01048b6	obj/kernel.asm	/^c01048b6:	89 10                	mov    %edx,(%eax)$/;"	l
c01048b8	obj/kernel.asm	/^c01048b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01048bb	obj/kernel.asm	/^c01048bb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01048be	obj/kernel.asm	/^c01048be:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01048c1	obj/kernel.asm	/^c01048c1:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c01048c4	obj/kernel.asm	/^c01048c4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01048c7	obj/kernel.asm	/^c01048c7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048ca	obj/kernel.asm	/^c01048ca:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01048cd	obj/kernel.asm	/^c01048cd:	89 10                	mov    %edx,(%eax)$/;"	l
c01048cf	obj/kernel.asm	/^c01048cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01048d2	obj/kernel.asm	/^c01048d2:	a3 08 aa 12 c0       	mov    %eax,0xc012aa08$/;"	l
c01048d7	obj/kernel.asm	/^c01048d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01048da	obj/kernel.asm	/^c01048da:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01048dd	obj/kernel.asm	/^c01048dd:	e8 24 fd ff ff       	call   c0104606 <__intr_restore>$/;"	l
c01048e2	obj/kernel.asm	/^c01048e2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048e5	obj/kernel.asm	/^c01048e5:	eb 7f                	jmp    c0104966 <slob_alloc+0x1d3>$/;"	l
c01048e7	obj/kernel.asm	/^c01048e7:	a1 08 aa 12 c0       	mov    0xc012aa08,%eax$/;"	l
c01048ec	obj/kernel.asm	/^c01048ec:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01048ef	obj/kernel.asm	/^c01048ef:	75 61                	jne    c0104952 <slob_alloc+0x1bf>$/;"	l
c01048f1	obj/kernel.asm	/^c01048f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01048f4	obj/kernel.asm	/^c01048f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01048f7	obj/kernel.asm	/^c01048f7:	e8 0a fd ff ff       	call   c0104606 <__intr_restore>$/;"	l
c01048fc	obj/kernel.asm	/^c01048fc:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0104903	obj/kernel.asm	/^c0104903:	75 07                	jne    c010490c <slob_alloc+0x179>$/;"	l
c0104905	obj/kernel.asm	/^c0104905:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010490a	obj/kernel.asm	/^c010490a:	eb 5a                	jmp    c0104966 <slob_alloc+0x1d3>$/;"	l
c010490c	obj/kernel.asm	/^c010490c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104913	obj/kernel.asm	/^c0104913:	00 $/;"	l
c0104914	obj/kernel.asm	/^c0104914:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104917	obj/kernel.asm	/^c0104917:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010491a	obj/kernel.asm	/^c010491a:	e8 07 fe ff ff       	call   c0104726 <__slob_get_free_pages>$/;"	l
c010491f	obj/kernel.asm	/^c010491f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104922	obj/kernel.asm	/^c0104922:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104926	obj/kernel.asm	/^c0104926:	75 07                	jne    c010492f <slob_alloc+0x19c>$/;"	l
c0104928	obj/kernel.asm	/^c0104928:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010492d	obj/kernel.asm	/^c010492d:	eb 37                	jmp    c0104966 <slob_alloc+0x1d3>$/;"	l
c010492f	obj/kernel.asm	/^c010492f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0104936	obj/kernel.asm	/^c0104936:	00 $/;"	l
c0104937	obj/kernel.asm	/^c0104937:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010493a	obj/kernel.asm	/^c010493a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010493d	obj/kernel.asm	/^c010493d:	e8 26 00 00 00       	call   c0104968 <slob_free>$/;"	l
c0104942	obj/kernel.asm	/^c0104942:	e8 95 fc ff ff       	call   c01045dc <__intr_save>$/;"	l
c0104947	obj/kernel.asm	/^c0104947:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010494a	obj/kernel.asm	/^c010494a:	a1 08 aa 12 c0       	mov    0xc012aa08,%eax$/;"	l
c010494f	obj/kernel.asm	/^c010494f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104952	obj/kernel.asm	/^c0104952:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104955	obj/kernel.asm	/^c0104955:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104958	obj/kernel.asm	/^c0104958:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010495b	obj/kernel.asm	/^c010495b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010495e	obj/kernel.asm	/^c010495e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104961	obj/kernel.asm	/^c0104961:	e9 97 fe ff ff       	jmp    c01047fd <slob_alloc+0x6a>$/;"	l
c0104966	obj/kernel.asm	/^c0104966:	c9                   	leave  $/;"	l
c0104967	obj/kernel.asm	/^c0104967:	c3                   	ret    $/;"	l
c0104968	obj/kernel.asm	/^c0104968 <slob_free>:$/;"	l
c0104968	obj/kernel.asm	/^c0104968:	55                   	push   %ebp$/;"	l
c0104969	obj/kernel.asm	/^c0104969:	89 e5                	mov    %esp,%ebp$/;"	l
c010496b	obj/kernel.asm	/^c010496b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010496e	obj/kernel.asm	/^c010496e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104971	obj/kernel.asm	/^c0104971:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104974	obj/kernel.asm	/^c0104974:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104978	obj/kernel.asm	/^c0104978:	75 05                	jne    c010497f <slob_free+0x17>$/;"	l
c010497a	obj/kernel.asm	/^c010497a:	e9 ff 00 00 00       	jmp    c0104a7e <slob_free+0x116>$/;"	l
c010497f	obj/kernel.asm	/^c010497f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0104983	obj/kernel.asm	/^c0104983:	74 10                	je     c0104995 <slob_free+0x2d>$/;"	l
c0104985	obj/kernel.asm	/^c0104985:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104988	obj/kernel.asm	/^c0104988:	83 c0 07             	add    $0x7,%eax$/;"	l
c010498b	obj/kernel.asm	/^c010498b:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010498e	obj/kernel.asm	/^c010498e:	89 c2                	mov    %eax,%edx$/;"	l
c0104990	obj/kernel.asm	/^c0104990:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104993	obj/kernel.asm	/^c0104993:	89 10                	mov    %edx,(%eax)$/;"	l
c0104995	obj/kernel.asm	/^c0104995:	e8 42 fc ff ff       	call   c01045dc <__intr_save>$/;"	l
c010499a	obj/kernel.asm	/^c010499a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010499d	obj/kernel.asm	/^c010499d:	a1 08 aa 12 c0       	mov    0xc012aa08,%eax$/;"	l
c01049a2	obj/kernel.asm	/^c01049a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01049a5	obj/kernel.asm	/^c01049a5:	eb 27                	jmp    c01049ce <slob_free+0x66>$/;"	l
c01049a7	obj/kernel.asm	/^c01049a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01049aa	obj/kernel.asm	/^c01049aa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049ad	obj/kernel.asm	/^c01049ad:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01049b0	obj/kernel.asm	/^c01049b0:	77 13                	ja     c01049c5 <slob_free+0x5d>$/;"	l
c01049b2	obj/kernel.asm	/^c01049b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049b5	obj/kernel.asm	/^c01049b5:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01049b8	obj/kernel.asm	/^c01049b8:	77 27                	ja     c01049e1 <slob_free+0x79>$/;"	l
c01049ba	obj/kernel.asm	/^c01049ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01049bd	obj/kernel.asm	/^c01049bd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049c0	obj/kernel.asm	/^c01049c0:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01049c3	obj/kernel.asm	/^c01049c3:	77 1c                	ja     c01049e1 <slob_free+0x79>$/;"	l
c01049c5	obj/kernel.asm	/^c01049c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01049c8	obj/kernel.asm	/^c01049c8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049cb	obj/kernel.asm	/^c01049cb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01049ce	obj/kernel.asm	/^c01049ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049d1	obj/kernel.asm	/^c01049d1:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01049d4	obj/kernel.asm	/^c01049d4:	76 d1                	jbe    c01049a7 <slob_free+0x3f>$/;"	l
c01049d6	obj/kernel.asm	/^c01049d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01049d9	obj/kernel.asm	/^c01049d9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049dc	obj/kernel.asm	/^c01049dc:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01049df	obj/kernel.asm	/^c01049df:	76 c6                	jbe    c01049a7 <slob_free+0x3f>$/;"	l
c01049e1	obj/kernel.asm	/^c01049e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049e4	obj/kernel.asm	/^c01049e4:	8b 00                	mov    (%eax),%eax$/;"	l
c01049e6	obj/kernel.asm	/^c01049e6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01049ed	obj/kernel.asm	/^c01049ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049f0	obj/kernel.asm	/^c01049f0:	01 c2                	add    %eax,%edx$/;"	l
c01049f2	obj/kernel.asm	/^c01049f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01049f5	obj/kernel.asm	/^c01049f5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049f8	obj/kernel.asm	/^c01049f8:	39 c2                	cmp    %eax,%edx$/;"	l
c01049fa	obj/kernel.asm	/^c01049fa:	75 25                	jne    c0104a21 <slob_free+0xb9>$/;"	l
c01049fc	obj/kernel.asm	/^c01049fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049ff	obj/kernel.asm	/^c01049ff:	8b 10                	mov    (%eax),%edx$/;"	l
c0104a01	obj/kernel.asm	/^c0104a01:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a04	obj/kernel.asm	/^c0104a04:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a07	obj/kernel.asm	/^c0104a07:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a09	obj/kernel.asm	/^c0104a09:	01 c2                	add    %eax,%edx$/;"	l
c0104a0b	obj/kernel.asm	/^c0104a0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a0e	obj/kernel.asm	/^c0104a0e:	89 10                	mov    %edx,(%eax)$/;"	l
c0104a10	obj/kernel.asm	/^c0104a10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a13	obj/kernel.asm	/^c0104a13:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a16	obj/kernel.asm	/^c0104a16:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104a19	obj/kernel.asm	/^c0104a19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a1c	obj/kernel.asm	/^c0104a1c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104a1f	obj/kernel.asm	/^c0104a1f:	eb 0c                	jmp    c0104a2d <slob_free+0xc5>$/;"	l
c0104a21	obj/kernel.asm	/^c0104a21:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a24	obj/kernel.asm	/^c0104a24:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104a27	obj/kernel.asm	/^c0104a27:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a2a	obj/kernel.asm	/^c0104a2a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104a2d	obj/kernel.asm	/^c0104a2d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a30	obj/kernel.asm	/^c0104a30:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a32	obj/kernel.asm	/^c0104a32:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0104a39	obj/kernel.asm	/^c0104a39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a3c	obj/kernel.asm	/^c0104a3c:	01 d0                	add    %edx,%eax$/;"	l
c0104a3e	obj/kernel.asm	/^c0104a3e:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104a41	obj/kernel.asm	/^c0104a41:	75 1f                	jne    c0104a62 <slob_free+0xfa>$/;"	l
c0104a43	obj/kernel.asm	/^c0104a43:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a46	obj/kernel.asm	/^c0104a46:	8b 10                	mov    (%eax),%edx$/;"	l
c0104a48	obj/kernel.asm	/^c0104a48:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a4b	obj/kernel.asm	/^c0104a4b:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a4d	obj/kernel.asm	/^c0104a4d:	01 c2                	add    %eax,%edx$/;"	l
c0104a4f	obj/kernel.asm	/^c0104a4f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a52	obj/kernel.asm	/^c0104a52:	89 10                	mov    %edx,(%eax)$/;"	l
c0104a54	obj/kernel.asm	/^c0104a54:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a57	obj/kernel.asm	/^c0104a57:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104a5a	obj/kernel.asm	/^c0104a5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a5d	obj/kernel.asm	/^c0104a5d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104a60	obj/kernel.asm	/^c0104a60:	eb 09                	jmp    c0104a6b <slob_free+0x103>$/;"	l
c0104a62	obj/kernel.asm	/^c0104a62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a65	obj/kernel.asm	/^c0104a65:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104a68	obj/kernel.asm	/^c0104a68:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104a6b	obj/kernel.asm	/^c0104a6b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a6e	obj/kernel.asm	/^c0104a6e:	a3 08 aa 12 c0       	mov    %eax,0xc012aa08$/;"	l
c0104a73	obj/kernel.asm	/^c0104a73:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104a76	obj/kernel.asm	/^c0104a76:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104a79	obj/kernel.asm	/^c0104a79:	e8 88 fb ff ff       	call   c0104606 <__intr_restore>$/;"	l
c0104a7e	obj/kernel.asm	/^c0104a7e:	c9                   	leave  $/;"	l
c0104a7f	obj/kernel.asm	/^c0104a7f:	c3                   	ret    $/;"	l
c0104a80	obj/kernel.asm	/^c0104a80 <slob_init>:$/;"	l
c0104a80	obj/kernel.asm	/^c0104a80:	55                   	push   %ebp$/;"	l
c0104a81	obj/kernel.asm	/^c0104a81:	89 e5                	mov    %esp,%ebp$/;"	l
c0104a83	obj/kernel.asm	/^c0104a83:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104a86	obj/kernel.asm	/^c0104a86:	c7 04 24 aa c9 10 c0 	movl   $0xc010c9aa,(%esp)$/;"	l
c0104a8d	obj/kernel.asm	/^c0104a8d:	e8 c1 b8 ff ff       	call   c0100353 <cprintf>$/;"	l
c0104a92	obj/kernel.asm	/^c0104a92:	c9                   	leave  $/;"	l
c0104a93	obj/kernel.asm	/^c0104a93:	c3                   	ret    $/;"	l
c0104a94	obj/kernel.asm	/^c0104a94 <kmalloc_init>:$/;"	l
c0104a94	obj/kernel.asm	/^c0104a94:	55                   	push   %ebp$/;"	l
c0104a95	obj/kernel.asm	/^c0104a95:	89 e5                	mov    %esp,%ebp$/;"	l
c0104a97	obj/kernel.asm	/^c0104a97:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104a9a	obj/kernel.asm	/^c0104a9a:	e8 e1 ff ff ff       	call   c0104a80 <slob_init>$/;"	l
c0104a9f	obj/kernel.asm	/^c0104a9f:	c7 04 24 be c9 10 c0 	movl   $0xc010c9be,(%esp)$/;"	l
c0104aa6	obj/kernel.asm	/^c0104aa6:	e8 a8 b8 ff ff       	call   c0100353 <cprintf>$/;"	l
c0104aab	obj/kernel.asm	/^c0104aab:	c9                   	leave  $/;"	l
c0104aac	obj/kernel.asm	/^c0104aac:	c3                   	ret    $/;"	l
c0104aad	obj/kernel.asm	/^c0104aad <slob_allocated>:$/;"	l
c0104aad	obj/kernel.asm	/^c0104aad:	55                   	push   %ebp$/;"	l
c0104aae	obj/kernel.asm	/^c0104aae:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ab0	obj/kernel.asm	/^c0104ab0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104ab5	obj/kernel.asm	/^c0104ab5:	5d                   	pop    %ebp$/;"	l
c0104ab6	obj/kernel.asm	/^c0104ab6:	c3                   	ret    $/;"	l
c0104ab7	obj/kernel.asm	/^c0104ab7 <kallocated>:$/;"	l
c0104ab7	obj/kernel.asm	/^c0104ab7:	55                   	push   %ebp$/;"	l
c0104ab8	obj/kernel.asm	/^c0104ab8:	89 e5                	mov    %esp,%ebp$/;"	l
c0104aba	obj/kernel.asm	/^c0104aba:	e8 ee ff ff ff       	call   c0104aad <slob_allocated>$/;"	l
c0104abf	obj/kernel.asm	/^c0104abf:	5d                   	pop    %ebp$/;"	l
c0104ac0	obj/kernel.asm	/^c0104ac0:	c3                   	ret    $/;"	l
c0104ac1	obj/kernel.asm	/^c0104ac1 <find_order>:$/;"	l
c0104ac1	obj/kernel.asm	/^c0104ac1:	55                   	push   %ebp$/;"	l
c0104ac2	obj/kernel.asm	/^c0104ac2:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ac4	obj/kernel.asm	/^c0104ac4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0104ac7	obj/kernel.asm	/^c0104ac7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0104ace	obj/kernel.asm	/^c0104ace:	eb 07                	jmp    c0104ad7 <find_order+0x16>$/;"	l
c0104ad0	obj/kernel.asm	/^c0104ad0:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0104ad4	obj/kernel.asm	/^c0104ad4:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c0104ad7	obj/kernel.asm	/^c0104ad7:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0104ade	obj/kernel.asm	/^c0104ade:	7f f0                	jg     c0104ad0 <find_order+0xf>$/;"	l
c0104ae0	obj/kernel.asm	/^c0104ae0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0104ae3	obj/kernel.asm	/^c0104ae3:	c9                   	leave  $/;"	l
c0104ae4	obj/kernel.asm	/^c0104ae4:	c3                   	ret    $/;"	l
c0104ae5	obj/kernel.asm	/^c0104ae5 <__kmalloc>:$/;"	l
c0104ae5	obj/kernel.asm	/^c0104ae5:	55                   	push   %ebp$/;"	l
c0104ae6	obj/kernel.asm	/^c0104ae6:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ae8	obj/kernel.asm	/^c0104ae8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104aeb	obj/kernel.asm	/^c0104aeb:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c0104af2	obj/kernel.asm	/^c0104af2:	77 38                	ja     c0104b2c <__kmalloc+0x47>$/;"	l
c0104af4	obj/kernel.asm	/^c0104af4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104af7	obj/kernel.asm	/^c0104af7:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c0104afa	obj/kernel.asm	/^c0104afa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0104b01	obj/kernel.asm	/^c0104b01:	00 $/;"	l
c0104b02	obj/kernel.asm	/^c0104b02:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104b05	obj/kernel.asm	/^c0104b05:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104b09	obj/kernel.asm	/^c0104b09:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0104b0c	obj/kernel.asm	/^c0104b0c:	e8 82 fc ff ff       	call   c0104793 <slob_alloc>$/;"	l
c0104b11	obj/kernel.asm	/^c0104b11:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104b14	obj/kernel.asm	/^c0104b14:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104b18	obj/kernel.asm	/^c0104b18:	74 08                	je     c0104b22 <__kmalloc+0x3d>$/;"	l
c0104b1a	obj/kernel.asm	/^c0104b1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b1d	obj/kernel.asm	/^c0104b1d:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104b20	obj/kernel.asm	/^c0104b20:	eb 05                	jmp    c0104b27 <__kmalloc+0x42>$/;"	l
c0104b22	obj/kernel.asm	/^c0104b22:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104b27	obj/kernel.asm	/^c0104b27:	e9 a6 00 00 00       	jmp    c0104bd2 <__kmalloc+0xed>$/;"	l
c0104b2c	obj/kernel.asm	/^c0104b2c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0104b33	obj/kernel.asm	/^c0104b33:	00 $/;"	l
c0104b34	obj/kernel.asm	/^c0104b34:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104b37	obj/kernel.asm	/^c0104b37:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104b3b	obj/kernel.asm	/^c0104b3b:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)$/;"	l
c0104b42	obj/kernel.asm	/^c0104b42:	e8 4c fc ff ff       	call   c0104793 <slob_alloc>$/;"	l
c0104b47	obj/kernel.asm	/^c0104b47:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104b4a	obj/kernel.asm	/^c0104b4a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104b4e	obj/kernel.asm	/^c0104b4e:	75 07                	jne    c0104b57 <__kmalloc+0x72>$/;"	l
c0104b50	obj/kernel.asm	/^c0104b50:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104b55	obj/kernel.asm	/^c0104b55:	eb 7b                	jmp    c0104bd2 <__kmalloc+0xed>$/;"	l
c0104b57	obj/kernel.asm	/^c0104b57:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104b5a	obj/kernel.asm	/^c0104b5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104b5d	obj/kernel.asm	/^c0104b5d:	e8 5f ff ff ff       	call   c0104ac1 <find_order>$/;"	l
c0104b62	obj/kernel.asm	/^c0104b62:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104b65	obj/kernel.asm	/^c0104b65:	89 02                	mov    %eax,(%edx)$/;"	l
c0104b67	obj/kernel.asm	/^c0104b67:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b6a	obj/kernel.asm	/^c0104b6a:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b6c	obj/kernel.asm	/^c0104b6c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104b70	obj/kernel.asm	/^c0104b70:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104b73	obj/kernel.asm	/^c0104b73:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104b76	obj/kernel.asm	/^c0104b76:	e8 ab fb ff ff       	call   c0104726 <__slob_get_free_pages>$/;"	l
c0104b7b	obj/kernel.asm	/^c0104b7b:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104b7e	obj/kernel.asm	/^c0104b7e:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0104b81	obj/kernel.asm	/^c0104b81:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b84	obj/kernel.asm	/^c0104b84:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104b87	obj/kernel.asm	/^c0104b87:	85 c0                	test   %eax,%eax$/;"	l
c0104b89	obj/kernel.asm	/^c0104b89:	74 2f                	je     c0104bba <__kmalloc+0xd5>$/;"	l
c0104b8b	obj/kernel.asm	/^c0104b8b:	e8 4c fa ff ff       	call   c01045dc <__intr_save>$/;"	l
c0104b90	obj/kernel.asm	/^c0104b90:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104b93	obj/kernel.asm	/^c0104b93:	8b 15 c4 ce 19 c0    	mov    0xc019cec4,%edx$/;"	l
c0104b99	obj/kernel.asm	/^c0104b99:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b9c	obj/kernel.asm	/^c0104b9c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0104b9f	obj/kernel.asm	/^c0104b9f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ba2	obj/kernel.asm	/^c0104ba2:	a3 c4 ce 19 c0       	mov    %eax,0xc019cec4$/;"	l
c0104ba7	obj/kernel.asm	/^c0104ba7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104baa	obj/kernel.asm	/^c0104baa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104bad	obj/kernel.asm	/^c0104bad:	e8 54 fa ff ff       	call   c0104606 <__intr_restore>$/;"	l
c0104bb2	obj/kernel.asm	/^c0104bb2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104bb5	obj/kernel.asm	/^c0104bb5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104bb8	obj/kernel.asm	/^c0104bb8:	eb 18                	jmp    c0104bd2 <__kmalloc+0xed>$/;"	l
c0104bba	obj/kernel.asm	/^c0104bba:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0104bc1	obj/kernel.asm	/^c0104bc1:	00 $/;"	l
c0104bc2	obj/kernel.asm	/^c0104bc2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104bc5	obj/kernel.asm	/^c0104bc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104bc8	obj/kernel.asm	/^c0104bc8:	e8 9b fd ff ff       	call   c0104968 <slob_free>$/;"	l
c0104bcd	obj/kernel.asm	/^c0104bcd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104bd2	obj/kernel.asm	/^c0104bd2:	c9                   	leave  $/;"	l
c0104bd3	obj/kernel.asm	/^c0104bd3:	c3                   	ret    $/;"	l
c0104bd4	obj/kernel.asm	/^c0104bd4 <kmalloc>:$/;"	l
c0104bd4	obj/kernel.asm	/^c0104bd4:	55                   	push   %ebp$/;"	l
c0104bd5	obj/kernel.asm	/^c0104bd5:	89 e5                	mov    %esp,%ebp$/;"	l
c0104bd7	obj/kernel.asm	/^c0104bd7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104bda	obj/kernel.asm	/^c0104bda:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104be1	obj/kernel.asm	/^c0104be1:	00 $/;"	l
c0104be2	obj/kernel.asm	/^c0104be2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104be5	obj/kernel.asm	/^c0104be5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104be8	obj/kernel.asm	/^c0104be8:	e8 f8 fe ff ff       	call   c0104ae5 <__kmalloc>$/;"	l
c0104bed	obj/kernel.asm	/^c0104bed:	c9                   	leave  $/;"	l
c0104bee	obj/kernel.asm	/^c0104bee:	c3                   	ret    $/;"	l
c0104bef	obj/kernel.asm	/^c0104bef <kfree>:$/;"	l
c0104bef	obj/kernel.asm	/^c0104bef:	55                   	push   %ebp$/;"	l
c0104bf0	obj/kernel.asm	/^c0104bf0:	89 e5                	mov    %esp,%ebp$/;"	l
c0104bf2	obj/kernel.asm	/^c0104bf2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104bf5	obj/kernel.asm	/^c0104bf5:	c7 45 f0 c4 ce 19 c0 	movl   $0xc019cec4,-0x10(%ebp)$/;"	l
c0104bfc	obj/kernel.asm	/^c0104bfc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104c00	obj/kernel.asm	/^c0104c00:	75 05                	jne    c0104c07 <kfree+0x18>$/;"	l
c0104c02	obj/kernel.asm	/^c0104c02:	e9 a2 00 00 00       	jmp    c0104ca9 <kfree+0xba>$/;"	l
c0104c07	obj/kernel.asm	/^c0104c07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c0a	obj/kernel.asm	/^c0104c0a:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104c0f	obj/kernel.asm	/^c0104c0f:	85 c0                	test   %eax,%eax$/;"	l
c0104c11	obj/kernel.asm	/^c0104c11:	75 7f                	jne    c0104c92 <kfree+0xa3>$/;"	l
c0104c13	obj/kernel.asm	/^c0104c13:	e8 c4 f9 ff ff       	call   c01045dc <__intr_save>$/;"	l
c0104c18	obj/kernel.asm	/^c0104c18:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104c1b	obj/kernel.asm	/^c0104c1b:	a1 c4 ce 19 c0       	mov    0xc019cec4,%eax$/;"	l
c0104c20	obj/kernel.asm	/^c0104c20:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104c23	obj/kernel.asm	/^c0104c23:	eb 5c                	jmp    c0104c81 <kfree+0x92>$/;"	l
c0104c25	obj/kernel.asm	/^c0104c25:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c28	obj/kernel.asm	/^c0104c28:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104c2b	obj/kernel.asm	/^c0104c2b:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0104c2e	obj/kernel.asm	/^c0104c2e:	75 3f                	jne    c0104c6f <kfree+0x80>$/;"	l
c0104c30	obj/kernel.asm	/^c0104c30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c33	obj/kernel.asm	/^c0104c33:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0104c36	obj/kernel.asm	/^c0104c36:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c39	obj/kernel.asm	/^c0104c39:	89 10                	mov    %edx,(%eax)$/;"	l
c0104c3b	obj/kernel.asm	/^c0104c3b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104c3e	obj/kernel.asm	/^c0104c3e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c41	obj/kernel.asm	/^c0104c41:	e8 c0 f9 ff ff       	call   c0104606 <__intr_restore>$/;"	l
c0104c46	obj/kernel.asm	/^c0104c46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c49	obj/kernel.asm	/^c0104c49:	8b 10                	mov    (%eax),%edx$/;"	l
c0104c4b	obj/kernel.asm	/^c0104c4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c4e	obj/kernel.asm	/^c0104c4e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0104c52	obj/kernel.asm	/^c0104c52:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c55	obj/kernel.asm	/^c0104c55:	e8 05 fb ff ff       	call   c010475f <__slob_free_pages>$/;"	l
c0104c5a	obj/kernel.asm	/^c0104c5a:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0104c61	obj/kernel.asm	/^c0104c61:	00 $/;"	l
c0104c62	obj/kernel.asm	/^c0104c62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c65	obj/kernel.asm	/^c0104c65:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c68	obj/kernel.asm	/^c0104c68:	e8 fb fc ff ff       	call   c0104968 <slob_free>$/;"	l
c0104c6d	obj/kernel.asm	/^c0104c6d:	eb 3a                	jmp    c0104ca9 <kfree+0xba>$/;"	l
c0104c6f	obj/kernel.asm	/^c0104c6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c72	obj/kernel.asm	/^c0104c72:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104c75	obj/kernel.asm	/^c0104c75:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104c78	obj/kernel.asm	/^c0104c78:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c7b	obj/kernel.asm	/^c0104c7b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104c7e	obj/kernel.asm	/^c0104c7e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104c81	obj/kernel.asm	/^c0104c81:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104c85	obj/kernel.asm	/^c0104c85:	75 9e                	jne    c0104c25 <kfree+0x36>$/;"	l
c0104c87	obj/kernel.asm	/^c0104c87:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104c8a	obj/kernel.asm	/^c0104c8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c8d	obj/kernel.asm	/^c0104c8d:	e8 74 f9 ff ff       	call   c0104606 <__intr_restore>$/;"	l
c0104c92	obj/kernel.asm	/^c0104c92:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c95	obj/kernel.asm	/^c0104c95:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0104c98	obj/kernel.asm	/^c0104c98:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104c9f	obj/kernel.asm	/^c0104c9f:	00 $/;"	l
c0104ca0	obj/kernel.asm	/^c0104ca0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104ca3	obj/kernel.asm	/^c0104ca3:	e8 c0 fc ff ff       	call   c0104968 <slob_free>$/;"	l
c0104ca8	obj/kernel.asm	/^c0104ca8:	90                   	nop$/;"	l
c0104ca9	obj/kernel.asm	/^c0104ca9:	c9                   	leave  $/;"	l
c0104caa	obj/kernel.asm	/^c0104caa:	c3                   	ret    $/;"	l
c0104cab	obj/kernel.asm	/^c0104cab <ksize>:$/;"	l
c0104cab	obj/kernel.asm	/^c0104cab:	55                   	push   %ebp$/;"	l
c0104cac	obj/kernel.asm	/^c0104cac:	89 e5                	mov    %esp,%ebp$/;"	l
c0104cae	obj/kernel.asm	/^c0104cae:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104cb1	obj/kernel.asm	/^c0104cb1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104cb5	obj/kernel.asm	/^c0104cb5:	75 07                	jne    c0104cbe <ksize+0x13>$/;"	l
c0104cb7	obj/kernel.asm	/^c0104cb7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104cbc	obj/kernel.asm	/^c0104cbc:	eb 6b                	jmp    c0104d29 <ksize+0x7e>$/;"	l
c0104cbe	obj/kernel.asm	/^c0104cbe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104cc1	obj/kernel.asm	/^c0104cc1:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104cc6	obj/kernel.asm	/^c0104cc6:	85 c0                	test   %eax,%eax$/;"	l
c0104cc8	obj/kernel.asm	/^c0104cc8:	75 54                	jne    c0104d1e <ksize+0x73>$/;"	l
c0104cca	obj/kernel.asm	/^c0104cca:	e8 0d f9 ff ff       	call   c01045dc <__intr_save>$/;"	l
c0104ccf	obj/kernel.asm	/^c0104ccf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104cd2	obj/kernel.asm	/^c0104cd2:	a1 c4 ce 19 c0       	mov    0xc019cec4,%eax$/;"	l
c0104cd7	obj/kernel.asm	/^c0104cd7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104cda	obj/kernel.asm	/^c0104cda:	eb 31                	jmp    c0104d0d <ksize+0x62>$/;"	l
c0104cdc	obj/kernel.asm	/^c0104cdc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cdf	obj/kernel.asm	/^c0104cdf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104ce2	obj/kernel.asm	/^c0104ce2:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0104ce5	obj/kernel.asm	/^c0104ce5:	75 1d                	jne    c0104d04 <ksize+0x59>$/;"	l
c0104ce7	obj/kernel.asm	/^c0104ce7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104cea	obj/kernel.asm	/^c0104cea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104ced	obj/kernel.asm	/^c0104ced:	e8 14 f9 ff ff       	call   c0104606 <__intr_restore>$/;"	l
c0104cf2	obj/kernel.asm	/^c0104cf2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cf5	obj/kernel.asm	/^c0104cf5:	8b 00                	mov    (%eax),%eax$/;"	l
c0104cf7	obj/kernel.asm	/^c0104cf7:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c0104cfc	obj/kernel.asm	/^c0104cfc:	89 c1                	mov    %eax,%ecx$/;"	l
c0104cfe	obj/kernel.asm	/^c0104cfe:	d3 e2                	shl    %cl,%edx$/;"	d
c0104d00	obj/kernel.asm	/^c0104d00:	89 d0                	mov    %edx,%eax$/;"	l
c0104d02	obj/kernel.asm	/^c0104d02:	eb 25                	jmp    c0104d29 <ksize+0x7e>$/;"	l
c0104d04	obj/kernel.asm	/^c0104d04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d07	obj/kernel.asm	/^c0104d07:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104d0a	obj/kernel.asm	/^c0104d0a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104d0d	obj/kernel.asm	/^c0104d0d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104d11	obj/kernel.asm	/^c0104d11:	75 c9                	jne    c0104cdc <ksize+0x31>$/;"	l
c0104d13	obj/kernel.asm	/^c0104d13:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d16	obj/kernel.asm	/^c0104d16:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d19	obj/kernel.asm	/^c0104d19:	e8 e8 f8 ff ff       	call   c0104606 <__intr_restore>$/;"	l
c0104d1e	obj/kernel.asm	/^c0104d1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d21	obj/kernel.asm	/^c0104d21:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0104d24	obj/kernel.asm	/^c0104d24:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d26	obj/kernel.asm	/^c0104d26:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0104d29	obj/kernel.asm	/^c0104d29:	c9                   	leave  $/;"	l
c0104d2a	obj/kernel.asm	/^c0104d2a:	c3                   	ret    $/;"	l
c0104d2b	obj/kernel.asm	/^c0104d2b <page2ppn>:$/;"	l
c0104d2b	obj/kernel.asm	/^c0104d2b:	55                   	push   %ebp$/;"	l
c0104d2c	obj/kernel.asm	/^c0104d2c:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d2e	obj/kernel.asm	/^c0104d2e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104d31	obj/kernel.asm	/^c0104d31:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c0104d36	obj/kernel.asm	/^c0104d36:	29 c2                	sub    %eax,%edx$/;"	l
c0104d38	obj/kernel.asm	/^c0104d38:	89 d0                	mov    %edx,%eax$/;"	l
c0104d3a	obj/kernel.asm	/^c0104d3a:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0104d3d	obj/kernel.asm	/^c0104d3d:	5d                   	pop    %ebp$/;"	l
c0104d3e	obj/kernel.asm	/^c0104d3e:	c3                   	ret    $/;"	l
c0104d3f	obj/kernel.asm	/^c0104d3f <page2pa>:$/;"	l
c0104d3f	obj/kernel.asm	/^c0104d3f:	55                   	push   %ebp$/;"	l
c0104d40	obj/kernel.asm	/^c0104d40:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d42	obj/kernel.asm	/^c0104d42:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104d45	obj/kernel.asm	/^c0104d45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d48	obj/kernel.asm	/^c0104d48:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d4b	obj/kernel.asm	/^c0104d4b:	e8 db ff ff ff       	call   c0104d2b <page2ppn>$/;"	l
c0104d50	obj/kernel.asm	/^c0104d50:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0104d53	obj/kernel.asm	/^c0104d53:	c9                   	leave  $/;"	l
c0104d54	obj/kernel.asm	/^c0104d54:	c3                   	ret    $/;"	l
c0104d55	obj/kernel.asm	/^c0104d55 <pa2page>:$/;"	l
c0104d55	obj/kernel.asm	/^c0104d55:	55                   	push   %ebp$/;"	l
c0104d56	obj/kernel.asm	/^c0104d56:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d58	obj/kernel.asm	/^c0104d58:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104d5b	obj/kernel.asm	/^c0104d5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d5e	obj/kernel.asm	/^c0104d5e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104d61	obj/kernel.asm	/^c0104d61:	89 c2                	mov    %eax,%edx$/;"	l
c0104d63	obj/kernel.asm	/^c0104d63:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0104d68	obj/kernel.asm	/^c0104d68:	39 c2                	cmp    %eax,%edx$/;"	l
c0104d6a	obj/kernel.asm	/^c0104d6a:	72 1c                	jb     c0104d88 <pa2page+0x33>$/;"	l
c0104d6c	obj/kernel.asm	/^c0104d6c:	c7 44 24 08 dc c9 10 	movl   $0xc010c9dc,0x8(%esp)$/;"	l
c0104d73	obj/kernel.asm	/^c0104d73:	c0 $/;"	l
c0104d74	obj/kernel.asm	/^c0104d74:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0104d7b	obj/kernel.asm	/^c0104d7b:	00 $/;"	l
c0104d7c	obj/kernel.asm	/^c0104d7c:	c7 04 24 fb c9 10 c0 	movl   $0xc010c9fb,(%esp)$/;"	l
c0104d83	obj/kernel.asm	/^c0104d83:	e8 4d c0 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104d88	obj/kernel.asm	/^c0104d88:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c0104d8d	obj/kernel.asm	/^c0104d8d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104d90	obj/kernel.asm	/^c0104d90:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0104d93	obj/kernel.asm	/^c0104d93:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0104d96	obj/kernel.asm	/^c0104d96:	01 d0                	add    %edx,%eax$/;"	l
c0104d98	obj/kernel.asm	/^c0104d98:	c9                   	leave  $/;"	l
c0104d99	obj/kernel.asm	/^c0104d99:	c3                   	ret    $/;"	l
c0104d9a	obj/kernel.asm	/^c0104d9a <page2kva>:$/;"	l
c0104d9a	obj/kernel.asm	/^c0104d9a:	55                   	push   %ebp$/;"	l
c0104d9b	obj/kernel.asm	/^c0104d9b:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d9d	obj/kernel.asm	/^c0104d9d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104da0	obj/kernel.asm	/^c0104da0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104da3	obj/kernel.asm	/^c0104da3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104da6	obj/kernel.asm	/^c0104da6:	e8 94 ff ff ff       	call   c0104d3f <page2pa>$/;"	l
c0104dab	obj/kernel.asm	/^c0104dab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104dae	obj/kernel.asm	/^c0104dae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104db1	obj/kernel.asm	/^c0104db1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104db4	obj/kernel.asm	/^c0104db4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104db7	obj/kernel.asm	/^c0104db7:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0104dbc	obj/kernel.asm	/^c0104dbc:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0104dbf	obj/kernel.asm	/^c0104dbf:	72 23                	jb     c0104de4 <page2kva+0x4a>$/;"	l
c0104dc1	obj/kernel.asm	/^c0104dc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104dc4	obj/kernel.asm	/^c0104dc4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104dc8	obj/kernel.asm	/^c0104dc8:	c7 44 24 08 0c ca 10 	movl   $0xc010ca0c,0x8(%esp)$/;"	l
c0104dcf	obj/kernel.asm	/^c0104dcf:	c0 $/;"	l
c0104dd0	obj/kernel.asm	/^c0104dd0:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0104dd7	obj/kernel.asm	/^c0104dd7:	00 $/;"	l
c0104dd8	obj/kernel.asm	/^c0104dd8:	c7 04 24 fb c9 10 c0 	movl   $0xc010c9fb,(%esp)$/;"	l
c0104ddf	obj/kernel.asm	/^c0104ddf:	e8 f1 bf ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104de4	obj/kernel.asm	/^c0104de4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104de7	obj/kernel.asm	/^c0104de7:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104dec	obj/kernel.asm	/^c0104dec:	c9                   	leave  $/;"	l
c0104ded	obj/kernel.asm	/^c0104ded:	c3                   	ret    $/;"	l
c0104dee	obj/kernel.asm	/^c0104dee <pte2page>:$/;"	l
c0104dee	obj/kernel.asm	/^c0104dee:	55                   	push   %ebp$/;"	l
c0104def	obj/kernel.asm	/^c0104def:	89 e5                	mov    %esp,%ebp$/;"	l
c0104df1	obj/kernel.asm	/^c0104df1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104df4	obj/kernel.asm	/^c0104df4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104df7	obj/kernel.asm	/^c0104df7:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104dfa	obj/kernel.asm	/^c0104dfa:	85 c0                	test   %eax,%eax$/;"	l
c0104dfc	obj/kernel.asm	/^c0104dfc:	75 1c                	jne    c0104e1a <pte2page+0x2c>$/;"	l
c0104dfe	obj/kernel.asm	/^c0104dfe:	c7 44 24 08 30 ca 10 	movl   $0xc010ca30,0x8(%esp)$/;"	l
c0104e05	obj/kernel.asm	/^c0104e05:	c0 $/;"	l
c0104e06	obj/kernel.asm	/^c0104e06:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0104e0d	obj/kernel.asm	/^c0104e0d:	00 $/;"	l
c0104e0e	obj/kernel.asm	/^c0104e0e:	c7 04 24 fb c9 10 c0 	movl   $0xc010c9fb,(%esp)$/;"	l
c0104e15	obj/kernel.asm	/^c0104e15:	e8 bb bf ff ff       	call   c0100dd5 <__panic>$/;"	l
c0104e1a	obj/kernel.asm	/^c0104e1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e1d	obj/kernel.asm	/^c0104e1d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104e22	obj/kernel.asm	/^c0104e22:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e25	obj/kernel.asm	/^c0104e25:	e8 2b ff ff ff       	call   c0104d55 <pa2page>$/;"	l
c0104e2a	obj/kernel.asm	/^c0104e2a:	c9                   	leave  $/;"	l
c0104e2b	obj/kernel.asm	/^c0104e2b:	c3                   	ret    $/;"	l
c0104e2c	obj/kernel.asm	/^c0104e2c <pde2page>:$/;"	l
c0104e2c	obj/kernel.asm	/^c0104e2c:	55                   	push   %ebp$/;"	l
c0104e2d	obj/kernel.asm	/^c0104e2d:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e2f	obj/kernel.asm	/^c0104e2f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104e32	obj/kernel.asm	/^c0104e32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e35	obj/kernel.asm	/^c0104e35:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104e3a	obj/kernel.asm	/^c0104e3a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e3d	obj/kernel.asm	/^c0104e3d:	e8 13 ff ff ff       	call   c0104d55 <pa2page>$/;"	l
c0104e42	obj/kernel.asm	/^c0104e42:	c9                   	leave  $/;"	l
c0104e43	obj/kernel.asm	/^c0104e43:	c3                   	ret    $/;"	l
c0104e44	obj/kernel.asm	/^c0104e44 <page_ref>:$/;"	l
c0104e44	obj/kernel.asm	/^c0104e44:	55                   	push   %ebp$/;"	l
c0104e45	obj/kernel.asm	/^c0104e45:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e47	obj/kernel.asm	/^c0104e47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e4a	obj/kernel.asm	/^c0104e4a:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e4c	obj/kernel.asm	/^c0104e4c:	5d                   	pop    %ebp$/;"	l
c0104e4d	obj/kernel.asm	/^c0104e4d:	c3                   	ret    $/;"	l
c0104e4e	obj/kernel.asm	/^c0104e4e <set_page_ref>:$/;"	l
c0104e4e	obj/kernel.asm	/^c0104e4e:	55                   	push   %ebp$/;"	l
c0104e4f	obj/kernel.asm	/^c0104e4f:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e51	obj/kernel.asm	/^c0104e51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e54	obj/kernel.asm	/^c0104e54:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104e57	obj/kernel.asm	/^c0104e57:	89 10                	mov    %edx,(%eax)$/;"	l
c0104e59	obj/kernel.asm	/^c0104e59:	5d                   	pop    %ebp$/;"	l
c0104e5a	obj/kernel.asm	/^c0104e5a:	c3                   	ret    $/;"	l
c0104e5b	obj/kernel.asm	/^c0104e5b <page_ref_inc>:$/;"	l
c0104e5b	obj/kernel.asm	/^c0104e5b:	55                   	push   %ebp$/;"	l
c0104e5c	obj/kernel.asm	/^c0104e5c:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e5e	obj/kernel.asm	/^c0104e5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e61	obj/kernel.asm	/^c0104e61:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e63	obj/kernel.asm	/^c0104e63:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0104e66	obj/kernel.asm	/^c0104e66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e69	obj/kernel.asm	/^c0104e69:	89 10                	mov    %edx,(%eax)$/;"	l
c0104e6b	obj/kernel.asm	/^c0104e6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e6e	obj/kernel.asm	/^c0104e6e:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e70	obj/kernel.asm	/^c0104e70:	5d                   	pop    %ebp$/;"	l
c0104e71	obj/kernel.asm	/^c0104e71:	c3                   	ret    $/;"	l
c0104e72	obj/kernel.asm	/^c0104e72 <page_ref_dec>:$/;"	l
c0104e72	obj/kernel.asm	/^c0104e72:	55                   	push   %ebp$/;"	l
c0104e73	obj/kernel.asm	/^c0104e73:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e75	obj/kernel.asm	/^c0104e75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e78	obj/kernel.asm	/^c0104e78:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e7a	obj/kernel.asm	/^c0104e7a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0104e7d	obj/kernel.asm	/^c0104e7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e80	obj/kernel.asm	/^c0104e80:	89 10                	mov    %edx,(%eax)$/;"	l
c0104e82	obj/kernel.asm	/^c0104e82:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e85	obj/kernel.asm	/^c0104e85:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e87	obj/kernel.asm	/^c0104e87:	5d                   	pop    %ebp$/;"	l
c0104e88	obj/kernel.asm	/^c0104e88:	c3                   	ret    $/;"	l
c0104e89	obj/kernel.asm	/^c0104e89 <__intr_save>:$/;"	l
c0104e89	obj/kernel.asm	/^c0104e89:	55                   	push   %ebp$/;"	l
c0104e8a	obj/kernel.asm	/^c0104e8a:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e8c	obj/kernel.asm	/^c0104e8c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104e8f	obj/kernel.asm	/^c0104e8f:	9c                   	pushf  $/;"	l
c0104e90	obj/kernel.asm	/^c0104e90:	58                   	pop    %eax$/;"	l
c0104e91	obj/kernel.asm	/^c0104e91:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104e94	obj/kernel.asm	/^c0104e94:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104e97	obj/kernel.asm	/^c0104e97:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0104e9c	obj/kernel.asm	/^c0104e9c:	85 c0                	test   %eax,%eax$/;"	l
c0104e9e	obj/kernel.asm	/^c0104e9e:	74 0c                	je     c0104eac <__intr_save+0x23>$/;"	l
c0104ea0	obj/kernel.asm	/^c0104ea0:	e8 88 d1 ff ff       	call   c010202d <intr_disable>$/;"	l
c0104ea5	obj/kernel.asm	/^c0104ea5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0104eaa	obj/kernel.asm	/^c0104eaa:	eb 05                	jmp    c0104eb1 <__intr_save+0x28>$/;"	l
c0104eac	obj/kernel.asm	/^c0104eac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104eb1	obj/kernel.asm	/^c0104eb1:	c9                   	leave  $/;"	l
c0104eb2	obj/kernel.asm	/^c0104eb2:	c3                   	ret    $/;"	l
c0104eb3	obj/kernel.asm	/^c0104eb3 <__intr_restore>:$/;"	l
c0104eb3	obj/kernel.asm	/^c0104eb3:	55                   	push   %ebp$/;"	l
c0104eb4	obj/kernel.asm	/^c0104eb4:	89 e5                	mov    %esp,%ebp$/;"	l
c0104eb6	obj/kernel.asm	/^c0104eb6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104eb9	obj/kernel.asm	/^c0104eb9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104ebd	obj/kernel.asm	/^c0104ebd:	74 05                	je     c0104ec4 <__intr_restore+0x11>$/;"	l
c0104ebf	obj/kernel.asm	/^c0104ebf:	e8 63 d1 ff ff       	call   c0102027 <intr_enable>$/;"	l
c0104ec4	obj/kernel.asm	/^c0104ec4:	c9                   	leave  $/;"	l
c0104ec5	obj/kernel.asm	/^c0104ec5:	c3                   	ret    $/;"	l
c0104ec6	obj/kernel.asm	/^c0104ec6 <lgdt>:$/;"	l
c0104ec6	obj/kernel.asm	/^c0104ec6:	55                   	push   %ebp$/;"	l
c0104ec7	obj/kernel.asm	/^c0104ec7:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ec9	obj/kernel.asm	/^c0104ec9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ecc	obj/kernel.asm	/^c0104ecc:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0104ecf	obj/kernel.asm	/^c0104ecf:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0104ed4	obj/kernel.asm	/^c0104ed4:	8e e8                	mov    %eax,%gs$/;"	l
c0104ed6	obj/kernel.asm	/^c0104ed6:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0104edb	obj/kernel.asm	/^c0104edb:	8e e0                	mov    %eax,%fs$/;"	l
c0104edd	obj/kernel.asm	/^c0104edd:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104ee2	obj/kernel.asm	/^c0104ee2:	8e c0                	mov    %eax,%es$/;"	l
c0104ee4	obj/kernel.asm	/^c0104ee4:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104ee9	obj/kernel.asm	/^c0104ee9:	8e d8                	mov    %eax,%ds$/;"	l
c0104eeb	obj/kernel.asm	/^c0104eeb:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104ef0	obj/kernel.asm	/^c0104ef0:	8e d0                	mov    %eax,%ss$/;"	l
c0104ef2	obj/kernel.asm	/^c0104ef2:	ea f9 4e 10 c0 08 00 	ljmp   $0x8,$0xc0104ef9$/;"	l
c0104ef9	obj/kernel.asm	/^c0104ef9:	5d                   	pop    %ebp$/;"	l
c0104efa	obj/kernel.asm	/^c0104efa:	c3                   	ret    $/;"	l
c0104efb	obj/kernel.asm	/^c0104efb <load_esp0>:$/;"	l
c0104efb	obj/kernel.asm	/^c0104efb:	55                   	push   %ebp$/;"	l
c0104efc	obj/kernel.asm	/^c0104efc:	89 e5                	mov    %esp,%ebp$/;"	l
c0104efe	obj/kernel.asm	/^c0104efe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f01	obj/kernel.asm	/^c0104f01:	a3 04 cf 19 c0       	mov    %eax,0xc019cf04$/;"	l
c0104f06	obj/kernel.asm	/^c0104f06:	5d                   	pop    %ebp$/;"	l
c0104f07	obj/kernel.asm	/^c0104f07:	c3                   	ret    $/;"	l
c0104f08	obj/kernel.asm	/^c0104f08 <gdt_init>:$/;"	l
c0104f08	obj/kernel.asm	/^c0104f08:	55                   	push   %ebp$/;"	l
c0104f09	obj/kernel.asm	/^c0104f09:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f0b	obj/kernel.asm	/^c0104f0b:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0104f0e	obj/kernel.asm	/^c0104f0e:	b8 00 a0 12 c0       	mov    $0xc012a000,%eax$/;"	l
c0104f13	obj/kernel.asm	/^c0104f13:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104f16	obj/kernel.asm	/^c0104f16:	e8 e0 ff ff ff       	call   c0104efb <load_esp0>$/;"	l
c0104f1b	obj/kernel.asm	/^c0104f1b:	66 c7 05 08 cf 19 c0 	movw   $0x10,0xc019cf08$/;"	l
c0104f22	obj/kernel.asm	/^c0104f22:	10 00 $/;"	l
c0104f24	obj/kernel.asm	/^c0104f24:	66 c7 05 48 aa 12 c0 	movw   $0x68,0xc012aa48$/;"	l
c0104f2b	obj/kernel.asm	/^c0104f2b:	68 00 $/;"	l
c0104f2d	obj/kernel.asm	/^c0104f2d:	b8 00 cf 19 c0       	mov    $0xc019cf00,%eax$/;"	l
c0104f32	obj/kernel.asm	/^c0104f32:	66 a3 4a aa 12 c0    	mov    %ax,0xc012aa4a$/;"	l
c0104f38	obj/kernel.asm	/^c0104f38:	b8 00 cf 19 c0       	mov    $0xc019cf00,%eax$/;"	l
c0104f3d	obj/kernel.asm	/^c0104f3d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0104f40	obj/kernel.asm	/^c0104f40:	a2 4c aa 12 c0       	mov    %al,0xc012aa4c$/;"	l
c0104f45	obj/kernel.asm	/^c0104f45:	0f b6 05 4d aa 12 c0 	movzbl 0xc012aa4d,%eax$/;"	l
c0104f4c	obj/kernel.asm	/^c0104f4c:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0104f4f	obj/kernel.asm	/^c0104f4f:	83 c8 09             	or     $0x9,%eax$/;"	l
c0104f52	obj/kernel.asm	/^c0104f52:	a2 4d aa 12 c0       	mov    %al,0xc012aa4d$/;"	l
c0104f57	obj/kernel.asm	/^c0104f57:	0f b6 05 4d aa 12 c0 	movzbl 0xc012aa4d,%eax$/;"	l
c0104f5e	obj/kernel.asm	/^c0104f5e:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0104f61	obj/kernel.asm	/^c0104f61:	a2 4d aa 12 c0       	mov    %al,0xc012aa4d$/;"	l
c0104f66	obj/kernel.asm	/^c0104f66:	0f b6 05 4d aa 12 c0 	movzbl 0xc012aa4d,%eax$/;"	l
c0104f6d	obj/kernel.asm	/^c0104f6d:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c0104f70	obj/kernel.asm	/^c0104f70:	a2 4d aa 12 c0       	mov    %al,0xc012aa4d$/;"	l
c0104f75	obj/kernel.asm	/^c0104f75:	0f b6 05 4d aa 12 c0 	movzbl 0xc012aa4d,%eax$/;"	l
c0104f7c	obj/kernel.asm	/^c0104f7c:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0104f7f	obj/kernel.asm	/^c0104f7f:	a2 4d aa 12 c0       	mov    %al,0xc012aa4d$/;"	l
c0104f84	obj/kernel.asm	/^c0104f84:	0f b6 05 4e aa 12 c0 	movzbl 0xc012aa4e,%eax$/;"	l
c0104f8b	obj/kernel.asm	/^c0104f8b:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0104f8e	obj/kernel.asm	/^c0104f8e:	a2 4e aa 12 c0       	mov    %al,0xc012aa4e$/;"	l
c0104f93	obj/kernel.asm	/^c0104f93:	0f b6 05 4e aa 12 c0 	movzbl 0xc012aa4e,%eax$/;"	l
c0104f9a	obj/kernel.asm	/^c0104f9a:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0104f9d	obj/kernel.asm	/^c0104f9d:	a2 4e aa 12 c0       	mov    %al,0xc012aa4e$/;"	l
c0104fa2	obj/kernel.asm	/^c0104fa2:	0f b6 05 4e aa 12 c0 	movzbl 0xc012aa4e,%eax$/;"	l
c0104fa9	obj/kernel.asm	/^c0104fa9:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c0104fac	obj/kernel.asm	/^c0104fac:	a2 4e aa 12 c0       	mov    %al,0xc012aa4e$/;"	l
c0104fb1	obj/kernel.asm	/^c0104fb1:	0f b6 05 4e aa 12 c0 	movzbl 0xc012aa4e,%eax$/;"	l
c0104fb8	obj/kernel.asm	/^c0104fb8:	83 c8 40             	or     $0x40,%eax$/;"	l
c0104fbb	obj/kernel.asm	/^c0104fbb:	a2 4e aa 12 c0       	mov    %al,0xc012aa4e$/;"	l
c0104fc0	obj/kernel.asm	/^c0104fc0:	0f b6 05 4e aa 12 c0 	movzbl 0xc012aa4e,%eax$/;"	l
c0104fc7	obj/kernel.asm	/^c0104fc7:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c0104fca	obj/kernel.asm	/^c0104fca:	a2 4e aa 12 c0       	mov    %al,0xc012aa4e$/;"	l
c0104fcf	obj/kernel.asm	/^c0104fcf:	b8 00 cf 19 c0       	mov    $0xc019cf00,%eax$/;"	l
c0104fd4	obj/kernel.asm	/^c0104fd4:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0104fd7	obj/kernel.asm	/^c0104fd7:	a2 4f aa 12 c0       	mov    %al,0xc012aa4f$/;"	l
c0104fdc	obj/kernel.asm	/^c0104fdc:	c7 04 24 50 aa 12 c0 	movl   $0xc012aa50,(%esp)$/;"	l
c0104fe3	obj/kernel.asm	/^c0104fe3:	e8 de fe ff ff       	call   c0104ec6 <lgdt>$/;"	l
c0104fe8	obj/kernel.asm	/^c0104fe8:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c0104fee	obj/kernel.asm	/^c0104fee:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c0104ff2	obj/kernel.asm	/^c0104ff2:	0f 00 d8             	ltr    %ax$/;"	l
c0104ff5	obj/kernel.asm	/^c0104ff5:	c9                   	leave  $/;"	l
c0104ff6	obj/kernel.asm	/^c0104ff6:	c3                   	ret    $/;"	l
c0104ff7	obj/kernel.asm	/^c0104ff7 <init_pmm_manager>:$/;"	l
c0104ff7	obj/kernel.asm	/^c0104ff7:	55                   	push   %ebp$/;"	l
c0104ff8	obj/kernel.asm	/^c0104ff8:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ffa	obj/kernel.asm	/^c0104ffa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104ffd	obj/kernel.asm	/^c0104ffd:	c7 05 c4 ef 19 c0 d0 	movl   $0xc010c8d0,0xc019efc4$/;"	l
c0105004	obj/kernel.asm	/^c0105004:	c8 10 c0 $/;"	l
c0105007	obj/kernel.asm	/^c0105007:	a1 c4 ef 19 c0       	mov    0xc019efc4,%eax$/;"	l
c010500c	obj/kernel.asm	/^c010500c:	8b 00                	mov    (%eax),%eax$/;"	l
c010500e	obj/kernel.asm	/^c010500e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105012	obj/kernel.asm	/^c0105012:	c7 04 24 5c ca 10 c0 	movl   $0xc010ca5c,(%esp)$/;"	l
c0105019	obj/kernel.asm	/^c0105019:	e8 35 b3 ff ff       	call   c0100353 <cprintf>$/;"	l
c010501e	obj/kernel.asm	/^c010501e:	a1 c4 ef 19 c0       	mov    0xc019efc4,%eax$/;"	l
c0105023	obj/kernel.asm	/^c0105023:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105026	obj/kernel.asm	/^c0105026:	ff d0                	call   *%eax$/;"	l
c0105028	obj/kernel.asm	/^c0105028:	c9                   	leave  $/;"	l
c0105029	obj/kernel.asm	/^c0105029:	c3                   	ret    $/;"	l
c010502a	obj/kernel.asm	/^c010502a <init_memmap>:$/;"	l
c010502a	obj/kernel.asm	/^c010502a:	55                   	push   %ebp$/;"	l
c010502b	obj/kernel.asm	/^c010502b:	89 e5                	mov    %esp,%ebp$/;"	l
c010502d	obj/kernel.asm	/^c010502d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0105030	obj/kernel.asm	/^c0105030:	a1 c4 ef 19 c0       	mov    0xc019efc4,%eax$/;"	l
c0105035	obj/kernel.asm	/^c0105035:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105038	obj/kernel.asm	/^c0105038:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010503b	obj/kernel.asm	/^c010503b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010503f	obj/kernel.asm	/^c010503f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105042	obj/kernel.asm	/^c0105042:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0105045	obj/kernel.asm	/^c0105045:	ff d0                	call   *%eax$/;"	l
c0105047	obj/kernel.asm	/^c0105047:	c9                   	leave  $/;"	l
c0105048	obj/kernel.asm	/^c0105048:	c3                   	ret    $/;"	l
c0105049	obj/kernel.asm	/^c0105049 <alloc_pages>:$/;"	l
c0105049	obj/kernel.asm	/^c0105049:	55                   	push   %ebp$/;"	l
c010504a	obj/kernel.asm	/^c010504a:	89 e5                	mov    %esp,%ebp$/;"	l
c010504c	obj/kernel.asm	/^c010504c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010504f	obj/kernel.asm	/^c010504f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105056	obj/kernel.asm	/^c0105056:	e8 2e fe ff ff       	call   c0104e89 <__intr_save>$/;"	l
c010505b	obj/kernel.asm	/^c010505b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010505e	obj/kernel.asm	/^c010505e:	a1 c4 ef 19 c0       	mov    0xc019efc4,%eax$/;"	l
c0105063	obj/kernel.asm	/^c0105063:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105066	obj/kernel.asm	/^c0105066:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105069	obj/kernel.asm	/^c0105069:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010506c	obj/kernel.asm	/^c010506c:	ff d0                	call   *%eax$/;"	l
c010506e	obj/kernel.asm	/^c010506e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105071	obj/kernel.asm	/^c0105071:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105074	obj/kernel.asm	/^c0105074:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105077	obj/kernel.asm	/^c0105077:	e8 37 fe ff ff       	call   c0104eb3 <__intr_restore>$/;"	l
c010507c	obj/kernel.asm	/^c010507c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105080	obj/kernel.asm	/^c0105080:	75 2d                	jne    c01050af <alloc_pages+0x66>$/;"	l
c0105082	obj/kernel.asm	/^c0105082:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c0105086	obj/kernel.asm	/^c0105086:	77 27                	ja     c01050af <alloc_pages+0x66>$/;"	l
c0105088	obj/kernel.asm	/^c0105088:	a1 6c cf 19 c0       	mov    0xc019cf6c,%eax$/;"	l
c010508d	obj/kernel.asm	/^c010508d:	85 c0                	test   %eax,%eax$/;"	l
c010508f	obj/kernel.asm	/^c010508f:	74 1e                	je     c01050af <alloc_pages+0x66>$/;"	l
c0105091	obj/kernel.asm	/^c0105091:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105094	obj/kernel.asm	/^c0105094:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c0105099	obj/kernel.asm	/^c0105099:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01050a0	obj/kernel.asm	/^c01050a0:	00 $/;"	l
c01050a1	obj/kernel.asm	/^c01050a1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01050a5	obj/kernel.asm	/^c01050a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01050a8	obj/kernel.asm	/^c01050a8:	e8 30 1d 00 00       	call   c0106ddd <swap_out>$/;"	l
c01050ad	obj/kernel.asm	/^c01050ad:	eb a7                	jmp    c0105056 <alloc_pages+0xd>$/;"	l
c01050af	obj/kernel.asm	/^c01050af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01050b2	obj/kernel.asm	/^c01050b2:	c9                   	leave  $/;"	l
c01050b3	obj/kernel.asm	/^c01050b3:	c3                   	ret    $/;"	l
c01050b4	obj/kernel.asm	/^c01050b4 <free_pages>:$/;"	l
c01050b4	obj/kernel.asm	/^c01050b4:	55                   	push   %ebp$/;"	l
c01050b5	obj/kernel.asm	/^c01050b5:	89 e5                	mov    %esp,%ebp$/;"	l
c01050b7	obj/kernel.asm	/^c01050b7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01050ba	obj/kernel.asm	/^c01050ba:	e8 ca fd ff ff       	call   c0104e89 <__intr_save>$/;"	l
c01050bf	obj/kernel.asm	/^c01050bf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01050c2	obj/kernel.asm	/^c01050c2:	a1 c4 ef 19 c0       	mov    0xc019efc4,%eax$/;"	l
c01050c7	obj/kernel.asm	/^c01050c7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01050ca	obj/kernel.asm	/^c01050ca:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01050cd	obj/kernel.asm	/^c01050cd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01050d1	obj/kernel.asm	/^c01050d1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01050d4	obj/kernel.asm	/^c01050d4:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01050d7	obj/kernel.asm	/^c01050d7:	ff d0                	call   *%eax$/;"	l
c01050d9	obj/kernel.asm	/^c01050d9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01050dc	obj/kernel.asm	/^c01050dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01050df	obj/kernel.asm	/^c01050df:	e8 cf fd ff ff       	call   c0104eb3 <__intr_restore>$/;"	l
c01050e4	obj/kernel.asm	/^c01050e4:	c9                   	leave  $/;"	l
c01050e5	obj/kernel.asm	/^c01050e5:	c3                   	ret    $/;"	l
c01050e6	obj/kernel.asm	/^c01050e6 <nr_free_pages>:$/;"	l
c01050e6	obj/kernel.asm	/^c01050e6:	55                   	push   %ebp$/;"	l
c01050e7	obj/kernel.asm	/^c01050e7:	89 e5                	mov    %esp,%ebp$/;"	l
c01050e9	obj/kernel.asm	/^c01050e9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01050ec	obj/kernel.asm	/^c01050ec:	e8 98 fd ff ff       	call   c0104e89 <__intr_save>$/;"	l
c01050f1	obj/kernel.asm	/^c01050f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01050f4	obj/kernel.asm	/^c01050f4:	a1 c4 ef 19 c0       	mov    0xc019efc4,%eax$/;"	l
c01050f9	obj/kernel.asm	/^c01050f9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01050fc	obj/kernel.asm	/^c01050fc:	ff d0                	call   *%eax$/;"	l
c01050fe	obj/kernel.asm	/^c01050fe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105101	obj/kernel.asm	/^c0105101:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105104	obj/kernel.asm	/^c0105104:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105107	obj/kernel.asm	/^c0105107:	e8 a7 fd ff ff       	call   c0104eb3 <__intr_restore>$/;"	l
c010510c	obj/kernel.asm	/^c010510c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010510f	obj/kernel.asm	/^c010510f:	c9                   	leave  $/;"	l
c0105110	obj/kernel.asm	/^c0105110:	c3                   	ret    $/;"	l
c0105111	obj/kernel.asm	/^c0105111 <page_init>:$/;"	l
c0105111	obj/kernel.asm	/^c0105111:	55                   	push   %ebp$/;"	l
c0105112	obj/kernel.asm	/^c0105112:	89 e5                	mov    %esp,%ebp$/;"	l
c0105114	obj/kernel.asm	/^c0105114:	57                   	push   %edi$/;"	l
c0105115	obj/kernel.asm	/^c0105115:	56                   	push   %esi$/;"	l
c0105116	obj/kernel.asm	/^c0105116:	53                   	push   %ebx$/;"	l
c0105117	obj/kernel.asm	/^c0105117:	81 ec 9c 00 00 00    	sub    $0x9c,%esp$/;"	l
c010511d	obj/kernel.asm	/^c010511d:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c0105124	obj/kernel.asm	/^c0105124:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c010512b	obj/kernel.asm	/^c010512b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0105132	obj/kernel.asm	/^c0105132:	c7 04 24 73 ca 10 c0 	movl   $0xc010ca73,(%esp)$/;"	l
c0105139	obj/kernel.asm	/^c0105139:	e8 15 b2 ff ff       	call   c0100353 <cprintf>$/;"	l
c010513e	obj/kernel.asm	/^c010513e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105145	obj/kernel.asm	/^c0105145:	e9 15 01 00 00       	jmp    c010525f <page_init+0x14e>$/;"	l
c010514a	obj/kernel.asm	/^c010514a:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010514d	obj/kernel.asm	/^c010514d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105150	obj/kernel.asm	/^c0105150:	89 d0                	mov    %edx,%eax$/;"	l
c0105152	obj/kernel.asm	/^c0105152:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105155	obj/kernel.asm	/^c0105155:	01 d0                	add    %edx,%eax$/;"	l
c0105157	obj/kernel.asm	/^c0105157:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010515a	obj/kernel.asm	/^c010515a:	01 c8                	add    %ecx,%eax$/;"	l
c010515c	obj/kernel.asm	/^c010515c:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010515f	obj/kernel.asm	/^c010515f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105162	obj/kernel.asm	/^c0105162:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0105165	obj/kernel.asm	/^c0105165:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0105168	obj/kernel.asm	/^c0105168:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010516b	obj/kernel.asm	/^c010516b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010516e	obj/kernel.asm	/^c010516e:	89 d0                	mov    %edx,%eax$/;"	l
c0105170	obj/kernel.asm	/^c0105170:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105173	obj/kernel.asm	/^c0105173:	01 d0                	add    %edx,%eax$/;"	l
c0105175	obj/kernel.asm	/^c0105175:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105178	obj/kernel.asm	/^c0105178:	01 c8                	add    %ecx,%eax$/;"	l
c010517a	obj/kernel.asm	/^c010517a:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010517d	obj/kernel.asm	/^c010517d:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0105180	obj/kernel.asm	/^c0105180:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0105183	obj/kernel.asm	/^c0105183:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0105186	obj/kernel.asm	/^c0105186:	01 c8                	add    %ecx,%eax$/;"	l
c0105188	obj/kernel.asm	/^c0105188:	11 da                	adc    %ebx,%edx$/;"	l
c010518a	obj/kernel.asm	/^c010518a:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010518d	obj/kernel.asm	/^c010518d:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c0105190	obj/kernel.asm	/^c0105190:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105193	obj/kernel.asm	/^c0105193:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105196	obj/kernel.asm	/^c0105196:	89 d0                	mov    %edx,%eax$/;"	l
c0105198	obj/kernel.asm	/^c0105198:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010519b	obj/kernel.asm	/^c010519b:	01 d0                	add    %edx,%eax$/;"	l
c010519d	obj/kernel.asm	/^c010519d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051a0	obj/kernel.asm	/^c01051a0:	01 c8                	add    %ecx,%eax$/;"	l
c01051a2	obj/kernel.asm	/^c01051a2:	83 c0 14             	add    $0x14,%eax$/;"	l
c01051a5	obj/kernel.asm	/^c01051a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01051a7	obj/kernel.asm	/^c01051a7:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c01051ad	obj/kernel.asm	/^c01051ad:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01051b0	obj/kernel.asm	/^c01051b0:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01051b3	obj/kernel.asm	/^c01051b3:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c01051b6	obj/kernel.asm	/^c01051b6:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c01051b9	obj/kernel.asm	/^c01051b9:	89 c6                	mov    %eax,%esi$/;"	l
c01051bb	obj/kernel.asm	/^c01051bb:	89 d7                	mov    %edx,%edi$/;"	l
c01051bd	obj/kernel.asm	/^c01051bd:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01051c0	obj/kernel.asm	/^c01051c0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01051c3	obj/kernel.asm	/^c01051c3:	89 d0                	mov    %edx,%eax$/;"	l
c01051c5	obj/kernel.asm	/^c01051c5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051c8	obj/kernel.asm	/^c01051c8:	01 d0                	add    %edx,%eax$/;"	l
c01051ca	obj/kernel.asm	/^c01051ca:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051cd	obj/kernel.asm	/^c01051cd:	01 c8                	add    %ecx,%eax$/;"	l
c01051cf	obj/kernel.asm	/^c01051cf:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01051d2	obj/kernel.asm	/^c01051d2:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c01051d5	obj/kernel.asm	/^c01051d5:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c01051db	obj/kernel.asm	/^c01051db:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c01051df	obj/kernel.asm	/^c01051df:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
c01051e3	obj/kernel.asm	/^c01051e3:	89 7c 24 18          	mov    %edi,0x18(%esp)$/;"	l
c01051e7	obj/kernel.asm	/^c01051e7:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01051ea	obj/kernel.asm	/^c01051ea:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c01051ed	obj/kernel.asm	/^c01051ed:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01051f1	obj/kernel.asm	/^c01051f1:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c01051f5	obj/kernel.asm	/^c01051f5:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01051f9	obj/kernel.asm	/^c01051f9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c01051fd	obj/kernel.asm	/^c01051fd:	c7 04 24 80 ca 10 c0 	movl   $0xc010ca80,(%esp)$/;"	l
c0105204	obj/kernel.asm	/^c0105204:	e8 4a b1 ff ff       	call   c0100353 <cprintf>$/;"	l
c0105209	obj/kernel.asm	/^c0105209:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010520c	obj/kernel.asm	/^c010520c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010520f	obj/kernel.asm	/^c010520f:	89 d0                	mov    %edx,%eax$/;"	l
c0105211	obj/kernel.asm	/^c0105211:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105214	obj/kernel.asm	/^c0105214:	01 d0                	add    %edx,%eax$/;"	l
c0105216	obj/kernel.asm	/^c0105216:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105219	obj/kernel.asm	/^c0105219:	01 c8                	add    %ecx,%eax$/;"	l
c010521b	obj/kernel.asm	/^c010521b:	83 c0 14             	add    $0x14,%eax$/;"	l
c010521e	obj/kernel.asm	/^c010521e:	8b 00                	mov    (%eax),%eax$/;"	l
c0105220	obj/kernel.asm	/^c0105220:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0105223	obj/kernel.asm	/^c0105223:	75 36                	jne    c010525b <page_init+0x14a>$/;"	l
c0105225	obj/kernel.asm	/^c0105225:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105228	obj/kernel.asm	/^c0105228:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010522b	obj/kernel.asm	/^c010522b:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c010522e	obj/kernel.asm	/^c010522e:	77 2b                	ja     c010525b <page_init+0x14a>$/;"	l
c0105230	obj/kernel.asm	/^c0105230:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0105233	obj/kernel.asm	/^c0105233:	72 05                	jb     c010523a <page_init+0x129>$/;"	l
c0105235	obj/kernel.asm	/^c0105235:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c0105238	obj/kernel.asm	/^c0105238:	73 21                	jae    c010525b <page_init+0x14a>$/;"	l
c010523a	obj/kernel.asm	/^c010523a:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c010523e	obj/kernel.asm	/^c010523e:	77 1b                	ja     c010525b <page_init+0x14a>$/;"	l
c0105240	obj/kernel.asm	/^c0105240:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105244	obj/kernel.asm	/^c0105244:	72 09                	jb     c010524f <page_init+0x13e>$/;"	l
c0105246	obj/kernel.asm	/^c0105246:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c010524d	obj/kernel.asm	/^c010524d:	77 0c                	ja     c010525b <page_init+0x14a>$/;"	l
c010524f	obj/kernel.asm	/^c010524f:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0105252	obj/kernel.asm	/^c0105252:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0105255	obj/kernel.asm	/^c0105255:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105258	obj/kernel.asm	/^c0105258:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010525b	obj/kernel.asm	/^c010525b:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c010525f	obj/kernel.asm	/^c010525f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0105262	obj/kernel.asm	/^c0105262:	8b 00                	mov    (%eax),%eax$/;"	l
c0105264	obj/kernel.asm	/^c0105264:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0105267	obj/kernel.asm	/^c0105267:	0f 8f dd fe ff ff    	jg     c010514a <page_init+0x39>$/;"	l
c010526d	obj/kernel.asm	/^c010526d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105271	obj/kernel.asm	/^c0105271:	72 1d                	jb     c0105290 <page_init+0x17f>$/;"	l
c0105273	obj/kernel.asm	/^c0105273:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105277	obj/kernel.asm	/^c0105277:	77 09                	ja     c0105282 <page_init+0x171>$/;"	l
c0105279	obj/kernel.asm	/^c0105279:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c0105280	obj/kernel.asm	/^c0105280:	76 0e                	jbe    c0105290 <page_init+0x17f>$/;"	l
c0105282	obj/kernel.asm	/^c0105282:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c0105289	obj/kernel.asm	/^c0105289:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0105290	obj/kernel.asm	/^c0105290:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105293	obj/kernel.asm	/^c0105293:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105296	obj/kernel.asm	/^c0105296:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c010529a	obj/kernel.asm	/^c010529a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010529d	obj/kernel.asm	/^c010529d:	a3 e0 ce 19 c0       	mov    %eax,0xc019cee0$/;"	l
c01052a2	obj/kernel.asm	/^c01052a2:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c01052a9	obj/kernel.asm	/^c01052a9:	b8 b8 f0 19 c0       	mov    $0xc019f0b8,%eax$/;"	l
c01052ae	obj/kernel.asm	/^c01052ae:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01052b1	obj/kernel.asm	/^c01052b1:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c01052b4	obj/kernel.asm	/^c01052b4:	01 d0                	add    %edx,%eax$/;"	l
c01052b6	obj/kernel.asm	/^c01052b6:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c01052b9	obj/kernel.asm	/^c01052b9:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01052bc	obj/kernel.asm	/^c01052bc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01052c1	obj/kernel.asm	/^c01052c1:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c01052c4	obj/kernel.asm	/^c01052c4:	89 d0                	mov    %edx,%eax$/;"	l
c01052c6	obj/kernel.asm	/^c01052c6:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c01052c9	obj/kernel.asm	/^c01052c9:	29 c2                	sub    %eax,%edx$/;"	l
c01052cb	obj/kernel.asm	/^c01052cb:	89 d0                	mov    %edx,%eax$/;"	l
c01052cd	obj/kernel.asm	/^c01052cd:	a3 cc ef 19 c0       	mov    %eax,0xc019efcc$/;"	l
c01052d2	obj/kernel.asm	/^c01052d2:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01052d9	obj/kernel.asm	/^c01052d9:	eb 27                	jmp    c0105302 <page_init+0x1f1>$/;"	l
c01052db	obj/kernel.asm	/^c01052db:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c01052e0	obj/kernel.asm	/^c01052e0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01052e3	obj/kernel.asm	/^c01052e3:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01052e6	obj/kernel.asm	/^c01052e6:	01 d0                	add    %edx,%eax$/;"	l
c01052e8	obj/kernel.asm	/^c01052e8:	83 c0 04             	add    $0x4,%eax$/;"	l
c01052eb	obj/kernel.asm	/^c01052eb:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c01052f2	obj/kernel.asm	/^c01052f2:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c01052f5	obj/kernel.asm	/^c01052f5:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c01052f8	obj/kernel.asm	/^c01052f8:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c01052fb	obj/kernel.asm	/^c01052fb:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01052fe	obj/kernel.asm	/^c01052fe:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0105302	obj/kernel.asm	/^c0105302:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105305	obj/kernel.asm	/^c0105305:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c010530a	obj/kernel.asm	/^c010530a:	39 c2                	cmp    %eax,%edx$/;"	l
c010530c	obj/kernel.asm	/^c010530c:	72 cd                	jb     c01052db <page_init+0x1ca>$/;"	l
c010530e	obj/kernel.asm	/^c010530e:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0105313	obj/kernel.asm	/^c0105313:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0105316	obj/kernel.asm	/^c0105316:	89 c2                	mov    %eax,%edx$/;"	l
c0105318	obj/kernel.asm	/^c0105318:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c010531d	obj/kernel.asm	/^c010531d:	01 d0                	add    %edx,%eax$/;"	l
c010531f	obj/kernel.asm	/^c010531f:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0105322	obj/kernel.asm	/^c0105322:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c0105329	obj/kernel.asm	/^c0105329:	77 23                	ja     c010534e <page_init+0x23d>$/;"	l
c010532b	obj/kernel.asm	/^c010532b:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010532e	obj/kernel.asm	/^c010532e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105332	obj/kernel.asm	/^c0105332:	c7 44 24 08 b0 ca 10 	movl   $0xc010cab0,0x8(%esp)$/;"	l
c0105339	obj/kernel.asm	/^c0105339:	c0 $/;"	l
c010533a	obj/kernel.asm	/^c010533a:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c0105341	obj/kernel.asm	/^c0105341:	00 $/;"	l
c0105342	obj/kernel.asm	/^c0105342:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105349	obj/kernel.asm	/^c0105349:	e8 87 ba ff ff       	call   c0100dd5 <__panic>$/;"	l
c010534e	obj/kernel.asm	/^c010534e:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0105351	obj/kernel.asm	/^c0105351:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105356	obj/kernel.asm	/^c0105356:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0105359	obj/kernel.asm	/^c0105359:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105360	obj/kernel.asm	/^c0105360:	e9 74 01 00 00       	jmp    c01054d9 <page_init+0x3c8>$/;"	l
c0105365	obj/kernel.asm	/^c0105365:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105368	obj/kernel.asm	/^c0105368:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010536b	obj/kernel.asm	/^c010536b:	89 d0                	mov    %edx,%eax$/;"	l
c010536d	obj/kernel.asm	/^c010536d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105370	obj/kernel.asm	/^c0105370:	01 d0                	add    %edx,%eax$/;"	l
c0105372	obj/kernel.asm	/^c0105372:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105375	obj/kernel.asm	/^c0105375:	01 c8                	add    %ecx,%eax$/;"	l
c0105377	obj/kernel.asm	/^c0105377:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010537a	obj/kernel.asm	/^c010537a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010537d	obj/kernel.asm	/^c010537d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105380	obj/kernel.asm	/^c0105380:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0105383	obj/kernel.asm	/^c0105383:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105386	obj/kernel.asm	/^c0105386:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105389	obj/kernel.asm	/^c0105389:	89 d0                	mov    %edx,%eax$/;"	l
c010538b	obj/kernel.asm	/^c010538b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010538e	obj/kernel.asm	/^c010538e:	01 d0                	add    %edx,%eax$/;"	l
c0105390	obj/kernel.asm	/^c0105390:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105393	obj/kernel.asm	/^c0105393:	01 c8                	add    %ecx,%eax$/;"	l
c0105395	obj/kernel.asm	/^c0105395:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0105398	obj/kernel.asm	/^c0105398:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c010539b	obj/kernel.asm	/^c010539b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010539e	obj/kernel.asm	/^c010539e:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01053a1	obj/kernel.asm	/^c01053a1:	01 c8                	add    %ecx,%eax$/;"	l
c01053a3	obj/kernel.asm	/^c01053a3:	11 da                	adc    %ebx,%edx$/;"	l
c01053a5	obj/kernel.asm	/^c01053a5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01053a8	obj/kernel.asm	/^c01053a8:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c01053ab	obj/kernel.asm	/^c01053ab:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01053ae	obj/kernel.asm	/^c01053ae:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01053b1	obj/kernel.asm	/^c01053b1:	89 d0                	mov    %edx,%eax$/;"	l
c01053b3	obj/kernel.asm	/^c01053b3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01053b6	obj/kernel.asm	/^c01053b6:	01 d0                	add    %edx,%eax$/;"	l
c01053b8	obj/kernel.asm	/^c01053b8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01053bb	obj/kernel.asm	/^c01053bb:	01 c8                	add    %ecx,%eax$/;"	l
c01053bd	obj/kernel.asm	/^c01053bd:	83 c0 14             	add    $0x14,%eax$/;"	l
c01053c0	obj/kernel.asm	/^c01053c0:	8b 00                	mov    (%eax),%eax$/;"	l
c01053c2	obj/kernel.asm	/^c01053c2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01053c5	obj/kernel.asm	/^c01053c5:	0f 85 0a 01 00 00    	jne    c01054d5 <page_init+0x3c4>$/;"	l
c01053cb	obj/kernel.asm	/^c01053cb:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c01053ce	obj/kernel.asm	/^c01053ce:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01053d3	obj/kernel.asm	/^c01053d3:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c01053d6	obj/kernel.asm	/^c01053d6:	72 17                	jb     c01053ef <page_init+0x2de>$/;"	l
c01053d8	obj/kernel.asm	/^c01053d8:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c01053db	obj/kernel.asm	/^c01053db:	77 05                	ja     c01053e2 <page_init+0x2d1>$/;"	l
c01053dd	obj/kernel.asm	/^c01053dd:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c01053e0	obj/kernel.asm	/^c01053e0:	76 0d                	jbe    c01053ef <page_init+0x2de>$/;"	l
c01053e2	obj/kernel.asm	/^c01053e2:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c01053e5	obj/kernel.asm	/^c01053e5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01053e8	obj/kernel.asm	/^c01053e8:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c01053ef	obj/kernel.asm	/^c01053ef:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c01053f3	obj/kernel.asm	/^c01053f3:	72 1d                	jb     c0105412 <page_init+0x301>$/;"	l
c01053f5	obj/kernel.asm	/^c01053f5:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c01053f9	obj/kernel.asm	/^c01053f9:	77 09                	ja     c0105404 <page_init+0x2f3>$/;"	l
c01053fb	obj/kernel.asm	/^c01053fb:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c0105402	obj/kernel.asm	/^c0105402:	76 0e                	jbe    c0105412 <page_init+0x301>$/;"	l
c0105404	obj/kernel.asm	/^c0105404:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c010540b	obj/kernel.asm	/^c010540b:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c0105412	obj/kernel.asm	/^c0105412:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105415	obj/kernel.asm	/^c0105415:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105418	obj/kernel.asm	/^c0105418:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c010541b	obj/kernel.asm	/^c010541b:	0f 87 b4 00 00 00    	ja     c01054d5 <page_init+0x3c4>$/;"	l
c0105421	obj/kernel.asm	/^c0105421:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0105424	obj/kernel.asm	/^c0105424:	72 09                	jb     c010542f <page_init+0x31e>$/;"	l
c0105426	obj/kernel.asm	/^c0105426:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0105429	obj/kernel.asm	/^c0105429:	0f 83 a6 00 00 00    	jae    c01054d5 <page_init+0x3c4>$/;"	l
c010542f	obj/kernel.asm	/^c010542f:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0105436	obj/kernel.asm	/^c0105436:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0105439	obj/kernel.asm	/^c0105439:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010543c	obj/kernel.asm	/^c010543c:	01 d0                	add    %edx,%eax$/;"	l
c010543e	obj/kernel.asm	/^c010543e:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0105441	obj/kernel.asm	/^c0105441:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0105444	obj/kernel.asm	/^c0105444:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0105447	obj/kernel.asm	/^c0105447:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010544c	obj/kernel.asm	/^c010544c:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c010544f	obj/kernel.asm	/^c010544f:	89 d0                	mov    %edx,%eax$/;"	l
c0105451	obj/kernel.asm	/^c0105451:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c0105454	obj/kernel.asm	/^c0105454:	29 c2                	sub    %eax,%edx$/;"	l
c0105456	obj/kernel.asm	/^c0105456:	89 d0                	mov    %edx,%eax$/;"	l
c0105458	obj/kernel.asm	/^c0105458:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010545d	obj/kernel.asm	/^c010545d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105460	obj/kernel.asm	/^c0105460:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0105463	obj/kernel.asm	/^c0105463:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0105466	obj/kernel.asm	/^c0105466:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0105469	obj/kernel.asm	/^c0105469:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c010546c	obj/kernel.asm	/^c010546c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105471	obj/kernel.asm	/^c0105471:	89 c7                	mov    %eax,%edi$/;"	l
c0105473	obj/kernel.asm	/^c0105473:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
c0105479	obj/kernel.asm	/^c0105479:	89 7d 80             	mov    %edi,-0x80(%ebp)$/;"	l
c010547c	obj/kernel.asm	/^c010547c:	89 d0                	mov    %edx,%eax$/;"	l
c010547e	obj/kernel.asm	/^c010547e:	83 e0 00             	and    $0x0,%eax$/;"	l
c0105481	obj/kernel.asm	/^c0105481:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c0105484	obj/kernel.asm	/^c0105484:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0105487	obj/kernel.asm	/^c0105487:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c010548a	obj/kernel.asm	/^c010548a:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010548d	obj/kernel.asm	/^c010548d:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0105490	obj/kernel.asm	/^c0105490:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105493	obj/kernel.asm	/^c0105493:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105496	obj/kernel.asm	/^c0105496:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0105499	obj/kernel.asm	/^c0105499:	77 3a                	ja     c01054d5 <page_init+0x3c4>$/;"	l
c010549b	obj/kernel.asm	/^c010549b:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c010549e	obj/kernel.asm	/^c010549e:	72 05                	jb     c01054a5 <page_init+0x394>$/;"	l
c01054a0	obj/kernel.asm	/^c01054a0:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c01054a3	obj/kernel.asm	/^c01054a3:	73 30                	jae    c01054d5 <page_init+0x3c4>$/;"	l
c01054a5	obj/kernel.asm	/^c01054a5:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
c01054a8	obj/kernel.asm	/^c01054a8:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
c01054ab	obj/kernel.asm	/^c01054ab:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01054ae	obj/kernel.asm	/^c01054ae:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01054b1	obj/kernel.asm	/^c01054b1:	29 c8                	sub    %ecx,%eax$/;"	l
c01054b3	obj/kernel.asm	/^c01054b3:	19 da                	sbb    %ebx,%edx$/;"	l
c01054b5	obj/kernel.asm	/^c01054b5:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c01054b9	obj/kernel.asm	/^c01054b9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01054bc	obj/kernel.asm	/^c01054bc:	89 c3                	mov    %eax,%ebx$/;"	l
c01054be	obj/kernel.asm	/^c01054be:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01054c1	obj/kernel.asm	/^c01054c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01054c4	obj/kernel.asm	/^c01054c4:	e8 8c f8 ff ff       	call   c0104d55 <pa2page>$/;"	l
c01054c9	obj/kernel.asm	/^c01054c9:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c01054cd	obj/kernel.asm	/^c01054cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01054d0	obj/kernel.asm	/^c01054d0:	e8 55 fb ff ff       	call   c010502a <init_memmap>$/;"	l
c01054d5	obj/kernel.asm	/^c01054d5:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c01054d9	obj/kernel.asm	/^c01054d9:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01054dc	obj/kernel.asm	/^c01054dc:	8b 00                	mov    (%eax),%eax$/;"	l
c01054de	obj/kernel.asm	/^c01054de:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01054e1	obj/kernel.asm	/^c01054e1:	0f 8f 7e fe ff ff    	jg     c0105365 <page_init+0x254>$/;"	l
c01054e7	obj/kernel.asm	/^c01054e7:	81 c4 9c 00 00 00    	add    $0x9c,%esp$/;"	l
c01054ed	obj/kernel.asm	/^c01054ed:	5b                   	pop    %ebx$/;"	l
c01054ee	obj/kernel.asm	/^c01054ee:	5e                   	pop    %esi$/;"	l
c01054ef	obj/kernel.asm	/^c01054ef:	5f                   	pop    %edi$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	5d                   	pop    %ebp$/;"	l
c01054f1	obj/kernel.asm	/^c01054f1:	c3                   	ret    $/;"	l
c01054f2	obj/kernel.asm	/^c01054f2 <enable_paging>:$/;"	l
c01054f2	obj/kernel.asm	/^c01054f2:	55                   	push   %ebp$/;"	l
c01054f3	obj/kernel.asm	/^c01054f3:	89 e5                	mov    %esp,%ebp$/;"	l
c01054f5	obj/kernel.asm	/^c01054f5:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01054f8	obj/kernel.asm	/^c01054f8:	a1 c8 ef 19 c0       	mov    0xc019efc8,%eax$/;"	l
c01054fd	obj/kernel.asm	/^c01054fd:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0105500	obj/kernel.asm	/^c0105500:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0105503	obj/kernel.asm	/^c0105503:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0105506	obj/kernel.asm	/^c0105506:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0105509	obj/kernel.asm	/^c0105509:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010550c	obj/kernel.asm	/^c010550c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010550f	obj/kernel.asm	/^c010550f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0105512	obj/kernel.asm	/^c0105512:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0105519	obj/kernel.asm	/^c0105519:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c010551d	obj/kernel.asm	/^c010551d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0105520	obj/kernel.asm	/^c0105520:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105523	obj/kernel.asm	/^c0105523:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105526	obj/kernel.asm	/^c0105526:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0105529	obj/kernel.asm	/^c0105529:	c9                   	leave  $/;"	l
c010552a	obj/kernel.asm	/^c010552a:	c3                   	ret    $/;"	l
c010552b	obj/kernel.asm	/^c010552b <boot_map_segment>:$/;"	l
c010552b	obj/kernel.asm	/^c010552b:	55                   	push   %ebp$/;"	l
c010552c	obj/kernel.asm	/^c010552c:	89 e5                	mov    %esp,%ebp$/;"	l
c010552e	obj/kernel.asm	/^c010552e:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0105531	obj/kernel.asm	/^c0105531:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105534	obj/kernel.asm	/^c0105534:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105537	obj/kernel.asm	/^c0105537:	31 d0                	xor    %edx,%eax$/;"	l
c0105539	obj/kernel.asm	/^c0105539:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010553e	obj/kernel.asm	/^c010553e:	85 c0                	test   %eax,%eax$/;"	l
c0105540	obj/kernel.asm	/^c0105540:	74 24                	je     c0105566 <boot_map_segment+0x3b>$/;"	l
c0105542	obj/kernel.asm	/^c0105542:	c7 44 24 0c e2 ca 10 	movl   $0xc010cae2,0xc(%esp)$/;"	l
c0105549	obj/kernel.asm	/^c0105549:	c0 $/;"	l
c010554a	obj/kernel.asm	/^c010554a:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105551	obj/kernel.asm	/^c0105551:	c0 $/;"	l
c0105552	obj/kernel.asm	/^c0105552:	c7 44 24 04 12 01 00 	movl   $0x112,0x4(%esp)$/;"	l
c0105559	obj/kernel.asm	/^c0105559:	00 $/;"	l
c010555a	obj/kernel.asm	/^c010555a:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105561	obj/kernel.asm	/^c0105561:	e8 6f b8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105566	obj/kernel.asm	/^c0105566:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c010556d	obj/kernel.asm	/^c010556d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105570	obj/kernel.asm	/^c0105570:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105575	obj/kernel.asm	/^c0105575:	89 c2                	mov    %eax,%edx$/;"	l
c0105577	obj/kernel.asm	/^c0105577:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010557a	obj/kernel.asm	/^c010557a:	01 c2                	add    %eax,%edx$/;"	l
c010557c	obj/kernel.asm	/^c010557c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010557f	obj/kernel.asm	/^c010557f:	01 d0                	add    %edx,%eax$/;"	l
c0105581	obj/kernel.asm	/^c0105581:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0105584	obj/kernel.asm	/^c0105584:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105587	obj/kernel.asm	/^c0105587:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010558a	obj/kernel.asm	/^c010558a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010558f	obj/kernel.asm	/^c010558f:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c0105592	obj/kernel.asm	/^c0105592:	89 d0                	mov    %edx,%eax$/;"	l
c0105594	obj/kernel.asm	/^c0105594:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0105597	obj/kernel.asm	/^c0105597:	29 c2                	sub    %eax,%edx$/;"	l
c0105599	obj/kernel.asm	/^c0105599:	89 d0                	mov    %edx,%eax$/;"	l
c010559b	obj/kernel.asm	/^c010559b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010559e	obj/kernel.asm	/^c010559e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01055a1	obj/kernel.asm	/^c01055a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01055a4	obj/kernel.asm	/^c01055a4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01055a7	obj/kernel.asm	/^c01055a7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01055aa	obj/kernel.asm	/^c01055aa:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01055af	obj/kernel.asm	/^c01055af:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c01055b2	obj/kernel.asm	/^c01055b2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01055b5	obj/kernel.asm	/^c01055b5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01055b8	obj/kernel.asm	/^c01055b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01055bb	obj/kernel.asm	/^c01055bb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01055c0	obj/kernel.asm	/^c01055c0:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c01055c3	obj/kernel.asm	/^c01055c3:	eb 6b                	jmp    c0105630 <boot_map_segment+0x105>$/;"	l
c01055c5	obj/kernel.asm	/^c01055c5:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01055cc	obj/kernel.asm	/^c01055cc:	00 $/;"	l
c01055cd	obj/kernel.asm	/^c01055cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01055d0	obj/kernel.asm	/^c01055d0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01055d4	obj/kernel.asm	/^c01055d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055d7	obj/kernel.asm	/^c01055d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01055da	obj/kernel.asm	/^c01055da:	e8 d1 01 00 00       	call   c01057b0 <get_pte>$/;"	l
c01055df	obj/kernel.asm	/^c01055df:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01055e2	obj/kernel.asm	/^c01055e2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01055e6	obj/kernel.asm	/^c01055e6:	75 24                	jne    c010560c <boot_map_segment+0xe1>$/;"	l
c01055e8	obj/kernel.asm	/^c01055e8:	c7 44 24 0c 0e cb 10 	movl   $0xc010cb0e,0xc(%esp)$/;"	l
c01055ef	obj/kernel.asm	/^c01055ef:	c0 $/;"	l
c01055f0	obj/kernel.asm	/^c01055f0:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01055f7	obj/kernel.asm	/^c01055f7:	c0 $/;"	l
c01055f8	obj/kernel.asm	/^c01055f8:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
c01055ff	obj/kernel.asm	/^c01055ff:	00 $/;"	l
c0105600	obj/kernel.asm	/^c0105600:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105607	obj/kernel.asm	/^c0105607:	e8 c9 b7 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010560c	obj/kernel.asm	/^c010560c:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010560f	obj/kernel.asm	/^c010560f:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0105612	obj/kernel.asm	/^c0105612:	09 d0                	or     %edx,%eax$/;"	l
c0105614	obj/kernel.asm	/^c0105614:	83 c8 01             	or     $0x1,%eax$/;"	l
c0105617	obj/kernel.asm	/^c0105617:	89 c2                	mov    %eax,%edx$/;"	l
c0105619	obj/kernel.asm	/^c0105619:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010561c	obj/kernel.asm	/^c010561c:	89 10                	mov    %edx,(%eax)$/;"	l
c010561e	obj/kernel.asm	/^c010561e:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105622	obj/kernel.asm	/^c0105622:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0105629	obj/kernel.asm	/^c0105629:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c0105630	obj/kernel.asm	/^c0105630:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105634	obj/kernel.asm	/^c0105634:	75 8f                	jne    c01055c5 <boot_map_segment+0x9a>$/;"	l
c0105636	obj/kernel.asm	/^c0105636:	c9                   	leave  $/;"	l
c0105637	obj/kernel.asm	/^c0105637:	c3                   	ret    $/;"	l
c0105638	obj/kernel.asm	/^c0105638 <boot_alloc_page>:$/;"	l
c0105638	obj/kernel.asm	/^c0105638:	55                   	push   %ebp$/;"	l
c0105639	obj/kernel.asm	/^c0105639:	89 e5                	mov    %esp,%ebp$/;"	l
c010563b	obj/kernel.asm	/^c010563b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010563e	obj/kernel.asm	/^c010563e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105645	obj/kernel.asm	/^c0105645:	e8 ff f9 ff ff       	call   c0105049 <alloc_pages>$/;"	l
c010564a	obj/kernel.asm	/^c010564a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010564d	obj/kernel.asm	/^c010564d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105651	obj/kernel.asm	/^c0105651:	75 1c                	jne    c010566f <boot_alloc_page+0x37>$/;"	l
c0105653	obj/kernel.asm	/^c0105653:	c7 44 24 08 1b cb 10 	movl   $0xc010cb1b,0x8(%esp)$/;"	l
c010565a	obj/kernel.asm	/^c010565a:	c0 $/;"	l
c010565b	obj/kernel.asm	/^c010565b:	c7 44 24 04 24 01 00 	movl   $0x124,0x4(%esp)$/;"	l
c0105662	obj/kernel.asm	/^c0105662:	00 $/;"	l
c0105663	obj/kernel.asm	/^c0105663:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010566a	obj/kernel.asm	/^c010566a:	e8 66 b7 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010566f	obj/kernel.asm	/^c010566f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105672	obj/kernel.asm	/^c0105672:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105675	obj/kernel.asm	/^c0105675:	e8 20 f7 ff ff       	call   c0104d9a <page2kva>$/;"	l
c010567a	obj/kernel.asm	/^c010567a:	c9                   	leave  $/;"	l
c010567b	obj/kernel.asm	/^c010567b:	c3                   	ret    $/;"	l
c010567c	obj/kernel.asm	/^c010567c <pmm_init>:$/;"	l
c010567c	obj/kernel.asm	/^c010567c:	55                   	push   %ebp$/;"	l
c010567d	obj/kernel.asm	/^c010567d:	89 e5                	mov    %esp,%ebp$/;"	l
c010567f	obj/kernel.asm	/^c010567f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0105682	obj/kernel.asm	/^c0105682:	e8 70 f9 ff ff       	call   c0104ff7 <init_pmm_manager>$/;"	l
c0105687	obj/kernel.asm	/^c0105687:	e8 85 fa ff ff       	call   c0105111 <page_init>$/;"	l
c010568c	obj/kernel.asm	/^c010568c:	e8 04 09 00 00       	call   c0105f95 <check_alloc_page>$/;"	l
c0105691	obj/kernel.asm	/^c0105691:	e8 a2 ff ff ff       	call   c0105638 <boot_alloc_page>$/;"	l
c0105696	obj/kernel.asm	/^c0105696:	a3 e4 ce 19 c0       	mov    %eax,0xc019cee4$/;"	l
c010569b	obj/kernel.asm	/^c010569b:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01056a0	obj/kernel.asm	/^c01056a0:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01056a7	obj/kernel.asm	/^c01056a7:	00 $/;"	l
c01056a8	obj/kernel.asm	/^c01056a8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01056af	obj/kernel.asm	/^c01056af:	00 $/;"	l
c01056b0	obj/kernel.asm	/^c01056b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01056b3	obj/kernel.asm	/^c01056b3:	e8 13 64 00 00       	call   c010bacb <memset>$/;"	l
c01056b8	obj/kernel.asm	/^c01056b8:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01056bd	obj/kernel.asm	/^c01056bd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01056c0	obj/kernel.asm	/^c01056c0:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c01056c7	obj/kernel.asm	/^c01056c7:	77 23                	ja     c01056ec <pmm_init+0x70>$/;"	l
c01056c9	obj/kernel.asm	/^c01056c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01056cc	obj/kernel.asm	/^c01056cc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01056d0	obj/kernel.asm	/^c01056d0:	c7 44 24 08 b0 ca 10 	movl   $0xc010cab0,0x8(%esp)$/;"	l
c01056d7	obj/kernel.asm	/^c01056d7:	c0 $/;"	l
c01056d8	obj/kernel.asm	/^c01056d8:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
c01056df	obj/kernel.asm	/^c01056df:	00 $/;"	l
c01056e0	obj/kernel.asm	/^c01056e0:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01056e7	obj/kernel.asm	/^c01056e7:	e8 e9 b6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01056ec	obj/kernel.asm	/^c01056ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01056ef	obj/kernel.asm	/^c01056ef:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01056f4	obj/kernel.asm	/^c01056f4:	a3 c8 ef 19 c0       	mov    %eax,0xc019efc8$/;"	l
c01056f9	obj/kernel.asm	/^c01056f9:	e8 b5 08 00 00       	call   c0105fb3 <check_pgdir>$/;"	l
c01056fe	obj/kernel.asm	/^c01056fe:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0105703	obj/kernel.asm	/^c0105703:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0105709	obj/kernel.asm	/^c0105709:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010570e	obj/kernel.asm	/^c010570e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105711	obj/kernel.asm	/^c0105711:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0105718	obj/kernel.asm	/^c0105718:	77 23                	ja     c010573d <pmm_init+0xc1>$/;"	l
c010571a	obj/kernel.asm	/^c010571a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010571d	obj/kernel.asm	/^c010571d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105721	obj/kernel.asm	/^c0105721:	c7 44 24 08 b0 ca 10 	movl   $0xc010cab0,0x8(%esp)$/;"	l
c0105728	obj/kernel.asm	/^c0105728:	c0 $/;"	l
c0105729	obj/kernel.asm	/^c0105729:	c7 44 24 04 46 01 00 	movl   $0x146,0x4(%esp)$/;"	l
c0105730	obj/kernel.asm	/^c0105730:	00 $/;"	l
c0105731	obj/kernel.asm	/^c0105731:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105738	obj/kernel.asm	/^c0105738:	e8 98 b6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010573d	obj/kernel.asm	/^c010573d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105740	obj/kernel.asm	/^c0105740:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105745	obj/kernel.asm	/^c0105745:	83 c8 03             	or     $0x3,%eax$/;"	l
c0105748	obj/kernel.asm	/^c0105748:	89 02                	mov    %eax,(%edx)$/;"	l
c010574a	obj/kernel.asm	/^c010574a:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010574f	obj/kernel.asm	/^c010574f:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)$/;"	l
c0105756	obj/kernel.asm	/^c0105756:	00 $/;"	l
c0105757	obj/kernel.asm	/^c0105757:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010575e	obj/kernel.asm	/^c010575e:	00 $/;"	l
c010575f	obj/kernel.asm	/^c010575f:	c7 44 24 08 00 00 00 	movl   $0x38000000,0x8(%esp)$/;"	l
c0105766	obj/kernel.asm	/^c0105766:	38 $/;"	l
c0105767	obj/kernel.asm	/^c0105767:	c7 44 24 04 00 00 00 	movl   $0xc0000000,0x4(%esp)$/;"	l
c010576e	obj/kernel.asm	/^c010576e:	c0 $/;"	l
c010576f	obj/kernel.asm	/^c010576f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105772	obj/kernel.asm	/^c0105772:	e8 b4 fd ff ff       	call   c010552b <boot_map_segment>$/;"	l
c0105777	obj/kernel.asm	/^c0105777:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010577c	obj/kernel.asm	/^c010577c:	8b 15 e4 ce 19 c0    	mov    0xc019cee4,%edx$/;"	l
c0105782	obj/kernel.asm	/^c0105782:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c0105788	obj/kernel.asm	/^c0105788:	89 10                	mov    %edx,(%eax)$/;"	l
c010578a	obj/kernel.asm	/^c010578a:	e8 63 fd ff ff       	call   c01054f2 <enable_paging>$/;"	l
c010578f	obj/kernel.asm	/^c010578f:	e8 74 f7 ff ff       	call   c0104f08 <gdt_init>$/;"	l
c0105794	obj/kernel.asm	/^c0105794:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0105799	obj/kernel.asm	/^c0105799:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010579f	obj/kernel.asm	/^c010579f:	e8 aa 0e 00 00       	call   c010664e <check_boot_pgdir>$/;"	l
c01057a4	obj/kernel.asm	/^c01057a4:	e8 37 13 00 00       	call   c0106ae0 <print_pgdir>$/;"	l
c01057a9	obj/kernel.asm	/^c01057a9:	e8 e6 f2 ff ff       	call   c0104a94 <kmalloc_init>$/;"	l
c01057ae	obj/kernel.asm	/^c01057ae:	c9                   	leave  $/;"	l
c01057af	obj/kernel.asm	/^c01057af:	c3                   	ret    $/;"	l
c01057b0	obj/kernel.asm	/^c01057b0 <get_pte>:$/;"	l
c01057b0	obj/kernel.asm	/^c01057b0:	55                   	push   %ebp$/;"	l
c01057b1	obj/kernel.asm	/^c01057b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01057b3	obj/kernel.asm	/^c01057b3:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01057b6	obj/kernel.asm	/^c01057b6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01057b9	obj/kernel.asm	/^c01057b9:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c01057bc	obj/kernel.asm	/^c01057bc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01057c3	obj/kernel.asm	/^c01057c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01057c6	obj/kernel.asm	/^c01057c6:	01 d0                	add    %edx,%eax$/;"	l
c01057c8	obj/kernel.asm	/^c01057c8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01057cb	obj/kernel.asm	/^c01057cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057ce	obj/kernel.asm	/^c01057ce:	8b 00                	mov    (%eax),%eax$/;"	l
c01057d0	obj/kernel.asm	/^c01057d0:	83 e0 01             	and    $0x1,%eax$/;"	l
c01057d3	obj/kernel.asm	/^c01057d3:	85 c0                	test   %eax,%eax$/;"	l
c01057d5	obj/kernel.asm	/^c01057d5:	0f 85 af 00 00 00    	jne    c010588a <get_pte+0xda>$/;"	l
c01057db	obj/kernel.asm	/^c01057db:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01057df	obj/kernel.asm	/^c01057df:	74 15                	je     c01057f6 <get_pte+0x46>$/;"	l
c01057e1	obj/kernel.asm	/^c01057e1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01057e8	obj/kernel.asm	/^c01057e8:	e8 5c f8 ff ff       	call   c0105049 <alloc_pages>$/;"	l
c01057ed	obj/kernel.asm	/^c01057ed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01057f0	obj/kernel.asm	/^c01057f0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01057f4	obj/kernel.asm	/^c01057f4:	75 0a                	jne    c0105800 <get_pte+0x50>$/;"	l
c01057f6	obj/kernel.asm	/^c01057f6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01057fb	obj/kernel.asm	/^c01057fb:	e9 e6 00 00 00       	jmp    c01058e6 <get_pte+0x136>$/;"	l
c0105800	obj/kernel.asm	/^c0105800:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105807	obj/kernel.asm	/^c0105807:	00 $/;"	l
c0105808	obj/kernel.asm	/^c0105808:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010580b	obj/kernel.asm	/^c010580b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010580e	obj/kernel.asm	/^c010580e:	e8 3b f6 ff ff       	call   c0104e4e <set_page_ref>$/;"	l
c0105813	obj/kernel.asm	/^c0105813:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105816	obj/kernel.asm	/^c0105816:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105819	obj/kernel.asm	/^c0105819:	e8 21 f5 ff ff       	call   c0104d3f <page2pa>$/;"	l
c010581e	obj/kernel.asm	/^c010581e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105821	obj/kernel.asm	/^c0105821:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105824	obj/kernel.asm	/^c0105824:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105827	obj/kernel.asm	/^c0105827:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010582a	obj/kernel.asm	/^c010582a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010582d	obj/kernel.asm	/^c010582d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105830	obj/kernel.asm	/^c0105830:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0105835	obj/kernel.asm	/^c0105835:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0105838	obj/kernel.asm	/^c0105838:	72 23                	jb     c010585d <get_pte+0xad>$/;"	l
c010583a	obj/kernel.asm	/^c010583a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010583d	obj/kernel.asm	/^c010583d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105841	obj/kernel.asm	/^c0105841:	c7 44 24 08 0c ca 10 	movl   $0xc010ca0c,0x8(%esp)$/;"	l
c0105848	obj/kernel.asm	/^c0105848:	c0 $/;"	l
c0105849	obj/kernel.asm	/^c0105849:	c7 44 24 04 97 01 00 	movl   $0x197,0x4(%esp)$/;"	l
c0105850	obj/kernel.asm	/^c0105850:	00 $/;"	l
c0105851	obj/kernel.asm	/^c0105851:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105858	obj/kernel.asm	/^c0105858:	e8 78 b5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010585d	obj/kernel.asm	/^c010585d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105860	obj/kernel.asm	/^c0105860:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0105865	obj/kernel.asm	/^c0105865:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c010586c	obj/kernel.asm	/^c010586c:	00 $/;"	l
c010586d	obj/kernel.asm	/^c010586d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0105874	obj/kernel.asm	/^c0105874:	00 $/;"	l
c0105875	obj/kernel.asm	/^c0105875:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105878	obj/kernel.asm	/^c0105878:	e8 4e 62 00 00       	call   c010bacb <memset>$/;"	l
c010587d	obj/kernel.asm	/^c010587d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105880	obj/kernel.asm	/^c0105880:	83 c8 07             	or     $0x7,%eax$/;"	l
c0105883	obj/kernel.asm	/^c0105883:	89 c2                	mov    %eax,%edx$/;"	l
c0105885	obj/kernel.asm	/^c0105885:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105888	obj/kernel.asm	/^c0105888:	89 10                	mov    %edx,(%eax)$/;"	l
c010588a	obj/kernel.asm	/^c010588a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010588d	obj/kernel.asm	/^c010588d:	8b 00                	mov    (%eax),%eax$/;"	l
c010588f	obj/kernel.asm	/^c010588f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105894	obj/kernel.asm	/^c0105894:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105897	obj/kernel.asm	/^c0105897:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010589a	obj/kernel.asm	/^c010589a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010589d	obj/kernel.asm	/^c010589d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01058a0	obj/kernel.asm	/^c01058a0:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c01058a5	obj/kernel.asm	/^c01058a5:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c01058a8	obj/kernel.asm	/^c01058a8:	72 23                	jb     c01058cd <get_pte+0x11d>$/;"	l
c01058aa	obj/kernel.asm	/^c01058aa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01058ad	obj/kernel.asm	/^c01058ad:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01058b1	obj/kernel.asm	/^c01058b1:	c7 44 24 08 0c ca 10 	movl   $0xc010ca0c,0x8(%esp)$/;"	l
c01058b8	obj/kernel.asm	/^c01058b8:	c0 $/;"	l
c01058b9	obj/kernel.asm	/^c01058b9:	c7 44 24 04 9b 01 00 	movl   $0x19b,0x4(%esp)$/;"	l
c01058c0	obj/kernel.asm	/^c01058c0:	00 $/;"	l
c01058c1	obj/kernel.asm	/^c01058c1:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01058c8	obj/kernel.asm	/^c01058c8:	e8 08 b5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01058cd	obj/kernel.asm	/^c01058cd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01058d0	obj/kernel.asm	/^c01058d0:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01058d5	obj/kernel.asm	/^c01058d5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01058d8	obj/kernel.asm	/^c01058d8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01058db	obj/kernel.asm	/^c01058db:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
c01058e1	obj/kernel.asm	/^c01058e1:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01058e4	obj/kernel.asm	/^c01058e4:	01 d0                	add    %edx,%eax$/;"	l
c01058e6	obj/kernel.asm	/^c01058e6:	c9                   	leave  $/;"	l
c01058e7	obj/kernel.asm	/^c01058e7:	c3                   	ret    $/;"	l
c01058e8	obj/kernel.asm	/^c01058e8 <get_page>:$/;"	l
c01058e8	obj/kernel.asm	/^c01058e8:	55                   	push   %ebp$/;"	l
c01058e9	obj/kernel.asm	/^c01058e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01058eb	obj/kernel.asm	/^c01058eb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01058ee	obj/kernel.asm	/^c01058ee:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01058f5	obj/kernel.asm	/^c01058f5:	00 $/;"	l
c01058f6	obj/kernel.asm	/^c01058f6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01058f9	obj/kernel.asm	/^c01058f9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01058fd	obj/kernel.asm	/^c01058fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105900	obj/kernel.asm	/^c0105900:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105903	obj/kernel.asm	/^c0105903:	e8 a8 fe ff ff       	call   c01057b0 <get_pte>$/;"	l
c0105908	obj/kernel.asm	/^c0105908:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010590b	obj/kernel.asm	/^c010590b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010590f	obj/kernel.asm	/^c010590f:	74 08                	je     c0105919 <get_page+0x31>$/;"	l
c0105911	obj/kernel.asm	/^c0105911:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105914	obj/kernel.asm	/^c0105914:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105917	obj/kernel.asm	/^c0105917:	89 10                	mov    %edx,(%eax)$/;"	l
c0105919	obj/kernel.asm	/^c0105919:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010591d	obj/kernel.asm	/^c010591d:	74 1b                	je     c010593a <get_page+0x52>$/;"	l
c010591f	obj/kernel.asm	/^c010591f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105922	obj/kernel.asm	/^c0105922:	8b 00                	mov    (%eax),%eax$/;"	l
c0105924	obj/kernel.asm	/^c0105924:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105927	obj/kernel.asm	/^c0105927:	85 c0                	test   %eax,%eax$/;"	l
c0105929	obj/kernel.asm	/^c0105929:	74 0f                	je     c010593a <get_page+0x52>$/;"	l
c010592b	obj/kernel.asm	/^c010592b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010592e	obj/kernel.asm	/^c010592e:	8b 00                	mov    (%eax),%eax$/;"	l
c0105930	obj/kernel.asm	/^c0105930:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105933	obj/kernel.asm	/^c0105933:	e8 1d f4 ff ff       	call   c0104d55 <pa2page>$/;"	l
c0105938	obj/kernel.asm	/^c0105938:	eb 05                	jmp    c010593f <get_page+0x57>$/;"	l
c010593a	obj/kernel.asm	/^c010593a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010593f	obj/kernel.asm	/^c010593f:	c9                   	leave  $/;"	l
c0105940	obj/kernel.asm	/^c0105940:	c3                   	ret    $/;"	l
c0105941	obj/kernel.asm	/^c0105941 <page_remove_pte>:$/;"	l
c0105941	obj/kernel.asm	/^c0105941:	55                   	push   %ebp$/;"	l
c0105942	obj/kernel.asm	/^c0105942:	89 e5                	mov    %esp,%ebp$/;"	l
c0105944	obj/kernel.asm	/^c0105944:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105947	obj/kernel.asm	/^c0105947:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010594a	obj/kernel.asm	/^c010594a:	8b 00                	mov    (%eax),%eax$/;"	l
c010594c	obj/kernel.asm	/^c010594c:	83 e0 01             	and    $0x1,%eax$/;"	l
c010594f	obj/kernel.asm	/^c010594f:	85 c0                	test   %eax,%eax$/;"	l
c0105951	obj/kernel.asm	/^c0105951:	74 4d                	je     c01059a0 <page_remove_pte+0x5f>$/;"	l
c0105953	obj/kernel.asm	/^c0105953:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105956	obj/kernel.asm	/^c0105956:	8b 00                	mov    (%eax),%eax$/;"	l
c0105958	obj/kernel.asm	/^c0105958:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010595b	obj/kernel.asm	/^c010595b:	e8 8e f4 ff ff       	call   c0104dee <pte2page>$/;"	l
c0105960	obj/kernel.asm	/^c0105960:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105963	obj/kernel.asm	/^c0105963:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105966	obj/kernel.asm	/^c0105966:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105969	obj/kernel.asm	/^c0105969:	e8 04 f5 ff ff       	call   c0104e72 <page_ref_dec>$/;"	l
c010596e	obj/kernel.asm	/^c010596e:	85 c0                	test   %eax,%eax$/;"	l
c0105970	obj/kernel.asm	/^c0105970:	75 13                	jne    c0105985 <page_remove_pte+0x44>$/;"	l
c0105972	obj/kernel.asm	/^c0105972:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105979	obj/kernel.asm	/^c0105979:	00 $/;"	l
c010597a	obj/kernel.asm	/^c010597a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010597d	obj/kernel.asm	/^c010597d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105980	obj/kernel.asm	/^c0105980:	e8 2f f7 ff ff       	call   c01050b4 <free_pages>$/;"	l
c0105985	obj/kernel.asm	/^c0105985:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105988	obj/kernel.asm	/^c0105988:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010598e	obj/kernel.asm	/^c010598e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105991	obj/kernel.asm	/^c0105991:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105995	obj/kernel.asm	/^c0105995:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105998	obj/kernel.asm	/^c0105998:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010599b	obj/kernel.asm	/^c010599b:	e8 c4 04 00 00       	call   c0105e64 <tlb_invalidate>$/;"	l
c01059a0	obj/kernel.asm	/^c01059a0:	c9                   	leave  $/;"	l
c01059a1	obj/kernel.asm	/^c01059a1:	c3                   	ret    $/;"	l
c01059a2	obj/kernel.asm	/^c01059a2 <unmap_range>:$/;"	l
c01059a2	obj/kernel.asm	/^c01059a2:	55                   	push   %ebp$/;"	l
c01059a3	obj/kernel.asm	/^c01059a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01059a5	obj/kernel.asm	/^c01059a5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01059a8	obj/kernel.asm	/^c01059a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01059ab	obj/kernel.asm	/^c01059ab:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01059b0	obj/kernel.asm	/^c01059b0:	85 c0                	test   %eax,%eax$/;"	l
c01059b2	obj/kernel.asm	/^c01059b2:	75 0c                	jne    c01059c0 <unmap_range+0x1e>$/;"	l
c01059b4	obj/kernel.asm	/^c01059b4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01059b7	obj/kernel.asm	/^c01059b7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01059bc	obj/kernel.asm	/^c01059bc:	85 c0                	test   %eax,%eax$/;"	l
c01059be	obj/kernel.asm	/^c01059be:	74 24                	je     c01059e4 <unmap_range+0x42>$/;"	l
c01059c0	obj/kernel.asm	/^c01059c0:	c7 44 24 0c 34 cb 10 	movl   $0xc010cb34,0xc(%esp)$/;"	l
c01059c7	obj/kernel.asm	/^c01059c7:	c0 $/;"	l
c01059c8	obj/kernel.asm	/^c01059c8:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01059cf	obj/kernel.asm	/^c01059cf:	c0 $/;"	l
c01059d0	obj/kernel.asm	/^c01059d0:	c7 44 24 04 d5 01 00 	movl   $0x1d5,0x4(%esp)$/;"	l
c01059d7	obj/kernel.asm	/^c01059d7:	00 $/;"	l
c01059d8	obj/kernel.asm	/^c01059d8:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01059df	obj/kernel.asm	/^c01059df:	e8 f1 b3 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01059e4	obj/kernel.asm	/^c01059e4:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c01059eb	obj/kernel.asm	/^c01059eb:	76 11                	jbe    c01059fe <unmap_range+0x5c>$/;"	l
c01059ed	obj/kernel.asm	/^c01059ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01059f0	obj/kernel.asm	/^c01059f0:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01059f3	obj/kernel.asm	/^c01059f3:	73 09                	jae    c01059fe <unmap_range+0x5c>$/;"	l
c01059f5	obj/kernel.asm	/^c01059f5:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c01059fc	obj/kernel.asm	/^c01059fc:	76 24                	jbe    c0105a22 <unmap_range+0x80>$/;"	l
c01059fe	obj/kernel.asm	/^c01059fe:	c7 44 24 0c 5d cb 10 	movl   $0xc010cb5d,0xc(%esp)$/;"	l
c0105a05	obj/kernel.asm	/^c0105a05:	c0 $/;"	l
c0105a06	obj/kernel.asm	/^c0105a06:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105a0d	obj/kernel.asm	/^c0105a0d:	c0 $/;"	l
c0105a0e	obj/kernel.asm	/^c0105a0e:	c7 44 24 04 d6 01 00 	movl   $0x1d6,0x4(%esp)$/;"	l
c0105a15	obj/kernel.asm	/^c0105a15:	00 $/;"	l
c0105a16	obj/kernel.asm	/^c0105a16:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105a1d	obj/kernel.asm	/^c0105a1d:	e8 b3 b3 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105a22	obj/kernel.asm	/^c0105a22:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105a29	obj/kernel.asm	/^c0105a29:	00 $/;"	l
c0105a2a	obj/kernel.asm	/^c0105a2a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a2d	obj/kernel.asm	/^c0105a2d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105a31	obj/kernel.asm	/^c0105a31:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105a34	obj/kernel.asm	/^c0105a34:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a37	obj/kernel.asm	/^c0105a37:	e8 74 fd ff ff       	call   c01057b0 <get_pte>$/;"	l
c0105a3c	obj/kernel.asm	/^c0105a3c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a3f	obj/kernel.asm	/^c0105a3f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105a43	obj/kernel.asm	/^c0105a43:	75 18                	jne    c0105a5d <unmap_range+0xbb>$/;"	l
c0105a45	obj/kernel.asm	/^c0105a45:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a48	obj/kernel.asm	/^c0105a48:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105a4d	obj/kernel.asm	/^c0105a4d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105a50	obj/kernel.asm	/^c0105a50:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105a53	obj/kernel.asm	/^c0105a53:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105a58	obj/kernel.asm	/^c0105a58:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105a5b	obj/kernel.asm	/^c0105a5b:	eb 29                	jmp    c0105a86 <unmap_range+0xe4>$/;"	l
c0105a5d	obj/kernel.asm	/^c0105a5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105a60	obj/kernel.asm	/^c0105a60:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a62	obj/kernel.asm	/^c0105a62:	85 c0                	test   %eax,%eax$/;"	l
c0105a64	obj/kernel.asm	/^c0105a64:	74 19                	je     c0105a7f <unmap_range+0xdd>$/;"	l
c0105a66	obj/kernel.asm	/^c0105a66:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105a69	obj/kernel.asm	/^c0105a69:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105a6d	obj/kernel.asm	/^c0105a6d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a70	obj/kernel.asm	/^c0105a70:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105a74	obj/kernel.asm	/^c0105a74:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105a77	obj/kernel.asm	/^c0105a77:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a7a	obj/kernel.asm	/^c0105a7a:	e8 c2 fe ff ff       	call   c0105941 <page_remove_pte>$/;"	l
c0105a7f	obj/kernel.asm	/^c0105a7f:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0105a86	obj/kernel.asm	/^c0105a86:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105a8a	obj/kernel.asm	/^c0105a8a:	74 08                	je     c0105a94 <unmap_range+0xf2>$/;"	l
c0105a8c	obj/kernel.asm	/^c0105a8c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a8f	obj/kernel.asm	/^c0105a8f:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105a92	obj/kernel.asm	/^c0105a92:	72 8e                	jb     c0105a22 <unmap_range+0x80>$/;"	l
c0105a94	obj/kernel.asm	/^c0105a94:	c9                   	leave  $/;"	l
c0105a95	obj/kernel.asm	/^c0105a95:	c3                   	ret    $/;"	l
c0105a96	obj/kernel.asm	/^c0105a96 <exit_range>:$/;"	l
c0105a96	obj/kernel.asm	/^c0105a96:	55                   	push   %ebp$/;"	l
c0105a97	obj/kernel.asm	/^c0105a97:	89 e5                	mov    %esp,%ebp$/;"	l
c0105a99	obj/kernel.asm	/^c0105a99:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105a9c	obj/kernel.asm	/^c0105a9c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a9f	obj/kernel.asm	/^c0105a9f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105aa4	obj/kernel.asm	/^c0105aa4:	85 c0                	test   %eax,%eax$/;"	l
c0105aa6	obj/kernel.asm	/^c0105aa6:	75 0c                	jne    c0105ab4 <exit_range+0x1e>$/;"	l
c0105aa8	obj/kernel.asm	/^c0105aa8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105aab	obj/kernel.asm	/^c0105aab:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105ab0	obj/kernel.asm	/^c0105ab0:	85 c0                	test   %eax,%eax$/;"	l
c0105ab2	obj/kernel.asm	/^c0105ab2:	74 24                	je     c0105ad8 <exit_range+0x42>$/;"	l
c0105ab4	obj/kernel.asm	/^c0105ab4:	c7 44 24 0c 34 cb 10 	movl   $0xc010cb34,0xc(%esp)$/;"	l
c0105abb	obj/kernel.asm	/^c0105abb:	c0 $/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105ac3	obj/kernel.asm	/^c0105ac3:	c0 $/;"	l
c0105ac4	obj/kernel.asm	/^c0105ac4:	c7 44 24 04 e7 01 00 	movl   $0x1e7,0x4(%esp)$/;"	l
c0105acb	obj/kernel.asm	/^c0105acb:	00 $/;"	l
c0105acc	obj/kernel.asm	/^c0105acc:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105ad3	obj/kernel.asm	/^c0105ad3:	e8 fd b2 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105ad8	obj/kernel.asm	/^c0105ad8:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0105adf	obj/kernel.asm	/^c0105adf:	76 11                	jbe    c0105af2 <exit_range+0x5c>$/;"	l
c0105ae1	obj/kernel.asm	/^c0105ae1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105ae4	obj/kernel.asm	/^c0105ae4:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105ae7	obj/kernel.asm	/^c0105ae7:	73 09                	jae    c0105af2 <exit_range+0x5c>$/;"	l
c0105ae9	obj/kernel.asm	/^c0105ae9:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0105af0	obj/kernel.asm	/^c0105af0:	76 24                	jbe    c0105b16 <exit_range+0x80>$/;"	l
c0105af2	obj/kernel.asm	/^c0105af2:	c7 44 24 0c 5d cb 10 	movl   $0xc010cb5d,0xc(%esp)$/;"	l
c0105af9	obj/kernel.asm	/^c0105af9:	c0 $/;"	l
c0105afa	obj/kernel.asm	/^c0105afa:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105b01	obj/kernel.asm	/^c0105b01:	c0 $/;"	l
c0105b02	obj/kernel.asm	/^c0105b02:	c7 44 24 04 e8 01 00 	movl   $0x1e8,0x4(%esp)$/;"	l
c0105b09	obj/kernel.asm	/^c0105b09:	00 $/;"	l
c0105b0a	obj/kernel.asm	/^c0105b0a:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105b11	obj/kernel.asm	/^c0105b11:	e8 bf b2 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105b16	obj/kernel.asm	/^c0105b16:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b19	obj/kernel.asm	/^c0105b19:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105b1c	obj/kernel.asm	/^c0105b1c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b1f	obj/kernel.asm	/^c0105b1f:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105b24	obj/kernel.asm	/^c0105b24:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105b27	obj/kernel.asm	/^c0105b27:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b2a	obj/kernel.asm	/^c0105b2a:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0105b2d	obj/kernel.asm	/^c0105b2d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b30	obj/kernel.asm	/^c0105b30:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b33	obj/kernel.asm	/^c0105b33:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105b3a	obj/kernel.asm	/^c0105b3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105b3d	obj/kernel.asm	/^c0105b3d:	01 d0                	add    %edx,%eax$/;"	l
c0105b3f	obj/kernel.asm	/^c0105b3f:	8b 00                	mov    (%eax),%eax$/;"	l
c0105b41	obj/kernel.asm	/^c0105b41:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105b44	obj/kernel.asm	/^c0105b44:	85 c0                	test   %eax,%eax$/;"	l
c0105b46	obj/kernel.asm	/^c0105b46:	74 3e                	je     c0105b86 <exit_range+0xf0>$/;"	l
c0105b48	obj/kernel.asm	/^c0105b48:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b4b	obj/kernel.asm	/^c0105b4b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105b52	obj/kernel.asm	/^c0105b52:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105b55	obj/kernel.asm	/^c0105b55:	01 d0                	add    %edx,%eax$/;"	l
c0105b57	obj/kernel.asm	/^c0105b57:	8b 00                	mov    (%eax),%eax$/;"	l
c0105b59	obj/kernel.asm	/^c0105b59:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105b5c	obj/kernel.asm	/^c0105b5c:	e8 cb f2 ff ff       	call   c0104e2c <pde2page>$/;"	l
c0105b61	obj/kernel.asm	/^c0105b61:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105b68	obj/kernel.asm	/^c0105b68:	00 $/;"	l
c0105b69	obj/kernel.asm	/^c0105b69:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105b6c	obj/kernel.asm	/^c0105b6c:	e8 43 f5 ff ff       	call   c01050b4 <free_pages>$/;"	l
c0105b71	obj/kernel.asm	/^c0105b71:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b74	obj/kernel.asm	/^c0105b74:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105b7b	obj/kernel.asm	/^c0105b7b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105b7e	obj/kernel.asm	/^c0105b7e:	01 d0                	add    %edx,%eax$/;"	l
c0105b80	obj/kernel.asm	/^c0105b80:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105b86	obj/kernel.asm	/^c0105b86:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c0105b8d	obj/kernel.asm	/^c0105b8d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105b91	obj/kernel.asm	/^c0105b91:	74 08                	je     c0105b9b <exit_range+0x105>$/;"	l
c0105b93	obj/kernel.asm	/^c0105b93:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b96	obj/kernel.asm	/^c0105b96:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105b99	obj/kernel.asm	/^c0105b99:	72 8c                	jb     c0105b27 <exit_range+0x91>$/;"	l
c0105b9b	obj/kernel.asm	/^c0105b9b:	c9                   	leave  $/;"	l
c0105b9c	obj/kernel.asm	/^c0105b9c:	c3                   	ret    $/;"	l
c0105b9d	obj/kernel.asm	/^c0105b9d <copy_range>:$/;"	l
c0105b9d	obj/kernel.asm	/^c0105b9d:	55                   	push   %ebp$/;"	l
c0105b9e	obj/kernel.asm	/^c0105b9e:	89 e5                	mov    %esp,%ebp$/;"	l
c0105ba0	obj/kernel.asm	/^c0105ba0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0105ba3	obj/kernel.asm	/^c0105ba3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105ba6	obj/kernel.asm	/^c0105ba6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105bab	obj/kernel.asm	/^c0105bab:	85 c0                	test   %eax,%eax$/;"	l
c0105bad	obj/kernel.asm	/^c0105bad:	75 0c                	jne    c0105bbb <copy_range+0x1e>$/;"	l
c0105baf	obj/kernel.asm	/^c0105baf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105bb2	obj/kernel.asm	/^c0105bb2:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105bb7	obj/kernel.asm	/^c0105bb7:	85 c0                	test   %eax,%eax$/;"	l
c0105bb9	obj/kernel.asm	/^c0105bb9:	74 24                	je     c0105bdf <copy_range+0x42>$/;"	l
c0105bbb	obj/kernel.asm	/^c0105bbb:	c7 44 24 0c 34 cb 10 	movl   $0xc010cb34,0xc(%esp)$/;"	l
c0105bc2	obj/kernel.asm	/^c0105bc2:	c0 $/;"	l
c0105bc3	obj/kernel.asm	/^c0105bc3:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105bca	obj/kernel.asm	/^c0105bca:	c0 $/;"	l
c0105bcb	obj/kernel.asm	/^c0105bcb:	c7 44 24 04 fd 01 00 	movl   $0x1fd,0x4(%esp)$/;"	l
c0105bd2	obj/kernel.asm	/^c0105bd2:	00 $/;"	l
c0105bd3	obj/kernel.asm	/^c0105bd3:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105bda	obj/kernel.asm	/^c0105bda:	e8 f6 b1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105bdf	obj/kernel.asm	/^c0105bdf:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c0105be6	obj/kernel.asm	/^c0105be6:	76 11                	jbe    c0105bf9 <copy_range+0x5c>$/;"	l
c0105be8	obj/kernel.asm	/^c0105be8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105beb	obj/kernel.asm	/^c0105beb:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105bee	obj/kernel.asm	/^c0105bee:	73 09                	jae    c0105bf9 <copy_range+0x5c>$/;"	l
c0105bf0	obj/kernel.asm	/^c0105bf0:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c0105bf7	obj/kernel.asm	/^c0105bf7:	76 24                	jbe    c0105c1d <copy_range+0x80>$/;"	l
c0105bf9	obj/kernel.asm	/^c0105bf9:	c7 44 24 0c 5d cb 10 	movl   $0xc010cb5d,0xc(%esp)$/;"	l
c0105c00	obj/kernel.asm	/^c0105c00:	c0 $/;"	l
c0105c01	obj/kernel.asm	/^c0105c01:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105c08	obj/kernel.asm	/^c0105c08:	c0 $/;"	l
c0105c09	obj/kernel.asm	/^c0105c09:	c7 44 24 04 fe 01 00 	movl   $0x1fe,0x4(%esp)$/;"	l
c0105c10	obj/kernel.asm	/^c0105c10:	00 $/;"	l
c0105c11	obj/kernel.asm	/^c0105c11:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105c18	obj/kernel.asm	/^c0105c18:	e8 b8 b1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105c1d	obj/kernel.asm	/^c0105c1d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105c24	obj/kernel.asm	/^c0105c24:	00 $/;"	l
c0105c25	obj/kernel.asm	/^c0105c25:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105c28	obj/kernel.asm	/^c0105c28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105c2c	obj/kernel.asm	/^c0105c2c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105c2f	obj/kernel.asm	/^c0105c2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c32	obj/kernel.asm	/^c0105c32:	e8 79 fb ff ff       	call   c01057b0 <get_pte>$/;"	l
c0105c37	obj/kernel.asm	/^c0105c37:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105c3a	obj/kernel.asm	/^c0105c3a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105c3e	obj/kernel.asm	/^c0105c3e:	75 1b                	jne    c0105c5b <copy_range+0xbe>$/;"	l
c0105c40	obj/kernel.asm	/^c0105c40:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105c43	obj/kernel.asm	/^c0105c43:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105c48	obj/kernel.asm	/^c0105c48:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105c4b	obj/kernel.asm	/^c0105c4b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105c4e	obj/kernel.asm	/^c0105c4e:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105c53	obj/kernel.asm	/^c0105c53:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0105c56	obj/kernel.asm	/^c0105c56:	e9 f3 00 00 00       	jmp    c0105d4e <copy_range+0x1b1>$/;"	l
c0105c5b	obj/kernel.asm	/^c0105c5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c5e	obj/kernel.asm	/^c0105c5e:	8b 00                	mov    (%eax),%eax$/;"	l
c0105c60	obj/kernel.asm	/^c0105c60:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105c63	obj/kernel.asm	/^c0105c63:	85 c0                	test   %eax,%eax$/;"	l
c0105c65	obj/kernel.asm	/^c0105c65:	0f 84 dc 00 00 00    	je     c0105d47 <copy_range+0x1aa>$/;"	l
c0105c6b	obj/kernel.asm	/^c0105c6b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105c72	obj/kernel.asm	/^c0105c72:	00 $/;"	l
c0105c73	obj/kernel.asm	/^c0105c73:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105c76	obj/kernel.asm	/^c0105c76:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105c7a	obj/kernel.asm	/^c0105c7a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105c7d	obj/kernel.asm	/^c0105c7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c80	obj/kernel.asm	/^c0105c80:	e8 2b fb ff ff       	call   c01057b0 <get_pte>$/;"	l
c0105c85	obj/kernel.asm	/^c0105c85:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105c88	obj/kernel.asm	/^c0105c88:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0105c8c	obj/kernel.asm	/^c0105c8c:	75 0a                	jne    c0105c98 <copy_range+0xfb>$/;"	l
c0105c8e	obj/kernel.asm	/^c0105c8e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105c93	obj/kernel.asm	/^c0105c93:	e9 cd 00 00 00       	jmp    c0105d65 <copy_range+0x1c8>$/;"	l
c0105c98	obj/kernel.asm	/^c0105c98:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c9b	obj/kernel.asm	/^c0105c9b:	8b 00                	mov    (%eax),%eax$/;"	l
c0105c9d	obj/kernel.asm	/^c0105c9d:	83 e0 07             	and    $0x7,%eax$/;"	l
c0105ca0	obj/kernel.asm	/^c0105ca0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105ca3	obj/kernel.asm	/^c0105ca3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ca6	obj/kernel.asm	/^c0105ca6:	8b 00                	mov    (%eax),%eax$/;"	l
c0105ca8	obj/kernel.asm	/^c0105ca8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105cab	obj/kernel.asm	/^c0105cab:	e8 3e f1 ff ff       	call   c0104dee <pte2page>$/;"	l
c0105cb0	obj/kernel.asm	/^c0105cb0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105cb3	obj/kernel.asm	/^c0105cb3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105cba	obj/kernel.asm	/^c0105cba:	e8 8a f3 ff ff       	call   c0105049 <alloc_pages>$/;"	l
c0105cbf	obj/kernel.asm	/^c0105cbf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105cc2	obj/kernel.asm	/^c0105cc2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105cc6	obj/kernel.asm	/^c0105cc6:	75 24                	jne    c0105cec <copy_range+0x14f>$/;"	l
c0105cc8	obj/kernel.asm	/^c0105cc8:	c7 44 24 0c 75 cb 10 	movl   $0xc010cb75,0xc(%esp)$/;"	l
c0105ccf	obj/kernel.asm	/^c0105ccf:	c0 $/;"	l
c0105cd0	obj/kernel.asm	/^c0105cd0:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105cd7	obj/kernel.asm	/^c0105cd7:	c0 $/;"	l
c0105cd8	obj/kernel.asm	/^c0105cd8:	c7 44 24 04 11 02 00 	movl   $0x211,0x4(%esp)$/;"	l
c0105cdf	obj/kernel.asm	/^c0105cdf:	00 $/;"	l
c0105ce0	obj/kernel.asm	/^c0105ce0:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105ce7	obj/kernel.asm	/^c0105ce7:	e8 e9 b0 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105cec	obj/kernel.asm	/^c0105cec:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105cf0	obj/kernel.asm	/^c0105cf0:	75 24                	jne    c0105d16 <copy_range+0x179>$/;"	l
c0105cf2	obj/kernel.asm	/^c0105cf2:	c7 44 24 0c 80 cb 10 	movl   $0xc010cb80,0xc(%esp)$/;"	l
c0105cf9	obj/kernel.asm	/^c0105cf9:	c0 $/;"	l
c0105cfa	obj/kernel.asm	/^c0105cfa:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105d01	obj/kernel.asm	/^c0105d01:	c0 $/;"	l
c0105d02	obj/kernel.asm	/^c0105d02:	c7 44 24 04 12 02 00 	movl   $0x212,0x4(%esp)$/;"	l
c0105d09	obj/kernel.asm	/^c0105d09:	00 $/;"	l
c0105d0a	obj/kernel.asm	/^c0105d0a:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105d11	obj/kernel.asm	/^c0105d11:	e8 bf b0 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105d16	obj/kernel.asm	/^c0105d16:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105d1d	obj/kernel.asm	/^c0105d1d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105d21	obj/kernel.asm	/^c0105d21:	74 24                	je     c0105d47 <copy_range+0x1aa>$/;"	l
c0105d23	obj/kernel.asm	/^c0105d23:	c7 44 24 0c 8c cb 10 	movl   $0xc010cb8c,0xc(%esp)$/;"	l
c0105d2a	obj/kernel.asm	/^c0105d2a:	c0 $/;"	l
c0105d2b	obj/kernel.asm	/^c0105d2b:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105d32	obj/kernel.asm	/^c0105d32:	c0 $/;"	l
c0105d33	obj/kernel.asm	/^c0105d33:	c7 44 24 04 22 02 00 	movl   $0x222,0x4(%esp)$/;"	l
c0105d3a	obj/kernel.asm	/^c0105d3a:	00 $/;"	l
c0105d3b	obj/kernel.asm	/^c0105d3b:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105d42	obj/kernel.asm	/^c0105d42:	e8 8e b0 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105d47	obj/kernel.asm	/^c0105d47:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c0105d4e	obj/kernel.asm	/^c0105d4e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0105d52	obj/kernel.asm	/^c0105d52:	74 0c                	je     c0105d60 <copy_range+0x1c3>$/;"	l
c0105d54	obj/kernel.asm	/^c0105d54:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105d57	obj/kernel.asm	/^c0105d57:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105d5a	obj/kernel.asm	/^c0105d5a:	0f 82 bd fe ff ff    	jb     c0105c1d <copy_range+0x80>$/;"	l
c0105d60	obj/kernel.asm	/^c0105d60:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105d65	obj/kernel.asm	/^c0105d65:	c9                   	leave  $/;"	l
c0105d66	obj/kernel.asm	/^c0105d66:	c3                   	ret    $/;"	l
c0105d67	obj/kernel.asm	/^c0105d67 <page_remove>:$/;"	l
c0105d67	obj/kernel.asm	/^c0105d67:	55                   	push   %ebp$/;"	l
c0105d68	obj/kernel.asm	/^c0105d68:	89 e5                	mov    %esp,%ebp$/;"	l
c0105d6a	obj/kernel.asm	/^c0105d6a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105d6d	obj/kernel.asm	/^c0105d6d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105d74	obj/kernel.asm	/^c0105d74:	00 $/;"	l
c0105d75	obj/kernel.asm	/^c0105d75:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105d78	obj/kernel.asm	/^c0105d78:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105d7c	obj/kernel.asm	/^c0105d7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105d7f	obj/kernel.asm	/^c0105d7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d82	obj/kernel.asm	/^c0105d82:	e8 29 fa ff ff       	call   c01057b0 <get_pte>$/;"	l
c0105d87	obj/kernel.asm	/^c0105d87:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105d8a	obj/kernel.asm	/^c0105d8a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105d8e	obj/kernel.asm	/^c0105d8e:	74 19                	je     c0105da9 <page_remove+0x42>$/;"	l
c0105d90	obj/kernel.asm	/^c0105d90:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d93	obj/kernel.asm	/^c0105d93:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105d97	obj/kernel.asm	/^c0105d97:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105d9a	obj/kernel.asm	/^c0105d9a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105d9e	obj/kernel.asm	/^c0105d9e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105da1	obj/kernel.asm	/^c0105da1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105da4	obj/kernel.asm	/^c0105da4:	e8 98 fb ff ff       	call   c0105941 <page_remove_pte>$/;"	l
c0105da9	obj/kernel.asm	/^c0105da9:	c9                   	leave  $/;"	l
c0105daa	obj/kernel.asm	/^c0105daa:	c3                   	ret    $/;"	l
c0105dab	obj/kernel.asm	/^c0105dab <page_insert>:$/;"	l
c0105dab	obj/kernel.asm	/^c0105dab:	55                   	push   %ebp$/;"	l
c0105dac	obj/kernel.asm	/^c0105dac:	89 e5                	mov    %esp,%ebp$/;"	l
c0105dae	obj/kernel.asm	/^c0105dae:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105db1	obj/kernel.asm	/^c0105db1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105db8	obj/kernel.asm	/^c0105db8:	00 $/;"	l
c0105db9	obj/kernel.asm	/^c0105db9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105dbc	obj/kernel.asm	/^c0105dbc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105dc0	obj/kernel.asm	/^c0105dc0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105dc3	obj/kernel.asm	/^c0105dc3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105dc6	obj/kernel.asm	/^c0105dc6:	e8 e5 f9 ff ff       	call   c01057b0 <get_pte>$/;"	l
c0105dcb	obj/kernel.asm	/^c0105dcb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105dce	obj/kernel.asm	/^c0105dce:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105dd2	obj/kernel.asm	/^c0105dd2:	75 0a                	jne    c0105dde <page_insert+0x33>$/;"	l
c0105dd4	obj/kernel.asm	/^c0105dd4:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105dd9	obj/kernel.asm	/^c0105dd9:	e9 84 00 00 00       	jmp    c0105e62 <page_insert+0xb7>$/;"	l
c0105dde	obj/kernel.asm	/^c0105dde:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105de1	obj/kernel.asm	/^c0105de1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105de4	obj/kernel.asm	/^c0105de4:	e8 72 f0 ff ff       	call   c0104e5b <page_ref_inc>$/;"	l
c0105de9	obj/kernel.asm	/^c0105de9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105dec	obj/kernel.asm	/^c0105dec:	8b 00                	mov    (%eax),%eax$/;"	l
c0105dee	obj/kernel.asm	/^c0105dee:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105df1	obj/kernel.asm	/^c0105df1:	85 c0                	test   %eax,%eax$/;"	l
c0105df3	obj/kernel.asm	/^c0105df3:	74 3e                	je     c0105e33 <page_insert+0x88>$/;"	l
c0105df5	obj/kernel.asm	/^c0105df5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105df8	obj/kernel.asm	/^c0105df8:	8b 00                	mov    (%eax),%eax$/;"	l
c0105dfa	obj/kernel.asm	/^c0105dfa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105dfd	obj/kernel.asm	/^c0105dfd:	e8 ec ef ff ff       	call   c0104dee <pte2page>$/;"	l
c0105e02	obj/kernel.asm	/^c0105e02:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105e05	obj/kernel.asm	/^c0105e05:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105e08	obj/kernel.asm	/^c0105e08:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105e0b	obj/kernel.asm	/^c0105e0b:	75 0d                	jne    c0105e1a <page_insert+0x6f>$/;"	l
c0105e0d	obj/kernel.asm	/^c0105e0d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105e10	obj/kernel.asm	/^c0105e10:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e13	obj/kernel.asm	/^c0105e13:	e8 5a f0 ff ff       	call   c0104e72 <page_ref_dec>$/;"	l
c0105e18	obj/kernel.asm	/^c0105e18:	eb 19                	jmp    c0105e33 <page_insert+0x88>$/;"	l
c0105e1a	obj/kernel.asm	/^c0105e1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105e1d	obj/kernel.asm	/^c0105e1d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105e21	obj/kernel.asm	/^c0105e21:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105e24	obj/kernel.asm	/^c0105e24:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e28	obj/kernel.asm	/^c0105e28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e2b	obj/kernel.asm	/^c0105e2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e2e	obj/kernel.asm	/^c0105e2e:	e8 0e fb ff ff       	call   c0105941 <page_remove_pte>$/;"	l
c0105e33	obj/kernel.asm	/^c0105e33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105e36	obj/kernel.asm	/^c0105e36:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e39	obj/kernel.asm	/^c0105e39:	e8 01 ef ff ff       	call   c0104d3f <page2pa>$/;"	l
c0105e3e	obj/kernel.asm	/^c0105e3e:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c0105e41	obj/kernel.asm	/^c0105e41:	83 c8 01             	or     $0x1,%eax$/;"	l
c0105e44	obj/kernel.asm	/^c0105e44:	89 c2                	mov    %eax,%edx$/;"	l
c0105e46	obj/kernel.asm	/^c0105e46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105e49	obj/kernel.asm	/^c0105e49:	89 10                	mov    %edx,(%eax)$/;"	l
c0105e4b	obj/kernel.asm	/^c0105e4b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105e4e	obj/kernel.asm	/^c0105e4e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e52	obj/kernel.asm	/^c0105e52:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e55	obj/kernel.asm	/^c0105e55:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e58	obj/kernel.asm	/^c0105e58:	e8 07 00 00 00       	call   c0105e64 <tlb_invalidate>$/;"	l
c0105e5d	obj/kernel.asm	/^c0105e5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105e62	obj/kernel.asm	/^c0105e62:	c9                   	leave  $/;"	l
c0105e63	obj/kernel.asm	/^c0105e63:	c3                   	ret    $/;"	l
c0105e64	obj/kernel.asm	/^c0105e64 <tlb_invalidate>:$/;"	l
c0105e64	obj/kernel.asm	/^c0105e64:	55                   	push   %ebp$/;"	l
c0105e65	obj/kernel.asm	/^c0105e65:	89 e5                	mov    %esp,%ebp$/;"	l
c0105e67	obj/kernel.asm	/^c0105e67:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105e6a	obj/kernel.asm	/^c0105e6a:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c0105e6d	obj/kernel.asm	/^c0105e6d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105e70	obj/kernel.asm	/^c0105e70:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105e73	obj/kernel.asm	/^c0105e73:	89 c2                	mov    %eax,%edx$/;"	l
c0105e75	obj/kernel.asm	/^c0105e75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e78	obj/kernel.asm	/^c0105e78:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105e7b	obj/kernel.asm	/^c0105e7b:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0105e82	obj/kernel.asm	/^c0105e82:	77 23                	ja     c0105ea7 <tlb_invalidate+0x43>$/;"	l
c0105e84	obj/kernel.asm	/^c0105e84:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105e87	obj/kernel.asm	/^c0105e87:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105e8b	obj/kernel.asm	/^c0105e8b:	c7 44 24 08 b0 ca 10 	movl   $0xc010cab0,0x8(%esp)$/;"	l
c0105e92	obj/kernel.asm	/^c0105e92:	c0 $/;"	l
c0105e93	obj/kernel.asm	/^c0105e93:	c7 44 24 04 53 02 00 	movl   $0x253,0x4(%esp)$/;"	l
c0105e9a	obj/kernel.asm	/^c0105e9a:	00 $/;"	l
c0105e9b	obj/kernel.asm	/^c0105e9b:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105ea2	obj/kernel.asm	/^c0105ea2:	e8 2e af ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105ea7	obj/kernel.asm	/^c0105ea7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105eaa	obj/kernel.asm	/^c0105eaa:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105eaf	obj/kernel.asm	/^c0105eaf:	39 c2                	cmp    %eax,%edx$/;"	l
c0105eb1	obj/kernel.asm	/^c0105eb1:	75 0c                	jne    c0105ebf <tlb_invalidate+0x5b>$/;"	l
c0105eb3	obj/kernel.asm	/^c0105eb3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105eb6	obj/kernel.asm	/^c0105eb6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105eb9	obj/kernel.asm	/^c0105eb9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105ebc	obj/kernel.asm	/^c0105ebc:	0f 01 38             	invlpg (%eax)$/;"	l
c0105ebf	obj/kernel.asm	/^c0105ebf:	c9                   	leave  $/;"	l
c0105ec0	obj/kernel.asm	/^c0105ec0:	c3                   	ret    $/;"	l
c0105ec1	obj/kernel.asm	/^c0105ec1 <pgdir_alloc_page>:$/;"	l
c0105ec1	obj/kernel.asm	/^c0105ec1:	55                   	push   %ebp$/;"	l
c0105ec2	obj/kernel.asm	/^c0105ec2:	89 e5                	mov    %esp,%ebp$/;"	l
c0105ec4	obj/kernel.asm	/^c0105ec4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105ec7	obj/kernel.asm	/^c0105ec7:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105ece	obj/kernel.asm	/^c0105ece:	e8 76 f1 ff ff       	call   c0105049 <alloc_pages>$/;"	l
c0105ed3	obj/kernel.asm	/^c0105ed3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105ed6	obj/kernel.asm	/^c0105ed6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105eda	obj/kernel.asm	/^c0105eda:	0f 84 b0 00 00 00    	je     c0105f90 <pgdir_alloc_page+0xcf>$/;"	l
c0105ee0	obj/kernel.asm	/^c0105ee0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105ee3	obj/kernel.asm	/^c0105ee3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105ee7	obj/kernel.asm	/^c0105ee7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105eea	obj/kernel.asm	/^c0105eea:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105eee	obj/kernel.asm	/^c0105eee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ef1	obj/kernel.asm	/^c0105ef1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105ef5	obj/kernel.asm	/^c0105ef5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105ef8	obj/kernel.asm	/^c0105ef8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105efb	obj/kernel.asm	/^c0105efb:	e8 ab fe ff ff       	call   c0105dab <page_insert>$/;"	l
c0105f00	obj/kernel.asm	/^c0105f00:	85 c0                	test   %eax,%eax$/;"	l
c0105f02	obj/kernel.asm	/^c0105f02:	74 1a                	je     c0105f1e <pgdir_alloc_page+0x5d>$/;"	l
c0105f04	obj/kernel.asm	/^c0105f04:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105f0b	obj/kernel.asm	/^c0105f0b:	00 $/;"	l
c0105f0c	obj/kernel.asm	/^c0105f0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f0f	obj/kernel.asm	/^c0105f0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f12	obj/kernel.asm	/^c0105f12:	e8 9d f1 ff ff       	call   c01050b4 <free_pages>$/;"	l
c0105f17	obj/kernel.asm	/^c0105f17:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105f1c	obj/kernel.asm	/^c0105f1c:	eb 75                	jmp    c0105f93 <pgdir_alloc_page+0xd2>$/;"	l
c0105f1e	obj/kernel.asm	/^c0105f1e:	a1 6c cf 19 c0       	mov    0xc019cf6c,%eax$/;"	l
c0105f23	obj/kernel.asm	/^c0105f23:	85 c0                	test   %eax,%eax$/;"	l
c0105f25	obj/kernel.asm	/^c0105f25:	74 69                	je     c0105f90 <pgdir_alloc_page+0xcf>$/;"	l
c0105f27	obj/kernel.asm	/^c0105f27:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c0105f2c	obj/kernel.asm	/^c0105f2c:	85 c0                	test   %eax,%eax$/;"	l
c0105f2e	obj/kernel.asm	/^c0105f2e:	74 60                	je     c0105f90 <pgdir_alloc_page+0xcf>$/;"	l
c0105f30	obj/kernel.asm	/^c0105f30:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c0105f35	obj/kernel.asm	/^c0105f35:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0105f3c	obj/kernel.asm	/^c0105f3c:	00 $/;"	l
c0105f3d	obj/kernel.asm	/^c0105f3d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105f40	obj/kernel.asm	/^c0105f40:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0105f44	obj/kernel.asm	/^c0105f44:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105f47	obj/kernel.asm	/^c0105f47:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105f4b	obj/kernel.asm	/^c0105f4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f4e	obj/kernel.asm	/^c0105f4e:	e8 3e 0e 00 00       	call   c0106d91 <swap_map_swappable>$/;"	l
c0105f53	obj/kernel.asm	/^c0105f53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f56	obj/kernel.asm	/^c0105f56:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105f59	obj/kernel.asm	/^c0105f59:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0105f5c	obj/kernel.asm	/^c0105f5c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f5f	obj/kernel.asm	/^c0105f5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f62	obj/kernel.asm	/^c0105f62:	e8 dd ee ff ff       	call   c0104e44 <page_ref>$/;"	l
c0105f67	obj/kernel.asm	/^c0105f67:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0105f6a	obj/kernel.asm	/^c0105f6a:	74 24                	je     c0105f90 <pgdir_alloc_page+0xcf>$/;"	l
c0105f6c	obj/kernel.asm	/^c0105f6c:	c7 44 24 0c 95 cb 10 	movl   $0xc010cb95,0xc(%esp)$/;"	l
c0105f73	obj/kernel.asm	/^c0105f73:	c0 $/;"	l
c0105f74	obj/kernel.asm	/^c0105f74:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105f7b	obj/kernel.asm	/^c0105f7b:	c0 $/;"	l
c0105f7c	obj/kernel.asm	/^c0105f7c:	c7 44 24 04 67 02 00 	movl   $0x267,0x4(%esp)$/;"	l
c0105f83	obj/kernel.asm	/^c0105f83:	00 $/;"	l
c0105f84	obj/kernel.asm	/^c0105f84:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105f8b	obj/kernel.asm	/^c0105f8b:	e8 45 ae ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105f90	obj/kernel.asm	/^c0105f90:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f93	obj/kernel.asm	/^c0105f93:	c9                   	leave  $/;"	l
c0105f94	obj/kernel.asm	/^c0105f94:	c3                   	ret    $/;"	l
c0105f95	obj/kernel.asm	/^c0105f95 <check_alloc_page>:$/;"	l
c0105f95	obj/kernel.asm	/^c0105f95:	55                   	push   %ebp$/;"	l
c0105f96	obj/kernel.asm	/^c0105f96:	89 e5                	mov    %esp,%ebp$/;"	l
c0105f98	obj/kernel.asm	/^c0105f98:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0105f9b	obj/kernel.asm	/^c0105f9b:	a1 c4 ef 19 c0       	mov    0xc019efc4,%eax$/;"	l
c0105fa0	obj/kernel.asm	/^c0105fa0:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0105fa3	obj/kernel.asm	/^c0105fa3:	ff d0                	call   *%eax$/;"	l
c0105fa5	obj/kernel.asm	/^c0105fa5:	c7 04 24 ac cb 10 c0 	movl   $0xc010cbac,(%esp)$/;"	l
c0105fac	obj/kernel.asm	/^c0105fac:	e8 a2 a3 ff ff       	call   c0100353 <cprintf>$/;"	l
c0105fb1	obj/kernel.asm	/^c0105fb1:	c9                   	leave  $/;"	l
c0105fb2	obj/kernel.asm	/^c0105fb2:	c3                   	ret    $/;"	l
c0105fb3	obj/kernel.asm	/^c0105fb3 <check_pgdir>:$/;"	l
c0105fb3	obj/kernel.asm	/^c0105fb3:	55                   	push   %ebp$/;"	l
c0105fb4	obj/kernel.asm	/^c0105fb4:	89 e5                	mov    %esp,%ebp$/;"	l
c0105fb6	obj/kernel.asm	/^c0105fb6:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0105fb9	obj/kernel.asm	/^c0105fb9:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0105fbe	obj/kernel.asm	/^c0105fbe:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c0105fc3	obj/kernel.asm	/^c0105fc3:	76 24                	jbe    c0105fe9 <check_pgdir+0x36>$/;"	l
c0105fc5	obj/kernel.asm	/^c0105fc5:	c7 44 24 0c cb cb 10 	movl   $0xc010cbcb,0xc(%esp)$/;"	l
c0105fcc	obj/kernel.asm	/^c0105fcc:	c0 $/;"	l
c0105fcd	obj/kernel.asm	/^c0105fcd:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0105fd4	obj/kernel.asm	/^c0105fd4:	c0 $/;"	l
c0105fd5	obj/kernel.asm	/^c0105fd5:	c7 44 24 04 7f 02 00 	movl   $0x27f,0x4(%esp)$/;"	l
c0105fdc	obj/kernel.asm	/^c0105fdc:	00 $/;"	l
c0105fdd	obj/kernel.asm	/^c0105fdd:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0105fe4	obj/kernel.asm	/^c0105fe4:	e8 ec ad ff ff       	call   c0100dd5 <__panic>$/;"	l
c0105fe9	obj/kernel.asm	/^c0105fe9:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0105fee	obj/kernel.asm	/^c0105fee:	85 c0                	test   %eax,%eax$/;"	l
c0105ff0	obj/kernel.asm	/^c0105ff0:	74 0e                	je     c0106000 <check_pgdir+0x4d>$/;"	l
c0105ff2	obj/kernel.asm	/^c0105ff2:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0105ff7	obj/kernel.asm	/^c0105ff7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105ffc	obj/kernel.asm	/^c0105ffc:	85 c0                	test   %eax,%eax$/;"	l
c0105ffe	obj/kernel.asm	/^c0105ffe:	74 24                	je     c0106024 <check_pgdir+0x71>$/;"	l
c0106000	obj/kernel.asm	/^c0106000:	c7 44 24 0c e8 cb 10 	movl   $0xc010cbe8,0xc(%esp)$/;"	l
c0106007	obj/kernel.asm	/^c0106007:	c0 $/;"	l
c0106008	obj/kernel.asm	/^c0106008:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c010600f	obj/kernel.asm	/^c010600f:	c0 $/;"	l
c0106010	obj/kernel.asm	/^c0106010:	c7 44 24 04 80 02 00 	movl   $0x280,0x4(%esp)$/;"	l
c0106017	obj/kernel.asm	/^c0106017:	00 $/;"	l
c0106018	obj/kernel.asm	/^c0106018:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010601f	obj/kernel.asm	/^c010601f:	e8 b1 ad ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106024	obj/kernel.asm	/^c0106024:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0106029	obj/kernel.asm	/^c0106029:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106030	obj/kernel.asm	/^c0106030:	00 $/;"	l
c0106031	obj/kernel.asm	/^c0106031:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0106038	obj/kernel.asm	/^c0106038:	00 $/;"	l
c0106039	obj/kernel.asm	/^c0106039:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010603c	obj/kernel.asm	/^c010603c:	e8 a7 f8 ff ff       	call   c01058e8 <get_page>$/;"	l
c0106041	obj/kernel.asm	/^c0106041:	85 c0                	test   %eax,%eax$/;"	l
c0106043	obj/kernel.asm	/^c0106043:	74 24                	je     c0106069 <check_pgdir+0xb6>$/;"	l
c0106045	obj/kernel.asm	/^c0106045:	c7 44 24 0c 20 cc 10 	movl   $0xc010cc20,0xc(%esp)$/;"	l
c010604c	obj/kernel.asm	/^c010604c:	c0 $/;"	l
c010604d	obj/kernel.asm	/^c010604d:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106054	obj/kernel.asm	/^c0106054:	c0 $/;"	l
c0106055	obj/kernel.asm	/^c0106055:	c7 44 24 04 81 02 00 	movl   $0x281,0x4(%esp)$/;"	l
c010605c	obj/kernel.asm	/^c010605c:	00 $/;"	l
c010605d	obj/kernel.asm	/^c010605d:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106064	obj/kernel.asm	/^c0106064:	e8 6c ad ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106069	obj/kernel.asm	/^c0106069:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0106070	obj/kernel.asm	/^c0106070:	e8 d4 ef ff ff       	call   c0105049 <alloc_pages>$/;"	l
c0106075	obj/kernel.asm	/^c0106075:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106078	obj/kernel.asm	/^c0106078:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010607d	obj/kernel.asm	/^c010607d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106084	obj/kernel.asm	/^c0106084:	00 $/;"	l
c0106085	obj/kernel.asm	/^c0106085:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010608c	obj/kernel.asm	/^c010608c:	00 $/;"	l
c010608d	obj/kernel.asm	/^c010608d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106090	obj/kernel.asm	/^c0106090:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106094	obj/kernel.asm	/^c0106094:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106097	obj/kernel.asm	/^c0106097:	e8 0f fd ff ff       	call   c0105dab <page_insert>$/;"	l
c010609c	obj/kernel.asm	/^c010609c:	85 c0                	test   %eax,%eax$/;"	l
c010609e	obj/kernel.asm	/^c010609e:	74 24                	je     c01060c4 <check_pgdir+0x111>$/;"	l
c01060a0	obj/kernel.asm	/^c01060a0:	c7 44 24 0c 48 cc 10 	movl   $0xc010cc48,0xc(%esp)$/;"	l
c01060a7	obj/kernel.asm	/^c01060a7:	c0 $/;"	l
c01060a8	obj/kernel.asm	/^c01060a8:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01060af	obj/kernel.asm	/^c01060af:	c0 $/;"	l
c01060b0	obj/kernel.asm	/^c01060b0:	c7 44 24 04 85 02 00 	movl   $0x285,0x4(%esp)$/;"	l
c01060b7	obj/kernel.asm	/^c01060b7:	00 $/;"	l
c01060b8	obj/kernel.asm	/^c01060b8:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01060bf	obj/kernel.asm	/^c01060bf:	e8 11 ad ff ff       	call   c0100dd5 <__panic>$/;"	l
c01060c4	obj/kernel.asm	/^c01060c4:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01060c9	obj/kernel.asm	/^c01060c9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01060d0	obj/kernel.asm	/^c01060d0:	00 $/;"	l
c01060d1	obj/kernel.asm	/^c01060d1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01060d8	obj/kernel.asm	/^c01060d8:	00 $/;"	l
c01060d9	obj/kernel.asm	/^c01060d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01060dc	obj/kernel.asm	/^c01060dc:	e8 cf f6 ff ff       	call   c01057b0 <get_pte>$/;"	l
c01060e1	obj/kernel.asm	/^c01060e1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01060e4	obj/kernel.asm	/^c01060e4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01060e8	obj/kernel.asm	/^c01060e8:	75 24                	jne    c010610e <check_pgdir+0x15b>$/;"	l
c01060ea	obj/kernel.asm	/^c01060ea:	c7 44 24 0c 74 cc 10 	movl   $0xc010cc74,0xc(%esp)$/;"	l
c01060f1	obj/kernel.asm	/^c01060f1:	c0 $/;"	l
c01060f2	obj/kernel.asm	/^c01060f2:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01060f9	obj/kernel.asm	/^c01060f9:	c0 $/;"	l
c01060fa	obj/kernel.asm	/^c01060fa:	c7 44 24 04 88 02 00 	movl   $0x288,0x4(%esp)$/;"	l
c0106101	obj/kernel.asm	/^c0106101:	00 $/;"	l
c0106102	obj/kernel.asm	/^c0106102:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106109	obj/kernel.asm	/^c0106109:	e8 c7 ac ff ff       	call   c0100dd5 <__panic>$/;"	l
c010610e	obj/kernel.asm	/^c010610e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106111	obj/kernel.asm	/^c0106111:	8b 00                	mov    (%eax),%eax$/;"	l
c0106113	obj/kernel.asm	/^c0106113:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106116	obj/kernel.asm	/^c0106116:	e8 3a ec ff ff       	call   c0104d55 <pa2page>$/;"	l
c010611b	obj/kernel.asm	/^c010611b:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010611e	obj/kernel.asm	/^c010611e:	74 24                	je     c0106144 <check_pgdir+0x191>$/;"	l
c0106120	obj/kernel.asm	/^c0106120:	c7 44 24 0c a1 cc 10 	movl   $0xc010cca1,0xc(%esp)$/;"	l
c0106127	obj/kernel.asm	/^c0106127:	c0 $/;"	l
c0106128	obj/kernel.asm	/^c0106128:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c010612f	obj/kernel.asm	/^c010612f:	c0 $/;"	l
c0106130	obj/kernel.asm	/^c0106130:	c7 44 24 04 89 02 00 	movl   $0x289,0x4(%esp)$/;"	l
c0106137	obj/kernel.asm	/^c0106137:	00 $/;"	l
c0106138	obj/kernel.asm	/^c0106138:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010613f	obj/kernel.asm	/^c010613f:	e8 91 ac ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106144	obj/kernel.asm	/^c0106144:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106147	obj/kernel.asm	/^c0106147:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010614a	obj/kernel.asm	/^c010614a:	e8 f5 ec ff ff       	call   c0104e44 <page_ref>$/;"	l
c010614f	obj/kernel.asm	/^c010614f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106152	obj/kernel.asm	/^c0106152:	74 24                	je     c0106178 <check_pgdir+0x1c5>$/;"	l
c0106154	obj/kernel.asm	/^c0106154:	c7 44 24 0c b6 cc 10 	movl   $0xc010ccb6,0xc(%esp)$/;"	l
c010615b	obj/kernel.asm	/^c010615b:	c0 $/;"	l
c010615c	obj/kernel.asm	/^c010615c:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106163	obj/kernel.asm	/^c0106163:	c0 $/;"	l
c0106164	obj/kernel.asm	/^c0106164:	c7 44 24 04 8a 02 00 	movl   $0x28a,0x4(%esp)$/;"	l
c010616b	obj/kernel.asm	/^c010616b:	00 $/;"	l
c010616c	obj/kernel.asm	/^c010616c:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106173	obj/kernel.asm	/^c0106173:	e8 5d ac ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106178	obj/kernel.asm	/^c0106178:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010617d	obj/kernel.asm	/^c010617d:	8b 00                	mov    (%eax),%eax$/;"	l
c010617f	obj/kernel.asm	/^c010617f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106184	obj/kernel.asm	/^c0106184:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106187	obj/kernel.asm	/^c0106187:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010618a	obj/kernel.asm	/^c010618a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010618d	obj/kernel.asm	/^c010618d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106190	obj/kernel.asm	/^c0106190:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0106195	obj/kernel.asm	/^c0106195:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c0106198	obj/kernel.asm	/^c0106198:	72 23                	jb     c01061bd <check_pgdir+0x20a>$/;"	l
c010619a	obj/kernel.asm	/^c010619a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010619d	obj/kernel.asm	/^c010619d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01061a1	obj/kernel.asm	/^c01061a1:	c7 44 24 08 0c ca 10 	movl   $0xc010ca0c,0x8(%esp)$/;"	l
c01061a8	obj/kernel.asm	/^c01061a8:	c0 $/;"	l
c01061a9	obj/kernel.asm	/^c01061a9:	c7 44 24 04 8c 02 00 	movl   $0x28c,0x4(%esp)$/;"	l
c01061b0	obj/kernel.asm	/^c01061b0:	00 $/;"	l
c01061b1	obj/kernel.asm	/^c01061b1:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01061b8	obj/kernel.asm	/^c01061b8:	e8 18 ac ff ff       	call   c0100dd5 <__panic>$/;"	l
c01061bd	obj/kernel.asm	/^c01061bd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01061c0	obj/kernel.asm	/^c01061c0:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01061c5	obj/kernel.asm	/^c01061c5:	83 c0 04             	add    $0x4,%eax$/;"	l
c01061c8	obj/kernel.asm	/^c01061c8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01061cb	obj/kernel.asm	/^c01061cb:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01061d0	obj/kernel.asm	/^c01061d0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01061d7	obj/kernel.asm	/^c01061d7:	00 $/;"	l
c01061d8	obj/kernel.asm	/^c01061d8:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01061df	obj/kernel.asm	/^c01061df:	00 $/;"	l
c01061e0	obj/kernel.asm	/^c01061e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01061e3	obj/kernel.asm	/^c01061e3:	e8 c8 f5 ff ff       	call   c01057b0 <get_pte>$/;"	l
c01061e8	obj/kernel.asm	/^c01061e8:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01061eb	obj/kernel.asm	/^c01061eb:	74 24                	je     c0106211 <check_pgdir+0x25e>$/;"	l
c01061ed	obj/kernel.asm	/^c01061ed:	c7 44 24 0c c8 cc 10 	movl   $0xc010ccc8,0xc(%esp)$/;"	l
c01061f4	obj/kernel.asm	/^c01061f4:	c0 $/;"	l
c01061f5	obj/kernel.asm	/^c01061f5:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01061fc	obj/kernel.asm	/^c01061fc:	c0 $/;"	l
c01061fd	obj/kernel.asm	/^c01061fd:	c7 44 24 04 8d 02 00 	movl   $0x28d,0x4(%esp)$/;"	l
c0106204	obj/kernel.asm	/^c0106204:	00 $/;"	l
c0106205	obj/kernel.asm	/^c0106205:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010620c	obj/kernel.asm	/^c010620c:	e8 c4 ab ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106211	obj/kernel.asm	/^c0106211:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0106218	obj/kernel.asm	/^c0106218:	e8 2c ee ff ff       	call   c0105049 <alloc_pages>$/;"	l
c010621d	obj/kernel.asm	/^c010621d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106220	obj/kernel.asm	/^c0106220:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0106225	obj/kernel.asm	/^c0106225:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
c010622c	obj/kernel.asm	/^c010622c:	00 $/;"	l
c010622d	obj/kernel.asm	/^c010622d:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0106234	obj/kernel.asm	/^c0106234:	00 $/;"	l
c0106235	obj/kernel.asm	/^c0106235:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106238	obj/kernel.asm	/^c0106238:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010623c	obj/kernel.asm	/^c010623c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010623f	obj/kernel.asm	/^c010623f:	e8 67 fb ff ff       	call   c0105dab <page_insert>$/;"	l
c0106244	obj/kernel.asm	/^c0106244:	85 c0                	test   %eax,%eax$/;"	l
c0106246	obj/kernel.asm	/^c0106246:	74 24                	je     c010626c <check_pgdir+0x2b9>$/;"	l
c0106248	obj/kernel.asm	/^c0106248:	c7 44 24 0c f0 cc 10 	movl   $0xc010ccf0,0xc(%esp)$/;"	l
c010624f	obj/kernel.asm	/^c010624f:	c0 $/;"	l
c0106250	obj/kernel.asm	/^c0106250:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106257	obj/kernel.asm	/^c0106257:	c0 $/;"	l
c0106258	obj/kernel.asm	/^c0106258:	c7 44 24 04 90 02 00 	movl   $0x290,0x4(%esp)$/;"	l
c010625f	obj/kernel.asm	/^c010625f:	00 $/;"	l
c0106260	obj/kernel.asm	/^c0106260:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106267	obj/kernel.asm	/^c0106267:	e8 69 ab ff ff       	call   c0100dd5 <__panic>$/;"	l
c010626c	obj/kernel.asm	/^c010626c:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0106271	obj/kernel.asm	/^c0106271:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106278	obj/kernel.asm	/^c0106278:	00 $/;"	l
c0106279	obj/kernel.asm	/^c0106279:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0106280	obj/kernel.asm	/^c0106280:	00 $/;"	l
c0106281	obj/kernel.asm	/^c0106281:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106284	obj/kernel.asm	/^c0106284:	e8 27 f5 ff ff       	call   c01057b0 <get_pte>$/;"	l
c0106289	obj/kernel.asm	/^c0106289:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010628c	obj/kernel.asm	/^c010628c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106290	obj/kernel.asm	/^c0106290:	75 24                	jne    c01062b6 <check_pgdir+0x303>$/;"	l
c0106292	obj/kernel.asm	/^c0106292:	c7 44 24 0c 28 cd 10 	movl   $0xc010cd28,0xc(%esp)$/;"	l
c0106299	obj/kernel.asm	/^c0106299:	c0 $/;"	l
c010629a	obj/kernel.asm	/^c010629a:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01062a1	obj/kernel.asm	/^c01062a1:	c0 $/;"	l
c01062a2	obj/kernel.asm	/^c01062a2:	c7 44 24 04 91 02 00 	movl   $0x291,0x4(%esp)$/;"	l
c01062a9	obj/kernel.asm	/^c01062a9:	00 $/;"	l
c01062aa	obj/kernel.asm	/^c01062aa:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01062b1	obj/kernel.asm	/^c01062b1:	e8 1f ab ff ff       	call   c0100dd5 <__panic>$/;"	l
c01062b6	obj/kernel.asm	/^c01062b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01062b9	obj/kernel.asm	/^c01062b9:	8b 00                	mov    (%eax),%eax$/;"	l
c01062bb	obj/kernel.asm	/^c01062bb:	83 e0 04             	and    $0x4,%eax$/;"	l
c01062be	obj/kernel.asm	/^c01062be:	85 c0                	test   %eax,%eax$/;"	l
c01062c0	obj/kernel.asm	/^c01062c0:	75 24                	jne    c01062e6 <check_pgdir+0x333>$/;"	l
c01062c2	obj/kernel.asm	/^c01062c2:	c7 44 24 0c 58 cd 10 	movl   $0xc010cd58,0xc(%esp)$/;"	l
c01062c9	obj/kernel.asm	/^c01062c9:	c0 $/;"	l
c01062ca	obj/kernel.asm	/^c01062ca:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01062d1	obj/kernel.asm	/^c01062d1:	c0 $/;"	l
c01062d2	obj/kernel.asm	/^c01062d2:	c7 44 24 04 92 02 00 	movl   $0x292,0x4(%esp)$/;"	l
c01062d9	obj/kernel.asm	/^c01062d9:	00 $/;"	l
c01062da	obj/kernel.asm	/^c01062da:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01062e1	obj/kernel.asm	/^c01062e1:	e8 ef aa ff ff       	call   c0100dd5 <__panic>$/;"	l
c01062e6	obj/kernel.asm	/^c01062e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01062e9	obj/kernel.asm	/^c01062e9:	8b 00                	mov    (%eax),%eax$/;"	l
c01062eb	obj/kernel.asm	/^c01062eb:	83 e0 02             	and    $0x2,%eax$/;"	l
c01062ee	obj/kernel.asm	/^c01062ee:	85 c0                	test   %eax,%eax$/;"	l
c01062f0	obj/kernel.asm	/^c01062f0:	75 24                	jne    c0106316 <check_pgdir+0x363>$/;"	l
c01062f2	obj/kernel.asm	/^c01062f2:	c7 44 24 0c 66 cd 10 	movl   $0xc010cd66,0xc(%esp)$/;"	l
c01062f9	obj/kernel.asm	/^c01062f9:	c0 $/;"	l
c01062fa	obj/kernel.asm	/^c01062fa:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106301	obj/kernel.asm	/^c0106301:	c0 $/;"	l
c0106302	obj/kernel.asm	/^c0106302:	c7 44 24 04 93 02 00 	movl   $0x293,0x4(%esp)$/;"	l
c0106309	obj/kernel.asm	/^c0106309:	00 $/;"	l
c010630a	obj/kernel.asm	/^c010630a:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106311	obj/kernel.asm	/^c0106311:	e8 bf aa ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106316	obj/kernel.asm	/^c0106316:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010631b	obj/kernel.asm	/^c010631b:	8b 00                	mov    (%eax),%eax$/;"	l
c010631d	obj/kernel.asm	/^c010631d:	83 e0 04             	and    $0x4,%eax$/;"	l
c0106320	obj/kernel.asm	/^c0106320:	85 c0                	test   %eax,%eax$/;"	l
c0106322	obj/kernel.asm	/^c0106322:	75 24                	jne    c0106348 <check_pgdir+0x395>$/;"	l
c0106324	obj/kernel.asm	/^c0106324:	c7 44 24 0c 74 cd 10 	movl   $0xc010cd74,0xc(%esp)$/;"	l
c010632b	obj/kernel.asm	/^c010632b:	c0 $/;"	l
c010632c	obj/kernel.asm	/^c010632c:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106333	obj/kernel.asm	/^c0106333:	c0 $/;"	l
c0106334	obj/kernel.asm	/^c0106334:	c7 44 24 04 94 02 00 	movl   $0x294,0x4(%esp)$/;"	l
c010633b	obj/kernel.asm	/^c010633b:	00 $/;"	l
c010633c	obj/kernel.asm	/^c010633c:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106343	obj/kernel.asm	/^c0106343:	e8 8d aa ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106348	obj/kernel.asm	/^c0106348:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010634b	obj/kernel.asm	/^c010634b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010634e	obj/kernel.asm	/^c010634e:	e8 f1 ea ff ff       	call   c0104e44 <page_ref>$/;"	l
c0106353	obj/kernel.asm	/^c0106353:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106356	obj/kernel.asm	/^c0106356:	74 24                	je     c010637c <check_pgdir+0x3c9>$/;"	l
c0106358	obj/kernel.asm	/^c0106358:	c7 44 24 0c 8a cd 10 	movl   $0xc010cd8a,0xc(%esp)$/;"	l
c010635f	obj/kernel.asm	/^c010635f:	c0 $/;"	l
c0106360	obj/kernel.asm	/^c0106360:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106367	obj/kernel.asm	/^c0106367:	c0 $/;"	l
c0106368	obj/kernel.asm	/^c0106368:	c7 44 24 04 95 02 00 	movl   $0x295,0x4(%esp)$/;"	l
c010636f	obj/kernel.asm	/^c010636f:	00 $/;"	l
c0106370	obj/kernel.asm	/^c0106370:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106377	obj/kernel.asm	/^c0106377:	e8 59 aa ff ff       	call   c0100dd5 <__panic>$/;"	l
c010637c	obj/kernel.asm	/^c010637c:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0106381	obj/kernel.asm	/^c0106381:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106388	obj/kernel.asm	/^c0106388:	00 $/;"	l
c0106389	obj/kernel.asm	/^c0106389:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0106390	obj/kernel.asm	/^c0106390:	00 $/;"	l
c0106391	obj/kernel.asm	/^c0106391:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106394	obj/kernel.asm	/^c0106394:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106398	obj/kernel.asm	/^c0106398:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010639b	obj/kernel.asm	/^c010639b:	e8 0b fa ff ff       	call   c0105dab <page_insert>$/;"	l
c01063a0	obj/kernel.asm	/^c01063a0:	85 c0                	test   %eax,%eax$/;"	l
c01063a2	obj/kernel.asm	/^c01063a2:	74 24                	je     c01063c8 <check_pgdir+0x415>$/;"	l
c01063a4	obj/kernel.asm	/^c01063a4:	c7 44 24 0c 9c cd 10 	movl   $0xc010cd9c,0xc(%esp)$/;"	l
c01063ab	obj/kernel.asm	/^c01063ab:	c0 $/;"	l
c01063ac	obj/kernel.asm	/^c01063ac:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01063b3	obj/kernel.asm	/^c01063b3:	c0 $/;"	l
c01063b4	obj/kernel.asm	/^c01063b4:	c7 44 24 04 97 02 00 	movl   $0x297,0x4(%esp)$/;"	l
c01063bb	obj/kernel.asm	/^c01063bb:	00 $/;"	l
c01063bc	obj/kernel.asm	/^c01063bc:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01063c3	obj/kernel.asm	/^c01063c3:	e8 0d aa ff ff       	call   c0100dd5 <__panic>$/;"	l
c01063c8	obj/kernel.asm	/^c01063c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01063cb	obj/kernel.asm	/^c01063cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01063ce	obj/kernel.asm	/^c01063ce:	e8 71 ea ff ff       	call   c0104e44 <page_ref>$/;"	l
c01063d3	obj/kernel.asm	/^c01063d3:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01063d6	obj/kernel.asm	/^c01063d6:	74 24                	je     c01063fc <check_pgdir+0x449>$/;"	l
c01063d8	obj/kernel.asm	/^c01063d8:	c7 44 24 0c c8 cd 10 	movl   $0xc010cdc8,0xc(%esp)$/;"	l
c01063df	obj/kernel.asm	/^c01063df:	c0 $/;"	l
c01063e0	obj/kernel.asm	/^c01063e0:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01063e7	obj/kernel.asm	/^c01063e7:	c0 $/;"	l
c01063e8	obj/kernel.asm	/^c01063e8:	c7 44 24 04 98 02 00 	movl   $0x298,0x4(%esp)$/;"	l
c01063ef	obj/kernel.asm	/^c01063ef:	00 $/;"	l
c01063f0	obj/kernel.asm	/^c01063f0:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01063f7	obj/kernel.asm	/^c01063f7:	e8 d9 a9 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01063fc	obj/kernel.asm	/^c01063fc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01063ff	obj/kernel.asm	/^c01063ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106402	obj/kernel.asm	/^c0106402:	e8 3d ea ff ff       	call   c0104e44 <page_ref>$/;"	l
c0106407	obj/kernel.asm	/^c0106407:	85 c0                	test   %eax,%eax$/;"	l
c0106409	obj/kernel.asm	/^c0106409:	74 24                	je     c010642f <check_pgdir+0x47c>$/;"	l
c010640b	obj/kernel.asm	/^c010640b:	c7 44 24 0c da cd 10 	movl   $0xc010cdda,0xc(%esp)$/;"	l
c0106412	obj/kernel.asm	/^c0106412:	c0 $/;"	l
c0106413	obj/kernel.asm	/^c0106413:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c010641a	obj/kernel.asm	/^c010641a:	c0 $/;"	l
c010641b	obj/kernel.asm	/^c010641b:	c7 44 24 04 99 02 00 	movl   $0x299,0x4(%esp)$/;"	l
c0106422	obj/kernel.asm	/^c0106422:	00 $/;"	l
c0106423	obj/kernel.asm	/^c0106423:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010642a	obj/kernel.asm	/^c010642a:	e8 a6 a9 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010642f	obj/kernel.asm	/^c010642f:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0106434	obj/kernel.asm	/^c0106434:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010643b	obj/kernel.asm	/^c010643b:	00 $/;"	l
c010643c	obj/kernel.asm	/^c010643c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0106443	obj/kernel.asm	/^c0106443:	00 $/;"	l
c0106444	obj/kernel.asm	/^c0106444:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106447	obj/kernel.asm	/^c0106447:	e8 64 f3 ff ff       	call   c01057b0 <get_pte>$/;"	l
c010644c	obj/kernel.asm	/^c010644c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010644f	obj/kernel.asm	/^c010644f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106453	obj/kernel.asm	/^c0106453:	75 24                	jne    c0106479 <check_pgdir+0x4c6>$/;"	l
c0106455	obj/kernel.asm	/^c0106455:	c7 44 24 0c 28 cd 10 	movl   $0xc010cd28,0xc(%esp)$/;"	l
c010645c	obj/kernel.asm	/^c010645c:	c0 $/;"	l
c010645d	obj/kernel.asm	/^c010645d:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106464	obj/kernel.asm	/^c0106464:	c0 $/;"	l
c0106465	obj/kernel.asm	/^c0106465:	c7 44 24 04 9a 02 00 	movl   $0x29a,0x4(%esp)$/;"	l
c010646c	obj/kernel.asm	/^c010646c:	00 $/;"	l
c010646d	obj/kernel.asm	/^c010646d:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106474	obj/kernel.asm	/^c0106474:	e8 5c a9 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106479	obj/kernel.asm	/^c0106479:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010647c	obj/kernel.asm	/^c010647c:	8b 00                	mov    (%eax),%eax$/;"	l
c010647e	obj/kernel.asm	/^c010647e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106481	obj/kernel.asm	/^c0106481:	e8 cf e8 ff ff       	call   c0104d55 <pa2page>$/;"	l
c0106486	obj/kernel.asm	/^c0106486:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0106489	obj/kernel.asm	/^c0106489:	74 24                	je     c01064af <check_pgdir+0x4fc>$/;"	l
c010648b	obj/kernel.asm	/^c010648b:	c7 44 24 0c a1 cc 10 	movl   $0xc010cca1,0xc(%esp)$/;"	l
c0106492	obj/kernel.asm	/^c0106492:	c0 $/;"	l
c0106493	obj/kernel.asm	/^c0106493:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c010649a	obj/kernel.asm	/^c010649a:	c0 $/;"	l
c010649b	obj/kernel.asm	/^c010649b:	c7 44 24 04 9b 02 00 	movl   $0x29b,0x4(%esp)$/;"	l
c01064a2	obj/kernel.asm	/^c01064a2:	00 $/;"	l
c01064a3	obj/kernel.asm	/^c01064a3:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01064aa	obj/kernel.asm	/^c01064aa:	e8 26 a9 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01064af	obj/kernel.asm	/^c01064af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01064b2	obj/kernel.asm	/^c01064b2:	8b 00                	mov    (%eax),%eax$/;"	l
c01064b4	obj/kernel.asm	/^c01064b4:	83 e0 04             	and    $0x4,%eax$/;"	l
c01064b7	obj/kernel.asm	/^c01064b7:	85 c0                	test   %eax,%eax$/;"	l
c01064b9	obj/kernel.asm	/^c01064b9:	74 24                	je     c01064df <check_pgdir+0x52c>$/;"	l
c01064bb	obj/kernel.asm	/^c01064bb:	c7 44 24 0c ec cd 10 	movl   $0xc010cdec,0xc(%esp)$/;"	l
c01064c2	obj/kernel.asm	/^c01064c2:	c0 $/;"	l
c01064c3	obj/kernel.asm	/^c01064c3:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01064ca	obj/kernel.asm	/^c01064ca:	c0 $/;"	l
c01064cb	obj/kernel.asm	/^c01064cb:	c7 44 24 04 9c 02 00 	movl   $0x29c,0x4(%esp)$/;"	l
c01064d2	obj/kernel.asm	/^c01064d2:	00 $/;"	l
c01064d3	obj/kernel.asm	/^c01064d3:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01064da	obj/kernel.asm	/^c01064da:	e8 f6 a8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01064df	obj/kernel.asm	/^c01064df:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01064e4	obj/kernel.asm	/^c01064e4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01064eb	obj/kernel.asm	/^c01064eb:	00 $/;"	l
c01064ec	obj/kernel.asm	/^c01064ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01064ef	obj/kernel.asm	/^c01064ef:	e8 73 f8 ff ff       	call   c0105d67 <page_remove>$/;"	l
c01064f4	obj/kernel.asm	/^c01064f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01064f7	obj/kernel.asm	/^c01064f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01064fa	obj/kernel.asm	/^c01064fa:	e8 45 e9 ff ff       	call   c0104e44 <page_ref>$/;"	l
c01064ff	obj/kernel.asm	/^c01064ff:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106502	obj/kernel.asm	/^c0106502:	74 24                	je     c0106528 <check_pgdir+0x575>$/;"	l
c0106504	obj/kernel.asm	/^c0106504:	c7 44 24 0c b6 cc 10 	movl   $0xc010ccb6,0xc(%esp)$/;"	l
c010650b	obj/kernel.asm	/^c010650b:	c0 $/;"	l
c010650c	obj/kernel.asm	/^c010650c:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106513	obj/kernel.asm	/^c0106513:	c0 $/;"	l
c0106514	obj/kernel.asm	/^c0106514:	c7 44 24 04 9f 02 00 	movl   $0x29f,0x4(%esp)$/;"	l
c010651b	obj/kernel.asm	/^c010651b:	00 $/;"	l
c010651c	obj/kernel.asm	/^c010651c:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106523	obj/kernel.asm	/^c0106523:	e8 ad a8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106528	obj/kernel.asm	/^c0106528:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010652b	obj/kernel.asm	/^c010652b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010652e	obj/kernel.asm	/^c010652e:	e8 11 e9 ff ff       	call   c0104e44 <page_ref>$/;"	l
c0106533	obj/kernel.asm	/^c0106533:	85 c0                	test   %eax,%eax$/;"	l
c0106535	obj/kernel.asm	/^c0106535:	74 24                	je     c010655b <check_pgdir+0x5a8>$/;"	l
c0106537	obj/kernel.asm	/^c0106537:	c7 44 24 0c da cd 10 	movl   $0xc010cdda,0xc(%esp)$/;"	l
c010653e	obj/kernel.asm	/^c010653e:	c0 $/;"	l
c010653f	obj/kernel.asm	/^c010653f:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106546	obj/kernel.asm	/^c0106546:	c0 $/;"	l
c0106547	obj/kernel.asm	/^c0106547:	c7 44 24 04 a0 02 00 	movl   $0x2a0,0x4(%esp)$/;"	l
c010654e	obj/kernel.asm	/^c010654e:	00 $/;"	l
c010654f	obj/kernel.asm	/^c010654f:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106556	obj/kernel.asm	/^c0106556:	e8 7a a8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010655b	obj/kernel.asm	/^c010655b:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0106560	obj/kernel.asm	/^c0106560:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0106567	obj/kernel.asm	/^c0106567:	00 $/;"	l
c0106568	obj/kernel.asm	/^c0106568:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010656b	obj/kernel.asm	/^c010656b:	e8 f7 f7 ff ff       	call   c0105d67 <page_remove>$/;"	l
c0106570	obj/kernel.asm	/^c0106570:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106573	obj/kernel.asm	/^c0106573:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106576	obj/kernel.asm	/^c0106576:	e8 c9 e8 ff ff       	call   c0104e44 <page_ref>$/;"	l
c010657b	obj/kernel.asm	/^c010657b:	85 c0                	test   %eax,%eax$/;"	l
c010657d	obj/kernel.asm	/^c010657d:	74 24                	je     c01065a3 <check_pgdir+0x5f0>$/;"	l
c010657f	obj/kernel.asm	/^c010657f:	c7 44 24 0c 01 ce 10 	movl   $0xc010ce01,0xc(%esp)$/;"	l
c0106586	obj/kernel.asm	/^c0106586:	c0 $/;"	l
c0106587	obj/kernel.asm	/^c0106587:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c010658e	obj/kernel.asm	/^c010658e:	c0 $/;"	l
c010658f	obj/kernel.asm	/^c010658f:	c7 44 24 04 a3 02 00 	movl   $0x2a3,0x4(%esp)$/;"	l
c0106596	obj/kernel.asm	/^c0106596:	00 $/;"	l
c0106597	obj/kernel.asm	/^c0106597:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010659e	obj/kernel.asm	/^c010659e:	e8 32 a8 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01065a3	obj/kernel.asm	/^c01065a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01065a6	obj/kernel.asm	/^c01065a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01065a9	obj/kernel.asm	/^c01065a9:	e8 96 e8 ff ff       	call   c0104e44 <page_ref>$/;"	l
c01065ae	obj/kernel.asm	/^c01065ae:	85 c0                	test   %eax,%eax$/;"	l
c01065b0	obj/kernel.asm	/^c01065b0:	74 24                	je     c01065d6 <check_pgdir+0x623>$/;"	l
c01065b2	obj/kernel.asm	/^c01065b2:	c7 44 24 0c da cd 10 	movl   $0xc010cdda,0xc(%esp)$/;"	l
c01065b9	obj/kernel.asm	/^c01065b9:	c0 $/;"	l
c01065ba	obj/kernel.asm	/^c01065ba:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01065c1	obj/kernel.asm	/^c01065c1:	c0 $/;"	l
c01065c2	obj/kernel.asm	/^c01065c2:	c7 44 24 04 a4 02 00 	movl   $0x2a4,0x4(%esp)$/;"	l
c01065c9	obj/kernel.asm	/^c01065c9:	00 $/;"	l
c01065ca	obj/kernel.asm	/^c01065ca:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01065d1	obj/kernel.asm	/^c01065d1:	e8 ff a7 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01065d6	obj/kernel.asm	/^c01065d6:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01065db	obj/kernel.asm	/^c01065db:	8b 00                	mov    (%eax),%eax$/;"	l
c01065dd	obj/kernel.asm	/^c01065dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01065e0	obj/kernel.asm	/^c01065e0:	e8 70 e7 ff ff       	call   c0104d55 <pa2page>$/;"	l
c01065e5	obj/kernel.asm	/^c01065e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01065e8	obj/kernel.asm	/^c01065e8:	e8 57 e8 ff ff       	call   c0104e44 <page_ref>$/;"	l
c01065ed	obj/kernel.asm	/^c01065ed:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01065f0	obj/kernel.asm	/^c01065f0:	74 24                	je     c0106616 <check_pgdir+0x663>$/;"	l
c01065f2	obj/kernel.asm	/^c01065f2:	c7 44 24 0c 14 ce 10 	movl   $0xc010ce14,0xc(%esp)$/;"	l
c01065f9	obj/kernel.asm	/^c01065f9:	c0 $/;"	l
c01065fa	obj/kernel.asm	/^c01065fa:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106601	obj/kernel.asm	/^c0106601:	c0 $/;"	l
c0106602	obj/kernel.asm	/^c0106602:	c7 44 24 04 a6 02 00 	movl   $0x2a6,0x4(%esp)$/;"	l
c0106609	obj/kernel.asm	/^c0106609:	00 $/;"	l
c010660a	obj/kernel.asm	/^c010660a:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106611	obj/kernel.asm	/^c0106611:	e8 bf a7 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106616	obj/kernel.asm	/^c0106616:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010661b	obj/kernel.asm	/^c010661b:	8b 00                	mov    (%eax),%eax$/;"	l
c010661d	obj/kernel.asm	/^c010661d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106620	obj/kernel.asm	/^c0106620:	e8 30 e7 ff ff       	call   c0104d55 <pa2page>$/;"	l
c0106625	obj/kernel.asm	/^c0106625:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010662c	obj/kernel.asm	/^c010662c:	00 $/;"	l
c010662d	obj/kernel.asm	/^c010662d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106630	obj/kernel.asm	/^c0106630:	e8 7f ea ff ff       	call   c01050b4 <free_pages>$/;"	l
c0106635	obj/kernel.asm	/^c0106635:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010663a	obj/kernel.asm	/^c010663a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106640	obj/kernel.asm	/^c0106640:	c7 04 24 3a ce 10 c0 	movl   $0xc010ce3a,(%esp)$/;"	l
c0106647	obj/kernel.asm	/^c0106647:	e8 07 9d ff ff       	call   c0100353 <cprintf>$/;"	l
c010664c	obj/kernel.asm	/^c010664c:	c9                   	leave  $/;"	l
c010664d	obj/kernel.asm	/^c010664d:	c3                   	ret    $/;"	l
c010664e	obj/kernel.asm	/^c010664e <check_boot_pgdir>:$/;"	l
c010664e	obj/kernel.asm	/^c010664e:	55                   	push   %ebp$/;"	l
c010664f	obj/kernel.asm	/^c010664f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106651	obj/kernel.asm	/^c0106651:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106654	obj/kernel.asm	/^c0106654:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010665b	obj/kernel.asm	/^c010665b:	e9 ca 00 00 00       	jmp    c010672a <check_boot_pgdir+0xdc>$/;"	l
c0106660	obj/kernel.asm	/^c0106660:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106663	obj/kernel.asm	/^c0106663:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106666	obj/kernel.asm	/^c0106666:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106669	obj/kernel.asm	/^c0106669:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010666c	obj/kernel.asm	/^c010666c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010666f	obj/kernel.asm	/^c010666f:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0106674	obj/kernel.asm	/^c0106674:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0106677	obj/kernel.asm	/^c0106677:	72 23                	jb     c010669c <check_boot_pgdir+0x4e>$/;"	l
c0106679	obj/kernel.asm	/^c0106679:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010667c	obj/kernel.asm	/^c010667c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106680	obj/kernel.asm	/^c0106680:	c7 44 24 08 0c ca 10 	movl   $0xc010ca0c,0x8(%esp)$/;"	l
c0106687	obj/kernel.asm	/^c0106687:	c0 $/;"	l
c0106688	obj/kernel.asm	/^c0106688:	c7 44 24 04 b2 02 00 	movl   $0x2b2,0x4(%esp)$/;"	l
c010668f	obj/kernel.asm	/^c010668f:	00 $/;"	l
c0106690	obj/kernel.asm	/^c0106690:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106697	obj/kernel.asm	/^c0106697:	e8 39 a7 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010669c	obj/kernel.asm	/^c010669c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010669f	obj/kernel.asm	/^c010669f:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01066a4	obj/kernel.asm	/^c01066a4:	89 c2                	mov    %eax,%edx$/;"	l
c01066a6	obj/kernel.asm	/^c01066a6:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01066ab	obj/kernel.asm	/^c01066ab:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01066b2	obj/kernel.asm	/^c01066b2:	00 $/;"	l
c01066b3	obj/kernel.asm	/^c01066b3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01066b7	obj/kernel.asm	/^c01066b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01066ba	obj/kernel.asm	/^c01066ba:	e8 f1 f0 ff ff       	call   c01057b0 <get_pte>$/;"	l
c01066bf	obj/kernel.asm	/^c01066bf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01066c2	obj/kernel.asm	/^c01066c2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01066c6	obj/kernel.asm	/^c01066c6:	75 24                	jne    c01066ec <check_boot_pgdir+0x9e>$/;"	l
c01066c8	obj/kernel.asm	/^c01066c8:	c7 44 24 0c 54 ce 10 	movl   $0xc010ce54,0xc(%esp)$/;"	l
c01066cf	obj/kernel.asm	/^c01066cf:	c0 $/;"	l
c01066d0	obj/kernel.asm	/^c01066d0:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01066d7	obj/kernel.asm	/^c01066d7:	c0 $/;"	l
c01066d8	obj/kernel.asm	/^c01066d8:	c7 44 24 04 b2 02 00 	movl   $0x2b2,0x4(%esp)$/;"	l
c01066df	obj/kernel.asm	/^c01066df:	00 $/;"	l
c01066e0	obj/kernel.asm	/^c01066e0:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01066e7	obj/kernel.asm	/^c01066e7:	e8 e9 a6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01066ec	obj/kernel.asm	/^c01066ec:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01066ef	obj/kernel.asm	/^c01066ef:	8b 00                	mov    (%eax),%eax$/;"	l
c01066f1	obj/kernel.asm	/^c01066f1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01066f6	obj/kernel.asm	/^c01066f6:	89 c2                	mov    %eax,%edx$/;"	l
c01066f8	obj/kernel.asm	/^c01066f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01066fb	obj/kernel.asm	/^c01066fb:	39 c2                	cmp    %eax,%edx$/;"	l
c01066fd	obj/kernel.asm	/^c01066fd:	74 24                	je     c0106723 <check_boot_pgdir+0xd5>$/;"	l
c01066ff	obj/kernel.asm	/^c01066ff:	c7 44 24 0c 91 ce 10 	movl   $0xc010ce91,0xc(%esp)$/;"	l
c0106706	obj/kernel.asm	/^c0106706:	c0 $/;"	l
c0106707	obj/kernel.asm	/^c0106707:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c010670e	obj/kernel.asm	/^c010670e:	c0 $/;"	l
c010670f	obj/kernel.asm	/^c010670f:	c7 44 24 04 b3 02 00 	movl   $0x2b3,0x4(%esp)$/;"	l
c0106716	obj/kernel.asm	/^c0106716:	00 $/;"	l
c0106717	obj/kernel.asm	/^c0106717:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010671e	obj/kernel.asm	/^c010671e:	e8 b2 a6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106723	obj/kernel.asm	/^c0106723:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c010672a	obj/kernel.asm	/^c010672a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010672d	obj/kernel.asm	/^c010672d:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0106732	obj/kernel.asm	/^c0106732:	39 c2                	cmp    %eax,%edx$/;"	l
c0106734	obj/kernel.asm	/^c0106734:	0f 82 26 ff ff ff    	jb     c0106660 <check_boot_pgdir+0x12>$/;"	l
c010673a	obj/kernel.asm	/^c010673a:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c010673f	obj/kernel.asm	/^c010673f:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c0106744	obj/kernel.asm	/^c0106744:	8b 00                	mov    (%eax),%eax$/;"	l
c0106746	obj/kernel.asm	/^c0106746:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010674b	obj/kernel.asm	/^c010674b:	89 c2                	mov    %eax,%edx$/;"	l
c010674d	obj/kernel.asm	/^c010674d:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0106752	obj/kernel.asm	/^c0106752:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106755	obj/kernel.asm	/^c0106755:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c010675c	obj/kernel.asm	/^c010675c:	77 23                	ja     c0106781 <check_boot_pgdir+0x133>$/;"	l
c010675e	obj/kernel.asm	/^c010675e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106761	obj/kernel.asm	/^c0106761:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106765	obj/kernel.asm	/^c0106765:	c7 44 24 08 b0 ca 10 	movl   $0xc010cab0,0x8(%esp)$/;"	l
c010676c	obj/kernel.asm	/^c010676c:	c0 $/;"	l
c010676d	obj/kernel.asm	/^c010676d:	c7 44 24 04 b6 02 00 	movl   $0x2b6,0x4(%esp)$/;"	l
c0106774	obj/kernel.asm	/^c0106774:	00 $/;"	l
c0106775	obj/kernel.asm	/^c0106775:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010677c	obj/kernel.asm	/^c010677c:	e8 54 a6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106781	obj/kernel.asm	/^c0106781:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106784	obj/kernel.asm	/^c0106784:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0106789	obj/kernel.asm	/^c0106789:	39 c2                	cmp    %eax,%edx$/;"	l
c010678b	obj/kernel.asm	/^c010678b:	74 24                	je     c01067b1 <check_boot_pgdir+0x163>$/;"	l
c010678d	obj/kernel.asm	/^c010678d:	c7 44 24 0c a8 ce 10 	movl   $0xc010cea8,0xc(%esp)$/;"	l
c0106794	obj/kernel.asm	/^c0106794:	c0 $/;"	l
c0106795	obj/kernel.asm	/^c0106795:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c010679c	obj/kernel.asm	/^c010679c:	c0 $/;"	l
c010679d	obj/kernel.asm	/^c010679d:	c7 44 24 04 b6 02 00 	movl   $0x2b6,0x4(%esp)$/;"	l
c01067a4	obj/kernel.asm	/^c01067a4:	00 $/;"	l
c01067a5	obj/kernel.asm	/^c01067a5:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01067ac	obj/kernel.asm	/^c01067ac:	e8 24 a6 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01067b1	obj/kernel.asm	/^c01067b1:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01067b6	obj/kernel.asm	/^c01067b6:	8b 00                	mov    (%eax),%eax$/;"	l
c01067b8	obj/kernel.asm	/^c01067b8:	85 c0                	test   %eax,%eax$/;"	l
c01067ba	obj/kernel.asm	/^c01067ba:	74 24                	je     c01067e0 <check_boot_pgdir+0x192>$/;"	l
c01067bc	obj/kernel.asm	/^c01067bc:	c7 44 24 0c dc ce 10 	movl   $0xc010cedc,0xc(%esp)$/;"	l
c01067c3	obj/kernel.asm	/^c01067c3:	c0 $/;"	l
c01067c4	obj/kernel.asm	/^c01067c4:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01067cb	obj/kernel.asm	/^c01067cb:	c0 $/;"	l
c01067cc	obj/kernel.asm	/^c01067cc:	c7 44 24 04 b8 02 00 	movl   $0x2b8,0x4(%esp)$/;"	l
c01067d3	obj/kernel.asm	/^c01067d3:	00 $/;"	l
c01067d4	obj/kernel.asm	/^c01067d4:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01067db	obj/kernel.asm	/^c01067db:	e8 f5 a5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01067e0	obj/kernel.asm	/^c01067e0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01067e7	obj/kernel.asm	/^c01067e7:	e8 5d e8 ff ff       	call   c0105049 <alloc_pages>$/;"	l
c01067ec	obj/kernel.asm	/^c01067ec:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01067ef	obj/kernel.asm	/^c01067ef:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01067f4	obj/kernel.asm	/^c01067f4:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c01067fb	obj/kernel.asm	/^c01067fb:	00 $/;"	l
c01067fc	obj/kernel.asm	/^c01067fc:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c0106803	obj/kernel.asm	/^c0106803:	00 $/;"	l
c0106804	obj/kernel.asm	/^c0106804:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106807	obj/kernel.asm	/^c0106807:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010680b	obj/kernel.asm	/^c010680b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010680e	obj/kernel.asm	/^c010680e:	e8 98 f5 ff ff       	call   c0105dab <page_insert>$/;"	l
c0106813	obj/kernel.asm	/^c0106813:	85 c0                	test   %eax,%eax$/;"	l
c0106815	obj/kernel.asm	/^c0106815:	74 24                	je     c010683b <check_boot_pgdir+0x1ed>$/;"	l
c0106817	obj/kernel.asm	/^c0106817:	c7 44 24 0c f0 ce 10 	movl   $0xc010cef0,0xc(%esp)$/;"	l
c010681e	obj/kernel.asm	/^c010681e:	c0 $/;"	l
c010681f	obj/kernel.asm	/^c010681f:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106826	obj/kernel.asm	/^c0106826:	c0 $/;"	l
c0106827	obj/kernel.asm	/^c0106827:	c7 44 24 04 bc 02 00 	movl   $0x2bc,0x4(%esp)$/;"	l
c010682e	obj/kernel.asm	/^c010682e:	00 $/;"	l
c010682f	obj/kernel.asm	/^c010682f:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106836	obj/kernel.asm	/^c0106836:	e8 9a a5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010683b	obj/kernel.asm	/^c010683b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010683e	obj/kernel.asm	/^c010683e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106841	obj/kernel.asm	/^c0106841:	e8 fe e5 ff ff       	call   c0104e44 <page_ref>$/;"	l
c0106846	obj/kernel.asm	/^c0106846:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106849	obj/kernel.asm	/^c0106849:	74 24                	je     c010686f <check_boot_pgdir+0x221>$/;"	l
c010684b	obj/kernel.asm	/^c010684b:	c7 44 24 0c 1e cf 10 	movl   $0xc010cf1e,0xc(%esp)$/;"	l
c0106852	obj/kernel.asm	/^c0106852:	c0 $/;"	l
c0106853	obj/kernel.asm	/^c0106853:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c010685a	obj/kernel.asm	/^c010685a:	c0 $/;"	l
c010685b	obj/kernel.asm	/^c010685b:	c7 44 24 04 bd 02 00 	movl   $0x2bd,0x4(%esp)$/;"	l
c0106862	obj/kernel.asm	/^c0106862:	00 $/;"	l
c0106863	obj/kernel.asm	/^c0106863:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c010686a	obj/kernel.asm	/^c010686a:	e8 66 a5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010686f	obj/kernel.asm	/^c010686f:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0106874	obj/kernel.asm	/^c0106874:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c010687b	obj/kernel.asm	/^c010687b:	00 $/;"	l
c010687c	obj/kernel.asm	/^c010687c:	c7 44 24 08 00 11 00 	movl   $0x1100,0x8(%esp)$/;"	l
c0106883	obj/kernel.asm	/^c0106883:	00 $/;"	l
c0106884	obj/kernel.asm	/^c0106884:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106887	obj/kernel.asm	/^c0106887:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010688b	obj/kernel.asm	/^c010688b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010688e	obj/kernel.asm	/^c010688e:	e8 18 f5 ff ff       	call   c0105dab <page_insert>$/;"	l
c0106893	obj/kernel.asm	/^c0106893:	85 c0                	test   %eax,%eax$/;"	l
c0106895	obj/kernel.asm	/^c0106895:	74 24                	je     c01068bb <check_boot_pgdir+0x26d>$/;"	l
c0106897	obj/kernel.asm	/^c0106897:	c7 44 24 0c 30 cf 10 	movl   $0xc010cf30,0xc(%esp)$/;"	l
c010689e	obj/kernel.asm	/^c010689e:	c0 $/;"	l
c010689f	obj/kernel.asm	/^c010689f:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01068a6	obj/kernel.asm	/^c01068a6:	c0 $/;"	l
c01068a7	obj/kernel.asm	/^c01068a7:	c7 44 24 04 be 02 00 	movl   $0x2be,0x4(%esp)$/;"	l
c01068ae	obj/kernel.asm	/^c01068ae:	00 $/;"	l
c01068af	obj/kernel.asm	/^c01068af:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01068b6	obj/kernel.asm	/^c01068b6:	e8 1a a5 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01068bb	obj/kernel.asm	/^c01068bb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01068be	obj/kernel.asm	/^c01068be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01068c1	obj/kernel.asm	/^c01068c1:	e8 7e e5 ff ff       	call   c0104e44 <page_ref>$/;"	l
c01068c6	obj/kernel.asm	/^c01068c6:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01068c9	obj/kernel.asm	/^c01068c9:	74 24                	je     c01068ef <check_boot_pgdir+0x2a1>$/;"	l
c01068cb	obj/kernel.asm	/^c01068cb:	c7 44 24 0c 67 cf 10 	movl   $0xc010cf67,0xc(%esp)$/;"	l
c01068d2	obj/kernel.asm	/^c01068d2:	c0 $/;"	l
c01068d3	obj/kernel.asm	/^c01068d3:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c01068da	obj/kernel.asm	/^c01068da:	c0 $/;"	l
c01068db	obj/kernel.asm	/^c01068db:	c7 44 24 04 bf 02 00 	movl   $0x2bf,0x4(%esp)$/;"	l
c01068e2	obj/kernel.asm	/^c01068e2:	00 $/;"	l
c01068e3	obj/kernel.asm	/^c01068e3:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c01068ea	obj/kernel.asm	/^c01068ea:	e8 e6 a4 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01068ef	obj/kernel.asm	/^c01068ef:	c7 45 dc 78 cf 10 c0 	movl   $0xc010cf78,-0x24(%ebp)$/;"	l
c01068f6	obj/kernel.asm	/^c01068f6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01068f9	obj/kernel.asm	/^c01068f9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01068fd	obj/kernel.asm	/^c01068fd:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106904	obj/kernel.asm	/^c0106904:	e8 eb 4e 00 00       	call   c010b7f4 <strcpy>$/;"	l
c0106909	obj/kernel.asm	/^c0106909:	c7 44 24 04 00 11 00 	movl   $0x1100,0x4(%esp)$/;"	l
c0106910	obj/kernel.asm	/^c0106910:	00 $/;"	l
c0106911	obj/kernel.asm	/^c0106911:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106918	obj/kernel.asm	/^c0106918:	e8 50 4f 00 00       	call   c010b86d <strcmp>$/;"	l
c010691d	obj/kernel.asm	/^c010691d:	85 c0                	test   %eax,%eax$/;"	l
c010691f	obj/kernel.asm	/^c010691f:	74 24                	je     c0106945 <check_boot_pgdir+0x2f7>$/;"	l
c0106921	obj/kernel.asm	/^c0106921:	c7 44 24 0c 90 cf 10 	movl   $0xc010cf90,0xc(%esp)$/;"	l
c0106928	obj/kernel.asm	/^c0106928:	c0 $/;"	l
c0106929	obj/kernel.asm	/^c0106929:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106930	obj/kernel.asm	/^c0106930:	c0 $/;"	l
c0106931	obj/kernel.asm	/^c0106931:	c7 44 24 04 c3 02 00 	movl   $0x2c3,0x4(%esp)$/;"	l
c0106938	obj/kernel.asm	/^c0106938:	00 $/;"	l
c0106939	obj/kernel.asm	/^c0106939:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106940	obj/kernel.asm	/^c0106940:	e8 90 a4 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106945	obj/kernel.asm	/^c0106945:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106948	obj/kernel.asm	/^c0106948:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010694b	obj/kernel.asm	/^c010694b:	e8 4a e4 ff ff       	call   c0104d9a <page2kva>$/;"	l
c0106950	obj/kernel.asm	/^c0106950:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0106955	obj/kernel.asm	/^c0106955:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0106958	obj/kernel.asm	/^c0106958:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c010695f	obj/kernel.asm	/^c010695f:	e8 38 4e 00 00       	call   c010b79c <strlen>$/;"	l
c0106964	obj/kernel.asm	/^c0106964:	85 c0                	test   %eax,%eax$/;"	l
c0106966	obj/kernel.asm	/^c0106966:	74 24                	je     c010698c <check_boot_pgdir+0x33e>$/;"	l
c0106968	obj/kernel.asm	/^c0106968:	c7 44 24 0c c8 cf 10 	movl   $0xc010cfc8,0xc(%esp)$/;"	l
c010696f	obj/kernel.asm	/^c010696f:	c0 $/;"	l
c0106970	obj/kernel.asm	/^c0106970:	c7 44 24 08 f9 ca 10 	movl   $0xc010caf9,0x8(%esp)$/;"	l
c0106977	obj/kernel.asm	/^c0106977:	c0 $/;"	l
c0106978	obj/kernel.asm	/^c0106978:	c7 44 24 04 c6 02 00 	movl   $0x2c6,0x4(%esp)$/;"	l
c010697f	obj/kernel.asm	/^c010697f:	00 $/;"	l
c0106980	obj/kernel.asm	/^c0106980:	c7 04 24 d4 ca 10 c0 	movl   $0xc010cad4,(%esp)$/;"	l
c0106987	obj/kernel.asm	/^c0106987:	e8 49 a4 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010698c	obj/kernel.asm	/^c010698c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106993	obj/kernel.asm	/^c0106993:	00 $/;"	l
c0106994	obj/kernel.asm	/^c0106994:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106997	obj/kernel.asm	/^c0106997:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010699a	obj/kernel.asm	/^c010699a:	e8 15 e7 ff ff       	call   c01050b4 <free_pages>$/;"	l
c010699f	obj/kernel.asm	/^c010699f:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01069a4	obj/kernel.asm	/^c01069a4:	8b 00                	mov    (%eax),%eax$/;"	l
c01069a6	obj/kernel.asm	/^c01069a6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01069ab	obj/kernel.asm	/^c01069ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01069ae	obj/kernel.asm	/^c01069ae:	e8 a2 e3 ff ff       	call   c0104d55 <pa2page>$/;"	l
c01069b3	obj/kernel.asm	/^c01069b3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01069ba	obj/kernel.asm	/^c01069ba:	00 $/;"	l
c01069bb	obj/kernel.asm	/^c01069bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01069be	obj/kernel.asm	/^c01069be:	e8 f1 e6 ff ff       	call   c01050b4 <free_pages>$/;"	l
c01069c3	obj/kernel.asm	/^c01069c3:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c01069c8	obj/kernel.asm	/^c01069c8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01069ce	obj/kernel.asm	/^c01069ce:	c7 04 24 ec cf 10 c0 	movl   $0xc010cfec,(%esp)$/;"	l
c01069d5	obj/kernel.asm	/^c01069d5:	e8 79 99 ff ff       	call   c0100353 <cprintf>$/;"	l
c01069da	obj/kernel.asm	/^c01069da:	c9                   	leave  $/;"	l
c01069db	obj/kernel.asm	/^c01069db:	c3                   	ret    $/;"	l
c01069dc	obj/kernel.asm	/^c01069dc <perm2str>:$/;"	l
c01069dc	obj/kernel.asm	/^c01069dc:	55                   	push   %ebp$/;"	l
c01069dd	obj/kernel.asm	/^c01069dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01069df	obj/kernel.asm	/^c01069df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01069e2	obj/kernel.asm	/^c01069e2:	83 e0 04             	and    $0x4,%eax$/;"	l
c01069e5	obj/kernel.asm	/^c01069e5:	85 c0                	test   %eax,%eax$/;"	l
c01069e7	obj/kernel.asm	/^c01069e7:	74 07                	je     c01069f0 <perm2str+0x14>$/;"	l
c01069e9	obj/kernel.asm	/^c01069e9:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c01069ee	obj/kernel.asm	/^c01069ee:	eb 05                	jmp    c01069f5 <perm2str+0x19>$/;"	l
c01069f0	obj/kernel.asm	/^c01069f0:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c01069f5	obj/kernel.asm	/^c01069f5:	a2 68 cf 19 c0       	mov    %al,0xc019cf68$/;"	l
c01069fa	obj/kernel.asm	/^c01069fa:	c6 05 69 cf 19 c0 72 	movb   $0x72,0xc019cf69$/;"	l
c0106a01	obj/kernel.asm	/^c0106a01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106a04	obj/kernel.asm	/^c0106a04:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106a07	obj/kernel.asm	/^c0106a07:	85 c0                	test   %eax,%eax$/;"	l
c0106a09	obj/kernel.asm	/^c0106a09:	74 07                	je     c0106a12 <perm2str+0x36>$/;"	l
c0106a0b	obj/kernel.asm	/^c0106a0b:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c0106a10	obj/kernel.asm	/^c0106a10:	eb 05                	jmp    c0106a17 <perm2str+0x3b>$/;"	l
c0106a12	obj/kernel.asm	/^c0106a12:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0106a17	obj/kernel.asm	/^c0106a17:	a2 6a cf 19 c0       	mov    %al,0xc019cf6a$/;"	l
c0106a1c	obj/kernel.asm	/^c0106a1c:	c6 05 6b cf 19 c0 00 	movb   $0x0,0xc019cf6b$/;"	l
c0106a23	obj/kernel.asm	/^c0106a23:	b8 68 cf 19 c0       	mov    $0xc019cf68,%eax$/;"	l
c0106a28	obj/kernel.asm	/^c0106a28:	5d                   	pop    %ebp$/;"	l
c0106a29	obj/kernel.asm	/^c0106a29:	c3                   	ret    $/;"	l
c0106a2a	obj/kernel.asm	/^c0106a2a <get_pgtable_items>:$/;"	l
c0106a2a	obj/kernel.asm	/^c0106a2a:	55                   	push   %ebp$/;"	l
c0106a2b	obj/kernel.asm	/^c0106a2b:	89 e5                	mov    %esp,%ebp$/;"	l
c0106a2d	obj/kernel.asm	/^c0106a2d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0106a30	obj/kernel.asm	/^c0106a30:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106a33	obj/kernel.asm	/^c0106a33:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106a36	obj/kernel.asm	/^c0106a36:	72 0a                	jb     c0106a42 <get_pgtable_items+0x18>$/;"	l
c0106a38	obj/kernel.asm	/^c0106a38:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106a3d	obj/kernel.asm	/^c0106a3d:	e9 9c 00 00 00       	jmp    c0106ade <get_pgtable_items+0xb4>$/;"	l
c0106a42	obj/kernel.asm	/^c0106a42:	eb 04                	jmp    c0106a48 <get_pgtable_items+0x1e>$/;"	l
c0106a44	obj/kernel.asm	/^c0106a44:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106a48	obj/kernel.asm	/^c0106a48:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106a4b	obj/kernel.asm	/^c0106a4b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106a4e	obj/kernel.asm	/^c0106a4e:	73 18                	jae    c0106a68 <get_pgtable_items+0x3e>$/;"	l
c0106a50	obj/kernel.asm	/^c0106a50:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106a53	obj/kernel.asm	/^c0106a53:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106a5a	obj/kernel.asm	/^c0106a5a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106a5d	obj/kernel.asm	/^c0106a5d:	01 d0                	add    %edx,%eax$/;"	l
c0106a5f	obj/kernel.asm	/^c0106a5f:	8b 00                	mov    (%eax),%eax$/;"	l
c0106a61	obj/kernel.asm	/^c0106a61:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106a64	obj/kernel.asm	/^c0106a64:	85 c0                	test   %eax,%eax$/;"	l
c0106a66	obj/kernel.asm	/^c0106a66:	74 dc                	je     c0106a44 <get_pgtable_items+0x1a>$/;"	l
c0106a68	obj/kernel.asm	/^c0106a68:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106a6b	obj/kernel.asm	/^c0106a6b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106a6e	obj/kernel.asm	/^c0106a6e:	73 69                	jae    c0106ad9 <get_pgtable_items+0xaf>$/;"	l
c0106a70	obj/kernel.asm	/^c0106a70:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0106a74	obj/kernel.asm	/^c0106a74:	74 08                	je     c0106a7e <get_pgtable_items+0x54>$/;"	l
c0106a76	obj/kernel.asm	/^c0106a76:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0106a79	obj/kernel.asm	/^c0106a79:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106a7c	obj/kernel.asm	/^c0106a7c:	89 10                	mov    %edx,(%eax)$/;"	l
c0106a7e	obj/kernel.asm	/^c0106a7e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106a81	obj/kernel.asm	/^c0106a81:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0106a84	obj/kernel.asm	/^c0106a84:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c0106a87	obj/kernel.asm	/^c0106a87:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106a8e	obj/kernel.asm	/^c0106a8e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106a91	obj/kernel.asm	/^c0106a91:	01 d0                	add    %edx,%eax$/;"	l
c0106a93	obj/kernel.asm	/^c0106a93:	8b 00                	mov    (%eax),%eax$/;"	l
c0106a95	obj/kernel.asm	/^c0106a95:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106a98	obj/kernel.asm	/^c0106a98:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0106a9b	obj/kernel.asm	/^c0106a9b:	eb 04                	jmp    c0106aa1 <get_pgtable_items+0x77>$/;"	l
c0106a9d	obj/kernel.asm	/^c0106a9d:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106aa1	obj/kernel.asm	/^c0106aa1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106aa4	obj/kernel.asm	/^c0106aa4:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106aa7	obj/kernel.asm	/^c0106aa7:	73 1d                	jae    c0106ac6 <get_pgtable_items+0x9c>$/;"	l
c0106aa9	obj/kernel.asm	/^c0106aa9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106aac	obj/kernel.asm	/^c0106aac:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106ab3	obj/kernel.asm	/^c0106ab3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106ab6	obj/kernel.asm	/^c0106ab6:	01 d0                	add    %edx,%eax$/;"	l
c0106ab8	obj/kernel.asm	/^c0106ab8:	8b 00                	mov    (%eax),%eax$/;"	l
c0106aba	obj/kernel.asm	/^c0106aba:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106abd	obj/kernel.asm	/^c0106abd:	89 c2                	mov    %eax,%edx$/;"	l
c0106abf	obj/kernel.asm	/^c0106abf:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106ac2	obj/kernel.asm	/^c0106ac2:	39 c2                	cmp    %eax,%edx$/;"	l
c0106ac4	obj/kernel.asm	/^c0106ac4:	74 d7                	je     c0106a9d <get_pgtable_items+0x73>$/;"	l
c0106ac6	obj/kernel.asm	/^c0106ac6:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0106aca	obj/kernel.asm	/^c0106aca:	74 08                	je     c0106ad4 <get_pgtable_items+0xaa>$/;"	l
c0106acc	obj/kernel.asm	/^c0106acc:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0106acf	obj/kernel.asm	/^c0106acf:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106ad2	obj/kernel.asm	/^c0106ad2:	89 10                	mov    %edx,(%eax)$/;"	l
c0106ad4	obj/kernel.asm	/^c0106ad4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106ad7	obj/kernel.asm	/^c0106ad7:	eb 05                	jmp    c0106ade <get_pgtable_items+0xb4>$/;"	l
c0106ad9	obj/kernel.asm	/^c0106ad9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106ade	obj/kernel.asm	/^c0106ade:	c9                   	leave  $/;"	l
c0106adf	obj/kernel.asm	/^c0106adf:	c3                   	ret    $/;"	l
c0106ae0	obj/kernel.asm	/^c0106ae0 <print_pgdir>:$/;"	l
c0106ae0	obj/kernel.asm	/^c0106ae0:	55                   	push   %ebp$/;"	l
c0106ae1	obj/kernel.asm	/^c0106ae1:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ae3	obj/kernel.asm	/^c0106ae3:	57                   	push   %edi$/;"	l
c0106ae4	obj/kernel.asm	/^c0106ae4:	56                   	push   %esi$/;"	l
c0106ae5	obj/kernel.asm	/^c0106ae5:	53                   	push   %ebx$/;"	l
c0106ae6	obj/kernel.asm	/^c0106ae6:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
c0106ae9	obj/kernel.asm	/^c0106ae9:	c7 04 24 0c d0 10 c0 	movl   $0xc010d00c,(%esp)$/;"	l
c0106af0	obj/kernel.asm	/^c0106af0:	e8 5e 98 ff ff       	call   c0100353 <cprintf>$/;"	l
c0106af5	obj/kernel.asm	/^c0106af5:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106afc	obj/kernel.asm	/^c0106afc:	e9 fa 00 00 00       	jmp    c0106bfb <print_pgdir+0x11b>$/;"	l
c0106b01	obj/kernel.asm	/^c0106b01:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106b04	obj/kernel.asm	/^c0106b04:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106b07	obj/kernel.asm	/^c0106b07:	e8 d0 fe ff ff       	call   c01069dc <perm2str>$/;"	l
c0106b0c	obj/kernel.asm	/^c0106b0c:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106b0f	obj/kernel.asm	/^c0106b0f:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106b12	obj/kernel.asm	/^c0106b12:	29 d1                	sub    %edx,%ecx$/;"	l
c0106b14	obj/kernel.asm	/^c0106b14:	89 ca                	mov    %ecx,%edx$/;"	l
c0106b16	obj/kernel.asm	/^c0106b16:	89 d6                	mov    %edx,%esi$/;"	l
c0106b18	obj/kernel.asm	/^c0106b18:	c1 e6 16             	shl    $0x16,%esi$/;"	l
c0106b1b	obj/kernel.asm	/^c0106b1b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106b1e	obj/kernel.asm	/^c0106b1e:	89 d3                	mov    %edx,%ebx$/;"	l
c0106b20	obj/kernel.asm	/^c0106b20:	c1 e3 16             	shl    $0x16,%ebx$/;"	l
c0106b23	obj/kernel.asm	/^c0106b23:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106b26	obj/kernel.asm	/^c0106b26:	89 d1                	mov    %edx,%ecx$/;"	l
c0106b28	obj/kernel.asm	/^c0106b28:	c1 e1 16             	shl    $0x16,%ecx$/;"	l
c0106b2b	obj/kernel.asm	/^c0106b2b:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
c0106b2e	obj/kernel.asm	/^c0106b2e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106b31	obj/kernel.asm	/^c0106b31:	29 d7                	sub    %edx,%edi$/;"	l
c0106b33	obj/kernel.asm	/^c0106b33:	89 fa                	mov    %edi,%edx$/;"	l
c0106b35	obj/kernel.asm	/^c0106b35:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0106b39	obj/kernel.asm	/^c0106b39:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106b3d	obj/kernel.asm	/^c0106b3d:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106b41	obj/kernel.asm	/^c0106b41:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106b45	obj/kernel.asm	/^c0106b45:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106b49	obj/kernel.asm	/^c0106b49:	c7 04 24 3d d0 10 c0 	movl   $0xc010d03d,(%esp)$/;"	l
c0106b50	obj/kernel.asm	/^c0106b50:	e8 fe 97 ff ff       	call   c0100353 <cprintf>$/;"	l
c0106b55	obj/kernel.asm	/^c0106b55:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106b58	obj/kernel.asm	/^c0106b58:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c0106b5b	obj/kernel.asm	/^c0106b5b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0106b5e	obj/kernel.asm	/^c0106b5e:	eb 54                	jmp    c0106bb4 <print_pgdir+0xd4>$/;"	l
c0106b60	obj/kernel.asm	/^c0106b60:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106b63	obj/kernel.asm	/^c0106b63:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106b66	obj/kernel.asm	/^c0106b66:	e8 71 fe ff ff       	call   c01069dc <perm2str>$/;"	l
c0106b6b	obj/kernel.asm	/^c0106b6b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c0106b6e	obj/kernel.asm	/^c0106b6e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106b71	obj/kernel.asm	/^c0106b71:	29 d1                	sub    %edx,%ecx$/;"	l
c0106b73	obj/kernel.asm	/^c0106b73:	89 ca                	mov    %ecx,%edx$/;"	l
c0106b75	obj/kernel.asm	/^c0106b75:	89 d6                	mov    %edx,%esi$/;"	l
c0106b77	obj/kernel.asm	/^c0106b77:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
c0106b7a	obj/kernel.asm	/^c0106b7a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0106b7d	obj/kernel.asm	/^c0106b7d:	89 d3                	mov    %edx,%ebx$/;"	l
c0106b7f	obj/kernel.asm	/^c0106b7f:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
c0106b82	obj/kernel.asm	/^c0106b82:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106b85	obj/kernel.asm	/^c0106b85:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0106b88	obj/kernel.asm	/^c0106b88:	89 d1                	mov    %edx,%ecx$/;"	l
c0106b8a	obj/kernel.asm	/^c0106b8a:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
c0106b8d	obj/kernel.asm	/^c0106b8d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106b90	obj/kernel.asm	/^c0106b90:	29 d7                	sub    %edx,%edi$/;"	l
c0106b92	obj/kernel.asm	/^c0106b92:	89 fa                	mov    %edi,%edx$/;"	l
c0106b94	obj/kernel.asm	/^c0106b94:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0106b98	obj/kernel.asm	/^c0106b98:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106b9c	obj/kernel.asm	/^c0106b9c:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106ba0	obj/kernel.asm	/^c0106ba0:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106ba4	obj/kernel.asm	/^c0106ba4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106ba8	obj/kernel.asm	/^c0106ba8:	c7 04 24 5c d0 10 c0 	movl   $0xc010d05c,(%esp)$/;"	l
c0106baf	obj/kernel.asm	/^c0106baf:	e8 9f 97 ff ff       	call   c0100353 <cprintf>$/;"	l
c0106bb4	obj/kernel.asm	/^c0106bb4:	ba 00 00 c0 fa       	mov    $0xfac00000,%edx$/;"	l
c0106bb9	obj/kernel.asm	/^c0106bb9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0106bbc	obj/kernel.asm	/^c0106bbc:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106bbf	obj/kernel.asm	/^c0106bbf:	89 ce                	mov    %ecx,%esi$/;"	l
c0106bc1	obj/kernel.asm	/^c0106bc1:	c1 e6 0a             	shl    $0xa,%esi$/;"	l
c0106bc4	obj/kernel.asm	/^c0106bc4:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0106bc7	obj/kernel.asm	/^c0106bc7:	89 cb                	mov    %ecx,%ebx$/;"	l
c0106bc9	obj/kernel.asm	/^c0106bc9:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c0106bcc	obj/kernel.asm	/^c0106bcc:	8d 4d d4             	lea    -0x2c(%ebp),%ecx$/;"	l
c0106bcf	obj/kernel.asm	/^c0106bcf:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106bd3	obj/kernel.asm	/^c0106bd3:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
c0106bd6	obj/kernel.asm	/^c0106bd6:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106bda	obj/kernel.asm	/^c0106bda:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106bde	obj/kernel.asm	/^c0106bde:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106be2	obj/kernel.asm	/^c0106be2:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0106be6	obj/kernel.asm	/^c0106be6:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0106be9	obj/kernel.asm	/^c0106be9:	e8 3c fe ff ff       	call   c0106a2a <get_pgtable_items>$/;"	l
c0106bee	obj/kernel.asm	/^c0106bee:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106bf1	obj/kernel.asm	/^c0106bf1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106bf5	obj/kernel.asm	/^c0106bf5:	0f 85 65 ff ff ff    	jne    c0106b60 <print_pgdir+0x80>$/;"	l
c0106bfb	obj/kernel.asm	/^c0106bfb:	ba 00 b0 fe fa       	mov    $0xfafeb000,%edx$/;"	l
c0106c00	obj/kernel.asm	/^c0106c00:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106c03	obj/kernel.asm	/^c0106c03:	8d 4d dc             	lea    -0x24(%ebp),%ecx$/;"	l
c0106c06	obj/kernel.asm	/^c0106c06:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106c0a	obj/kernel.asm	/^c0106c0a:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c0106c0d	obj/kernel.asm	/^c0106c0d:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106c11	obj/kernel.asm	/^c0106c11:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106c15	obj/kernel.asm	/^c0106c15:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106c19	obj/kernel.asm	/^c0106c19:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
c0106c20	obj/kernel.asm	/^c0106c20:	00 $/;"	l
c0106c21	obj/kernel.asm	/^c0106c21:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0106c28	obj/kernel.asm	/^c0106c28:	e8 fd fd ff ff       	call   c0106a2a <get_pgtable_items>$/;"	l
c0106c2d	obj/kernel.asm	/^c0106c2d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106c30	obj/kernel.asm	/^c0106c30:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106c34	obj/kernel.asm	/^c0106c34:	0f 85 c7 fe ff ff    	jne    c0106b01 <print_pgdir+0x21>$/;"	l
c0106c3a	obj/kernel.asm	/^c0106c3a:	c7 04 24 80 d0 10 c0 	movl   $0xc010d080,(%esp)$/;"	l
c0106c41	obj/kernel.asm	/^c0106c41:	e8 0d 97 ff ff       	call   c0100353 <cprintf>$/;"	l
c0106c46	obj/kernel.asm	/^c0106c46:	83 c4 4c             	add    $0x4c,%esp$/;"	l
c0106c49	obj/kernel.asm	/^c0106c49:	5b                   	pop    %ebx$/;"	l
c0106c4a	obj/kernel.asm	/^c0106c4a:	5e                   	pop    %esi$/;"	l
c0106c4b	obj/kernel.asm	/^c0106c4b:	5f                   	pop    %edi$/;"	l
c0106c4c	obj/kernel.asm	/^c0106c4c:	5d                   	pop    %ebp$/;"	l
c0106c4d	obj/kernel.asm	/^c0106c4d:	c3                   	ret    $/;"	l
c0106c4e	obj/kernel.asm	/^c0106c4e <pa2page>:$/;"	l
c0106c4e	obj/kernel.asm	/^c0106c4e:	55                   	push   %ebp$/;"	l
c0106c4f	obj/kernel.asm	/^c0106c4f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106c51	obj/kernel.asm	/^c0106c51:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106c54	obj/kernel.asm	/^c0106c54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106c57	obj/kernel.asm	/^c0106c57:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106c5a	obj/kernel.asm	/^c0106c5a:	89 c2                	mov    %eax,%edx$/;"	l
c0106c5c	obj/kernel.asm	/^c0106c5c:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0106c61	obj/kernel.asm	/^c0106c61:	39 c2                	cmp    %eax,%edx$/;"	l
c0106c63	obj/kernel.asm	/^c0106c63:	72 1c                	jb     c0106c81 <pa2page+0x33>$/;"	l
c0106c65	obj/kernel.asm	/^c0106c65:	c7 44 24 08 b4 d0 10 	movl   $0xc010d0b4,0x8(%esp)$/;"	l
c0106c6c	obj/kernel.asm	/^c0106c6c:	c0 $/;"	l
c0106c6d	obj/kernel.asm	/^c0106c6d:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0106c74	obj/kernel.asm	/^c0106c74:	00 $/;"	l
c0106c75	obj/kernel.asm	/^c0106c75:	c7 04 24 d3 d0 10 c0 	movl   $0xc010d0d3,(%esp)$/;"	l
c0106c7c	obj/kernel.asm	/^c0106c7c:	e8 54 a1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106c81	obj/kernel.asm	/^c0106c81:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c0106c86	obj/kernel.asm	/^c0106c86:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106c89	obj/kernel.asm	/^c0106c89:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106c8c	obj/kernel.asm	/^c0106c8c:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0106c8f	obj/kernel.asm	/^c0106c8f:	01 d0                	add    %edx,%eax$/;"	l
c0106c91	obj/kernel.asm	/^c0106c91:	c9                   	leave  $/;"	l
c0106c92	obj/kernel.asm	/^c0106c92:	c3                   	ret    $/;"	l
c0106c93	obj/kernel.asm	/^c0106c93 <pte2page>:$/;"	l
c0106c93	obj/kernel.asm	/^c0106c93:	55                   	push   %ebp$/;"	l
c0106c94	obj/kernel.asm	/^c0106c94:	89 e5                	mov    %esp,%ebp$/;"	l
c0106c96	obj/kernel.asm	/^c0106c96:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106c99	obj/kernel.asm	/^c0106c99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106c9c	obj/kernel.asm	/^c0106c9c:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106c9f	obj/kernel.asm	/^c0106c9f:	85 c0                	test   %eax,%eax$/;"	l
c0106ca1	obj/kernel.asm	/^c0106ca1:	75 1c                	jne    c0106cbf <pte2page+0x2c>$/;"	l
c0106ca3	obj/kernel.asm	/^c0106ca3:	c7 44 24 08 e4 d0 10 	movl   $0xc010d0e4,0x8(%esp)$/;"	l
c0106caa	obj/kernel.asm	/^c0106caa:	c0 $/;"	l
c0106cab	obj/kernel.asm	/^c0106cab:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0106cb2	obj/kernel.asm	/^c0106cb2:	00 $/;"	l
c0106cb3	obj/kernel.asm	/^c0106cb3:	c7 04 24 d3 d0 10 c0 	movl   $0xc010d0d3,(%esp)$/;"	l
c0106cba	obj/kernel.asm	/^c0106cba:	e8 16 a1 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106cbf	obj/kernel.asm	/^c0106cbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106cc2	obj/kernel.asm	/^c0106cc2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106cc7	obj/kernel.asm	/^c0106cc7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106cca	obj/kernel.asm	/^c0106cca:	e8 7f ff ff ff       	call   c0106c4e <pa2page>$/;"	l
c0106ccf	obj/kernel.asm	/^c0106ccf:	c9                   	leave  $/;"	l
c0106cd0	obj/kernel.asm	/^c0106cd0:	c3                   	ret    $/;"	l
c0106cd1	obj/kernel.asm	/^c0106cd1 <swap_init>:$/;"	l
c0106cd1	obj/kernel.asm	/^c0106cd1:	55                   	push   %ebp$/;"	l
c0106cd2	obj/kernel.asm	/^c0106cd2:	89 e5                	mov    %esp,%ebp$/;"	l
c0106cd4	obj/kernel.asm	/^c0106cd4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106cd7	obj/kernel.asm	/^c0106cd7:	e8 ce 22 00 00       	call   c0108faa <swapfs_init>$/;"	l
c0106cdc	obj/kernel.asm	/^c0106cdc:	a1 7c f0 19 c0       	mov    0xc019f07c,%eax$/;"	l
c0106ce1	obj/kernel.asm	/^c0106ce1:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c0106ce6	obj/kernel.asm	/^c0106ce6:	76 0c                	jbe    c0106cf4 <swap_init+0x23>$/;"	l
c0106ce8	obj/kernel.asm	/^c0106ce8:	a1 7c f0 19 c0       	mov    0xc019f07c,%eax$/;"	l
c0106ced	obj/kernel.asm	/^c0106ced:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c0106cf2	obj/kernel.asm	/^c0106cf2:	76 25                	jbe    c0106d19 <swap_init+0x48>$/;"	l
c0106cf4	obj/kernel.asm	/^c0106cf4:	a1 7c f0 19 c0       	mov    0xc019f07c,%eax$/;"	l
c0106cf9	obj/kernel.asm	/^c0106cf9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106cfd	obj/kernel.asm	/^c0106cfd:	c7 44 24 08 05 d1 10 	movl   $0xc010d105,0x8(%esp)$/;"	l
c0106d04	obj/kernel.asm	/^c0106d04:	c0 $/;"	l
c0106d05	obj/kernel.asm	/^c0106d05:	c7 44 24 04 27 00 00 	movl   $0x27,0x4(%esp)$/;"	l
c0106d0c	obj/kernel.asm	/^c0106d0c:	00 $/;"	l
c0106d0d	obj/kernel.asm	/^c0106d0d:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0106d14	obj/kernel.asm	/^c0106d14:	e8 bc a0 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106d19	obj/kernel.asm	/^c0106d19:	c7 05 74 cf 19 c0 60 	movl   $0xc012aa60,0xc019cf74$/;"	l
c0106d20	obj/kernel.asm	/^c0106d20:	aa 12 c0 $/;"	l
c0106d23	obj/kernel.asm	/^c0106d23:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c0106d28	obj/kernel.asm	/^c0106d28:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106d2b	obj/kernel.asm	/^c0106d2b:	ff d0                	call   *%eax$/;"	l
c0106d2d	obj/kernel.asm	/^c0106d2d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106d30	obj/kernel.asm	/^c0106d30:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106d34	obj/kernel.asm	/^c0106d34:	75 26                	jne    c0106d5c <swap_init+0x8b>$/;"	l
c0106d36	obj/kernel.asm	/^c0106d36:	c7 05 6c cf 19 c0 01 	movl   $0x1,0xc019cf6c$/;"	l
c0106d3d	obj/kernel.asm	/^c0106d3d:	00 00 00 $/;"	l
c0106d40	obj/kernel.asm	/^c0106d40:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c0106d45	obj/kernel.asm	/^c0106d45:	8b 00                	mov    (%eax),%eax$/;"	l
c0106d47	obj/kernel.asm	/^c0106d47:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106d4b	obj/kernel.asm	/^c0106d4b:	c7 04 24 2f d1 10 c0 	movl   $0xc010d12f,(%esp)$/;"	l
c0106d52	obj/kernel.asm	/^c0106d52:	e8 fc 95 ff ff       	call   c0100353 <cprintf>$/;"	l
c0106d57	obj/kernel.asm	/^c0106d57:	e8 a4 04 00 00       	call   c0107200 <check_swap>$/;"	l
c0106d5c	obj/kernel.asm	/^c0106d5c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106d5f	obj/kernel.asm	/^c0106d5f:	c9                   	leave  $/;"	l
c0106d60	obj/kernel.asm	/^c0106d60:	c3                   	ret    $/;"	l
c0106d61	obj/kernel.asm	/^c0106d61 <swap_init_mm>:$/;"	l
c0106d61	obj/kernel.asm	/^c0106d61:	55                   	push   %ebp$/;"	l
c0106d62	obj/kernel.asm	/^c0106d62:	89 e5                	mov    %esp,%ebp$/;"	l
c0106d64	obj/kernel.asm	/^c0106d64:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106d67	obj/kernel.asm	/^c0106d67:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c0106d6c	obj/kernel.asm	/^c0106d6c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106d6f	obj/kernel.asm	/^c0106d6f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106d72	obj/kernel.asm	/^c0106d72:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106d75	obj/kernel.asm	/^c0106d75:	ff d0                	call   *%eax$/;"	l
c0106d77	obj/kernel.asm	/^c0106d77:	c9                   	leave  $/;"	l
c0106d78	obj/kernel.asm	/^c0106d78:	c3                   	ret    $/;"	l
c0106d79	obj/kernel.asm	/^c0106d79 <swap_tick_event>:$/;"	l
c0106d79	obj/kernel.asm	/^c0106d79:	55                   	push   %ebp$/;"	l
c0106d7a	obj/kernel.asm	/^c0106d7a:	89 e5                	mov    %esp,%ebp$/;"	l
c0106d7c	obj/kernel.asm	/^c0106d7c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106d7f	obj/kernel.asm	/^c0106d7f:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c0106d84	obj/kernel.asm	/^c0106d84:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106d87	obj/kernel.asm	/^c0106d87:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106d8a	obj/kernel.asm	/^c0106d8a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106d8d	obj/kernel.asm	/^c0106d8d:	ff d0                	call   *%eax$/;"	l
c0106d8f	obj/kernel.asm	/^c0106d8f:	c9                   	leave  $/;"	l
c0106d90	obj/kernel.asm	/^c0106d90:	c3                   	ret    $/;"	l
c0106d91	obj/kernel.asm	/^c0106d91 <swap_map_swappable>:$/;"	l
c0106d91	obj/kernel.asm	/^c0106d91:	55                   	push   %ebp$/;"	l
c0106d92	obj/kernel.asm	/^c0106d92:	89 e5                	mov    %esp,%ebp$/;"	l
c0106d94	obj/kernel.asm	/^c0106d94:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106d97	obj/kernel.asm	/^c0106d97:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c0106d9c	obj/kernel.asm	/^c0106d9c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106d9f	obj/kernel.asm	/^c0106d9f:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0106da2	obj/kernel.asm	/^c0106da2:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106da6	obj/kernel.asm	/^c0106da6:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106da9	obj/kernel.asm	/^c0106da9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106dad	obj/kernel.asm	/^c0106dad:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106db0	obj/kernel.asm	/^c0106db0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106db4	obj/kernel.asm	/^c0106db4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106db7	obj/kernel.asm	/^c0106db7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106dba	obj/kernel.asm	/^c0106dba:	ff d0                	call   *%eax$/;"	l
c0106dbc	obj/kernel.asm	/^c0106dbc:	c9                   	leave  $/;"	l
c0106dbd	obj/kernel.asm	/^c0106dbd:	c3                   	ret    $/;"	l
c0106dbe	obj/kernel.asm	/^c0106dbe <swap_set_unswappable>:$/;"	l
c0106dbe	obj/kernel.asm	/^c0106dbe:	55                   	push   %ebp$/;"	l
c0106dbf	obj/kernel.asm	/^c0106dbf:	89 e5                	mov    %esp,%ebp$/;"	l
c0106dc1	obj/kernel.asm	/^c0106dc1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106dc4	obj/kernel.asm	/^c0106dc4:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0106dcc	obj/kernel.asm	/^c0106dcc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106dcf	obj/kernel.asm	/^c0106dcf:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106dd3	obj/kernel.asm	/^c0106dd3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106dd6	obj/kernel.asm	/^c0106dd6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106dd9	obj/kernel.asm	/^c0106dd9:	ff d0                	call   *%eax$/;"	l
c0106ddb	obj/kernel.asm	/^c0106ddb:	c9                   	leave  $/;"	l
c0106ddc	obj/kernel.asm	/^c0106ddc:	c3                   	ret    $/;"	l
c0106ddd	obj/kernel.asm	/^c0106ddd <swap_out>:$/;"	l
c0106ddd	obj/kernel.asm	/^c0106ddd:	55                   	push   %ebp$/;"	l
c0106dde	obj/kernel.asm	/^c0106dde:	89 e5                	mov    %esp,%ebp$/;"	l
c0106de0	obj/kernel.asm	/^c0106de0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106de3	obj/kernel.asm	/^c0106de3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106dea	obj/kernel.asm	/^c0106dea:	e9 5a 01 00 00       	jmp    c0106f49 <swap_out+0x16c>$/;"	l
c0106def	obj/kernel.asm	/^c0106def:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c0106df4	obj/kernel.asm	/^c0106df4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0106df7	obj/kernel.asm	/^c0106df7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106dfa	obj/kernel.asm	/^c0106dfa:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106dfe	obj/kernel.asm	/^c0106dfe:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0106e01	obj/kernel.asm	/^c0106e01:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106e05	obj/kernel.asm	/^c0106e05:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106e08	obj/kernel.asm	/^c0106e08:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106e0b	obj/kernel.asm	/^c0106e0b:	ff d0                	call   *%eax$/;"	l
c0106e0d	obj/kernel.asm	/^c0106e0d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106e10	obj/kernel.asm	/^c0106e10:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106e14	obj/kernel.asm	/^c0106e14:	74 18                	je     c0106e2e <swap_out+0x51>$/;"	l
c0106e16	obj/kernel.asm	/^c0106e16:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106e19	obj/kernel.asm	/^c0106e19:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106e1d	obj/kernel.asm	/^c0106e1d:	c7 04 24 44 d1 10 c0 	movl   $0xc010d144,(%esp)$/;"	l
c0106e24	obj/kernel.asm	/^c0106e24:	e8 2a 95 ff ff       	call   c0100353 <cprintf>$/;"	l
c0106e29	obj/kernel.asm	/^c0106e29:	e9 27 01 00 00       	jmp    c0106f55 <swap_out+0x178>$/;"	l
c0106e2e	obj/kernel.asm	/^c0106e2e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106e31	obj/kernel.asm	/^c0106e31:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106e34	obj/kernel.asm	/^c0106e34:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106e37	obj/kernel.asm	/^c0106e37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e3a	obj/kernel.asm	/^c0106e3a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106e3d	obj/kernel.asm	/^c0106e3d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106e44	obj/kernel.asm	/^c0106e44:	00 $/;"	l
c0106e45	obj/kernel.asm	/^c0106e45:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106e48	obj/kernel.asm	/^c0106e48:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106e4c	obj/kernel.asm	/^c0106e4c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106e4f	obj/kernel.asm	/^c0106e4f:	e8 5c e9 ff ff       	call   c01057b0 <get_pte>$/;"	l
c0106e54	obj/kernel.asm	/^c0106e54:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106e57	obj/kernel.asm	/^c0106e57:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106e5a	obj/kernel.asm	/^c0106e5a:	8b 00                	mov    (%eax),%eax$/;"	l
c0106e5c	obj/kernel.asm	/^c0106e5c:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106e5f	obj/kernel.asm	/^c0106e5f:	85 c0                	test   %eax,%eax$/;"	l
c0106e61	obj/kernel.asm	/^c0106e61:	75 24                	jne    c0106e87 <swap_out+0xaa>$/;"	l
c0106e63	obj/kernel.asm	/^c0106e63:	c7 44 24 0c 71 d1 10 	movl   $0xc010d171,0xc(%esp)$/;"	l
c0106e6a	obj/kernel.asm	/^c0106e6a:	c0 $/;"	l
c0106e6b	obj/kernel.asm	/^c0106e6b:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0106e72	obj/kernel.asm	/^c0106e72:	c0 $/;"	l
c0106e73	obj/kernel.asm	/^c0106e73:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c0106e7a	obj/kernel.asm	/^c0106e7a:	00 $/;"	l
c0106e7b	obj/kernel.asm	/^c0106e7b:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0106e82	obj/kernel.asm	/^c0106e82:	e8 4e 9f ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106e87	obj/kernel.asm	/^c0106e87:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106e8a	obj/kernel.asm	/^c0106e8a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106e8d	obj/kernel.asm	/^c0106e8d:	8b 52 1c             	mov    0x1c(%edx),%edx$/;"	l
c0106e90	obj/kernel.asm	/^c0106e90:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106e93	obj/kernel.asm	/^c0106e93:	83 c2 01             	add    $0x1,%edx$/;"	l
c0106e96	obj/kernel.asm	/^c0106e96:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c0106e99	obj/kernel.asm	/^c0106e99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106e9d	obj/kernel.asm	/^c0106e9d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106ea0	obj/kernel.asm	/^c0106ea0:	e8 bf 21 00 00       	call   c0109064 <swapfs_write>$/;"	l
c0106ea5	obj/kernel.asm	/^c0106ea5:	85 c0                	test   %eax,%eax$/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7:	74 34                	je     c0106edd <swap_out+0x100>$/;"	l
c0106ea9	obj/kernel.asm	/^c0106ea9:	c7 04 24 9b d1 10 c0 	movl   $0xc010d19b,(%esp)$/;"	l
c0106eb0	obj/kernel.asm	/^c0106eb0:	e8 9e 94 ff ff       	call   c0100353 <cprintf>$/;"	l
c0106eb5	obj/kernel.asm	/^c0106eb5:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c0106eba	obj/kernel.asm	/^c0106eba:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106ebd	obj/kernel.asm	/^c0106ebd:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106ec0	obj/kernel.asm	/^c0106ec0:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106ec7	obj/kernel.asm	/^c0106ec7:	00 $/;"	l
c0106ec8	obj/kernel.asm	/^c0106ec8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106ecc	obj/kernel.asm	/^c0106ecc:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106ecf	obj/kernel.asm	/^c0106ecf:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106ed3	obj/kernel.asm	/^c0106ed3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106ed6	obj/kernel.asm	/^c0106ed6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106ed9	obj/kernel.asm	/^c0106ed9:	ff d0                	call   *%eax$/;"	l
c0106edb	obj/kernel.asm	/^c0106edb:	eb 68                	jmp    c0106f45 <swap_out+0x168>$/;"	l
c0106edd	obj/kernel.asm	/^c0106edd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106ee0	obj/kernel.asm	/^c0106ee0:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106ee3	obj/kernel.asm	/^c0106ee3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106ee6	obj/kernel.asm	/^c0106ee6:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106ee9	obj/kernel.asm	/^c0106ee9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106eed	obj/kernel.asm	/^c0106eed:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106ef0	obj/kernel.asm	/^c0106ef0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106ef4	obj/kernel.asm	/^c0106ef4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ef7	obj/kernel.asm	/^c0106ef7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106efb	obj/kernel.asm	/^c0106efb:	c7 04 24 b4 d1 10 c0 	movl   $0xc010d1b4,(%esp)$/;"	l
c0106f02	obj/kernel.asm	/^c0106f02:	e8 4c 94 ff ff       	call   c0100353 <cprintf>$/;"	l
c0106f07	obj/kernel.asm	/^c0106f07:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106f0a	obj/kernel.asm	/^c0106f0a:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106f0d	obj/kernel.asm	/^c0106f0d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106f10	obj/kernel.asm	/^c0106f10:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106f13	obj/kernel.asm	/^c0106f13:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0106f16	obj/kernel.asm	/^c0106f16:	89 c2                	mov    %eax,%edx$/;"	l
c0106f18	obj/kernel.asm	/^c0106f18:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106f1b	obj/kernel.asm	/^c0106f1b:	89 10                	mov    %edx,(%eax)$/;"	l
c0106f1d	obj/kernel.asm	/^c0106f1d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106f20	obj/kernel.asm	/^c0106f20:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106f27	obj/kernel.asm	/^c0106f27:	00 $/;"	l
c0106f28	obj/kernel.asm	/^c0106f28:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106f2b	obj/kernel.asm	/^c0106f2b:	e8 84 e1 ff ff       	call   c01050b4 <free_pages>$/;"	l
c0106f30	obj/kernel.asm	/^c0106f30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f33	obj/kernel.asm	/^c0106f33:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106f36	obj/kernel.asm	/^c0106f36:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106f39	obj/kernel.asm	/^c0106f39:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106f3d	obj/kernel.asm	/^c0106f3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106f40	obj/kernel.asm	/^c0106f40:	e8 1f ef ff ff       	call   c0105e64 <tlb_invalidate>$/;"	l
c0106f45	obj/kernel.asm	/^c0106f45:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0106f49	obj/kernel.asm	/^c0106f49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f4c	obj/kernel.asm	/^c0106f4c:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106f4f	obj/kernel.asm	/^c0106f4f:	0f 85 9a fe ff ff    	jne    c0106def <swap_out+0x12>$/;"	l
c0106f55	obj/kernel.asm	/^c0106f55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f58	obj/kernel.asm	/^c0106f58:	c9                   	leave  $/;"	l
c0106f59	obj/kernel.asm	/^c0106f59:	c3                   	ret    $/;"	l
c0106f5a	obj/kernel.asm	/^c0106f5a <swap_in>:$/;"	l
c0106f5a	obj/kernel.asm	/^c0106f5a:	55                   	push   %ebp$/;"	l
c0106f5b	obj/kernel.asm	/^c0106f5b:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f5d	obj/kernel.asm	/^c0106f5d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106f60	obj/kernel.asm	/^c0106f60:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0106f67	obj/kernel.asm	/^c0106f67:	e8 dd e0 ff ff       	call   c0105049 <alloc_pages>$/;"	l
c0106f6c	obj/kernel.asm	/^c0106f6c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106f6f	obj/kernel.asm	/^c0106f6f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106f73	obj/kernel.asm	/^c0106f73:	75 24                	jne    c0106f99 <swap_in+0x3f>$/;"	l
c0106f75	obj/kernel.asm	/^c0106f75:	c7 44 24 0c f4 d1 10 	movl   $0xc010d1f4,0xc(%esp)$/;"	l
c0106f7c	obj/kernel.asm	/^c0106f7c:	c0 $/;"	l
c0106f7d	obj/kernel.asm	/^c0106f7d:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0106f84	obj/kernel.asm	/^c0106f84:	c0 $/;"	l
c0106f85	obj/kernel.asm	/^c0106f85:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c0106f8c	obj/kernel.asm	/^c0106f8c:	00 $/;"	l
c0106f8d	obj/kernel.asm	/^c0106f8d:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0106f94	obj/kernel.asm	/^c0106f94:	e8 3c 9e ff ff       	call   c0100dd5 <__panic>$/;"	l
c0106f99	obj/kernel.asm	/^c0106f99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f9c	obj/kernel.asm	/^c0106f9c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106f9f	obj/kernel.asm	/^c0106f9f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106fa6	obj/kernel.asm	/^c0106fa6:	00 $/;"	l
c0106fa7	obj/kernel.asm	/^c0106fa7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106faa	obj/kernel.asm	/^c0106faa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106fae	obj/kernel.asm	/^c0106fae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106fb1	obj/kernel.asm	/^c0106fb1:	e8 fa e7 ff ff       	call   c01057b0 <get_pte>$/;"	l
c0106fb6	obj/kernel.asm	/^c0106fb6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106fb9	obj/kernel.asm	/^c0106fb9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106fbc	obj/kernel.asm	/^c0106fbc:	8b 00                	mov    (%eax),%eax$/;"	l
c0106fbe	obj/kernel.asm	/^c0106fbe:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106fc1	obj/kernel.asm	/^c0106fc1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106fc5	obj/kernel.asm	/^c0106fc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106fc8	obj/kernel.asm	/^c0106fc8:	e8 25 20 00 00       	call   c0108ff2 <swapfs_read>$/;"	l
c0106fcd	obj/kernel.asm	/^c0106fcd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106fd0	obj/kernel.asm	/^c0106fd0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106fd4	obj/kernel.asm	/^c0106fd4:	74 2a                	je     c0107000 <swap_in+0xa6>$/;"	l
c0106fd6	obj/kernel.asm	/^c0106fd6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106fda	obj/kernel.asm	/^c0106fda:	75 24                	jne    c0107000 <swap_in+0xa6>$/;"	l
c0106fdc	obj/kernel.asm	/^c0106fdc:	c7 44 24 0c 01 d2 10 	movl   $0xc010d201,0xc(%esp)$/;"	l
c0106fe3	obj/kernel.asm	/^c0106fe3:	c0 $/;"	l
c0106fe4	obj/kernel.asm	/^c0106fe4:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0106feb	obj/kernel.asm	/^c0106feb:	c0 $/;"	l
c0106fec	obj/kernel.asm	/^c0106fec:	c7 44 24 04 85 00 00 	movl   $0x85,0x4(%esp)$/;"	l
c0106ff3	obj/kernel.asm	/^c0106ff3:	00 $/;"	l
c0106ff4	obj/kernel.asm	/^c0106ff4:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0106ffb	obj/kernel.asm	/^c0106ffb:	e8 d5 9d ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107000	obj/kernel.asm	/^c0107000:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107003	obj/kernel.asm	/^c0107003:	8b 00                	mov    (%eax),%eax$/;"	l
c0107005	obj/kernel.asm	/^c0107005:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0107008	obj/kernel.asm	/^c0107008:	89 c2                	mov    %eax,%edx$/;"	l
c010700a	obj/kernel.asm	/^c010700a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010700d	obj/kernel.asm	/^c010700d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107011	obj/kernel.asm	/^c0107011:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0107015	obj/kernel.asm	/^c0107015:	c7 04 24 08 d2 10 c0 	movl   $0xc010d208,(%esp)$/;"	l
c010701c	obj/kernel.asm	/^c010701c:	e8 32 93 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107021	obj/kernel.asm	/^c0107021:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107024	obj/kernel.asm	/^c0107024:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0107027	obj/kernel.asm	/^c0107027:	89 10                	mov    %edx,(%eax)$/;"	l
c0107029	obj/kernel.asm	/^c0107029:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010702e	obj/kernel.asm	/^c010702e:	c9                   	leave  $/;"	l
c010702f	obj/kernel.asm	/^c010702f:	c3                   	ret    $/;"	l
c0107030	obj/kernel.asm	/^c0107030 <check_content_set>:$/;"	l
c0107030	obj/kernel.asm	/^c0107030:	55                   	push   %ebp$/;"	l
c0107031	obj/kernel.asm	/^c0107031:	89 e5                	mov    %esp,%ebp$/;"	l
c0107033	obj/kernel.asm	/^c0107033:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107036	obj/kernel.asm	/^c0107036:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010703b	obj/kernel.asm	/^c010703b:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c010703e	obj/kernel.asm	/^c010703e:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107043	obj/kernel.asm	/^c0107043:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0107046	obj/kernel.asm	/^c0107046:	74 24                	je     c010706c <check_content_set+0x3c>$/;"	l
c0107048	obj/kernel.asm	/^c0107048:	c7 44 24 0c 46 d2 10 	movl   $0xc010d246,0xc(%esp)$/;"	l
c010704f	obj/kernel.asm	/^c010704f:	c0 $/;"	l
c0107050	obj/kernel.asm	/^c0107050:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107057	obj/kernel.asm	/^c0107057:	c0 $/;"	l
c0107058	obj/kernel.asm	/^c0107058:	c7 44 24 04 92 00 00 	movl   $0x92,0x4(%esp)$/;"	l
c010705f	obj/kernel.asm	/^c010705f:	00 $/;"	l
c0107060	obj/kernel.asm	/^c0107060:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107067	obj/kernel.asm	/^c0107067:	e8 69 9d ff ff       	call   c0100dd5 <__panic>$/;"	l
c010706c	obj/kernel.asm	/^c010706c:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c0107071	obj/kernel.asm	/^c0107071:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107074	obj/kernel.asm	/^c0107074:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107079	obj/kernel.asm	/^c0107079:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010707c	obj/kernel.asm	/^c010707c:	74 24                	je     c01070a2 <check_content_set+0x72>$/;"	l
c010707e	obj/kernel.asm	/^c010707e:	c7 44 24 0c 46 d2 10 	movl   $0xc010d246,0xc(%esp)$/;"	l
c0107085	obj/kernel.asm	/^c0107085:	c0 $/;"	l
c0107086	obj/kernel.asm	/^c0107086:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c010708d	obj/kernel.asm	/^c010708d:	c0 $/;"	l
c010708e	obj/kernel.asm	/^c010708e:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c0107095	obj/kernel.asm	/^c0107095:	00 $/;"	l
c0107096	obj/kernel.asm	/^c0107096:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c010709d	obj/kernel.asm	/^c010709d:	e8 33 9d ff ff       	call   c0100dd5 <__panic>$/;"	l
c01070a2	obj/kernel.asm	/^c01070a2:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01070a7	obj/kernel.asm	/^c01070a7:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01070aa	obj/kernel.asm	/^c01070aa:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c01070af	obj/kernel.asm	/^c01070af:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01070b2	obj/kernel.asm	/^c01070b2:	74 24                	je     c01070d8 <check_content_set+0xa8>$/;"	l
c01070b4	obj/kernel.asm	/^c01070b4:	c7 44 24 0c 55 d2 10 	movl   $0xc010d255,0xc(%esp)$/;"	l
c01070bb	obj/kernel.asm	/^c01070bb:	c0 $/;"	l
c01070bc	obj/kernel.asm	/^c01070bc:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c01070c3	obj/kernel.asm	/^c01070c3:	c0 $/;"	l
c01070c4	obj/kernel.asm	/^c01070c4:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
c01070cb	obj/kernel.asm	/^c01070cb:	00 $/;"	l
c01070cc	obj/kernel.asm	/^c01070cc:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01070d3	obj/kernel.asm	/^c01070d3:	e8 fd 9c ff ff       	call   c0100dd5 <__panic>$/;"	l
c01070d8	obj/kernel.asm	/^c01070d8:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c01070dd	obj/kernel.asm	/^c01070dd:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01070e0	obj/kernel.asm	/^c01070e0:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c01070e5	obj/kernel.asm	/^c01070e5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01070e8	obj/kernel.asm	/^c01070e8:	74 24                	je     c010710e <check_content_set+0xde>$/;"	l
c01070ea	obj/kernel.asm	/^c01070ea:	c7 44 24 0c 55 d2 10 	movl   $0xc010d255,0xc(%esp)$/;"	l
c01070f1	obj/kernel.asm	/^c01070f1:	c0 $/;"	l
c01070f2	obj/kernel.asm	/^c01070f2:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c01070f9	obj/kernel.asm	/^c01070f9:	c0 $/;"	l
c01070fa	obj/kernel.asm	/^c01070fa:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
c0107101	obj/kernel.asm	/^c0107101:	00 $/;"	l
c0107102	obj/kernel.asm	/^c0107102:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107109	obj/kernel.asm	/^c0107109:	e8 c7 9c ff ff       	call   c0100dd5 <__panic>$/;"	l
c010710e	obj/kernel.asm	/^c010710e:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107113	obj/kernel.asm	/^c0107113:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107116	obj/kernel.asm	/^c0107116:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c010711b	obj/kernel.asm	/^c010711b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010711e	obj/kernel.asm	/^c010711e:	74 24                	je     c0107144 <check_content_set+0x114>$/;"	l
c0107120	obj/kernel.asm	/^c0107120:	c7 44 24 0c 64 d2 10 	movl   $0xc010d264,0xc(%esp)$/;"	l
c0107127	obj/kernel.asm	/^c0107127:	c0 $/;"	l
c0107128	obj/kernel.asm	/^c0107128:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c010712f	obj/kernel.asm	/^c010712f:	c0 $/;"	l
c0107130	obj/kernel.asm	/^c0107130:	c7 44 24 04 9a 00 00 	movl   $0x9a,0x4(%esp)$/;"	l
c0107137	obj/kernel.asm	/^c0107137:	00 $/;"	l
c0107138	obj/kernel.asm	/^c0107138:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c010713f	obj/kernel.asm	/^c010713f:	e8 91 9c ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107144	obj/kernel.asm	/^c0107144:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c0107149	obj/kernel.asm	/^c0107149:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c010714c	obj/kernel.asm	/^c010714c:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107151	obj/kernel.asm	/^c0107151:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0107154	obj/kernel.asm	/^c0107154:	74 24                	je     c010717a <check_content_set+0x14a>$/;"	l
c0107156	obj/kernel.asm	/^c0107156:	c7 44 24 0c 64 d2 10 	movl   $0xc010d264,0xc(%esp)$/;"	l
c010715d	obj/kernel.asm	/^c010715d:	c0 $/;"	l
c010715e	obj/kernel.asm	/^c010715e:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107165	obj/kernel.asm	/^c0107165:	c0 $/;"	l
c0107166	obj/kernel.asm	/^c0107166:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)$/;"	l
c010716d	obj/kernel.asm	/^c010716d:	00 $/;"	l
c010716e	obj/kernel.asm	/^c010716e:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107175	obj/kernel.asm	/^c0107175:	e8 5b 9c ff ff       	call   c0100dd5 <__panic>$/;"	l
c010717a	obj/kernel.asm	/^c010717a:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c010717f	obj/kernel.asm	/^c010717f:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107182	obj/kernel.asm	/^c0107182:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107187	obj/kernel.asm	/^c0107187:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010718a	obj/kernel.asm	/^c010718a:	74 24                	je     c01071b0 <check_content_set+0x180>$/;"	l
c010718c	obj/kernel.asm	/^c010718c:	c7 44 24 0c 73 d2 10 	movl   $0xc010d273,0xc(%esp)$/;"	l
c0107193	obj/kernel.asm	/^c0107193:	c0 $/;"	l
c0107194	obj/kernel.asm	/^c0107194:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c010719b	obj/kernel.asm	/^c010719b:	c0 $/;"	l
c010719c	obj/kernel.asm	/^c010719c:	c7 44 24 04 9e 00 00 	movl   $0x9e,0x4(%esp)$/;"	l
c01071a3	obj/kernel.asm	/^c01071a3:	00 $/;"	l
c01071a4	obj/kernel.asm	/^c01071a4:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01071ab	obj/kernel.asm	/^c01071ab:	e8 25 9c ff ff       	call   c0100dd5 <__panic>$/;"	l
c01071b0	obj/kernel.asm	/^c01071b0:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c01071b5	obj/kernel.asm	/^c01071b5:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01071b8	obj/kernel.asm	/^c01071b8:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c01071bd	obj/kernel.asm	/^c01071bd:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01071c0	obj/kernel.asm	/^c01071c0:	74 24                	je     c01071e6 <check_content_set+0x1b6>$/;"	l
c01071c2	obj/kernel.asm	/^c01071c2:	c7 44 24 0c 73 d2 10 	movl   $0xc010d273,0xc(%esp)$/;"	l
c01071c9	obj/kernel.asm	/^c01071c9:	c0 $/;"	l
c01071ca	obj/kernel.asm	/^c01071ca:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c01071d1	obj/kernel.asm	/^c01071d1:	c0 $/;"	l
c01071d2	obj/kernel.asm	/^c01071d2:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c01071d9	obj/kernel.asm	/^c01071d9:	00 $/;"	l
c01071da	obj/kernel.asm	/^c01071da:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01071e1	obj/kernel.asm	/^c01071e1:	e8 ef 9b ff ff       	call   c0100dd5 <__panic>$/;"	l
c01071e6	obj/kernel.asm	/^c01071e6:	c9                   	leave  $/;"	l
c01071e7	obj/kernel.asm	/^c01071e7:	c3                   	ret    $/;"	l
c01071e8	obj/kernel.asm	/^c01071e8 <check_content_access>:$/;"	l
c01071e8	obj/kernel.asm	/^c01071e8:	55                   	push   %ebp$/;"	l
c01071e9	obj/kernel.asm	/^c01071e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01071eb	obj/kernel.asm	/^c01071eb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01071ee	obj/kernel.asm	/^c01071ee:	a1 74 cf 19 c0       	mov    0xc019cf74,%eax$/;"	l
c01071f3	obj/kernel.asm	/^c01071f3:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01071f6	obj/kernel.asm	/^c01071f6:	ff d0                	call   *%eax$/;"	l
c01071f8	obj/kernel.asm	/^c01071f8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01071fb	obj/kernel.asm	/^c01071fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071fe	obj/kernel.asm	/^c01071fe:	c9                   	leave  $/;"	l
c01071ff	obj/kernel.asm	/^c01071ff:	c3                   	ret    $/;"	l
c0107200	obj/kernel.asm	/^c0107200 <check_swap>:$/;"	l
c0107200	obj/kernel.asm	/^c0107200:	55                   	push   %ebp$/;"	l
c0107201	obj/kernel.asm	/^c0107201:	89 e5                	mov    %esp,%ebp$/;"	l
c0107203	obj/kernel.asm	/^c0107203:	53                   	push   %ebx$/;"	l
c0107204	obj/kernel.asm	/^c0107204:	83 ec 74             	sub    $0x74,%esp$/;"	l
c0107207	obj/kernel.asm	/^c0107207:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010720e	obj/kernel.asm	/^c010720e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0107215	obj/kernel.asm	/^c0107215:	c7 45 e8 b8 ef 19 c0 	movl   $0xc019efb8,-0x18(%ebp)$/;"	l
c010721c	obj/kernel.asm	/^c010721c:	eb 6b                	jmp    c0107289 <check_swap+0x89>$/;"	l
c010721e	obj/kernel.asm	/^c010721e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107221	obj/kernel.asm	/^c0107221:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107224	obj/kernel.asm	/^c0107224:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107227	obj/kernel.asm	/^c0107227:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010722a	obj/kernel.asm	/^c010722a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010722d	obj/kernel.asm	/^c010722d:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c0107234	obj/kernel.asm	/^c0107234:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0107237	obj/kernel.asm	/^c0107237:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010723a	obj/kernel.asm	/^c010723a:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c010723d	obj/kernel.asm	/^c010723d:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107240	obj/kernel.asm	/^c0107240:	19 c0                	sbb    %eax,%eax$/;"	l
c0107242	obj/kernel.asm	/^c0107242:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0107245	obj/kernel.asm	/^c0107245:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0107249	obj/kernel.asm	/^c0107249:	0f 95 c0             	setne  %al$/;"	l
c010724c	obj/kernel.asm	/^c010724c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010724f	obj/kernel.asm	/^c010724f:	85 c0                	test   %eax,%eax$/;"	l
c0107251	obj/kernel.asm	/^c0107251:	75 24                	jne    c0107277 <check_swap+0x77>$/;"	l
c0107253	obj/kernel.asm	/^c0107253:	c7 44 24 0c 82 d2 10 	movl   $0xc010d282,0xc(%esp)$/;"	l
c010725a	obj/kernel.asm	/^c010725a:	c0 $/;"	l
c010725b	obj/kernel.asm	/^c010725b:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107262	obj/kernel.asm	/^c0107262:	c0 $/;"	l
c0107263	obj/kernel.asm	/^c0107263:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)$/;"	l
c010726a	obj/kernel.asm	/^c010726a:	00 $/;"	l
c010726b	obj/kernel.asm	/^c010726b:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107272	obj/kernel.asm	/^c0107272:	e8 5e 9b ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107277	obj/kernel.asm	/^c0107277:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010727b	obj/kernel.asm	/^c010727b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010727e	obj/kernel.asm	/^c010727e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107281	obj/kernel.asm	/^c0107281:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107284	obj/kernel.asm	/^c0107284:	01 d0                	add    %edx,%eax$/;"	l
c0107286	obj/kernel.asm	/^c0107286:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107289	obj/kernel.asm	/^c0107289:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010728c	obj/kernel.asm	/^c010728c:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010728f	obj/kernel.asm	/^c010728f:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107292	obj/kernel.asm	/^c0107292:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107295	obj/kernel.asm	/^c0107295:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107298	obj/kernel.asm	/^c0107298:	81 7d e8 b8 ef 19 c0 	cmpl   $0xc019efb8,-0x18(%ebp)$/;"	l
c010729f	obj/kernel.asm	/^c010729f:	0f 85 79 ff ff ff    	jne    c010721e <check_swap+0x1e>$/;"	l
c01072a5	obj/kernel.asm	/^c01072a5:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01072a8	obj/kernel.asm	/^c01072a8:	e8 39 de ff ff       	call   c01050e6 <nr_free_pages>$/;"	l
c01072ad	obj/kernel.asm	/^c01072ad:	39 c3                	cmp    %eax,%ebx$/;"	l
c01072af	obj/kernel.asm	/^c01072af:	74 24                	je     c01072d5 <check_swap+0xd5>$/;"	l
c01072b1	obj/kernel.asm	/^c01072b1:	c7 44 24 0c 92 d2 10 	movl   $0xc010d292,0xc(%esp)$/;"	l
c01072b8	obj/kernel.asm	/^c01072b8:	c0 $/;"	l
c01072b9	obj/kernel.asm	/^c01072b9:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c01072c0	obj/kernel.asm	/^c01072c0:	c0 $/;"	l
c01072c1	obj/kernel.asm	/^c01072c1:	c7 44 24 04 be 00 00 	movl   $0xbe,0x4(%esp)$/;"	l
c01072c8	obj/kernel.asm	/^c01072c8:	00 $/;"	l
c01072c9	obj/kernel.asm	/^c01072c9:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01072d0	obj/kernel.asm	/^c01072d0:	e8 00 9b ff ff       	call   c0100dd5 <__panic>$/;"	l
c01072d5	obj/kernel.asm	/^c01072d5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01072d8	obj/kernel.asm	/^c01072d8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01072dc	obj/kernel.asm	/^c01072dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072df	obj/kernel.asm	/^c01072df:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01072e3	obj/kernel.asm	/^c01072e3:	c7 04 24 ac d2 10 c0 	movl   $0xc010d2ac,(%esp)$/;"	l
c01072ea	obj/kernel.asm	/^c01072ea:	e8 64 90 ff ff       	call   c0100353 <cprintf>$/;"	l
c01072ef	obj/kernel.asm	/^c01072ef:	e8 a8 0a 00 00       	call   c0107d9c <mm_create>$/;"	l
c01072f4	obj/kernel.asm	/^c01072f4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01072f7	obj/kernel.asm	/^c01072f7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01072fb	obj/kernel.asm	/^c01072fb:	75 24                	jne    c0107321 <check_swap+0x121>$/;"	l
c01072fd	obj/kernel.asm	/^c01072fd:	c7 44 24 0c d2 d2 10 	movl   $0xc010d2d2,0xc(%esp)$/;"	l
c0107304	obj/kernel.asm	/^c0107304:	c0 $/;"	l
c0107305	obj/kernel.asm	/^c0107305:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c010730c	obj/kernel.asm	/^c010730c:	c0 $/;"	l
c010730d	obj/kernel.asm	/^c010730d:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)$/;"	l
c0107314	obj/kernel.asm	/^c0107314:	00 $/;"	l
c0107315	obj/kernel.asm	/^c0107315:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c010731c	obj/kernel.asm	/^c010731c:	e8 b4 9a ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107321	obj/kernel.asm	/^c0107321:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c0107326	obj/kernel.asm	/^c0107326:	85 c0                	test   %eax,%eax$/;"	l
c0107328	obj/kernel.asm	/^c0107328:	74 24                	je     c010734e <check_swap+0x14e>$/;"	l
c010732a	obj/kernel.asm	/^c010732a:	c7 44 24 0c dd d2 10 	movl   $0xc010d2dd,0xc(%esp)$/;"	l
c0107331	obj/kernel.asm	/^c0107331:	c0 $/;"	l
c0107332	obj/kernel.asm	/^c0107332:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107339	obj/kernel.asm	/^c0107339:	c0 $/;"	l
c010733a	obj/kernel.asm	/^c010733a:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c0107341	obj/kernel.asm	/^c0107341:	00 $/;"	l
c0107342	obj/kernel.asm	/^c0107342:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107349	obj/kernel.asm	/^c0107349:	e8 87 9a ff ff       	call   c0100dd5 <__panic>$/;"	l
c010734e	obj/kernel.asm	/^c010734e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107351	obj/kernel.asm	/^c0107351:	a3 ac f0 19 c0       	mov    %eax,0xc019f0ac$/;"	l
c0107356	obj/kernel.asm	/^c0107356:	8b 15 e4 ce 19 c0    	mov    0xc019cee4,%edx$/;"	l
c010735c	obj/kernel.asm	/^c010735c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010735f	obj/kernel.asm	/^c010735f:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0107362	obj/kernel.asm	/^c0107362:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107365	obj/kernel.asm	/^c0107365:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107368	obj/kernel.asm	/^c0107368:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010736b	obj/kernel.asm	/^c010736b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010736e	obj/kernel.asm	/^c010736e:	8b 00                	mov    (%eax),%eax$/;"	l
c0107370	obj/kernel.asm	/^c0107370:	85 c0                	test   %eax,%eax$/;"	l
c0107372	obj/kernel.asm	/^c0107372:	74 24                	je     c0107398 <check_swap+0x198>$/;"	l
c0107374	obj/kernel.asm	/^c0107374:	c7 44 24 0c f5 d2 10 	movl   $0xc010d2f5,0xc(%esp)$/;"	l
c010737b	obj/kernel.asm	/^c010737b:	c0 $/;"	l
c010737c	obj/kernel.asm	/^c010737c:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107383	obj/kernel.asm	/^c0107383:	c0 $/;"	l
c0107384	obj/kernel.asm	/^c0107384:	c7 44 24 04 cb 00 00 	movl   $0xcb,0x4(%esp)$/;"	l
c010738b	obj/kernel.asm	/^c010738b:	00 $/;"	l
c010738c	obj/kernel.asm	/^c010738c:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107393	obj/kernel.asm	/^c0107393:	e8 3d 9a ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107398	obj/kernel.asm	/^c0107398:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
c010739f	obj/kernel.asm	/^c010739f:	00 $/;"	l
c01073a0	obj/kernel.asm	/^c01073a0:	c7 44 24 04 00 60 00 	movl   $0x6000,0x4(%esp)$/;"	l
c01073a7	obj/kernel.asm	/^c01073a7:	00 $/;"	l
c01073a8	obj/kernel.asm	/^c01073a8:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c01073af	obj/kernel.asm	/^c01073af:	e8 81 0a 00 00       	call   c0107e35 <vma_create>$/;"	l
c01073b4	obj/kernel.asm	/^c01073b4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01073b7	obj/kernel.asm	/^c01073b7:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c01073bb	obj/kernel.asm	/^c01073bb:	75 24                	jne    c01073e1 <check_swap+0x1e1>$/;"	l
c01073bd	obj/kernel.asm	/^c01073bd:	c7 44 24 0c 03 d3 10 	movl   $0xc010d303,0xc(%esp)$/;"	l
c01073c4	obj/kernel.asm	/^c01073c4:	c0 $/;"	l
c01073c5	obj/kernel.asm	/^c01073c5:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c01073cc	obj/kernel.asm	/^c01073cc:	c0 $/;"	l
c01073cd	obj/kernel.asm	/^c01073cd:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
c01073d4	obj/kernel.asm	/^c01073d4:	00 $/;"	l
c01073d5	obj/kernel.asm	/^c01073d5:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01073dc	obj/kernel.asm	/^c01073dc:	e8 f4 99 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01073e1	obj/kernel.asm	/^c01073e1:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01073e4	obj/kernel.asm	/^c01073e4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01073e8	obj/kernel.asm	/^c01073e8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01073eb	obj/kernel.asm	/^c01073eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01073ee	obj/kernel.asm	/^c01073ee:	e8 d2 0b 00 00       	call   c0107fc5 <insert_vma_struct>$/;"	l
c01073f3	obj/kernel.asm	/^c01073f3:	c7 04 24 10 d3 10 c0 	movl   $0xc010d310,(%esp)$/;"	l
c01073fa	obj/kernel.asm	/^c01073fa:	e8 54 8f ff ff       	call   c0100353 <cprintf>$/;"	l
c01073ff	obj/kernel.asm	/^c01073ff:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0107406	obj/kernel.asm	/^c0107406:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107409	obj/kernel.asm	/^c0107409:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010740c	obj/kernel.asm	/^c010740c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0107413	obj/kernel.asm	/^c0107413:	00 $/;"	l
c0107414	obj/kernel.asm	/^c0107414:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010741b	obj/kernel.asm	/^c010741b:	00 $/;"	l
c010741c	obj/kernel.asm	/^c010741c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010741f	obj/kernel.asm	/^c010741f:	e8 8c e3 ff ff       	call   c01057b0 <get_pte>$/;"	l
c0107424	obj/kernel.asm	/^c0107424:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107427	obj/kernel.asm	/^c0107427:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c010742b	obj/kernel.asm	/^c010742b:	75 24                	jne    c0107451 <check_swap+0x251>$/;"	l
c010742d	obj/kernel.asm	/^c010742d:	c7 44 24 0c 44 d3 10 	movl   $0xc010d344,0xc(%esp)$/;"	l
c0107434	obj/kernel.asm	/^c0107434:	c0 $/;"	l
c0107435	obj/kernel.asm	/^c0107435:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c010743c	obj/kernel.asm	/^c010743c:	c0 $/;"	l
c010743d	obj/kernel.asm	/^c010743d:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c0107444	obj/kernel.asm	/^c0107444:	00 $/;"	l
c0107445	obj/kernel.asm	/^c0107445:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c010744c	obj/kernel.asm	/^c010744c:	e8 84 99 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107451	obj/kernel.asm	/^c0107451:	c7 04 24 58 d3 10 c0 	movl   $0xc010d358,(%esp)$/;"	l
c0107458	obj/kernel.asm	/^c0107458:	e8 f6 8e ff ff       	call   c0100353 <cprintf>$/;"	l
c010745d	obj/kernel.asm	/^c010745d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107464	obj/kernel.asm	/^c0107464:	e9 a3 00 00 00       	jmp    c010750c <check_swap+0x30c>$/;"	l
c0107469	obj/kernel.asm	/^c0107469:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0107470	obj/kernel.asm	/^c0107470:	e8 d4 db ff ff       	call   c0105049 <alloc_pages>$/;"	l
c0107475	obj/kernel.asm	/^c0107475:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107478	obj/kernel.asm	/^c0107478:	89 04 95 e0 ef 19 c0 	mov    %eax,-0x3fe61020(,%edx,4)$/;"	l
c010747f	obj/kernel.asm	/^c010747f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107482	obj/kernel.asm	/^c0107482:	8b 04 85 e0 ef 19 c0 	mov    -0x3fe61020(,%eax,4),%eax$/;"	l
c0107489	obj/kernel.asm	/^c0107489:	85 c0                	test   %eax,%eax$/;"	l
c010748b	obj/kernel.asm	/^c010748b:	75 24                	jne    c01074b1 <check_swap+0x2b1>$/;"	l
c010748d	obj/kernel.asm	/^c010748d:	c7 44 24 0c 7c d3 10 	movl   $0xc010d37c,0xc(%esp)$/;"	l
c0107494	obj/kernel.asm	/^c0107494:	c0 $/;"	l
c0107495	obj/kernel.asm	/^c0107495:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c010749c	obj/kernel.asm	/^c010749c:	c0 $/;"	l
c010749d	obj/kernel.asm	/^c010749d:	c7 44 24 04 db 00 00 	movl   $0xdb,0x4(%esp)$/;"	l
c01074a4	obj/kernel.asm	/^c01074a4:	00 $/;"	l
c01074a5	obj/kernel.asm	/^c01074a5:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01074ac	obj/kernel.asm	/^c01074ac:	e8 24 99 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01074b1	obj/kernel.asm	/^c01074b1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01074b4	obj/kernel.asm	/^c01074b4:	8b 04 85 e0 ef 19 c0 	mov    -0x3fe61020(,%eax,4),%eax$/;"	l
c01074bb	obj/kernel.asm	/^c01074bb:	83 c0 04             	add    $0x4,%eax$/;"	l
c01074be	obj/kernel.asm	/^c01074be:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c01074c5	obj/kernel.asm	/^c01074c5:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01074c8	obj/kernel.asm	/^c01074c8:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01074cb	obj/kernel.asm	/^c01074cb:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01074ce	obj/kernel.asm	/^c01074ce:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01074d1	obj/kernel.asm	/^c01074d1:	19 c0                	sbb    %eax,%eax$/;"	l
c01074d3	obj/kernel.asm	/^c01074d3:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c01074d6	obj/kernel.asm	/^c01074d6:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c01074da	obj/kernel.asm	/^c01074da:	0f 95 c0             	setne  %al$/;"	l
c01074dd	obj/kernel.asm	/^c01074dd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01074e0	obj/kernel.asm	/^c01074e0:	85 c0                	test   %eax,%eax$/;"	l
c01074e2	obj/kernel.asm	/^c01074e2:	74 24                	je     c0107508 <check_swap+0x308>$/;"	l
c01074e4	obj/kernel.asm	/^c01074e4:	c7 44 24 0c 90 d3 10 	movl   $0xc010d390,0xc(%esp)$/;"	l
c01074eb	obj/kernel.asm	/^c01074eb:	c0 $/;"	l
c01074ec	obj/kernel.asm	/^c01074ec:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c01074f3	obj/kernel.asm	/^c01074f3:	c0 $/;"	l
c01074f4	obj/kernel.asm	/^c01074f4:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)$/;"	l
c01074fb	obj/kernel.asm	/^c01074fb:	00 $/;"	l
c01074fc	obj/kernel.asm	/^c01074fc:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107503	obj/kernel.asm	/^c0107503:	e8 cd 98 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107508	obj/kernel.asm	/^c0107508:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c010750c	obj/kernel.asm	/^c010750c:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0107510	obj/kernel.asm	/^c0107510:	0f 8e 53 ff ff ff    	jle    c0107469 <check_swap+0x269>$/;"	l
c0107516	obj/kernel.asm	/^c0107516:	a1 b8 ef 19 c0       	mov    0xc019efb8,%eax$/;"	l
c010751b	obj/kernel.asm	/^c010751b:	8b 15 bc ef 19 c0    	mov    0xc019efbc,%edx$/;"	l
c0107521	obj/kernel.asm	/^c0107521:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0107524	obj/kernel.asm	/^c0107524:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c0107527	obj/kernel.asm	/^c0107527:	c7 45 a8 b8 ef 19 c0 	movl   $0xc019efb8,-0x58(%ebp)$/;"	l
c010752e	obj/kernel.asm	/^c010752e:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0107531	obj/kernel.asm	/^c0107531:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0107534	obj/kernel.asm	/^c0107534:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107537	obj/kernel.asm	/^c0107537:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010753a	obj/kernel.asm	/^c010753a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010753d	obj/kernel.asm	/^c010753d:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0107540	obj/kernel.asm	/^c0107540:	89 10                	mov    %edx,(%eax)$/;"	l
c0107542	obj/kernel.asm	/^c0107542:	c7 45 a4 b8 ef 19 c0 	movl   $0xc019efb8,-0x5c(%ebp)$/;"	l
c0107549	obj/kernel.asm	/^c0107549:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010754c	obj/kernel.asm	/^c010754c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010754f	obj/kernel.asm	/^c010754f:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0107552	obj/kernel.asm	/^c0107552:	0f 94 c0             	sete   %al$/;"	l
c0107555	obj/kernel.asm	/^c0107555:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107558	obj/kernel.asm	/^c0107558:	85 c0                	test   %eax,%eax$/;"	l
c010755a	obj/kernel.asm	/^c010755a:	75 24                	jne    c0107580 <check_swap+0x380>$/;"	l
c010755c	obj/kernel.asm	/^c010755c:	c7 44 24 0c ab d3 10 	movl   $0xc010d3ab,0xc(%esp)$/;"	l
c0107563	obj/kernel.asm	/^c0107563:	c0 $/;"	l
c0107564	obj/kernel.asm	/^c0107564:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c010756b	obj/kernel.asm	/^c010756b:	c0 $/;"	l
c010756c	obj/kernel.asm	/^c010756c:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
c0107573	obj/kernel.asm	/^c0107573:	00 $/;"	l
c0107574	obj/kernel.asm	/^c0107574:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c010757b	obj/kernel.asm	/^c010757b:	e8 55 98 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107580	obj/kernel.asm	/^c0107580:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c0107585	obj/kernel.asm	/^c0107585:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107588	obj/kernel.asm	/^c0107588:	c7 05 c0 ef 19 c0 00 	movl   $0x0,0xc019efc0$/;"	l
c010758f	obj/kernel.asm	/^c010758f:	00 00 00 $/;"	l
c0107592	obj/kernel.asm	/^c0107592:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107599	obj/kernel.asm	/^c0107599:	eb 1e                	jmp    c01075b9 <check_swap+0x3b9>$/;"	l
c010759b	obj/kernel.asm	/^c010759b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010759e	obj/kernel.asm	/^c010759e:	8b 04 85 e0 ef 19 c0 	mov    -0x3fe61020(,%eax,4),%eax$/;"	l
c01075a5	obj/kernel.asm	/^c01075a5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01075ac	obj/kernel.asm	/^c01075ac:	00 $/;"	l
c01075ad	obj/kernel.asm	/^c01075ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01075b0	obj/kernel.asm	/^c01075b0:	e8 ff da ff ff       	call   c01050b4 <free_pages>$/;"	l
c01075b5	obj/kernel.asm	/^c01075b5:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01075b9	obj/kernel.asm	/^c01075b9:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c01075bd	obj/kernel.asm	/^c01075bd:	7e dc                	jle    c010759b <check_swap+0x39b>$/;"	l
c01075bf	obj/kernel.asm	/^c01075bf:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c01075c4	obj/kernel.asm	/^c01075c4:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01075c7	obj/kernel.asm	/^c01075c7:	74 24                	je     c01075ed <check_swap+0x3ed>$/;"	l
c01075c9	obj/kernel.asm	/^c01075c9:	c7 44 24 0c c4 d3 10 	movl   $0xc010d3c4,0xc(%esp)$/;"	l
c01075d0	obj/kernel.asm	/^c01075d0:	c0 $/;"	l
c01075d1	obj/kernel.asm	/^c01075d1:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c01075d8	obj/kernel.asm	/^c01075d8:	c0 $/;"	l
c01075d9	obj/kernel.asm	/^c01075d9:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c01075e0	obj/kernel.asm	/^c01075e0:	00 $/;"	l
c01075e1	obj/kernel.asm	/^c01075e1:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01075e8	obj/kernel.asm	/^c01075e8:	e8 e8 97 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01075ed	obj/kernel.asm	/^c01075ed:	c7 04 24 e8 d3 10 c0 	movl   $0xc010d3e8,(%esp)$/;"	l
c01075f4	obj/kernel.asm	/^c01075f4:	e8 5a 8d ff ff       	call   c0100353 <cprintf>$/;"	l
c01075f9	obj/kernel.asm	/^c01075f9:	c7 05 78 cf 19 c0 00 	movl   $0x0,0xc019cf78$/;"	l
c0107600	obj/kernel.asm	/^c0107600:	00 00 00 $/;"	l
c0107603	obj/kernel.asm	/^c0107603:	e8 28 fa ff ff       	call   c0107030 <check_content_set>$/;"	l
c0107608	obj/kernel.asm	/^c0107608:	a1 c0 ef 19 c0       	mov    0xc019efc0,%eax$/;"	l
c010760d	obj/kernel.asm	/^c010760d:	85 c0                	test   %eax,%eax$/;"	l
c010760f	obj/kernel.asm	/^c010760f:	74 24                	je     c0107635 <check_swap+0x435>$/;"	l
c0107611	obj/kernel.asm	/^c0107611:	c7 44 24 0c 0f d4 10 	movl   $0xc010d40f,0xc(%esp)$/;"	l
c0107618	obj/kernel.asm	/^c0107618:	c0 $/;"	l
c0107619	obj/kernel.asm	/^c0107619:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107620	obj/kernel.asm	/^c0107620:	c0 $/;"	l
c0107621	obj/kernel.asm	/^c0107621:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c0107628	obj/kernel.asm	/^c0107628:	00 $/;"	l
c0107629	obj/kernel.asm	/^c0107629:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107630	obj/kernel.asm	/^c0107630:	e8 a0 97 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107635	obj/kernel.asm	/^c0107635:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010763c	obj/kernel.asm	/^c010763c:	eb 26                	jmp    c0107664 <check_swap+0x464>$/;"	l
c010763e	obj/kernel.asm	/^c010763e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107641	obj/kernel.asm	/^c0107641:	c7 04 85 00 f0 19 c0 	movl   $0xffffffff,-0x3fe61000(,%eax,4)$/;"	l
c0107648	obj/kernel.asm	/^c0107648:	ff ff ff ff $/;"	l
c010764c	obj/kernel.asm	/^c010764c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010764f	obj/kernel.asm	/^c010764f:	8b 14 85 00 f0 19 c0 	mov    -0x3fe61000(,%eax,4),%edx$/;"	l
c0107656	obj/kernel.asm	/^c0107656:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107659	obj/kernel.asm	/^c0107659:	89 14 85 40 f0 19 c0 	mov    %edx,-0x3fe60fc0(,%eax,4)$/;"	l
c0107660	obj/kernel.asm	/^c0107660:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107664	obj/kernel.asm	/^c0107664:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0107668	obj/kernel.asm	/^c0107668:	7e d4                	jle    c010763e <check_swap+0x43e>$/;"	l
c010766a	obj/kernel.asm	/^c010766a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107671	obj/kernel.asm	/^c0107671:	e9 eb 00 00 00       	jmp    c0107761 <check_swap+0x561>$/;"	l
c0107676	obj/kernel.asm	/^c0107676:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107679	obj/kernel.asm	/^c0107679:	c7 04 85 94 f0 19 c0 	movl   $0x0,-0x3fe60f6c(,%eax,4)$/;"	l
c0107680	obj/kernel.asm	/^c0107680:	00 00 00 00 $/;"	l
c0107684	obj/kernel.asm	/^c0107684:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107687	obj/kernel.asm	/^c0107687:	83 c0 01             	add    $0x1,%eax$/;"	l
c010768a	obj/kernel.asm	/^c010768a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010768d	obj/kernel.asm	/^c010768d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0107694	obj/kernel.asm	/^c0107694:	00 $/;"	l
c0107695	obj/kernel.asm	/^c0107695:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107699	obj/kernel.asm	/^c0107699:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010769c	obj/kernel.asm	/^c010769c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010769f	obj/kernel.asm	/^c010769f:	e8 0c e1 ff ff       	call   c01057b0 <get_pte>$/;"	l
c01076a4	obj/kernel.asm	/^c01076a4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01076a7	obj/kernel.asm	/^c01076a7:	89 04 95 94 f0 19 c0 	mov    %eax,-0x3fe60f6c(,%edx,4)$/;"	l
c01076ae	obj/kernel.asm	/^c01076ae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01076b1	obj/kernel.asm	/^c01076b1:	8b 04 85 94 f0 19 c0 	mov    -0x3fe60f6c(,%eax,4),%eax$/;"	l
c01076b8	obj/kernel.asm	/^c01076b8:	85 c0                	test   %eax,%eax$/;"	l
c01076ba	obj/kernel.asm	/^c01076ba:	75 24                	jne    c01076e0 <check_swap+0x4e0>$/;"	l
c01076bc	obj/kernel.asm	/^c01076bc:	c7 44 24 0c 1c d4 10 	movl   $0xc010d41c,0xc(%esp)$/;"	l
c01076c3	obj/kernel.asm	/^c01076c3:	c0 $/;"	l
c01076c4	obj/kernel.asm	/^c01076c4:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c01076cb	obj/kernel.asm	/^c01076cb:	c0 $/;"	l
c01076cc	obj/kernel.asm	/^c01076cc:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c01076d3	obj/kernel.asm	/^c01076d3:	00 $/;"	l
c01076d4	obj/kernel.asm	/^c01076d4:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01076db	obj/kernel.asm	/^c01076db:	e8 f5 96 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01076e0	obj/kernel.asm	/^c01076e0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01076e3	obj/kernel.asm	/^c01076e3:	8b 04 85 94 f0 19 c0 	mov    -0x3fe60f6c(,%eax,4),%eax$/;"	l
c01076ea	obj/kernel.asm	/^c01076ea:	8b 00                	mov    (%eax),%eax$/;"	l
c01076ec	obj/kernel.asm	/^c01076ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01076ef	obj/kernel.asm	/^c01076ef:	e8 9f f5 ff ff       	call   c0106c93 <pte2page>$/;"	l
c01076f4	obj/kernel.asm	/^c01076f4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01076f7	obj/kernel.asm	/^c01076f7:	8b 14 95 e0 ef 19 c0 	mov    -0x3fe61020(,%edx,4),%edx$/;"	l
c01076fe	obj/kernel.asm	/^c01076fe:	39 d0                	cmp    %edx,%eax$/;"	l
c0107700	obj/kernel.asm	/^c0107700:	74 24                	je     c0107726 <check_swap+0x526>$/;"	l
c0107702	obj/kernel.asm	/^c0107702:	c7 44 24 0c 34 d4 10 	movl   $0xc010d434,0xc(%esp)$/;"	l
c0107709	obj/kernel.asm	/^c0107709:	c0 $/;"	l
c010770a	obj/kernel.asm	/^c010770a:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107711	obj/kernel.asm	/^c0107711:	c0 $/;"	l
c0107712	obj/kernel.asm	/^c0107712:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c0107719	obj/kernel.asm	/^c0107719:	00 $/;"	l
c010771a	obj/kernel.asm	/^c010771a:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107721	obj/kernel.asm	/^c0107721:	e8 af 96 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107726	obj/kernel.asm	/^c0107726:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107729	obj/kernel.asm	/^c0107729:	8b 04 85 94 f0 19 c0 	mov    -0x3fe60f6c(,%eax,4),%eax$/;"	l
c0107730	obj/kernel.asm	/^c0107730:	8b 00                	mov    (%eax),%eax$/;"	l
c0107732	obj/kernel.asm	/^c0107732:	83 e0 01             	and    $0x1,%eax$/;"	l
c0107735	obj/kernel.asm	/^c0107735:	85 c0                	test   %eax,%eax$/;"	l
c0107737	obj/kernel.asm	/^c0107737:	75 24                	jne    c010775d <check_swap+0x55d>$/;"	l
c0107739	obj/kernel.asm	/^c0107739:	c7 44 24 0c 5c d4 10 	movl   $0xc010d45c,0xc(%esp)$/;"	l
c0107740	obj/kernel.asm	/^c0107740:	c0 $/;"	l
c0107741	obj/kernel.asm	/^c0107741:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107748	obj/kernel.asm	/^c0107748:	c0 $/;"	l
c0107749	obj/kernel.asm	/^c0107749:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c0107750	obj/kernel.asm	/^c0107750:	00 $/;"	l
c0107751	obj/kernel.asm	/^c0107751:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c0107758	obj/kernel.asm	/^c0107758:	e8 78 96 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010775d	obj/kernel.asm	/^c010775d:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107761	obj/kernel.asm	/^c0107761:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0107765	obj/kernel.asm	/^c0107765:	0f 8e 0b ff ff ff    	jle    c0107676 <check_swap+0x476>$/;"	l
c010776b	obj/kernel.asm	/^c010776b:	c7 04 24 78 d4 10 c0 	movl   $0xc010d478,(%esp)$/;"	l
c0107772	obj/kernel.asm	/^c0107772:	e8 dc 8b ff ff       	call   c0100353 <cprintf>$/;"	l
c0107777	obj/kernel.asm	/^c0107777:	e8 6c fa ff ff       	call   c01071e8 <check_content_access>$/;"	l
c010777c	obj/kernel.asm	/^c010777c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010777f	obj/kernel.asm	/^c010777f:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0107783	obj/kernel.asm	/^c0107783:	74 24                	je     c01077a9 <check_swap+0x5a9>$/;"	l
c0107785	obj/kernel.asm	/^c0107785:	c7 44 24 0c 9e d4 10 	movl   $0xc010d49e,0xc(%esp)$/;"	l
c010778c	obj/kernel.asm	/^c010778c:	c0 $/;"	l
c010778d	obj/kernel.asm	/^c010778d:	c7 44 24 08 86 d1 10 	movl   $0xc010d186,0x8(%esp)$/;"	l
c0107794	obj/kernel.asm	/^c0107794:	c0 $/;"	l
c0107795	obj/kernel.asm	/^c0107795:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c010779c	obj/kernel.asm	/^c010779c:	00 $/;"	l
c010779d	obj/kernel.asm	/^c010779d:	c7 04 24 20 d1 10 c0 	movl   $0xc010d120,(%esp)$/;"	l
c01077a4	obj/kernel.asm	/^c01077a4:	e8 2c 96 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01077a9	obj/kernel.asm	/^c01077a9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01077b0	obj/kernel.asm	/^c01077b0:	eb 1e                	jmp    c01077d0 <check_swap+0x5d0>$/;"	l
c01077b2	obj/kernel.asm	/^c01077b2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077b5	obj/kernel.asm	/^c01077b5:	8b 04 85 e0 ef 19 c0 	mov    -0x3fe61020(,%eax,4),%eax$/;"	l
c01077bc	obj/kernel.asm	/^c01077bc:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01077c3	obj/kernel.asm	/^c01077c3:	00 $/;"	l
c01077c4	obj/kernel.asm	/^c01077c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01077c7	obj/kernel.asm	/^c01077c7:	e8 e8 d8 ff ff       	call   c01050b4 <free_pages>$/;"	l
c01077cc	obj/kernel.asm	/^c01077cc:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01077d0	obj/kernel.asm	/^c01077d0:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c01077d4	obj/kernel.asm	/^c01077d4:	7e dc                	jle    c01077b2 <check_swap+0x5b2>$/;"	l
c01077d6	obj/kernel.asm	/^c01077d6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01077d9	obj/kernel.asm	/^c01077d9:	8b 00                	mov    (%eax),%eax$/;"	l
c01077db	obj/kernel.asm	/^c01077db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01077de	obj/kernel.asm	/^c01077de:	e8 6b f4 ff ff       	call   c0106c4e <pa2page>$/;"	l
c01077e3	obj/kernel.asm	/^c01077e3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01077ea	obj/kernel.asm	/^c01077ea:	00 $/;"	l
c01077eb	obj/kernel.asm	/^c01077eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01077ee	obj/kernel.asm	/^c01077ee:	e8 c1 d8 ff ff       	call   c01050b4 <free_pages>$/;"	l
c01077f3	obj/kernel.asm	/^c01077f3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01077f6	obj/kernel.asm	/^c01077f6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01077fc	obj/kernel.asm	/^c01077fc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01077ff	obj/kernel.asm	/^c01077ff:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0107806	obj/kernel.asm	/^c0107806:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107809	obj/kernel.asm	/^c0107809:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010780c	obj/kernel.asm	/^c010780c:	e8 e4 08 00 00       	call   c01080f5 <mm_destroy>$/;"	l
c0107811	obj/kernel.asm	/^c0107811:	c7 05 ac f0 19 c0 00 	movl   $0x0,0xc019f0ac$/;"	l
c0107818	obj/kernel.asm	/^c0107818:	00 00 00 $/;"	l
c010781b	obj/kernel.asm	/^c010781b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010781e	obj/kernel.asm	/^c010781e:	a3 c0 ef 19 c0       	mov    %eax,0xc019efc0$/;"	l
c0107823	obj/kernel.asm	/^c0107823:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0107826	obj/kernel.asm	/^c0107826:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c0107829	obj/kernel.asm	/^c0107829:	a3 b8 ef 19 c0       	mov    %eax,0xc019efb8$/;"	l
c010782e	obj/kernel.asm	/^c010782e:	89 15 bc ef 19 c0    	mov    %edx,0xc019efbc$/;"	l
c0107834	obj/kernel.asm	/^c0107834:	c7 45 e8 b8 ef 19 c0 	movl   $0xc019efb8,-0x18(%ebp)$/;"	l
c010783b	obj/kernel.asm	/^c010783b:	eb 1d                	jmp    c010785a <check_swap+0x65a>$/;"	l
c010783d	obj/kernel.asm	/^c010783d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107840	obj/kernel.asm	/^c0107840:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107843	obj/kernel.asm	/^c0107843:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107846	obj/kernel.asm	/^c0107846:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010784a	obj/kernel.asm	/^c010784a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010784d	obj/kernel.asm	/^c010784d:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107850	obj/kernel.asm	/^c0107850:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107853	obj/kernel.asm	/^c0107853:	29 c2                	sub    %eax,%edx$/;"	l
c0107855	obj/kernel.asm	/^c0107855:	89 d0                	mov    %edx,%eax$/;"	l
c0107857	obj/kernel.asm	/^c0107857:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010785a	obj/kernel.asm	/^c010785a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010785d	obj/kernel.asm	/^c010785d:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0107860	obj/kernel.asm	/^c0107860:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0107863	obj/kernel.asm	/^c0107863:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107866	obj/kernel.asm	/^c0107866:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107869	obj/kernel.asm	/^c0107869:	81 7d e8 b8 ef 19 c0 	cmpl   $0xc019efb8,-0x18(%ebp)$/;"	l
c0107870	obj/kernel.asm	/^c0107870:	75 cb                	jne    c010783d <check_swap+0x63d>$/;"	l
c0107872	obj/kernel.asm	/^c0107872:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107875	obj/kernel.asm	/^c0107875:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107879	obj/kernel.asm	/^c0107879:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010787c	obj/kernel.asm	/^c010787c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107880	obj/kernel.asm	/^c0107880:	c7 04 24 a5 d4 10 c0 	movl   $0xc010d4a5,(%esp)$/;"	l
c0107887	obj/kernel.asm	/^c0107887:	e8 c7 8a ff ff       	call   c0100353 <cprintf>$/;"	l
c010788c	obj/kernel.asm	/^c010788c:	c7 04 24 bf d4 10 c0 	movl   $0xc010d4bf,(%esp)$/;"	l
c0107893	obj/kernel.asm	/^c0107893:	e8 bb 8a ff ff       	call   c0100353 <cprintf>$/;"	l
c0107898	obj/kernel.asm	/^c0107898:	83 c4 74             	add    $0x74,%esp$/;"	l
c010789b	obj/kernel.asm	/^c010789b:	5b                   	pop    %ebx$/;"	l
c010789c	obj/kernel.asm	/^c010789c:	5d                   	pop    %ebp$/;"	l
c010789d	obj/kernel.asm	/^c010789d:	c3                   	ret    $/;"	l
c010789e	obj/kernel.asm	/^c010789e <_fifo_init_mm>:$/;"	l
c010789e	obj/kernel.asm	/^c010789e:	55                   	push   %ebp$/;"	l
c010789f	obj/kernel.asm	/^c010789f:	89 e5                	mov    %esp,%ebp$/;"	l
c01078a1	obj/kernel.asm	/^c01078a1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01078a4	obj/kernel.asm	/^c01078a4:	c7 45 fc a4 f0 19 c0 	movl   $0xc019f0a4,-0x4(%ebp)$/;"	l
c01078ab	obj/kernel.asm	/^c01078ab:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01078ae	obj/kernel.asm	/^c01078ae:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01078b1	obj/kernel.asm	/^c01078b1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01078b4	obj/kernel.asm	/^c01078b4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01078b7	obj/kernel.asm	/^c01078b7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01078ba	obj/kernel.asm	/^c01078ba:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01078bd	obj/kernel.asm	/^c01078bd:	89 10                	mov    %edx,(%eax)$/;"	l
c01078bf	obj/kernel.asm	/^c01078bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01078c2	obj/kernel.asm	/^c01078c2:	c7 40 14 a4 f0 19 c0 	movl   $0xc019f0a4,0x14(%eax)$/;"	l
c01078c9	obj/kernel.asm	/^c01078c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01078ce	obj/kernel.asm	/^c01078ce:	c9                   	leave  $/;"	l
c01078cf	obj/kernel.asm	/^c01078cf:	c3                   	ret    $/;"	l
c01078d0	obj/kernel.asm	/^c01078d0 <_fifo_map_swappable>:$/;"	l
c01078d0	obj/kernel.asm	/^c01078d0:	55                   	push   %ebp$/;"	l
c01078d1	obj/kernel.asm	/^c01078d1:	89 e5                	mov    %esp,%ebp$/;"	l
c01078d3	obj/kernel.asm	/^c01078d3:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01078d6	obj/kernel.asm	/^c01078d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01078d9	obj/kernel.asm	/^c01078d9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01078dc	obj/kernel.asm	/^c01078dc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01078df	obj/kernel.asm	/^c01078df:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01078e2	obj/kernel.asm	/^c01078e2:	83 c0 14             	add    $0x14,%eax$/;"	l
c01078e5	obj/kernel.asm	/^c01078e5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01078e8	obj/kernel.asm	/^c01078e8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01078ec	obj/kernel.asm	/^c01078ec:	74 06                	je     c01078f4 <_fifo_map_swappable+0x24>$/;"	l
c01078ee	obj/kernel.asm	/^c01078ee:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01078f2	obj/kernel.asm	/^c01078f2:	75 24                	jne    c0107918 <_fifo_map_swappable+0x48>$/;"	l
c01078f4	obj/kernel.asm	/^c01078f4:	c7 44 24 0c d8 d4 10 	movl   $0xc010d4d8,0xc(%esp)$/;"	l
c01078fb	obj/kernel.asm	/^c01078fb:	c0 $/;"	l
c01078fc	obj/kernel.asm	/^c01078fc:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107903	obj/kernel.asm	/^c0107903:	c0 $/;"	l
c0107904	obj/kernel.asm	/^c0107904:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
c010790b	obj/kernel.asm	/^c010790b:	00 $/;"	l
c010790c	obj/kernel.asm	/^c010790c:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107913	obj/kernel.asm	/^c0107913:	e8 bd 94 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107918	obj/kernel.asm	/^c0107918:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010791b	obj/kernel.asm	/^c010791b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010791e	obj/kernel.asm	/^c010791e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107921	obj/kernel.asm	/^c0107921:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107924	obj/kernel.asm	/^c0107924:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107927	obj/kernel.asm	/^c0107927:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010792a	obj/kernel.asm	/^c010792a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010792d	obj/kernel.asm	/^c010792d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107930	obj/kernel.asm	/^c0107930:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107933	obj/kernel.asm	/^c0107933:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107936	obj/kernel.asm	/^c0107936:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107939	obj/kernel.asm	/^c0107939:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c010793c	obj/kernel.asm	/^c010793c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010793f	obj/kernel.asm	/^c010793f:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c0107942	obj/kernel.asm	/^c0107942:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107945	obj/kernel.asm	/^c0107945:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107948	obj/kernel.asm	/^c0107948:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010794b	obj/kernel.asm	/^c010794b:	89 10                	mov    %edx,(%eax)$/;"	l
c010794d	obj/kernel.asm	/^c010794d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107950	obj/kernel.asm	/^c0107950:	8b 10                	mov    (%eax),%edx$/;"	l
c0107952	obj/kernel.asm	/^c0107952:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107955	obj/kernel.asm	/^c0107955:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107958	obj/kernel.asm	/^c0107958:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010795b	obj/kernel.asm	/^c010795b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010795e	obj/kernel.asm	/^c010795e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107961	obj/kernel.asm	/^c0107961:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107964	obj/kernel.asm	/^c0107964:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107967	obj/kernel.asm	/^c0107967:	89 10                	mov    %edx,(%eax)$/;"	l
c0107969	obj/kernel.asm	/^c0107969:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010796e	obj/kernel.asm	/^c010796e:	c9                   	leave  $/;"	l
c010796f	obj/kernel.asm	/^c010796f:	c3                   	ret    $/;"	l
c0107970	obj/kernel.asm	/^c0107970 <_fifo_swap_out_victim>:$/;"	l
c0107970	obj/kernel.asm	/^c0107970:	55                   	push   %ebp$/;"	l
c0107971	obj/kernel.asm	/^c0107971:	89 e5                	mov    %esp,%ebp$/;"	l
c0107973	obj/kernel.asm	/^c0107973:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107976	obj/kernel.asm	/^c0107976:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107979	obj/kernel.asm	/^c0107979:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010797c	obj/kernel.asm	/^c010797c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010797f	obj/kernel.asm	/^c010797f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107983	obj/kernel.asm	/^c0107983:	75 24                	jne    c01079a9 <_fifo_swap_out_victim+0x39>$/;"	l
c0107985	obj/kernel.asm	/^c0107985:	c7 44 24 0c 1f d5 10 	movl   $0xc010d51f,0xc(%esp)$/;"	l
c010798c	obj/kernel.asm	/^c010798c:	c0 $/;"	l
c010798d	obj/kernel.asm	/^c010798d:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107994	obj/kernel.asm	/^c0107994:	c0 $/;"	l
c0107995	obj/kernel.asm	/^c0107995:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
c010799c	obj/kernel.asm	/^c010799c:	00 $/;"	l
c010799d	obj/kernel.asm	/^c010799d:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c01079a4	obj/kernel.asm	/^c01079a4:	e8 2c 94 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01079a9	obj/kernel.asm	/^c01079a9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01079ad	obj/kernel.asm	/^c01079ad:	74 24                	je     c01079d3 <_fifo_swap_out_victim+0x63>$/;"	l
c01079af	obj/kernel.asm	/^c01079af:	c7 44 24 0c 2c d5 10 	movl   $0xc010d52c,0xc(%esp)$/;"	l
c01079b6	obj/kernel.asm	/^c01079b6:	c0 $/;"	l
c01079b7	obj/kernel.asm	/^c01079b7:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c01079be	obj/kernel.asm	/^c01079be:	c0 $/;"	l
c01079bf	obj/kernel.asm	/^c01079bf:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c01079c6	obj/kernel.asm	/^c01079c6:	00 $/;"	l
c01079c7	obj/kernel.asm	/^c01079c7:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c01079ce	obj/kernel.asm	/^c01079ce:	e8 02 94 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01079d3	obj/kernel.asm	/^c01079d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079d6	obj/kernel.asm	/^c01079d6:	8b 00                	mov    (%eax),%eax$/;"	l
c01079d8	obj/kernel.asm	/^c01079d8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01079db	obj/kernel.asm	/^c01079db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079de	obj/kernel.asm	/^c01079de:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01079e1	obj/kernel.asm	/^c01079e1:	75 24                	jne    c0107a07 <_fifo_swap_out_victim+0x97>$/;"	l
c01079e3	obj/kernel.asm	/^c01079e3:	c7 44 24 0c 37 d5 10 	movl   $0xc010d537,0xc(%esp)$/;"	l
c01079ea	obj/kernel.asm	/^c01079ea:	c0 $/;"	l
c01079eb	obj/kernel.asm	/^c01079eb:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c01079f2	obj/kernel.asm	/^c01079f2:	c0 $/;"	l
c01079f3	obj/kernel.asm	/^c01079f3:	c7 44 24 04 48 00 00 	movl   $0x48,0x4(%esp)$/;"	l
c01079fa	obj/kernel.asm	/^c01079fa:	00 $/;"	l
c01079fb	obj/kernel.asm	/^c01079fb:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107a02	obj/kernel.asm	/^c0107a02:	e8 ce 93 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107a07	obj/kernel.asm	/^c0107a07:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107a0a	obj/kernel.asm	/^c0107a0a:	83 e8 14             	sub    $0x14,%eax$/;"	l
c0107a0d	obj/kernel.asm	/^c0107a0d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107a10	obj/kernel.asm	/^c0107a10:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107a13	obj/kernel.asm	/^c0107a13:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107a16	obj/kernel.asm	/^c0107a16:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107a19	obj/kernel.asm	/^c0107a19:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107a1c	obj/kernel.asm	/^c0107a1c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107a1f	obj/kernel.asm	/^c0107a1f:	8b 12                	mov    (%edx),%edx$/;"	l
c0107a21	obj/kernel.asm	/^c0107a21:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0107a24	obj/kernel.asm	/^c0107a24:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107a27	obj/kernel.asm	/^c0107a27:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107a2a	obj/kernel.asm	/^c0107a2a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107a2d	obj/kernel.asm	/^c0107a2d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a30	obj/kernel.asm	/^c0107a30:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107a33	obj/kernel.asm	/^c0107a33:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107a36	obj/kernel.asm	/^c0107a36:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a38	obj/kernel.asm	/^c0107a38:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107a3c	obj/kernel.asm	/^c0107a3c:	75 24                	jne    c0107a62 <_fifo_swap_out_victim+0xf2>$/;"	l
c0107a3e	obj/kernel.asm	/^c0107a3e:	c7 44 24 0c 42 d5 10 	movl   $0xc010d542,0xc(%esp)$/;"	l
c0107a45	obj/kernel.asm	/^c0107a45:	c0 $/;"	l
c0107a46	obj/kernel.asm	/^c0107a46:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107a4d	obj/kernel.asm	/^c0107a4d:	c0 $/;"	l
c0107a4e	obj/kernel.asm	/^c0107a4e:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
c0107a55	obj/kernel.asm	/^c0107a55:	00 $/;"	l
c0107a56	obj/kernel.asm	/^c0107a56:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107a5d	obj/kernel.asm	/^c0107a5d:	e8 73 93 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107a62	obj/kernel.asm	/^c0107a62:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107a65	obj/kernel.asm	/^c0107a65:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107a68	obj/kernel.asm	/^c0107a68:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a6a	obj/kernel.asm	/^c0107a6a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107a6f	obj/kernel.asm	/^c0107a6f:	c9                   	leave  $/;"	l
c0107a70	obj/kernel.asm	/^c0107a70:	c3                   	ret    $/;"	l
c0107a71	obj/kernel.asm	/^c0107a71 <_fifo_check_swap>:$/;"	l
c0107a71	obj/kernel.asm	/^c0107a71:	55                   	push   %ebp$/;"	l
c0107a72	obj/kernel.asm	/^c0107a72:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a74	obj/kernel.asm	/^c0107a74:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107a77	obj/kernel.asm	/^c0107a77:	c7 04 24 4c d5 10 c0 	movl   $0xc010d54c,(%esp)$/;"	l
c0107a7e	obj/kernel.asm	/^c0107a7e:	e8 d0 88 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107a83	obj/kernel.asm	/^c0107a83:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107a88	obj/kernel.asm	/^c0107a88:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107a8b	obj/kernel.asm	/^c0107a8b:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107a90	obj/kernel.asm	/^c0107a90:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107a93	obj/kernel.asm	/^c0107a93:	74 24                	je     c0107ab9 <_fifo_check_swap+0x48>$/;"	l
c0107a95	obj/kernel.asm	/^c0107a95:	c7 44 24 0c 72 d5 10 	movl   $0xc010d572,0xc(%esp)$/;"	l
c0107a9c	obj/kernel.asm	/^c0107a9c:	c0 $/;"	l
c0107a9d	obj/kernel.asm	/^c0107a9d:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107aa4	obj/kernel.asm	/^c0107aa4:	c0 $/;"	l
c0107aa5	obj/kernel.asm	/^c0107aa5:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c0107aac	obj/kernel.asm	/^c0107aac:	00 $/;"	l
c0107aad	obj/kernel.asm	/^c0107aad:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107ab4	obj/kernel.asm	/^c0107ab4:	e8 1c 93 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107ab9	obj/kernel.asm	/^c0107ab9:	c7 04 24 84 d5 10 c0 	movl   $0xc010d584,(%esp)$/;"	l
c0107ac0	obj/kernel.asm	/^c0107ac0:	e8 8e 88 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107ac5	obj/kernel.asm	/^c0107ac5:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107aca	obj/kernel.asm	/^c0107aca:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107acd	obj/kernel.asm	/^c0107acd:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107ad2	obj/kernel.asm	/^c0107ad2:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107ad5	obj/kernel.asm	/^c0107ad5:	74 24                	je     c0107afb <_fifo_check_swap+0x8a>$/;"	l
c0107ad7	obj/kernel.asm	/^c0107ad7:	c7 44 24 0c 72 d5 10 	movl   $0xc010d572,0xc(%esp)$/;"	l
c0107ade	obj/kernel.asm	/^c0107ade:	c0 $/;"	l
c0107adf	obj/kernel.asm	/^c0107adf:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107ae6	obj/kernel.asm	/^c0107ae6:	c0 $/;"	l
c0107ae7	obj/kernel.asm	/^c0107ae7:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
c0107aee	obj/kernel.asm	/^c0107aee:	00 $/;"	l
c0107aef	obj/kernel.asm	/^c0107aef:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107af6	obj/kernel.asm	/^c0107af6:	e8 da 92 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107afb	obj/kernel.asm	/^c0107afb:	c7 04 24 ac d5 10 c0 	movl   $0xc010d5ac,(%esp)$/;"	l
c0107b02	obj/kernel.asm	/^c0107b02:	e8 4c 88 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107b07	obj/kernel.asm	/^c0107b07:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107b0c	obj/kernel.asm	/^c0107b0c:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107b0f	obj/kernel.asm	/^c0107b0f:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107b14	obj/kernel.asm	/^c0107b14:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107b17	obj/kernel.asm	/^c0107b17:	74 24                	je     c0107b3d <_fifo_check_swap+0xcc>$/;"	l
c0107b19	obj/kernel.asm	/^c0107b19:	c7 44 24 0c 72 d5 10 	movl   $0xc010d572,0xc(%esp)$/;"	l
c0107b20	obj/kernel.asm	/^c0107b20:	c0 $/;"	l
c0107b21	obj/kernel.asm	/^c0107b21:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107b28	obj/kernel.asm	/^c0107b28:	c0 $/;"	l
c0107b29	obj/kernel.asm	/^c0107b29:	c7 44 24 04 5b 00 00 	movl   $0x5b,0x4(%esp)$/;"	l
c0107b30	obj/kernel.asm	/^c0107b30:	00 $/;"	l
c0107b31	obj/kernel.asm	/^c0107b31:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107b38	obj/kernel.asm	/^c0107b38:	e8 98 92 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107b3d	obj/kernel.asm	/^c0107b3d:	c7 04 24 d4 d5 10 c0 	movl   $0xc010d5d4,(%esp)$/;"	l
c0107b44	obj/kernel.asm	/^c0107b44:	e8 0a 88 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107b49	obj/kernel.asm	/^c0107b49:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107b4e	obj/kernel.asm	/^c0107b4e:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107b51	obj/kernel.asm	/^c0107b51:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107b56	obj/kernel.asm	/^c0107b56:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107b59	obj/kernel.asm	/^c0107b59:	74 24                	je     c0107b7f <_fifo_check_swap+0x10e>$/;"	l
c0107b5b	obj/kernel.asm	/^c0107b5b:	c7 44 24 0c 72 d5 10 	movl   $0xc010d572,0xc(%esp)$/;"	l
c0107b62	obj/kernel.asm	/^c0107b62:	c0 $/;"	l
c0107b63	obj/kernel.asm	/^c0107b63:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107b6a	obj/kernel.asm	/^c0107b6a:	c0 $/;"	l
c0107b6b	obj/kernel.asm	/^c0107b6b:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107b72	obj/kernel.asm	/^c0107b72:	00 $/;"	l
c0107b73	obj/kernel.asm	/^c0107b73:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107b7a	obj/kernel.asm	/^c0107b7a:	e8 56 92 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107b7f	obj/kernel.asm	/^c0107b7f:	c7 04 24 fc d5 10 c0 	movl   $0xc010d5fc,(%esp)$/;"	l
c0107b86	obj/kernel.asm	/^c0107b86:	e8 c8 87 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107b8b	obj/kernel.asm	/^c0107b8b:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c0107b90	obj/kernel.asm	/^c0107b90:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c0107b93	obj/kernel.asm	/^c0107b93:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107b98	obj/kernel.asm	/^c0107b98:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107b9b	obj/kernel.asm	/^c0107b9b:	74 24                	je     c0107bc1 <_fifo_check_swap+0x150>$/;"	l
c0107b9d	obj/kernel.asm	/^c0107b9d:	c7 44 24 0c 22 d6 10 	movl   $0xc010d622,0xc(%esp)$/;"	l
c0107ba4	obj/kernel.asm	/^c0107ba4:	c0 $/;"	l
c0107ba5	obj/kernel.asm	/^c0107ba5:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107bac	obj/kernel.asm	/^c0107bac:	c0 $/;"	l
c0107bad	obj/kernel.asm	/^c0107bad:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c0107bb4	obj/kernel.asm	/^c0107bb4:	00 $/;"	l
c0107bb5	obj/kernel.asm	/^c0107bb5:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107bbc	obj/kernel.asm	/^c0107bbc:	e8 14 92 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107bc1	obj/kernel.asm	/^c0107bc1:	c7 04 24 d4 d5 10 c0 	movl   $0xc010d5d4,(%esp)$/;"	l
c0107bc8	obj/kernel.asm	/^c0107bc8:	e8 86 87 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107bcd	obj/kernel.asm	/^c0107bcd:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107bd2	obj/kernel.asm	/^c0107bd2:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107bd5	obj/kernel.asm	/^c0107bd5:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107bda	obj/kernel.asm	/^c0107bda:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107bdd	obj/kernel.asm	/^c0107bdd:	74 24                	je     c0107c03 <_fifo_check_swap+0x192>$/;"	l
c0107bdf	obj/kernel.asm	/^c0107bdf:	c7 44 24 0c 22 d6 10 	movl   $0xc010d622,0xc(%esp)$/;"	l
c0107be6	obj/kernel.asm	/^c0107be6:	c0 $/;"	l
c0107be7	obj/kernel.asm	/^c0107be7:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107bee	obj/kernel.asm	/^c0107bee:	c0 $/;"	l
c0107bef	obj/kernel.asm	/^c0107bef:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0107bf6	obj/kernel.asm	/^c0107bf6:	00 $/;"	l
c0107bf7	obj/kernel.asm	/^c0107bf7:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107bfe	obj/kernel.asm	/^c0107bfe:	e8 d2 91 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107c03	obj/kernel.asm	/^c0107c03:	c7 04 24 84 d5 10 c0 	movl   $0xc010d584,(%esp)$/;"	l
c0107c0a	obj/kernel.asm	/^c0107c0a:	e8 44 87 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107c0f	obj/kernel.asm	/^c0107c0f:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107c14	obj/kernel.asm	/^c0107c14:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107c17	obj/kernel.asm	/^c0107c17:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107c1c	obj/kernel.asm	/^c0107c1c:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c0107c1f	obj/kernel.asm	/^c0107c1f:	74 24                	je     c0107c45 <_fifo_check_swap+0x1d4>$/;"	l
c0107c21	obj/kernel.asm	/^c0107c21:	c7 44 24 0c 31 d6 10 	movl   $0xc010d631,0xc(%esp)$/;"	l
c0107c28	obj/kernel.asm	/^c0107c28:	c0 $/;"	l
c0107c29	obj/kernel.asm	/^c0107c29:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107c30	obj/kernel.asm	/^c0107c30:	c0 $/;"	l
c0107c31	obj/kernel.asm	/^c0107c31:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c0107c38	obj/kernel.asm	/^c0107c38:	00 $/;"	l
c0107c39	obj/kernel.asm	/^c0107c39:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107c40	obj/kernel.asm	/^c0107c40:	e8 90 91 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107c45	obj/kernel.asm	/^c0107c45:	c7 04 24 d4 d5 10 c0 	movl   $0xc010d5d4,(%esp)$/;"	l
c0107c4c	obj/kernel.asm	/^c0107c4c:	e8 02 87 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107c51	obj/kernel.asm	/^c0107c51:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107c56	obj/kernel.asm	/^c0107c56:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107c59	obj/kernel.asm	/^c0107c59:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107c5e	obj/kernel.asm	/^c0107c5e:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0107c61	obj/kernel.asm	/^c0107c61:	74 24                	je     c0107c87 <_fifo_check_swap+0x216>$/;"	l
c0107c63	obj/kernel.asm	/^c0107c63:	c7 44 24 0c 40 d6 10 	movl   $0xc010d640,0xc(%esp)$/;"	l
c0107c6a	obj/kernel.asm	/^c0107c6a:	c0 $/;"	l
c0107c6b	obj/kernel.asm	/^c0107c6b:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107c72	obj/kernel.asm	/^c0107c72:	c0 $/;"	l
c0107c73	obj/kernel.asm	/^c0107c73:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0107c7a	obj/kernel.asm	/^c0107c7a:	00 $/;"	l
c0107c7b	obj/kernel.asm	/^c0107c7b:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107c82	obj/kernel.asm	/^c0107c82:	e8 4e 91 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107c87	obj/kernel.asm	/^c0107c87:	c7 04 24 4c d5 10 c0 	movl   $0xc010d54c,(%esp)$/;"	l
c0107c8e	obj/kernel.asm	/^c0107c8e:	e8 c0 86 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107c93	obj/kernel.asm	/^c0107c93:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107c98	obj/kernel.asm	/^c0107c98:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107c9b	obj/kernel.asm	/^c0107c9b:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107ca0	obj/kernel.asm	/^c0107ca0:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0107ca3	obj/kernel.asm	/^c0107ca3:	74 24                	je     c0107cc9 <_fifo_check_swap+0x258>$/;"	l
c0107ca5	obj/kernel.asm	/^c0107ca5:	c7 44 24 0c 4f d6 10 	movl   $0xc010d64f,0xc(%esp)$/;"	l
c0107cac	obj/kernel.asm	/^c0107cac:	c0 $/;"	l
c0107cad	obj/kernel.asm	/^c0107cad:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107cb4	obj/kernel.asm	/^c0107cb4:	c0 $/;"	l
c0107cb5	obj/kernel.asm	/^c0107cb5:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c0107cbc	obj/kernel.asm	/^c0107cbc:	00 $/;"	l
c0107cbd	obj/kernel.asm	/^c0107cbd:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107cc4	obj/kernel.asm	/^c0107cc4:	e8 0c 91 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107cc9	obj/kernel.asm	/^c0107cc9:	c7 04 24 ac d5 10 c0 	movl   $0xc010d5ac,(%esp)$/;"	l
c0107cd0	obj/kernel.asm	/^c0107cd0:	e8 7e 86 ff ff       	call   c0100353 <cprintf>$/;"	l
c0107cd5	obj/kernel.asm	/^c0107cd5:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107cda	obj/kernel.asm	/^c0107cda:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107cdd	obj/kernel.asm	/^c0107cdd:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0107ce2	obj/kernel.asm	/^c0107ce2:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c0107ce5	obj/kernel.asm	/^c0107ce5:	74 24                	je     c0107d0b <_fifo_check_swap+0x29a>$/;"	l
c0107ce7	obj/kernel.asm	/^c0107ce7:	c7 44 24 0c 5e d6 10 	movl   $0xc010d65e,0xc(%esp)$/;"	l
c0107cee	obj/kernel.asm	/^c0107cee:	c0 $/;"	l
c0107cef	obj/kernel.asm	/^c0107cef:	c7 44 24 08 f6 d4 10 	movl   $0xc010d4f6,0x8(%esp)$/;"	l
c0107cf6	obj/kernel.asm	/^c0107cf6:	c0 $/;"	l
c0107cf7	obj/kernel.asm	/^c0107cf7:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0107cfe	obj/kernel.asm	/^c0107cfe:	00 $/;"	l
c0107cff	obj/kernel.asm	/^c0107cff:	c7 04 24 0b d5 10 c0 	movl   $0xc010d50b,(%esp)$/;"	l
c0107d06	obj/kernel.asm	/^c0107d06:	e8 ca 90 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107d0b	obj/kernel.asm	/^c0107d0b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107d10	obj/kernel.asm	/^c0107d10:	c9                   	leave  $/;"	l
c0107d11	obj/kernel.asm	/^c0107d11:	c3                   	ret    $/;"	l
c0107d12	obj/kernel.asm	/^c0107d12 <_fifo_init>:$/;"	l
c0107d12	obj/kernel.asm	/^c0107d12:	55                   	push   %ebp$/;"	l
c0107d13	obj/kernel.asm	/^c0107d13:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d15	obj/kernel.asm	/^c0107d15:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107d1a	obj/kernel.asm	/^c0107d1a:	5d                   	pop    %ebp$/;"	l
c0107d1b	obj/kernel.asm	/^c0107d1b:	c3                   	ret    $/;"	l
c0107d1c	obj/kernel.asm	/^c0107d1c <_fifo_set_unswappable>:$/;"	l
c0107d1c	obj/kernel.asm	/^c0107d1c:	55                   	push   %ebp$/;"	l
c0107d1d	obj/kernel.asm	/^c0107d1d:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d1f	obj/kernel.asm	/^c0107d1f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107d24	obj/kernel.asm	/^c0107d24:	5d                   	pop    %ebp$/;"	l
c0107d25	obj/kernel.asm	/^c0107d25:	c3                   	ret    $/;"	l
c0107d26	obj/kernel.asm	/^c0107d26 <_fifo_tick_event>:$/;"	l
c0107d26	obj/kernel.asm	/^c0107d26:	55                   	push   %ebp$/;"	l
c0107d27	obj/kernel.asm	/^c0107d27:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d29	obj/kernel.asm	/^c0107d29:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107d2e	obj/kernel.asm	/^c0107d2e:	5d                   	pop    %ebp$/;"	l
c0107d2f	obj/kernel.asm	/^c0107d2f:	c3                   	ret    $/;"	l
c0107d30	obj/kernel.asm	/^c0107d30 <lock_init>:$/;"	l
c0107d30	obj/kernel.asm	/^c0107d30:	55                   	push   %ebp$/;"	l
c0107d31	obj/kernel.asm	/^c0107d31:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d33	obj/kernel.asm	/^c0107d33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d36	obj/kernel.asm	/^c0107d36:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0107d3c	obj/kernel.asm	/^c0107d3c:	5d                   	pop    %ebp$/;"	l
c0107d3d	obj/kernel.asm	/^c0107d3d:	c3                   	ret    $/;"	l
c0107d3e	obj/kernel.asm	/^c0107d3e <mm_count>:$/;"	l
c0107d3e	obj/kernel.asm	/^c0107d3e:	55                   	push   %ebp$/;"	l
c0107d3f	obj/kernel.asm	/^c0107d3f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d41	obj/kernel.asm	/^c0107d41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d44	obj/kernel.asm	/^c0107d44:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0107d47	obj/kernel.asm	/^c0107d47:	5d                   	pop    %ebp$/;"	l
c0107d48	obj/kernel.asm	/^c0107d48:	c3                   	ret    $/;"	l
c0107d49	obj/kernel.asm	/^c0107d49 <set_mm_count>:$/;"	l
c0107d49	obj/kernel.asm	/^c0107d49:	55                   	push   %ebp$/;"	l
c0107d4a	obj/kernel.asm	/^c0107d4a:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d4c	obj/kernel.asm	/^c0107d4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d4f	obj/kernel.asm	/^c0107d4f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107d52	obj/kernel.asm	/^c0107d52:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0107d55	obj/kernel.asm	/^c0107d55:	5d                   	pop    %ebp$/;"	l
c0107d56	obj/kernel.asm	/^c0107d56:	c3                   	ret    $/;"	l
c0107d57	obj/kernel.asm	/^c0107d57 <pa2page>:$/;"	l
c0107d57	obj/kernel.asm	/^c0107d57:	55                   	push   %ebp$/;"	l
c0107d58	obj/kernel.asm	/^c0107d58:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d5a	obj/kernel.asm	/^c0107d5a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107d5d	obj/kernel.asm	/^c0107d5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d60	obj/kernel.asm	/^c0107d60:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107d63	obj/kernel.asm	/^c0107d63:	89 c2                	mov    %eax,%edx$/;"	l
c0107d65	obj/kernel.asm	/^c0107d65:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0107d6a	obj/kernel.asm	/^c0107d6a:	39 c2                	cmp    %eax,%edx$/;"	l
c0107d6c	obj/kernel.asm	/^c0107d6c:	72 1c                	jb     c0107d8a <pa2page+0x33>$/;"	l
c0107d6e	obj/kernel.asm	/^c0107d6e:	c7 44 24 08 80 d6 10 	movl   $0xc010d680,0x8(%esp)$/;"	l
c0107d75	obj/kernel.asm	/^c0107d75:	c0 $/;"	l
c0107d76	obj/kernel.asm	/^c0107d76:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107d7d	obj/kernel.asm	/^c0107d7d:	00 $/;"	l
c0107d7e	obj/kernel.asm	/^c0107d7e:	c7 04 24 9f d6 10 c0 	movl   $0xc010d69f,(%esp)$/;"	l
c0107d85	obj/kernel.asm	/^c0107d85:	e8 4b 90 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107d8a	obj/kernel.asm	/^c0107d8a:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c0107d8f	obj/kernel.asm	/^c0107d8f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107d92	obj/kernel.asm	/^c0107d92:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0107d95	obj/kernel.asm	/^c0107d95:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0107d98	obj/kernel.asm	/^c0107d98:	01 d0                	add    %edx,%eax$/;"	l
c0107d9a	obj/kernel.asm	/^c0107d9a:	c9                   	leave  $/;"	l
c0107d9b	obj/kernel.asm	/^c0107d9b:	c3                   	ret    $/;"	l
c0107d9c	obj/kernel.asm	/^c0107d9c <mm_create>:$/;"	l
c0107d9c	obj/kernel.asm	/^c0107d9c:	55                   	push   %ebp$/;"	l
c0107d9d	obj/kernel.asm	/^c0107d9d:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d9f	obj/kernel.asm	/^c0107d9f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107da2	obj/kernel.asm	/^c0107da2:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0107da9	obj/kernel.asm	/^c0107da9:	e8 26 ce ff ff       	call   c0104bd4 <kmalloc>$/;"	l
c0107dae	obj/kernel.asm	/^c0107dae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107db1	obj/kernel.asm	/^c0107db1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107db5	obj/kernel.asm	/^c0107db5:	74 79                	je     c0107e30 <mm_create+0x94>$/;"	l
c0107db7	obj/kernel.asm	/^c0107db7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dba	obj/kernel.asm	/^c0107dba:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107dbd	obj/kernel.asm	/^c0107dbd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107dc0	obj/kernel.asm	/^c0107dc0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107dc3	obj/kernel.asm	/^c0107dc3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107dc6	obj/kernel.asm	/^c0107dc6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107dc9	obj/kernel.asm	/^c0107dc9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107dcc	obj/kernel.asm	/^c0107dcc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107dcf	obj/kernel.asm	/^c0107dcf:	89 10                	mov    %edx,(%eax)$/;"	l
c0107dd1	obj/kernel.asm	/^c0107dd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dd4	obj/kernel.asm	/^c0107dd4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107ddb	obj/kernel.asm	/^c0107ddb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dde	obj/kernel.asm	/^c0107dde:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0107de5	obj/kernel.asm	/^c0107de5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107de8	obj/kernel.asm	/^c0107de8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0107def	obj/kernel.asm	/^c0107def:	a1 6c cf 19 c0       	mov    0xc019cf6c,%eax$/;"	l
c0107df4	obj/kernel.asm	/^c0107df4:	85 c0                	test   %eax,%eax$/;"	l
c0107df6	obj/kernel.asm	/^c0107df6:	74 0d                	je     c0107e05 <mm_create+0x69>$/;"	l
c0107df8	obj/kernel.asm	/^c0107df8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dfb	obj/kernel.asm	/^c0107dfb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107dfe	obj/kernel.asm	/^c0107dfe:	e8 5e ef ff ff       	call   c0106d61 <swap_init_mm>$/;"	l
c0107e03	obj/kernel.asm	/^c0107e03:	eb 0a                	jmp    c0107e0f <mm_create+0x73>$/;"	l
c0107e05	obj/kernel.asm	/^c0107e05:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e08	obj/kernel.asm	/^c0107e08:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0107e0f	obj/kernel.asm	/^c0107e0f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0107e16	obj/kernel.asm	/^c0107e16:	00 $/;"	l
c0107e17	obj/kernel.asm	/^c0107e17:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e1a	obj/kernel.asm	/^c0107e1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107e1d	obj/kernel.asm	/^c0107e1d:	e8 27 ff ff ff       	call   c0107d49 <set_mm_count>$/;"	l
c0107e22	obj/kernel.asm	/^c0107e22:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e25	obj/kernel.asm	/^c0107e25:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0107e28	obj/kernel.asm	/^c0107e28:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107e2b	obj/kernel.asm	/^c0107e2b:	e8 00 ff ff ff       	call   c0107d30 <lock_init>$/;"	l
c0107e30	obj/kernel.asm	/^c0107e30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e33	obj/kernel.asm	/^c0107e33:	c9                   	leave  $/;"	l
c0107e34	obj/kernel.asm	/^c0107e34:	c3                   	ret    $/;"	l
c0107e35	obj/kernel.asm	/^c0107e35 <vma_create>:$/;"	l
c0107e35	obj/kernel.asm	/^c0107e35:	55                   	push   %ebp$/;"	l
c0107e36	obj/kernel.asm	/^c0107e36:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e38	obj/kernel.asm	/^c0107e38:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107e3b	obj/kernel.asm	/^c0107e3b:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
c0107e42	obj/kernel.asm	/^c0107e42:	e8 8d cd ff ff       	call   c0104bd4 <kmalloc>$/;"	l
c0107e47	obj/kernel.asm	/^c0107e47:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107e4a	obj/kernel.asm	/^c0107e4a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107e4e	obj/kernel.asm	/^c0107e4e:	74 1b                	je     c0107e6b <vma_create+0x36>$/;"	l
c0107e50	obj/kernel.asm	/^c0107e50:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e53	obj/kernel.asm	/^c0107e53:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107e56	obj/kernel.asm	/^c0107e56:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e59	obj/kernel.asm	/^c0107e59:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e5c	obj/kernel.asm	/^c0107e5c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107e5f	obj/kernel.asm	/^c0107e5f:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107e62	obj/kernel.asm	/^c0107e62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e65	obj/kernel.asm	/^c0107e65:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0107e68	obj/kernel.asm	/^c0107e68:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0107e6b	obj/kernel.asm	/^c0107e6b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e6e	obj/kernel.asm	/^c0107e6e:	c9                   	leave  $/;"	l
c0107e6f	obj/kernel.asm	/^c0107e6f:	c3                   	ret    $/;"	l
c0107e70	obj/kernel.asm	/^c0107e70 <find_vma>:$/;"	l
c0107e70	obj/kernel.asm	/^c0107e70:	55                   	push   %ebp$/;"	l
c0107e71	obj/kernel.asm	/^c0107e71:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e73	obj/kernel.asm	/^c0107e73:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0107e76	obj/kernel.asm	/^c0107e76:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0107e7d	obj/kernel.asm	/^c0107e7d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107e81	obj/kernel.asm	/^c0107e81:	0f 84 95 00 00 00    	je     c0107f1c <find_vma+0xac>$/;"	l
c0107e87	obj/kernel.asm	/^c0107e87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e8a	obj/kernel.asm	/^c0107e8a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107e8d	obj/kernel.asm	/^c0107e8d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0107e90	obj/kernel.asm	/^c0107e90:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0107e94	obj/kernel.asm	/^c0107e94:	74 16                	je     c0107eac <find_vma+0x3c>$/;"	l
c0107e96	obj/kernel.asm	/^c0107e96:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107e99	obj/kernel.asm	/^c0107e99:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107e9c	obj/kernel.asm	/^c0107e9c:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107e9f	obj/kernel.asm	/^c0107e9f:	77 0b                	ja     c0107eac <find_vma+0x3c>$/;"	l
c0107ea1	obj/kernel.asm	/^c0107ea1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107ea4	obj/kernel.asm	/^c0107ea4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107ea7	obj/kernel.asm	/^c0107ea7:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107eaa	obj/kernel.asm	/^c0107eaa:	77 61                	ja     c0107f0d <find_vma+0x9d>$/;"	l
c0107eac	obj/kernel.asm	/^c0107eac:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0107eb3	obj/kernel.asm	/^c0107eb3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107eb6	obj/kernel.asm	/^c0107eb6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107eb9	obj/kernel.asm	/^c0107eb9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107ebc	obj/kernel.asm	/^c0107ebc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107ebf	obj/kernel.asm	/^c0107ebf:	eb 28                	jmp    c0107ee9 <find_vma+0x79>$/;"	l
c0107ec1	obj/kernel.asm	/^c0107ec1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ec4	obj/kernel.asm	/^c0107ec4:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107ec7	obj/kernel.asm	/^c0107ec7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0107eca	obj/kernel.asm	/^c0107eca:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107ecd	obj/kernel.asm	/^c0107ecd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107ed0	obj/kernel.asm	/^c0107ed0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107ed3	obj/kernel.asm	/^c0107ed3:	77 14                	ja     c0107ee9 <find_vma+0x79>$/;"	l
c0107ed5	obj/kernel.asm	/^c0107ed5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107ed8	obj/kernel.asm	/^c0107ed8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107edb	obj/kernel.asm	/^c0107edb:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107ede	obj/kernel.asm	/^c0107ede:	76 09                	jbe    c0107ee9 <find_vma+0x79>$/;"	l
c0107ee0	obj/kernel.asm	/^c0107ee0:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c0107ee7	obj/kernel.asm	/^c0107ee7:	eb 17                	jmp    c0107f00 <find_vma+0x90>$/;"	l
c0107ee9	obj/kernel.asm	/^c0107ee9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107eec	obj/kernel.asm	/^c0107eec:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107eef	obj/kernel.asm	/^c0107eef:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107ef2	obj/kernel.asm	/^c0107ef2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107ef5	obj/kernel.asm	/^c0107ef5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107ef8	obj/kernel.asm	/^c0107ef8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107efb	obj/kernel.asm	/^c0107efb:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107efe	obj/kernel.asm	/^c0107efe:	75 c1                	jne    c0107ec1 <find_vma+0x51>$/;"	l
c0107f00	obj/kernel.asm	/^c0107f00:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c0107f04	obj/kernel.asm	/^c0107f04:	75 07                	jne    c0107f0d <find_vma+0x9d>$/;"	l
c0107f06	obj/kernel.asm	/^c0107f06:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0107f0d	obj/kernel.asm	/^c0107f0d:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0107f11	obj/kernel.asm	/^c0107f11:	74 09                	je     c0107f1c <find_vma+0xac>$/;"	l
c0107f13	obj/kernel.asm	/^c0107f13:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f16	obj/kernel.asm	/^c0107f16:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107f19	obj/kernel.asm	/^c0107f19:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107f1c	obj/kernel.asm	/^c0107f1c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107f1f	obj/kernel.asm	/^c0107f1f:	c9                   	leave  $/;"	l
c0107f20	obj/kernel.asm	/^c0107f20:	c3                   	ret    $/;"	l
c0107f21	obj/kernel.asm	/^c0107f21 <check_vma_overlap>:$/;"	l
c0107f21	obj/kernel.asm	/^c0107f21:	55                   	push   %ebp$/;"	l
c0107f22	obj/kernel.asm	/^c0107f22:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f24	obj/kernel.asm	/^c0107f24:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107f27	obj/kernel.asm	/^c0107f27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f2a	obj/kernel.asm	/^c0107f2a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107f2d	obj/kernel.asm	/^c0107f2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f30	obj/kernel.asm	/^c0107f30:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f33	obj/kernel.asm	/^c0107f33:	39 c2                	cmp    %eax,%edx$/;"	l
c0107f35	obj/kernel.asm	/^c0107f35:	72 24                	jb     c0107f5b <check_vma_overlap+0x3a>$/;"	l
c0107f37	obj/kernel.asm	/^c0107f37:	c7 44 24 0c ad d6 10 	movl   $0xc010d6ad,0xc(%esp)$/;"	l
c0107f3e	obj/kernel.asm	/^c0107f3e:	c0 $/;"	l
c0107f3f	obj/kernel.asm	/^c0107f3f:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0107f46	obj/kernel.asm	/^c0107f46:	c0 $/;"	l
c0107f47	obj/kernel.asm	/^c0107f47:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c0107f4e	obj/kernel.asm	/^c0107f4e:	00 $/;"	l
c0107f4f	obj/kernel.asm	/^c0107f4f:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0107f56	obj/kernel.asm	/^c0107f56:	e8 7a 8e ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107f5b	obj/kernel.asm	/^c0107f5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f5e	obj/kernel.asm	/^c0107f5e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107f61	obj/kernel.asm	/^c0107f61:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107f64	obj/kernel.asm	/^c0107f64:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107f67	obj/kernel.asm	/^c0107f67:	39 c2                	cmp    %eax,%edx$/;"	l
c0107f69	obj/kernel.asm	/^c0107f69:	76 24                	jbe    c0107f8f <check_vma_overlap+0x6e>$/;"	l
c0107f6b	obj/kernel.asm	/^c0107f6b:	c7 44 24 0c f0 d6 10 	movl   $0xc010d6f0,0xc(%esp)$/;"	l
c0107f72	obj/kernel.asm	/^c0107f72:	c0 $/;"	l
c0107f73	obj/kernel.asm	/^c0107f73:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0107f7a	obj/kernel.asm	/^c0107f7a:	c0 $/;"	l
c0107f7b	obj/kernel.asm	/^c0107f7b:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)$/;"	l
c0107f82	obj/kernel.asm	/^c0107f82:	00 $/;"	l
c0107f83	obj/kernel.asm	/^c0107f83:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0107f8a	obj/kernel.asm	/^c0107f8a:	e8 46 8e ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107f8f	obj/kernel.asm	/^c0107f8f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107f92	obj/kernel.asm	/^c0107f92:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107f95	obj/kernel.asm	/^c0107f95:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107f98	obj/kernel.asm	/^c0107f98:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f9b	obj/kernel.asm	/^c0107f9b:	39 c2                	cmp    %eax,%edx$/;"	l
c0107f9d	obj/kernel.asm	/^c0107f9d:	72 24                	jb     c0107fc3 <check_vma_overlap+0xa2>$/;"	l
c0107f9f	obj/kernel.asm	/^c0107f9f:	c7 44 24 0c 0f d7 10 	movl   $0xc010d70f,0xc(%esp)$/;"	l
c0107fa6	obj/kernel.asm	/^c0107fa6:	c0 $/;"	l
c0107fa7	obj/kernel.asm	/^c0107fa7:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0107fae	obj/kernel.asm	/^c0107fae:	c0 $/;"	l
c0107faf	obj/kernel.asm	/^c0107faf:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c0107fb6	obj/kernel.asm	/^c0107fb6:	00 $/;"	l
c0107fb7	obj/kernel.asm	/^c0107fb7:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0107fbe	obj/kernel.asm	/^c0107fbe:	e8 12 8e ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107fc3	obj/kernel.asm	/^c0107fc3:	c9                   	leave  $/;"	l
c0107fc4	obj/kernel.asm	/^c0107fc4:	c3                   	ret    $/;"	l
c0107fc5	obj/kernel.asm	/^c0107fc5 <insert_vma_struct>:$/;"	l
c0107fc5	obj/kernel.asm	/^c0107fc5:	55                   	push   %ebp$/;"	l
c0107fc6	obj/kernel.asm	/^c0107fc6:	89 e5                	mov    %esp,%ebp$/;"	l
c0107fc8	obj/kernel.asm	/^c0107fc8:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0107fcb	obj/kernel.asm	/^c0107fcb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107fce	obj/kernel.asm	/^c0107fce:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107fd1	obj/kernel.asm	/^c0107fd1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107fd4	obj/kernel.asm	/^c0107fd4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107fd7	obj/kernel.asm	/^c0107fd7:	39 c2                	cmp    %eax,%edx$/;"	l
c0107fd9	obj/kernel.asm	/^c0107fd9:	72 24                	jb     c0107fff <insert_vma_struct+0x3a>$/;"	l
c0107fdb	obj/kernel.asm	/^c0107fdb:	c7 44 24 0c 2d d7 10 	movl   $0xc010d72d,0xc(%esp)$/;"	l
c0107fe2	obj/kernel.asm	/^c0107fe2:	c0 $/;"	l
c0107fe3	obj/kernel.asm	/^c0107fe3:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0107fea	obj/kernel.asm	/^c0107fea:	c0 $/;"	l
c0107feb	obj/kernel.asm	/^c0107feb:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
c0107ff2	obj/kernel.asm	/^c0107ff2:	00 $/;"	l
c0107ff3	obj/kernel.asm	/^c0107ff3:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0107ffa	obj/kernel.asm	/^c0107ffa:	e8 d6 8d ff ff       	call   c0100dd5 <__panic>$/;"	l
c0107fff	obj/kernel.asm	/^c0107fff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108002	obj/kernel.asm	/^c0108002:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108005	obj/kernel.asm	/^c0108005:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108008	obj/kernel.asm	/^c0108008:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010800b	obj/kernel.asm	/^c010800b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010800e	obj/kernel.asm	/^c010800e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108011	obj/kernel.asm	/^c0108011:	eb 21                	jmp    c0108034 <insert_vma_struct+0x6f>$/;"	l
c0108013	obj/kernel.asm	/^c0108013:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108016	obj/kernel.asm	/^c0108016:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108019	obj/kernel.asm	/^c0108019:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010801c	obj/kernel.asm	/^c010801c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010801f	obj/kernel.asm	/^c010801f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108022	obj/kernel.asm	/^c0108022:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108025	obj/kernel.asm	/^c0108025:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108028	obj/kernel.asm	/^c0108028:	39 c2                	cmp    %eax,%edx$/;"	l
c010802a	obj/kernel.asm	/^c010802a:	76 02                	jbe    c010802e <insert_vma_struct+0x69>$/;"	l
c010802c	obj/kernel.asm	/^c010802c:	eb 1d                	jmp    c010804b <insert_vma_struct+0x86>$/;"	l
c010802e	obj/kernel.asm	/^c010802e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108031	obj/kernel.asm	/^c0108031:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108034	obj/kernel.asm	/^c0108034:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108037	obj/kernel.asm	/^c0108037:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010803a	obj/kernel.asm	/^c010803a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010803d	obj/kernel.asm	/^c010803d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108040	obj/kernel.asm	/^c0108040:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108043	obj/kernel.asm	/^c0108043:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108046	obj/kernel.asm	/^c0108046:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108049	obj/kernel.asm	/^c0108049:	75 c8                	jne    c0108013 <insert_vma_struct+0x4e>$/;"	l
c010804b	obj/kernel.asm	/^c010804b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010804e	obj/kernel.asm	/^c010804e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108051	obj/kernel.asm	/^c0108051:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108054	obj/kernel.asm	/^c0108054:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108057	obj/kernel.asm	/^c0108057:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010805a	obj/kernel.asm	/^c010805a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010805d	obj/kernel.asm	/^c010805d:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108060	obj/kernel.asm	/^c0108060:	74 15                	je     c0108077 <insert_vma_struct+0xb2>$/;"	l
c0108062	obj/kernel.asm	/^c0108062:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108065	obj/kernel.asm	/^c0108065:	8d 50 f0             	lea    -0x10(%eax),%edx$/;"	l
c0108068	obj/kernel.asm	/^c0108068:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010806b	obj/kernel.asm	/^c010806b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010806f	obj/kernel.asm	/^c010806f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0108072	obj/kernel.asm	/^c0108072:	e8 aa fe ff ff       	call   c0107f21 <check_vma_overlap>$/;"	l
c0108077	obj/kernel.asm	/^c0108077:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010807a	obj/kernel.asm	/^c010807a:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010807d	obj/kernel.asm	/^c010807d:	74 15                	je     c0108094 <insert_vma_struct+0xcf>$/;"	l
c010807f	obj/kernel.asm	/^c010807f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108082	obj/kernel.asm	/^c0108082:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108085	obj/kernel.asm	/^c0108085:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108089	obj/kernel.asm	/^c0108089:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010808c	obj/kernel.asm	/^c010808c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010808f	obj/kernel.asm	/^c010808f:	e8 8d fe ff ff       	call   c0107f21 <check_vma_overlap>$/;"	l
c0108094	obj/kernel.asm	/^c0108094:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108097	obj/kernel.asm	/^c0108097:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010809a	obj/kernel.asm	/^c010809a:	89 10                	mov    %edx,(%eax)$/;"	l
c010809c	obj/kernel.asm	/^c010809c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010809f	obj/kernel.asm	/^c010809f:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c01080a2	obj/kernel.asm	/^c01080a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01080a5	obj/kernel.asm	/^c01080a5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01080a8	obj/kernel.asm	/^c01080a8:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01080ab	obj/kernel.asm	/^c01080ab:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01080ae	obj/kernel.asm	/^c01080ae:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01080b1	obj/kernel.asm	/^c01080b1:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01080b4	obj/kernel.asm	/^c01080b4:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c01080b7	obj/kernel.asm	/^c01080b7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01080ba	obj/kernel.asm	/^c01080ba:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c01080bd	obj/kernel.asm	/^c01080bd:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01080c0	obj/kernel.asm	/^c01080c0:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01080c3	obj/kernel.asm	/^c01080c3:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01080c6	obj/kernel.asm	/^c01080c6:	89 10                	mov    %edx,(%eax)$/;"	l
c01080c8	obj/kernel.asm	/^c01080c8:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01080cb	obj/kernel.asm	/^c01080cb:	8b 10                	mov    (%eax),%edx$/;"	l
c01080cd	obj/kernel.asm	/^c01080cd:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01080d0	obj/kernel.asm	/^c01080d0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01080d3	obj/kernel.asm	/^c01080d3:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01080d6	obj/kernel.asm	/^c01080d6:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01080d9	obj/kernel.asm	/^c01080d9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01080dc	obj/kernel.asm	/^c01080dc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01080df	obj/kernel.asm	/^c01080df:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01080e2	obj/kernel.asm	/^c01080e2:	89 10                	mov    %edx,(%eax)$/;"	l
c01080e4	obj/kernel.asm	/^c01080e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01080e7	obj/kernel.asm	/^c01080e7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01080ea	obj/kernel.asm	/^c01080ea:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01080ed	obj/kernel.asm	/^c01080ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01080f0	obj/kernel.asm	/^c01080f0:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01080f3	obj/kernel.asm	/^c01080f3:	c9                   	leave  $/;"	l
c01080f4	obj/kernel.asm	/^c01080f4:	c3                   	ret    $/;"	l
c01080f5	obj/kernel.asm	/^c01080f5 <mm_destroy>:$/;"	l
c01080f5	obj/kernel.asm	/^c01080f5:	55                   	push   %ebp$/;"	l
c01080f6	obj/kernel.asm	/^c01080f6:	89 e5                	mov    %esp,%ebp$/;"	l
c01080f8	obj/kernel.asm	/^c01080f8:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01080fb	obj/kernel.asm	/^c01080fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01080fe	obj/kernel.asm	/^c01080fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108101	obj/kernel.asm	/^c0108101:	e8 38 fc ff ff       	call   c0107d3e <mm_count>$/;"	l
c0108106	obj/kernel.asm	/^c0108106:	85 c0                	test   %eax,%eax$/;"	l
c0108108	obj/kernel.asm	/^c0108108:	74 24                	je     c010812e <mm_destroy+0x39>$/;"	l
c010810a	obj/kernel.asm	/^c010810a:	c7 44 24 0c 49 d7 10 	movl   $0xc010d749,0xc(%esp)$/;"	l
c0108111	obj/kernel.asm	/^c0108111:	c0 $/;"	l
c0108112	obj/kernel.asm	/^c0108112:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108119	obj/kernel.asm	/^c0108119:	c0 $/;"	l
c010811a	obj/kernel.asm	/^c010811a:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c0108121	obj/kernel.asm	/^c0108121:	00 $/;"	l
c0108122	obj/kernel.asm	/^c0108122:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108129	obj/kernel.asm	/^c0108129:	e8 a7 8c ff ff       	call   c0100dd5 <__panic>$/;"	l
c010812e	obj/kernel.asm	/^c010812e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108131	obj/kernel.asm	/^c0108131:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108134	obj/kernel.asm	/^c0108134:	eb 36                	jmp    c010816c <mm_destroy+0x77>$/;"	l
c0108136	obj/kernel.asm	/^c0108136:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108139	obj/kernel.asm	/^c0108139:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010813c	obj/kernel.asm	/^c010813c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010813f	obj/kernel.asm	/^c010813f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108142	obj/kernel.asm	/^c0108142:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108145	obj/kernel.asm	/^c0108145:	8b 12                	mov    (%edx),%edx$/;"	l
c0108147	obj/kernel.asm	/^c0108147:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010814a	obj/kernel.asm	/^c010814a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010814d	obj/kernel.asm	/^c010814d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108150	obj/kernel.asm	/^c0108150:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108153	obj/kernel.asm	/^c0108153:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108156	obj/kernel.asm	/^c0108156:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108159	obj/kernel.asm	/^c0108159:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010815c	obj/kernel.asm	/^c010815c:	89 10                	mov    %edx,(%eax)$/;"	l
c010815e	obj/kernel.asm	/^c010815e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108161	obj/kernel.asm	/^c0108161:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108164	obj/kernel.asm	/^c0108164:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108167	obj/kernel.asm	/^c0108167:	e8 83 ca ff ff       	call   c0104bef <kfree>$/;"	l
c010816c	obj/kernel.asm	/^c010816c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010816f	obj/kernel.asm	/^c010816f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108172	obj/kernel.asm	/^c0108172:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108175	obj/kernel.asm	/^c0108175:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108178	obj/kernel.asm	/^c0108178:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010817b	obj/kernel.asm	/^c010817b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010817e	obj/kernel.asm	/^c010817e:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108181	obj/kernel.asm	/^c0108181:	75 b3                	jne    c0108136 <mm_destroy+0x41>$/;"	l
c0108183	obj/kernel.asm	/^c0108183:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108186	obj/kernel.asm	/^c0108186:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108189	obj/kernel.asm	/^c0108189:	e8 61 ca ff ff       	call   c0104bef <kfree>$/;"	l
c010818e	obj/kernel.asm	/^c010818e:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c0108195	obj/kernel.asm	/^c0108195:	c9                   	leave  $/;"	l
c0108196	obj/kernel.asm	/^c0108196:	c3                   	ret    $/;"	l
c0108197	obj/kernel.asm	/^c0108197 <mm_map>:$/;"	l
c0108197	obj/kernel.asm	/^c0108197:	55                   	push   %ebp$/;"	l
c0108198	obj/kernel.asm	/^c0108198:	89 e5                	mov    %esp,%ebp$/;"	l
c010819a	obj/kernel.asm	/^c010819a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010819d	obj/kernel.asm	/^c010819d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01081a0	obj/kernel.asm	/^c01081a0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01081a3	obj/kernel.asm	/^c01081a3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081a6	obj/kernel.asm	/^c01081a6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01081ab	obj/kernel.asm	/^c01081ab:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01081ae	obj/kernel.asm	/^c01081ae:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c01081b5	obj/kernel.asm	/^c01081b5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01081b8	obj/kernel.asm	/^c01081b8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01081bb	obj/kernel.asm	/^c01081bb:	01 c2                	add    %eax,%edx$/;"	l
c01081bd	obj/kernel.asm	/^c01081bd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01081c0	obj/kernel.asm	/^c01081c0:	01 d0                	add    %edx,%eax$/;"	l
c01081c2	obj/kernel.asm	/^c01081c2:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01081c5	obj/kernel.asm	/^c01081c5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01081c8	obj/kernel.asm	/^c01081c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01081cb	obj/kernel.asm	/^c01081cb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01081d0	obj/kernel.asm	/^c01081d0:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c01081d3	obj/kernel.asm	/^c01081d3:	89 d0                	mov    %edx,%eax$/;"	l
c01081d5	obj/kernel.asm	/^c01081d5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01081d8	obj/kernel.asm	/^c01081d8:	29 c2                	sub    %eax,%edx$/;"	l
c01081da	obj/kernel.asm	/^c01081da:	89 d0                	mov    %edx,%eax$/;"	l
c01081dc	obj/kernel.asm	/^c01081dc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01081df	obj/kernel.asm	/^c01081df:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c01081e6	obj/kernel.asm	/^c01081e6:	76 11                	jbe    c01081f9 <mm_map+0x62>$/;"	l
c01081e8	obj/kernel.asm	/^c01081e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01081eb	obj/kernel.asm	/^c01081eb:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01081ee	obj/kernel.asm	/^c01081ee:	73 09                	jae    c01081f9 <mm_map+0x62>$/;"	l
c01081f0	obj/kernel.asm	/^c01081f0:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c01081f7	obj/kernel.asm	/^c01081f7:	76 0a                	jbe    c0108203 <mm_map+0x6c>$/;"	l
c01081f9	obj/kernel.asm	/^c01081f9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01081fe	obj/kernel.asm	/^c01081fe:	e9 ae 00 00 00       	jmp    c01082b1 <mm_map+0x11a>$/;"	l
c0108203	obj/kernel.asm	/^c0108203:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108207	obj/kernel.asm	/^c0108207:	75 24                	jne    c010822d <mm_map+0x96>$/;"	l
c0108209	obj/kernel.asm	/^c0108209:	c7 44 24 0c 5b d7 10 	movl   $0xc010d75b,0xc(%esp)$/;"	l
c0108210	obj/kernel.asm	/^c0108210:	c0 $/;"	l
c0108211	obj/kernel.asm	/^c0108211:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108218	obj/kernel.asm	/^c0108218:	c0 $/;"	l
c0108219	obj/kernel.asm	/^c0108219:	c7 44 24 04 a7 00 00 	movl   $0xa7,0x4(%esp)$/;"	l
c0108220	obj/kernel.asm	/^c0108220:	00 $/;"	l
c0108221	obj/kernel.asm	/^c0108221:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108228	obj/kernel.asm	/^c0108228:	e8 a8 8b ff ff       	call   c0100dd5 <__panic>$/;"	l
c010822d	obj/kernel.asm	/^c010822d:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0108234	obj/kernel.asm	/^c0108234:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108237	obj/kernel.asm	/^c0108237:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010823b	obj/kernel.asm	/^c010823b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010823e	obj/kernel.asm	/^c010823e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108241	obj/kernel.asm	/^c0108241:	e8 2a fc ff ff       	call   c0107e70 <find_vma>$/;"	l
c0108246	obj/kernel.asm	/^c0108246:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108249	obj/kernel.asm	/^c0108249:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010824d	obj/kernel.asm	/^c010824d:	74 0d                	je     c010825c <mm_map+0xc5>$/;"	l
c010824f	obj/kernel.asm	/^c010824f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108252	obj/kernel.asm	/^c0108252:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108255	obj/kernel.asm	/^c0108255:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108258	obj/kernel.asm	/^c0108258:	73 02                	jae    c010825c <mm_map+0xc5>$/;"	l
c010825a	obj/kernel.asm	/^c010825a:	eb 52                	jmp    c01082ae <mm_map+0x117>$/;"	l
c010825c	obj/kernel.asm	/^c010825c:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0108263	obj/kernel.asm	/^c0108263:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0108266	obj/kernel.asm	/^c0108266:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010826a	obj/kernel.asm	/^c010826a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010826d	obj/kernel.asm	/^c010826d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108271	obj/kernel.asm	/^c0108271:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108274	obj/kernel.asm	/^c0108274:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108277	obj/kernel.asm	/^c0108277:	e8 b9 fb ff ff       	call   c0107e35 <vma_create>$/;"	l
c010827c	obj/kernel.asm	/^c010827c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010827f	obj/kernel.asm	/^c010827f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0108283	obj/kernel.asm	/^c0108283:	75 02                	jne    c0108287 <mm_map+0xf0>$/;"	l
c0108285	obj/kernel.asm	/^c0108285:	eb 27                	jmp    c01082ae <mm_map+0x117>$/;"	l
c0108287	obj/kernel.asm	/^c0108287:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010828a	obj/kernel.asm	/^c010828a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010828e	obj/kernel.asm	/^c010828e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108291	obj/kernel.asm	/^c0108291:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108294	obj/kernel.asm	/^c0108294:	e8 2c fd ff ff       	call   c0107fc5 <insert_vma_struct>$/;"	l
c0108299	obj/kernel.asm	/^c0108299:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010829d	obj/kernel.asm	/^c010829d:	74 08                	je     c01082a7 <mm_map+0x110>$/;"	l
c010829f	obj/kernel.asm	/^c010829f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01082a2	obj/kernel.asm	/^c01082a2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01082a5	obj/kernel.asm	/^c01082a5:	89 10                	mov    %edx,(%eax)$/;"	l
c01082a7	obj/kernel.asm	/^c01082a7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01082ae	obj/kernel.asm	/^c01082ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01082b1	obj/kernel.asm	/^c01082b1:	c9                   	leave  $/;"	l
c01082b2	obj/kernel.asm	/^c01082b2:	c3                   	ret    $/;"	l
c01082b3	obj/kernel.asm	/^c01082b3 <dup_mmap>:$/;"	l
c01082b3	obj/kernel.asm	/^c01082b3:	55                   	push   %ebp$/;"	l
c01082b4	obj/kernel.asm	/^c01082b4:	89 e5                	mov    %esp,%ebp$/;"	l
c01082b6	obj/kernel.asm	/^c01082b6:	56                   	push   %esi$/;"	l
c01082b7	obj/kernel.asm	/^c01082b7:	53                   	push   %ebx$/;"	l
c01082b8	obj/kernel.asm	/^c01082b8:	83 ec 40             	sub    $0x40,%esp$/;"	l
c01082bb	obj/kernel.asm	/^c01082bb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01082bf	obj/kernel.asm	/^c01082bf:	74 06                	je     c01082c7 <dup_mmap+0x14>$/;"	l
c01082c1	obj/kernel.asm	/^c01082c1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01082c5	obj/kernel.asm	/^c01082c5:	75 24                	jne    c01082eb <dup_mmap+0x38>$/;"	l
c01082c7	obj/kernel.asm	/^c01082c7:	c7 44 24 0c 66 d7 10 	movl   $0xc010d766,0xc(%esp)$/;"	l
c01082ce	obj/kernel.asm	/^c01082ce:	c0 $/;"	l
c01082cf	obj/kernel.asm	/^c01082cf:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c01082d6	obj/kernel.asm	/^c01082d6:	c0 $/;"	l
c01082d7	obj/kernel.asm	/^c01082d7:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c01082de	obj/kernel.asm	/^c01082de:	00 $/;"	l
c01082df	obj/kernel.asm	/^c01082df:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c01082e6	obj/kernel.asm	/^c01082e6:	e8 ea 8a ff ff       	call   c0100dd5 <__panic>$/;"	l
c01082eb	obj/kernel.asm	/^c01082eb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01082ee	obj/kernel.asm	/^c01082ee:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01082f1	obj/kernel.asm	/^c01082f1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01082f4	obj/kernel.asm	/^c01082f4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01082f7	obj/kernel.asm	/^c01082f7:	e9 92 00 00 00       	jmp    c010838e <dup_mmap+0xdb>$/;"	l
c01082fc	obj/kernel.asm	/^c01082fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01082ff	obj/kernel.asm	/^c01082ff:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108302	obj/kernel.asm	/^c0108302:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108305	obj/kernel.asm	/^c0108305:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108308	obj/kernel.asm	/^c0108308:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010830b	obj/kernel.asm	/^c010830b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010830e	obj/kernel.asm	/^c010830e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108311	obj/kernel.asm	/^c0108311:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108314	obj/kernel.asm	/^c0108314:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108317	obj/kernel.asm	/^c0108317:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c010831b	obj/kernel.asm	/^c010831b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010831f	obj/kernel.asm	/^c010831f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108322	obj/kernel.asm	/^c0108322:	e8 0e fb ff ff       	call   c0107e35 <vma_create>$/;"	l
c0108327	obj/kernel.asm	/^c0108327:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010832a	obj/kernel.asm	/^c010832a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010832e	obj/kernel.asm	/^c010832e:	75 07                	jne    c0108337 <dup_mmap+0x84>$/;"	l
c0108330	obj/kernel.asm	/^c0108330:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0108335	obj/kernel.asm	/^c0108335:	eb 76                	jmp    c01083ad <dup_mmap+0xfa>$/;"	l
c0108337	obj/kernel.asm	/^c0108337:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010833a	obj/kernel.asm	/^c010833a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010833e	obj/kernel.asm	/^c010833e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108341	obj/kernel.asm	/^c0108341:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108344	obj/kernel.asm	/^c0108344:	e8 7c fc ff ff       	call   c0107fc5 <insert_vma_struct>$/;"	l
c0108349	obj/kernel.asm	/^c0108349:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0108350	obj/kernel.asm	/^c0108350:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108353	obj/kernel.asm	/^c0108353:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0108356	obj/kernel.asm	/^c0108356:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108359	obj/kernel.asm	/^c0108359:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c010835c	obj/kernel.asm	/^c010835c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010835f	obj/kernel.asm	/^c010835f:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0108362	obj/kernel.asm	/^c0108362:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108365	obj/kernel.asm	/^c0108365:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108368	obj/kernel.asm	/^c0108368:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
c010836b	obj/kernel.asm	/^c010836b:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c010836f	obj/kernel.asm	/^c010836f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0108373	obj/kernel.asm	/^c0108373:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0108377	obj/kernel.asm	/^c0108377:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010837b	obj/kernel.asm	/^c010837b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010837e	obj/kernel.asm	/^c010837e:	e8 1a d8 ff ff       	call   c0105b9d <copy_range>$/;"	l
c0108383	obj/kernel.asm	/^c0108383:	85 c0                	test   %eax,%eax$/;"	l
c0108385	obj/kernel.asm	/^c0108385:	74 07                	je     c010838e <dup_mmap+0xdb>$/;"	l
c0108387	obj/kernel.asm	/^c0108387:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010838c	obj/kernel.asm	/^c010838c:	eb 1f                	jmp    c01083ad <dup_mmap+0xfa>$/;"	l
c010838e	obj/kernel.asm	/^c010838e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108391	obj/kernel.asm	/^c0108391:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108394	obj/kernel.asm	/^c0108394:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108397	obj/kernel.asm	/^c0108397:	8b 00                	mov    (%eax),%eax$/;"	l
c0108399	obj/kernel.asm	/^c0108399:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010839c	obj/kernel.asm	/^c010839c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010839f	obj/kernel.asm	/^c010839f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01083a2	obj/kernel.asm	/^c01083a2:	0f 85 54 ff ff ff    	jne    c01082fc <dup_mmap+0x49>$/;"	l
c01083a8	obj/kernel.asm	/^c01083a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01083ad	obj/kernel.asm	/^c01083ad:	83 c4 40             	add    $0x40,%esp$/;"	l
c01083b0	obj/kernel.asm	/^c01083b0:	5b                   	pop    %ebx$/;"	l
c01083b1	obj/kernel.asm	/^c01083b1:	5e                   	pop    %esi$/;"	l
c01083b2	obj/kernel.asm	/^c01083b2:	5d                   	pop    %ebp$/;"	l
c01083b3	obj/kernel.asm	/^c01083b3:	c3                   	ret    $/;"	l
c01083b4	obj/kernel.asm	/^c01083b4 <exit_mmap>:$/;"	l
c01083b4	obj/kernel.asm	/^c01083b4:	55                   	push   %ebp$/;"	l
c01083b5	obj/kernel.asm	/^c01083b5:	89 e5                	mov    %esp,%ebp$/;"	l
c01083b7	obj/kernel.asm	/^c01083b7:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01083ba	obj/kernel.asm	/^c01083ba:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01083be	obj/kernel.asm	/^c01083be:	74 0f                	je     c01083cf <exit_mmap+0x1b>$/;"	l
c01083c0	obj/kernel.asm	/^c01083c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01083c3	obj/kernel.asm	/^c01083c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01083c6	obj/kernel.asm	/^c01083c6:	e8 73 f9 ff ff       	call   c0107d3e <mm_count>$/;"	l
c01083cb	obj/kernel.asm	/^c01083cb:	85 c0                	test   %eax,%eax$/;"	l
c01083cd	obj/kernel.asm	/^c01083cd:	74 24                	je     c01083f3 <exit_mmap+0x3f>$/;"	l
c01083cf	obj/kernel.asm	/^c01083cf:	c7 44 24 0c 84 d7 10 	movl   $0xc010d784,0xc(%esp)$/;"	l
c01083d6	obj/kernel.asm	/^c01083d6:	c0 $/;"	l
c01083d7	obj/kernel.asm	/^c01083d7:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c01083de	obj/kernel.asm	/^c01083de:	c0 $/;"	l
c01083df	obj/kernel.asm	/^c01083df:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c01083e6	obj/kernel.asm	/^c01083e6:	00 $/;"	l
c01083e7	obj/kernel.asm	/^c01083e7:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c01083ee	obj/kernel.asm	/^c01083ee:	e8 e2 89 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01083f3	obj/kernel.asm	/^c01083f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01083f6	obj/kernel.asm	/^c01083f6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01083f9	obj/kernel.asm	/^c01083f9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01083fc	obj/kernel.asm	/^c01083fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01083ff	obj/kernel.asm	/^c01083ff:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108402	obj/kernel.asm	/^c0108402:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108405	obj/kernel.asm	/^c0108405:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108408	obj/kernel.asm	/^c0108408:	eb 28                	jmp    c0108432 <exit_mmap+0x7e>$/;"	l
c010840a	obj/kernel.asm	/^c010840a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010840d	obj/kernel.asm	/^c010840d:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108410	obj/kernel.asm	/^c0108410:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108413	obj/kernel.asm	/^c0108413:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108416	obj/kernel.asm	/^c0108416:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108419	obj/kernel.asm	/^c0108419:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010841c	obj/kernel.asm	/^c010841c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010841f	obj/kernel.asm	/^c010841f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108423	obj/kernel.asm	/^c0108423:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108427	obj/kernel.asm	/^c0108427:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010842a	obj/kernel.asm	/^c010842a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010842d	obj/kernel.asm	/^c010842d:	e8 70 d5 ff ff       	call   c01059a2 <unmap_range>$/;"	l
c0108432	obj/kernel.asm	/^c0108432:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108435	obj/kernel.asm	/^c0108435:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108438	obj/kernel.asm	/^c0108438:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010843b	obj/kernel.asm	/^c010843b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010843e	obj/kernel.asm	/^c010843e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108441	obj/kernel.asm	/^c0108441:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108444	obj/kernel.asm	/^c0108444:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108447	obj/kernel.asm	/^c0108447:	75 c1                	jne    c010840a <exit_mmap+0x56>$/;"	l
c0108449	obj/kernel.asm	/^c0108449:	eb 28                	jmp    c0108473 <exit_mmap+0xbf>$/;"	l
c010844b	obj/kernel.asm	/^c010844b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010844e	obj/kernel.asm	/^c010844e:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108451	obj/kernel.asm	/^c0108451:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108454	obj/kernel.asm	/^c0108454:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108457	obj/kernel.asm	/^c0108457:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010845a	obj/kernel.asm	/^c010845a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010845d	obj/kernel.asm	/^c010845d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108460	obj/kernel.asm	/^c0108460:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108464	obj/kernel.asm	/^c0108464:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108468	obj/kernel.asm	/^c0108468:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010846b	obj/kernel.asm	/^c010846b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010846e	obj/kernel.asm	/^c010846e:	e8 23 d6 ff ff       	call   c0105a96 <exit_range>$/;"	l
c0108473	obj/kernel.asm	/^c0108473:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108476	obj/kernel.asm	/^c0108476:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108479	obj/kernel.asm	/^c0108479:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010847c	obj/kernel.asm	/^c010847c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010847f	obj/kernel.asm	/^c010847f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108482	obj/kernel.asm	/^c0108482:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108485	obj/kernel.asm	/^c0108485:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108488	obj/kernel.asm	/^c0108488:	75 c1                	jne    c010844b <exit_mmap+0x97>$/;"	l
c010848a	obj/kernel.asm	/^c010848a:	c9                   	leave  $/;"	l
c010848b	obj/kernel.asm	/^c010848b:	c3                   	ret    $/;"	l
c010848c	obj/kernel.asm	/^c010848c <copy_from_user>:$/;"	l
c010848c	obj/kernel.asm	/^c010848c:	55                   	push   %ebp$/;"	l
c010848d	obj/kernel.asm	/^c010848d:	89 e5                	mov    %esp,%ebp$/;"	l
c010848f	obj/kernel.asm	/^c010848f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108492	obj/kernel.asm	/^c0108492:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108495	obj/kernel.asm	/^c0108495:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0108498	obj/kernel.asm	/^c0108498:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010849c	obj/kernel.asm	/^c010849c:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010849f	obj/kernel.asm	/^c010849f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01084a3	obj/kernel.asm	/^c01084a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01084a7	obj/kernel.asm	/^c01084a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01084aa	obj/kernel.asm	/^c01084aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01084ad	obj/kernel.asm	/^c01084ad:	e8 57 09 00 00       	call   c0108e09 <user_mem_check>$/;"	l
c01084b2	obj/kernel.asm	/^c01084b2:	85 c0                	test   %eax,%eax$/;"	l
c01084b4	obj/kernel.asm	/^c01084b4:	75 07                	jne    c01084bd <copy_from_user+0x31>$/;"	l
c01084b6	obj/kernel.asm	/^c01084b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01084bb	obj/kernel.asm	/^c01084bb:	eb 1e                	jmp    c01084db <copy_from_user+0x4f>$/;"	l
c01084bd	obj/kernel.asm	/^c01084bd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01084c0	obj/kernel.asm	/^c01084c0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01084c4	obj/kernel.asm	/^c01084c4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01084c7	obj/kernel.asm	/^c01084c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01084cb	obj/kernel.asm	/^c01084cb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01084ce	obj/kernel.asm	/^c01084ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01084d1	obj/kernel.asm	/^c01084d1:	e8 d7 36 00 00       	call   c010bbad <memcpy>$/;"	l
c01084d6	obj/kernel.asm	/^c01084d6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01084db	obj/kernel.asm	/^c01084db:	c9                   	leave  $/;"	l
c01084dc	obj/kernel.asm	/^c01084dc:	c3                   	ret    $/;"	l
c01084dd	obj/kernel.asm	/^c01084dd <copy_to_user>:$/;"	l
c01084dd	obj/kernel.asm	/^c01084dd:	55                   	push   %ebp$/;"	l
c01084de	obj/kernel.asm	/^c01084de:	89 e5                	mov    %esp,%ebp$/;"	l
c01084e0	obj/kernel.asm	/^c01084e0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01084e3	obj/kernel.asm	/^c01084e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01084e6	obj/kernel.asm	/^c01084e6:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c01084ed	obj/kernel.asm	/^c01084ed:	00 $/;"	l
c01084ee	obj/kernel.asm	/^c01084ee:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01084f1	obj/kernel.asm	/^c01084f1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01084f5	obj/kernel.asm	/^c01084f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01084f9	obj/kernel.asm	/^c01084f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01084fc	obj/kernel.asm	/^c01084fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01084ff	obj/kernel.asm	/^c01084ff:	e8 05 09 00 00       	call   c0108e09 <user_mem_check>$/;"	l
c0108504	obj/kernel.asm	/^c0108504:	85 c0                	test   %eax,%eax$/;"	l
c0108506	obj/kernel.asm	/^c0108506:	75 07                	jne    c010850f <copy_to_user+0x32>$/;"	l
c0108508	obj/kernel.asm	/^c0108508:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010850d	obj/kernel.asm	/^c010850d:	eb 1e                	jmp    c010852d <copy_to_user+0x50>$/;"	l
c010850f	obj/kernel.asm	/^c010850f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0108512	obj/kernel.asm	/^c0108512:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108516	obj/kernel.asm	/^c0108516:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108519	obj/kernel.asm	/^c0108519:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010851d	obj/kernel.asm	/^c010851d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108520	obj/kernel.asm	/^c0108520:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108523	obj/kernel.asm	/^c0108523:	e8 85 36 00 00       	call   c010bbad <memcpy>$/;"	l
c0108528	obj/kernel.asm	/^c0108528:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010852d	obj/kernel.asm	/^c010852d:	c9                   	leave  $/;"	l
c010852e	obj/kernel.asm	/^c010852e:	c3                   	ret    $/;"	l
c010852f	obj/kernel.asm	/^c010852f <vmm_init>:$/;"	l
c010852f	obj/kernel.asm	/^c010852f:	55                   	push   %ebp$/;"	l
c0108530	obj/kernel.asm	/^c0108530:	89 e5                	mov    %esp,%ebp$/;"	l
c0108532	obj/kernel.asm	/^c0108532:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108535	obj/kernel.asm	/^c0108535:	e8 02 00 00 00       	call   c010853c <check_vmm>$/;"	l
c010853a	obj/kernel.asm	/^c010853a:	c9                   	leave  $/;"	l
c010853b	obj/kernel.asm	/^c010853b:	c3                   	ret    $/;"	l
c010853c	obj/kernel.asm	/^c010853c <check_vmm>:$/;"	l
c010853c	obj/kernel.asm	/^c010853c:	55                   	push   %ebp$/;"	l
c010853d	obj/kernel.asm	/^c010853d:	89 e5                	mov    %esp,%ebp$/;"	l
c010853f	obj/kernel.asm	/^c010853f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108542	obj/kernel.asm	/^c0108542:	e8 9f cb ff ff       	call   c01050e6 <nr_free_pages>$/;"	l
c0108547	obj/kernel.asm	/^c0108547:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010854a	obj/kernel.asm	/^c010854a:	e8 13 00 00 00       	call   c0108562 <check_vma_struct>$/;"	l
c010854f	obj/kernel.asm	/^c010854f:	e8 a7 04 00 00       	call   c01089fb <check_pgfault>$/;"	l
c0108554	obj/kernel.asm	/^c0108554:	c7 04 24 a4 d7 10 c0 	movl   $0xc010d7a4,(%esp)$/;"	l
c010855b	obj/kernel.asm	/^c010855b:	e8 f3 7d ff ff       	call   c0100353 <cprintf>$/;"	l
c0108560	obj/kernel.asm	/^c0108560:	c9                   	leave  $/;"	l
c0108561	obj/kernel.asm	/^c0108561:	c3                   	ret    $/;"	l
c0108562	obj/kernel.asm	/^c0108562 <check_vma_struct>:$/;"	l
c0108562	obj/kernel.asm	/^c0108562:	55                   	push   %ebp$/;"	l
c0108563	obj/kernel.asm	/^c0108563:	89 e5                	mov    %esp,%ebp$/;"	l
c0108565	obj/kernel.asm	/^c0108565:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0108568	obj/kernel.asm	/^c0108568:	e8 79 cb ff ff       	call   c01050e6 <nr_free_pages>$/;"	l
c010856d	obj/kernel.asm	/^c010856d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108570	obj/kernel.asm	/^c0108570:	e8 27 f8 ff ff       	call   c0107d9c <mm_create>$/;"	l
c0108575	obj/kernel.asm	/^c0108575:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108578	obj/kernel.asm	/^c0108578:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010857c	obj/kernel.asm	/^c010857c:	75 24                	jne    c01085a2 <check_vma_struct+0x40>$/;"	l
c010857e	obj/kernel.asm	/^c010857e:	c7 44 24 0c 5b d7 10 	movl   $0xc010d75b,0xc(%esp)$/;"	l
c0108585	obj/kernel.asm	/^c0108585:	c0 $/;"	l
c0108586	obj/kernel.asm	/^c0108586:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c010858d	obj/kernel.asm	/^c010858d:	c0 $/;"	l
c010858e	obj/kernel.asm	/^c010858e:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
c0108595	obj/kernel.asm	/^c0108595:	00 $/;"	l
c0108596	obj/kernel.asm	/^c0108596:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c010859d	obj/kernel.asm	/^c010859d:	e8 33 88 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01085a2	obj/kernel.asm	/^c01085a2:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c01085a9	obj/kernel.asm	/^c01085a9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01085ac	obj/kernel.asm	/^c01085ac:	89 d0                	mov    %edx,%eax$/;"	l
c01085ae	obj/kernel.asm	/^c01085ae:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01085b1	obj/kernel.asm	/^c01085b1:	01 d0                	add    %edx,%eax$/;"	l
c01085b3	obj/kernel.asm	/^c01085b3:	01 c0                	add    %eax,%eax$/;"	l
c01085b5	obj/kernel.asm	/^c01085b5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01085b8	obj/kernel.asm	/^c01085b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085bb	obj/kernel.asm	/^c01085bb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01085be	obj/kernel.asm	/^c01085be:	eb 70                	jmp    c0108630 <check_vma_struct+0xce>$/;"	l
c01085c0	obj/kernel.asm	/^c01085c0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01085c3	obj/kernel.asm	/^c01085c3:	89 d0                	mov    %edx,%eax$/;"	l
c01085c5	obj/kernel.asm	/^c01085c5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01085c8	obj/kernel.asm	/^c01085c8:	01 d0                	add    %edx,%eax$/;"	l
c01085ca	obj/kernel.asm	/^c01085ca:	83 c0 02             	add    $0x2,%eax$/;"	l
c01085cd	obj/kernel.asm	/^c01085cd:	89 c1                	mov    %eax,%ecx$/;"	l
c01085cf	obj/kernel.asm	/^c01085cf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01085d2	obj/kernel.asm	/^c01085d2:	89 d0                	mov    %edx,%eax$/;"	l
c01085d4	obj/kernel.asm	/^c01085d4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01085d7	obj/kernel.asm	/^c01085d7:	01 d0                	add    %edx,%eax$/;"	l
c01085d9	obj/kernel.asm	/^c01085d9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01085e0	obj/kernel.asm	/^c01085e0:	00 $/;"	l
c01085e1	obj/kernel.asm	/^c01085e1:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01085e5	obj/kernel.asm	/^c01085e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01085e8	obj/kernel.asm	/^c01085e8:	e8 48 f8 ff ff       	call   c0107e35 <vma_create>$/;"	l
c01085ed	obj/kernel.asm	/^c01085ed:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01085f0	obj/kernel.asm	/^c01085f0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01085f4	obj/kernel.asm	/^c01085f4:	75 24                	jne    c010861a <check_vma_struct+0xb8>$/;"	l
c01085f6	obj/kernel.asm	/^c01085f6:	c7 44 24 0c bc d7 10 	movl   $0xc010d7bc,0xc(%esp)$/;"	l
c01085fd	obj/kernel.asm	/^c01085fd:	c0 $/;"	l
c01085fe	obj/kernel.asm	/^c01085fe:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108605	obj/kernel.asm	/^c0108605:	c0 $/;"	l
c0108606	obj/kernel.asm	/^c0108606:	c7 44 24 04 13 01 00 	movl   $0x113,0x4(%esp)$/;"	l
c010860d	obj/kernel.asm	/^c010860d:	00 $/;"	l
c010860e	obj/kernel.asm	/^c010860e:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108615	obj/kernel.asm	/^c0108615:	e8 bb 87 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010861a	obj/kernel.asm	/^c010861a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010861d	obj/kernel.asm	/^c010861d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108621	obj/kernel.asm	/^c0108621:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108624	obj/kernel.asm	/^c0108624:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108627	obj/kernel.asm	/^c0108627:	e8 99 f9 ff ff       	call   c0107fc5 <insert_vma_struct>$/;"	l
c010862c	obj/kernel.asm	/^c010862c:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0108630	obj/kernel.asm	/^c0108630:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108634	obj/kernel.asm	/^c0108634:	7f 8a                	jg     c01085c0 <check_vma_struct+0x5e>$/;"	l
c0108636	obj/kernel.asm	/^c0108636:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108639	obj/kernel.asm	/^c0108639:	83 c0 01             	add    $0x1,%eax$/;"	l
c010863c	obj/kernel.asm	/^c010863c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010863f	obj/kernel.asm	/^c010863f:	eb 70                	jmp    c01086b1 <check_vma_struct+0x14f>$/;"	l
c0108641	obj/kernel.asm	/^c0108641:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108644	obj/kernel.asm	/^c0108644:	89 d0                	mov    %edx,%eax$/;"	l
c0108646	obj/kernel.asm	/^c0108646:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108649	obj/kernel.asm	/^c0108649:	01 d0                	add    %edx,%eax$/;"	l
c010864b	obj/kernel.asm	/^c010864b:	83 c0 02             	add    $0x2,%eax$/;"	l
c010864e	obj/kernel.asm	/^c010864e:	89 c1                	mov    %eax,%ecx$/;"	l
c0108650	obj/kernel.asm	/^c0108650:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108653	obj/kernel.asm	/^c0108653:	89 d0                	mov    %edx,%eax$/;"	l
c0108655	obj/kernel.asm	/^c0108655:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108658	obj/kernel.asm	/^c0108658:	01 d0                	add    %edx,%eax$/;"	l
c010865a	obj/kernel.asm	/^c010865a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0108661	obj/kernel.asm	/^c0108661:	00 $/;"	l
c0108662	obj/kernel.asm	/^c0108662:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0108666	obj/kernel.asm	/^c0108666:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108669	obj/kernel.asm	/^c0108669:	e8 c7 f7 ff ff       	call   c0107e35 <vma_create>$/;"	l
c010866e	obj/kernel.asm	/^c010866e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108671	obj/kernel.asm	/^c0108671:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0108675	obj/kernel.asm	/^c0108675:	75 24                	jne    c010869b <check_vma_struct+0x139>$/;"	l
c0108677	obj/kernel.asm	/^c0108677:	c7 44 24 0c bc d7 10 	movl   $0xc010d7bc,0xc(%esp)$/;"	l
c010867e	obj/kernel.asm	/^c010867e:	c0 $/;"	l
c010867f	obj/kernel.asm	/^c010867f:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108686	obj/kernel.asm	/^c0108686:	c0 $/;"	l
c0108687	obj/kernel.asm	/^c0108687:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
c010868e	obj/kernel.asm	/^c010868e:	00 $/;"	l
c010868f	obj/kernel.asm	/^c010868f:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108696	obj/kernel.asm	/^c0108696:	e8 3a 87 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010869b	obj/kernel.asm	/^c010869b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010869e	obj/kernel.asm	/^c010869e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01086a2	obj/kernel.asm	/^c01086a2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01086a5	obj/kernel.asm	/^c01086a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01086a8	obj/kernel.asm	/^c01086a8:	e8 18 f9 ff ff       	call   c0107fc5 <insert_vma_struct>$/;"	l
c01086ad	obj/kernel.asm	/^c01086ad:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01086b1	obj/kernel.asm	/^c01086b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01086b4	obj/kernel.asm	/^c01086b4:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01086b7	obj/kernel.asm	/^c01086b7:	7e 88                	jle    c0108641 <check_vma_struct+0xdf>$/;"	l
c01086b9	obj/kernel.asm	/^c01086b9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01086bc	obj/kernel.asm	/^c01086bc:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01086bf	obj/kernel.asm	/^c01086bf:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01086c2	obj/kernel.asm	/^c01086c2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01086c5	obj/kernel.asm	/^c01086c5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01086c8	obj/kernel.asm	/^c01086c8:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c01086cf	obj/kernel.asm	/^c01086cf:	e9 97 00 00 00       	jmp    c010876b <check_vma_struct+0x209>$/;"	l
c01086d4	obj/kernel.asm	/^c01086d4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01086d7	obj/kernel.asm	/^c01086d7:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01086da	obj/kernel.asm	/^c01086da:	75 24                	jne    c0108700 <check_vma_struct+0x19e>$/;"	l
c01086dc	obj/kernel.asm	/^c01086dc:	c7 44 24 0c c8 d7 10 	movl   $0xc010d7c8,0xc(%esp)$/;"	l
c01086e3	obj/kernel.asm	/^c01086e3:	c0 $/;"	l
c01086e4	obj/kernel.asm	/^c01086e4:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c01086eb	obj/kernel.asm	/^c01086eb:	c0 $/;"	l
c01086ec	obj/kernel.asm	/^c01086ec:	c7 44 24 04 20 01 00 	movl   $0x120,0x4(%esp)$/;"	l
c01086f3	obj/kernel.asm	/^c01086f3:	00 $/;"	l
c01086f4	obj/kernel.asm	/^c01086f4:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c01086fb	obj/kernel.asm	/^c01086fb:	e8 d5 86 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108700	obj/kernel.asm	/^c0108700:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108703	obj/kernel.asm	/^c0108703:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108706	obj/kernel.asm	/^c0108706:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0108709	obj/kernel.asm	/^c0108709:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010870c	obj/kernel.asm	/^c010870c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c010870f	obj/kernel.asm	/^c010870f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108712	obj/kernel.asm	/^c0108712:	89 d0                	mov    %edx,%eax$/;"	l
c0108714	obj/kernel.asm	/^c0108714:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108717	obj/kernel.asm	/^c0108717:	01 d0                	add    %edx,%eax$/;"	l
c0108719	obj/kernel.asm	/^c0108719:	39 c1                	cmp    %eax,%ecx$/;"	l
c010871b	obj/kernel.asm	/^c010871b:	75 17                	jne    c0108734 <check_vma_struct+0x1d2>$/;"	l
c010871d	obj/kernel.asm	/^c010871d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0108720	obj/kernel.asm	/^c0108720:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c0108723	obj/kernel.asm	/^c0108723:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108726	obj/kernel.asm	/^c0108726:	89 d0                	mov    %edx,%eax$/;"	l
c0108728	obj/kernel.asm	/^c0108728:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010872b	obj/kernel.asm	/^c010872b:	01 d0                	add    %edx,%eax$/;"	l
c010872d	obj/kernel.asm	/^c010872d:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108730	obj/kernel.asm	/^c0108730:	39 c1                	cmp    %eax,%ecx$/;"	l
c0108732	obj/kernel.asm	/^c0108732:	74 24                	je     c0108758 <check_vma_struct+0x1f6>$/;"	l
c0108734	obj/kernel.asm	/^c0108734:	c7 44 24 0c e0 d7 10 	movl   $0xc010d7e0,0xc(%esp)$/;"	l
c010873b	obj/kernel.asm	/^c010873b:	c0 $/;"	l
c010873c	obj/kernel.asm	/^c010873c:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108743	obj/kernel.asm	/^c0108743:	c0 $/;"	l
c0108744	obj/kernel.asm	/^c0108744:	c7 44 24 04 22 01 00 	movl   $0x122,0x4(%esp)$/;"	l
c010874b	obj/kernel.asm	/^c010874b:	00 $/;"	l
c010874c	obj/kernel.asm	/^c010874c:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108753	obj/kernel.asm	/^c0108753:	e8 7d 86 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108758	obj/kernel.asm	/^c0108758:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010875b	obj/kernel.asm	/^c010875b:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010875e	obj/kernel.asm	/^c010875e:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108761	obj/kernel.asm	/^c0108761:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108764	obj/kernel.asm	/^c0108764:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108767	obj/kernel.asm	/^c0108767:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010876b	obj/kernel.asm	/^c010876b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010876e	obj/kernel.asm	/^c010876e:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108771	obj/kernel.asm	/^c0108771:	0f 8e 5d ff ff ff    	jle    c01086d4 <check_vma_struct+0x172>$/;"	l
c0108777	obj/kernel.asm	/^c0108777:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c010877e	obj/kernel.asm	/^c010877e:	e9 cd 01 00 00       	jmp    c0108950 <check_vma_struct+0x3ee>$/;"	l
c0108783	obj/kernel.asm	/^c0108783:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108786	obj/kernel.asm	/^c0108786:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010878a	obj/kernel.asm	/^c010878a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010878d	obj/kernel.asm	/^c010878d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108790	obj/kernel.asm	/^c0108790:	e8 db f6 ff ff       	call   c0107e70 <find_vma>$/;"	l
c0108795	obj/kernel.asm	/^c0108795:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0108798	obj/kernel.asm	/^c0108798:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c010879c	obj/kernel.asm	/^c010879c:	75 24                	jne    c01087c2 <check_vma_struct+0x260>$/;"	l
c010879e	obj/kernel.asm	/^c010879e:	c7 44 24 0c 15 d8 10 	movl   $0xc010d815,0xc(%esp)$/;"	l
c01087a5	obj/kernel.asm	/^c01087a5:	c0 $/;"	l
c01087a6	obj/kernel.asm	/^c01087a6:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c01087ad	obj/kernel.asm	/^c01087ad:	c0 $/;"	l
c01087ae	obj/kernel.asm	/^c01087ae:	c7 44 24 04 28 01 00 	movl   $0x128,0x4(%esp)$/;"	l
c01087b5	obj/kernel.asm	/^c01087b5:	00 $/;"	l
c01087b6	obj/kernel.asm	/^c01087b6:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c01087bd	obj/kernel.asm	/^c01087bd:	e8 13 86 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01087c2	obj/kernel.asm	/^c01087c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01087c5	obj/kernel.asm	/^c01087c5:	83 c0 01             	add    $0x1,%eax$/;"	l
c01087c8	obj/kernel.asm	/^c01087c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01087cc	obj/kernel.asm	/^c01087cc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01087cf	obj/kernel.asm	/^c01087cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01087d2	obj/kernel.asm	/^c01087d2:	e8 99 f6 ff ff       	call   c0107e70 <find_vma>$/;"	l
c01087d7	obj/kernel.asm	/^c01087d7:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01087da	obj/kernel.asm	/^c01087da:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c01087de	obj/kernel.asm	/^c01087de:	75 24                	jne    c0108804 <check_vma_struct+0x2a2>$/;"	l
c01087e0	obj/kernel.asm	/^c01087e0:	c7 44 24 0c 22 d8 10 	movl   $0xc010d822,0xc(%esp)$/;"	l
c01087e7	obj/kernel.asm	/^c01087e7:	c0 $/;"	l
c01087e8	obj/kernel.asm	/^c01087e8:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c01087ef	obj/kernel.asm	/^c01087ef:	c0 $/;"	l
c01087f0	obj/kernel.asm	/^c01087f0:	c7 44 24 04 2a 01 00 	movl   $0x12a,0x4(%esp)$/;"	l
c01087f7	obj/kernel.asm	/^c01087f7:	00 $/;"	l
c01087f8	obj/kernel.asm	/^c01087f8:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c01087ff	obj/kernel.asm	/^c01087ff:	e8 d1 85 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108804	obj/kernel.asm	/^c0108804:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108807	obj/kernel.asm	/^c0108807:	83 c0 02             	add    $0x2,%eax$/;"	l
c010880a	obj/kernel.asm	/^c010880a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010880e	obj/kernel.asm	/^c010880e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108811	obj/kernel.asm	/^c0108811:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108814	obj/kernel.asm	/^c0108814:	e8 57 f6 ff ff       	call   c0107e70 <find_vma>$/;"	l
c0108819	obj/kernel.asm	/^c0108819:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010881c	obj/kernel.asm	/^c010881c:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0108820	obj/kernel.asm	/^c0108820:	74 24                	je     c0108846 <check_vma_struct+0x2e4>$/;"	l
c0108822	obj/kernel.asm	/^c0108822:	c7 44 24 0c 2f d8 10 	movl   $0xc010d82f,0xc(%esp)$/;"	l
c0108829	obj/kernel.asm	/^c0108829:	c0 $/;"	l
c010882a	obj/kernel.asm	/^c010882a:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108831	obj/kernel.asm	/^c0108831:	c0 $/;"	l
c0108832	obj/kernel.asm	/^c0108832:	c7 44 24 04 2c 01 00 	movl   $0x12c,0x4(%esp)$/;"	l
c0108839	obj/kernel.asm	/^c0108839:	00 $/;"	l
c010883a	obj/kernel.asm	/^c010883a:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108841	obj/kernel.asm	/^c0108841:	e8 8f 85 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108846	obj/kernel.asm	/^c0108846:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108849	obj/kernel.asm	/^c0108849:	83 c0 03             	add    $0x3,%eax$/;"	l
c010884c	obj/kernel.asm	/^c010884c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108850	obj/kernel.asm	/^c0108850:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108853	obj/kernel.asm	/^c0108853:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108856	obj/kernel.asm	/^c0108856:	e8 15 f6 ff ff       	call   c0107e70 <find_vma>$/;"	l
c010885b	obj/kernel.asm	/^c010885b:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010885e	obj/kernel.asm	/^c010885e:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c0108862	obj/kernel.asm	/^c0108862:	74 24                	je     c0108888 <check_vma_struct+0x326>$/;"	l
c0108864	obj/kernel.asm	/^c0108864:	c7 44 24 0c 3c d8 10 	movl   $0xc010d83c,0xc(%esp)$/;"	l
c010886b	obj/kernel.asm	/^c010886b:	c0 $/;"	l
c010886c	obj/kernel.asm	/^c010886c:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108873	obj/kernel.asm	/^c0108873:	c0 $/;"	l
c0108874	obj/kernel.asm	/^c0108874:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
c010887b	obj/kernel.asm	/^c010887b:	00 $/;"	l
c010887c	obj/kernel.asm	/^c010887c:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108883	obj/kernel.asm	/^c0108883:	e8 4d 85 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108888	obj/kernel.asm	/^c0108888:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010888b	obj/kernel.asm	/^c010888b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010888e	obj/kernel.asm	/^c010888e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108892	obj/kernel.asm	/^c0108892:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108895	obj/kernel.asm	/^c0108895:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108898	obj/kernel.asm	/^c0108898:	e8 d3 f5 ff ff       	call   c0107e70 <find_vma>$/;"	l
c010889d	obj/kernel.asm	/^c010889d:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01088a0	obj/kernel.asm	/^c01088a0:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c01088a4	obj/kernel.asm	/^c01088a4:	74 24                	je     c01088ca <check_vma_struct+0x368>$/;"	l
c01088a6	obj/kernel.asm	/^c01088a6:	c7 44 24 0c 49 d8 10 	movl   $0xc010d849,0xc(%esp)$/;"	l
c01088ad	obj/kernel.asm	/^c01088ad:	c0 $/;"	l
c01088ae	obj/kernel.asm	/^c01088ae:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c01088b5	obj/kernel.asm	/^c01088b5:	c0 $/;"	l
c01088b6	obj/kernel.asm	/^c01088b6:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
c01088bd	obj/kernel.asm	/^c01088bd:	00 $/;"	l
c01088be	obj/kernel.asm	/^c01088be:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c01088c5	obj/kernel.asm	/^c01088c5:	e8 0b 85 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01088ca	obj/kernel.asm	/^c01088ca:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01088cd	obj/kernel.asm	/^c01088cd:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01088d0	obj/kernel.asm	/^c01088d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01088d3	obj/kernel.asm	/^c01088d3:	39 c2                	cmp    %eax,%edx$/;"	l
c01088d5	obj/kernel.asm	/^c01088d5:	75 10                	jne    c01088e7 <check_vma_struct+0x385>$/;"	l
c01088d7	obj/kernel.asm	/^c01088d7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01088da	obj/kernel.asm	/^c01088da:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01088dd	obj/kernel.asm	/^c01088dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01088e0	obj/kernel.asm	/^c01088e0:	83 c0 02             	add    $0x2,%eax$/;"	l
c01088e3	obj/kernel.asm	/^c01088e3:	39 c2                	cmp    %eax,%edx$/;"	l
c01088e5	obj/kernel.asm	/^c01088e5:	74 24                	je     c010890b <check_vma_struct+0x3a9>$/;"	l
c01088e7	obj/kernel.asm	/^c01088e7:	c7 44 24 0c 58 d8 10 	movl   $0xc010d858,0xc(%esp)$/;"	l
c01088ee	obj/kernel.asm	/^c01088ee:	c0 $/;"	l
c01088ef	obj/kernel.asm	/^c01088ef:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c01088f6	obj/kernel.asm	/^c01088f6:	c0 $/;"	l
c01088f7	obj/kernel.asm	/^c01088f7:	c7 44 24 04 32 01 00 	movl   $0x132,0x4(%esp)$/;"	l
c01088fe	obj/kernel.asm	/^c01088fe:	00 $/;"	l
c01088ff	obj/kernel.asm	/^c01088ff:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108906	obj/kernel.asm	/^c0108906:	e8 ca 84 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010890b	obj/kernel.asm	/^c010890b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010890e	obj/kernel.asm	/^c010890e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108911	obj/kernel.asm	/^c0108911:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108914	obj/kernel.asm	/^c0108914:	39 c2                	cmp    %eax,%edx$/;"	l
c0108916	obj/kernel.asm	/^c0108916:	75 10                	jne    c0108928 <check_vma_struct+0x3c6>$/;"	l
c0108918	obj/kernel.asm	/^c0108918:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010891b	obj/kernel.asm	/^c010891b:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010891e	obj/kernel.asm	/^c010891e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108921	obj/kernel.asm	/^c0108921:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108924	obj/kernel.asm	/^c0108924:	39 c2                	cmp    %eax,%edx$/;"	l
c0108926	obj/kernel.asm	/^c0108926:	74 24                	je     c010894c <check_vma_struct+0x3ea>$/;"	l
c0108928	obj/kernel.asm	/^c0108928:	c7 44 24 0c 88 d8 10 	movl   $0xc010d888,0xc(%esp)$/;"	l
c010892f	obj/kernel.asm	/^c010892f:	c0 $/;"	l
c0108930	obj/kernel.asm	/^c0108930:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108937	obj/kernel.asm	/^c0108937:	c0 $/;"	l
c0108938	obj/kernel.asm	/^c0108938:	c7 44 24 04 33 01 00 	movl   $0x133,0x4(%esp)$/;"	l
c010893f	obj/kernel.asm	/^c010893f:	00 $/;"	l
c0108940	obj/kernel.asm	/^c0108940:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108947	obj/kernel.asm	/^c0108947:	e8 89 84 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010894c	obj/kernel.asm	/^c010894c:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0108950	obj/kernel.asm	/^c0108950:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108953	obj/kernel.asm	/^c0108953:	89 d0                	mov    %edx,%eax$/;"	l
c0108955	obj/kernel.asm	/^c0108955:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108958	obj/kernel.asm	/^c0108958:	01 d0                	add    %edx,%eax$/;"	l
c010895a	obj/kernel.asm	/^c010895a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010895d	obj/kernel.asm	/^c010895d:	0f 8d 20 fe ff ff    	jge    c0108783 <check_vma_struct+0x221>$/;"	l
c0108963	obj/kernel.asm	/^c0108963:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c010896a	obj/kernel.asm	/^c010896a:	eb 70                	jmp    c01089dc <check_vma_struct+0x47a>$/;"	l
c010896c	obj/kernel.asm	/^c010896c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010896f	obj/kernel.asm	/^c010896f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108973	obj/kernel.asm	/^c0108973:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108976	obj/kernel.asm	/^c0108976:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108979	obj/kernel.asm	/^c0108979:	e8 f2 f4 ff ff       	call   c0107e70 <find_vma>$/;"	l
c010897e	obj/kernel.asm	/^c010897e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0108981	obj/kernel.asm	/^c0108981:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0108985	obj/kernel.asm	/^c0108985:	74 27                	je     c01089ae <check_vma_struct+0x44c>$/;"	l
c0108987	obj/kernel.asm	/^c0108987:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010898a	obj/kernel.asm	/^c010898a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010898d	obj/kernel.asm	/^c010898d:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108990	obj/kernel.asm	/^c0108990:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108993	obj/kernel.asm	/^c0108993:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0108997	obj/kernel.asm	/^c0108997:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010899b	obj/kernel.asm	/^c010899b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010899e	obj/kernel.asm	/^c010899e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01089a2	obj/kernel.asm	/^c01089a2:	c7 04 24 b8 d8 10 c0 	movl   $0xc010d8b8,(%esp)$/;"	l
c01089a9	obj/kernel.asm	/^c01089a9:	e8 a5 79 ff ff       	call   c0100353 <cprintf>$/;"	l
c01089ae	obj/kernel.asm	/^c01089ae:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c01089b2	obj/kernel.asm	/^c01089b2:	74 24                	je     c01089d8 <check_vma_struct+0x476>$/;"	l
c01089b4	obj/kernel.asm	/^c01089b4:	c7 44 24 0c dd d8 10 	movl   $0xc010d8dd,0xc(%esp)$/;"	l
c01089bb	obj/kernel.asm	/^c01089bb:	c0 $/;"	l
c01089bc	obj/kernel.asm	/^c01089bc:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c01089c3	obj/kernel.asm	/^c01089c3:	c0 $/;"	l
c01089c4	obj/kernel.asm	/^c01089c4:	c7 44 24 04 3b 01 00 	movl   $0x13b,0x4(%esp)$/;"	l
c01089cb	obj/kernel.asm	/^c01089cb:	00 $/;"	l
c01089cc	obj/kernel.asm	/^c01089cc:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c01089d3	obj/kernel.asm	/^c01089d3:	e8 fd 83 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01089d8	obj/kernel.asm	/^c01089d8:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01089dc	obj/kernel.asm	/^c01089dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01089e0	obj/kernel.asm	/^c01089e0:	79 8a                	jns    c010896c <check_vma_struct+0x40a>$/;"	l
c01089e2	obj/kernel.asm	/^c01089e2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01089e5	obj/kernel.asm	/^c01089e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01089e8	obj/kernel.asm	/^c01089e8:	e8 08 f7 ff ff       	call   c01080f5 <mm_destroy>$/;"	l
c01089ed	obj/kernel.asm	/^c01089ed:	c7 04 24 f4 d8 10 c0 	movl   $0xc010d8f4,(%esp)$/;"	l
c01089f4	obj/kernel.asm	/^c01089f4:	e8 5a 79 ff ff       	call   c0100353 <cprintf>$/;"	l
c01089f9	obj/kernel.asm	/^c01089f9:	c9                   	leave  $/;"	l
c01089fa	obj/kernel.asm	/^c01089fa:	c3                   	ret    $/;"	l
c01089fb	obj/kernel.asm	/^c01089fb <check_pgfault>:$/;"	l
c01089fb	obj/kernel.asm	/^c01089fb:	55                   	push   %ebp$/;"	l
c01089fc	obj/kernel.asm	/^c01089fc:	89 e5                	mov    %esp,%ebp$/;"	l
c01089fe	obj/kernel.asm	/^c01089fe:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108a01	obj/kernel.asm	/^c0108a01:	e8 e0 c6 ff ff       	call   c01050e6 <nr_free_pages>$/;"	l
c0108a06	obj/kernel.asm	/^c0108a06:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108a09	obj/kernel.asm	/^c0108a09:	e8 8e f3 ff ff       	call   c0107d9c <mm_create>$/;"	l
c0108a0e	obj/kernel.asm	/^c0108a0e:	a3 ac f0 19 c0       	mov    %eax,0xc019f0ac$/;"	l
c0108a13	obj/kernel.asm	/^c0108a13:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c0108a18	obj/kernel.asm	/^c0108a18:	85 c0                	test   %eax,%eax$/;"	l
c0108a1a	obj/kernel.asm	/^c0108a1a:	75 24                	jne    c0108a40 <check_pgfault+0x45>$/;"	l
c0108a1c	obj/kernel.asm	/^c0108a1c:	c7 44 24 0c 13 d9 10 	movl   $0xc010d913,0xc(%esp)$/;"	l
c0108a23	obj/kernel.asm	/^c0108a23:	c0 $/;"	l
c0108a24	obj/kernel.asm	/^c0108a24:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108a2b	obj/kernel.asm	/^c0108a2b:	c0 $/;"	l
c0108a2c	obj/kernel.asm	/^c0108a2c:	c7 44 24 04 4b 01 00 	movl   $0x14b,0x4(%esp)$/;"	l
c0108a33	obj/kernel.asm	/^c0108a33:	00 $/;"	l
c0108a34	obj/kernel.asm	/^c0108a34:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108a3b	obj/kernel.asm	/^c0108a3b:	e8 95 83 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108a40	obj/kernel.asm	/^c0108a40:	a1 ac f0 19 c0       	mov    0xc019f0ac,%eax$/;"	l
c0108a45	obj/kernel.asm	/^c0108a45:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108a48	obj/kernel.asm	/^c0108a48:	8b 15 e4 ce 19 c0    	mov    0xc019cee4,%edx$/;"	l
c0108a4e	obj/kernel.asm	/^c0108a4e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108a51	obj/kernel.asm	/^c0108a51:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0108a54	obj/kernel.asm	/^c0108a54:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108a57	obj/kernel.asm	/^c0108a57:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108a5a	obj/kernel.asm	/^c0108a5a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108a5d	obj/kernel.asm	/^c0108a5d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108a60	obj/kernel.asm	/^c0108a60:	8b 00                	mov    (%eax),%eax$/;"	l
c0108a62	obj/kernel.asm	/^c0108a62:	85 c0                	test   %eax,%eax$/;"	l
c0108a64	obj/kernel.asm	/^c0108a64:	74 24                	je     c0108a8a <check_pgfault+0x8f>$/;"	l
c0108a66	obj/kernel.asm	/^c0108a66:	c7 44 24 0c 2b d9 10 	movl   $0xc010d92b,0xc(%esp)$/;"	l
c0108a6d	obj/kernel.asm	/^c0108a6d:	c0 $/;"	l
c0108a6e	obj/kernel.asm	/^c0108a6e:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108a75	obj/kernel.asm	/^c0108a75:	c0 $/;"	l
c0108a76	obj/kernel.asm	/^c0108a76:	c7 44 24 04 4f 01 00 	movl   $0x14f,0x4(%esp)$/;"	l
c0108a7d	obj/kernel.asm	/^c0108a7d:	00 $/;"	l
c0108a7e	obj/kernel.asm	/^c0108a7e:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108a85	obj/kernel.asm	/^c0108a85:	e8 4b 83 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108a8a	obj/kernel.asm	/^c0108a8a:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c0108a91	obj/kernel.asm	/^c0108a91:	00 $/;"	l
c0108a92	obj/kernel.asm	/^c0108a92:	c7 44 24 04 00 00 40 	movl   $0x400000,0x4(%esp)$/;"	l
c0108a99	obj/kernel.asm	/^c0108a99:	00 $/;"	l
c0108a9a	obj/kernel.asm	/^c0108a9a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0108aa1	obj/kernel.asm	/^c0108aa1:	e8 8f f3 ff ff       	call   c0107e35 <vma_create>$/;"	l
c0108aa6	obj/kernel.asm	/^c0108aa6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108aa9	obj/kernel.asm	/^c0108aa9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0108aad	obj/kernel.asm	/^c0108aad:	75 24                	jne    c0108ad3 <check_pgfault+0xd8>$/;"	l
c0108aaf	obj/kernel.asm	/^c0108aaf:	c7 44 24 0c bc d7 10 	movl   $0xc010d7bc,0xc(%esp)$/;"	l
c0108ab6	obj/kernel.asm	/^c0108ab6:	c0 $/;"	l
c0108ab7	obj/kernel.asm	/^c0108ab7:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108abe	obj/kernel.asm	/^c0108abe:	c0 $/;"	l
c0108abf	obj/kernel.asm	/^c0108abf:	c7 44 24 04 52 01 00 	movl   $0x152,0x4(%esp)$/;"	l
c0108ac6	obj/kernel.asm	/^c0108ac6:	00 $/;"	l
c0108ac7	obj/kernel.asm	/^c0108ac7:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108ace	obj/kernel.asm	/^c0108ace:	e8 02 83 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108ad3	obj/kernel.asm	/^c0108ad3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108ad6	obj/kernel.asm	/^c0108ad6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108ada	obj/kernel.asm	/^c0108ada:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108add	obj/kernel.asm	/^c0108add:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ae0	obj/kernel.asm	/^c0108ae0:	e8 e0 f4 ff ff       	call   c0107fc5 <insert_vma_struct>$/;"	l
c0108ae5	obj/kernel.asm	/^c0108ae5:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0108aec	obj/kernel.asm	/^c0108aec:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108aef	obj/kernel.asm	/^c0108aef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108af3	obj/kernel.asm	/^c0108af3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108af6	obj/kernel.asm	/^c0108af6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108af9	obj/kernel.asm	/^c0108af9:	e8 72 f3 ff ff       	call   c0107e70 <find_vma>$/;"	l
c0108afe	obj/kernel.asm	/^c0108afe:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108b01	obj/kernel.asm	/^c0108b01:	74 24                	je     c0108b27 <check_pgfault+0x12c>$/;"	l
c0108b03	obj/kernel.asm	/^c0108b03:	c7 44 24 0c 39 d9 10 	movl   $0xc010d939,0xc(%esp)$/;"	l
c0108b0a	obj/kernel.asm	/^c0108b0a:	c0 $/;"	l
c0108b0b	obj/kernel.asm	/^c0108b0b:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108b12	obj/kernel.asm	/^c0108b12:	c0 $/;"	l
c0108b13	obj/kernel.asm	/^c0108b13:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
c0108b1a	obj/kernel.asm	/^c0108b1a:	00 $/;"	l
c0108b1b	obj/kernel.asm	/^c0108b1b:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108b22	obj/kernel.asm	/^c0108b22:	e8 ae 82 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108b27	obj/kernel.asm	/^c0108b27:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0108b2e	obj/kernel.asm	/^c0108b2e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108b35	obj/kernel.asm	/^c0108b35:	eb 17                	jmp    c0108b4e <check_pgfault+0x153>$/;"	l
c0108b37	obj/kernel.asm	/^c0108b37:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108b3a	obj/kernel.asm	/^c0108b3a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108b3d	obj/kernel.asm	/^c0108b3d:	01 d0                	add    %edx,%eax$/;"	l
c0108b3f	obj/kernel.asm	/^c0108b3f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108b42	obj/kernel.asm	/^c0108b42:	88 10                	mov    %dl,(%eax)$/;"	l
c0108b44	obj/kernel.asm	/^c0108b44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108b47	obj/kernel.asm	/^c0108b47:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0108b4a	obj/kernel.asm	/^c0108b4a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108b4e	obj/kernel.asm	/^c0108b4e:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0108b52	obj/kernel.asm	/^c0108b52:	7e e3                	jle    c0108b37 <check_pgfault+0x13c>$/;"	l
c0108b54	obj/kernel.asm	/^c0108b54:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108b5b	obj/kernel.asm	/^c0108b5b:	eb 15                	jmp    c0108b72 <check_pgfault+0x177>$/;"	l
c0108b5d	obj/kernel.asm	/^c0108b5d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108b60	obj/kernel.asm	/^c0108b60:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108b63	obj/kernel.asm	/^c0108b63:	01 d0                	add    %edx,%eax$/;"	l
c0108b65	obj/kernel.asm	/^c0108b65:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0108b68	obj/kernel.asm	/^c0108b68:	0f be c0             	movsbl %al,%eax$/;"	l
c0108b6b	obj/kernel.asm	/^c0108b6b:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0108b6e	obj/kernel.asm	/^c0108b6e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108b72	obj/kernel.asm	/^c0108b72:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0108b76	obj/kernel.asm	/^c0108b76:	7e e5                	jle    c0108b5d <check_pgfault+0x162>$/;"	l
c0108b78	obj/kernel.asm	/^c0108b78:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108b7c	obj/kernel.asm	/^c0108b7c:	74 24                	je     c0108ba2 <check_pgfault+0x1a7>$/;"	l
c0108b7e	obj/kernel.asm	/^c0108b7e:	c7 44 24 0c 53 d9 10 	movl   $0xc010d953,0xc(%esp)$/;"	l
c0108b85	obj/kernel.asm	/^c0108b85:	c0 $/;"	l
c0108b86	obj/kernel.asm	/^c0108b86:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108b8d	obj/kernel.asm	/^c0108b8d:	c0 $/;"	l
c0108b8e	obj/kernel.asm	/^c0108b8e:	c7 44 24 04 61 01 00 	movl   $0x161,0x4(%esp)$/;"	l
c0108b95	obj/kernel.asm	/^c0108b95:	00 $/;"	l
c0108b96	obj/kernel.asm	/^c0108b96:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108b9d	obj/kernel.asm	/^c0108b9d:	e8 33 82 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108ba2	obj/kernel.asm	/^c0108ba2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108ba5	obj/kernel.asm	/^c0108ba5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108ba8	obj/kernel.asm	/^c0108ba8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108bab	obj/kernel.asm	/^c0108bab:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0108bb0	obj/kernel.asm	/^c0108bb0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108bb4	obj/kernel.asm	/^c0108bb4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108bb7	obj/kernel.asm	/^c0108bb7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108bba	obj/kernel.asm	/^c0108bba:	e8 a8 d1 ff ff       	call   c0105d67 <page_remove>$/;"	l
c0108bbf	obj/kernel.asm	/^c0108bbf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108bc2	obj/kernel.asm	/^c0108bc2:	8b 00                	mov    (%eax),%eax$/;"	l
c0108bc4	obj/kernel.asm	/^c0108bc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108bc7	obj/kernel.asm	/^c0108bc7:	e8 8b f1 ff ff       	call   c0107d57 <pa2page>$/;"	l
c0108bcc	obj/kernel.asm	/^c0108bcc:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0108bd3	obj/kernel.asm	/^c0108bd3:	00 $/;"	l
c0108bd4	obj/kernel.asm	/^c0108bd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108bd7	obj/kernel.asm	/^c0108bd7:	e8 d8 c4 ff ff       	call   c01050b4 <free_pages>$/;"	l
c0108bdc	obj/kernel.asm	/^c0108bdc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108bdf	obj/kernel.asm	/^c0108bdf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0108be5	obj/kernel.asm	/^c0108be5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108be8	obj/kernel.asm	/^c0108be8:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0108bef	obj/kernel.asm	/^c0108bef:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108bf2	obj/kernel.asm	/^c0108bf2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108bf5	obj/kernel.asm	/^c0108bf5:	e8 fb f4 ff ff       	call   c01080f5 <mm_destroy>$/;"	l
c0108bfa	obj/kernel.asm	/^c0108bfa:	c7 05 ac f0 19 c0 00 	movl   $0x0,0xc019f0ac$/;"	l
c0108c01	obj/kernel.asm	/^c0108c01:	00 00 00 $/;"	l
c0108c04	obj/kernel.asm	/^c0108c04:	e8 dd c4 ff ff       	call   c01050e6 <nr_free_pages>$/;"	l
c0108c09	obj/kernel.asm	/^c0108c09:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108c0c	obj/kernel.asm	/^c0108c0c:	74 24                	je     c0108c32 <check_pgfault+0x237>$/;"	l
c0108c0e	obj/kernel.asm	/^c0108c0e:	c7 44 24 0c 5c d9 10 	movl   $0xc010d95c,0xc(%esp)$/;"	l
c0108c15	obj/kernel.asm	/^c0108c15:	c0 $/;"	l
c0108c16	obj/kernel.asm	/^c0108c16:	c7 44 24 08 cb d6 10 	movl   $0xc010d6cb,0x8(%esp)$/;"	l
c0108c1d	obj/kernel.asm	/^c0108c1d:	c0 $/;"	l
c0108c1e	obj/kernel.asm	/^c0108c1e:	c7 44 24 04 6b 01 00 	movl   $0x16b,0x4(%esp)$/;"	l
c0108c25	obj/kernel.asm	/^c0108c25:	00 $/;"	l
c0108c26	obj/kernel.asm	/^c0108c26:	c7 04 24 e0 d6 10 c0 	movl   $0xc010d6e0,(%esp)$/;"	l
c0108c2d	obj/kernel.asm	/^c0108c2d:	e8 a3 81 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108c32	obj/kernel.asm	/^c0108c32:	c7 04 24 83 d9 10 c0 	movl   $0xc010d983,(%esp)$/;"	l
c0108c39	obj/kernel.asm	/^c0108c39:	e8 15 77 ff ff       	call   c0100353 <cprintf>$/;"	l
c0108c3e	obj/kernel.asm	/^c0108c3e:	c9                   	leave  $/;"	l
c0108c3f	obj/kernel.asm	/^c0108c3f:	c3                   	ret    $/;"	l
c0108c40	obj/kernel.asm	/^c0108c40 <do_pgfault>:$/;"	l
c0108c40	obj/kernel.asm	/^c0108c40:	55                   	push   %ebp$/;"	l
c0108c41	obj/kernel.asm	/^c0108c41:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c43	obj/kernel.asm	/^c0108c43:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108c46	obj/kernel.asm	/^c0108c46:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0108c4d	obj/kernel.asm	/^c0108c4d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108c50	obj/kernel.asm	/^c0108c50:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108c54	obj/kernel.asm	/^c0108c54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c57	obj/kernel.asm	/^c0108c57:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108c5a	obj/kernel.asm	/^c0108c5a:	e8 11 f2 ff ff       	call   c0107e70 <find_vma>$/;"	l
c0108c5f	obj/kernel.asm	/^c0108c5f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108c62	obj/kernel.asm	/^c0108c62:	a1 78 cf 19 c0       	mov    0xc019cf78,%eax$/;"	l
c0108c67	obj/kernel.asm	/^c0108c67:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108c6a	obj/kernel.asm	/^c0108c6a:	a3 78 cf 19 c0       	mov    %eax,0xc019cf78$/;"	l
c0108c6f	obj/kernel.asm	/^c0108c6f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108c73	obj/kernel.asm	/^c0108c73:	74 0b                	je     c0108c80 <do_pgfault+0x40>$/;"	l
c0108c75	obj/kernel.asm	/^c0108c75:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108c78	obj/kernel.asm	/^c0108c78:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108c7b	obj/kernel.asm	/^c0108c7b:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0108c7e	obj/kernel.asm	/^c0108c7e:	76 18                	jbe    c0108c98 <do_pgfault+0x58>$/;"	l
c0108c80	obj/kernel.asm	/^c0108c80:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108c83	obj/kernel.asm	/^c0108c83:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108c87	obj/kernel.asm	/^c0108c87:	c7 04 24 a0 d9 10 c0 	movl   $0xc010d9a0,(%esp)$/;"	l
c0108c8e	obj/kernel.asm	/^c0108c8e:	e8 c0 76 ff ff       	call   c0100353 <cprintf>$/;"	l
c0108c93	obj/kernel.asm	/^c0108c93:	e9 6c 01 00 00       	jmp    c0108e04 <do_pgfault+0x1c4>$/;"	l
c0108c98	obj/kernel.asm	/^c0108c98:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108c9b	obj/kernel.asm	/^c0108c9b:	83 e0 03             	and    $0x3,%eax$/;"	l
c0108c9e	obj/kernel.asm	/^c0108c9e:	85 c0                	test   %eax,%eax$/;"	l
c0108ca0	obj/kernel.asm	/^c0108ca0:	74 36                	je     c0108cd8 <do_pgfault+0x98>$/;"	l
c0108ca2	obj/kernel.asm	/^c0108ca2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108ca5	obj/kernel.asm	/^c0108ca5:	74 20                	je     c0108cc7 <do_pgfault+0x87>$/;"	l
c0108ca7	obj/kernel.asm	/^c0108ca7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108caa	obj/kernel.asm	/^c0108caa:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108cad	obj/kernel.asm	/^c0108cad:	83 e0 02             	and    $0x2,%eax$/;"	l
c0108cb0	obj/kernel.asm	/^c0108cb0:	85 c0                	test   %eax,%eax$/;"	l
c0108cb2	obj/kernel.asm	/^c0108cb2:	75 11                	jne    c0108cc5 <do_pgfault+0x85>$/;"	l
c0108cb4	obj/kernel.asm	/^c0108cb4:	c7 04 24 d0 d9 10 c0 	movl   $0xc010d9d0,(%esp)$/;"	l
c0108cbb	obj/kernel.asm	/^c0108cbb:	e8 93 76 ff ff       	call   c0100353 <cprintf>$/;"	l
c0108cc0	obj/kernel.asm	/^c0108cc0:	e9 3f 01 00 00       	jmp    c0108e04 <do_pgfault+0x1c4>$/;"	l
c0108cc5	obj/kernel.asm	/^c0108cc5:	eb 2f                	jmp    c0108cf6 <do_pgfault+0xb6>$/;"	l
c0108cc7	obj/kernel.asm	/^c0108cc7:	c7 04 24 30 da 10 c0 	movl   $0xc010da30,(%esp)$/;"	l
c0108cce	obj/kernel.asm	/^c0108cce:	e8 80 76 ff ff       	call   c0100353 <cprintf>$/;"	l
c0108cd3	obj/kernel.asm	/^c0108cd3:	e9 2c 01 00 00       	jmp    c0108e04 <do_pgfault+0x1c4>$/;"	l
c0108cd8	obj/kernel.asm	/^c0108cd8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108cdb	obj/kernel.asm	/^c0108cdb:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108cde	obj/kernel.asm	/^c0108cde:	83 e0 05             	and    $0x5,%eax$/;"	l
c0108ce1	obj/kernel.asm	/^c0108ce1:	85 c0                	test   %eax,%eax$/;"	l
c0108ce3	obj/kernel.asm	/^c0108ce3:	75 11                	jne    c0108cf6 <do_pgfault+0xb6>$/;"	l
c0108ce5	obj/kernel.asm	/^c0108ce5:	c7 04 24 68 da 10 c0 	movl   $0xc010da68,(%esp)$/;"	l
c0108cec	obj/kernel.asm	/^c0108cec:	e8 62 76 ff ff       	call   c0100353 <cprintf>$/;"	l
c0108cf1	obj/kernel.asm	/^c0108cf1:	e9 0e 01 00 00       	jmp    c0108e04 <do_pgfault+0x1c4>$/;"	l
c0108cf6	obj/kernel.asm	/^c0108cf6:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c0108cfd	obj/kernel.asm	/^c0108cfd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d00	obj/kernel.asm	/^c0108d00:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108d03	obj/kernel.asm	/^c0108d03:	83 e0 02             	and    $0x2,%eax$/;"	l
c0108d06	obj/kernel.asm	/^c0108d06:	85 c0                	test   %eax,%eax$/;"	l
c0108d08	obj/kernel.asm	/^c0108d08:	74 04                	je     c0108d0e <do_pgfault+0xce>$/;"	l
c0108d0a	obj/kernel.asm	/^c0108d0a:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c0108d0e	obj/kernel.asm	/^c0108d0e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108d11	obj/kernel.asm	/^c0108d11:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108d14	obj/kernel.asm	/^c0108d14:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108d17	obj/kernel.asm	/^c0108d17:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0108d1c	obj/kernel.asm	/^c0108d1c:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0108d1f	obj/kernel.asm	/^c0108d1f:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0108d26	obj/kernel.asm	/^c0108d26:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0108d2d	obj/kernel.asm	/^c0108d2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d30	obj/kernel.asm	/^c0108d30:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108d33	obj/kernel.asm	/^c0108d33:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0108d3a	obj/kernel.asm	/^c0108d3a:	00 $/;"	l
c0108d3b	obj/kernel.asm	/^c0108d3b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108d3e	obj/kernel.asm	/^c0108d3e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108d42	obj/kernel.asm	/^c0108d42:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d45	obj/kernel.asm	/^c0108d45:	e8 66 ca ff ff       	call   c01057b0 <get_pte>$/;"	l
c0108d4a	obj/kernel.asm	/^c0108d4a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108d4d	obj/kernel.asm	/^c0108d4d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108d50	obj/kernel.asm	/^c0108d50:	8b 00                	mov    (%eax),%eax$/;"	l
c0108d52	obj/kernel.asm	/^c0108d52:	85 c0                	test   %eax,%eax$/;"	l
c0108d54	obj/kernel.asm	/^c0108d54:	75 21                	jne    c0108d77 <do_pgfault+0x137>$/;"	l
c0108d56	obj/kernel.asm	/^c0108d56:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d59	obj/kernel.asm	/^c0108d59:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108d5c	obj/kernel.asm	/^c0108d5c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108d5f	obj/kernel.asm	/^c0108d5f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108d63	obj/kernel.asm	/^c0108d63:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108d66	obj/kernel.asm	/^c0108d66:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108d6a	obj/kernel.asm	/^c0108d6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d6d	obj/kernel.asm	/^c0108d6d:	e8 4f d1 ff ff       	call   c0105ec1 <pgdir_alloc_page>$/;"	l
c0108d72	obj/kernel.asm	/^c0108d72:	e9 86 00 00 00       	jmp    c0108dfd <do_pgfault+0x1bd>$/;"	l
c0108d77	obj/kernel.asm	/^c0108d77:	a1 6c cf 19 c0       	mov    0xc019cf6c,%eax$/;"	l
c0108d7c	obj/kernel.asm	/^c0108d7c:	85 c0                	test   %eax,%eax$/;"	l
c0108d7e	obj/kernel.asm	/^c0108d7e:	74 66                	je     c0108de6 <do_pgfault+0x1a6>$/;"	l
c0108d80	obj/kernel.asm	/^c0108d80:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0108d87	obj/kernel.asm	/^c0108d87:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c0108d8a	obj/kernel.asm	/^c0108d8a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108d8e	obj/kernel.asm	/^c0108d8e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108d91	obj/kernel.asm	/^c0108d91:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108d95	obj/kernel.asm	/^c0108d95:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d98	obj/kernel.asm	/^c0108d98:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d9b	obj/kernel.asm	/^c0108d9b:	e8 ba e1 ff ff       	call   c0106f5a <swap_in>$/;"	l
c0108da0	obj/kernel.asm	/^c0108da0:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108da3	obj/kernel.asm	/^c0108da3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108da6	obj/kernel.asm	/^c0108da6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108da9	obj/kernel.asm	/^c0108da9:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c0108dac	obj/kernel.asm	/^c0108dac:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0108db0	obj/kernel.asm	/^c0108db0:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0108db3	obj/kernel.asm	/^c0108db3:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0108db7	obj/kernel.asm	/^c0108db7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108dbb	obj/kernel.asm	/^c0108dbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108dbe	obj/kernel.asm	/^c0108dbe:	e8 e8 cf ff ff       	call   c0105dab <page_insert>$/;"	l
c0108dc3	obj/kernel.asm	/^c0108dc3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108dc6	obj/kernel.asm	/^c0108dc6:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0108dcd	obj/kernel.asm	/^c0108dcd:	00 $/;"	l
c0108dce	obj/kernel.asm	/^c0108dce:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108dd2	obj/kernel.asm	/^c0108dd2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108dd5	obj/kernel.asm	/^c0108dd5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108dd9	obj/kernel.asm	/^c0108dd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ddc	obj/kernel.asm	/^c0108ddc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ddf	obj/kernel.asm	/^c0108ddf:	e8 ad df ff ff       	call   c0106d91 <swap_map_swappable>$/;"	l
c0108de4	obj/kernel.asm	/^c0108de4:	eb 17                	jmp    c0108dfd <do_pgfault+0x1bd>$/;"	l
c0108de6	obj/kernel.asm	/^c0108de6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108de9	obj/kernel.asm	/^c0108de9:	8b 00                	mov    (%eax),%eax$/;"	l
c0108deb	obj/kernel.asm	/^c0108deb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108def	obj/kernel.asm	/^c0108def:	c7 04 24 cc da 10 c0 	movl   $0xc010dacc,(%esp)$/;"	l
c0108df6	obj/kernel.asm	/^c0108df6:	e8 58 75 ff ff       	call   c0100353 <cprintf>$/;"	l
c0108dfb	obj/kernel.asm	/^c0108dfb:	eb 07                	jmp    c0108e04 <do_pgfault+0x1c4>$/;"	l
c0108dfd	obj/kernel.asm	/^c0108dfd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108e04	obj/kernel.asm	/^c0108e04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e07	obj/kernel.asm	/^c0108e07:	c9                   	leave  $/;"	l
c0108e08	obj/kernel.asm	/^c0108e08:	c3                   	ret    $/;"	l
c0108e09	obj/kernel.asm	/^c0108e09 <user_mem_check>:$/;"	l
c0108e09	obj/kernel.asm	/^c0108e09:	55                   	push   %ebp$/;"	l
c0108e0a	obj/kernel.asm	/^c0108e0a:	89 e5                	mov    %esp,%ebp$/;"	l
c0108e0c	obj/kernel.asm	/^c0108e0c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108e0f	obj/kernel.asm	/^c0108e0f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108e13	obj/kernel.asm	/^c0108e13:	0f 84 e0 00 00 00    	je     c0108ef9 <user_mem_check+0xf0>$/;"	l
c0108e19	obj/kernel.asm	/^c0108e19:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0108e20	obj/kernel.asm	/^c0108e20:	76 1c                	jbe    c0108e3e <user_mem_check+0x35>$/;"	l
c0108e22	obj/kernel.asm	/^c0108e22:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108e25	obj/kernel.asm	/^c0108e25:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108e28	obj/kernel.asm	/^c0108e28:	01 d0                	add    %edx,%eax$/;"	l
c0108e2a	obj/kernel.asm	/^c0108e2a:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108e2d	obj/kernel.asm	/^c0108e2d:	76 0f                	jbe    c0108e3e <user_mem_check+0x35>$/;"	l
c0108e2f	obj/kernel.asm	/^c0108e2f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108e32	obj/kernel.asm	/^c0108e32:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108e35	obj/kernel.asm	/^c0108e35:	01 d0                	add    %edx,%eax$/;"	l
c0108e37	obj/kernel.asm	/^c0108e37:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0108e3c	obj/kernel.asm	/^c0108e3c:	76 0a                	jbe    c0108e48 <user_mem_check+0x3f>$/;"	l
c0108e3e	obj/kernel.asm	/^c0108e3e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108e43	obj/kernel.asm	/^c0108e43:	e9 e2 00 00 00       	jmp    c0108f2a <user_mem_check+0x121>$/;"	l
c0108e48	obj/kernel.asm	/^c0108e48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108e4b	obj/kernel.asm	/^c0108e4b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108e4e	obj/kernel.asm	/^c0108e4e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108e51	obj/kernel.asm	/^c0108e51:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108e54	obj/kernel.asm	/^c0108e54:	01 d0                	add    %edx,%eax$/;"	l
c0108e56	obj/kernel.asm	/^c0108e56:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0108e59	obj/kernel.asm	/^c0108e59:	e9 88 00 00 00       	jmp    c0108ee6 <user_mem_check+0xdd>$/;"	l
c0108e5e	obj/kernel.asm	/^c0108e5e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108e61	obj/kernel.asm	/^c0108e61:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108e65	obj/kernel.asm	/^c0108e65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e68	obj/kernel.asm	/^c0108e68:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108e6b	obj/kernel.asm	/^c0108e6b:	e8 00 f0 ff ff       	call   c0107e70 <find_vma>$/;"	l
c0108e70	obj/kernel.asm	/^c0108e70:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108e73	obj/kernel.asm	/^c0108e73:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108e77	obj/kernel.asm	/^c0108e77:	74 0b                	je     c0108e84 <user_mem_check+0x7b>$/;"	l
c0108e79	obj/kernel.asm	/^c0108e79:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e7c	obj/kernel.asm	/^c0108e7c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108e7f	obj/kernel.asm	/^c0108e7f:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0108e82	obj/kernel.asm	/^c0108e82:	76 0a                	jbe    c0108e8e <user_mem_check+0x85>$/;"	l
c0108e84	obj/kernel.asm	/^c0108e84:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108e89	obj/kernel.asm	/^c0108e89:	e9 9c 00 00 00       	jmp    c0108f2a <user_mem_check+0x121>$/;"	l
c0108e8e	obj/kernel.asm	/^c0108e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e91	obj/kernel.asm	/^c0108e91:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0108e94	obj/kernel.asm	/^c0108e94:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0108e98	obj/kernel.asm	/^c0108e98:	74 07                	je     c0108ea1 <user_mem_check+0x98>$/;"	l
c0108e9a	obj/kernel.asm	/^c0108e9a:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
c0108e9f	obj/kernel.asm	/^c0108e9f:	eb 05                	jmp    c0108ea6 <user_mem_check+0x9d>$/;"	l
c0108ea1	obj/kernel.asm	/^c0108ea1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108ea6	obj/kernel.asm	/^c0108ea6:	21 d0                	and    %edx,%eax$/;"	l
c0108ea8	obj/kernel.asm	/^c0108ea8:	85 c0                	test   %eax,%eax$/;"	l
c0108eaa	obj/kernel.asm	/^c0108eaa:	75 07                	jne    c0108eb3 <user_mem_check+0xaa>$/;"	l
c0108eac	obj/kernel.asm	/^c0108eac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108eb1	obj/kernel.asm	/^c0108eb1:	eb 77                	jmp    c0108f2a <user_mem_check+0x121>$/;"	l
c0108eb3	obj/kernel.asm	/^c0108eb3:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0108eb7	obj/kernel.asm	/^c0108eb7:	74 24                	je     c0108edd <user_mem_check+0xd4>$/;"	l
c0108eb9	obj/kernel.asm	/^c0108eb9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ebc	obj/kernel.asm	/^c0108ebc:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108ebf	obj/kernel.asm	/^c0108ebf:	83 e0 08             	and    $0x8,%eax$/;"	l
c0108ec2	obj/kernel.asm	/^c0108ec2:	85 c0                	test   %eax,%eax$/;"	l
c0108ec4	obj/kernel.asm	/^c0108ec4:	74 17                	je     c0108edd <user_mem_check+0xd4>$/;"	l
c0108ec6	obj/kernel.asm	/^c0108ec6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ec9	obj/kernel.asm	/^c0108ec9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108ecc	obj/kernel.asm	/^c0108ecc:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0108ed1	obj/kernel.asm	/^c0108ed1:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0108ed4	obj/kernel.asm	/^c0108ed4:	76 07                	jbe    c0108edd <user_mem_check+0xd4>$/;"	l
c0108ed6	obj/kernel.asm	/^c0108ed6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108edb	obj/kernel.asm	/^c0108edb:	eb 4d                	jmp    c0108f2a <user_mem_check+0x121>$/;"	l
c0108edd	obj/kernel.asm	/^c0108edd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ee0	obj/kernel.asm	/^c0108ee0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108ee3	obj/kernel.asm	/^c0108ee3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108ee6	obj/kernel.asm	/^c0108ee6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108ee9	obj/kernel.asm	/^c0108ee9:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0108eec	obj/kernel.asm	/^c0108eec:	0f 82 6c ff ff ff    	jb     c0108e5e <user_mem_check+0x55>$/;"	l
c0108ef2	obj/kernel.asm	/^c0108ef2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108ef7	obj/kernel.asm	/^c0108ef7:	eb 31                	jmp    c0108f2a <user_mem_check+0x121>$/;"	l
c0108ef9	obj/kernel.asm	/^c0108ef9:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c0108f00	obj/kernel.asm	/^c0108f00:	76 23                	jbe    c0108f25 <user_mem_check+0x11c>$/;"	l
c0108f02	obj/kernel.asm	/^c0108f02:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108f05	obj/kernel.asm	/^c0108f05:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108f08	obj/kernel.asm	/^c0108f08:	01 d0                	add    %edx,%eax$/;"	l
c0108f0a	obj/kernel.asm	/^c0108f0a:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108f0d	obj/kernel.asm	/^c0108f0d:	76 16                	jbe    c0108f25 <user_mem_check+0x11c>$/;"	l
c0108f0f	obj/kernel.asm	/^c0108f0f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108f12	obj/kernel.asm	/^c0108f12:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108f15	obj/kernel.asm	/^c0108f15:	01 d0                	add    %edx,%eax$/;"	l
c0108f17	obj/kernel.asm	/^c0108f17:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c0108f1c	obj/kernel.asm	/^c0108f1c:	77 07                	ja     c0108f25 <user_mem_check+0x11c>$/;"	l
c0108f1e	obj/kernel.asm	/^c0108f1e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108f23	obj/kernel.asm	/^c0108f23:	eb 05                	jmp    c0108f2a <user_mem_check+0x121>$/;"	l
c0108f25	obj/kernel.asm	/^c0108f25:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108f2a	obj/kernel.asm	/^c0108f2a:	c9                   	leave  $/;"	l
c0108f2b	obj/kernel.asm	/^c0108f2b:	c3                   	ret    $/;"	l
c0108f2c	obj/kernel.asm	/^c0108f2c <page2ppn>:$/;"	l
c0108f2c	obj/kernel.asm	/^c0108f2c:	55                   	push   %ebp$/;"	l
c0108f2d	obj/kernel.asm	/^c0108f2d:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f2f	obj/kernel.asm	/^c0108f2f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108f32	obj/kernel.asm	/^c0108f32:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c0108f37	obj/kernel.asm	/^c0108f37:	29 c2                	sub    %eax,%edx$/;"	l
c0108f39	obj/kernel.asm	/^c0108f39:	89 d0                	mov    %edx,%eax$/;"	l
c0108f3b	obj/kernel.asm	/^c0108f3b:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0108f3e	obj/kernel.asm	/^c0108f3e:	5d                   	pop    %ebp$/;"	l
c0108f3f	obj/kernel.asm	/^c0108f3f:	c3                   	ret    $/;"	l
c0108f40	obj/kernel.asm	/^c0108f40 <page2pa>:$/;"	l
c0108f40	obj/kernel.asm	/^c0108f40:	55                   	push   %ebp$/;"	l
c0108f41	obj/kernel.asm	/^c0108f41:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f43	obj/kernel.asm	/^c0108f43:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108f46	obj/kernel.asm	/^c0108f46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f49	obj/kernel.asm	/^c0108f49:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108f4c	obj/kernel.asm	/^c0108f4c:	e8 db ff ff ff       	call   c0108f2c <page2ppn>$/;"	l
c0108f51	obj/kernel.asm	/^c0108f51:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108f54	obj/kernel.asm	/^c0108f54:	c9                   	leave  $/;"	l
c0108f55	obj/kernel.asm	/^c0108f55:	c3                   	ret    $/;"	l
c0108f56	obj/kernel.asm	/^c0108f56 <page2kva>:$/;"	l
c0108f56	obj/kernel.asm	/^c0108f56:	55                   	push   %ebp$/;"	l
c0108f57	obj/kernel.asm	/^c0108f57:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f59	obj/kernel.asm	/^c0108f59:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108f5c	obj/kernel.asm	/^c0108f5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f5f	obj/kernel.asm	/^c0108f5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108f62	obj/kernel.asm	/^c0108f62:	e8 d9 ff ff ff       	call   c0108f40 <page2pa>$/;"	l
c0108f67	obj/kernel.asm	/^c0108f67:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108f6a	obj/kernel.asm	/^c0108f6a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f6d	obj/kernel.asm	/^c0108f6d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0108f70	obj/kernel.asm	/^c0108f70:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108f73	obj/kernel.asm	/^c0108f73:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0108f78	obj/kernel.asm	/^c0108f78:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0108f7b	obj/kernel.asm	/^c0108f7b:	72 23                	jb     c0108fa0 <page2kva+0x4a>$/;"	l
c0108f7d	obj/kernel.asm	/^c0108f7d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f80	obj/kernel.asm	/^c0108f80:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0108f84	obj/kernel.asm	/^c0108f84:	c7 44 24 08 f4 da 10 	movl   $0xc010daf4,0x8(%esp)$/;"	l
c0108f8b	obj/kernel.asm	/^c0108f8b:	c0 $/;"	l
c0108f8c	obj/kernel.asm	/^c0108f8c:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0108f93	obj/kernel.asm	/^c0108f93:	00 $/;"	l
c0108f94	obj/kernel.asm	/^c0108f94:	c7 04 24 17 db 10 c0 	movl   $0xc010db17,(%esp)$/;"	l
c0108f9b	obj/kernel.asm	/^c0108f9b:	e8 35 7e ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108fa0	obj/kernel.asm	/^c0108fa0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108fa3	obj/kernel.asm	/^c0108fa3:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0108fa8	obj/kernel.asm	/^c0108fa8:	c9                   	leave  $/;"	l
c0108fa9	obj/kernel.asm	/^c0108fa9:	c3                   	ret    $/;"	l
c0108faa	obj/kernel.asm	/^c0108faa <swapfs_init>:$/;"	l
c0108faa	obj/kernel.asm	/^c0108faa:	55                   	push   %ebp$/;"	l
c0108fab	obj/kernel.asm	/^c0108fab:	89 e5                	mov    %esp,%ebp$/;"	l
c0108fad	obj/kernel.asm	/^c0108fad:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108fb0	obj/kernel.asm	/^c0108fb0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0108fb7	obj/kernel.asm	/^c0108fb7:	e8 69 8b ff ff       	call   c0101b25 <ide_device_valid>$/;"	l
c0108fbc	obj/kernel.asm	/^c0108fbc:	85 c0                	test   %eax,%eax$/;"	l
c0108fbe	obj/kernel.asm	/^c0108fbe:	75 1c                	jne    c0108fdc <swapfs_init+0x32>$/;"	l
c0108fc0	obj/kernel.asm	/^c0108fc0:	c7 44 24 08 25 db 10 	movl   $0xc010db25,0x8(%esp)$/;"	l
c0108fc7	obj/kernel.asm	/^c0108fc7:	c0 $/;"	l
c0108fc8	obj/kernel.asm	/^c0108fc8:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)$/;"	l
c0108fcf	obj/kernel.asm	/^c0108fcf:	00 $/;"	l
c0108fd0	obj/kernel.asm	/^c0108fd0:	c7 04 24 3f db 10 c0 	movl   $0xc010db3f,(%esp)$/;"	l
c0108fd7	obj/kernel.asm	/^c0108fd7:	e8 f9 7d ff ff       	call   c0100dd5 <__panic>$/;"	l
c0108fdc	obj/kernel.asm	/^c0108fdc:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0108fe3	obj/kernel.asm	/^c0108fe3:	e8 7c 8b ff ff       	call   c0101b64 <ide_device_size>$/;"	l
c0108fe8	obj/kernel.asm	/^c0108fe8:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0108feb	obj/kernel.asm	/^c0108feb:	a3 7c f0 19 c0       	mov    %eax,0xc019f07c$/;"	l
c0108ff0	obj/kernel.asm	/^c0108ff0:	c9                   	leave  $/;"	l
c0108ff1	obj/kernel.asm	/^c0108ff1:	c3                   	ret    $/;"	l
c0108ff2	obj/kernel.asm	/^c0108ff2 <swapfs_read>:$/;"	l
c0108ff2	obj/kernel.asm	/^c0108ff2:	55                   	push   %ebp$/;"	l
c0108ff3	obj/kernel.asm	/^c0108ff3:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ff5	obj/kernel.asm	/^c0108ff5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108ff8	obj/kernel.asm	/^c0108ff8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108ffb	obj/kernel.asm	/^c0108ffb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ffe	obj/kernel.asm	/^c0108ffe:	e8 53 ff ff ff       	call   c0108f56 <page2kva>$/;"	l
c0109003	obj/kernel.asm	/^c0109003:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109006	obj/kernel.asm	/^c0109006:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c0109009	obj/kernel.asm	/^c0109009:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010900c	obj/kernel.asm	/^c010900c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109010	obj/kernel.asm	/^c0109010:	74 0b                	je     c010901d <swapfs_read+0x2b>$/;"	l
c0109012	obj/kernel.asm	/^c0109012:	8b 15 7c f0 19 c0    	mov    0xc019f07c,%edx$/;"	l
c0109018	obj/kernel.asm	/^c0109018:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010901b	obj/kernel.asm	/^c010901b:	72 23                	jb     c0109040 <swapfs_read+0x4e>$/;"	l
c010901d	obj/kernel.asm	/^c010901d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109020	obj/kernel.asm	/^c0109020:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109024	obj/kernel.asm	/^c0109024:	c7 44 24 08 50 db 10 	movl   $0xc010db50,0x8(%esp)$/;"	l
c010902b	obj/kernel.asm	/^c010902b:	c0 $/;"	l
c010902c	obj/kernel.asm	/^c010902c:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
c0109033	obj/kernel.asm	/^c0109033:	00 $/;"	l
c0109034	obj/kernel.asm	/^c0109034:	c7 04 24 3f db 10 c0 	movl   $0xc010db3f,(%esp)$/;"	l
c010903b	obj/kernel.asm	/^c010903b:	e8 95 7d ff ff       	call   c0100dd5 <__panic>$/;"	l
c0109040	obj/kernel.asm	/^c0109040:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109043	obj/kernel.asm	/^c0109043:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c0109046	obj/kernel.asm	/^c0109046:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c010904d	obj/kernel.asm	/^c010904d:	00 $/;"	l
c010904e	obj/kernel.asm	/^c010904e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109052	obj/kernel.asm	/^c0109052:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0109056	obj/kernel.asm	/^c0109056:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010905d	obj/kernel.asm	/^c010905d:	e8 41 8b ff ff       	call   c0101ba3 <ide_read_secs>$/;"	l
c0109062	obj/kernel.asm	/^c0109062:	c9                   	leave  $/;"	l
c0109063	obj/kernel.asm	/^c0109063:	c3                   	ret    $/;"	l
c0109064	obj/kernel.asm	/^c0109064 <swapfs_write>:$/;"	l
c0109064	obj/kernel.asm	/^c0109064:	55                   	push   %ebp$/;"	l
c0109065	obj/kernel.asm	/^c0109065:	89 e5                	mov    %esp,%ebp$/;"	l
c0109067	obj/kernel.asm	/^c0109067:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010906a	obj/kernel.asm	/^c010906a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010906d	obj/kernel.asm	/^c010906d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109070	obj/kernel.asm	/^c0109070:	e8 e1 fe ff ff       	call   c0108f56 <page2kva>$/;"	l
c0109075	obj/kernel.asm	/^c0109075:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109078	obj/kernel.asm	/^c0109078:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c010907b	obj/kernel.asm	/^c010907b:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010907e	obj/kernel.asm	/^c010907e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109082	obj/kernel.asm	/^c0109082:	74 0b                	je     c010908f <swapfs_write+0x2b>$/;"	l
c0109084	obj/kernel.asm	/^c0109084:	8b 15 7c f0 19 c0    	mov    0xc019f07c,%edx$/;"	l
c010908a	obj/kernel.asm	/^c010908a:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010908d	obj/kernel.asm	/^c010908d:	72 23                	jb     c01090b2 <swapfs_write+0x4e>$/;"	l
c010908f	obj/kernel.asm	/^c010908f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109092	obj/kernel.asm	/^c0109092:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109096	obj/kernel.asm	/^c0109096:	c7 44 24 08 50 db 10 	movl   $0xc010db50,0x8(%esp)$/;"	l
c010909d	obj/kernel.asm	/^c010909d:	c0 $/;"	l
c010909e	obj/kernel.asm	/^c010909e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
c01090a5	obj/kernel.asm	/^c01090a5:	00 $/;"	l
c01090a6	obj/kernel.asm	/^c01090a6:	c7 04 24 3f db 10 c0 	movl   $0xc010db3f,(%esp)$/;"	l
c01090ad	obj/kernel.asm	/^c01090ad:	e8 23 7d ff ff       	call   c0100dd5 <__panic>$/;"	l
c01090b2	obj/kernel.asm	/^c01090b2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01090b5	obj/kernel.asm	/^c01090b5:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c01090b8	obj/kernel.asm	/^c01090b8:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c01090bf	obj/kernel.asm	/^c01090bf:	00 $/;"	l
c01090c0	obj/kernel.asm	/^c01090c0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01090c4	obj/kernel.asm	/^c01090c4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01090c8	obj/kernel.asm	/^c01090c8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01090cf	obj/kernel.asm	/^c01090cf:	e8 11 8d ff ff       	call   c0101de5 <ide_write_secs>$/;"	l
c01090d4	obj/kernel.asm	/^c01090d4:	c9                   	leave  $/;"	l
c01090d5	obj/kernel.asm	/^c01090d5:	c3                   	ret    $/;"	l
c01090d6	obj/kernel.asm	/^c01090d6 <kernel_thread_entry>:$/;"	l
c01090d6	obj/kernel.asm	/^c01090d6:	52                   	push   %edx$/;"	l
c01090d7	obj/kernel.asm	/^c01090d7:	ff d3                	call   *%ebx$/;"	l
c01090d9	obj/kernel.asm	/^c01090d9:	50                   	push   %eax$/;"	l
c01090da	obj/kernel.asm	/^c01090da:	e8 6a 0c 00 00       	call   c0109d49 <do_exit>$/;"	l
c01090df	obj/kernel.asm	/^c01090df <test_and_set_bit>:$/;"	l
c01090df	obj/kernel.asm	/^c01090df:	55                   	push   %ebp$/;"	l
c01090e0	obj/kernel.asm	/^c01090e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01090e2	obj/kernel.asm	/^c01090e2:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01090e5	obj/kernel.asm	/^c01090e5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01090e8	obj/kernel.asm	/^c01090e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090eb	obj/kernel.asm	/^c01090eb:	0f ab 02             	bts    %eax,(%edx)$/;"	l
c01090ee	obj/kernel.asm	/^c01090ee:	19 c0                	sbb    %eax,%eax$/;"	l
c01090f0	obj/kernel.asm	/^c01090f0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01090f3	obj/kernel.asm	/^c01090f3:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01090f7	obj/kernel.asm	/^c01090f7:	0f 95 c0             	setne  %al$/;"	l
c01090fa	obj/kernel.asm	/^c01090fa:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01090fd	obj/kernel.asm	/^c01090fd:	c9                   	leave  $/;"	l
c01090fe	obj/kernel.asm	/^c01090fe:	c3                   	ret    $/;"	l
c01090ff	obj/kernel.asm	/^c01090ff <test_and_clear_bit>:$/;"	l
c01090ff	obj/kernel.asm	/^c01090ff:	55                   	push   %ebp$/;"	l
c0109100	obj/kernel.asm	/^c0109100:	89 e5                	mov    %esp,%ebp$/;"	l
c0109102	obj/kernel.asm	/^c0109102:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109105	obj/kernel.asm	/^c0109105:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109108	obj/kernel.asm	/^c0109108:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010910b	obj/kernel.asm	/^c010910b:	0f b3 02             	btr    %eax,(%edx)$/;"	l
c010910e	obj/kernel.asm	/^c010910e:	19 c0                	sbb    %eax,%eax$/;"	l
c0109110	obj/kernel.asm	/^c0109110:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109113	obj/kernel.asm	/^c0109113:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0109117	obj/kernel.asm	/^c0109117:	0f 95 c0             	setne  %al$/;"	l
c010911a	obj/kernel.asm	/^c010911a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010911d	obj/kernel.asm	/^c010911d:	c9                   	leave  $/;"	l
c010911e	obj/kernel.asm	/^c010911e:	c3                   	ret    $/;"	l
c010911f	obj/kernel.asm	/^c010911f <__intr_save>:$/;"	l
c010911f	obj/kernel.asm	/^c010911f:	55                   	push   %ebp$/;"	l
c0109120	obj/kernel.asm	/^c0109120:	89 e5                	mov    %esp,%ebp$/;"	l
c0109122	obj/kernel.asm	/^c0109122:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109125	obj/kernel.asm	/^c0109125:	9c                   	pushf  $/;"	l
c0109126	obj/kernel.asm	/^c0109126:	58                   	pop    %eax$/;"	l
c0109127	obj/kernel.asm	/^c0109127:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010912a	obj/kernel.asm	/^c010912a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010912d	obj/kernel.asm	/^c010912d:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0109132	obj/kernel.asm	/^c0109132:	85 c0                	test   %eax,%eax$/;"	l
c0109134	obj/kernel.asm	/^c0109134:	74 0c                	je     c0109142 <__intr_save+0x23>$/;"	l
c0109136	obj/kernel.asm	/^c0109136:	e8 f2 8e ff ff       	call   c010202d <intr_disable>$/;"	l
c010913b	obj/kernel.asm	/^c010913b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109140	obj/kernel.asm	/^c0109140:	eb 05                	jmp    c0109147 <__intr_save+0x28>$/;"	l
c0109142	obj/kernel.asm	/^c0109142:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109147	obj/kernel.asm	/^c0109147:	c9                   	leave  $/;"	l
c0109148	obj/kernel.asm	/^c0109148:	c3                   	ret    $/;"	l
c0109149	obj/kernel.asm	/^c0109149 <__intr_restore>:$/;"	l
c0109149	obj/kernel.asm	/^c0109149:	55                   	push   %ebp$/;"	l
c010914a	obj/kernel.asm	/^c010914a:	89 e5                	mov    %esp,%ebp$/;"	l
c010914c	obj/kernel.asm	/^c010914c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010914f	obj/kernel.asm	/^c010914f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109153	obj/kernel.asm	/^c0109153:	74 05                	je     c010915a <__intr_restore+0x11>$/;"	l
c0109155	obj/kernel.asm	/^c0109155:	e8 cd 8e ff ff       	call   c0102027 <intr_enable>$/;"	l
c010915a	obj/kernel.asm	/^c010915a:	c9                   	leave  $/;"	l
c010915b	obj/kernel.asm	/^c010915b:	c3                   	ret    $/;"	l
c010915c	obj/kernel.asm	/^c010915c <try_lock>:$/;"	l
c010915c	obj/kernel.asm	/^c010915c:	55                   	push   %ebp$/;"	l
c010915d	obj/kernel.asm	/^c010915d:	89 e5                	mov    %esp,%ebp$/;"	l
c010915f	obj/kernel.asm	/^c010915f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109162	obj/kernel.asm	/^c0109162:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109165	obj/kernel.asm	/^c0109165:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109169	obj/kernel.asm	/^c0109169:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0109170	obj/kernel.asm	/^c0109170:	e8 6a ff ff ff       	call   c01090df <test_and_set_bit>$/;"	l
c0109175	obj/kernel.asm	/^c0109175:	85 c0                	test   %eax,%eax$/;"	l
c0109177	obj/kernel.asm	/^c0109177:	0f 94 c0             	sete   %al$/;"	l
c010917a	obj/kernel.asm	/^c010917a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010917d	obj/kernel.asm	/^c010917d:	c9                   	leave  $/;"	l
c010917e	obj/kernel.asm	/^c010917e:	c3                   	ret    $/;"	l
c010917f	obj/kernel.asm	/^c010917f <lock>:$/;"	l
c010917f	obj/kernel.asm	/^c010917f:	55                   	push   %ebp$/;"	l
c0109180	obj/kernel.asm	/^c0109180:	89 e5                	mov    %esp,%ebp$/;"	l
c0109182	obj/kernel.asm	/^c0109182:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109185	obj/kernel.asm	/^c0109185:	eb 05                	jmp    c010918c <lock+0xd>$/;"	l
c0109187	obj/kernel.asm	/^c0109187:	e8 d4 1b 00 00       	call   c010ad60 <schedule>$/;"	l
c010918c	obj/kernel.asm	/^c010918c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010918f	obj/kernel.asm	/^c010918f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109192	obj/kernel.asm	/^c0109192:	e8 c5 ff ff ff       	call   c010915c <try_lock>$/;"	l
c0109197	obj/kernel.asm	/^c0109197:	85 c0                	test   %eax,%eax$/;"	l
c0109199	obj/kernel.asm	/^c0109199:	74 ec                	je     c0109187 <lock+0x8>$/;"	l
c010919b	obj/kernel.asm	/^c010919b:	c9                   	leave  $/;"	l
c010919c	obj/kernel.asm	/^c010919c:	c3                   	ret    $/;"	l
c010919d	obj/kernel.asm	/^c010919d <unlock>:$/;"	l
c010919d	obj/kernel.asm	/^c010919d:	55                   	push   %ebp$/;"	l
c010919e	obj/kernel.asm	/^c010919e:	89 e5                	mov    %esp,%ebp$/;"	l
c01091a0	obj/kernel.asm	/^c01091a0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01091a3	obj/kernel.asm	/^c01091a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091a6	obj/kernel.asm	/^c01091a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01091aa	obj/kernel.asm	/^c01091aa:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c01091b1	obj/kernel.asm	/^c01091b1:	e8 49 ff ff ff       	call   c01090ff <test_and_clear_bit>$/;"	l
c01091b6	obj/kernel.asm	/^c01091b6:	85 c0                	test   %eax,%eax$/;"	l
c01091b8	obj/kernel.asm	/^c01091b8:	75 1c                	jne    c01091d6 <unlock+0x39>$/;"	l
c01091ba	obj/kernel.asm	/^c01091ba:	c7 44 24 08 70 db 10 	movl   $0xc010db70,0x8(%esp)$/;"	l
c01091c1	obj/kernel.asm	/^c01091c1:	c0 $/;"	l
c01091c2	obj/kernel.asm	/^c01091c2:	c7 44 24 04 34 00 00 	movl   $0x34,0x4(%esp)$/;"	l
c01091c9	obj/kernel.asm	/^c01091c9:	00 $/;"	l
c01091ca	obj/kernel.asm	/^c01091ca:	c7 04 24 80 db 10 c0 	movl   $0xc010db80,(%esp)$/;"	l
c01091d1	obj/kernel.asm	/^c01091d1:	e8 ff 7b ff ff       	call   c0100dd5 <__panic>$/;"	l
c01091d6	obj/kernel.asm	/^c01091d6:	c9                   	leave  $/;"	l
c01091d7	obj/kernel.asm	/^c01091d7:	c3                   	ret    $/;"	l
c01091d8	obj/kernel.asm	/^c01091d8 <page2ppn>:$/;"	l
c01091d8	obj/kernel.asm	/^c01091d8:	55                   	push   %ebp$/;"	l
c01091d9	obj/kernel.asm	/^c01091d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01091db	obj/kernel.asm	/^c01091db:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01091de	obj/kernel.asm	/^c01091de:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c01091e3	obj/kernel.asm	/^c01091e3:	29 c2                	sub    %eax,%edx$/;"	l
c01091e5	obj/kernel.asm	/^c01091e5:	89 d0                	mov    %edx,%eax$/;"	l
c01091e7	obj/kernel.asm	/^c01091e7:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c01091ea	obj/kernel.asm	/^c01091ea:	5d                   	pop    %ebp$/;"	l
c01091eb	obj/kernel.asm	/^c01091eb:	c3                   	ret    $/;"	l
c01091ec	obj/kernel.asm	/^c01091ec <page2pa>:$/;"	l
c01091ec	obj/kernel.asm	/^c01091ec:	55                   	push   %ebp$/;"	l
c01091ed	obj/kernel.asm	/^c01091ed:	89 e5                	mov    %esp,%ebp$/;"	l
c01091ef	obj/kernel.asm	/^c01091ef:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01091f2	obj/kernel.asm	/^c01091f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091f5	obj/kernel.asm	/^c01091f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01091f8	obj/kernel.asm	/^c01091f8:	e8 db ff ff ff       	call   c01091d8 <page2ppn>$/;"	l
c01091fd	obj/kernel.asm	/^c01091fd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0109200	obj/kernel.asm	/^c0109200:	c9                   	leave  $/;"	l
c0109201	obj/kernel.asm	/^c0109201:	c3                   	ret    $/;"	l
c0109202	obj/kernel.asm	/^c0109202 <pa2page>:$/;"	l
c0109202	obj/kernel.asm	/^c0109202:	55                   	push   %ebp$/;"	l
c0109203	obj/kernel.asm	/^c0109203:	89 e5                	mov    %esp,%ebp$/;"	l
c0109205	obj/kernel.asm	/^c0109205:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109208	obj/kernel.asm	/^c0109208:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010920b	obj/kernel.asm	/^c010920b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010920e	obj/kernel.asm	/^c010920e:	89 c2                	mov    %eax,%edx$/;"	l
c0109210	obj/kernel.asm	/^c0109210:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0109215	obj/kernel.asm	/^c0109215:	39 c2                	cmp    %eax,%edx$/;"	l
c0109217	obj/kernel.asm	/^c0109217:	72 1c                	jb     c0109235 <pa2page+0x33>$/;"	l
c0109219	obj/kernel.asm	/^c0109219:	c7 44 24 08 94 db 10 	movl   $0xc010db94,0x8(%esp)$/;"	l
c0109220	obj/kernel.asm	/^c0109220:	c0 $/;"	l
c0109221	obj/kernel.asm	/^c0109221:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0109228	obj/kernel.asm	/^c0109228:	00 $/;"	l
c0109229	obj/kernel.asm	/^c0109229:	c7 04 24 b3 db 10 c0 	movl   $0xc010dbb3,(%esp)$/;"	l
c0109230	obj/kernel.asm	/^c0109230:	e8 a0 7b ff ff       	call   c0100dd5 <__panic>$/;"	l
c0109235	obj/kernel.asm	/^c0109235:	a1 cc ef 19 c0       	mov    0xc019efcc,%eax$/;"	l
c010923a	obj/kernel.asm	/^c010923a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010923d	obj/kernel.asm	/^c010923d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0109240	obj/kernel.asm	/^c0109240:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0109243	obj/kernel.asm	/^c0109243:	01 d0                	add    %edx,%eax$/;"	l
c0109245	obj/kernel.asm	/^c0109245:	c9                   	leave  $/;"	l
c0109246	obj/kernel.asm	/^c0109246:	c3                   	ret    $/;"	l
c0109247	obj/kernel.asm	/^c0109247 <page2kva>:$/;"	l
c0109247	obj/kernel.asm	/^c0109247:	55                   	push   %ebp$/;"	l
c0109248	obj/kernel.asm	/^c0109248:	89 e5                	mov    %esp,%ebp$/;"	l
c010924a	obj/kernel.asm	/^c010924a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010924d	obj/kernel.asm	/^c010924d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109250	obj/kernel.asm	/^c0109250:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109253	obj/kernel.asm	/^c0109253:	e8 94 ff ff ff       	call   c01091ec <page2pa>$/;"	l
c0109258	obj/kernel.asm	/^c0109258:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010925b	obj/kernel.asm	/^c010925b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010925e	obj/kernel.asm	/^c010925e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0109261	obj/kernel.asm	/^c0109261:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109264	obj/kernel.asm	/^c0109264:	a1 e0 ce 19 c0       	mov    0xc019cee0,%eax$/;"	l
c0109269	obj/kernel.asm	/^c0109269:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010926c	obj/kernel.asm	/^c010926c:	72 23                	jb     c0109291 <page2kva+0x4a>$/;"	l
c010926e	obj/kernel.asm	/^c010926e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109271	obj/kernel.asm	/^c0109271:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109275	obj/kernel.asm	/^c0109275:	c7 44 24 08 c4 db 10 	movl   $0xc010dbc4,0x8(%esp)$/;"	l
c010927c	obj/kernel.asm	/^c010927c:	c0 $/;"	l
c010927d	obj/kernel.asm	/^c010927d:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0109284	obj/kernel.asm	/^c0109284:	00 $/;"	l
c0109285	obj/kernel.asm	/^c0109285:	c7 04 24 b3 db 10 c0 	movl   $0xc010dbb3,(%esp)$/;"	l
c010928c	obj/kernel.asm	/^c010928c:	e8 44 7b ff ff       	call   c0100dd5 <__panic>$/;"	l
c0109291	obj/kernel.asm	/^c0109291:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109294	obj/kernel.asm	/^c0109294:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0109299	obj/kernel.asm	/^c0109299:	c9                   	leave  $/;"	l
c010929a	obj/kernel.asm	/^c010929a:	c3                   	ret    $/;"	l
c010929b	obj/kernel.asm	/^c010929b <kva2page>:$/;"	l
c010929b	obj/kernel.asm	/^c010929b:	55                   	push   %ebp$/;"	l
c010929c	obj/kernel.asm	/^c010929c:	89 e5                	mov    %esp,%ebp$/;"	l
c010929e	obj/kernel.asm	/^c010929e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01092a1	obj/kernel.asm	/^c01092a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092a4	obj/kernel.asm	/^c01092a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092a7	obj/kernel.asm	/^c01092a7:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c01092ae	obj/kernel.asm	/^c01092ae:	77 23                	ja     c01092d3 <kva2page+0x38>$/;"	l
c01092b0	obj/kernel.asm	/^c01092b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01092b3	obj/kernel.asm	/^c01092b3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01092b7	obj/kernel.asm	/^c01092b7:	c7 44 24 08 e8 db 10 	movl   $0xc010dbe8,0x8(%esp)$/;"	l
c01092be	obj/kernel.asm	/^c01092be:	c0 $/;"	l
c01092bf	obj/kernel.asm	/^c01092bf:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c01092c6	obj/kernel.asm	/^c01092c6:	00 $/;"	l
c01092c7	obj/kernel.asm	/^c01092c7:	c7 04 24 b3 db 10 c0 	movl   $0xc010dbb3,(%esp)$/;"	l
c01092ce	obj/kernel.asm	/^c01092ce:	e8 02 7b ff ff       	call   c0100dd5 <__panic>$/;"	l
c01092d3	obj/kernel.asm	/^c01092d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01092d6	obj/kernel.asm	/^c01092d6:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01092db	obj/kernel.asm	/^c01092db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01092de	obj/kernel.asm	/^c01092de:	e8 1f ff ff ff       	call   c0109202 <pa2page>$/;"	l
c01092e3	obj/kernel.asm	/^c01092e3:	c9                   	leave  $/;"	l
c01092e4	obj/kernel.asm	/^c01092e4:	c3                   	ret    $/;"	l
c01092e5	obj/kernel.asm	/^c01092e5 <mm_count_inc>:$/;"	l
c01092e5	obj/kernel.asm	/^c01092e5:	55                   	push   %ebp$/;"	l
c01092e6	obj/kernel.asm	/^c01092e6:	89 e5                	mov    %esp,%ebp$/;"	l
c01092e8	obj/kernel.asm	/^c01092e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092eb	obj/kernel.asm	/^c01092eb:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01092ee	obj/kernel.asm	/^c01092ee:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01092f1	obj/kernel.asm	/^c01092f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092f4	obj/kernel.asm	/^c01092f4:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c01092f7	obj/kernel.asm	/^c01092f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092fa	obj/kernel.asm	/^c01092fa:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01092fd	obj/kernel.asm	/^c01092fd:	5d                   	pop    %ebp$/;"	l
c01092fe	obj/kernel.asm	/^c01092fe:	c3                   	ret    $/;"	l
c01092ff	obj/kernel.asm	/^c01092ff <mm_count_dec>:$/;"	l
c01092ff	obj/kernel.asm	/^c01092ff:	55                   	push   %ebp$/;"	l
c0109300	obj/kernel.asm	/^c0109300:	89 e5                	mov    %esp,%ebp$/;"	l
c0109302	obj/kernel.asm	/^c0109302:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109305	obj/kernel.asm	/^c0109305:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109308	obj/kernel.asm	/^c0109308:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010930b	obj/kernel.asm	/^c010930b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010930e	obj/kernel.asm	/^c010930e:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109311	obj/kernel.asm	/^c0109311:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109314	obj/kernel.asm	/^c0109314:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109317	obj/kernel.asm	/^c0109317:	5d                   	pop    %ebp$/;"	l
c0109318	obj/kernel.asm	/^c0109318:	c3                   	ret    $/;"	l
c0109319	obj/kernel.asm	/^c0109319 <lock_mm>:$/;"	l
c0109319	obj/kernel.asm	/^c0109319:	55                   	push   %ebp$/;"	l
c010931a	obj/kernel.asm	/^c010931a:	89 e5                	mov    %esp,%ebp$/;"	l
c010931c	obj/kernel.asm	/^c010931c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010931f	obj/kernel.asm	/^c010931f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109323	obj/kernel.asm	/^c0109323:	74 0e                	je     c0109333 <lock_mm+0x1a>$/;"	l
c0109325	obj/kernel.asm	/^c0109325:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109328	obj/kernel.asm	/^c0109328:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010932b	obj/kernel.asm	/^c010932b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010932e	obj/kernel.asm	/^c010932e:	e8 4c fe ff ff       	call   c010917f <lock>$/;"	l
c0109333	obj/kernel.asm	/^c0109333:	c9                   	leave  $/;"	l
c0109334	obj/kernel.asm	/^c0109334:	c3                   	ret    $/;"	l
c0109335	obj/kernel.asm	/^c0109335 <unlock_mm>:$/;"	l
c0109335	obj/kernel.asm	/^c0109335:	55                   	push   %ebp$/;"	l
c0109336	obj/kernel.asm	/^c0109336:	89 e5                	mov    %esp,%ebp$/;"	l
c0109338	obj/kernel.asm	/^c0109338:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010933b	obj/kernel.asm	/^c010933b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010933f	obj/kernel.asm	/^c010933f:	74 0e                	je     c010934f <unlock_mm+0x1a>$/;"	l
c0109341	obj/kernel.asm	/^c0109341:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109344	obj/kernel.asm	/^c0109344:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0109347	obj/kernel.asm	/^c0109347:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010934a	obj/kernel.asm	/^c010934a:	e8 4e fe ff ff       	call   c010919d <unlock>$/;"	l
c010934f	obj/kernel.asm	/^c010934f:	c9                   	leave  $/;"	l
c0109350	obj/kernel.asm	/^c0109350:	c3                   	ret    $/;"	l
c0109351	obj/kernel.asm	/^c0109351 <alloc_proc>:$/;"	l
c0109351	obj/kernel.asm	/^c0109351:	55                   	push   %ebp$/;"	l
c0109352	obj/kernel.asm	/^c0109352:	89 e5                	mov    %esp,%ebp$/;"	l
c0109354	obj/kernel.asm	/^c0109354:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109357	obj/kernel.asm	/^c0109357:	c7 04 24 7c 00 00 00 	movl   $0x7c,(%esp)$/;"	l
c010935e	obj/kernel.asm	/^c010935e:	e8 71 b8 ff ff       	call   c0104bd4 <kmalloc>$/;"	l
c0109363	obj/kernel.asm	/^c0109363:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109366	obj/kernel.asm	/^c0109366:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010936a	obj/kernel.asm	/^c010936a:	0f 84 a1 00 00 00    	je     c0109411 <alloc_proc+0xc0>$/;"	l
c0109370	obj/kernel.asm	/^c0109370:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109373	obj/kernel.asm	/^c0109373:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0109379	obj/kernel.asm	/^c0109379:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010937c	obj/kernel.asm	/^c010937c:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c0109383	obj/kernel.asm	/^c0109383:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109386	obj/kernel.asm	/^c0109386:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010938d	obj/kernel.asm	/^c010938d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109390	obj/kernel.asm	/^c0109390:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0109397	obj/kernel.asm	/^c0109397:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010939a	obj/kernel.asm	/^c010939a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c01093a1	obj/kernel.asm	/^c01093a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01093a4	obj/kernel.asm	/^c01093a4:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c01093ab	obj/kernel.asm	/^c01093ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01093ae	obj/kernel.asm	/^c01093ae:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c01093b5	obj/kernel.asm	/^c01093b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01093b8	obj/kernel.asm	/^c01093b8:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01093bb	obj/kernel.asm	/^c01093bb:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)$/;"	l
c01093c2	obj/kernel.asm	/^c01093c2:	00 $/;"	l
c01093c3	obj/kernel.asm	/^c01093c3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01093ca	obj/kernel.asm	/^c01093ca:	00 $/;"	l
c01093cb	obj/kernel.asm	/^c01093cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01093ce	obj/kernel.asm	/^c01093ce:	e8 f8 26 00 00       	call   c010bacb <memset>$/;"	l
c01093d3	obj/kernel.asm	/^c01093d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01093d6	obj/kernel.asm	/^c01093d6:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c01093dd	obj/kernel.asm	/^c01093dd:	8b 15 c8 ef 19 c0    	mov    0xc019efc8,%edx$/;"	l
c01093e3	obj/kernel.asm	/^c01093e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01093e6	obj/kernel.asm	/^c01093e6:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c01093e9	obj/kernel.asm	/^c01093e9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01093ec	obj/kernel.asm	/^c01093ec:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c01093f3	obj/kernel.asm	/^c01093f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01093f6	obj/kernel.asm	/^c01093f6:	83 c0 48             	add    $0x48,%eax$/;"	l
c01093f9	obj/kernel.asm	/^c01093f9:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)$/;"	l
c0109400	obj/kernel.asm	/^c0109400:	00 $/;"	l
c0109401	obj/kernel.asm	/^c0109401:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109408	obj/kernel.asm	/^c0109408:	00 $/;"	l
c0109409	obj/kernel.asm	/^c0109409:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010940c	obj/kernel.asm	/^c010940c:	e8 ba 26 00 00       	call   c010bacb <memset>$/;"	l
c0109411	obj/kernel.asm	/^c0109411:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109414	obj/kernel.asm	/^c0109414:	c9                   	leave  $/;"	l
c0109415	obj/kernel.asm	/^c0109415:	c3                   	ret    $/;"	l
c0109416	obj/kernel.asm	/^c0109416 <set_proc_name>:$/;"	l
c0109416	obj/kernel.asm	/^c0109416:	55                   	push   %ebp$/;"	l
c0109417	obj/kernel.asm	/^c0109417:	89 e5                	mov    %esp,%ebp$/;"	l
c0109419	obj/kernel.asm	/^c0109419:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010941c	obj/kernel.asm	/^c010941c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010941f	obj/kernel.asm	/^c010941f:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109422	obj/kernel.asm	/^c0109422:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c0109429	obj/kernel.asm	/^c0109429:	00 $/;"	l
c010942a	obj/kernel.asm	/^c010942a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109431	obj/kernel.asm	/^c0109431:	00 $/;"	l
c0109432	obj/kernel.asm	/^c0109432:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109435	obj/kernel.asm	/^c0109435:	e8 91 26 00 00       	call   c010bacb <memset>$/;"	l
c010943a	obj/kernel.asm	/^c010943a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010943d	obj/kernel.asm	/^c010943d:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c0109440	obj/kernel.asm	/^c0109440:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)$/;"	l
c0109447	obj/kernel.asm	/^c0109447:	00 $/;"	l
c0109448	obj/kernel.asm	/^c0109448:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010944b	obj/kernel.asm	/^c010944b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010944f	obj/kernel.asm	/^c010944f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109452	obj/kernel.asm	/^c0109452:	e8 56 27 00 00       	call   c010bbad <memcpy>$/;"	l
c0109457	obj/kernel.asm	/^c0109457:	c9                   	leave  $/;"	l
c0109458	obj/kernel.asm	/^c0109458:	c3                   	ret    $/;"	l
c0109459	obj/kernel.asm	/^c0109459 <get_proc_name>:$/;"	l
c0109459	obj/kernel.asm	/^c0109459:	55                   	push   %ebp$/;"	l
c010945a	obj/kernel.asm	/^c010945a:	89 e5                	mov    %esp,%ebp$/;"	l
c010945c	obj/kernel.asm	/^c010945c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010945f	obj/kernel.asm	/^c010945f:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c0109466	obj/kernel.asm	/^c0109466:	00 $/;"	l
c0109467	obj/kernel.asm	/^c0109467:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010946e	obj/kernel.asm	/^c010946e:	00 $/;"	l
c010946f	obj/kernel.asm	/^c010946f:	c7 04 24 a4 ef 19 c0 	movl   $0xc019efa4,(%esp)$/;"	l
c0109476	obj/kernel.asm	/^c0109476:	e8 50 26 00 00       	call   c010bacb <memset>$/;"	l
c010947b	obj/kernel.asm	/^c010947b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010947e	obj/kernel.asm	/^c010947e:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109481	obj/kernel.asm	/^c0109481:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)$/;"	l
c0109488	obj/kernel.asm	/^c0109488:	00 $/;"	l
c0109489	obj/kernel.asm	/^c0109489:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010948d	obj/kernel.asm	/^c010948d:	c7 04 24 a4 ef 19 c0 	movl   $0xc019efa4,(%esp)$/;"	l
c0109494	obj/kernel.asm	/^c0109494:	e8 14 27 00 00       	call   c010bbad <memcpy>$/;"	l
c0109499	obj/kernel.asm	/^c0109499:	c9                   	leave  $/;"	l
c010949a	obj/kernel.asm	/^c010949a:	c3                   	ret    $/;"	l
c010949b	obj/kernel.asm	/^c010949b <set_links>:$/;"	l
c010949b	obj/kernel.asm	/^c010949b:	55                   	push   %ebp$/;"	l
c010949c	obj/kernel.asm	/^c010949c:	89 e5                	mov    %esp,%ebp$/;"	l
c010949e	obj/kernel.asm	/^c010949e:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01094a1	obj/kernel.asm	/^c01094a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094a4	obj/kernel.asm	/^c01094a4:	83 c0 58             	add    $0x58,%eax$/;"	l
c01094a7	obj/kernel.asm	/^c01094a7:	c7 45 fc b0 f0 19 c0 	movl   $0xc019f0b0,-0x4(%ebp)$/;"	l
c01094ae	obj/kernel.asm	/^c01094ae:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01094b1	obj/kernel.asm	/^c01094b1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01094b4	obj/kernel.asm	/^c01094b4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01094b7	obj/kernel.asm	/^c01094b7:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01094ba	obj/kernel.asm	/^c01094ba:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01094bd	obj/kernel.asm	/^c01094bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094c0	obj/kernel.asm	/^c01094c0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01094c3	obj/kernel.asm	/^c01094c3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01094c6	obj/kernel.asm	/^c01094c6:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01094c9	obj/kernel.asm	/^c01094c9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01094cc	obj/kernel.asm	/^c01094cc:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01094cf	obj/kernel.asm	/^c01094cf:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01094d2	obj/kernel.asm	/^c01094d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01094d5	obj/kernel.asm	/^c01094d5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01094d8	obj/kernel.asm	/^c01094d8:	89 10                	mov    %edx,(%eax)$/;"	l
c01094da	obj/kernel.asm	/^c01094da:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01094dd	obj/kernel.asm	/^c01094dd:	8b 10                	mov    (%eax),%edx$/;"	l
c01094df	obj/kernel.asm	/^c01094df:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01094e2	obj/kernel.asm	/^c01094e2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01094e5	obj/kernel.asm	/^c01094e5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01094e8	obj/kernel.asm	/^c01094e8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01094eb	obj/kernel.asm	/^c01094eb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01094ee	obj/kernel.asm	/^c01094ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01094f1	obj/kernel.asm	/^c01094f1:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01094f4	obj/kernel.asm	/^c01094f4:	89 10                	mov    %edx,(%eax)$/;"	l
c01094f6	obj/kernel.asm	/^c01094f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094f9	obj/kernel.asm	/^c01094f9:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
c0109500	obj/kernel.asm	/^c0109500:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109503	obj/kernel.asm	/^c0109503:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109506	obj/kernel.asm	/^c0109506:	8b 50 70             	mov    0x70(%eax),%edx$/;"	l
c0109509	obj/kernel.asm	/^c0109509:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010950c	obj/kernel.asm	/^c010950c:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c010950f	obj/kernel.asm	/^c010950f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109512	obj/kernel.asm	/^c0109512:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0109515	obj/kernel.asm	/^c0109515:	85 c0                	test   %eax,%eax$/;"	l
c0109517	obj/kernel.asm	/^c0109517:	74 0c                	je     c0109525 <set_links+0x8a>$/;"	l
c0109519	obj/kernel.asm	/^c0109519:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010951c	obj/kernel.asm	/^c010951c:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010951f	obj/kernel.asm	/^c010951f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109522	obj/kernel.asm	/^c0109522:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0109525	obj/kernel.asm	/^c0109525:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109528	obj/kernel.asm	/^c0109528:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010952b	obj/kernel.asm	/^c010952b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010952e	obj/kernel.asm	/^c010952e:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109531	obj/kernel.asm	/^c0109531:	a1 a0 ef 19 c0       	mov    0xc019efa0,%eax$/;"	l
c0109536	obj/kernel.asm	/^c0109536:	83 c0 01             	add    $0x1,%eax$/;"	l
c0109539	obj/kernel.asm	/^c0109539:	a3 a0 ef 19 c0       	mov    %eax,0xc019efa0$/;"	l
c010953e	obj/kernel.asm	/^c010953e:	c9                   	leave  $/;"	l
c010953f	obj/kernel.asm	/^c010953f:	c3                   	ret    $/;"	l
c0109540	obj/kernel.asm	/^c0109540 <remove_links>:$/;"	l
c0109540	obj/kernel.asm	/^c0109540:	55                   	push   %ebp$/;"	l
c0109541	obj/kernel.asm	/^c0109541:	89 e5                	mov    %esp,%ebp$/;"	l
c0109543	obj/kernel.asm	/^c0109543:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109546	obj/kernel.asm	/^c0109546:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109549	obj/kernel.asm	/^c0109549:	83 c0 58             	add    $0x58,%eax$/;"	l
c010954c	obj/kernel.asm	/^c010954c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010954f	obj/kernel.asm	/^c010954f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109552	obj/kernel.asm	/^c0109552:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109555	obj/kernel.asm	/^c0109555:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0109558	obj/kernel.asm	/^c0109558:	8b 12                	mov    (%edx),%edx$/;"	l
c010955a	obj/kernel.asm	/^c010955a:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010955d	obj/kernel.asm	/^c010955d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109560	obj/kernel.asm	/^c0109560:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109563	obj/kernel.asm	/^c0109563:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109566	obj/kernel.asm	/^c0109566:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109569	obj/kernel.asm	/^c0109569:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010956c	obj/kernel.asm	/^c010956c:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010956f	obj/kernel.asm	/^c010956f:	89 10                	mov    %edx,(%eax)$/;"	l
c0109571	obj/kernel.asm	/^c0109571:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109574	obj/kernel.asm	/^c0109574:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0109577	obj/kernel.asm	/^c0109577:	85 c0                	test   %eax,%eax$/;"	l
c0109579	obj/kernel.asm	/^c0109579:	74 0f                	je     c010958a <remove_links+0x4a>$/;"	l
c010957b	obj/kernel.asm	/^c010957b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010957e	obj/kernel.asm	/^c010957e:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0109581	obj/kernel.asm	/^c0109581:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109584	obj/kernel.asm	/^c0109584:	8b 52 74             	mov    0x74(%edx),%edx$/;"	l
c0109587	obj/kernel.asm	/^c0109587:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c010958a	obj/kernel.asm	/^c010958a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010958d	obj/kernel.asm	/^c010958d:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c0109590	obj/kernel.asm	/^c0109590:	85 c0                	test   %eax,%eax$/;"	l
c0109592	obj/kernel.asm	/^c0109592:	74 11                	je     c01095a5 <remove_links+0x65>$/;"	l
c0109594	obj/kernel.asm	/^c0109594:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109597	obj/kernel.asm	/^c0109597:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010959a	obj/kernel.asm	/^c010959a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010959d	obj/kernel.asm	/^c010959d:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c01095a0	obj/kernel.asm	/^c01095a0:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c01095a3	obj/kernel.asm	/^c01095a3:	eb 0f                	jmp    c01095b4 <remove_links+0x74>$/;"	l
c01095a5	obj/kernel.asm	/^c01095a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095a8	obj/kernel.asm	/^c01095a8:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01095ab	obj/kernel.asm	/^c01095ab:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01095ae	obj/kernel.asm	/^c01095ae:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c01095b1	obj/kernel.asm	/^c01095b1:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c01095b4	obj/kernel.asm	/^c01095b4:	a1 a0 ef 19 c0       	mov    0xc019efa0,%eax$/;"	l
c01095b9	obj/kernel.asm	/^c01095b9:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01095bc	obj/kernel.asm	/^c01095bc:	a3 a0 ef 19 c0       	mov    %eax,0xc019efa0$/;"	l
c01095c1	obj/kernel.asm	/^c01095c1:	c9                   	leave  $/;"	l
c01095c2	obj/kernel.asm	/^c01095c2:	c3                   	ret    $/;"	l
c01095c3	obj/kernel.asm	/^c01095c3 <get_pid>:$/;"	l
c01095c3	obj/kernel.asm	/^c01095c3:	55                   	push   %ebp$/;"	l
c01095c4	obj/kernel.asm	/^c01095c4:	89 e5                	mov    %esp,%ebp$/;"	l
c01095c6	obj/kernel.asm	/^c01095c6:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01095c9	obj/kernel.asm	/^c01095c9:	c7 45 f8 b0 f0 19 c0 	movl   $0xc019f0b0,-0x8(%ebp)$/;"	l
c01095d0	obj/kernel.asm	/^c01095d0:	a1 80 aa 12 c0       	mov    0xc012aa80,%eax$/;"	l
c01095d5	obj/kernel.asm	/^c01095d5:	83 c0 01             	add    $0x1,%eax$/;"	l
c01095d8	obj/kernel.asm	/^c01095d8:	a3 80 aa 12 c0       	mov    %eax,0xc012aa80$/;"	l
c01095dd	obj/kernel.asm	/^c01095dd:	a1 80 aa 12 c0       	mov    0xc012aa80,%eax$/;"	l
c01095e2	obj/kernel.asm	/^c01095e2:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c01095e7	obj/kernel.asm	/^c01095e7:	7e 0c                	jle    c01095f5 <get_pid+0x32>$/;"	l
c01095e9	obj/kernel.asm	/^c01095e9:	c7 05 80 aa 12 c0 01 	movl   $0x1,0xc012aa80$/;"	l
c01095f0	obj/kernel.asm	/^c01095f0:	00 00 00 $/;"	l
c01095f3	obj/kernel.asm	/^c01095f3:	eb 13                	jmp    c0109608 <get_pid+0x45>$/;"	l
c01095f5	obj/kernel.asm	/^c01095f5:	8b 15 80 aa 12 c0    	mov    0xc012aa80,%edx$/;"	l
c01095fb	obj/kernel.asm	/^c01095fb:	a1 84 aa 12 c0       	mov    0xc012aa84,%eax$/;"	l
c0109600	obj/kernel.asm	/^c0109600:	39 c2                	cmp    %eax,%edx$/;"	l
c0109602	obj/kernel.asm	/^c0109602:	0f 8c ac 00 00 00    	jl     c01096b4 <get_pid+0xf1>$/;"	l
c0109608	obj/kernel.asm	/^c0109608:	c7 05 84 aa 12 c0 00 	movl   $0x2000,0xc012aa84$/;"	l
c010960f	obj/kernel.asm	/^c010960f:	20 00 00 $/;"	l
c0109612	obj/kernel.asm	/^c0109612:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109615	obj/kernel.asm	/^c0109615:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109618	obj/kernel.asm	/^c0109618:	eb 7f                	jmp    c0109699 <get_pid+0xd6>$/;"	l
c010961a	obj/kernel.asm	/^c010961a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010961d	obj/kernel.asm	/^c010961d:	83 e8 58             	sub    $0x58,%eax$/;"	l
c0109620	obj/kernel.asm	/^c0109620:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109623	obj/kernel.asm	/^c0109623:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109626	obj/kernel.asm	/^c0109626:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109629	obj/kernel.asm	/^c0109629:	a1 80 aa 12 c0       	mov    0xc012aa80,%eax$/;"	l
c010962e	obj/kernel.asm	/^c010962e:	39 c2                	cmp    %eax,%edx$/;"	l
c0109630	obj/kernel.asm	/^c0109630:	75 3e                	jne    c0109670 <get_pid+0xad>$/;"	l
c0109632	obj/kernel.asm	/^c0109632:	a1 80 aa 12 c0       	mov    0xc012aa80,%eax$/;"	l
c0109637	obj/kernel.asm	/^c0109637:	83 c0 01             	add    $0x1,%eax$/;"	l
c010963a	obj/kernel.asm	/^c010963a:	a3 80 aa 12 c0       	mov    %eax,0xc012aa80$/;"	l
c010963f	obj/kernel.asm	/^c010963f:	8b 15 80 aa 12 c0    	mov    0xc012aa80,%edx$/;"	l
c0109645	obj/kernel.asm	/^c0109645:	a1 84 aa 12 c0       	mov    0xc012aa84,%eax$/;"	l
c010964a	obj/kernel.asm	/^c010964a:	39 c2                	cmp    %eax,%edx$/;"	l
c010964c	obj/kernel.asm	/^c010964c:	7c 4b                	jl     c0109699 <get_pid+0xd6>$/;"	l
c010964e	obj/kernel.asm	/^c010964e:	a1 80 aa 12 c0       	mov    0xc012aa80,%eax$/;"	l
c0109653	obj/kernel.asm	/^c0109653:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c0109658	obj/kernel.asm	/^c0109658:	7e 0a                	jle    c0109664 <get_pid+0xa1>$/;"	l
c010965a	obj/kernel.asm	/^c010965a:	c7 05 80 aa 12 c0 01 	movl   $0x1,0xc012aa80$/;"	l
c0109661	obj/kernel.asm	/^c0109661:	00 00 00 $/;"	l
c0109664	obj/kernel.asm	/^c0109664:	c7 05 84 aa 12 c0 00 	movl   $0x2000,0xc012aa84$/;"	l
c010966b	obj/kernel.asm	/^c010966b:	20 00 00 $/;"	l
c010966e	obj/kernel.asm	/^c010966e:	eb a2                	jmp    c0109612 <get_pid+0x4f>$/;"	l
c0109670	obj/kernel.asm	/^c0109670:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109673	obj/kernel.asm	/^c0109673:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109676	obj/kernel.asm	/^c0109676:	a1 80 aa 12 c0       	mov    0xc012aa80,%eax$/;"	l
c010967b	obj/kernel.asm	/^c010967b:	39 c2                	cmp    %eax,%edx$/;"	l
c010967d	obj/kernel.asm	/^c010967d:	7e 1a                	jle    c0109699 <get_pid+0xd6>$/;"	l
c010967f	obj/kernel.asm	/^c010967f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109682	obj/kernel.asm	/^c0109682:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109685	obj/kernel.asm	/^c0109685:	a1 84 aa 12 c0       	mov    0xc012aa84,%eax$/;"	l
c010968a	obj/kernel.asm	/^c010968a:	39 c2                	cmp    %eax,%edx$/;"	l
c010968c	obj/kernel.asm	/^c010968c:	7d 0b                	jge    c0109699 <get_pid+0xd6>$/;"	l
c010968e	obj/kernel.asm	/^c010968e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109691	obj/kernel.asm	/^c0109691:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109694	obj/kernel.asm	/^c0109694:	a3 84 aa 12 c0       	mov    %eax,0xc012aa84$/;"	l
c0109699	obj/kernel.asm	/^c0109699:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010969c	obj/kernel.asm	/^c010969c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010969f	obj/kernel.asm	/^c010969f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096a2	obj/kernel.asm	/^c01096a2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01096a5	obj/kernel.asm	/^c01096a5:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01096a8	obj/kernel.asm	/^c01096a8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01096ab	obj/kernel.asm	/^c01096ab:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01096ae	obj/kernel.asm	/^c01096ae:	0f 85 66 ff ff ff    	jne    c010961a <get_pid+0x57>$/;"	l
c01096b4	obj/kernel.asm	/^c01096b4:	a1 80 aa 12 c0       	mov    0xc012aa80,%eax$/;"	l
c01096b9	obj/kernel.asm	/^c01096b9:	c9                   	leave  $/;"	l
c01096ba	obj/kernel.asm	/^c01096ba:	c3                   	ret    $/;"	l
c01096bb	obj/kernel.asm	/^c01096bb <proc_run>:$/;"	l
c01096bb	obj/kernel.asm	/^c01096bb:	55                   	push   %ebp$/;"	l
c01096bc	obj/kernel.asm	/^c01096bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01096be	obj/kernel.asm	/^c01096be:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01096c1	obj/kernel.asm	/^c01096c1:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c01096c6	obj/kernel.asm	/^c01096c6:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c01096c9	obj/kernel.asm	/^c01096c9:	74 63                	je     c010972e <proc_run+0x73>$/;"	l
c01096cb	obj/kernel.asm	/^c01096cb:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c01096d0	obj/kernel.asm	/^c01096d0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01096d3	obj/kernel.asm	/^c01096d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096d6	obj/kernel.asm	/^c01096d6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01096d9	obj/kernel.asm	/^c01096d9:	e8 41 fa ff ff       	call   c010911f <__intr_save>$/;"	l
c01096de	obj/kernel.asm	/^c01096de:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01096e1	obj/kernel.asm	/^c01096e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096e4	obj/kernel.asm	/^c01096e4:	a3 88 cf 19 c0       	mov    %eax,0xc019cf88$/;"	l
c01096e9	obj/kernel.asm	/^c01096e9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096ec	obj/kernel.asm	/^c01096ec:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01096ef	obj/kernel.asm	/^c01096ef:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c01096f4	obj/kernel.asm	/^c01096f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01096f7	obj/kernel.asm	/^c01096f7:	e8 ff b7 ff ff       	call   c0104efb <load_esp0>$/;"	l
c01096fc	obj/kernel.asm	/^c01096fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096ff	obj/kernel.asm	/^c01096ff:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0109702	obj/kernel.asm	/^c0109702:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109705	obj/kernel.asm	/^c0109705:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109708	obj/kernel.asm	/^c0109708:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010970b	obj/kernel.asm	/^c010970b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010970e	obj/kernel.asm	/^c010970e:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c0109711	obj/kernel.asm	/^c0109711:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109714	obj/kernel.asm	/^c0109714:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0109717	obj/kernel.asm	/^c0109717:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010971b	obj/kernel.asm	/^c010971b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010971e	obj/kernel.asm	/^c010971e:	e8 45 15 00 00       	call   c010ac68 <switch_to>$/;"	l
c0109723	obj/kernel.asm	/^c0109723:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109726	obj/kernel.asm	/^c0109726:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109729	obj/kernel.asm	/^c0109729:	e8 1b fa ff ff       	call   c0109149 <__intr_restore>$/;"	l
c010972e	obj/kernel.asm	/^c010972e:	c9                   	leave  $/;"	l
c010972f	obj/kernel.asm	/^c010972f:	c3                   	ret    $/;"	l
c0109730	obj/kernel.asm	/^c0109730 <forkret>:$/;"	l
c0109730	obj/kernel.asm	/^c0109730:	55                   	push   %ebp$/;"	l
c0109731	obj/kernel.asm	/^c0109731:	89 e5                	mov    %esp,%ebp$/;"	l
c0109733	obj/kernel.asm	/^c0109733:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109736	obj/kernel.asm	/^c0109736:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010973b	obj/kernel.asm	/^c010973b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010973e	obj/kernel.asm	/^c010973e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109741	obj/kernel.asm	/^c0109741:	e8 15 93 ff ff       	call   c0102a5b <forkrets>$/;"	l
c0109746	obj/kernel.asm	/^c0109746:	c9                   	leave  $/;"	l
c0109747	obj/kernel.asm	/^c0109747:	c3                   	ret    $/;"	l
c0109748	obj/kernel.asm	/^c0109748 <hash_proc>:$/;"	l
c0109748	obj/kernel.asm	/^c0109748:	55                   	push   %ebp$/;"	l
c0109749	obj/kernel.asm	/^c0109749:	89 e5                	mov    %esp,%ebp$/;"	l
c010974b	obj/kernel.asm	/^c010974b:	53                   	push   %ebx$/;"	l
c010974c	obj/kernel.asm	/^c010974c:	83 ec 34             	sub    $0x34,%esp$/;"	l
c010974f	obj/kernel.asm	/^c010974f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109752	obj/kernel.asm	/^c0109752:	8d 58 60             	lea    0x60(%eax),%ebx$/;"	l
c0109755	obj/kernel.asm	/^c0109755:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109758	obj/kernel.asm	/^c0109758:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010975b	obj/kernel.asm	/^c010975b:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c0109762	obj/kernel.asm	/^c0109762:	00 $/;"	l
c0109763	obj/kernel.asm	/^c0109763:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109766	obj/kernel.asm	/^c0109766:	e8 b3 18 00 00       	call   c010b01e <hash32>$/;"	l
c010976b	obj/kernel.asm	/^c010976b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010976e	obj/kernel.asm	/^c010976e:	05 a0 cf 19 c0       	add    $0xc019cfa0,%eax$/;"	l
c0109773	obj/kernel.asm	/^c0109773:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109776	obj/kernel.asm	/^c0109776:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c0109779	obj/kernel.asm	/^c0109779:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010977c	obj/kernel.asm	/^c010977c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010977f	obj/kernel.asm	/^c010977f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109782	obj/kernel.asm	/^c0109782:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109785	obj/kernel.asm	/^c0109785:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109788	obj/kernel.asm	/^c0109788:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010978b	obj/kernel.asm	/^c010978b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010978e	obj/kernel.asm	/^c010978e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0109791	obj/kernel.asm	/^c0109791:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109794	obj/kernel.asm	/^c0109794:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c0109797	obj/kernel.asm	/^c0109797:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010979a	obj/kernel.asm	/^c010979a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010979d	obj/kernel.asm	/^c010979d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01097a0	obj/kernel.asm	/^c01097a0:	89 10                	mov    %edx,(%eax)$/;"	l
c01097a2	obj/kernel.asm	/^c01097a2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01097a5	obj/kernel.asm	/^c01097a5:	8b 10                	mov    (%eax),%edx$/;"	l
c01097a7	obj/kernel.asm	/^c01097a7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01097aa	obj/kernel.asm	/^c01097aa:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01097ad	obj/kernel.asm	/^c01097ad:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01097b0	obj/kernel.asm	/^c01097b0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01097b3	obj/kernel.asm	/^c01097b3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01097b6	obj/kernel.asm	/^c01097b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01097b9	obj/kernel.asm	/^c01097b9:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01097bc	obj/kernel.asm	/^c01097bc:	89 10                	mov    %edx,(%eax)$/;"	l
c01097be	obj/kernel.asm	/^c01097be:	83 c4 34             	add    $0x34,%esp$/;"	l
c01097c1	obj/kernel.asm	/^c01097c1:	5b                   	pop    %ebx$/;"	l
c01097c2	obj/kernel.asm	/^c01097c2:	5d                   	pop    %ebp$/;"	l
c01097c3	obj/kernel.asm	/^c01097c3:	c3                   	ret    $/;"	l
c01097c4	obj/kernel.asm	/^c01097c4 <unhash_proc>:$/;"	l
c01097c4	obj/kernel.asm	/^c01097c4:	55                   	push   %ebp$/;"	l
c01097c5	obj/kernel.asm	/^c01097c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01097c7	obj/kernel.asm	/^c01097c7:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01097ca	obj/kernel.asm	/^c01097ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097cd	obj/kernel.asm	/^c01097cd:	83 c0 60             	add    $0x60,%eax$/;"	l
c01097d0	obj/kernel.asm	/^c01097d0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01097d3	obj/kernel.asm	/^c01097d3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01097d6	obj/kernel.asm	/^c01097d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01097d9	obj/kernel.asm	/^c01097d9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01097dc	obj/kernel.asm	/^c01097dc:	8b 12                	mov    (%edx),%edx$/;"	l
c01097de	obj/kernel.asm	/^c01097de:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01097e1	obj/kernel.asm	/^c01097e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01097e4	obj/kernel.asm	/^c01097e4:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01097e7	obj/kernel.asm	/^c01097e7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01097ea	obj/kernel.asm	/^c01097ea:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01097ed	obj/kernel.asm	/^c01097ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01097f0	obj/kernel.asm	/^c01097f0:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01097f3	obj/kernel.asm	/^c01097f3:	89 10                	mov    %edx,(%eax)$/;"	l
c01097f5	obj/kernel.asm	/^c01097f5:	c9                   	leave  $/;"	l
c01097f6	obj/kernel.asm	/^c01097f6:	c3                   	ret    $/;"	l
c01097f7	obj/kernel.asm	/^c01097f7 <find_proc>:$/;"	l
c01097f7	obj/kernel.asm	/^c01097f7:	55                   	push   %ebp$/;"	l
c01097f8	obj/kernel.asm	/^c01097f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01097fa	obj/kernel.asm	/^c01097fa:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01097fd	obj/kernel.asm	/^c01097fd:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109801	obj/kernel.asm	/^c0109801:	7e 5f                	jle    c0109862 <find_proc+0x6b>$/;"	l
c0109803	obj/kernel.asm	/^c0109803:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c010980a	obj/kernel.asm	/^c010980a:	7f 56                	jg     c0109862 <find_proc+0x6b>$/;"	l
c010980c	obj/kernel.asm	/^c010980c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010980f	obj/kernel.asm	/^c010980f:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c0109816	obj/kernel.asm	/^c0109816:	00 $/;"	l
c0109817	obj/kernel.asm	/^c0109817:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010981a	obj/kernel.asm	/^c010981a:	e8 ff 17 00 00       	call   c010b01e <hash32>$/;"	l
c010981f	obj/kernel.asm	/^c010981f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109822	obj/kernel.asm	/^c0109822:	05 a0 cf 19 c0       	add    $0xc019cfa0,%eax$/;"	l
c0109827	obj/kernel.asm	/^c0109827:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010982a	obj/kernel.asm	/^c010982a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010982d	obj/kernel.asm	/^c010982d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109830	obj/kernel.asm	/^c0109830:	eb 19                	jmp    c010984b <find_proc+0x54>$/;"	l
c0109832	obj/kernel.asm	/^c0109832:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109835	obj/kernel.asm	/^c0109835:	83 e8 60             	sub    $0x60,%eax$/;"	l
c0109838	obj/kernel.asm	/^c0109838:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010983b	obj/kernel.asm	/^c010983b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010983e	obj/kernel.asm	/^c010983e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109841	obj/kernel.asm	/^c0109841:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109844	obj/kernel.asm	/^c0109844:	75 05                	jne    c010984b <find_proc+0x54>$/;"	l
c0109846	obj/kernel.asm	/^c0109846:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109849	obj/kernel.asm	/^c0109849:	eb 1c                	jmp    c0109867 <find_proc+0x70>$/;"	l
c010984b	obj/kernel.asm	/^c010984b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010984e	obj/kernel.asm	/^c010984e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109851	obj/kernel.asm	/^c0109851:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109854	obj/kernel.asm	/^c0109854:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109857	obj/kernel.asm	/^c0109857:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010985a	obj/kernel.asm	/^c010985a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010985d	obj/kernel.asm	/^c010985d:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0109860	obj/kernel.asm	/^c0109860:	75 d0                	jne    c0109832 <find_proc+0x3b>$/;"	l
c0109862	obj/kernel.asm	/^c0109862:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109867	obj/kernel.asm	/^c0109867:	c9                   	leave  $/;"	l
c0109868	obj/kernel.asm	/^c0109868:	c3                   	ret    $/;"	l
c0109869	obj/kernel.asm	/^c0109869 <kernel_thread>:$/;"	l
c0109869	obj/kernel.asm	/^c0109869:	55                   	push   %ebp$/;"	l
c010986a	obj/kernel.asm	/^c010986a:	89 e5                	mov    %esp,%ebp$/;"	l
c010986c	obj/kernel.asm	/^c010986c:	83 ec 68             	sub    $0x68,%esp$/;"	l
c010986f	obj/kernel.asm	/^c010986f:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c0109876	obj/kernel.asm	/^c0109876:	00 $/;"	l
c0109877	obj/kernel.asm	/^c0109877:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010987e	obj/kernel.asm	/^c010987e:	00 $/;"	l
c010987f	obj/kernel.asm	/^c010987f:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c0109882	obj/kernel.asm	/^c0109882:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109885	obj/kernel.asm	/^c0109885:	e8 41 22 00 00       	call   c010bacb <memset>$/;"	l
c010988a	obj/kernel.asm	/^c010988a:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c0109896	obj/kernel.asm	/^c0109896:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010989a	obj/kernel.asm	/^c010989a:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c010989e	obj/kernel.asm	/^c010989e:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c01098a2	obj/kernel.asm	/^c01098a2:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c01098a6	obj/kernel.asm	/^c01098a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098a9	obj/kernel.asm	/^c01098a9:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01098ac	obj/kernel.asm	/^c01098ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01098af	obj/kernel.asm	/^c01098af:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01098b2	obj/kernel.asm	/^c01098b2:	b8 d6 90 10 c0       	mov    $0xc01090d6,%eax$/;"	l
c01098b7	obj/kernel.asm	/^c01098b7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01098ba	obj/kernel.asm	/^c01098ba:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01098bd	obj/kernel.asm	/^c01098bd:	80 cc 01             	or     $0x1,%ah$/;"	l
c01098c0	obj/kernel.asm	/^c01098c0:	89 c2                	mov    %eax,%edx$/;"	l
c01098c2	obj/kernel.asm	/^c01098c2:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c01098c5	obj/kernel.asm	/^c01098c5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01098c9	obj/kernel.asm	/^c01098c9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01098d0	obj/kernel.asm	/^c01098d0:	00 $/;"	l
c01098d1	obj/kernel.asm	/^c01098d1:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01098d4	obj/kernel.asm	/^c01098d4:	e8 25 03 00 00       	call   c0109bfe <do_fork>$/;"	l
c01098d9	obj/kernel.asm	/^c01098d9:	c9                   	leave  $/;"	l
c01098da	obj/kernel.asm	/^c01098da:	c3                   	ret    $/;"	l
c01098db	obj/kernel.asm	/^c01098db <setup_kstack>:$/;"	l
c01098db	obj/kernel.asm	/^c01098db:	55                   	push   %ebp$/;"	l
c01098dc	obj/kernel.asm	/^c01098dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01098de	obj/kernel.asm	/^c01098de:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01098e1	obj/kernel.asm	/^c01098e1:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c01098e8	obj/kernel.asm	/^c01098e8:	e8 5c b7 ff ff       	call   c0105049 <alloc_pages>$/;"	l
c01098ed	obj/kernel.asm	/^c01098ed:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01098f0	obj/kernel.asm	/^c01098f0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01098f4	obj/kernel.asm	/^c01098f4:	74 1a                	je     c0109910 <setup_kstack+0x35>$/;"	l
c01098f6	obj/kernel.asm	/^c01098f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01098f9	obj/kernel.asm	/^c01098f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01098fc	obj/kernel.asm	/^c01098fc:	e8 46 f9 ff ff       	call   c0109247 <page2kva>$/;"	l
c0109901	obj/kernel.asm	/^c0109901:	89 c2                	mov    %eax,%edx$/;"	l
c0109903	obj/kernel.asm	/^c0109903:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109906	obj/kernel.asm	/^c0109906:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0109909	obj/kernel.asm	/^c0109909:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010990e	obj/kernel.asm	/^c010990e:	eb 05                	jmp    c0109915 <setup_kstack+0x3a>$/;"	l
c0109910	obj/kernel.asm	/^c0109910:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109915	obj/kernel.asm	/^c0109915:	c9                   	leave  $/;"	l
c0109916	obj/kernel.asm	/^c0109916:	c3                   	ret    $/;"	l
c0109917	obj/kernel.asm	/^c0109917 <put_kstack>:$/;"	l
c0109917	obj/kernel.asm	/^c0109917:	55                   	push   %ebp$/;"	l
c0109918	obj/kernel.asm	/^c0109918:	89 e5                	mov    %esp,%ebp$/;"	l
c010991a	obj/kernel.asm	/^c010991a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010991d	obj/kernel.asm	/^c010991d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109920	obj/kernel.asm	/^c0109920:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109923	obj/kernel.asm	/^c0109923:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109926	obj/kernel.asm	/^c0109926:	e8 70 f9 ff ff       	call   c010929b <kva2page>$/;"	l
c010992b	obj/kernel.asm	/^c010992b:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c0109932	obj/kernel.asm	/^c0109932:	00 $/;"	l
c0109933	obj/kernel.asm	/^c0109933:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109936	obj/kernel.asm	/^c0109936:	e8 79 b7 ff ff       	call   c01050b4 <free_pages>$/;"	l
c010993b	obj/kernel.asm	/^c010993b:	c9                   	leave  $/;"	l
c010993c	obj/kernel.asm	/^c010993c:	c3                   	ret    $/;"	l
c010993d	obj/kernel.asm	/^c010993d <setup_pgdir>:$/;"	l
c010993d	obj/kernel.asm	/^c010993d:	55                   	push   %ebp$/;"	l
c010993e	obj/kernel.asm	/^c010993e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109940	obj/kernel.asm	/^c0109940:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109943	obj/kernel.asm	/^c0109943:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010994a	obj/kernel.asm	/^c010994a:	e8 fa b6 ff ff       	call   c0105049 <alloc_pages>$/;"	l
c010994f	obj/kernel.asm	/^c010994f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109952	obj/kernel.asm	/^c0109952:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109956	obj/kernel.asm	/^c0109956:	75 0a                	jne    c0109962 <setup_pgdir+0x25>$/;"	l
c0109958	obj/kernel.asm	/^c0109958:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010995d	obj/kernel.asm	/^c010995d:	e9 80 00 00 00       	jmp    c01099e2 <setup_pgdir+0xa5>$/;"	l
c0109962	obj/kernel.asm	/^c0109962:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109965	obj/kernel.asm	/^c0109965:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109968	obj/kernel.asm	/^c0109968:	e8 da f8 ff ff       	call   c0109247 <page2kva>$/;"	l
c010996d	obj/kernel.asm	/^c010996d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109970	obj/kernel.asm	/^c0109970:	a1 e4 ce 19 c0       	mov    0xc019cee4,%eax$/;"	l
c0109975	obj/kernel.asm	/^c0109975:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c010997c	obj/kernel.asm	/^c010997c:	00 $/;"	l
c010997d	obj/kernel.asm	/^c010997d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109981	obj/kernel.asm	/^c0109981:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109984	obj/kernel.asm	/^c0109984:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109987	obj/kernel.asm	/^c0109987:	e8 21 22 00 00       	call   c010bbad <memcpy>$/;"	l
c010998c	obj/kernel.asm	/^c010998c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010998f	obj/kernel.asm	/^c010998f:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0109995	obj/kernel.asm	/^c0109995:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109998	obj/kernel.asm	/^c0109998:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010999b	obj/kernel.asm	/^c010999b:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c01099a2	obj/kernel.asm	/^c01099a2:	77 23                	ja     c01099c7 <setup_pgdir+0x8a>$/;"	l
c01099a4	obj/kernel.asm	/^c01099a4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099a7	obj/kernel.asm	/^c01099a7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01099ab	obj/kernel.asm	/^c01099ab:	c7 44 24 08 e8 db 10 	movl   $0xc010dbe8,0x8(%esp)$/;"	l
c01099b2	obj/kernel.asm	/^c01099b2:	c0 $/;"	l
c01099b3	obj/kernel.asm	/^c01099b3:	c7 44 24 04 2c 01 00 	movl   $0x12c,0x4(%esp)$/;"	l
c01099ba	obj/kernel.asm	/^c01099ba:	00 $/;"	l
c01099bb	obj/kernel.asm	/^c01099bb:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c01099c2	obj/kernel.asm	/^c01099c2:	e8 0e 74 ff ff       	call   c0100dd5 <__panic>$/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099ca	obj/kernel.asm	/^c01099ca:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01099cf	obj/kernel.asm	/^c01099cf:	83 c8 03             	or     $0x3,%eax$/;"	l
c01099d2	obj/kernel.asm	/^c01099d2:	89 02                	mov    %eax,(%edx)$/;"	l
c01099d4	obj/kernel.asm	/^c01099d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099d7	obj/kernel.asm	/^c01099d7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01099da	obj/kernel.asm	/^c01099da:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01099dd	obj/kernel.asm	/^c01099dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01099e2	obj/kernel.asm	/^c01099e2:	c9                   	leave  $/;"	l
c01099e3	obj/kernel.asm	/^c01099e3:	c3                   	ret    $/;"	l
c01099e4	obj/kernel.asm	/^c01099e4 <put_pgdir>:$/;"	l
c01099e4	obj/kernel.asm	/^c01099e4:	55                   	push   %ebp$/;"	l
c01099e5	obj/kernel.asm	/^c01099e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01099e7	obj/kernel.asm	/^c01099e7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01099ea	obj/kernel.asm	/^c01099ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099ed	obj/kernel.asm	/^c01099ed:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01099f0	obj/kernel.asm	/^c01099f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01099f3	obj/kernel.asm	/^c01099f3:	e8 a3 f8 ff ff       	call   c010929b <kva2page>$/;"	l
c01099f8	obj/kernel.asm	/^c01099f8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01099ff	obj/kernel.asm	/^c01099ff:	00 $/;"	l
c0109a00	obj/kernel.asm	/^c0109a00:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a03	obj/kernel.asm	/^c0109a03:	e8 ac b6 ff ff       	call   c01050b4 <free_pages>$/;"	l
c0109a08	obj/kernel.asm	/^c0109a08:	c9                   	leave  $/;"	l
c0109a09	obj/kernel.asm	/^c0109a09:	c3                   	ret    $/;"	l
c0109a0a	obj/kernel.asm	/^c0109a0a <copy_mm>:$/;"	l
c0109a0a	obj/kernel.asm	/^c0109a0a:	55                   	push   %ebp$/;"	l
c0109a0b	obj/kernel.asm	/^c0109a0b:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a0d	obj/kernel.asm	/^c0109a0d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109a10	obj/kernel.asm	/^c0109a10:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109a15	obj/kernel.asm	/^c0109a15:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109a18	obj/kernel.asm	/^c0109a18:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109a1b	obj/kernel.asm	/^c0109a1b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0109a1f	obj/kernel.asm	/^c0109a1f:	75 0a                	jne    c0109a2b <copy_mm+0x21>$/;"	l
c0109a21	obj/kernel.asm	/^c0109a21:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109a26	obj/kernel.asm	/^c0109a26:	e9 f9 00 00 00       	jmp    c0109b24 <copy_mm+0x11a>$/;"	l
c0109a2b	obj/kernel.asm	/^c0109a2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a2e	obj/kernel.asm	/^c0109a2e:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c0109a33	obj/kernel.asm	/^c0109a33:	85 c0                	test   %eax,%eax$/;"	l
c0109a35	obj/kernel.asm	/^c0109a35:	74 08                	je     c0109a3f <copy_mm+0x35>$/;"	l
c0109a37	obj/kernel.asm	/^c0109a37:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a3a	obj/kernel.asm	/^c0109a3a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109a3d	obj/kernel.asm	/^c0109a3d:	eb 78                	jmp    c0109ab7 <copy_mm+0xad>$/;"	l
c0109a3f	obj/kernel.asm	/^c0109a3f:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c0109a46	obj/kernel.asm	/^c0109a46:	e8 51 e3 ff ff       	call   c0107d9c <mm_create>$/;"	l
c0109a4b	obj/kernel.asm	/^c0109a4b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109a4e	obj/kernel.asm	/^c0109a4e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109a52	obj/kernel.asm	/^c0109a52:	75 05                	jne    c0109a59 <copy_mm+0x4f>$/;"	l
c0109a54	obj/kernel.asm	/^c0109a54:	e9 c8 00 00 00       	jmp    c0109b21 <copy_mm+0x117>$/;"	l
c0109a59	obj/kernel.asm	/^c0109a59:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a5c	obj/kernel.asm	/^c0109a5c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a5f	obj/kernel.asm	/^c0109a5f:	e8 d9 fe ff ff       	call   c010993d <setup_pgdir>$/;"	l
c0109a64	obj/kernel.asm	/^c0109a64:	85 c0                	test   %eax,%eax$/;"	l
c0109a66	obj/kernel.asm	/^c0109a66:	74 05                	je     c0109a6d <copy_mm+0x63>$/;"	l
c0109a68	obj/kernel.asm	/^c0109a68:	e9 a9 00 00 00       	jmp    c0109b16 <copy_mm+0x10c>$/;"	l
c0109a6d	obj/kernel.asm	/^c0109a6d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a70	obj/kernel.asm	/^c0109a70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a73	obj/kernel.asm	/^c0109a73:	e8 a1 f8 ff ff       	call   c0109319 <lock_mm>$/;"	l
c0109a78	obj/kernel.asm	/^c0109a78:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a7b	obj/kernel.asm	/^c0109a7b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109a7f	obj/kernel.asm	/^c0109a7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a82	obj/kernel.asm	/^c0109a82:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a85	obj/kernel.asm	/^c0109a85:	e8 29 e8 ff ff       	call   c01082b3 <dup_mmap>$/;"	l
c0109a8a	obj/kernel.asm	/^c0109a8a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109a8d	obj/kernel.asm	/^c0109a8d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a90	obj/kernel.asm	/^c0109a90:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a93	obj/kernel.asm	/^c0109a93:	e8 9d f8 ff ff       	call   c0109335 <unlock_mm>$/;"	l
c0109a98	obj/kernel.asm	/^c0109a98:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109a9c	obj/kernel.asm	/^c0109a9c:	74 19                	je     c0109ab7 <copy_mm+0xad>$/;"	l
c0109a9e	obj/kernel.asm	/^c0109a9e:	90                   	nop$/;"	l
c0109a9f	obj/kernel.asm	/^c0109a9f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109aa2	obj/kernel.asm	/^c0109aa2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109aa5	obj/kernel.asm	/^c0109aa5:	e8 0a e9 ff ff       	call   c01083b4 <exit_mmap>$/;"	l
c0109aaa	obj/kernel.asm	/^c0109aaa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109aad	obj/kernel.asm	/^c0109aad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ab0	obj/kernel.asm	/^c0109ab0:	e8 2f ff ff ff       	call   c01099e4 <put_pgdir>$/;"	l
c0109ab5	obj/kernel.asm	/^c0109ab5:	eb 5f                	jmp    c0109b16 <copy_mm+0x10c>$/;"	l
c0109ab7	obj/kernel.asm	/^c0109ab7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109aba	obj/kernel.asm	/^c0109aba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109abd	obj/kernel.asm	/^c0109abd:	e8 23 f8 ff ff       	call   c01092e5 <mm_count_inc>$/;"	l
c0109ac2	obj/kernel.asm	/^c0109ac2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109ac5	obj/kernel.asm	/^c0109ac5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109ac8	obj/kernel.asm	/^c0109ac8:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109acb	obj/kernel.asm	/^c0109acb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ace	obj/kernel.asm	/^c0109ace:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109ad1	obj/kernel.asm	/^c0109ad1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109ad4	obj/kernel.asm	/^c0109ad4:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c0109adb	obj/kernel.asm	/^c0109adb:	77 23                	ja     c0109b00 <copy_mm+0xf6>$/;"	l
c0109add	obj/kernel.asm	/^c0109add:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109ae0	obj/kernel.asm	/^c0109ae0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109ae4	obj/kernel.asm	/^c0109ae4:	c7 44 24 08 e8 db 10 	movl   $0xc010dbe8,0x8(%esp)$/;"	l
c0109aeb	obj/kernel.asm	/^c0109aeb:	c0 $/;"	l
c0109aec	obj/kernel.asm	/^c0109aec:	c7 44 24 04 5b 01 00 	movl   $0x15b,0x4(%esp)$/;"	l
c0109af3	obj/kernel.asm	/^c0109af3:	00 $/;"	l
c0109af4	obj/kernel.asm	/^c0109af4:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c0109afb	obj/kernel.asm	/^c0109afb:	e8 d5 72 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0109b00	obj/kernel.asm	/^c0109b00:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109b03	obj/kernel.asm	/^c0109b03:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c0109b09	obj/kernel.asm	/^c0109b09:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109b0c	obj/kernel.asm	/^c0109b0c:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109b0f	obj/kernel.asm	/^c0109b0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109b14	obj/kernel.asm	/^c0109b14:	eb 0e                	jmp    c0109b24 <copy_mm+0x11a>$/;"	l
c0109b16	obj/kernel.asm	/^c0109b16:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b19	obj/kernel.asm	/^c0109b19:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b1c	obj/kernel.asm	/^c0109b1c:	e8 d4 e5 ff ff       	call   c01080f5 <mm_destroy>$/;"	l
c0109b21	obj/kernel.asm	/^c0109b21:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109b24	obj/kernel.asm	/^c0109b24:	c9                   	leave  $/;"	l
c0109b25	obj/kernel.asm	/^c0109b25:	c3                   	ret    $/;"	l
c0109b26	obj/kernel.asm	/^c0109b26 <copy_thread>:$/;"	l
c0109b26	obj/kernel.asm	/^c0109b26:	55                   	push   %ebp$/;"	l
c0109b27	obj/kernel.asm	/^c0109b27:	89 e5                	mov    %esp,%ebp$/;"	l
c0109b29	obj/kernel.asm	/^c0109b29:	57                   	push   %edi$/;"	l
c0109b2a	obj/kernel.asm	/^c0109b2a:	56                   	push   %esi$/;"	l
c0109b2b	obj/kernel.asm	/^c0109b2b:	53                   	push   %ebx$/;"	l
c0109b2c	obj/kernel.asm	/^c0109b2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b2f	obj/kernel.asm	/^c0109b2f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109b32	obj/kernel.asm	/^c0109b32:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c0109b37	obj/kernel.asm	/^c0109b37:	89 c2                	mov    %eax,%edx$/;"	l
c0109b39	obj/kernel.asm	/^c0109b39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b3c	obj/kernel.asm	/^c0109b3c:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0109b3f	obj/kernel.asm	/^c0109b3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b42	obj/kernel.asm	/^c0109b42:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109b45	obj/kernel.asm	/^c0109b45:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0109b48	obj/kernel.asm	/^c0109b48:	bb 4c 00 00 00       	mov    $0x4c,%ebx$/;"	l
c0109b4d	obj/kernel.asm	/^c0109b4d:	89 c1                	mov    %eax,%ecx$/;"	l
c0109b4f	obj/kernel.asm	/^c0109b4f:	83 e1 01             	and    $0x1,%ecx$/;"	l
c0109b52	obj/kernel.asm	/^c0109b52:	85 c9                	test   %ecx,%ecx$/;"	l
c0109b54	obj/kernel.asm	/^c0109b54:	74 0e                	je     c0109b64 <copy_thread+0x3e>$/;"	l
c0109b56	obj/kernel.asm	/^c0109b56:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
c0109b59	obj/kernel.asm	/^c0109b59:	88 08                	mov    %cl,(%eax)$/;"	l
c0109b5b	obj/kernel.asm	/^c0109b5b:	83 c0 01             	add    $0x1,%eax$/;"	l
c0109b5e	obj/kernel.asm	/^c0109b5e:	83 c2 01             	add    $0x1,%edx$/;"	l
c0109b61	obj/kernel.asm	/^c0109b61:	83 eb 01             	sub    $0x1,%ebx$/;"	l
c0109b64	obj/kernel.asm	/^c0109b64:	89 c1                	mov    %eax,%ecx$/;"	l
c0109b66	obj/kernel.asm	/^c0109b66:	83 e1 02             	and    $0x2,%ecx$/;"	l
c0109b69	obj/kernel.asm	/^c0109b69:	85 c9                	test   %ecx,%ecx$/;"	l
c0109b6b	obj/kernel.asm	/^c0109b6b:	74 0f                	je     c0109b7c <copy_thread+0x56>$/;"	l
c0109b6d	obj/kernel.asm	/^c0109b6d:	0f b7 0a             	movzwl (%edx),%ecx$/;"	l
c0109b70	obj/kernel.asm	/^c0109b70:	66 89 08             	mov    %cx,(%eax)$/;"	l
c0109b73	obj/kernel.asm	/^c0109b73:	83 c0 02             	add    $0x2,%eax$/;"	l
c0109b76	obj/kernel.asm	/^c0109b76:	83 c2 02             	add    $0x2,%edx$/;"	l
c0109b79	obj/kernel.asm	/^c0109b79:	83 eb 02             	sub    $0x2,%ebx$/;"	l
c0109b7c	obj/kernel.asm	/^c0109b7c:	89 d9                	mov    %ebx,%ecx$/;"	l
c0109b7e	obj/kernel.asm	/^c0109b7e:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
c0109b81	obj/kernel.asm	/^c0109b81:	89 c7                	mov    %eax,%edi$/;"	l
c0109b83	obj/kernel.asm	/^c0109b83:	89 d6                	mov    %edx,%esi$/;"	l
c0109b85	obj/kernel.asm	/^c0109b85:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0109b87	obj/kernel.asm	/^c0109b87:	89 f2                	mov    %esi,%edx$/;"	l
c0109b89	obj/kernel.asm	/^c0109b89:	89 f8                	mov    %edi,%eax$/;"	l
c0109b8b	obj/kernel.asm	/^c0109b8b:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
c0109b90	obj/kernel.asm	/^c0109b90:	89 de                	mov    %ebx,%esi$/;"	l
c0109b92	obj/kernel.asm	/^c0109b92:	83 e6 02             	and    $0x2,%esi$/;"	l
c0109b95	obj/kernel.asm	/^c0109b95:	85 f6                	test   %esi,%esi$/;"	l
c0109b97	obj/kernel.asm	/^c0109b97:	74 0b                	je     c0109ba4 <copy_thread+0x7e>$/;"	l
c0109b99	obj/kernel.asm	/^c0109b99:	0f b7 34 0a          	movzwl (%edx,%ecx,1),%esi$/;"	l
c0109b9d	obj/kernel.asm	/^c0109b9d:	66 89 34 08          	mov    %si,(%eax,%ecx,1)$/;"	l
c0109ba1	obj/kernel.asm	/^c0109ba1:	83 c1 02             	add    $0x2,%ecx$/;"	l
c0109ba4	obj/kernel.asm	/^c0109ba4:	83 e3 01             	and    $0x1,%ebx$/;"	l
c0109ba7	obj/kernel.asm	/^c0109ba7:	85 db                	test   %ebx,%ebx$/;"	l
c0109ba9	obj/kernel.asm	/^c0109ba9:	74 07                	je     c0109bb2 <copy_thread+0x8c>$/;"	l
c0109bab	obj/kernel.asm	/^c0109bab:	0f b6 14 0a          	movzbl (%edx,%ecx,1),%edx$/;"	l
c0109baf	obj/kernel.asm	/^c0109baf:	88 14 08             	mov    %dl,(%eax,%ecx,1)$/;"	l
c0109bb2	obj/kernel.asm	/^c0109bb2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bb5	obj/kernel.asm	/^c0109bb5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109bb8	obj/kernel.asm	/^c0109bb8:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c0109bbf	obj/kernel.asm	/^c0109bbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bc2	obj/kernel.asm	/^c0109bc2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109bc5	obj/kernel.asm	/^c0109bc5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109bc8	obj/kernel.asm	/^c0109bc8:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c0109bcb	obj/kernel.asm	/^c0109bcb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bce	obj/kernel.asm	/^c0109bce:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109bd1	obj/kernel.asm	/^c0109bd1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109bd4	obj/kernel.asm	/^c0109bd4:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c0109bd7	obj/kernel.asm	/^c0109bd7:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c0109bda	obj/kernel.asm	/^c0109bda:	80 ce 02             	or     $0x2,%dh$/;"	l
c0109bdd	obj/kernel.asm	/^c0109bdd:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109be0	obj/kernel.asm	/^c0109be0:	ba 30 97 10 c0       	mov    $0xc0109730,%edx$/;"	l
c0109be5	obj/kernel.asm	/^c0109be5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109be8	obj/kernel.asm	/^c0109be8:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0109beb	obj/kernel.asm	/^c0109beb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bee	obj/kernel.asm	/^c0109bee:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109bf1	obj/kernel.asm	/^c0109bf1:	89 c2                	mov    %eax,%edx$/;"	l
c0109bf3	obj/kernel.asm	/^c0109bf3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bf6	obj/kernel.asm	/^c0109bf6:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c0109bf9	obj/kernel.asm	/^c0109bf9:	5b                   	pop    %ebx$/;"	l
c0109bfa	obj/kernel.asm	/^c0109bfa:	5e                   	pop    %esi$/;"	l
c0109bfb	obj/kernel.asm	/^c0109bfb:	5f                   	pop    %edi$/;"	l
c0109bfc	obj/kernel.asm	/^c0109bfc:	5d                   	pop    %ebp$/;"	l
c0109bfd	obj/kernel.asm	/^c0109bfd:	c3                   	ret    $/;"	l
c0109bfe	obj/kernel.asm	/^c0109bfe <do_fork>:$/;"	l
c0109bfe	obj/kernel.asm	/^c0109bfe:	55                   	push   %ebp$/;"	l
c0109bff	obj/kernel.asm	/^c0109bff:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c01	obj/kernel.asm	/^c0109c01:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0109c04	obj/kernel.asm	/^c0109c04:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c0109c0b	obj/kernel.asm	/^c0109c0b:	a1 a0 ef 19 c0       	mov    0xc019efa0,%eax$/;"	l
c0109c10	obj/kernel.asm	/^c0109c10:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0109c15	obj/kernel.asm	/^c0109c15:	7e 05                	jle    c0109c1c <do_fork+0x1e>$/;"	l
c0109c17	obj/kernel.asm	/^c0109c17:	e9 19 01 00 00       	jmp    c0109d35 <do_fork+0x137>$/;"	l
c0109c1c	obj/kernel.asm	/^c0109c1c:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0109c23	obj/kernel.asm	/^c0109c23:	e8 29 f7 ff ff       	call   c0109351 <alloc_proc>$/;"	l
c0109c28	obj/kernel.asm	/^c0109c28:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109c2b	obj/kernel.asm	/^c0109c2b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109c2f	obj/kernel.asm	/^c0109c2f:	75 05                	jne    c0109c36 <do_fork+0x38>$/;"	l
c0109c31	obj/kernel.asm	/^c0109c31:	e9 ff 00 00 00       	jmp    c0109d35 <do_fork+0x137>$/;"	l
c0109c36	obj/kernel.asm	/^c0109c36:	8b 15 88 cf 19 c0    	mov    0xc019cf88,%edx$/;"	l
c0109c3c	obj/kernel.asm	/^c0109c3c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c3f	obj/kernel.asm	/^c0109c3f:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0109c42	obj/kernel.asm	/^c0109c42:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c45	obj/kernel.asm	/^c0109c45:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c48	obj/kernel.asm	/^c0109c48:	e8 8e fc ff ff       	call   c01098db <setup_kstack>$/;"	l
c0109c4d	obj/kernel.asm	/^c0109c4d:	85 c0                	test   %eax,%eax$/;"	l
c0109c4f	obj/kernel.asm	/^c0109c4f:	74 05                	je     c0109c56 <do_fork+0x58>$/;"	l
c0109c51	obj/kernel.asm	/^c0109c51:	e9 e4 00 00 00       	jmp    c0109d3a <do_fork+0x13c>$/;"	l
c0109c56	obj/kernel.asm	/^c0109c56:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c59	obj/kernel.asm	/^c0109c59:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109c5d	obj/kernel.asm	/^c0109c5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c60	obj/kernel.asm	/^c0109c60:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c63	obj/kernel.asm	/^c0109c63:	e8 a2 fd ff ff       	call   c0109a0a <copy_mm>$/;"	l
c0109c68	obj/kernel.asm	/^c0109c68:	85 c0                	test   %eax,%eax$/;"	l
c0109c6a	obj/kernel.asm	/^c0109c6a:	74 11                	je     c0109c7d <do_fork+0x7f>$/;"	l
c0109c6c	obj/kernel.asm	/^c0109c6c:	90                   	nop$/;"	l
c0109c6d	obj/kernel.asm	/^c0109c6d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c70	obj/kernel.asm	/^c0109c70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c73	obj/kernel.asm	/^c0109c73:	e8 9f fc ff ff       	call   c0109917 <put_kstack>$/;"	l
c0109c78	obj/kernel.asm	/^c0109c78:	e9 bd 00 00 00       	jmp    c0109d3a <do_fork+0x13c>$/;"	l
c0109c7d	obj/kernel.asm	/^c0109c7d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109c80	obj/kernel.asm	/^c0109c80:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109c84	obj/kernel.asm	/^c0109c84:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109c87	obj/kernel.asm	/^c0109c87:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109c8b	obj/kernel.asm	/^c0109c8b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c8e	obj/kernel.asm	/^c0109c8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c91	obj/kernel.asm	/^c0109c91:	e8 90 fe ff ff       	call   c0109b26 <copy_thread>$/;"	l
c0109c96	obj/kernel.asm	/^c0109c96:	e8 84 f4 ff ff       	call   c010911f <__intr_save>$/;"	l
c0109c9b	obj/kernel.asm	/^c0109c9b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109c9e	obj/kernel.asm	/^c0109c9e:	e8 20 f9 ff ff       	call   c01095c3 <get_pid>$/;"	l
c0109ca3	obj/kernel.asm	/^c0109ca3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0109ca6	obj/kernel.asm	/^c0109ca6:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0109ca9	obj/kernel.asm	/^c0109ca9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109cac	obj/kernel.asm	/^c0109cac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109caf	obj/kernel.asm	/^c0109caf:	e8 94 fa ff ff       	call   c0109748 <hash_proc>$/;"	l
c0109cb4	obj/kernel.asm	/^c0109cb4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109cb7	obj/kernel.asm	/^c0109cb7:	83 c0 58             	add    $0x58,%eax$/;"	l
c0109cba	obj/kernel.asm	/^c0109cba:	c7 45 e8 b0 f0 19 c0 	movl   $0xc019f0b0,-0x18(%ebp)$/;"	l
c0109cc1	obj/kernel.asm	/^c0109cc1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109cc4	obj/kernel.asm	/^c0109cc4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109cc7	obj/kernel.asm	/^c0109cc7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109cca	obj/kernel.asm	/^c0109cca:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109ccd	obj/kernel.asm	/^c0109ccd:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109cd0	obj/kernel.asm	/^c0109cd0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109cd3	obj/kernel.asm	/^c0109cd3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109cd6	obj/kernel.asm	/^c0109cd6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0109cd9	obj/kernel.asm	/^c0109cd9:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c0109cdc	obj/kernel.asm	/^c0109cdc:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0109cdf	obj/kernel.asm	/^c0109cdf:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0109ce2	obj/kernel.asm	/^c0109ce2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0109ce5	obj/kernel.asm	/^c0109ce5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109ce8	obj/kernel.asm	/^c0109ce8:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0109ceb	obj/kernel.asm	/^c0109ceb:	89 10                	mov    %edx,(%eax)$/;"	l
c0109ced	obj/kernel.asm	/^c0109ced:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109cf0	obj/kernel.asm	/^c0109cf0:	8b 10                	mov    (%eax),%edx$/;"	l
c0109cf2	obj/kernel.asm	/^c0109cf2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0109cf5	obj/kernel.asm	/^c0109cf5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109cf8	obj/kernel.asm	/^c0109cf8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109cfb	obj/kernel.asm	/^c0109cfb:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0109cfe	obj/kernel.asm	/^c0109cfe:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109d01	obj/kernel.asm	/^c0109d01:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109d04	obj/kernel.asm	/^c0109d04:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0109d07	obj/kernel.asm	/^c0109d07:	89 10                	mov    %edx,(%eax)$/;"	l
c0109d09	obj/kernel.asm	/^c0109d09:	a1 a0 ef 19 c0       	mov    0xc019efa0,%eax$/;"	l
c0109d0e	obj/kernel.asm	/^c0109d0e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0109d11	obj/kernel.asm	/^c0109d11:	a3 a0 ef 19 c0       	mov    %eax,0xc019efa0$/;"	l
c0109d16	obj/kernel.asm	/^c0109d16:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109d19	obj/kernel.asm	/^c0109d19:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109d1c	obj/kernel.asm	/^c0109d1c:	e8 28 f4 ff ff       	call   c0109149 <__intr_restore>$/;"	l
c0109d21	obj/kernel.asm	/^c0109d21:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d24	obj/kernel.asm	/^c0109d24:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109d27	obj/kernel.asm	/^c0109d27:	e8 b0 0f 00 00       	call   c010acdc <wakeup_proc>$/;"	l
c0109d2c	obj/kernel.asm	/^c0109d2c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d2f	obj/kernel.asm	/^c0109d2f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109d32	obj/kernel.asm	/^c0109d32:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109d35	obj/kernel.asm	/^c0109d35:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109d38	obj/kernel.asm	/^c0109d38:	eb 0d                	jmp    c0109d47 <do_fork+0x149>$/;"	l
c0109d3a	obj/kernel.asm	/^c0109d3a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d3d	obj/kernel.asm	/^c0109d3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109d40	obj/kernel.asm	/^c0109d40:	e8 aa ae ff ff       	call   c0104bef <kfree>$/;"	l
c0109d45	obj/kernel.asm	/^c0109d45:	eb ee                	jmp    c0109d35 <do_fork+0x137>$/;"	l
c0109d47	obj/kernel.asm	/^c0109d47:	c9                   	leave  $/;"	l
c0109d48	obj/kernel.asm	/^c0109d48:	c3                   	ret    $/;"	l
c0109d49	obj/kernel.asm	/^c0109d49 <do_exit>:$/;"	l
c0109d49	obj/kernel.asm	/^c0109d49:	55                   	push   %ebp$/;"	l
c0109d4a	obj/kernel.asm	/^c0109d4a:	89 e5                	mov    %esp,%ebp$/;"	l
c0109d4c	obj/kernel.asm	/^c0109d4c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109d4f	obj/kernel.asm	/^c0109d4f:	8b 15 88 cf 19 c0    	mov    0xc019cf88,%edx$/;"	l
c0109d55	obj/kernel.asm	/^c0109d55:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c0109d5a	obj/kernel.asm	/^c0109d5a:	39 c2                	cmp    %eax,%edx$/;"	l
c0109d5c	obj/kernel.asm	/^c0109d5c:	75 1c                	jne    c0109d7a <do_exit+0x31>$/;"	l
c0109d5e	obj/kernel.asm	/^c0109d5e:	c7 44 24 08 20 dc 10 	movl   $0xc010dc20,0x8(%esp)$/;"	l
c0109d65	obj/kernel.asm	/^c0109d65:	c0 $/;"	l
c0109d66	obj/kernel.asm	/^c0109d66:	c7 44 24 04 cf 01 00 	movl   $0x1cf,0x4(%esp)$/;"	l
c0109d6d	obj/kernel.asm	/^c0109d6d:	00 $/;"	l
c0109d6e	obj/kernel.asm	/^c0109d6e:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c0109d75	obj/kernel.asm	/^c0109d75:	e8 5b 70 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0109d7a	obj/kernel.asm	/^c0109d7a:	8b 15 88 cf 19 c0    	mov    0xc019cf88,%edx$/;"	l
c0109d80	obj/kernel.asm	/^c0109d80:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c0109d85	obj/kernel.asm	/^c0109d85:	39 c2                	cmp    %eax,%edx$/;"	l
c0109d87	obj/kernel.asm	/^c0109d87:	75 1c                	jne    c0109da5 <do_exit+0x5c>$/;"	l
c0109d89	obj/kernel.asm	/^c0109d89:	c7 44 24 08 30 dc 10 	movl   $0xc010dc30,0x8(%esp)$/;"	l
c0109d90	obj/kernel.asm	/^c0109d90:	c0 $/;"	l
c0109d91	obj/kernel.asm	/^c0109d91:	c7 44 24 04 d2 01 00 	movl   $0x1d2,0x4(%esp)$/;"	l
c0109d98	obj/kernel.asm	/^c0109d98:	00 $/;"	l
c0109d99	obj/kernel.asm	/^c0109d99:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c0109da0	obj/kernel.asm	/^c0109da0:	e8 30 70 ff ff       	call   c0100dd5 <__panic>$/;"	l
c0109da5	obj/kernel.asm	/^c0109da5:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109daa	obj/kernel.asm	/^c0109daa:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109dad	obj/kernel.asm	/^c0109dad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109db0	obj/kernel.asm	/^c0109db0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109db4	obj/kernel.asm	/^c0109db4:	74 4a                	je     c0109e00 <do_exit+0xb7>$/;"	l
c0109db6	obj/kernel.asm	/^c0109db6:	a1 c8 ef 19 c0       	mov    0xc019efc8,%eax$/;"	l
c0109dbb	obj/kernel.asm	/^c0109dbb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109dbe	obj/kernel.asm	/^c0109dbe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109dc1	obj/kernel.asm	/^c0109dc1:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109dc4	obj/kernel.asm	/^c0109dc4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109dc7	obj/kernel.asm	/^c0109dc7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109dca	obj/kernel.asm	/^c0109dca:	e8 30 f5 ff ff       	call   c01092ff <mm_count_dec>$/;"	l
c0109dcf	obj/kernel.asm	/^c0109dcf:	85 c0                	test   %eax,%eax$/;"	l
c0109dd1	obj/kernel.asm	/^c0109dd1:	75 21                	jne    c0109df4 <do_exit+0xab>$/;"	l
c0109dd3	obj/kernel.asm	/^c0109dd3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109dd6	obj/kernel.asm	/^c0109dd6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109dd9	obj/kernel.asm	/^c0109dd9:	e8 d6 e5 ff ff       	call   c01083b4 <exit_mmap>$/;"	l
c0109dde	obj/kernel.asm	/^c0109dde:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109de1	obj/kernel.asm	/^c0109de1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109de4	obj/kernel.asm	/^c0109de4:	e8 fb fb ff ff       	call   c01099e4 <put_pgdir>$/;"	l
c0109de9	obj/kernel.asm	/^c0109de9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109dec	obj/kernel.asm	/^c0109dec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109def	obj/kernel.asm	/^c0109def:	e8 01 e3 ff ff       	call   c01080f5 <mm_destroy>$/;"	l
c0109df4	obj/kernel.asm	/^c0109df4:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109df9	obj/kernel.asm	/^c0109df9:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0109e00	obj/kernel.asm	/^c0109e00:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109e05	obj/kernel.asm	/^c0109e05:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c0109e0b	obj/kernel.asm	/^c0109e0b:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109e10	obj/kernel.asm	/^c0109e10:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109e13	obj/kernel.asm	/^c0109e13:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c0109e16	obj/kernel.asm	/^c0109e16:	e8 04 f3 ff ff       	call   c010911f <__intr_save>$/;"	l
c0109e1b	obj/kernel.asm	/^c0109e1b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109e1e	obj/kernel.asm	/^c0109e1e:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109e23	obj/kernel.asm	/^c0109e23:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109e26	obj/kernel.asm	/^c0109e26:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109e29	obj/kernel.asm	/^c0109e29:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109e2c	obj/kernel.asm	/^c0109e2c:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0109e2f	obj/kernel.asm	/^c0109e2f:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c0109e34	obj/kernel.asm	/^c0109e34:	75 10                	jne    c0109e46 <do_exit+0xfd>$/;"	l
c0109e36	obj/kernel.asm	/^c0109e36:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109e39	obj/kernel.asm	/^c0109e39:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109e3c	obj/kernel.asm	/^c0109e3c:	e8 9b 0e 00 00       	call   c010acdc <wakeup_proc>$/;"	l
c0109e41	obj/kernel.asm	/^c0109e41:	e9 8b 00 00 00       	jmp    c0109ed1 <do_exit+0x188>$/;"	l
c0109e46	obj/kernel.asm	/^c0109e46:	e9 86 00 00 00       	jmp    c0109ed1 <do_exit+0x188>$/;"	l
c0109e4b	obj/kernel.asm	/^c0109e4b:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109e50	obj/kernel.asm	/^c0109e50:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0109e53	obj/kernel.asm	/^c0109e53:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109e56	obj/kernel.asm	/^c0109e56:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109e5b	obj/kernel.asm	/^c0109e5b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109e5e	obj/kernel.asm	/^c0109e5e:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c0109e61	obj/kernel.asm	/^c0109e61:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109e64	obj/kernel.asm	/^c0109e64:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109e67	obj/kernel.asm	/^c0109e67:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
c0109e6e	obj/kernel.asm	/^c0109e6e:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c0109e73	obj/kernel.asm	/^c0109e73:	8b 50 70             	mov    0x70(%eax),%edx$/;"	l
c0109e76	obj/kernel.asm	/^c0109e76:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109e79	obj/kernel.asm	/^c0109e79:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c0109e7c	obj/kernel.asm	/^c0109e7c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109e7f	obj/kernel.asm	/^c0109e7f:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	85 c0                	test   %eax,%eax$/;"	l
c0109e84	obj/kernel.asm	/^c0109e84:	74 0e                	je     c0109e94 <do_exit+0x14b>$/;"	l
c0109e86	obj/kernel.asm	/^c0109e86:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c0109e8b	obj/kernel.asm	/^c0109e8b:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0109e8e	obj/kernel.asm	/^c0109e8e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109e91	obj/kernel.asm	/^c0109e91:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0109e94	obj/kernel.asm	/^c0109e94:	8b 15 84 cf 19 c0    	mov    0xc019cf84,%edx$/;"	l
c0109e9a	obj/kernel.asm	/^c0109e9a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109e9d	obj/kernel.asm	/^c0109e9d:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0109ea0	obj/kernel.asm	/^c0109ea0:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c0109ea5	obj/kernel.asm	/^c0109ea5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109ea8	obj/kernel.asm	/^c0109ea8:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109eae	obj/kernel.asm	/^c0109eae:	8b 00                	mov    (%eax),%eax$/;"	l
c0109eb0	obj/kernel.asm	/^c0109eb0:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109eb3	obj/kernel.asm	/^c0109eb3:	75 1c                	jne    c0109ed1 <do_exit+0x188>$/;"	l
c0109eb5	obj/kernel.asm	/^c0109eb5:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c0109eba	obj/kernel.asm	/^c0109eba:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0109ebd	obj/kernel.asm	/^c0109ebd:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c0109ec2	obj/kernel.asm	/^c0109ec2:	75 0d                	jne    c0109ed1 <do_exit+0x188>$/;"	l
c0109ec4	obj/kernel.asm	/^c0109ec4:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c0109ec9	obj/kernel.asm	/^c0109ec9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ecc	obj/kernel.asm	/^c0109ecc:	e8 0b 0e 00 00       	call   c010acdc <wakeup_proc>$/;"	l
c0109ed1	obj/kernel.asm	/^c0109ed1:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109ed6	obj/kernel.asm	/^c0109ed6:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0109ed9	obj/kernel.asm	/^c0109ed9:	85 c0                	test   %eax,%eax$/;"	l
c0109edb	obj/kernel.asm	/^c0109edb:	0f 85 6a ff ff ff    	jne    c0109e4b <do_exit+0x102>$/;"	l
c0109ee1	obj/kernel.asm	/^c0109ee1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109ee4	obj/kernel.asm	/^c0109ee4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ee7	obj/kernel.asm	/^c0109ee7:	e8 5d f2 ff ff       	call   c0109149 <__intr_restore>$/;"	l
c0109eec	obj/kernel.asm	/^c0109eec:	e8 6f 0e 00 00       	call   c010ad60 <schedule>$/;"	l
c0109ef1	obj/kernel.asm	/^c0109ef1:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109ef6	obj/kernel.asm	/^c0109ef6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109ef9	obj/kernel.asm	/^c0109ef9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109efd	obj/kernel.asm	/^c0109efd:	c7 44 24 08 40 dc 10 	movl   $0xc010dc40,0x8(%esp)$/;"	l
c0109f04	obj/kernel.asm	/^c0109f04:	c0 $/;"	l
c0109f05	obj/kernel.asm	/^c0109f05:	c7 44 24 04 fe 01 00 	movl   $0x1fe,0x4(%esp)$/;"	l
c0109f0c	obj/kernel.asm	/^c0109f0c:	00 $/;"	l
c0109f0d	obj/kernel.asm	/^c0109f0d:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c0109f14	obj/kernel.asm	/^c0109f14:	e8 bc 6e ff ff       	call   c0100dd5 <__panic>$/;"	l
c0109f19	obj/kernel.asm	/^c0109f19 <load_icode>:$/;"	l
c0109f19	obj/kernel.asm	/^c0109f19:	55                   	push   %ebp$/;"	l
c0109f1a	obj/kernel.asm	/^c0109f1a:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f1c	obj/kernel.asm	/^c0109f1c:	83 ec 78             	sub    $0x78,%esp$/;"	l
c0109f1f	obj/kernel.asm	/^c0109f1f:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c0109f24	obj/kernel.asm	/^c0109f24:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109f27	obj/kernel.asm	/^c0109f27:	85 c0                	test   %eax,%eax$/;"	l
c0109f29	obj/kernel.asm	/^c0109f29:	74 1c                	je     c0109f47 <load_icode+0x2e>$/;"	l
c0109f2b	obj/kernel.asm	/^c0109f2b:	c7 44 24 08 60 dc 10 	movl   $0xc010dc60,0x8(%esp)$/;"	l
c0109f32	obj/kernel.asm	/^c0109f32:	c0 $/;"	l
c0109f33	obj/kernel.asm	/^c0109f33:	c7 44 24 04 08 02 00 	movl   $0x208,0x4(%esp)$/;"	l
c0109f3a	obj/kernel.asm	/^c0109f3a:	00 $/;"	l
c0109f3b	obj/kernel.asm	/^c0109f3b:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c0109f42	obj/kernel.asm	/^c0109f42:	e8 8e 6e ff ff       	call   c0100dd5 <__panic>$/;"	l
c0109f47	obj/kernel.asm	/^c0109f47:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0109f4e	obj/kernel.asm	/^c0109f4e:	e8 49 de ff ff       	call   c0107d9c <mm_create>$/;"	l
c0109f53	obj/kernel.asm	/^c0109f53:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0109f56	obj/kernel.asm	/^c0109f56:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0109f5a	obj/kernel.asm	/^c0109f5a:	75 06                	jne    c0109f62 <load_icode+0x49>$/;"	l
c0109f5c	obj/kernel.asm	/^c0109f5c:	90                   	nop$/;"	l
c0109f5d	obj/kernel.asm	/^c0109f5d:	e9 a1 05 00 00       	jmp    c010a503 <load_icode+0x5ea>$/;"	l
c0109f62	obj/kernel.asm	/^c0109f62:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109f65	obj/kernel.asm	/^c0109f65:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109f68	obj/kernel.asm	/^c0109f68:	e8 d0 f9 ff ff       	call   c010993d <setup_pgdir>$/;"	l
c0109f6d	obj/kernel.asm	/^c0109f6d:	85 c0                	test   %eax,%eax$/;"	l
c0109f6f	obj/kernel.asm	/^c0109f6f:	74 05                	je     c0109f76 <load_icode+0x5d>$/;"	l
c0109f71	obj/kernel.asm	/^c0109f71:	e9 a8 05 00 00       	jmp    c010a51e <load_icode+0x605>$/;"	l
c0109f76	obj/kernel.asm	/^c0109f76:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f79	obj/kernel.asm	/^c0109f79:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0109f7c	obj/kernel.asm	/^c0109f7c:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109f7f	obj/kernel.asm	/^c0109f7f:	8b 50 1c             	mov    0x1c(%eax),%edx$/;"	l
c0109f82	obj/kernel.asm	/^c0109f82:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f85	obj/kernel.asm	/^c0109f85:	01 d0                	add    %edx,%eax$/;"	l
c0109f87	obj/kernel.asm	/^c0109f87:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109f8a	obj/kernel.asm	/^c0109f8a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109f8d	obj/kernel.asm	/^c0109f8d:	8b 00                	mov    (%eax),%eax$/;"	l
c0109f8f	obj/kernel.asm	/^c0109f8f:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c0109f94	obj/kernel.asm	/^c0109f94:	74 0c                	je     c0109fa2 <load_icode+0x89>$/;"	l
c0109f96	obj/kernel.asm	/^c0109f96:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c0109f9d	obj/kernel.asm	/^c0109f9d:	e9 71 05 00 00       	jmp    c010a513 <load_icode+0x5fa>$/;"	l
c0109fa2	obj/kernel.asm	/^c0109fa2:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109fa5	obj/kernel.asm	/^c0109fa5:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c0109fa9	obj/kernel.asm	/^c0109fa9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0109fac	obj/kernel.asm	/^c0109fac:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0109faf	obj/kernel.asm	/^c0109faf:	89 c2                	mov    %eax,%edx$/;"	l
c0109fb1	obj/kernel.asm	/^c0109fb1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109fb4	obj/kernel.asm	/^c0109fb4:	01 d0                	add    %edx,%eax$/;"	l
c0109fb6	obj/kernel.asm	/^c0109fb6:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0109fb9	obj/kernel.asm	/^c0109fb9:	e9 13 03 00 00       	jmp    c010a2d1 <load_icode+0x3b8>$/;"	l
c0109fbe	obj/kernel.asm	/^c0109fbe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109fc1	obj/kernel.asm	/^c0109fc1:	8b 00                	mov    (%eax),%eax$/;"	l
c0109fc3	obj/kernel.asm	/^c0109fc3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0109fc6	obj/kernel.asm	/^c0109fc6:	74 05                	je     c0109fcd <load_icode+0xb4>$/;"	l
c0109fc8	obj/kernel.asm	/^c0109fc8:	e9 00 03 00 00       	jmp    c010a2cd <load_icode+0x3b4>$/;"	l
c0109fcd	obj/kernel.asm	/^c0109fcd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109fd0	obj/kernel.asm	/^c0109fd0:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0109fd3	obj/kernel.asm	/^c0109fd3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109fd6	obj/kernel.asm	/^c0109fd6:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109fd9	obj/kernel.asm	/^c0109fd9:	39 c2                	cmp    %eax,%edx$/;"	l
c0109fdb	obj/kernel.asm	/^c0109fdb:	76 0c                	jbe    c0109fe9 <load_icode+0xd0>$/;"	l
c0109fdd	obj/kernel.asm	/^c0109fdd:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c0109fe4	obj/kernel.asm	/^c0109fe4:	e9 1f 05 00 00       	jmp    c010a508 <load_icode+0x5ef>$/;"	l
c0109fe9	obj/kernel.asm	/^c0109fe9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109fec	obj/kernel.asm	/^c0109fec:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109fef	obj/kernel.asm	/^c0109fef:	85 c0                	test   %eax,%eax$/;"	l
c0109ff1	obj/kernel.asm	/^c0109ff1:	75 05                	jne    c0109ff8 <load_icode+0xdf>$/;"	l
c0109ff3	obj/kernel.asm	/^c0109ff3:	e9 d5 02 00 00       	jmp    c010a2cd <load_icode+0x3b4>$/;"	l
c0109ff8	obj/kernel.asm	/^c0109ff8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0109fff	obj/kernel.asm	/^c0109fff:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)$/;"	l
c010a006	obj/kernel.asm	/^c010a006:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a009	obj/kernel.asm	/^c010a009:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a00c	obj/kernel.asm	/^c010a00c:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a00f	obj/kernel.asm	/^c010a00f:	85 c0                	test   %eax,%eax$/;"	l
c010a011	obj/kernel.asm	/^c010a011:	74 04                	je     c010a017 <load_icode+0xfe>$/;"	l
c010a013	obj/kernel.asm	/^c010a013:	83 4d e8 04          	orl    $0x4,-0x18(%ebp)$/;"	l
c010a017	obj/kernel.asm	/^c010a017:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a01a	obj/kernel.asm	/^c010a01a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a01d	obj/kernel.asm	/^c010a01d:	83 e0 02             	and    $0x2,%eax$/;"	l
c010a020	obj/kernel.asm	/^c010a020:	85 c0                	test   %eax,%eax$/;"	l
c010a022	obj/kernel.asm	/^c010a022:	74 04                	je     c010a028 <load_icode+0x10f>$/;"	l
c010a024	obj/kernel.asm	/^c010a024:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c010a028	obj/kernel.asm	/^c010a028:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a02b	obj/kernel.asm	/^c010a02b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a02e	obj/kernel.asm	/^c010a02e:	83 e0 04             	and    $0x4,%eax$/;"	l
c010a031	obj/kernel.asm	/^c010a031:	85 c0                	test   %eax,%eax$/;"	l
c010a033	obj/kernel.asm	/^c010a033:	74 04                	je     c010a039 <load_icode+0x120>$/;"	l
c010a035	obj/kernel.asm	/^c010a035:	83 4d e8 01          	orl    $0x1,-0x18(%ebp)$/;"	l
c010a039	obj/kernel.asm	/^c010a039:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a03c	obj/kernel.asm	/^c010a03c:	83 e0 02             	and    $0x2,%eax$/;"	l
c010a03f	obj/kernel.asm	/^c010a03f:	85 c0                	test   %eax,%eax$/;"	l
c010a041	obj/kernel.asm	/^c010a041:	74 04                	je     c010a047 <load_icode+0x12e>$/;"	l
c010a043	obj/kernel.asm	/^c010a043:	83 4d e4 02          	orl    $0x2,-0x1c(%ebp)$/;"	l
c010a047	obj/kernel.asm	/^c010a047:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a04a	obj/kernel.asm	/^c010a04a:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010a04d	obj/kernel.asm	/^c010a04d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a050	obj/kernel.asm	/^c010a050:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a053	obj/kernel.asm	/^c010a053:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010a05a	obj/kernel.asm	/^c010a05a:	00 $/;"	l
c010a05b	obj/kernel.asm	/^c010a05b:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c010a05e	obj/kernel.asm	/^c010a05e:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c010a062	obj/kernel.asm	/^c010a062:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010a066	obj/kernel.asm	/^c010a066:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a06a	obj/kernel.asm	/^c010a06a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a06d	obj/kernel.asm	/^c010a06d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a070	obj/kernel.asm	/^c010a070:	e8 22 e1 ff ff       	call   c0108197 <mm_map>$/;"	l
c010a075	obj/kernel.asm	/^c010a075:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a078	obj/kernel.asm	/^c010a078:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a07c	obj/kernel.asm	/^c010a07c:	74 05                	je     c010a083 <load_icode+0x16a>$/;"	l
c010a07e	obj/kernel.asm	/^c010a07e:	e9 85 04 00 00       	jmp    c010a508 <load_icode+0x5ef>$/;"	l
c010a083	obj/kernel.asm	/^c010a083:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a086	obj/kernel.asm	/^c010a086:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a089	obj/kernel.asm	/^c010a089:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a08c	obj/kernel.asm	/^c010a08c:	01 d0                	add    %edx,%eax$/;"	l
c010a08e	obj/kernel.asm	/^c010a08e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a091	obj/kernel.asm	/^c010a091:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a094	obj/kernel.asm	/^c010a094:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a097	obj/kernel.asm	/^c010a097:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010a09a	obj/kernel.asm	/^c010a09a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a09d	obj/kernel.asm	/^c010a09d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010a0a0	obj/kernel.asm	/^c010a0a0:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010a0a3	obj/kernel.asm	/^c010a0a3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010a0a8	obj/kernel.asm	/^c010a0a8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010a0ab	obj/kernel.asm	/^c010a0ab:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010a0b2	obj/kernel.asm	/^c010a0b2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0b5	obj/kernel.asm	/^c010a0b5:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a0b8	obj/kernel.asm	/^c010a0b8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0bb	obj/kernel.asm	/^c010a0bb:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a0be	obj/kernel.asm	/^c010a0be:	01 d0                	add    %edx,%eax$/;"	l
c010a0c0	obj/kernel.asm	/^c010a0c0:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010a0c3	obj/kernel.asm	/^c010a0c3:	e9 90 00 00 00       	jmp    c010a158 <load_icode+0x23f>$/;"	l
c010a0c8	obj/kernel.asm	/^c010a0c8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a0cb	obj/kernel.asm	/^c010a0cb:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a0ce	obj/kernel.asm	/^c010a0ce:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a0d1	obj/kernel.asm	/^c010a0d1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010a0d5	obj/kernel.asm	/^c010a0d5:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010a0d8	obj/kernel.asm	/^c010a0d8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010a0dc	obj/kernel.asm	/^c010a0dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a0df	obj/kernel.asm	/^c010a0df:	e8 dd bd ff ff       	call   c0105ec1 <pgdir_alloc_page>$/;"	l
c010a0e4	obj/kernel.asm	/^c010a0e4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a0e7	obj/kernel.asm	/^c010a0e7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a0eb	obj/kernel.asm	/^c010a0eb:	75 05                	jne    c010a0f2 <load_icode+0x1d9>$/;"	l
c010a0ed	obj/kernel.asm	/^c010a0ed:	e9 16 04 00 00       	jmp    c010a508 <load_icode+0x5ef>$/;"	l
c010a0f2	obj/kernel.asm	/^c010a0f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a0f5	obj/kernel.asm	/^c010a0f5:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010a0f8	obj/kernel.asm	/^c010a0f8:	29 c2                	sub    %eax,%edx$/;"	l
c010a0fa	obj/kernel.asm	/^c010a0fa:	89 d0                	mov    %edx,%eax$/;"	l
c010a0fc	obj/kernel.asm	/^c010a0fc:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a0ff	obj/kernel.asm	/^c010a0ff:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010a104	obj/kernel.asm	/^c010a104:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010a107	obj/kernel.asm	/^c010a107:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a10a	obj/kernel.asm	/^c010a10a:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010a111	obj/kernel.asm	/^c010a111:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a114	obj/kernel.asm	/^c010a114:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a117	obj/kernel.asm	/^c010a117:	73 0d                	jae    c010a126 <load_icode+0x20d>$/;"	l
c010a119	obj/kernel.asm	/^c010a119:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a11c	obj/kernel.asm	/^c010a11c:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010a11f	obj/kernel.asm	/^c010a11f:	29 c2                	sub    %eax,%edx$/;"	l
c010a121	obj/kernel.asm	/^c010a121:	89 d0                	mov    %edx,%eax$/;"	l
c010a123	obj/kernel.asm	/^c010a123:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010a126	obj/kernel.asm	/^c010a126:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a129	obj/kernel.asm	/^c010a129:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a12c	obj/kernel.asm	/^c010a12c:	e8 16 f1 ff ff       	call   c0109247 <page2kva>$/;"	l
c010a131	obj/kernel.asm	/^c010a131:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c010a134	obj/kernel.asm	/^c010a134:	01 c2                	add    %eax,%edx$/;"	l
c010a136	obj/kernel.asm	/^c010a136:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a139	obj/kernel.asm	/^c010a139:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a13d	obj/kernel.asm	/^c010a13d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a140	obj/kernel.asm	/^c010a140:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a144	obj/kernel.asm	/^c010a144:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a147	obj/kernel.asm	/^c010a147:	e8 61 1a 00 00       	call   c010bbad <memcpy>$/;"	l
c010a14c	obj/kernel.asm	/^c010a14c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a14f	obj/kernel.asm	/^c010a14f:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010a152	obj/kernel.asm	/^c010a152:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a155	obj/kernel.asm	/^c010a155:	01 45 e0             	add    %eax,-0x20(%ebp)$/;"	l
c010a158	obj/kernel.asm	/^c010a158:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a15b	obj/kernel.asm	/^c010a15b:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a15e	obj/kernel.asm	/^c010a15e:	0f 82 64 ff ff ff    	jb     c010a0c8 <load_icode+0x1af>$/;"	l
c010a164	obj/kernel.asm	/^c010a164:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a167	obj/kernel.asm	/^c010a167:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a16a	obj/kernel.asm	/^c010a16a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a16d	obj/kernel.asm	/^c010a16d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a170	obj/kernel.asm	/^c010a170:	01 d0                	add    %edx,%eax$/;"	l
c010a172	obj/kernel.asm	/^c010a172:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010a175	obj/kernel.asm	/^c010a175:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a178	obj/kernel.asm	/^c010a178:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a17b	obj/kernel.asm	/^c010a17b:	0f 83 b0 00 00 00    	jae    c010a231 <load_icode+0x318>$/;"	l
c010a181	obj/kernel.asm	/^c010a181:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a184	obj/kernel.asm	/^c010a184:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a187	obj/kernel.asm	/^c010a187:	75 05                	jne    c010a18e <load_icode+0x275>$/;"	l
c010a189	obj/kernel.asm	/^c010a189:	e9 3f 01 00 00       	jmp    c010a2cd <load_icode+0x3b4>$/;"	l
c010a18e	obj/kernel.asm	/^c010a18e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a191	obj/kernel.asm	/^c010a191:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010a194	obj/kernel.asm	/^c010a194:	29 c2                	sub    %eax,%edx$/;"	l
c010a196	obj/kernel.asm	/^c010a196:	89 d0                	mov    %edx,%eax$/;"	l
c010a198	obj/kernel.asm	/^c010a198:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010a19d	obj/kernel.asm	/^c010a19d:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a1a0	obj/kernel.asm	/^c010a1a0:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010a1a5	obj/kernel.asm	/^c010a1a5:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010a1a8	obj/kernel.asm	/^c010a1a8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a1ab	obj/kernel.asm	/^c010a1ab:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a1ae	obj/kernel.asm	/^c010a1ae:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a1b1	obj/kernel.asm	/^c010a1b1:	73 0d                	jae    c010a1c0 <load_icode+0x2a7>$/;"	l
c010a1b3	obj/kernel.asm	/^c010a1b3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a1b6	obj/kernel.asm	/^c010a1b6:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010a1b9	obj/kernel.asm	/^c010a1b9:	29 c2                	sub    %eax,%edx$/;"	l
c010a1bb	obj/kernel.asm	/^c010a1bb:	89 d0                	mov    %edx,%eax$/;"	l
c010a1bd	obj/kernel.asm	/^c010a1bd:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010a1c0	obj/kernel.asm	/^c010a1c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a1c3	obj/kernel.asm	/^c010a1c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a1c6	obj/kernel.asm	/^c010a1c6:	e8 7c f0 ff ff       	call   c0109247 <page2kva>$/;"	l
c010a1cb	obj/kernel.asm	/^c010a1cb:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c010a1ce	obj/kernel.asm	/^c010a1ce:	01 c2                	add    %eax,%edx$/;"	l
c010a1d0	obj/kernel.asm	/^c010a1d0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a1d3	obj/kernel.asm	/^c010a1d3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a1d7	obj/kernel.asm	/^c010a1d7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a1de	obj/kernel.asm	/^c010a1de:	00 $/;"	l
c010a1df	obj/kernel.asm	/^c010a1df:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a1e2	obj/kernel.asm	/^c010a1e2:	e8 e4 18 00 00       	call   c010bacb <memset>$/;"	l
c010a1e7	obj/kernel.asm	/^c010a1e7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a1ea	obj/kernel.asm	/^c010a1ea:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010a1ed	obj/kernel.asm	/^c010a1ed:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a1f0	obj/kernel.asm	/^c010a1f0:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a1f3	obj/kernel.asm	/^c010a1f3:	73 08                	jae    c010a1fd <load_icode+0x2e4>$/;"	l
c010a1f5	obj/kernel.asm	/^c010a1f5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a1f8	obj/kernel.asm	/^c010a1f8:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a1fb	obj/kernel.asm	/^c010a1fb:	74 34                	je     c010a231 <load_icode+0x318>$/;"	l
c010a1fd	obj/kernel.asm	/^c010a1fd:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a200	obj/kernel.asm	/^c010a200:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a203	obj/kernel.asm	/^c010a203:	72 08                	jb     c010a20d <load_icode+0x2f4>$/;"	l
c010a205	obj/kernel.asm	/^c010a205:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a208	obj/kernel.asm	/^c010a208:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a20b	obj/kernel.asm	/^c010a20b:	74 24                	je     c010a231 <load_icode+0x318>$/;"	l
c010a20d	obj/kernel.asm	/^c010a20d:	c7 44 24 0c 88 dc 10 	movl   $0xc010dc88,0xc(%esp)$/;"	l
c010a214	obj/kernel.asm	/^c010a214:	c0 $/;"	l
c010a215	obj/kernel.asm	/^c010a215:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010a21c	obj/kernel.asm	/^c010a21c:	c0 $/;"	l
c010a21d	obj/kernel.asm	/^c010a21d:	c7 44 24 04 5a 02 00 	movl   $0x25a,0x4(%esp)$/;"	l
c010a224	obj/kernel.asm	/^c010a224:	00 $/;"	l
c010a225	obj/kernel.asm	/^c010a225:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a22c	obj/kernel.asm	/^c010a22c:	e8 a4 6b ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a231	obj/kernel.asm	/^c010a231:	e9 8b 00 00 00       	jmp    c010a2c1 <load_icode+0x3a8>$/;"	l
c010a236	obj/kernel.asm	/^c010a236:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a239	obj/kernel.asm	/^c010a239:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a23c	obj/kernel.asm	/^c010a23c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a23f	obj/kernel.asm	/^c010a23f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010a243	obj/kernel.asm	/^c010a243:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010a246	obj/kernel.asm	/^c010a246:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010a24a	obj/kernel.asm	/^c010a24a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a24d	obj/kernel.asm	/^c010a24d:	e8 6f bc ff ff       	call   c0105ec1 <pgdir_alloc_page>$/;"	l
c010a252	obj/kernel.asm	/^c010a252:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a255	obj/kernel.asm	/^c010a255:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a259	obj/kernel.asm	/^c010a259:	75 05                	jne    c010a260 <load_icode+0x347>$/;"	l
c010a25b	obj/kernel.asm	/^c010a25b:	e9 a8 02 00 00       	jmp    c010a508 <load_icode+0x5ef>$/;"	l
c010a260	obj/kernel.asm	/^c010a260:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a263	obj/kernel.asm	/^c010a263:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010a266	obj/kernel.asm	/^c010a266:	29 c2                	sub    %eax,%edx$/;"	l
c010a268	obj/kernel.asm	/^c010a268:	89 d0                	mov    %edx,%eax$/;"	l
c010a26a	obj/kernel.asm	/^c010a26a:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a26d	obj/kernel.asm	/^c010a26d:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010a272	obj/kernel.asm	/^c010a272:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010a275	obj/kernel.asm	/^c010a275:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a278	obj/kernel.asm	/^c010a278:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010a27f	obj/kernel.asm	/^c010a27f:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a282	obj/kernel.asm	/^c010a282:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a285	obj/kernel.asm	/^c010a285:	73 0d                	jae    c010a294 <load_icode+0x37b>$/;"	l
c010a287	obj/kernel.asm	/^c010a287:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a28a	obj/kernel.asm	/^c010a28a:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010a28d	obj/kernel.asm	/^c010a28d:	29 c2                	sub    %eax,%edx$/;"	l
c010a28f	obj/kernel.asm	/^c010a28f:	89 d0                	mov    %edx,%eax$/;"	l
c010a291	obj/kernel.asm	/^c010a291:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010a294	obj/kernel.asm	/^c010a294:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a297	obj/kernel.asm	/^c010a297:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a29a	obj/kernel.asm	/^c010a29a:	e8 a8 ef ff ff       	call   c0109247 <page2kva>$/;"	l
c010a29f	obj/kernel.asm	/^c010a29f:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c010a2a2	obj/kernel.asm	/^c010a2a2:	01 c2                	add    %eax,%edx$/;"	l
c010a2a4	obj/kernel.asm	/^c010a2a4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a2a7	obj/kernel.asm	/^c010a2a7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a2ab	obj/kernel.asm	/^c010a2ab:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a2b2	obj/kernel.asm	/^c010a2b2:	00 $/;"	l
c010a2b3	obj/kernel.asm	/^c010a2b3:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a2b6	obj/kernel.asm	/^c010a2b6:	e8 10 18 00 00       	call   c010bacb <memset>$/;"	l
c010a2bb	obj/kernel.asm	/^c010a2bb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a2be	obj/kernel.asm	/^c010a2be:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010a2c1	obj/kernel.asm	/^c010a2c1:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a2c4	obj/kernel.asm	/^c010a2c4:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a2c7	obj/kernel.asm	/^c010a2c7:	0f 82 69 ff ff ff    	jb     c010a236 <load_icode+0x31d>$/;"	l
c010a2cd	obj/kernel.asm	/^c010a2cd:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c010a2d1	obj/kernel.asm	/^c010a2d1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a2d4	obj/kernel.asm	/^c010a2d4:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c010a2d7	obj/kernel.asm	/^c010a2d7:	0f 82 e1 fc ff ff    	jb     c0109fbe <load_icode+0xa5>$/;"	l
c010a2dd	obj/kernel.asm	/^c010a2dd:	c7 45 e8 0b 00 00 00 	movl   $0xb,-0x18(%ebp)$/;"	l
c010a2e4	obj/kernel.asm	/^c010a2e4:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010a2eb	obj/kernel.asm	/^c010a2eb:	00 $/;"	l
c010a2ec	obj/kernel.asm	/^c010a2ec:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a2ef	obj/kernel.asm	/^c010a2ef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a2f3	obj/kernel.asm	/^c010a2f3:	c7 44 24 08 00 00 10 	movl   $0x100000,0x8(%esp)$/;"	l
c010a2fa	obj/kernel.asm	/^c010a2fa:	00 $/;"	l
c010a2fb	obj/kernel.asm	/^c010a2fb:	c7 44 24 04 00 00 f0 	movl   $0xaff00000,0x4(%esp)$/;"	l
c010a302	obj/kernel.asm	/^c010a302:	af $/;"	l
c010a303	obj/kernel.asm	/^c010a303:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a306	obj/kernel.asm	/^c010a306:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a309	obj/kernel.asm	/^c010a309:	e8 89 de ff ff       	call   c0108197 <mm_map>$/;"	l
c010a30e	obj/kernel.asm	/^c010a30e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a311	obj/kernel.asm	/^c010a311:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a315	obj/kernel.asm	/^c010a315:	74 05                	je     c010a31c <load_icode+0x403>$/;"	l
c010a317	obj/kernel.asm	/^c010a317:	e9 ec 01 00 00       	jmp    c010a508 <load_icode+0x5ef>$/;"	l
c010a31c	obj/kernel.asm	/^c010a31c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a31f	obj/kernel.asm	/^c010a31f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a322	obj/kernel.asm	/^c010a322:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010a329	obj/kernel.asm	/^c010a329:	00 $/;"	l
c010a32a	obj/kernel.asm	/^c010a32a:	c7 44 24 04 00 f0 ff 	movl   $0xaffff000,0x4(%esp)$/;"	l
c010a331	obj/kernel.asm	/^c010a331:	af $/;"	l
c010a332	obj/kernel.asm	/^c010a332:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a335	obj/kernel.asm	/^c010a335:	e8 87 bb ff ff       	call   c0105ec1 <pgdir_alloc_page>$/;"	l
c010a33a	obj/kernel.asm	/^c010a33a:	85 c0                	test   %eax,%eax$/;"	l
c010a33c	obj/kernel.asm	/^c010a33c:	75 24                	jne    c010a362 <load_icode+0x449>$/;"	l
c010a33e	obj/kernel.asm	/^c010a33e:	c7 44 24 0c d8 dc 10 	movl   $0xc010dcd8,0xc(%esp)$/;"	l
c010a345	obj/kernel.asm	/^c010a345:	c0 $/;"	l
c010a346	obj/kernel.asm	/^c010a346:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010a34d	obj/kernel.asm	/^c010a34d:	c0 $/;"	l
c010a34e	obj/kernel.asm	/^c010a34e:	c7 44 24 04 6d 02 00 	movl   $0x26d,0x4(%esp)$/;"	l
c010a355	obj/kernel.asm	/^c010a355:	00 $/;"	l
c010a356	obj/kernel.asm	/^c010a356:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a35d	obj/kernel.asm	/^c010a35d:	e8 73 6a ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a362	obj/kernel.asm	/^c010a362:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a365	obj/kernel.asm	/^c010a365:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a368	obj/kernel.asm	/^c010a368:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010a36f	obj/kernel.asm	/^c010a36f:	00 $/;"	l
c010a370	obj/kernel.asm	/^c010a370:	c7 44 24 04 00 e0 ff 	movl   $0xafffe000,0x4(%esp)$/;"	l
c010a377	obj/kernel.asm	/^c010a377:	af $/;"	l
c010a378	obj/kernel.asm	/^c010a378:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a37b	obj/kernel.asm	/^c010a37b:	e8 41 bb ff ff       	call   c0105ec1 <pgdir_alloc_page>$/;"	l
c010a380	obj/kernel.asm	/^c010a380:	85 c0                	test   %eax,%eax$/;"	l
c010a382	obj/kernel.asm	/^c010a382:	75 24                	jne    c010a3a8 <load_icode+0x48f>$/;"	l
c010a384	obj/kernel.asm	/^c010a384:	c7 44 24 0c 1c dd 10 	movl   $0xc010dd1c,0xc(%esp)$/;"	l
c010a38b	obj/kernel.asm	/^c010a38b:	c0 $/;"	l
c010a38c	obj/kernel.asm	/^c010a38c:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010a393	obj/kernel.asm	/^c010a393:	c0 $/;"	l
c010a394	obj/kernel.asm	/^c010a394:	c7 44 24 04 6e 02 00 	movl   $0x26e,0x4(%esp)$/;"	l
c010a39b	obj/kernel.asm	/^c010a39b:	00 $/;"	l
c010a39c	obj/kernel.asm	/^c010a39c:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a3a3	obj/kernel.asm	/^c010a3a3:	e8 2d 6a ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a3a8	obj/kernel.asm	/^c010a3a8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a3ab	obj/kernel.asm	/^c010a3ab:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a3ae	obj/kernel.asm	/^c010a3ae:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010a3b5	obj/kernel.asm	/^c010a3b5:	00 $/;"	l
c010a3b6	obj/kernel.asm	/^c010a3b6:	c7 44 24 04 00 d0 ff 	movl   $0xafffd000,0x4(%esp)$/;"	l
c010a3bd	obj/kernel.asm	/^c010a3bd:	af $/;"	l
c010a3be	obj/kernel.asm	/^c010a3be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a3c1	obj/kernel.asm	/^c010a3c1:	e8 fb ba ff ff       	call   c0105ec1 <pgdir_alloc_page>$/;"	l
c010a3c6	obj/kernel.asm	/^c010a3c6:	85 c0                	test   %eax,%eax$/;"	l
c010a3c8	obj/kernel.asm	/^c010a3c8:	75 24                	jne    c010a3ee <load_icode+0x4d5>$/;"	l
c010a3ca	obj/kernel.asm	/^c010a3ca:	c7 44 24 0c 60 dd 10 	movl   $0xc010dd60,0xc(%esp)$/;"	l
c010a3d1	obj/kernel.asm	/^c010a3d1:	c0 $/;"	l
c010a3d2	obj/kernel.asm	/^c010a3d2:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010a3d9	obj/kernel.asm	/^c010a3d9:	c0 $/;"	l
c010a3da	obj/kernel.asm	/^c010a3da:	c7 44 24 04 6f 02 00 	movl   $0x26f,0x4(%esp)$/;"	l
c010a3e1	obj/kernel.asm	/^c010a3e1:	00 $/;"	l
c010a3e2	obj/kernel.asm	/^c010a3e2:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a3e9	obj/kernel.asm	/^c010a3e9:	e8 e7 69 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a3ee	obj/kernel.asm	/^c010a3ee:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a3f1	obj/kernel.asm	/^c010a3f1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a3f4	obj/kernel.asm	/^c010a3f4:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010a3fb	obj/kernel.asm	/^c010a3fb:	00 $/;"	l
c010a3fc	obj/kernel.asm	/^c010a3fc:	c7 44 24 04 00 c0 ff 	movl   $0xafffc000,0x4(%esp)$/;"	l
c010a403	obj/kernel.asm	/^c010a403:	af $/;"	l
c010a404	obj/kernel.asm	/^c010a404:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a407	obj/kernel.asm	/^c010a407:	e8 b5 ba ff ff       	call   c0105ec1 <pgdir_alloc_page>$/;"	l
c010a40c	obj/kernel.asm	/^c010a40c:	85 c0                	test   %eax,%eax$/;"	l
c010a40e	obj/kernel.asm	/^c010a40e:	75 24                	jne    c010a434 <load_icode+0x51b>$/;"	l
c010a410	obj/kernel.asm	/^c010a410:	c7 44 24 0c a4 dd 10 	movl   $0xc010dda4,0xc(%esp)$/;"	l
c010a417	obj/kernel.asm	/^c010a417:	c0 $/;"	l
c010a418	obj/kernel.asm	/^c010a418:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010a41f	obj/kernel.asm	/^c010a41f:	c0 $/;"	l
c010a420	obj/kernel.asm	/^c010a420:	c7 44 24 04 70 02 00 	movl   $0x270,0x4(%esp)$/;"	l
c010a427	obj/kernel.asm	/^c010a427:	00 $/;"	l
c010a428	obj/kernel.asm	/^c010a428:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a42f	obj/kernel.asm	/^c010a42f:	e8 a1 69 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a434	obj/kernel.asm	/^c010a434:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a437	obj/kernel.asm	/^c010a437:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a43a	obj/kernel.asm	/^c010a43a:	e8 a6 ee ff ff       	call   c01092e5 <mm_count_inc>$/;"	l
c010a43f	obj/kernel.asm	/^c010a43f:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a444	obj/kernel.asm	/^c010a444:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010a447	obj/kernel.asm	/^c010a447:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a44a	obj/kernel.asm	/^c010a44a:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a44f	obj/kernel.asm	/^c010a44f:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010a452	obj/kernel.asm	/^c010a452:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010a455	obj/kernel.asm	/^c010a455:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c010a458	obj/kernel.asm	/^c010a458:	81 7d b8 ff ff ff bf 	cmpl   $0xbfffffff,-0x48(%ebp)$/;"	l
c010a45f	obj/kernel.asm	/^c010a45f:	77 23                	ja     c010a484 <load_icode+0x56b>$/;"	l
c010a461	obj/kernel.asm	/^c010a461:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010a464	obj/kernel.asm	/^c010a464:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a468	obj/kernel.asm	/^c010a468:	c7 44 24 08 e8 db 10 	movl   $0xc010dbe8,0x8(%esp)$/;"	l
c010a46f	obj/kernel.asm	/^c010a46f:	c0 $/;"	l
c010a470	obj/kernel.asm	/^c010a470:	c7 44 24 04 75 02 00 	movl   $0x275,0x4(%esp)$/;"	l
c010a477	obj/kernel.asm	/^c010a477:	00 $/;"	l
c010a478	obj/kernel.asm	/^c010a478:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a47f	obj/kernel.asm	/^c010a47f:	e8 51 69 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a484	obj/kernel.asm	/^c010a484:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c010a487	obj/kernel.asm	/^c010a487:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c010a48d	obj/kernel.asm	/^c010a48d:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010a490	obj/kernel.asm	/^c010a490:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a493	obj/kernel.asm	/^c010a493:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a496	obj/kernel.asm	/^c010a496:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010a499	obj/kernel.asm	/^c010a499:	81 7d b4 ff ff ff bf 	cmpl   $0xbfffffff,-0x4c(%ebp)$/;"	l
c010a4a0	obj/kernel.asm	/^c010a4a0:	77 23                	ja     c010a4c5 <load_icode+0x5ac>$/;"	l
c010a4a2	obj/kernel.asm	/^c010a4a2:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010a4a5	obj/kernel.asm	/^c010a4a5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a4a9	obj/kernel.asm	/^c010a4a9:	c7 44 24 08 e8 db 10 	movl   $0xc010dbe8,0x8(%esp)$/;"	l
c010a4b0	obj/kernel.asm	/^c010a4b0:	c0 $/;"	l
c010a4b1	obj/kernel.asm	/^c010a4b1:	c7 44 24 04 76 02 00 	movl   $0x276,0x4(%esp)$/;"	l
c010a4b8	obj/kernel.asm	/^c010a4b8:	00 $/;"	l
c010a4b9	obj/kernel.asm	/^c010a4b9:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a4c0	obj/kernel.asm	/^c010a4c0:	e8 10 69 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a4c5	obj/kernel.asm	/^c010a4c5:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010a4c8	obj/kernel.asm	/^c010a4c8:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010a4cd	obj/kernel.asm	/^c010a4cd:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c010a4d0	obj/kernel.asm	/^c010a4d0:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c010a4d3	obj/kernel.asm	/^c010a4d3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010a4d6	obj/kernel.asm	/^c010a4d6:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a4db	obj/kernel.asm	/^c010a4db:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a4de	obj/kernel.asm	/^c010a4de:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010a4e1	obj/kernel.asm	/^c010a4e1:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010a4e8	obj/kernel.asm	/^c010a4e8:	00 $/;"	l
c010a4e9	obj/kernel.asm	/^c010a4e9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a4f0	obj/kernel.asm	/^c010a4f0:	00 $/;"	l
c010a4f1	obj/kernel.asm	/^c010a4f1:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a4f4	obj/kernel.asm	/^c010a4f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a4f7	obj/kernel.asm	/^c010a4f7:	e8 cf 15 00 00       	call   c010bacb <memset>$/;"	l
c010a4fc	obj/kernel.asm	/^c010a4fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a503	obj/kernel.asm	/^c010a503:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a506	obj/kernel.asm	/^c010a506:	eb 23                	jmp    c010a52b <load_icode+0x612>$/;"	l
c010a508	obj/kernel.asm	/^c010a508:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a50b	obj/kernel.asm	/^c010a50b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a50e	obj/kernel.asm	/^c010a50e:	e8 a1 de ff ff       	call   c01083b4 <exit_mmap>$/;"	l
c010a513	obj/kernel.asm	/^c010a513:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a516	obj/kernel.asm	/^c010a516:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a519	obj/kernel.asm	/^c010a519:	e8 c6 f4 ff ff       	call   c01099e4 <put_pgdir>$/;"	l
c010a51e	obj/kernel.asm	/^c010a51e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a521	obj/kernel.asm	/^c010a521:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a524	obj/kernel.asm	/^c010a524:	e8 cc db ff ff       	call   c01080f5 <mm_destroy>$/;"	l
c010a529	obj/kernel.asm	/^c010a529:	eb d8                	jmp    c010a503 <load_icode+0x5ea>$/;"	l
c010a52b	obj/kernel.asm	/^c010a52b:	c9                   	leave  $/;"	l
c010a52c	obj/kernel.asm	/^c010a52c:	c3                   	ret    $/;"	l
c010a52d	obj/kernel.asm	/^c010a52d <do_execve>:$/;"	l
c010a52d	obj/kernel.asm	/^c010a52d:	55                   	push   %ebp$/;"	l
c010a52e	obj/kernel.asm	/^c010a52e:	89 e5                	mov    %esp,%ebp$/;"	l
c010a530	obj/kernel.asm	/^c010a530:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a533	obj/kernel.asm	/^c010a533:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a538	obj/kernel.asm	/^c010a538:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a53b	obj/kernel.asm	/^c010a53b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a53e	obj/kernel.asm	/^c010a53e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a541	obj/kernel.asm	/^c010a541:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010a548	obj/kernel.asm	/^c010a548:	00 $/;"	l
c010a549	obj/kernel.asm	/^c010a549:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010a54c	obj/kernel.asm	/^c010a54c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010a550	obj/kernel.asm	/^c010a550:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a554	obj/kernel.asm	/^c010a554:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a557	obj/kernel.asm	/^c010a557:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a55a	obj/kernel.asm	/^c010a55a:	e8 aa e8 ff ff       	call   c0108e09 <user_mem_check>$/;"	l
c010a55f	obj/kernel.asm	/^c010a55f:	85 c0                	test   %eax,%eax$/;"	l
c010a561	obj/kernel.asm	/^c010a561:	75 0a                	jne    c010a56d <do_execve+0x40>$/;"	l
c010a563	obj/kernel.asm	/^c010a563:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a568	obj/kernel.asm	/^c010a568:	e9 f4 00 00 00       	jmp    c010a661 <do_execve+0x134>$/;"	l
c010a56d	obj/kernel.asm	/^c010a56d:	83 7d 0c 0f          	cmpl   $0xf,0xc(%ebp)$/;"	l
c010a571	obj/kernel.asm	/^c010a571:	76 07                	jbe    c010a57a <do_execve+0x4d>$/;"	l
c010a573	obj/kernel.asm	/^c010a573:	c7 45 0c 0f 00 00 00 	movl   $0xf,0xc(%ebp)$/;"	l
c010a57a	obj/kernel.asm	/^c010a57a:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c010a581	obj/kernel.asm	/^c010a581:	00 $/;"	l
c010a582	obj/kernel.asm	/^c010a582:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a589	obj/kernel.asm	/^c010a589:	00 $/;"	l
c010a58a	obj/kernel.asm	/^c010a58a:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a58d	obj/kernel.asm	/^c010a58d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a590	obj/kernel.asm	/^c010a590:	e8 36 15 00 00       	call   c010bacb <memset>$/;"	l
c010a595	obj/kernel.asm	/^c010a595:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a598	obj/kernel.asm	/^c010a598:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a59c	obj/kernel.asm	/^c010a59c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a59f	obj/kernel.asm	/^c010a59f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a5a3	obj/kernel.asm	/^c010a5a3:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a5a6	obj/kernel.asm	/^c010a5a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5a9	obj/kernel.asm	/^c010a5a9:	e8 ff 15 00 00       	call   c010bbad <memcpy>$/;"	l
c010a5ae	obj/kernel.asm	/^c010a5ae:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a5b2	obj/kernel.asm	/^c010a5b2:	74 4a                	je     c010a5fe <do_execve+0xd1>$/;"	l
c010a5b4	obj/kernel.asm	/^c010a5b4:	a1 c8 ef 19 c0       	mov    0xc019efc8,%eax$/;"	l
c010a5b9	obj/kernel.asm	/^c010a5b9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a5bc	obj/kernel.asm	/^c010a5bc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a5bf	obj/kernel.asm	/^c010a5bf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010a5c2	obj/kernel.asm	/^c010a5c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5c5	obj/kernel.asm	/^c010a5c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5c8	obj/kernel.asm	/^c010a5c8:	e8 32 ed ff ff       	call   c01092ff <mm_count_dec>$/;"	l
c010a5cd	obj/kernel.asm	/^c010a5cd:	85 c0                	test   %eax,%eax$/;"	l
c010a5cf	obj/kernel.asm	/^c010a5cf:	75 21                	jne    c010a5f2 <do_execve+0xc5>$/;"	l
c010a5d1	obj/kernel.asm	/^c010a5d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5d4	obj/kernel.asm	/^c010a5d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5d7	obj/kernel.asm	/^c010a5d7:	e8 d8 dd ff ff       	call   c01083b4 <exit_mmap>$/;"	l
c010a5dc	obj/kernel.asm	/^c010a5dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5df	obj/kernel.asm	/^c010a5df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5e2	obj/kernel.asm	/^c010a5e2:	e8 fd f3 ff ff       	call   c01099e4 <put_pgdir>$/;"	l
c010a5e7	obj/kernel.asm	/^c010a5e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5ea	obj/kernel.asm	/^c010a5ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5ed	obj/kernel.asm	/^c010a5ed:	e8 03 db ff ff       	call   c01080f5 <mm_destroy>$/;"	l
c010a5f2	obj/kernel.asm	/^c010a5f2:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a5f7	obj/kernel.asm	/^c010a5f7:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010a5fe	obj/kernel.asm	/^c010a5fe:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a601	obj/kernel.asm	/^c010a601:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a605	obj/kernel.asm	/^c010a605:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a608	obj/kernel.asm	/^c010a608:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a60b	obj/kernel.asm	/^c010a60b:	e8 09 f9 ff ff       	call   c0109f19 <load_icode>$/;"	l
c010a610	obj/kernel.asm	/^c010a610:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a613	obj/kernel.asm	/^c010a613:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a617	obj/kernel.asm	/^c010a617:	74 2f                	je     c010a648 <do_execve+0x11b>$/;"	l
c010a619	obj/kernel.asm	/^c010a619:	90                   	nop$/;"	l
c010a61a	obj/kernel.asm	/^c010a61a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a61d	obj/kernel.asm	/^c010a61d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a620	obj/kernel.asm	/^c010a620:	e8 24 f7 ff ff       	call   c0109d49 <do_exit>$/;"	l
c010a625	obj/kernel.asm	/^c010a625:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a628	obj/kernel.asm	/^c010a628:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a62c	obj/kernel.asm	/^c010a62c:	c7 44 24 08 e7 dd 10 	movl   $0xc010dde7,0x8(%esp)$/;"	l
c010a633	obj/kernel.asm	/^c010a633:	c0 $/;"	l
c010a634	obj/kernel.asm	/^c010a634:	c7 44 24 04 b3 02 00 	movl   $0x2b3,0x4(%esp)$/;"	l
c010a63b	obj/kernel.asm	/^c010a63b:	00 $/;"	l
c010a63c	obj/kernel.asm	/^c010a63c:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a643	obj/kernel.asm	/^c010a643:	e8 8d 67 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a648	obj/kernel.asm	/^c010a648:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a64d	obj/kernel.asm	/^c010a64d:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010a650	obj/kernel.asm	/^c010a650:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010a654	obj/kernel.asm	/^c010a654:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a657	obj/kernel.asm	/^c010a657:	e8 ba ed ff ff       	call   c0109416 <set_proc_name>$/;"	l
c010a65c	obj/kernel.asm	/^c010a65c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a661	obj/kernel.asm	/^c010a661:	c9                   	leave  $/;"	l
c010a662	obj/kernel.asm	/^c010a662:	c3                   	ret    $/;"	l
c010a663	obj/kernel.asm	/^c010a663 <do_yield>:$/;"	l
c010a663	obj/kernel.asm	/^c010a663:	55                   	push   %ebp$/;"	l
c010a664	obj/kernel.asm	/^c010a664:	89 e5                	mov    %esp,%ebp$/;"	l
c010a666	obj/kernel.asm	/^c010a666:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a66b	obj/kernel.asm	/^c010a66b:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010a672	obj/kernel.asm	/^c010a672:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a677	obj/kernel.asm	/^c010a677:	5d                   	pop    %ebp$/;"	l
c010a678	obj/kernel.asm	/^c010a678:	c3                   	ret    $/;"	l
c010a679	obj/kernel.asm	/^c010a679 <do_wait>:$/;"	l
c010a679	obj/kernel.asm	/^c010a679:	55                   	push   %ebp$/;"	l
c010a67a	obj/kernel.asm	/^c010a67a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a67c	obj/kernel.asm	/^c010a67c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a67f	obj/kernel.asm	/^c010a67f:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a684	obj/kernel.asm	/^c010a684:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a687	obj/kernel.asm	/^c010a687:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a68a	obj/kernel.asm	/^c010a68a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a68e	obj/kernel.asm	/^c010a68e:	74 30                	je     c010a6c0 <do_wait+0x47>$/;"	l
c010a690	obj/kernel.asm	/^c010a690:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a693	obj/kernel.asm	/^c010a693:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010a69a	obj/kernel.asm	/^c010a69a:	00 $/;"	l
c010a69b	obj/kernel.asm	/^c010a69b:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c010a6a2	obj/kernel.asm	/^c010a6a2:	00 $/;"	l
c010a6a3	obj/kernel.asm	/^c010a6a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a6a7	obj/kernel.asm	/^c010a6a7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6aa	obj/kernel.asm	/^c010a6aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a6ad	obj/kernel.asm	/^c010a6ad:	e8 57 e7 ff ff       	call   c0108e09 <user_mem_check>$/;"	l
c010a6b2	obj/kernel.asm	/^c010a6b2:	85 c0                	test   %eax,%eax$/;"	l
c010a6b4	obj/kernel.asm	/^c010a6b4:	75 0a                	jne    c010a6c0 <do_wait+0x47>$/;"	l
c010a6b6	obj/kernel.asm	/^c010a6b6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a6bb	obj/kernel.asm	/^c010a6bb:	e9 4b 01 00 00       	jmp    c010a80b <do_wait+0x192>$/;"	l
c010a6c0	obj/kernel.asm	/^c010a6c0:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010a6c7	obj/kernel.asm	/^c010a6c7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a6cb	obj/kernel.asm	/^c010a6cb:	74 39                	je     c010a706 <do_wait+0x8d>$/;"	l
c010a6cd	obj/kernel.asm	/^c010a6cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6d0	obj/kernel.asm	/^c010a6d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a6d3	obj/kernel.asm	/^c010a6d3:	e8 1f f1 ff ff       	call   c01097f7 <find_proc>$/;"	l
c010a6d8	obj/kernel.asm	/^c010a6d8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a6db	obj/kernel.asm	/^c010a6db:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a6df	obj/kernel.asm	/^c010a6df:	74 54                	je     c010a735 <do_wait+0xbc>$/;"	l
c010a6e1	obj/kernel.asm	/^c010a6e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a6e4	obj/kernel.asm	/^c010a6e4:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010a6e7	obj/kernel.asm	/^c010a6e7:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a6ec	obj/kernel.asm	/^c010a6ec:	39 c2                	cmp    %eax,%edx$/;"	l
c010a6ee	obj/kernel.asm	/^c010a6ee:	75 45                	jne    c010a735 <do_wait+0xbc>$/;"	l
c010a6f0	obj/kernel.asm	/^c010a6f0:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a6f7	obj/kernel.asm	/^c010a6f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a6fa	obj/kernel.asm	/^c010a6fa:	8b 00                	mov    (%eax),%eax$/;"	l
c010a6fc	obj/kernel.asm	/^c010a6fc:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a6ff	obj/kernel.asm	/^c010a6ff:	75 34                	jne    c010a735 <do_wait+0xbc>$/;"	l
c010a701	obj/kernel.asm	/^c010a701:	e9 80 00 00 00       	jmp    c010a786 <do_wait+0x10d>$/;"	l
c010a706	obj/kernel.asm	/^c010a706:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a70b	obj/kernel.asm	/^c010a70b:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010a70e	obj/kernel.asm	/^c010a70e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a711	obj/kernel.asm	/^c010a711:	eb 1c                	jmp    c010a72f <do_wait+0xb6>$/;"	l
c010a713	obj/kernel.asm	/^c010a713:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a71a	obj/kernel.asm	/^c010a71a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a71d	obj/kernel.asm	/^c010a71d:	8b 00                	mov    (%eax),%eax$/;"	l
c010a71f	obj/kernel.asm	/^c010a71f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a722	obj/kernel.asm	/^c010a722:	75 02                	jne    c010a726 <do_wait+0xad>$/;"	l
c010a724	obj/kernel.asm	/^c010a724:	eb 60                	jmp    c010a786 <do_wait+0x10d>$/;"	l
c010a726	obj/kernel.asm	/^c010a726:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a729	obj/kernel.asm	/^c010a729:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010a72c	obj/kernel.asm	/^c010a72c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a72f	obj/kernel.asm	/^c010a72f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a733	obj/kernel.asm	/^c010a733:	75 de                	jne    c010a713 <do_wait+0x9a>$/;"	l
c010a735	obj/kernel.asm	/^c010a735:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a739	obj/kernel.asm	/^c010a739:	74 41                	je     c010a77c <do_wait+0x103>$/;"	l
c010a73b	obj/kernel.asm	/^c010a73b:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a740	obj/kernel.asm	/^c010a740:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a746	obj/kernel.asm	/^c010a746:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a74b	obj/kernel.asm	/^c010a74b:	c7 40 6c 01 00 00 80 	movl   $0x80000001,0x6c(%eax)$/;"	l
c010a752	obj/kernel.asm	/^c010a752:	e8 09 06 00 00       	call   c010ad60 <schedule>$/;"	l
c010a757	obj/kernel.asm	/^c010a757:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a75c	obj/kernel.asm	/^c010a75c:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a75f	obj/kernel.asm	/^c010a75f:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a762	obj/kernel.asm	/^c010a762:	85 c0                	test   %eax,%eax$/;"	l
c010a764	obj/kernel.asm	/^c010a764:	74 11                	je     c010a777 <do_wait+0xfe>$/;"	l
c010a766	obj/kernel.asm	/^c010a766:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c010a76d	obj/kernel.asm	/^c010a76d:	e8 d7 f5 ff ff       	call   c0109d49 <do_exit>$/;"	l
c010a772	obj/kernel.asm	/^c010a772:	e9 49 ff ff ff       	jmp    c010a6c0 <do_wait+0x47>$/;"	l
c010a777	obj/kernel.asm	/^c010a777:	e9 44 ff ff ff       	jmp    c010a6c0 <do_wait+0x47>$/;"	l
c010a77c	obj/kernel.asm	/^c010a77c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010a781	obj/kernel.asm	/^c010a781:	e9 85 00 00 00       	jmp    c010a80b <do_wait+0x192>$/;"	l
c010a786	obj/kernel.asm	/^c010a786:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010a78b	obj/kernel.asm	/^c010a78b:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a78e	obj/kernel.asm	/^c010a78e:	74 0a                	je     c010a79a <do_wait+0x121>$/;"	l
c010a790	obj/kernel.asm	/^c010a790:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c010a795	obj/kernel.asm	/^c010a795:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a798	obj/kernel.asm	/^c010a798:	75 1c                	jne    c010a7b6 <do_wait+0x13d>$/;"	l
c010a79a	obj/kernel.asm	/^c010a79a:	c7 44 24 08 fa dd 10 	movl   $0xc010ddfa,0x8(%esp)$/;"	l
c010a7a1	obj/kernel.asm	/^c010a7a1:	c0 $/;"	l
c010a7a2	obj/kernel.asm	/^c010a7a2:	c7 44 24 04 ec 02 00 	movl   $0x2ec,0x4(%esp)$/;"	l
c010a7a9	obj/kernel.asm	/^c010a7a9:	00 $/;"	l
c010a7aa	obj/kernel.asm	/^c010a7aa:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a7b1	obj/kernel.asm	/^c010a7b1:	e8 1f 66 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a7b6	obj/kernel.asm	/^c010a7b6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a7ba	obj/kernel.asm	/^c010a7ba:	74 0b                	je     c010a7c7 <do_wait+0x14e>$/;"	l
c010a7bc	obj/kernel.asm	/^c010a7bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7bf	obj/kernel.asm	/^c010a7bf:	8b 50 68             	mov    0x68(%eax),%edx$/;"	l
c010a7c2	obj/kernel.asm	/^c010a7c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a7c5	obj/kernel.asm	/^c010a7c5:	89 10                	mov    %edx,(%eax)$/;"	l
c010a7c7	obj/kernel.asm	/^c010a7c7:	e8 53 e9 ff ff       	call   c010911f <__intr_save>$/;"	l
c010a7cc	obj/kernel.asm	/^c010a7cc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a7cf	obj/kernel.asm	/^c010a7cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7d2	obj/kernel.asm	/^c010a7d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a7d5	obj/kernel.asm	/^c010a7d5:	e8 ea ef ff ff       	call   c01097c4 <unhash_proc>$/;"	l
c010a7da	obj/kernel.asm	/^c010a7da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7dd	obj/kernel.asm	/^c010a7dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a7e0	obj/kernel.asm	/^c010a7e0:	e8 5b ed ff ff       	call   c0109540 <remove_links>$/;"	l
c010a7e5	obj/kernel.asm	/^c010a7e5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a7e8	obj/kernel.asm	/^c010a7e8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a7eb	obj/kernel.asm	/^c010a7eb:	e8 59 e9 ff ff       	call   c0109149 <__intr_restore>$/;"	l
c010a7f0	obj/kernel.asm	/^c010a7f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7f3	obj/kernel.asm	/^c010a7f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a7f6	obj/kernel.asm	/^c010a7f6:	e8 1c f1 ff ff       	call   c0109917 <put_kstack>$/;"	l
c010a7fb	obj/kernel.asm	/^c010a7fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7fe	obj/kernel.asm	/^c010a7fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a801	obj/kernel.asm	/^c010a801:	e8 e9 a3 ff ff       	call   c0104bef <kfree>$/;"	l
c010a806	obj/kernel.asm	/^c010a806:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a80b	obj/kernel.asm	/^c010a80b:	c9                   	leave  $/;"	l
c010a80c	obj/kernel.asm	/^c010a80c:	c3                   	ret    $/;"	l
c010a80d	obj/kernel.asm	/^c010a80d <do_kill>:$/;"	l
c010a80d	obj/kernel.asm	/^c010a80d:	55                   	push   %ebp$/;"	l
c010a80e	obj/kernel.asm	/^c010a80e:	89 e5                	mov    %esp,%ebp$/;"	l
c010a810	obj/kernel.asm	/^c010a810:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a813	obj/kernel.asm	/^c010a813:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a816	obj/kernel.asm	/^c010a816:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a819	obj/kernel.asm	/^c010a819:	e8 d9 ef ff ff       	call   c01097f7 <find_proc>$/;"	l
c010a81e	obj/kernel.asm	/^c010a81e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a821	obj/kernel.asm	/^c010a821:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a825	obj/kernel.asm	/^c010a825:	74 41                	je     c010a868 <do_kill+0x5b>$/;"	l
c010a827	obj/kernel.asm	/^c010a827:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a82a	obj/kernel.asm	/^c010a82a:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a82d	obj/kernel.asm	/^c010a82d:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a830	obj/kernel.asm	/^c010a830:	85 c0                	test   %eax,%eax$/;"	l
c010a832	obj/kernel.asm	/^c010a832:	75 2d                	jne    c010a861 <do_kill+0x54>$/;"	l
c010a834	obj/kernel.asm	/^c010a834:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a837	obj/kernel.asm	/^c010a837:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a83a	obj/kernel.asm	/^c010a83a:	83 c8 01             	or     $0x1,%eax$/;"	l
c010a83d	obj/kernel.asm	/^c010a83d:	89 c2                	mov    %eax,%edx$/;"	l
c010a83f	obj/kernel.asm	/^c010a83f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a842	obj/kernel.asm	/^c010a842:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010a845	obj/kernel.asm	/^c010a845:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a848	obj/kernel.asm	/^c010a848:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010a84b	obj/kernel.asm	/^c010a84b:	85 c0                	test   %eax,%eax$/;"	l
c010a84d	obj/kernel.asm	/^c010a84d:	79 0b                	jns    c010a85a <do_kill+0x4d>$/;"	l
c010a84f	obj/kernel.asm	/^c010a84f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a852	obj/kernel.asm	/^c010a852:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a855	obj/kernel.asm	/^c010a855:	e8 82 04 00 00       	call   c010acdc <wakeup_proc>$/;"	l
c010a85a	obj/kernel.asm	/^c010a85a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a85f	obj/kernel.asm	/^c010a85f:	eb 0c                	jmp    c010a86d <do_kill+0x60>$/;"	l
c010a861	obj/kernel.asm	/^c010a861:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010a866	obj/kernel.asm	/^c010a866:	eb 05                	jmp    c010a86d <do_kill+0x60>$/;"	l
c010a868	obj/kernel.asm	/^c010a868:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a86d	obj/kernel.asm	/^c010a86d:	c9                   	leave  $/;"	l
c010a86e	obj/kernel.asm	/^c010a86e:	c3                   	ret    $/;"	l
c010a86f	obj/kernel.asm	/^c010a86f <kernel_execve>:$/;"	l
c010a86f	obj/kernel.asm	/^c010a86f:	55                   	push   %ebp$/;"	l
c010a870	obj/kernel.asm	/^c010a870:	89 e5                	mov    %esp,%ebp$/;"	l
c010a872	obj/kernel.asm	/^c010a872:	57                   	push   %edi$/;"	l
c010a873	obj/kernel.asm	/^c010a873:	56                   	push   %esi$/;"	l
c010a874	obj/kernel.asm	/^c010a874:	53                   	push   %ebx$/;"	l
c010a875	obj/kernel.asm	/^c010a875:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c010a878	obj/kernel.asm	/^c010a878:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a87b	obj/kernel.asm	/^c010a87b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a87e	obj/kernel.asm	/^c010a87e:	e8 19 0f 00 00       	call   c010b79c <strlen>$/;"	l
c010a883	obj/kernel.asm	/^c010a883:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a886	obj/kernel.asm	/^c010a886:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010a88b	obj/kernel.asm	/^c010a88b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a88e	obj/kernel.asm	/^c010a88e:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
c010a891	obj/kernel.asm	/^c010a891:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010a894	obj/kernel.asm	/^c010a894:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
c010a897	obj/kernel.asm	/^c010a897:	89 f7                	mov    %esi,%edi$/;"	l
c010a899	obj/kernel.asm	/^c010a899:	cd 80                	int    $0x80$/;"	l
c010a89b	obj/kernel.asm	/^c010a89b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a89e	obj/kernel.asm	/^c010a89e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a8a1	obj/kernel.asm	/^c010a8a1:	83 c4 2c             	add    $0x2c,%esp$/;"	l
c010a8a4	obj/kernel.asm	/^c010a8a4:	5b                   	pop    %ebx$/;"	l
c010a8a5	obj/kernel.asm	/^c010a8a5:	5e                   	pop    %esi$/;"	l
c010a8a6	obj/kernel.asm	/^c010a8a6:	5f                   	pop    %edi$/;"	l
c010a8a7	obj/kernel.asm	/^c010a8a7:	5d                   	pop    %ebp$/;"	l
c010a8a8	obj/kernel.asm	/^c010a8a8:	c3                   	ret    $/;"	l
c010a8a9	obj/kernel.asm	/^c010a8a9 <user_main>:$/;"	l
c010a8a9	obj/kernel.asm	/^c010a8a9:	55                   	push   %ebp$/;"	l
c010a8aa	obj/kernel.asm	/^c010a8aa:	89 e5                	mov    %esp,%ebp$/;"	l
c010a8ac	obj/kernel.asm	/^c010a8ac:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a8af	obj/kernel.asm	/^c010a8af:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010a8b4	obj/kernel.asm	/^c010a8b4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a8b7	obj/kernel.asm	/^c010a8b7:	c7 44 24 08 16 de 10 	movl   $0xc010de16,0x8(%esp)$/;"	l
c010a8be	obj/kernel.asm	/^c010a8be:	c0 $/;"	l
c010a8bf	obj/kernel.asm	/^c010a8bf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a8c3	obj/kernel.asm	/^c010a8c3:	c7 04 24 1c de 10 c0 	movl   $0xc010de1c,(%esp)$/;"	l
c010a8ca	obj/kernel.asm	/^c010a8ca:	e8 84 5a ff ff       	call   c0100353 <cprintf>$/;"	l
c010a8cf	obj/kernel.asm	/^c010a8cf:	b8 c5 78 00 00       	mov    $0x78c5,%eax$/;"	l
c010a8d4	obj/kernel.asm	/^c010a8d4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a8d8	obj/kernel.asm	/^c010a8d8:	c7 44 24 04 85 15 14 	movl   $0xc0141585,0x4(%esp)$/;"	l
c010a8df	obj/kernel.asm	/^c010a8df:	c0 $/;"	l
c010a8e0	obj/kernel.asm	/^c010a8e0:	c7 04 24 16 de 10 c0 	movl   $0xc010de16,(%esp)$/;"	l
c010a8e7	obj/kernel.asm	/^c010a8e7:	e8 83 ff ff ff       	call   c010a86f <kernel_execve>$/;"	l
c010a8ec	obj/kernel.asm	/^c010a8ec:	c7 44 24 08 43 de 10 	movl   $0xc010de43,0x8(%esp)$/;"	l
c010a8f3	obj/kernel.asm	/^c010a8f3:	c0 $/;"	l
c010a8f4	obj/kernel.asm	/^c010a8f4:	c7 44 24 04 35 03 00 	movl   $0x335,0x4(%esp)$/;"	l
c010a8fb	obj/kernel.asm	/^c010a8fb:	00 $/;"	l
c010a8fc	obj/kernel.asm	/^c010a8fc:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a903	obj/kernel.asm	/^c010a903:	e8 cd 64 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a908	obj/kernel.asm	/^c010a908 <init_main>:$/;"	l
c010a908	obj/kernel.asm	/^c010a908:	55                   	push   %ebp$/;"	l
c010a909	obj/kernel.asm	/^c010a909:	89 e5                	mov    %esp,%ebp$/;"	l
c010a90b	obj/kernel.asm	/^c010a90b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a90e	obj/kernel.asm	/^c010a90e:	e8 d3 a7 ff ff       	call   c01050e6 <nr_free_pages>$/;"	l
c010a913	obj/kernel.asm	/^c010a913:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a916	obj/kernel.asm	/^c010a916:	e8 9c a1 ff ff       	call   c0104ab7 <kallocated>$/;"	l
c010a91b	obj/kernel.asm	/^c010a91b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a91e	obj/kernel.asm	/^c010a91e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010a925	obj/kernel.asm	/^c010a925:	00 $/;"	l
c010a926	obj/kernel.asm	/^c010a926:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a92d	obj/kernel.asm	/^c010a92d:	00 $/;"	l
c010a92e	obj/kernel.asm	/^c010a92e:	c7 04 24 a9 a8 10 c0 	movl   $0xc010a8a9,(%esp)$/;"	l
c010a935	obj/kernel.asm	/^c010a935:	e8 2f ef ff ff       	call   c0109869 <kernel_thread>$/;"	l
c010a93a	obj/kernel.asm	/^c010a93a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a93d	obj/kernel.asm	/^c010a93d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a941	obj/kernel.asm	/^c010a941:	7f 1c                	jg     c010a95f <init_main+0x57>$/;"	l
c010a943	obj/kernel.asm	/^c010a943:	c7 44 24 08 5d de 10 	movl   $0xc010de5d,0x8(%esp)$/;"	l
c010a94a	obj/kernel.asm	/^c010a94a:	c0 $/;"	l
c010a94b	obj/kernel.asm	/^c010a94b:	c7 44 24 04 40 03 00 	movl   $0x340,0x4(%esp)$/;"	l
c010a952	obj/kernel.asm	/^c010a952:	00 $/;"	l
c010a953	obj/kernel.asm	/^c010a953:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a95a	obj/kernel.asm	/^c010a95a:	e8 76 64 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a95f	obj/kernel.asm	/^c010a95f:	eb 05                	jmp    c010a966 <init_main+0x5e>$/;"	l
c010a961	obj/kernel.asm	/^c010a961:	e8 fa 03 00 00       	call   c010ad60 <schedule>$/;"	l
c010a966	obj/kernel.asm	/^c010a966:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a96d	obj/kernel.asm	/^c010a96d:	00 $/;"	l
c010a96e	obj/kernel.asm	/^c010a96e:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010a975	obj/kernel.asm	/^c010a975:	e8 ff fc ff ff       	call   c010a679 <do_wait>$/;"	l
c010a97a	obj/kernel.asm	/^c010a97a:	85 c0                	test   %eax,%eax$/;"	l
c010a97c	obj/kernel.asm	/^c010a97c:	74 e3                	je     c010a961 <init_main+0x59>$/;"	l
c010a97e	obj/kernel.asm	/^c010a97e:	c7 04 24 78 de 10 c0 	movl   $0xc010de78,(%esp)$/;"	l
c010a985	obj/kernel.asm	/^c010a985:	e8 c9 59 ff ff       	call   c0100353 <cprintf>$/;"	l
c010a98a	obj/kernel.asm	/^c010a98a:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c010a98f	obj/kernel.asm	/^c010a98f:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010a992	obj/kernel.asm	/^c010a992:	85 c0                	test   %eax,%eax$/;"	l
c010a994	obj/kernel.asm	/^c010a994:	75 18                	jne    c010a9ae <init_main+0xa6>$/;"	l
c010a996	obj/kernel.asm	/^c010a996:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c010a99b	obj/kernel.asm	/^c010a99b:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010a99e	obj/kernel.asm	/^c010a99e:	85 c0                	test   %eax,%eax$/;"	l
c010a9a0	obj/kernel.asm	/^c010a9a0:	75 0c                	jne    c010a9ae <init_main+0xa6>$/;"	l
c010a9a2	obj/kernel.asm	/^c010a9a2:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c010a9a7	obj/kernel.asm	/^c010a9a7:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010a9aa	obj/kernel.asm	/^c010a9aa:	85 c0                	test   %eax,%eax$/;"	l
c010a9ac	obj/kernel.asm	/^c010a9ac:	74 24                	je     c010a9d2 <init_main+0xca>$/;"	l
c010a9ae	obj/kernel.asm	/^c010a9ae:	c7 44 24 0c 9c de 10 	movl   $0xc010de9c,0xc(%esp)$/;"	l
c010a9b5	obj/kernel.asm	/^c010a9b5:	c0 $/;"	l
c010a9b6	obj/kernel.asm	/^c010a9b6:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010a9bd	obj/kernel.asm	/^c010a9bd:	c0 $/;"	l
c010a9be	obj/kernel.asm	/^c010a9be:	c7 44 24 04 48 03 00 	movl   $0x348,0x4(%esp)$/;"	l
c010a9c5	obj/kernel.asm	/^c010a9c5:	00 $/;"	l
c010a9c6	obj/kernel.asm	/^c010a9c6:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a9cd	obj/kernel.asm	/^c010a9cd:	e8 03 64 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010a9d2	obj/kernel.asm	/^c010a9d2:	a1 a0 ef 19 c0       	mov    0xc019efa0,%eax$/;"	l
c010a9d7	obj/kernel.asm	/^c010a9d7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a9da	obj/kernel.asm	/^c010a9da:	74 24                	je     c010aa00 <init_main+0xf8>$/;"	l
c010a9dc	obj/kernel.asm	/^c010a9dc:	c7 44 24 0c e7 de 10 	movl   $0xc010dee7,0xc(%esp)$/;"	l
c010a9e3	obj/kernel.asm	/^c010a9e3:	c0 $/;"	l
c010a9e4	obj/kernel.asm	/^c010a9e4:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010a9eb	obj/kernel.asm	/^c010a9eb:	c0 $/;"	l
c010a9ec	obj/kernel.asm	/^c010a9ec:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
c010a9f3	obj/kernel.asm	/^c010a9f3:	00 $/;"	l
c010a9f4	obj/kernel.asm	/^c010a9f4:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010a9fb	obj/kernel.asm	/^c010a9fb:	e8 d5 63 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010aa00	obj/kernel.asm	/^c010aa00:	c7 45 e8 b0 f0 19 c0 	movl   $0xc019f0b0,-0x18(%ebp)$/;"	l
c010aa07	obj/kernel.asm	/^c010aa07:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aa0a	obj/kernel.asm	/^c010aa0a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aa0d	obj/kernel.asm	/^c010aa0d:	8b 15 84 cf 19 c0    	mov    0xc019cf84,%edx$/;"	l
c010aa13	obj/kernel.asm	/^c010aa13:	83 c2 58             	add    $0x58,%edx$/;"	l
c010aa16	obj/kernel.asm	/^c010aa16:	39 d0                	cmp    %edx,%eax$/;"	l
c010aa18	obj/kernel.asm	/^c010aa18:	74 24                	je     c010aa3e <init_main+0x136>$/;"	l
c010aa1a	obj/kernel.asm	/^c010aa1a:	c7 44 24 0c f8 de 10 	movl   $0xc010def8,0xc(%esp)$/;"	l
c010aa21	obj/kernel.asm	/^c010aa21:	c0 $/;"	l
c010aa22	obj/kernel.asm	/^c010aa22:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010aa29	obj/kernel.asm	/^c010aa29:	c0 $/;"	l
c010aa2a	obj/kernel.asm	/^c010aa2a:	c7 44 24 04 4a 03 00 	movl   $0x34a,0x4(%esp)$/;"	l
c010aa31	obj/kernel.asm	/^c010aa31:	00 $/;"	l
c010aa32	obj/kernel.asm	/^c010aa32:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010aa39	obj/kernel.asm	/^c010aa39:	e8 97 63 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010aa3e	obj/kernel.asm	/^c010aa3e:	c7 45 e4 b0 f0 19 c0 	movl   $0xc019f0b0,-0x1c(%ebp)$/;"	l
c010aa45	obj/kernel.asm	/^c010aa45:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa48	obj/kernel.asm	/^c010aa48:	8b 00                	mov    (%eax),%eax$/;"	l
c010aa4a	obj/kernel.asm	/^c010aa4a:	8b 15 84 cf 19 c0    	mov    0xc019cf84,%edx$/;"	l
c010aa50	obj/kernel.asm	/^c010aa50:	83 c2 58             	add    $0x58,%edx$/;"	l
c010aa53	obj/kernel.asm	/^c010aa53:	39 d0                	cmp    %edx,%eax$/;"	l
c010aa55	obj/kernel.asm	/^c010aa55:	74 24                	je     c010aa7b <init_main+0x173>$/;"	l
c010aa57	obj/kernel.asm	/^c010aa57:	c7 44 24 0c 28 df 10 	movl   $0xc010df28,0xc(%esp)$/;"	l
c010aa5e	obj/kernel.asm	/^c010aa5e:	c0 $/;"	l
c010aa5f	obj/kernel.asm	/^c010aa5f:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010aa66	obj/kernel.asm	/^c010aa66:	c0 $/;"	l
c010aa67	obj/kernel.asm	/^c010aa67:	c7 44 24 04 4b 03 00 	movl   $0x34b,0x4(%esp)$/;"	l
c010aa6e	obj/kernel.asm	/^c010aa6e:	00 $/;"	l
c010aa6f	obj/kernel.asm	/^c010aa6f:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010aa76	obj/kernel.asm	/^c010aa76:	e8 5a 63 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010aa7b	obj/kernel.asm	/^c010aa7b:	c7 04 24 58 df 10 c0 	movl   $0xc010df58,(%esp)$/;"	l
c010aa82	obj/kernel.asm	/^c010aa82:	e8 cc 58 ff ff       	call   c0100353 <cprintf>$/;"	l
c010aa87	obj/kernel.asm	/^c010aa87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010aa8c	obj/kernel.asm	/^c010aa8c:	c9                   	leave  $/;"	l
c010aa8d	obj/kernel.asm	/^c010aa8d:	c3                   	ret    $/;"	l
c010aa8e	obj/kernel.asm	/^c010aa8e <proc_init>:$/;"	l
c010aa8e	obj/kernel.asm	/^c010aa8e:	55                   	push   %ebp$/;"	l
c010aa8f	obj/kernel.asm	/^c010aa8f:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa91	obj/kernel.asm	/^c010aa91:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010aa94	obj/kernel.asm	/^c010aa94:	c7 45 ec b0 f0 19 c0 	movl   $0xc019f0b0,-0x14(%ebp)$/;"	l
c010aa9b	obj/kernel.asm	/^c010aa9b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa9e	obj/kernel.asm	/^c010aa9e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010aaa1	obj/kernel.asm	/^c010aaa1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010aaa4	obj/kernel.asm	/^c010aaa4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aaa7	obj/kernel.asm	/^c010aaa7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010aaaa	obj/kernel.asm	/^c010aaaa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aaad	obj/kernel.asm	/^c010aaad:	89 10                	mov    %edx,(%eax)$/;"	l
c010aaaf	obj/kernel.asm	/^c010aaaf:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010aab6	obj/kernel.asm	/^c010aab6:	eb 26                	jmp    c010aade <proc_init+0x50>$/;"	l
c010aab8	obj/kernel.asm	/^c010aab8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aabb	obj/kernel.asm	/^c010aabb:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010aabe	obj/kernel.asm	/^c010aabe:	05 a0 cf 19 c0       	add    $0xc019cfa0,%eax$/;"	l
c010aac3	obj/kernel.asm	/^c010aac3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010aac6	obj/kernel.asm	/^c010aac6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aac9	obj/kernel.asm	/^c010aac9:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aacc	obj/kernel.asm	/^c010aacc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010aacf	obj/kernel.asm	/^c010aacf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aad2	obj/kernel.asm	/^c010aad2:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010aad5	obj/kernel.asm	/^c010aad5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aad8	obj/kernel.asm	/^c010aad8:	89 10                	mov    %edx,(%eax)$/;"	l
c010aada	obj/kernel.asm	/^c010aada:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010aade	obj/kernel.asm	/^c010aade:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010aae5	obj/kernel.asm	/^c010aae5:	7e d1                	jle    c010aab8 <proc_init+0x2a>$/;"	l
c010aae7	obj/kernel.asm	/^c010aae7:	e8 65 e8 ff ff       	call   c0109351 <alloc_proc>$/;"	l
c010aaec	obj/kernel.asm	/^c010aaec:	a3 80 cf 19 c0       	mov    %eax,0xc019cf80$/;"	l
c010aaf1	obj/kernel.asm	/^c010aaf1:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010aaf6	obj/kernel.asm	/^c010aaf6:	85 c0                	test   %eax,%eax$/;"	l
c010aaf8	obj/kernel.asm	/^c010aaf8:	75 1c                	jne    c010ab16 <proc_init+0x88>$/;"	l
c010aafa	obj/kernel.asm	/^c010aafa:	c7 44 24 08 71 df 10 	movl   $0xc010df71,0x8(%esp)$/;"	l
c010ab01	obj/kernel.asm	/^c010ab01:	c0 $/;"	l
c010ab02	obj/kernel.asm	/^c010ab02:	c7 44 24 04 5d 03 00 	movl   $0x35d,0x4(%esp)$/;"	l
c010ab09	obj/kernel.asm	/^c010ab09:	00 $/;"	l
c010ab0a	obj/kernel.asm	/^c010ab0a:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010ab11	obj/kernel.asm	/^c010ab11:	e8 bf 62 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010ab16	obj/kernel.asm	/^c010ab16:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010ab1b	obj/kernel.asm	/^c010ab1b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010ab22	obj/kernel.asm	/^c010ab22:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010ab27	obj/kernel.asm	/^c010ab27:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010ab2d	obj/kernel.asm	/^c010ab2d:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010ab32	obj/kernel.asm	/^c010ab32:	ba 00 80 12 c0       	mov    $0xc0128000,%edx$/;"	l
c010ab37	obj/kernel.asm	/^c010ab37:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010ab3a	obj/kernel.asm	/^c010ab3a:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010ab3f	obj/kernel.asm	/^c010ab3f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010ab46	obj/kernel.asm	/^c010ab46:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010ab4b	obj/kernel.asm	/^c010ab4b:	c7 44 24 04 89 df 10 	movl   $0xc010df89,0x4(%esp)$/;"	l
c010ab52	obj/kernel.asm	/^c010ab52:	c0 $/;"	l
c010ab53	obj/kernel.asm	/^c010ab53:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ab56	obj/kernel.asm	/^c010ab56:	e8 bb e8 ff ff       	call   c0109416 <set_proc_name>$/;"	l
c010ab5b	obj/kernel.asm	/^c010ab5b:	a1 a0 ef 19 c0       	mov    0xc019efa0,%eax$/;"	l
c010ab60	obj/kernel.asm	/^c010ab60:	83 c0 01             	add    $0x1,%eax$/;"	l
c010ab63	obj/kernel.asm	/^c010ab63:	a3 a0 ef 19 c0       	mov    %eax,0xc019efa0$/;"	l
c010ab68	obj/kernel.asm	/^c010ab68:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010ab6d	obj/kernel.asm	/^c010ab6d:	a3 88 cf 19 c0       	mov    %eax,0xc019cf88$/;"	l
c010ab72	obj/kernel.asm	/^c010ab72:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010ab79	obj/kernel.asm	/^c010ab79:	00 $/;"	l
c010ab7a	obj/kernel.asm	/^c010ab7a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010ab81	obj/kernel.asm	/^c010ab81:	00 $/;"	l
c010ab82	obj/kernel.asm	/^c010ab82:	c7 04 24 08 a9 10 c0 	movl   $0xc010a908,(%esp)$/;"	l
c010ab89	obj/kernel.asm	/^c010ab89:	e8 db ec ff ff       	call   c0109869 <kernel_thread>$/;"	l
c010ab8e	obj/kernel.asm	/^c010ab8e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ab91	obj/kernel.asm	/^c010ab91:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ab95	obj/kernel.asm	/^c010ab95:	7f 1c                	jg     c010abb3 <proc_init+0x125>$/;"	l
c010ab97	obj/kernel.asm	/^c010ab97:	c7 44 24 08 8e df 10 	movl   $0xc010df8e,0x8(%esp)$/;"	l
c010ab9e	obj/kernel.asm	/^c010ab9e:	c0 $/;"	l
c010ab9f	obj/kernel.asm	/^c010ab9f:	c7 44 24 04 6b 03 00 	movl   $0x36b,0x4(%esp)$/;"	l
c010aba6	obj/kernel.asm	/^c010aba6:	00 $/;"	l
c010aba7	obj/kernel.asm	/^c010aba7:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010abae	obj/kernel.asm	/^c010abae:	e8 22 62 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010abb3	obj/kernel.asm	/^c010abb3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010abb6	obj/kernel.asm	/^c010abb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010abb9	obj/kernel.asm	/^c010abb9:	e8 39 ec ff ff       	call   c01097f7 <find_proc>$/;"	l
c010abbe	obj/kernel.asm	/^c010abbe:	a3 84 cf 19 c0       	mov    %eax,0xc019cf84$/;"	l
c010abc3	obj/kernel.asm	/^c010abc3:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c010abc8	obj/kernel.asm	/^c010abc8:	c7 44 24 04 a8 df 10 	movl   $0xc010dfa8,0x4(%esp)$/;"	l
c010abcf	obj/kernel.asm	/^c010abcf:	c0 $/;"	l
c010abd0	obj/kernel.asm	/^c010abd0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010abd3	obj/kernel.asm	/^c010abd3:	e8 3e e8 ff ff       	call   c0109416 <set_proc_name>$/;"	l
c010abd8	obj/kernel.asm	/^c010abd8:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010abdd	obj/kernel.asm	/^c010abdd:	85 c0                	test   %eax,%eax$/;"	l
c010abdf	obj/kernel.asm	/^c010abdf:	74 0c                	je     c010abed <proc_init+0x15f>$/;"	l
c010abe1	obj/kernel.asm	/^c010abe1:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010abe6	obj/kernel.asm	/^c010abe6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010abe9	obj/kernel.asm	/^c010abe9:	85 c0                	test   %eax,%eax$/;"	l
c010abeb	obj/kernel.asm	/^c010abeb:	74 24                	je     c010ac11 <proc_init+0x183>$/;"	l
c010abed	obj/kernel.asm	/^c010abed:	c7 44 24 0c b0 df 10 	movl   $0xc010dfb0,0xc(%esp)$/;"	l
c010abf4	obj/kernel.asm	/^c010abf4:	c0 $/;"	l
c010abf5	obj/kernel.asm	/^c010abf5:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010abfc	obj/kernel.asm	/^c010abfc:	c0 $/;"	l
c010abfd	obj/kernel.asm	/^c010abfd:	c7 44 24 04 71 03 00 	movl   $0x371,0x4(%esp)$/;"	l
c010ac04	obj/kernel.asm	/^c010ac04:	00 $/;"	l
c010ac05	obj/kernel.asm	/^c010ac05:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010ac0c	obj/kernel.asm	/^c010ac0c:	e8 c4 61 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010ac11	obj/kernel.asm	/^c010ac11:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c010ac16	obj/kernel.asm	/^c010ac16:	85 c0                	test   %eax,%eax$/;"	l
c010ac18	obj/kernel.asm	/^c010ac18:	74 0d                	je     c010ac27 <proc_init+0x199>$/;"	l
c010ac1a	obj/kernel.asm	/^c010ac1a:	a1 84 cf 19 c0       	mov    0xc019cf84,%eax$/;"	l
c010ac1f	obj/kernel.asm	/^c010ac1f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ac22	obj/kernel.asm	/^c010ac22:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010ac25	obj/kernel.asm	/^c010ac25:	74 24                	je     c010ac4b <proc_init+0x1bd>$/;"	l
c010ac27	obj/kernel.asm	/^c010ac27:	c7 44 24 0c d8 df 10 	movl   $0xc010dfd8,0xc(%esp)$/;"	l
c010ac2e	obj/kernel.asm	/^c010ac2e:	c0 $/;"	l
c010ac2f	obj/kernel.asm	/^c010ac2f:	c7 44 24 08 c1 dc 10 	movl   $0xc010dcc1,0x8(%esp)$/;"	l
c010ac36	obj/kernel.asm	/^c010ac36:	c0 $/;"	l
c010ac37	obj/kernel.asm	/^c010ac37:	c7 44 24 04 72 03 00 	movl   $0x372,0x4(%esp)$/;"	l
c010ac3e	obj/kernel.asm	/^c010ac3e:	00 $/;"	l
c010ac3f	obj/kernel.asm	/^c010ac3f:	c7 04 24 0c dc 10 c0 	movl   $0xc010dc0c,(%esp)$/;"	l
c010ac46	obj/kernel.asm	/^c010ac46:	e8 8a 61 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010ac4b	obj/kernel.asm	/^c010ac4b:	c9                   	leave  $/;"	l
c010ac4c	obj/kernel.asm	/^c010ac4c:	c3                   	ret    $/;"	l
c010ac4d	obj/kernel.asm	/^c010ac4d <cpu_idle>:$/;"	l
c010ac4d	obj/kernel.asm	/^c010ac4d:	55                   	push   %ebp$/;"	l
c010ac4e	obj/kernel.asm	/^c010ac4e:	89 e5                	mov    %esp,%ebp$/;"	l
c010ac50	obj/kernel.asm	/^c010ac50:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ac53	obj/kernel.asm	/^c010ac53:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010ac58	obj/kernel.asm	/^c010ac58:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ac5b	obj/kernel.asm	/^c010ac5b:	85 c0                	test   %eax,%eax$/;"	l
c010ac5d	obj/kernel.asm	/^c010ac5d:	74 07                	je     c010ac66 <cpu_idle+0x19>$/;"	l
c010ac5f	obj/kernel.asm	/^c010ac5f:	e8 fc 00 00 00       	call   c010ad60 <schedule>$/;"	l
c010ac64	obj/kernel.asm	/^c010ac64:	eb ed                	jmp    c010ac53 <cpu_idle+0x6>$/;"	l
c010ac66	obj/kernel.asm	/^c010ac66:	eb eb                	jmp    c010ac53 <cpu_idle+0x6>$/;"	l
c010ac68	obj/kernel.asm	/^c010ac68 <switch_to>:$/;"	l
c010ac68	obj/kernel.asm	/^c010ac68:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010ac6c	obj/kernel.asm	/^c010ac6c:	8f 00                	popl   (%eax)$/;"	l
c010ac6e	obj/kernel.asm	/^c010ac6e:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c010ac71	obj/kernel.asm	/^c010ac71:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c010ac74	obj/kernel.asm	/^c010ac74:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c010ac77	obj/kernel.asm	/^c010ac77:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010ac7a	obj/kernel.asm	/^c010ac7a:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c010ac7d	obj/kernel.asm	/^c010ac7d:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c010ac80	obj/kernel.asm	/^c010ac80:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c010ac83	obj/kernel.asm	/^c010ac83:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010ac87	obj/kernel.asm	/^c010ac87:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c010ac8a	obj/kernel.asm	/^c010ac8a:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c010ac8d	obj/kernel.asm	/^c010ac8d:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c010ac90	obj/kernel.asm	/^c010ac90:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010ac93	obj/kernel.asm	/^c010ac93:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010ac96	obj/kernel.asm	/^c010ac96:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c010ac99	obj/kernel.asm	/^c010ac99:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c010ac9c	obj/kernel.asm	/^c010ac9c:	ff 30                	pushl  (%eax)$/;"	l
c010ac9e	obj/kernel.asm	/^c010ac9e:	c3                   	ret    $/;"	l
c010ac9f	obj/kernel.asm	/^c010ac9f <__intr_save>:$/;"	l
c010ac9f	obj/kernel.asm	/^c010ac9f:	55                   	push   %ebp$/;"	l
c010aca0	obj/kernel.asm	/^c010aca0:	89 e5                	mov    %esp,%ebp$/;"	l
c010aca2	obj/kernel.asm	/^c010aca2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010aca5	obj/kernel.asm	/^c010aca5:	9c                   	pushf  $/;"	l
c010aca6	obj/kernel.asm	/^c010aca6:	58                   	pop    %eax$/;"	l
c010aca7	obj/kernel.asm	/^c010aca7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010acaa	obj/kernel.asm	/^c010acaa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010acad	obj/kernel.asm	/^c010acad:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010acb2	obj/kernel.asm	/^c010acb2:	85 c0                	test   %eax,%eax$/;"	l
c010acb4	obj/kernel.asm	/^c010acb4:	74 0c                	je     c010acc2 <__intr_save+0x23>$/;"	l
c010acb6	obj/kernel.asm	/^c010acb6:	e8 72 73 ff ff       	call   c010202d <intr_disable>$/;"	l
c010acbb	obj/kernel.asm	/^c010acbb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010acc0	obj/kernel.asm	/^c010acc0:	eb 05                	jmp    c010acc7 <__intr_save+0x28>$/;"	l
c010acc2	obj/kernel.asm	/^c010acc2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010acc7	obj/kernel.asm	/^c010acc7:	c9                   	leave  $/;"	l
c010acc8	obj/kernel.asm	/^c010acc8:	c3                   	ret    $/;"	l
c010acc9	obj/kernel.asm	/^c010acc9 <__intr_restore>:$/;"	l
c010acc9	obj/kernel.asm	/^c010acc9:	55                   	push   %ebp$/;"	l
c010acca	obj/kernel.asm	/^c010acca:	89 e5                	mov    %esp,%ebp$/;"	l
c010accc	obj/kernel.asm	/^c010accc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010accf	obj/kernel.asm	/^c010accf:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010acd3	obj/kernel.asm	/^c010acd3:	74 05                	je     c010acda <__intr_restore+0x11>$/;"	l
c010acd5	obj/kernel.asm	/^c010acd5:	e8 4d 73 ff ff       	call   c0102027 <intr_enable>$/;"	l
c010acda	obj/kernel.asm	/^c010acda:	c9                   	leave  $/;"	l
c010acdb	obj/kernel.asm	/^c010acdb:	c3                   	ret    $/;"	l
c010acdc	obj/kernel.asm	/^c010acdc <wakeup_proc>:$/;"	l
c010acdc	obj/kernel.asm	/^c010acdc:	55                   	push   %ebp$/;"	l
c010acdd	obj/kernel.asm	/^c010acdd:	89 e5                	mov    %esp,%ebp$/;"	l
c010acdf	obj/kernel.asm	/^c010acdf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ace2	obj/kernel.asm	/^c010ace2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ace5	obj/kernel.asm	/^c010ace5:	8b 00                	mov    (%eax),%eax$/;"	l
c010ace7	obj/kernel.asm	/^c010ace7:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010acea	obj/kernel.asm	/^c010acea:	75 24                	jne    c010ad10 <wakeup_proc+0x34>$/;"	l
c010acec	obj/kernel.asm	/^c010acec:	c7 44 24 0c ff df 10 	movl   $0xc010dfff,0xc(%esp)$/;"	l
c010acf3	obj/kernel.asm	/^c010acf3:	c0 $/;"	l
c010acf4	obj/kernel.asm	/^c010acf4:	c7 44 24 08 1a e0 10 	movl   $0xc010e01a,0x8(%esp)$/;"	l
c010acfb	obj/kernel.asm	/^c010acfb:	c0 $/;"	l
c010acfc	obj/kernel.asm	/^c010acfc:	c7 44 24 04 09 00 00 	movl   $0x9,0x4(%esp)$/;"	l
c010ad03	obj/kernel.asm	/^c010ad03:	00 $/;"	l
c010ad04	obj/kernel.asm	/^c010ad04:	c7 04 24 2f e0 10 c0 	movl   $0xc010e02f,(%esp)$/;"	l
c010ad0b	obj/kernel.asm	/^c010ad0b:	e8 c5 60 ff ff       	call   c0100dd5 <__panic>$/;"	l
c010ad10	obj/kernel.asm	/^c010ad10:	e8 8a ff ff ff       	call   c010ac9f <__intr_save>$/;"	l
c010ad15	obj/kernel.asm	/^c010ad15:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad18	obj/kernel.asm	/^c010ad18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad1b	obj/kernel.asm	/^c010ad1b:	8b 00                	mov    (%eax),%eax$/;"	l
c010ad1d	obj/kernel.asm	/^c010ad1d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ad20	obj/kernel.asm	/^c010ad20:	74 15                	je     c010ad37 <wakeup_proc+0x5b>$/;"	l
c010ad22	obj/kernel.asm	/^c010ad22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad25	obj/kernel.asm	/^c010ad25:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010ad2b	obj/kernel.asm	/^c010ad2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad2e	obj/kernel.asm	/^c010ad2e:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)$/;"	l
c010ad35	obj/kernel.asm	/^c010ad35:	eb 1c                	jmp    c010ad53 <wakeup_proc+0x77>$/;"	l
c010ad37	obj/kernel.asm	/^c010ad37:	c7 44 24 08 45 e0 10 	movl   $0xc010e045,0x8(%esp)$/;"	l
c010ad3e	obj/kernel.asm	/^c010ad3e:	c0 $/;"	l
c010ad3f	obj/kernel.asm	/^c010ad3f:	c7 44 24 04 12 00 00 	movl   $0x12,0x4(%esp)$/;"	l
c010ad46	obj/kernel.asm	/^c010ad46:	00 $/;"	l
c010ad47	obj/kernel.asm	/^c010ad47:	c7 04 24 2f e0 10 c0 	movl   $0xc010e02f,(%esp)$/;"	l
c010ad4e	obj/kernel.asm	/^c010ad4e:	e8 ee 60 ff ff       	call   c0100e41 <__warn>$/;"	l
c010ad53	obj/kernel.asm	/^c010ad53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad56	obj/kernel.asm	/^c010ad56:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad59	obj/kernel.asm	/^c010ad59:	e8 6b ff ff ff       	call   c010acc9 <__intr_restore>$/;"	l
c010ad5e	obj/kernel.asm	/^c010ad5e:	c9                   	leave  $/;"	l
c010ad5f	obj/kernel.asm	/^c010ad5f:	c3                   	ret    $/;"	l
c010ad60	obj/kernel.asm	/^c010ad60 <schedule>:$/;"	l
c010ad60	obj/kernel.asm	/^c010ad60:	55                   	push   %ebp$/;"	l
c010ad61	obj/kernel.asm	/^c010ad61:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad63	obj/kernel.asm	/^c010ad63:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010ad66	obj/kernel.asm	/^c010ad66:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010ad6d	obj/kernel.asm	/^c010ad6d:	e8 2d ff ff ff       	call   c010ac9f <__intr_save>$/;"	l
c010ad72	obj/kernel.asm	/^c010ad72:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ad75	obj/kernel.asm	/^c010ad75:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010ad7a	obj/kernel.asm	/^c010ad7a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010ad81	obj/kernel.asm	/^c010ad81:	8b 15 88 cf 19 c0    	mov    0xc019cf88,%edx$/;"	l
c010ad87	obj/kernel.asm	/^c010ad87:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010ad8c	obj/kernel.asm	/^c010ad8c:	39 c2                	cmp    %eax,%edx$/;"	l
c010ad8e	obj/kernel.asm	/^c010ad8e:	74 0a                	je     c010ad9a <schedule+0x3a>$/;"	l
c010ad90	obj/kernel.asm	/^c010ad90:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010ad95	obj/kernel.asm	/^c010ad95:	83 c0 58             	add    $0x58,%eax$/;"	l
c010ad98	obj/kernel.asm	/^c010ad98:	eb 05                	jmp    c010ad9f <schedule+0x3f>$/;"	l
c010ad9a	obj/kernel.asm	/^c010ad9a:	b8 b0 f0 19 c0       	mov    $0xc019f0b0,%eax$/;"	l
c010ad9f	obj/kernel.asm	/^c010ad9f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ada2	obj/kernel.asm	/^c010ada2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ada5	obj/kernel.asm	/^c010ada5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ada8	obj/kernel.asm	/^c010ada8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010adab	obj/kernel.asm	/^c010adab:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010adae	obj/kernel.asm	/^c010adae:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010adb1	obj/kernel.asm	/^c010adb1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010adb4	obj/kernel.asm	/^c010adb4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010adb7	obj/kernel.asm	/^c010adb7:	81 7d f4 b0 f0 19 c0 	cmpl   $0xc019f0b0,-0xc(%ebp)$/;"	l
c010adbe	obj/kernel.asm	/^c010adbe:	74 15                	je     c010add5 <schedule+0x75>$/;"	l
c010adc0	obj/kernel.asm	/^c010adc0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010adc3	obj/kernel.asm	/^c010adc3:	83 e8 58             	sub    $0x58,%eax$/;"	l
c010adc6	obj/kernel.asm	/^c010adc6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010adc9	obj/kernel.asm	/^c010adc9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adcc	obj/kernel.asm	/^c010adcc:	8b 00                	mov    (%eax),%eax$/;"	l
c010adce	obj/kernel.asm	/^c010adce:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010add1	obj/kernel.asm	/^c010add1:	75 02                	jne    c010add5 <schedule+0x75>$/;"	l
c010add3	obj/kernel.asm	/^c010add3:	eb 08                	jmp    c010addd <schedule+0x7d>$/;"	l
c010add5	obj/kernel.asm	/^c010add5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010add8	obj/kernel.asm	/^c010add8:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010addb	obj/kernel.asm	/^c010addb:	75 cb                	jne    c010ada8 <schedule+0x48>$/;"	l
c010addd	obj/kernel.asm	/^c010addd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ade1	obj/kernel.asm	/^c010ade1:	74 0a                	je     c010aded <schedule+0x8d>$/;"	l
c010ade3	obj/kernel.asm	/^c010ade3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ade6	obj/kernel.asm	/^c010ade6:	8b 00                	mov    (%eax),%eax$/;"	l
c010ade8	obj/kernel.asm	/^c010ade8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010adeb	obj/kernel.asm	/^c010adeb:	74 08                	je     c010adf5 <schedule+0x95>$/;"	l
c010aded	obj/kernel.asm	/^c010aded:	a1 80 cf 19 c0       	mov    0xc019cf80,%eax$/;"	l
c010adf2	obj/kernel.asm	/^c010adf2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010adf5	obj/kernel.asm	/^c010adf5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adf8	obj/kernel.asm	/^c010adf8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010adfb	obj/kernel.asm	/^c010adfb:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010adfe	obj/kernel.asm	/^c010adfe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae01	obj/kernel.asm	/^c010ae01:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010ae04	obj/kernel.asm	/^c010ae04:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010ae09	obj/kernel.asm	/^c010ae09:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010ae0c	obj/kernel.asm	/^c010ae0c:	74 0b                	je     c010ae19 <schedule+0xb9>$/;"	l
c010ae0e	obj/kernel.asm	/^c010ae0e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae11	obj/kernel.asm	/^c010ae11:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae14	obj/kernel.asm	/^c010ae14:	e8 a2 e8 ff ff       	call   c01096bb <proc_run>$/;"	l
c010ae19	obj/kernel.asm	/^c010ae19:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae1c	obj/kernel.asm	/^c010ae1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae1f	obj/kernel.asm	/^c010ae1f:	e8 a5 fe ff ff       	call   c010acc9 <__intr_restore>$/;"	l
c010ae24	obj/kernel.asm	/^c010ae24:	c9                   	leave  $/;"	l
c010ae25	obj/kernel.asm	/^c010ae25:	c3                   	ret    $/;"	l
c010ae26	obj/kernel.asm	/^c010ae26 <sys_exit>:$/;"	l
c010ae26	obj/kernel.asm	/^c010ae26:	55                   	push   %ebp$/;"	l
c010ae27	obj/kernel.asm	/^c010ae27:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae29	obj/kernel.asm	/^c010ae29:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ae2c	obj/kernel.asm	/^c010ae2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae2f	obj/kernel.asm	/^c010ae2f:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae31	obj/kernel.asm	/^c010ae31:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae34	obj/kernel.asm	/^c010ae34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae37	obj/kernel.asm	/^c010ae37:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae3a	obj/kernel.asm	/^c010ae3a:	e8 0a ef ff ff       	call   c0109d49 <do_exit>$/;"	l
c010ae3f	obj/kernel.asm	/^c010ae3f:	c9                   	leave  $/;"	l
c010ae40	obj/kernel.asm	/^c010ae40:	c3                   	ret    $/;"	l
c010ae41	obj/kernel.asm	/^c010ae41 <sys_fork>:$/;"	l
c010ae41	obj/kernel.asm	/^c010ae41:	55                   	push   %ebp$/;"	l
c010ae42	obj/kernel.asm	/^c010ae42:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae44	obj/kernel.asm	/^c010ae44:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ae47	obj/kernel.asm	/^c010ae47:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010ae4c	obj/kernel.asm	/^c010ae4c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae4f	obj/kernel.asm	/^c010ae4f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae52	obj/kernel.asm	/^c010ae52:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae55	obj/kernel.asm	/^c010ae55:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010ae58	obj/kernel.asm	/^c010ae58:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ae5b	obj/kernel.asm	/^c010ae5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae5e	obj/kernel.asm	/^c010ae5e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010ae62	obj/kernel.asm	/^c010ae62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae65	obj/kernel.asm	/^c010ae65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ae69	obj/kernel.asm	/^c010ae69:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010ae70	obj/kernel.asm	/^c010ae70:	e8 89 ed ff ff       	call   c0109bfe <do_fork>$/;"	l
c010ae75	obj/kernel.asm	/^c010ae75:	c9                   	leave  $/;"	l
c010ae76	obj/kernel.asm	/^c010ae76:	c3                   	ret    $/;"	l
c010ae77	obj/kernel.asm	/^c010ae77 <sys_wait>:$/;"	l
c010ae77	obj/kernel.asm	/^c010ae77:	55                   	push   %ebp$/;"	l
c010ae78	obj/kernel.asm	/^c010ae78:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae7a	obj/kernel.asm	/^c010ae7a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ae7d	obj/kernel.asm	/^c010ae7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae80	obj/kernel.asm	/^c010ae80:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae82	obj/kernel.asm	/^c010ae82:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae85	obj/kernel.asm	/^c010ae85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae88	obj/kernel.asm	/^c010ae88:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ae8b	obj/kernel.asm	/^c010ae8b:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae8d	obj/kernel.asm	/^c010ae8d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ae90	obj/kernel.asm	/^c010ae90:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae93	obj/kernel.asm	/^c010ae93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ae97	obj/kernel.asm	/^c010ae97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae9a	obj/kernel.asm	/^c010ae9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae9d	obj/kernel.asm	/^c010ae9d:	e8 d7 f7 ff ff       	call   c010a679 <do_wait>$/;"	l
c010aea2	obj/kernel.asm	/^c010aea2:	c9                   	leave  $/;"	l
c010aea3	obj/kernel.asm	/^c010aea3:	c3                   	ret    $/;"	l
c010aea4	obj/kernel.asm	/^c010aea4 <sys_exec>:$/;"	l
c010aea4	obj/kernel.asm	/^c010aea4:	55                   	push   %ebp$/;"	l
c010aea5	obj/kernel.asm	/^c010aea5:	89 e5                	mov    %esp,%ebp$/;"	l
c010aea7	obj/kernel.asm	/^c010aea7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010aeaa	obj/kernel.asm	/^c010aeaa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aead	obj/kernel.asm	/^c010aead:	8b 00                	mov    (%eax),%eax$/;"	l
c010aeaf	obj/kernel.asm	/^c010aeaf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aeb2	obj/kernel.asm	/^c010aeb2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aeb5	obj/kernel.asm	/^c010aeb5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aeb8	obj/kernel.asm	/^c010aeb8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aebb	obj/kernel.asm	/^c010aebb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aebe	obj/kernel.asm	/^c010aebe:	83 c0 08             	add    $0x8,%eax$/;"	l
c010aec1	obj/kernel.asm	/^c010aec1:	8b 00                	mov    (%eax),%eax$/;"	l
c010aec3	obj/kernel.asm	/^c010aec3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010aec6	obj/kernel.asm	/^c010aec6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aec9	obj/kernel.asm	/^c010aec9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aecc	obj/kernel.asm	/^c010aecc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010aecf	obj/kernel.asm	/^c010aecf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aed2	obj/kernel.asm	/^c010aed2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010aed6	obj/kernel.asm	/^c010aed6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aed9	obj/kernel.asm	/^c010aed9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010aedd	obj/kernel.asm	/^c010aedd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aee0	obj/kernel.asm	/^c010aee0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aee4	obj/kernel.asm	/^c010aee4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aee7	obj/kernel.asm	/^c010aee7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aeea	obj/kernel.asm	/^c010aeea:	e8 3e f6 ff ff       	call   c010a52d <do_execve>$/;"	l
c010aeef	obj/kernel.asm	/^c010aeef:	c9                   	leave  $/;"	l
c010aef0	obj/kernel.asm	/^c010aef0:	c3                   	ret    $/;"	l
c010aef1	obj/kernel.asm	/^c010aef1 <sys_yield>:$/;"	l
c010aef1	obj/kernel.asm	/^c010aef1:	55                   	push   %ebp$/;"	l
c010aef2	obj/kernel.asm	/^c010aef2:	89 e5                	mov    %esp,%ebp$/;"	l
c010aef4	obj/kernel.asm	/^c010aef4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aef7	obj/kernel.asm	/^c010aef7:	e8 67 f7 ff ff       	call   c010a663 <do_yield>$/;"	l
c010aefc	obj/kernel.asm	/^c010aefc:	c9                   	leave  $/;"	l
c010aefd	obj/kernel.asm	/^c010aefd:	c3                   	ret    $/;"	l
c010aefe	obj/kernel.asm	/^c010aefe <sys_kill>:$/;"	l
c010aefe	obj/kernel.asm	/^c010aefe:	55                   	push   %ebp$/;"	l
c010aeff	obj/kernel.asm	/^c010aeff:	89 e5                	mov    %esp,%ebp$/;"	l
c010af01	obj/kernel.asm	/^c010af01:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010af04	obj/kernel.asm	/^c010af04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af07	obj/kernel.asm	/^c010af07:	8b 00                	mov    (%eax),%eax$/;"	l
c010af09	obj/kernel.asm	/^c010af09:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af0c	obj/kernel.asm	/^c010af0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af0f	obj/kernel.asm	/^c010af0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af12	obj/kernel.asm	/^c010af12:	e8 f6 f8 ff ff       	call   c010a80d <do_kill>$/;"	l
c010af17	obj/kernel.asm	/^c010af17:	c9                   	leave  $/;"	l
c010af18	obj/kernel.asm	/^c010af18:	c3                   	ret    $/;"	l
c010af19	obj/kernel.asm	/^c010af19 <sys_getpid>:$/;"	l
c010af19	obj/kernel.asm	/^c010af19:	55                   	push   %ebp$/;"	l
c010af1a	obj/kernel.asm	/^c010af1a:	89 e5                	mov    %esp,%ebp$/;"	l
c010af1c	obj/kernel.asm	/^c010af1c:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010af21	obj/kernel.asm	/^c010af21:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010af24	obj/kernel.asm	/^c010af24:	5d                   	pop    %ebp$/;"	l
c010af25	obj/kernel.asm	/^c010af25:	c3                   	ret    $/;"	l
c010af26	obj/kernel.asm	/^c010af26 <sys_putc>:$/;"	l
c010af26	obj/kernel.asm	/^c010af26:	55                   	push   %ebp$/;"	l
c010af27	obj/kernel.asm	/^c010af27:	89 e5                	mov    %esp,%ebp$/;"	l
c010af29	obj/kernel.asm	/^c010af29:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010af2c	obj/kernel.asm	/^c010af2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af2f	obj/kernel.asm	/^c010af2f:	8b 00                	mov    (%eax),%eax$/;"	l
c010af31	obj/kernel.asm	/^c010af31:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af34	obj/kernel.asm	/^c010af34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af37	obj/kernel.asm	/^c010af37:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af3a	obj/kernel.asm	/^c010af3a:	e8 3a 54 ff ff       	call   c0100379 <cputchar>$/;"	l
c010af3f	obj/kernel.asm	/^c010af3f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010af44	obj/kernel.asm	/^c010af44:	c9                   	leave  $/;"	l
c010af45	obj/kernel.asm	/^c010af45:	c3                   	ret    $/;"	l
c010af46	obj/kernel.asm	/^c010af46 <sys_pgdir>:$/;"	l
c010af46	obj/kernel.asm	/^c010af46:	55                   	push   %ebp$/;"	l
c010af47	obj/kernel.asm	/^c010af47:	89 e5                	mov    %esp,%ebp$/;"	l
c010af49	obj/kernel.asm	/^c010af49:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af4c	obj/kernel.asm	/^c010af4c:	e8 8f bb ff ff       	call   c0106ae0 <print_pgdir>$/;"	l
c010af51	obj/kernel.asm	/^c010af51:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010af56	obj/kernel.asm	/^c010af56:	c9                   	leave  $/;"	l
c010af57	obj/kernel.asm	/^c010af57:	c3                   	ret    $/;"	l
c010af58	obj/kernel.asm	/^c010af58 <syscall>:$/;"	l
c010af58	obj/kernel.asm	/^c010af58:	55                   	push   %ebp$/;"	l
c010af59	obj/kernel.asm	/^c010af59:	89 e5                	mov    %esp,%ebp$/;"	l
c010af5b	obj/kernel.asm	/^c010af5b:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010af5e	obj/kernel.asm	/^c010af5e:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010af63	obj/kernel.asm	/^c010af63:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010af66	obj/kernel.asm	/^c010af66:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af69	obj/kernel.asm	/^c010af69:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af6c	obj/kernel.asm	/^c010af6c:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010af6f	obj/kernel.asm	/^c010af6f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010af72	obj/kernel.asm	/^c010af72:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010af76	obj/kernel.asm	/^c010af76:	78 5e                	js     c010afd6 <syscall+0x7e>$/;"	l
c010af78	obj/kernel.asm	/^c010af78:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010af7b	obj/kernel.asm	/^c010af7b:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
c010af7e	obj/kernel.asm	/^c010af7e:	77 56                	ja     c010afd6 <syscall+0x7e>$/;"	l
c010af80	obj/kernel.asm	/^c010af80:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010af83	obj/kernel.asm	/^c010af83:	8b 04 85 a0 aa 12 c0 	mov    -0x3fed5560(,%eax,4),%eax$/;"	l
c010af8a	obj/kernel.asm	/^c010af8a:	85 c0                	test   %eax,%eax$/;"	l
c010af8c	obj/kernel.asm	/^c010af8c:	74 48                	je     c010afd6 <syscall+0x7e>$/;"	l
c010af8e	obj/kernel.asm	/^c010af8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af91	obj/kernel.asm	/^c010af91:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010af94	obj/kernel.asm	/^c010af94:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010af97	obj/kernel.asm	/^c010af97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af9a	obj/kernel.asm	/^c010af9a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010af9d	obj/kernel.asm	/^c010af9d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010afa0	obj/kernel.asm	/^c010afa0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afa3	obj/kernel.asm	/^c010afa3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010afa6	obj/kernel.asm	/^c010afa6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010afa9	obj/kernel.asm	/^c010afa9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afac	obj/kernel.asm	/^c010afac:	8b 00                	mov    (%eax),%eax$/;"	l
c010afae	obj/kernel.asm	/^c010afae:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010afb1	obj/kernel.asm	/^c010afb1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afb4	obj/kernel.asm	/^c010afb4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010afb7	obj/kernel.asm	/^c010afb7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010afba	obj/kernel.asm	/^c010afba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010afbd	obj/kernel.asm	/^c010afbd:	8b 04 85 a0 aa 12 c0 	mov    -0x3fed5560(,%eax,4),%eax$/;"	l
c010afc4	obj/kernel.asm	/^c010afc4:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010afc7	obj/kernel.asm	/^c010afc7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010afca	obj/kernel.asm	/^c010afca:	ff d0                	call   *%eax$/;"	l
c010afcc	obj/kernel.asm	/^c010afcc:	89 c2                	mov    %eax,%edx$/;"	l
c010afce	obj/kernel.asm	/^c010afce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afd1	obj/kernel.asm	/^c010afd1:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010afd4	obj/kernel.asm	/^c010afd4:	eb 46                	jmp    c010b01c <syscall+0xc4>$/;"	l
c010afd6	obj/kernel.asm	/^c010afd6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afd9	obj/kernel.asm	/^c010afd9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010afdc	obj/kernel.asm	/^c010afdc:	e8 e7 73 ff ff       	call   c01023c8 <print_trapframe>$/;"	l
c010afe1	obj/kernel.asm	/^c010afe1:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010afe6	obj/kernel.asm	/^c010afe6:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010afe9	obj/kernel.asm	/^c010afe9:	a1 88 cf 19 c0       	mov    0xc019cf88,%eax$/;"	l
c010afee	obj/kernel.asm	/^c010afee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aff1	obj/kernel.asm	/^c010aff1:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010aff5	obj/kernel.asm	/^c010aff5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010aff9	obj/kernel.asm	/^c010aff9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010affc	obj/kernel.asm	/^c010affc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b000	obj/kernel.asm	/^c010b000:	c7 44 24 08 60 e0 10 	movl   $0xc010e060,0x8(%esp)$/;"	l
c010b007	obj/kernel.asm	/^c010b007:	c0 $/;"	l
c010b008	obj/kernel.asm	/^c010b008:	c7 44 24 04 63 00 00 	movl   $0x63,0x4(%esp)$/;"	l
c010b00f	obj/kernel.asm	/^c010b00f:	00 $/;"	l
c010b010	obj/kernel.asm	/^c010b010:	c7 04 24 8c e0 10 c0 	movl   $0xc010e08c,(%esp)$/;"	l
c010b017	obj/kernel.asm	/^c010b017:	e8 b9 5d ff ff       	call   c0100dd5 <__panic>$/;"	l
c010b01c	obj/kernel.asm	/^c010b01c:	c9                   	leave  $/;"	l
c010b01d	obj/kernel.asm	/^c010b01d:	c3                   	ret    $/;"	l
c010b01e	obj/kernel.asm	/^c010b01e <hash32>:$/;"	l
c010b01e	obj/kernel.asm	/^c010b01e:	55                   	push   %ebp$/;"	l
c010b01f	obj/kernel.asm	/^c010b01f:	89 e5                	mov    %esp,%ebp$/;"	l
c010b021	obj/kernel.asm	/^c010b021:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b024	obj/kernel.asm	/^c010b024:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b027	obj/kernel.asm	/^c010b027:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c010b02d	obj/kernel.asm	/^c010b02d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b030	obj/kernel.asm	/^c010b030:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c010b035	obj/kernel.asm	/^c010b035:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010b038	obj/kernel.asm	/^c010b038:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010b03b	obj/kernel.asm	/^c010b03b:	89 c1                	mov    %eax,%ecx$/;"	l
c010b03d	obj/kernel.asm	/^c010b03d:	d3 ea                	shr    %cl,%edx$/;"	d
c010b03f	obj/kernel.asm	/^c010b03f:	89 d0                	mov    %edx,%eax$/;"	l
c010b041	obj/kernel.asm	/^c010b041:	c9                   	leave  $/;"	l
c010b042	obj/kernel.asm	/^c010b042:	c3                   	ret    $/;"	l
c010b043	obj/kernel.asm	/^c010b043 <printnum>:$/;"	l
c010b043	obj/kernel.asm	/^c010b043:	55                   	push   %ebp$/;"	l
c010b044	obj/kernel.asm	/^c010b044:	89 e5                	mov    %esp,%ebp$/;"	l
c010b046	obj/kernel.asm	/^c010b046:	83 ec 58             	sub    $0x58,%esp$/;"	l
c010b049	obj/kernel.asm	/^c010b049:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b04c	obj/kernel.asm	/^c010b04c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010b04f	obj/kernel.asm	/^c010b04f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b052	obj/kernel.asm	/^c010b052:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010b055	obj/kernel.asm	/^c010b055:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b058	obj/kernel.asm	/^c010b058:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010b05b	obj/kernel.asm	/^c010b05b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b05e	obj/kernel.asm	/^c010b05e:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b061	obj/kernel.asm	/^c010b061:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b064	obj/kernel.asm	/^c010b064:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b067	obj/kernel.asm	/^c010b067:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b06a	obj/kernel.asm	/^c010b06a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b06d	obj/kernel.asm	/^c010b06d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b070	obj/kernel.asm	/^c010b070:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010b073	obj/kernel.asm	/^c010b073:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b076	obj/kernel.asm	/^c010b076:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b079	obj/kernel.asm	/^c010b079:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b07d	obj/kernel.asm	/^c010b07d:	74 1c                	je     c010b09b <printnum+0x58>$/;"	l
c010b07f	obj/kernel.asm	/^c010b07f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b082	obj/kernel.asm	/^c010b082:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b087	obj/kernel.asm	/^c010b087:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b08a	obj/kernel.asm	/^c010b08a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b08d	obj/kernel.asm	/^c010b08d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b090	obj/kernel.asm	/^c010b090:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b095	obj/kernel.asm	/^c010b095:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b098	obj/kernel.asm	/^c010b098:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b09b	obj/kernel.asm	/^c010b09b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b09e	obj/kernel.asm	/^c010b09e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b0a1	obj/kernel.asm	/^c010b0a1:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b0a4	obj/kernel.asm	/^c010b0a4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b0a7	obj/kernel.asm	/^c010b0a7:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c010b0aa	obj/kernel.asm	/^c010b0aa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b0ad	obj/kernel.asm	/^c010b0ad:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b0b0	obj/kernel.asm	/^c010b0b0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b0b3	obj/kernel.asm	/^c010b0b3:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b0b6	obj/kernel.asm	/^c010b0b6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b0b9	obj/kernel.asm	/^c010b0b9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010b0bc	obj/kernel.asm	/^c010b0bc:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b0bf	obj/kernel.asm	/^c010b0bf:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b0c4	obj/kernel.asm	/^c010b0c4:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010b0c7	obj/kernel.asm	/^c010b0c7:	77 56                	ja     c010b11f <printnum+0xdc>$/;"	l
c010b0c9	obj/kernel.asm	/^c010b0c9:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010b0cc	obj/kernel.asm	/^c010b0cc:	72 05                	jb     c010b0d3 <printnum+0x90>$/;"	l
c010b0ce	obj/kernel.asm	/^c010b0ce:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c010b0d1	obj/kernel.asm	/^c010b0d1:	77 4c                	ja     c010b11f <printnum+0xdc>$/;"	l
c010b0d3	obj/kernel.asm	/^c010b0d3:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c010b0d6	obj/kernel.asm	/^c010b0d6:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b0d9	obj/kernel.asm	/^c010b0d9:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c010b0dc	obj/kernel.asm	/^c010b0dc:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
c010b0e0	obj/kernel.asm	/^c010b0e0:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010b0e4	obj/kernel.asm	/^c010b0e4:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b0e7	obj/kernel.asm	/^c010b0e7:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010b0eb	obj/kernel.asm	/^c010b0eb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b0ee	obj/kernel.asm	/^c010b0ee:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b0f1	obj/kernel.asm	/^c010b0f1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b0f5	obj/kernel.asm	/^c010b0f5:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b0f9	obj/kernel.asm	/^c010b0f9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b0fc	obj/kernel.asm	/^c010b0fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b100	obj/kernel.asm	/^c010b100:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b103	obj/kernel.asm	/^c010b103:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b106	obj/kernel.asm	/^c010b106:	e8 38 ff ff ff       	call   c010b043 <printnum>$/;"	l
c010b10b	obj/kernel.asm	/^c010b10b:	eb 1c                	jmp    c010b129 <printnum+0xe6>$/;"	l
c010b10d	obj/kernel.asm	/^c010b10d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b110	obj/kernel.asm	/^c010b110:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b114	obj/kernel.asm	/^c010b114:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c010b117	obj/kernel.asm	/^c010b117:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b11a	obj/kernel.asm	/^c010b11a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b11d	obj/kernel.asm	/^c010b11d:	ff d0                	call   *%eax$/;"	l
c010b11f	obj/kernel.asm	/^c010b11f:	83 6d 1c 01          	subl   $0x1,0x1c(%ebp)$/;"	l
c010b123	obj/kernel.asm	/^c010b123:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c010b127	obj/kernel.asm	/^c010b127:	7f e4                	jg     c010b10d <printnum+0xca>$/;"	l
c010b129	obj/kernel.asm	/^c010b129:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b12c	obj/kernel.asm	/^c010b12c:	05 c4 e1 10 c0       	add    $0xc010e1c4,%eax$/;"	l
c010b131	obj/kernel.asm	/^c010b131:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b134	obj/kernel.asm	/^c010b134:	0f be c0             	movsbl %al,%eax$/;"	l
c010b137	obj/kernel.asm	/^c010b137:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b13a	obj/kernel.asm	/^c010b13a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b13e	obj/kernel.asm	/^c010b13e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b141	obj/kernel.asm	/^c010b141:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b144	obj/kernel.asm	/^c010b144:	ff d0                	call   *%eax$/;"	l
c010b146	obj/kernel.asm	/^c010b146:	c9                   	leave  $/;"	l
c010b147	obj/kernel.asm	/^c010b147:	c3                   	ret    $/;"	l
c010b148	obj/kernel.asm	/^c010b148 <getuint>:$/;"	l
c010b148	obj/kernel.asm	/^c010b148:	55                   	push   %ebp$/;"	l
c010b149	obj/kernel.asm	/^c010b149:	89 e5                	mov    %esp,%ebp$/;"	l
c010b14b	obj/kernel.asm	/^c010b14b:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010b14f	obj/kernel.asm	/^c010b14f:	7e 14                	jle    c010b165 <getuint+0x1d>$/;"	l
c010b151	obj/kernel.asm	/^c010b151:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b154	obj/kernel.asm	/^c010b154:	8b 00                	mov    (%eax),%eax$/;"	l
c010b156	obj/kernel.asm	/^c010b156:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010b159	obj/kernel.asm	/^c010b159:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b15c	obj/kernel.asm	/^c010b15c:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b15e	obj/kernel.asm	/^c010b15e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b161	obj/kernel.asm	/^c010b161:	8b 00                	mov    (%eax),%eax$/;"	l
c010b163	obj/kernel.asm	/^c010b163:	eb 30                	jmp    c010b195 <getuint+0x4d>$/;"	l
c010b165	obj/kernel.asm	/^c010b165:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b169	obj/kernel.asm	/^c010b169:	74 16                	je     c010b181 <getuint+0x39>$/;"	l
c010b16b	obj/kernel.asm	/^c010b16b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b16e	obj/kernel.asm	/^c010b16e:	8b 00                	mov    (%eax),%eax$/;"	l
c010b170	obj/kernel.asm	/^c010b170:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b173	obj/kernel.asm	/^c010b173:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b176	obj/kernel.asm	/^c010b176:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b178	obj/kernel.asm	/^c010b178:	8b 00                	mov    (%eax),%eax$/;"	l
c010b17a	obj/kernel.asm	/^c010b17a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b17f	obj/kernel.asm	/^c010b17f:	eb 14                	jmp    c010b195 <getuint+0x4d>$/;"	l
c010b181	obj/kernel.asm	/^c010b181:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b184	obj/kernel.asm	/^c010b184:	8b 00                	mov    (%eax),%eax$/;"	l
c010b186	obj/kernel.asm	/^c010b186:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b189	obj/kernel.asm	/^c010b189:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b18c	obj/kernel.asm	/^c010b18c:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b18e	obj/kernel.asm	/^c010b18e:	8b 00                	mov    (%eax),%eax$/;"	l
c010b190	obj/kernel.asm	/^c010b190:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b195	obj/kernel.asm	/^c010b195:	5d                   	pop    %ebp$/;"	l
c010b196	obj/kernel.asm	/^c010b196:	c3                   	ret    $/;"	l
c010b197	obj/kernel.asm	/^c010b197 <getint>:$/;"	l
c010b197	obj/kernel.asm	/^c010b197:	55                   	push   %ebp$/;"	l
c010b198	obj/kernel.asm	/^c010b198:	89 e5                	mov    %esp,%ebp$/;"	l
c010b19a	obj/kernel.asm	/^c010b19a:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010b19e	obj/kernel.asm	/^c010b19e:	7e 14                	jle    c010b1b4 <getint+0x1d>$/;"	l
c010b1a0	obj/kernel.asm	/^c010b1a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1a3	obj/kernel.asm	/^c010b1a3:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1a5	obj/kernel.asm	/^c010b1a5:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010b1a8	obj/kernel.asm	/^c010b1a8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b1ab	obj/kernel.asm	/^c010b1ab:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b1ad	obj/kernel.asm	/^c010b1ad:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b1b0	obj/kernel.asm	/^c010b1b0:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1b2	obj/kernel.asm	/^c010b1b2:	eb 28                	jmp    c010b1dc <getint+0x45>$/;"	l
c010b1b4	obj/kernel.asm	/^c010b1b4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b1b8	obj/kernel.asm	/^c010b1b8:	74 12                	je     c010b1cc <getint+0x35>$/;"	l
c010b1ba	obj/kernel.asm	/^c010b1ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1bd	obj/kernel.asm	/^c010b1bd:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1bf	obj/kernel.asm	/^c010b1bf:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b1c2	obj/kernel.asm	/^c010b1c2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b1c5	obj/kernel.asm	/^c010b1c5:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b1c7	obj/kernel.asm	/^c010b1c7:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1c9	obj/kernel.asm	/^c010b1c9:	99                   	cltd   $/;"	l
c010b1ca	obj/kernel.asm	/^c010b1ca:	eb 10                	jmp    c010b1dc <getint+0x45>$/;"	l
c010b1cc	obj/kernel.asm	/^c010b1cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1cf	obj/kernel.asm	/^c010b1cf:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1d1	obj/kernel.asm	/^c010b1d1:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b1d4	obj/kernel.asm	/^c010b1d4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b1d7	obj/kernel.asm	/^c010b1d7:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b1d9	obj/kernel.asm	/^c010b1d9:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1db	obj/kernel.asm	/^c010b1db:	99                   	cltd   $/;"	l
c010b1dc	obj/kernel.asm	/^c010b1dc:	5d                   	pop    %ebp$/;"	l
c010b1dd	obj/kernel.asm	/^c010b1dd:	c3                   	ret    $/;"	l
c010b1de	obj/kernel.asm	/^c010b1de <printfmt>:$/;"	l
c010b1de	obj/kernel.asm	/^c010b1de:	55                   	push   %ebp$/;"	l
c010b1df	obj/kernel.asm	/^c010b1df:	89 e5                	mov    %esp,%ebp$/;"	l
c010b1e1	obj/kernel.asm	/^c010b1e1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b1e4	obj/kernel.asm	/^c010b1e4:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b1e7	obj/kernel.asm	/^c010b1e7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b1ea	obj/kernel.asm	/^c010b1ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b1ed	obj/kernel.asm	/^c010b1ed:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b1f1	obj/kernel.asm	/^c010b1f1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b1f4	obj/kernel.asm	/^c010b1f4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b1f8	obj/kernel.asm	/^c010b1f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b1fb	obj/kernel.asm	/^c010b1fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b1ff	obj/kernel.asm	/^c010b1ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b202	obj/kernel.asm	/^c010b202:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b205	obj/kernel.asm	/^c010b205:	e8 02 00 00 00       	call   c010b20c <vprintfmt>$/;"	l
c010b20a	obj/kernel.asm	/^c010b20a:	c9                   	leave  $/;"	l
c010b20b	obj/kernel.asm	/^c010b20b:	c3                   	ret    $/;"	l
c010b20c	obj/kernel.asm	/^c010b20c <vprintfmt>:$/;"	l
c010b20c	obj/kernel.asm	/^c010b20c:	55                   	push   %ebp$/;"	l
c010b20d	obj/kernel.asm	/^c010b20d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b20f	obj/kernel.asm	/^c010b20f:	56                   	push   %esi$/;"	l
c010b210	obj/kernel.asm	/^c010b210:	53                   	push   %ebx$/;"	l
c010b211	obj/kernel.asm	/^c010b211:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010b214	obj/kernel.asm	/^c010b214:	eb 18                	jmp    c010b22e <vprintfmt+0x22>$/;"	l
c010b216	obj/kernel.asm	/^c010b216:	85 db                	test   %ebx,%ebx$/;"	l
c010b218	obj/kernel.asm	/^c010b218:	75 05                	jne    c010b21f <vprintfmt+0x13>$/;"	l
c010b21a	obj/kernel.asm	/^c010b21a:	e9 d1 03 00 00       	jmp    c010b5f0 <vprintfmt+0x3e4>$/;"	l
c010b21f	obj/kernel.asm	/^c010b21f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b222	obj/kernel.asm	/^c010b222:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b226	obj/kernel.asm	/^c010b226:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c010b229	obj/kernel.asm	/^c010b229:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b22c	obj/kernel.asm	/^c010b22c:	ff d0                	call   *%eax$/;"	l
c010b22e	obj/kernel.asm	/^c010b22e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b231	obj/kernel.asm	/^c010b231:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b234	obj/kernel.asm	/^c010b234:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010b237	obj/kernel.asm	/^c010b237:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b23a	obj/kernel.asm	/^c010b23a:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010b23d	obj/kernel.asm	/^c010b23d:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c010b240	obj/kernel.asm	/^c010b240:	75 d4                	jne    c010b216 <vprintfmt+0xa>$/;"	l
c010b242	obj/kernel.asm	/^c010b242:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c010b246	obj/kernel.asm	/^c010b246:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010b24d	obj/kernel.asm	/^c010b24d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b250	obj/kernel.asm	/^c010b250:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b253	obj/kernel.asm	/^c010b253:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010b25a	obj/kernel.asm	/^c010b25a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b25d	obj/kernel.asm	/^c010b25d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b260	obj/kernel.asm	/^c010b260:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b263	obj/kernel.asm	/^c010b263:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b266	obj/kernel.asm	/^c010b266:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010b269	obj/kernel.asm	/^c010b269:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b26c	obj/kernel.asm	/^c010b26c:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010b26f	obj/kernel.asm	/^c010b26f:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c010b272	obj/kernel.asm	/^c010b272:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c010b275	obj/kernel.asm	/^c010b275:	0f 87 44 03 00 00    	ja     c010b5bf <vprintfmt+0x3b3>$/;"	l
c010b27b	obj/kernel.asm	/^c010b27b:	8b 04 85 e8 e1 10 c0 	mov    -0x3fef1e18(,%eax,4),%eax$/;"	l
c010b282	obj/kernel.asm	/^c010b282:	ff e0                	jmp    *%eax$/;"	l
c010b284	obj/kernel.asm	/^c010b284:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c010b288	obj/kernel.asm	/^c010b288:	eb d6                	jmp    c010b260 <vprintfmt+0x54>$/;"	l
c010b28a	obj/kernel.asm	/^c010b28a:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c010b28e	obj/kernel.asm	/^c010b28e:	eb d0                	jmp    c010b260 <vprintfmt+0x54>$/;"	l
c010b290	obj/kernel.asm	/^c010b290:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010b297	obj/kernel.asm	/^c010b297:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010b29a	obj/kernel.asm	/^c010b29a:	89 d0                	mov    %edx,%eax$/;"	l
c010b29c	obj/kernel.asm	/^c010b29c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010b29f	obj/kernel.asm	/^c010b29f:	01 d0                	add    %edx,%eax$/;"	l
c010b2a1	obj/kernel.asm	/^c010b2a1:	01 c0                	add    %eax,%eax$/;"	l
c010b2a3	obj/kernel.asm	/^c010b2a3:	01 d8                	add    %ebx,%eax$/;"	l
c010b2a5	obj/kernel.asm	/^c010b2a5:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010b2a8	obj/kernel.asm	/^c010b2a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b2ab	obj/kernel.asm	/^c010b2ab:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b2ae	obj/kernel.asm	/^c010b2ae:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b2b1	obj/kernel.asm	/^c010b2b1:	0f be d8             	movsbl %al,%ebx$/;"	l
c010b2b4	obj/kernel.asm	/^c010b2b4:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c010b2b7	obj/kernel.asm	/^c010b2b7:	7e 0b                	jle    c010b2c4 <vprintfmt+0xb8>$/;"	l
c010b2b9	obj/kernel.asm	/^c010b2b9:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c010b2bc	obj/kernel.asm	/^c010b2bc:	7f 06                	jg     c010b2c4 <vprintfmt+0xb8>$/;"	l
c010b2be	obj/kernel.asm	/^c010b2be:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c010b2c2	obj/kernel.asm	/^c010b2c2:	eb d3                	jmp    c010b297 <vprintfmt+0x8b>$/;"	l
c010b2c4	obj/kernel.asm	/^c010b2c4:	eb 33                	jmp    c010b2f9 <vprintfmt+0xed>$/;"	l
c010b2c6	obj/kernel.asm	/^c010b2c6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b2c9	obj/kernel.asm	/^c010b2c9:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b2cc	obj/kernel.asm	/^c010b2cc:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b2cf	obj/kernel.asm	/^c010b2cf:	8b 00                	mov    (%eax),%eax$/;"	l
c010b2d1	obj/kernel.asm	/^c010b2d1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b2d4	obj/kernel.asm	/^c010b2d4:	eb 23                	jmp    c010b2f9 <vprintfmt+0xed>$/;"	l
c010b2d6	obj/kernel.asm	/^c010b2d6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b2da	obj/kernel.asm	/^c010b2da:	79 0c                	jns    c010b2e8 <vprintfmt+0xdc>$/;"	l
c010b2dc	obj/kernel.asm	/^c010b2dc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010b2e3	obj/kernel.asm	/^c010b2e3:	e9 78 ff ff ff       	jmp    c010b260 <vprintfmt+0x54>$/;"	l
c010b2e8	obj/kernel.asm	/^c010b2e8:	e9 73 ff ff ff       	jmp    c010b260 <vprintfmt+0x54>$/;"	l
c010b2ed	obj/kernel.asm	/^c010b2ed:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c010b2f4	obj/kernel.asm	/^c010b2f4:	e9 67 ff ff ff       	jmp    c010b260 <vprintfmt+0x54>$/;"	l
c010b2f9	obj/kernel.asm	/^c010b2f9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b2fd	obj/kernel.asm	/^c010b2fd:	79 12                	jns    c010b311 <vprintfmt+0x105>$/;"	l
c010b2ff	obj/kernel.asm	/^c010b2ff:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b302	obj/kernel.asm	/^c010b302:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b305	obj/kernel.asm	/^c010b305:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010b30c	obj/kernel.asm	/^c010b30c:	e9 4f ff ff ff       	jmp    c010b260 <vprintfmt+0x54>$/;"	l
c010b311	obj/kernel.asm	/^c010b311:	e9 4a ff ff ff       	jmp    c010b260 <vprintfmt+0x54>$/;"	l
c010b316	obj/kernel.asm	/^c010b316:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c010b31a	obj/kernel.asm	/^c010b31a:	e9 41 ff ff ff       	jmp    c010b260 <vprintfmt+0x54>$/;"	l
c010b31f	obj/kernel.asm	/^c010b31f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b322	obj/kernel.asm	/^c010b322:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b325	obj/kernel.asm	/^c010b325:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b328	obj/kernel.asm	/^c010b328:	8b 00                	mov    (%eax),%eax$/;"	l
c010b32a	obj/kernel.asm	/^c010b32a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b32d	obj/kernel.asm	/^c010b32d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b331	obj/kernel.asm	/^c010b331:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b334	obj/kernel.asm	/^c010b334:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b337	obj/kernel.asm	/^c010b337:	ff d0                	call   *%eax$/;"	l
c010b339	obj/kernel.asm	/^c010b339:	e9 ac 02 00 00       	jmp    c010b5ea <vprintfmt+0x3de>$/;"	l
c010b33e	obj/kernel.asm	/^c010b33e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b341	obj/kernel.asm	/^c010b341:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b344	obj/kernel.asm	/^c010b344:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b347	obj/kernel.asm	/^c010b347:	8b 18                	mov    (%eax),%ebx$/;"	l
c010b349	obj/kernel.asm	/^c010b349:	85 db                	test   %ebx,%ebx$/;"	l
c010b34b	obj/kernel.asm	/^c010b34b:	79 02                	jns    c010b34f <vprintfmt+0x143>$/;"	l
c010b34d	obj/kernel.asm	/^c010b34d:	f7 db                	neg    %ebx$/;"	l
c010b34f	obj/kernel.asm	/^c010b34f:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c010b352	obj/kernel.asm	/^c010b352:	7f 0b                	jg     c010b35f <vprintfmt+0x153>$/;"	l
c010b354	obj/kernel.asm	/^c010b354:	8b 34 9d 60 e1 10 c0 	mov    -0x3fef1ea0(,%ebx,4),%esi$/;"	l
c010b35b	obj/kernel.asm	/^c010b35b:	85 f6                	test   %esi,%esi$/;"	l
c010b35d	obj/kernel.asm	/^c010b35d:	75 23                	jne    c010b382 <vprintfmt+0x176>$/;"	l
c010b35f	obj/kernel.asm	/^c010b35f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c010b363	obj/kernel.asm	/^c010b363:	c7 44 24 08 d5 e1 10 	movl   $0xc010e1d5,0x8(%esp)$/;"	l
c010b36a	obj/kernel.asm	/^c010b36a:	c0 $/;"	l
c010b36b	obj/kernel.asm	/^c010b36b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b36e	obj/kernel.asm	/^c010b36e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b372	obj/kernel.asm	/^c010b372:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b375	obj/kernel.asm	/^c010b375:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b378	obj/kernel.asm	/^c010b378:	e8 61 fe ff ff       	call   c010b1de <printfmt>$/;"	l
c010b37d	obj/kernel.asm	/^c010b37d:	e9 68 02 00 00       	jmp    c010b5ea <vprintfmt+0x3de>$/;"	l
c010b382	obj/kernel.asm	/^c010b382:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
c010b386	obj/kernel.asm	/^c010b386:	c7 44 24 08 de e1 10 	movl   $0xc010e1de,0x8(%esp)$/;"	l
c010b38d	obj/kernel.asm	/^c010b38d:	c0 $/;"	l
c010b38e	obj/kernel.asm	/^c010b38e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b391	obj/kernel.asm	/^c010b391:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b395	obj/kernel.asm	/^c010b395:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b398	obj/kernel.asm	/^c010b398:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b39b	obj/kernel.asm	/^c010b39b:	e8 3e fe ff ff       	call   c010b1de <printfmt>$/;"	l
c010b3a0	obj/kernel.asm	/^c010b3a0:	e9 45 02 00 00       	jmp    c010b5ea <vprintfmt+0x3de>$/;"	l
c010b3a5	obj/kernel.asm	/^c010b3a5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b3a8	obj/kernel.asm	/^c010b3a8:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b3ab	obj/kernel.asm	/^c010b3ab:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b3ae	obj/kernel.asm	/^c010b3ae:	8b 30                	mov    (%eax),%esi$/;"	l
c010b3b0	obj/kernel.asm	/^c010b3b0:	85 f6                	test   %esi,%esi$/;"	l
c010b3b2	obj/kernel.asm	/^c010b3b2:	75 05                	jne    c010b3b9 <vprintfmt+0x1ad>$/;"	l
c010b3b4	obj/kernel.asm	/^c010b3b4:	be e1 e1 10 c0       	mov    $0xc010e1e1,%esi$/;"	l
c010b3b9	obj/kernel.asm	/^c010b3b9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b3bd	obj/kernel.asm	/^c010b3bd:	7e 3e                	jle    c010b3fd <vprintfmt+0x1f1>$/;"	l
c010b3bf	obj/kernel.asm	/^c010b3bf:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c010b3c3	obj/kernel.asm	/^c010b3c3:	74 38                	je     c010b3fd <vprintfmt+0x1f1>$/;"	l
c010b3c5	obj/kernel.asm	/^c010b3c5:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
c010b3c8	obj/kernel.asm	/^c010b3c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b3cb	obj/kernel.asm	/^c010b3cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b3cf	obj/kernel.asm	/^c010b3cf:	89 34 24             	mov    %esi,(%esp)$/;"	l
c010b3d2	obj/kernel.asm	/^c010b3d2:	e8 ed 03 00 00       	call   c010b7c4 <strnlen>$/;"	l
c010b3d7	obj/kernel.asm	/^c010b3d7:	29 c3                	sub    %eax,%ebx$/;"	l
c010b3d9	obj/kernel.asm	/^c010b3d9:	89 d8                	mov    %ebx,%eax$/;"	l
c010b3db	obj/kernel.asm	/^c010b3db:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b3de	obj/kernel.asm	/^c010b3de:	eb 17                	jmp    c010b3f7 <vprintfmt+0x1eb>$/;"	l
c010b3e0	obj/kernel.asm	/^c010b3e0:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c010b3e4	obj/kernel.asm	/^c010b3e4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b3e7	obj/kernel.asm	/^c010b3e7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b3eb	obj/kernel.asm	/^c010b3eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b3ee	obj/kernel.asm	/^c010b3ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3f1	obj/kernel.asm	/^c010b3f1:	ff d0                	call   *%eax$/;"	l
c010b3f3	obj/kernel.asm	/^c010b3f3:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b3f7	obj/kernel.asm	/^c010b3f7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b3fb	obj/kernel.asm	/^c010b3fb:	7f e3                	jg     c010b3e0 <vprintfmt+0x1d4>$/;"	l
c010b3fd	obj/kernel.asm	/^c010b3fd:	eb 38                	jmp    c010b437 <vprintfmt+0x22b>$/;"	l
c010b3ff	obj/kernel.asm	/^c010b3ff:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010b403	obj/kernel.asm	/^c010b403:	74 1f                	je     c010b424 <vprintfmt+0x218>$/;"	l
c010b405	obj/kernel.asm	/^c010b405:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c010b408	obj/kernel.asm	/^c010b408:	7e 05                	jle    c010b40f <vprintfmt+0x203>$/;"	l
c010b40a	obj/kernel.asm	/^c010b40a:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c010b40d	obj/kernel.asm	/^c010b40d:	7e 15                	jle    c010b424 <vprintfmt+0x218>$/;"	l
c010b40f	obj/kernel.asm	/^c010b40f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b412	obj/kernel.asm	/^c010b412:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b416	obj/kernel.asm	/^c010b416:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
c010b41d	obj/kernel.asm	/^c010b41d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b420	obj/kernel.asm	/^c010b420:	ff d0                	call   *%eax$/;"	l
c010b422	obj/kernel.asm	/^c010b422:	eb 0f                	jmp    c010b433 <vprintfmt+0x227>$/;"	l
c010b424	obj/kernel.asm	/^c010b424:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b427	obj/kernel.asm	/^c010b427:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b42b	obj/kernel.asm	/^c010b42b:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c010b42e	obj/kernel.asm	/^c010b42e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b431	obj/kernel.asm	/^c010b431:	ff d0                	call   *%eax$/;"	l
c010b433	obj/kernel.asm	/^c010b433:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b437	obj/kernel.asm	/^c010b437:	89 f0                	mov    %esi,%eax$/;"	l
c010b439	obj/kernel.asm	/^c010b439:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c010b43c	obj/kernel.asm	/^c010b43c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b43f	obj/kernel.asm	/^c010b43f:	0f be d8             	movsbl %al,%ebx$/;"	l
c010b442	obj/kernel.asm	/^c010b442:	85 db                	test   %ebx,%ebx$/;"	l
c010b444	obj/kernel.asm	/^c010b444:	74 10                	je     c010b456 <vprintfmt+0x24a>$/;"	l
c010b446	obj/kernel.asm	/^c010b446:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010b44a	obj/kernel.asm	/^c010b44a:	78 b3                	js     c010b3ff <vprintfmt+0x1f3>$/;"	l
c010b44c	obj/kernel.asm	/^c010b44c:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c010b450	obj/kernel.asm	/^c010b450:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010b454	obj/kernel.asm	/^c010b454:	79 a9                	jns    c010b3ff <vprintfmt+0x1f3>$/;"	l
c010b456	obj/kernel.asm	/^c010b456:	eb 17                	jmp    c010b46f <vprintfmt+0x263>$/;"	l
c010b458	obj/kernel.asm	/^c010b458:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b45b	obj/kernel.asm	/^c010b45b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b45f	obj/kernel.asm	/^c010b45f:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c010b466	obj/kernel.asm	/^c010b466:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b469	obj/kernel.asm	/^c010b469:	ff d0                	call   *%eax$/;"	l
c010b46b	obj/kernel.asm	/^c010b46b:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b46f	obj/kernel.asm	/^c010b46f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b473	obj/kernel.asm	/^c010b473:	7f e3                	jg     c010b458 <vprintfmt+0x24c>$/;"	l
c010b475	obj/kernel.asm	/^c010b475:	e9 70 01 00 00       	jmp    c010b5ea <vprintfmt+0x3de>$/;"	l
c010b47a	obj/kernel.asm	/^c010b47a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b47d	obj/kernel.asm	/^c010b47d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b481	obj/kernel.asm	/^c010b481:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b484	obj/kernel.asm	/^c010b484:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b487	obj/kernel.asm	/^c010b487:	e8 0b fd ff ff       	call   c010b197 <getint>$/;"	l
c010b48c	obj/kernel.asm	/^c010b48c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b48f	obj/kernel.asm	/^c010b48f:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b492	obj/kernel.asm	/^c010b492:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b495	obj/kernel.asm	/^c010b495:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b498	obj/kernel.asm	/^c010b498:	85 d2                	test   %edx,%edx$/;"	l
c010b49a	obj/kernel.asm	/^c010b49a:	79 26                	jns    c010b4c2 <vprintfmt+0x2b6>$/;"	l
c010b49c	obj/kernel.asm	/^c010b49c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b49f	obj/kernel.asm	/^c010b49f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b4a3	obj/kernel.asm	/^c010b4a3:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
c010b4aa	obj/kernel.asm	/^c010b4aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4ad	obj/kernel.asm	/^c010b4ad:	ff d0                	call   *%eax$/;"	l
c010b4af	obj/kernel.asm	/^c010b4af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b4b2	obj/kernel.asm	/^c010b4b2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b4b5	obj/kernel.asm	/^c010b4b5:	f7 d8                	neg    %eax$/;"	l
c010b4b7	obj/kernel.asm	/^c010b4b7:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010b4ba	obj/kernel.asm	/^c010b4ba:	f7 da                	neg    %edx$/;"	l
c010b4bc	obj/kernel.asm	/^c010b4bc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b4bf	obj/kernel.asm	/^c010b4bf:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b4c2	obj/kernel.asm	/^c010b4c2:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010b4c9	obj/kernel.asm	/^c010b4c9:	e9 a8 00 00 00       	jmp    c010b576 <vprintfmt+0x36a>$/;"	l
c010b4ce	obj/kernel.asm	/^c010b4ce:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b4d1	obj/kernel.asm	/^c010b4d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b4d5	obj/kernel.asm	/^c010b4d5:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b4d8	obj/kernel.asm	/^c010b4d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4db	obj/kernel.asm	/^c010b4db:	e8 68 fc ff ff       	call   c010b148 <getuint>$/;"	l
c010b4e0	obj/kernel.asm	/^c010b4e0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b4e3	obj/kernel.asm	/^c010b4e3:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b4e6	obj/kernel.asm	/^c010b4e6:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010b4ed	obj/kernel.asm	/^c010b4ed:	e9 84 00 00 00       	jmp    c010b576 <vprintfmt+0x36a>$/;"	l
c010b4f2	obj/kernel.asm	/^c010b4f2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b4f5	obj/kernel.asm	/^c010b4f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b4f9	obj/kernel.asm	/^c010b4f9:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b4fc	obj/kernel.asm	/^c010b4fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4ff	obj/kernel.asm	/^c010b4ff:	e8 44 fc ff ff       	call   c010b148 <getuint>$/;"	l
c010b504	obj/kernel.asm	/^c010b504:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b507	obj/kernel.asm	/^c010b507:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b50a	obj/kernel.asm	/^c010b50a:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c010b511	obj/kernel.asm	/^c010b511:	eb 63                	jmp    c010b576 <vprintfmt+0x36a>$/;"	l
c010b513	obj/kernel.asm	/^c010b513:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b516	obj/kernel.asm	/^c010b516:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b51a	obj/kernel.asm	/^c010b51a:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
c010b521	obj/kernel.asm	/^c010b521:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b524	obj/kernel.asm	/^c010b524:	ff d0                	call   *%eax$/;"	l
c010b526	obj/kernel.asm	/^c010b526:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b529	obj/kernel.asm	/^c010b529:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b52d	obj/kernel.asm	/^c010b52d:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
c010b534	obj/kernel.asm	/^c010b534:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b537	obj/kernel.asm	/^c010b537:	ff d0                	call   *%eax$/;"	l
c010b539	obj/kernel.asm	/^c010b539:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b53c	obj/kernel.asm	/^c010b53c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b53f	obj/kernel.asm	/^c010b53f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b542	obj/kernel.asm	/^c010b542:	8b 00                	mov    (%eax),%eax$/;"	l
c010b544	obj/kernel.asm	/^c010b544:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b547	obj/kernel.asm	/^c010b547:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b54e	obj/kernel.asm	/^c010b54e:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010b555	obj/kernel.asm	/^c010b555:	eb 1f                	jmp    c010b576 <vprintfmt+0x36a>$/;"	l
c010b557	obj/kernel.asm	/^c010b557:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b55a	obj/kernel.asm	/^c010b55a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b55e	obj/kernel.asm	/^c010b55e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b561	obj/kernel.asm	/^c010b561:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b564	obj/kernel.asm	/^c010b564:	e8 df fb ff ff       	call   c010b148 <getuint>$/;"	l
c010b569	obj/kernel.asm	/^c010b569:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b56c	obj/kernel.asm	/^c010b56c:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b56f	obj/kernel.asm	/^c010b56f:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010b576	obj/kernel.asm	/^c010b576:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c010b57a	obj/kernel.asm	/^c010b57a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b57d	obj/kernel.asm	/^c010b57d:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
c010b581	obj/kernel.asm	/^c010b581:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010b584	obj/kernel.asm	/^c010b584:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010b588	obj/kernel.asm	/^c010b588:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010b58c	obj/kernel.asm	/^c010b58c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b58f	obj/kernel.asm	/^c010b58f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b592	obj/kernel.asm	/^c010b592:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b596	obj/kernel.asm	/^c010b596:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b59a	obj/kernel.asm	/^c010b59a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b59d	obj/kernel.asm	/^c010b59d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b5a1	obj/kernel.asm	/^c010b5a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5a4	obj/kernel.asm	/^c010b5a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5a7	obj/kernel.asm	/^c010b5a7:	e8 97 fa ff ff       	call   c010b043 <printnum>$/;"	l
c010b5ac	obj/kernel.asm	/^c010b5ac:	eb 3c                	jmp    c010b5ea <vprintfmt+0x3de>$/;"	l
c010b5ae	obj/kernel.asm	/^c010b5ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b5b1	obj/kernel.asm	/^c010b5b1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b5b5	obj/kernel.asm	/^c010b5b5:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c010b5b8	obj/kernel.asm	/^c010b5b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5bb	obj/kernel.asm	/^c010b5bb:	ff d0                	call   *%eax$/;"	l
c010b5bd	obj/kernel.asm	/^c010b5bd:	eb 2b                	jmp    c010b5ea <vprintfmt+0x3de>$/;"	l
c010b5bf	obj/kernel.asm	/^c010b5bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b5c2	obj/kernel.asm	/^c010b5c2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b5c6	obj/kernel.asm	/^c010b5c6:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
c010b5cd	obj/kernel.asm	/^c010b5cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5d0	obj/kernel.asm	/^c010b5d0:	ff d0                	call   *%eax$/;"	l
c010b5d2	obj/kernel.asm	/^c010b5d2:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b5d6	obj/kernel.asm	/^c010b5d6:	eb 04                	jmp    c010b5dc <vprintfmt+0x3d0>$/;"	l
c010b5d8	obj/kernel.asm	/^c010b5d8:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b5dc	obj/kernel.asm	/^c010b5dc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b5df	obj/kernel.asm	/^c010b5df:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010b5e2	obj/kernel.asm	/^c010b5e2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b5e5	obj/kernel.asm	/^c010b5e5:	3c 25                	cmp    $0x25,%al$/;"	l
c010b5e7	obj/kernel.asm	/^c010b5e7:	75 ef                	jne    c010b5d8 <vprintfmt+0x3cc>$/;"	l
c010b5e9	obj/kernel.asm	/^c010b5e9:	90                   	nop$/;"	l
c010b5ea	obj/kernel.asm	/^c010b5ea:	90                   	nop$/;"	l
c010b5eb	obj/kernel.asm	/^c010b5eb:	e9 3e fc ff ff       	jmp    c010b22e <vprintfmt+0x22>$/;"	l
c010b5f0	obj/kernel.asm	/^c010b5f0:	83 c4 40             	add    $0x40,%esp$/;"	l
c010b5f3	obj/kernel.asm	/^c010b5f3:	5b                   	pop    %ebx$/;"	l
c010b5f4	obj/kernel.asm	/^c010b5f4:	5e                   	pop    %esi$/;"	l
c010b5f5	obj/kernel.asm	/^c010b5f5:	5d                   	pop    %ebp$/;"	l
c010b5f6	obj/kernel.asm	/^c010b5f6:	c3                   	ret    $/;"	l
c010b5f7	obj/kernel.asm	/^c010b5f7 <sprintputch>:$/;"	l
c010b5f7	obj/kernel.asm	/^c010b5f7:	55                   	push   %ebp$/;"	l
c010b5f8	obj/kernel.asm	/^c010b5f8:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5fa	obj/kernel.asm	/^c010b5fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b5fd	obj/kernel.asm	/^c010b5fd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b600	obj/kernel.asm	/^c010b600:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b603	obj/kernel.asm	/^c010b603:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b606	obj/kernel.asm	/^c010b606:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b609	obj/kernel.asm	/^c010b609:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b60c	obj/kernel.asm	/^c010b60c:	8b 10                	mov    (%eax),%edx$/;"	l
c010b60e	obj/kernel.asm	/^c010b60e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b611	obj/kernel.asm	/^c010b611:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b614	obj/kernel.asm	/^c010b614:	39 c2                	cmp    %eax,%edx$/;"	l
c010b616	obj/kernel.asm	/^c010b616:	73 12                	jae    c010b62a <sprintputch+0x33>$/;"	l
c010b618	obj/kernel.asm	/^c010b618:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b61b	obj/kernel.asm	/^c010b61b:	8b 00                	mov    (%eax),%eax$/;"	l
c010b61d	obj/kernel.asm	/^c010b61d:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010b620	obj/kernel.asm	/^c010b620:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b623	obj/kernel.asm	/^c010b623:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b625	obj/kernel.asm	/^c010b625:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b628	obj/kernel.asm	/^c010b628:	88 10                	mov    %dl,(%eax)$/;"	l
c010b62a	obj/kernel.asm	/^c010b62a:	5d                   	pop    %ebp$/;"	l
c010b62b	obj/kernel.asm	/^c010b62b:	c3                   	ret    $/;"	l
c010b62c	obj/kernel.asm	/^c010b62c <snprintf>:$/;"	l
c010b62c	obj/kernel.asm	/^c010b62c:	55                   	push   %ebp$/;"	l
c010b62d	obj/kernel.asm	/^c010b62d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b62f	obj/kernel.asm	/^c010b62f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b632	obj/kernel.asm	/^c010b632:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b635	obj/kernel.asm	/^c010b635:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b638	obj/kernel.asm	/^c010b638:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b63b	obj/kernel.asm	/^c010b63b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b63f	obj/kernel.asm	/^c010b63f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b642	obj/kernel.asm	/^c010b642:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b646	obj/kernel.asm	/^c010b646:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b649	obj/kernel.asm	/^c010b649:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b64d	obj/kernel.asm	/^c010b64d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b650	obj/kernel.asm	/^c010b650:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b653	obj/kernel.asm	/^c010b653:	e8 08 00 00 00       	call   c010b660 <vsnprintf>$/;"	l
c010b658	obj/kernel.asm	/^c010b658:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b65b	obj/kernel.asm	/^c010b65b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b65e	obj/kernel.asm	/^c010b65e:	c9                   	leave  $/;"	l
c010b65f	obj/kernel.asm	/^c010b65f:	c3                   	ret    $/;"	l
c010b660	obj/kernel.asm	/^c010b660 <vsnprintf>:$/;"	l
c010b660	obj/kernel.asm	/^c010b660:	55                   	push   %ebp$/;"	l
c010b661	obj/kernel.asm	/^c010b661:	89 e5                	mov    %esp,%ebp$/;"	l
c010b663	obj/kernel.asm	/^c010b663:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b666	obj/kernel.asm	/^c010b666:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b669	obj/kernel.asm	/^c010b669:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b66c	obj/kernel.asm	/^c010b66c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b66f	obj/kernel.asm	/^c010b66f:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b672	obj/kernel.asm	/^c010b672:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b675	obj/kernel.asm	/^c010b675:	01 d0                	add    %edx,%eax$/;"	l
c010b677	obj/kernel.asm	/^c010b677:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b67a	obj/kernel.asm	/^c010b67a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b681	obj/kernel.asm	/^c010b681:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b685	obj/kernel.asm	/^c010b685:	74 0a                	je     c010b691 <vsnprintf+0x31>$/;"	l
c010b687	obj/kernel.asm	/^c010b687:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b68a	obj/kernel.asm	/^c010b68a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b68d	obj/kernel.asm	/^c010b68d:	39 c2                	cmp    %eax,%edx$/;"	l
c010b68f	obj/kernel.asm	/^c010b68f:	76 07                	jbe    c010b698 <vsnprintf+0x38>$/;"	l
c010b691	obj/kernel.asm	/^c010b691:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b696	obj/kernel.asm	/^c010b696:	eb 2a                	jmp    c010b6c2 <vsnprintf+0x62>$/;"	l
c010b698	obj/kernel.asm	/^c010b698:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b69b	obj/kernel.asm	/^c010b69b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b69f	obj/kernel.asm	/^c010b69f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b6a2	obj/kernel.asm	/^c010b6a2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b6a6	obj/kernel.asm	/^c010b6a6:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010b6a9	obj/kernel.asm	/^c010b6a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b6ad	obj/kernel.asm	/^c010b6ad:	c7 04 24 f7 b5 10 c0 	movl   $0xc010b5f7,(%esp)$/;"	l
c010b6b4	obj/kernel.asm	/^c010b6b4:	e8 53 fb ff ff       	call   c010b20c <vprintfmt>$/;"	l
c010b6b9	obj/kernel.asm	/^c010b6b9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b6bc	obj/kernel.asm	/^c010b6bc:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010b6bf	obj/kernel.asm	/^c010b6bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6c2	obj/kernel.asm	/^c010b6c2:	c9                   	leave  $/;"	l
c010b6c3	obj/kernel.asm	/^c010b6c3:	c3                   	ret    $/;"	l
c010b6c4	obj/kernel.asm	/^c010b6c4 <rand>:$/;"	l
c010b6c4	obj/kernel.asm	/^c010b6c4:	55                   	push   %ebp$/;"	l
c010b6c5	obj/kernel.asm	/^c010b6c5:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6c7	obj/kernel.asm	/^c010b6c7:	57                   	push   %edi$/;"	l
c010b6c8	obj/kernel.asm	/^c010b6c8:	56                   	push   %esi$/;"	l
c010b6c9	obj/kernel.asm	/^c010b6c9:	53                   	push   %ebx$/;"	l
c010b6ca	obj/kernel.asm	/^c010b6ca:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010b6cd	obj/kernel.asm	/^c010b6cd:	a1 20 ab 12 c0       	mov    0xc012ab20,%eax$/;"	l
c010b6d2	obj/kernel.asm	/^c010b6d2:	8b 15 24 ab 12 c0    	mov    0xc012ab24,%edx$/;"	l
c010b6d8	obj/kernel.asm	/^c010b6d8:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c010b6de	obj/kernel.asm	/^c010b6de:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c010b6e1	obj/kernel.asm	/^c010b6e1:	01 f7                	add    %esi,%edi$/;"	l
c010b6e3	obj/kernel.asm	/^c010b6e3:	be 6d e6 ec de       	mov    $0xdeece66d,%esi$/;"	l
c010b6e8	obj/kernel.asm	/^c010b6e8:	f7 e6                	mul    %esi$/;"	l
c010b6ea	obj/kernel.asm	/^c010b6ea:	8d 34 17             	lea    (%edi,%edx,1),%esi$/;"	l
c010b6ed	obj/kernel.asm	/^c010b6ed:	89 f2                	mov    %esi,%edx$/;"	l
c010b6ef	obj/kernel.asm	/^c010b6ef:	83 c0 0b             	add    $0xb,%eax$/;"	l
c010b6f2	obj/kernel.asm	/^c010b6f2:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010b6f5	obj/kernel.asm	/^c010b6f5:	89 c7                	mov    %eax,%edi$/;"	l
c010b6f7	obj/kernel.asm	/^c010b6f7:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c010b6fa	obj/kernel.asm	/^c010b6fa:	89 f9                	mov    %edi,%ecx$/;"	l
c010b6fc	obj/kernel.asm	/^c010b6fc:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c010b6ff	obj/kernel.asm	/^c010b6ff:	89 0d 20 ab 12 c0    	mov    %ecx,0xc012ab20$/;"	l
c010b705	obj/kernel.asm	/^c010b705:	89 1d 24 ab 12 c0    	mov    %ebx,0xc012ab24$/;"	l
c010b70b	obj/kernel.asm	/^c010b70b:	a1 20 ab 12 c0       	mov    0xc012ab20,%eax$/;"	l
c010b710	obj/kernel.asm	/^c010b710:	8b 15 24 ab 12 c0    	mov    0xc012ab24,%edx$/;"	l
c010b716	obj/kernel.asm	/^c010b716:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c010b71a	obj/kernel.asm	/^c010b71a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010b71d	obj/kernel.asm	/^c010b71d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b720	obj/kernel.asm	/^c010b720:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010b723	obj/kernel.asm	/^c010b723:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c010b72a	obj/kernel.asm	/^c010b72a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b72d	obj/kernel.asm	/^c010b72d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010b730	obj/kernel.asm	/^c010b730:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010b733	obj/kernel.asm	/^c010b733:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010b736	obj/kernel.asm	/^c010b736:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b739	obj/kernel.asm	/^c010b739:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b73c	obj/kernel.asm	/^c010b73c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b740	obj/kernel.asm	/^c010b740:	74 1c                	je     c010b75e <rand+0x9a>$/;"	l
c010b742	obj/kernel.asm	/^c010b742:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b745	obj/kernel.asm	/^c010b745:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b74a	obj/kernel.asm	/^c010b74a:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010b74d	obj/kernel.asm	/^c010b74d:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b750	obj/kernel.asm	/^c010b750:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b753	obj/kernel.asm	/^c010b753:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b758	obj/kernel.asm	/^c010b758:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010b75b	obj/kernel.asm	/^c010b75b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b75e	obj/kernel.asm	/^c010b75e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b761	obj/kernel.asm	/^c010b761:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b764	obj/kernel.asm	/^c010b764:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010b767	obj/kernel.asm	/^c010b767:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010b76a	obj/kernel.asm	/^c010b76a:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010b76d	obj/kernel.asm	/^c010b76d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b770	obj/kernel.asm	/^c010b770:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010b773	obj/kernel.asm	/^c010b773:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b776	obj/kernel.asm	/^c010b776:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010b779	obj/kernel.asm	/^c010b779:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010b77c	obj/kernel.asm	/^c010b77c:	83 c4 24             	add    $0x24,%esp$/;"	l
c010b77f	obj/kernel.asm	/^c010b77f:	5b                   	pop    %ebx$/;"	l
c010b780	obj/kernel.asm	/^c010b780:	5e                   	pop    %esi$/;"	l
c010b781	obj/kernel.asm	/^c010b781:	5f                   	pop    %edi$/;"	l
c010b782	obj/kernel.asm	/^c010b782:	5d                   	pop    %ebp$/;"	l
c010b783	obj/kernel.asm	/^c010b783:	c3                   	ret    $/;"	l
c010b784	obj/kernel.asm	/^c010b784 <srand>:$/;"	l
c010b784	obj/kernel.asm	/^c010b784:	55                   	push   %ebp$/;"	l
c010b785	obj/kernel.asm	/^c010b785:	89 e5                	mov    %esp,%ebp$/;"	l
c010b787	obj/kernel.asm	/^c010b787:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b78a	obj/kernel.asm	/^c010b78a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b78f	obj/kernel.asm	/^c010b78f:	a3 20 ab 12 c0       	mov    %eax,0xc012ab20$/;"	l
c010b794	obj/kernel.asm	/^c010b794:	89 15 24 ab 12 c0    	mov    %edx,0xc012ab24$/;"	l
c010b79a	obj/kernel.asm	/^c010b79a:	5d                   	pop    %ebp$/;"	l
c010b79b	obj/kernel.asm	/^c010b79b:	c3                   	ret    $/;"	l
c010b79c	obj/kernel.asm	/^c010b79c <strlen>:$/;"	l
c010b79c	obj/kernel.asm	/^c010b79c:	55                   	push   %ebp$/;"	l
c010b79d	obj/kernel.asm	/^c010b79d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b79f	obj/kernel.asm	/^c010b79f:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b7a2	obj/kernel.asm	/^c010b7a2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010b7a9	obj/kernel.asm	/^c010b7a9:	eb 04                	jmp    c010b7af <strlen+0x13>$/;"	l
c010b7ab	obj/kernel.asm	/^c010b7ab:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010b7af	obj/kernel.asm	/^c010b7af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7b2	obj/kernel.asm	/^c010b7b2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b7b5	obj/kernel.asm	/^c010b7b5:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010b7b8	obj/kernel.asm	/^c010b7b8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b7bb	obj/kernel.asm	/^c010b7bb:	84 c0                	test   %al,%al$/;"	l
c010b7bd	obj/kernel.asm	/^c010b7bd:	75 ec                	jne    c010b7ab <strlen+0xf>$/;"	l
c010b7bf	obj/kernel.asm	/^c010b7bf:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b7c2	obj/kernel.asm	/^c010b7c2:	c9                   	leave  $/;"	l
c010b7c3	obj/kernel.asm	/^c010b7c3:	c3                   	ret    $/;"	l
c010b7c4	obj/kernel.asm	/^c010b7c4 <strnlen>:$/;"	l
c010b7c4	obj/kernel.asm	/^c010b7c4:	55                   	push   %ebp$/;"	l
c010b7c5	obj/kernel.asm	/^c010b7c5:	89 e5                	mov    %esp,%ebp$/;"	l
c010b7c7	obj/kernel.asm	/^c010b7c7:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b7ca	obj/kernel.asm	/^c010b7ca:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010b7d1	obj/kernel.asm	/^c010b7d1:	eb 04                	jmp    c010b7d7 <strnlen+0x13>$/;"	l
c010b7d3	obj/kernel.asm	/^c010b7d3:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010b7d7	obj/kernel.asm	/^c010b7d7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b7da	obj/kernel.asm	/^c010b7da:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010b7dd	obj/kernel.asm	/^c010b7dd:	73 10                	jae    c010b7ef <strnlen+0x2b>$/;"	l
c010b7df	obj/kernel.asm	/^c010b7df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7e2	obj/kernel.asm	/^c010b7e2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b7e5	obj/kernel.asm	/^c010b7e5:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010b7e8	obj/kernel.asm	/^c010b7e8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b7eb	obj/kernel.asm	/^c010b7eb:	84 c0                	test   %al,%al$/;"	l
c010b7ed	obj/kernel.asm	/^c010b7ed:	75 e4                	jne    c010b7d3 <strnlen+0xf>$/;"	l
c010b7ef	obj/kernel.asm	/^c010b7ef:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b7f2	obj/kernel.asm	/^c010b7f2:	c9                   	leave  $/;"	l
c010b7f3	obj/kernel.asm	/^c010b7f3:	c3                   	ret    $/;"	l
c010b7f4	obj/kernel.asm	/^c010b7f4 <strcpy>:$/;"	l
c010b7f4	obj/kernel.asm	/^c010b7f4:	55                   	push   %ebp$/;"	l
c010b7f5	obj/kernel.asm	/^c010b7f5:	89 e5                	mov    %esp,%ebp$/;"	l
c010b7f7	obj/kernel.asm	/^c010b7f7:	57                   	push   %edi$/;"	l
c010b7f8	obj/kernel.asm	/^c010b7f8:	56                   	push   %esi$/;"	l
c010b7f9	obj/kernel.asm	/^c010b7f9:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010b7fc	obj/kernel.asm	/^c010b7fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7ff	obj/kernel.asm	/^c010b7ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b802	obj/kernel.asm	/^c010b802:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b805	obj/kernel.asm	/^c010b805:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b808	obj/kernel.asm	/^c010b808:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b80b	obj/kernel.asm	/^c010b80b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b80e	obj/kernel.asm	/^c010b80e:	89 d1                	mov    %edx,%ecx$/;"	l
c010b810	obj/kernel.asm	/^c010b810:	89 c2                	mov    %eax,%edx$/;"	l
c010b812	obj/kernel.asm	/^c010b812:	89 ce                	mov    %ecx,%esi$/;"	l
c010b814	obj/kernel.asm	/^c010b814:	89 d7                	mov    %edx,%edi$/;"	l
c010b816	obj/kernel.asm	/^c010b816:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010b817	obj/kernel.asm	/^c010b817:	aa                   	stos   %al,%es:(%edi)$/;"	l
c010b818	obj/kernel.asm	/^c010b818:	84 c0                	test   %al,%al$/;"	l
c010b81a	obj/kernel.asm	/^c010b81a:	75 fa                	jne    c010b816 <strcpy+0x22>$/;"	l
c010b81c	obj/kernel.asm	/^c010b81c:	89 fa                	mov    %edi,%edx$/;"	l
c010b81e	obj/kernel.asm	/^c010b81e:	89 f1                	mov    %esi,%ecx$/;"	l
c010b820	obj/kernel.asm	/^c010b820:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010b823	obj/kernel.asm	/^c010b823:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010b826	obj/kernel.asm	/^c010b826:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b829	obj/kernel.asm	/^c010b829:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b82c	obj/kernel.asm	/^c010b82c:	83 c4 20             	add    $0x20,%esp$/;"	l
c010b82f	obj/kernel.asm	/^c010b82f:	5e                   	pop    %esi$/;"	l
c010b830	obj/kernel.asm	/^c010b830:	5f                   	pop    %edi$/;"	l
c010b831	obj/kernel.asm	/^c010b831:	5d                   	pop    %ebp$/;"	l
c010b832	obj/kernel.asm	/^c010b832:	c3                   	ret    $/;"	l
c010b833	obj/kernel.asm	/^c010b833 <strncpy>:$/;"	l
c010b833	obj/kernel.asm	/^c010b833:	55                   	push   %ebp$/;"	l
c010b834	obj/kernel.asm	/^c010b834:	89 e5                	mov    %esp,%ebp$/;"	l
c010b836	obj/kernel.asm	/^c010b836:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b839	obj/kernel.asm	/^c010b839:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b83c	obj/kernel.asm	/^c010b83c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b83f	obj/kernel.asm	/^c010b83f:	eb 21                	jmp    c010b862 <strncpy+0x2f>$/;"	l
c010b841	obj/kernel.asm	/^c010b841:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b844	obj/kernel.asm	/^c010b844:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010b847	obj/kernel.asm	/^c010b847:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b84a	obj/kernel.asm	/^c010b84a:	88 10                	mov    %dl,(%eax)$/;"	l
c010b84c	obj/kernel.asm	/^c010b84c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b84f	obj/kernel.asm	/^c010b84f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b852	obj/kernel.asm	/^c010b852:	84 c0                	test   %al,%al$/;"	l
c010b854	obj/kernel.asm	/^c010b854:	74 04                	je     c010b85a <strncpy+0x27>$/;"	l
c010b856	obj/kernel.asm	/^c010b856:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010b85a	obj/kernel.asm	/^c010b85a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010b85e	obj/kernel.asm	/^c010b85e:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b862	obj/kernel.asm	/^c010b862:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b866	obj/kernel.asm	/^c010b866:	75 d9                	jne    c010b841 <strncpy+0xe>$/;"	l
c010b868	obj/kernel.asm	/^c010b868:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b86b	obj/kernel.asm	/^c010b86b:	c9                   	leave  $/;"	l
c010b86c	obj/kernel.asm	/^c010b86c:	c3                   	ret    $/;"	l
c010b86d	obj/kernel.asm	/^c010b86d <strcmp>:$/;"	l
c010b86d	obj/kernel.asm	/^c010b86d:	55                   	push   %ebp$/;"	l
c010b86e	obj/kernel.asm	/^c010b86e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b870	obj/kernel.asm	/^c010b870:	57                   	push   %edi$/;"	l
c010b871	obj/kernel.asm	/^c010b871:	56                   	push   %esi$/;"	l
c010b872	obj/kernel.asm	/^c010b872:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010b875	obj/kernel.asm	/^c010b875:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b878	obj/kernel.asm	/^c010b878:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b87b	obj/kernel.asm	/^c010b87b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b87e	obj/kernel.asm	/^c010b87e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b881	obj/kernel.asm	/^c010b881:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b884	obj/kernel.asm	/^c010b884:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b887	obj/kernel.asm	/^c010b887:	89 d1                	mov    %edx,%ecx$/;"	l
c010b889	obj/kernel.asm	/^c010b889:	89 c2                	mov    %eax,%edx$/;"	l
c010b88b	obj/kernel.asm	/^c010b88b:	89 ce                	mov    %ecx,%esi$/;"	l
c010b88d	obj/kernel.asm	/^c010b88d:	89 d7                	mov    %edx,%edi$/;"	l
c010b88f	obj/kernel.asm	/^c010b88f:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010b890	obj/kernel.asm	/^c010b890:	ae                   	scas   %es:(%edi),%al$/;"	l
c010b891	obj/kernel.asm	/^c010b891:	75 08                	jne    c010b89b <strcmp+0x2e>$/;"	l
c010b893	obj/kernel.asm	/^c010b893:	84 c0                	test   %al,%al$/;"	l
c010b895	obj/kernel.asm	/^c010b895:	75 f8                	jne    c010b88f <strcmp+0x22>$/;"	l
c010b897	obj/kernel.asm	/^c010b897:	31 c0                	xor    %eax,%eax$/;"	l
c010b899	obj/kernel.asm	/^c010b899:	eb 04                	jmp    c010b89f <strcmp+0x32>$/;"	l
c010b89b	obj/kernel.asm	/^c010b89b:	19 c0                	sbb    %eax,%eax$/;"	l
c010b89d	obj/kernel.asm	/^c010b89d:	0c 01                	or     $0x1,%al$/;"	l
c010b89f	obj/kernel.asm	/^c010b89f:	89 fa                	mov    %edi,%edx$/;"	l
c010b8a1	obj/kernel.asm	/^c010b8a1:	89 f1                	mov    %esi,%ecx$/;"	l
c010b8a3	obj/kernel.asm	/^c010b8a3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b8a6	obj/kernel.asm	/^c010b8a6:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010b8a9	obj/kernel.asm	/^c010b8a9:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010b8ac	obj/kernel.asm	/^c010b8ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b8af	obj/kernel.asm	/^c010b8af:	83 c4 20             	add    $0x20,%esp$/;"	l
c010b8b2	obj/kernel.asm	/^c010b8b2:	5e                   	pop    %esi$/;"	l
c010b8b3	obj/kernel.asm	/^c010b8b3:	5f                   	pop    %edi$/;"	l
c010b8b4	obj/kernel.asm	/^c010b8b4:	5d                   	pop    %ebp$/;"	l
c010b8b5	obj/kernel.asm	/^c010b8b5:	c3                   	ret    $/;"	l
c010b8b6	obj/kernel.asm	/^c010b8b6 <strncmp>:$/;"	l
c010b8b6	obj/kernel.asm	/^c010b8b6:	55                   	push   %ebp$/;"	l
c010b8b7	obj/kernel.asm	/^c010b8b7:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8b9	obj/kernel.asm	/^c010b8b9:	eb 0c                	jmp    c010b8c7 <strncmp+0x11>$/;"	l
c010b8bb	obj/kernel.asm	/^c010b8bb:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b8bf	obj/kernel.asm	/^c010b8bf:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b8c3	obj/kernel.asm	/^c010b8c3:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010b8c7	obj/kernel.asm	/^c010b8c7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b8cb	obj/kernel.asm	/^c010b8cb:	74 1a                	je     c010b8e7 <strncmp+0x31>$/;"	l
c010b8cd	obj/kernel.asm	/^c010b8cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8d0	obj/kernel.asm	/^c010b8d0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b8d3	obj/kernel.asm	/^c010b8d3:	84 c0                	test   %al,%al$/;"	l
c010b8d5	obj/kernel.asm	/^c010b8d5:	74 10                	je     c010b8e7 <strncmp+0x31>$/;"	l
c010b8d7	obj/kernel.asm	/^c010b8d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8da	obj/kernel.asm	/^c010b8da:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010b8dd	obj/kernel.asm	/^c010b8dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b8e0	obj/kernel.asm	/^c010b8e0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b8e3	obj/kernel.asm	/^c010b8e3:	38 c2                	cmp    %al,%dl$/;"	l
c010b8e5	obj/kernel.asm	/^c010b8e5:	74 d4                	je     c010b8bb <strncmp+0x5>$/;"	l
c010b8e7	obj/kernel.asm	/^c010b8e7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b8eb	obj/kernel.asm	/^c010b8eb:	74 18                	je     c010b905 <strncmp+0x4f>$/;"	l
c010b8ed	obj/kernel.asm	/^c010b8ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8f0	obj/kernel.asm	/^c010b8f0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b8f3	obj/kernel.asm	/^c010b8f3:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010b8f6	obj/kernel.asm	/^c010b8f6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b8f9	obj/kernel.asm	/^c010b8f9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b8fc	obj/kernel.asm	/^c010b8fc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010b8ff	obj/kernel.asm	/^c010b8ff:	29 c2                	sub    %eax,%edx$/;"	l
c010b901	obj/kernel.asm	/^c010b901:	89 d0                	mov    %edx,%eax$/;"	l
c010b903	obj/kernel.asm	/^c010b903:	eb 05                	jmp    c010b90a <strncmp+0x54>$/;"	l
c010b905	obj/kernel.asm	/^c010b905:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b90a	obj/kernel.asm	/^c010b90a:	5d                   	pop    %ebp$/;"	l
c010b90b	obj/kernel.asm	/^c010b90b:	c3                   	ret    $/;"	l
c010b90c	obj/kernel.asm	/^c010b90c <strchr>:$/;"	l
c010b90c	obj/kernel.asm	/^c010b90c:	55                   	push   %ebp$/;"	l
c010b90d	obj/kernel.asm	/^c010b90d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b90f	obj/kernel.asm	/^c010b90f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b912	obj/kernel.asm	/^c010b912:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b915	obj/kernel.asm	/^c010b915:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010b918	obj/kernel.asm	/^c010b918:	eb 14                	jmp    c010b92e <strchr+0x22>$/;"	l
c010b91a	obj/kernel.asm	/^c010b91a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b91d	obj/kernel.asm	/^c010b91d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b920	obj/kernel.asm	/^c010b920:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010b923	obj/kernel.asm	/^c010b923:	75 05                	jne    c010b92a <strchr+0x1e>$/;"	l
c010b925	obj/kernel.asm	/^c010b925:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b928	obj/kernel.asm	/^c010b928:	eb 13                	jmp    c010b93d <strchr+0x31>$/;"	l
c010b92a	obj/kernel.asm	/^c010b92a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b92e	obj/kernel.asm	/^c010b92e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b931	obj/kernel.asm	/^c010b931:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b934	obj/kernel.asm	/^c010b934:	84 c0                	test   %al,%al$/;"	l
c010b936	obj/kernel.asm	/^c010b936:	75 e2                	jne    c010b91a <strchr+0xe>$/;"	l
c010b938	obj/kernel.asm	/^c010b938:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b93d	obj/kernel.asm	/^c010b93d:	c9                   	leave  $/;"	l
c010b93e	obj/kernel.asm	/^c010b93e:	c3                   	ret    $/;"	l
c010b93f	obj/kernel.asm	/^c010b93f <strfind>:$/;"	l
c010b93f	obj/kernel.asm	/^c010b93f:	55                   	push   %ebp$/;"	l
c010b940	obj/kernel.asm	/^c010b940:	89 e5                	mov    %esp,%ebp$/;"	l
c010b942	obj/kernel.asm	/^c010b942:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b945	obj/kernel.asm	/^c010b945:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b948	obj/kernel.asm	/^c010b948:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010b94b	obj/kernel.asm	/^c010b94b:	eb 11                	jmp    c010b95e <strfind+0x1f>$/;"	l
c010b94d	obj/kernel.asm	/^c010b94d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b950	obj/kernel.asm	/^c010b950:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b953	obj/kernel.asm	/^c010b953:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010b956	obj/kernel.asm	/^c010b956:	75 02                	jne    c010b95a <strfind+0x1b>$/;"	l
c010b958	obj/kernel.asm	/^c010b958:	eb 0e                	jmp    c010b968 <strfind+0x29>$/;"	l
c010b95a	obj/kernel.asm	/^c010b95a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b95e	obj/kernel.asm	/^c010b95e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b961	obj/kernel.asm	/^c010b961:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b964	obj/kernel.asm	/^c010b964:	84 c0                	test   %al,%al$/;"	l
c010b966	obj/kernel.asm	/^c010b966:	75 e5                	jne    c010b94d <strfind+0xe>$/;"	l
c010b968	obj/kernel.asm	/^c010b968:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b96b	obj/kernel.asm	/^c010b96b:	c9                   	leave  $/;"	l
c010b96c	obj/kernel.asm	/^c010b96c:	c3                   	ret    $/;"	l
c010b96d	obj/kernel.asm	/^c010b96d <strtol>:$/;"	l
c010b96d	obj/kernel.asm	/^c010b96d:	55                   	push   %ebp$/;"	l
c010b96e	obj/kernel.asm	/^c010b96e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b970	obj/kernel.asm	/^c010b970:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b973	obj/kernel.asm	/^c010b973:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010b97a	obj/kernel.asm	/^c010b97a:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010b981	obj/kernel.asm	/^c010b981:	eb 04                	jmp    c010b987 <strtol+0x1a>$/;"	l
c010b983	obj/kernel.asm	/^c010b983:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b987	obj/kernel.asm	/^c010b987:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b98a	obj/kernel.asm	/^c010b98a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b98d	obj/kernel.asm	/^c010b98d:	3c 20                	cmp    $0x20,%al$/;"	l
c010b98f	obj/kernel.asm	/^c010b98f:	74 f2                	je     c010b983 <strtol+0x16>$/;"	l
c010b991	obj/kernel.asm	/^c010b991:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b994	obj/kernel.asm	/^c010b994:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b997	obj/kernel.asm	/^c010b997:	3c 09                	cmp    $0x9,%al$/;"	l
c010b999	obj/kernel.asm	/^c010b999:	74 e8                	je     c010b983 <strtol+0x16>$/;"	l
c010b99b	obj/kernel.asm	/^c010b99b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b99e	obj/kernel.asm	/^c010b99e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b9a1	obj/kernel.asm	/^c010b9a1:	3c 2b                	cmp    $0x2b,%al$/;"	l
c010b9a3	obj/kernel.asm	/^c010b9a3:	75 06                	jne    c010b9ab <strtol+0x3e>$/;"	l
c010b9a5	obj/kernel.asm	/^c010b9a5:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b9a9	obj/kernel.asm	/^c010b9a9:	eb 15                	jmp    c010b9c0 <strtol+0x53>$/;"	l
c010b9ab	obj/kernel.asm	/^c010b9ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9ae	obj/kernel.asm	/^c010b9ae:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b9b1	obj/kernel.asm	/^c010b9b1:	3c 2d                	cmp    $0x2d,%al$/;"	l
c010b9b3	obj/kernel.asm	/^c010b9b3:	75 0b                	jne    c010b9c0 <strtol+0x53>$/;"	l
c010b9b5	obj/kernel.asm	/^c010b9b5:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b9b9	obj/kernel.asm	/^c010b9b9:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c010b9c0	obj/kernel.asm	/^c010b9c0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b9c4	obj/kernel.asm	/^c010b9c4:	74 06                	je     c010b9cc <strtol+0x5f>$/;"	l
c010b9c6	obj/kernel.asm	/^c010b9c6:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c010b9ca	obj/kernel.asm	/^c010b9ca:	75 24                	jne    c010b9f0 <strtol+0x83>$/;"	l
c010b9cc	obj/kernel.asm	/^c010b9cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9cf	obj/kernel.asm	/^c010b9cf:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b9d2	obj/kernel.asm	/^c010b9d2:	3c 30                	cmp    $0x30,%al$/;"	l
c010b9d4	obj/kernel.asm	/^c010b9d4:	75 1a                	jne    c010b9f0 <strtol+0x83>$/;"	l
c010b9d6	obj/kernel.asm	/^c010b9d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9d9	obj/kernel.asm	/^c010b9d9:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b9dc	obj/kernel.asm	/^c010b9dc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b9df	obj/kernel.asm	/^c010b9df:	3c 78                	cmp    $0x78,%al$/;"	l
c010b9e1	obj/kernel.asm	/^c010b9e1:	75 0d                	jne    c010b9f0 <strtol+0x83>$/;"	l
c010b9e3	obj/kernel.asm	/^c010b9e3:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c010b9e7	obj/kernel.asm	/^c010b9e7:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c010b9ee	obj/kernel.asm	/^c010b9ee:	eb 2a                	jmp    c010ba1a <strtol+0xad>$/;"	l
c010b9f0	obj/kernel.asm	/^c010b9f0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b9f4	obj/kernel.asm	/^c010b9f4:	75 17                	jne    c010ba0d <strtol+0xa0>$/;"	l
c010b9f6	obj/kernel.asm	/^c010b9f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9f9	obj/kernel.asm	/^c010b9f9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b9fc	obj/kernel.asm	/^c010b9fc:	3c 30                	cmp    $0x30,%al$/;"	l
c010b9fe	obj/kernel.asm	/^c010b9fe:	75 0d                	jne    c010ba0d <strtol+0xa0>$/;"	l
c010ba00	obj/kernel.asm	/^c010ba00:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010ba04	obj/kernel.asm	/^c010ba04:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c010ba0b	obj/kernel.asm	/^c010ba0b:	eb 0d                	jmp    c010ba1a <strtol+0xad>$/;"	l
c010ba0d	obj/kernel.asm	/^c010ba0d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010ba11	obj/kernel.asm	/^c010ba11:	75 07                	jne    c010ba1a <strtol+0xad>$/;"	l
c010ba13	obj/kernel.asm	/^c010ba13:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c010ba1a	obj/kernel.asm	/^c010ba1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba1d	obj/kernel.asm	/^c010ba1d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba20	obj/kernel.asm	/^c010ba20:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010ba22	obj/kernel.asm	/^c010ba22:	7e 1b                	jle    c010ba3f <strtol+0xd2>$/;"	l
c010ba24	obj/kernel.asm	/^c010ba24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba27	obj/kernel.asm	/^c010ba27:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba2a	obj/kernel.asm	/^c010ba2a:	3c 39                	cmp    $0x39,%al$/;"	l
c010ba2c	obj/kernel.asm	/^c010ba2c:	7f 11                	jg     c010ba3f <strtol+0xd2>$/;"	l
c010ba2e	obj/kernel.asm	/^c010ba2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba31	obj/kernel.asm	/^c010ba31:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba34	obj/kernel.asm	/^c010ba34:	0f be c0             	movsbl %al,%eax$/;"	l
c010ba37	obj/kernel.asm	/^c010ba37:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010ba3a	obj/kernel.asm	/^c010ba3a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba3d	obj/kernel.asm	/^c010ba3d:	eb 48                	jmp    c010ba87 <strtol+0x11a>$/;"	l
c010ba3f	obj/kernel.asm	/^c010ba3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba42	obj/kernel.asm	/^c010ba42:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba45	obj/kernel.asm	/^c010ba45:	3c 60                	cmp    $0x60,%al$/;"	l
c010ba47	obj/kernel.asm	/^c010ba47:	7e 1b                	jle    c010ba64 <strtol+0xf7>$/;"	l
c010ba49	obj/kernel.asm	/^c010ba49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba4c	obj/kernel.asm	/^c010ba4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba4f	obj/kernel.asm	/^c010ba4f:	3c 7a                	cmp    $0x7a,%al$/;"	l
c010ba51	obj/kernel.asm	/^c010ba51:	7f 11                	jg     c010ba64 <strtol+0xf7>$/;"	l
c010ba53	obj/kernel.asm	/^c010ba53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba56	obj/kernel.asm	/^c010ba56:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba59	obj/kernel.asm	/^c010ba59:	0f be c0             	movsbl %al,%eax$/;"	l
c010ba5c	obj/kernel.asm	/^c010ba5c:	83 e8 57             	sub    $0x57,%eax$/;"	l
c010ba5f	obj/kernel.asm	/^c010ba5f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba62	obj/kernel.asm	/^c010ba62:	eb 23                	jmp    c010ba87 <strtol+0x11a>$/;"	l
c010ba64	obj/kernel.asm	/^c010ba64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba67	obj/kernel.asm	/^c010ba67:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba6a	obj/kernel.asm	/^c010ba6a:	3c 40                	cmp    $0x40,%al$/;"	l
c010ba6c	obj/kernel.asm	/^c010ba6c:	7e 3d                	jle    c010baab <strtol+0x13e>$/;"	l
c010ba6e	obj/kernel.asm	/^c010ba6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba71	obj/kernel.asm	/^c010ba71:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba74	obj/kernel.asm	/^c010ba74:	3c 5a                	cmp    $0x5a,%al$/;"	l
c010ba76	obj/kernel.asm	/^c010ba76:	7f 33                	jg     c010baab <strtol+0x13e>$/;"	l
c010ba78	obj/kernel.asm	/^c010ba78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba7b	obj/kernel.asm	/^c010ba7b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba7e	obj/kernel.asm	/^c010ba7e:	0f be c0             	movsbl %al,%eax$/;"	l
c010ba81	obj/kernel.asm	/^c010ba81:	83 e8 37             	sub    $0x37,%eax$/;"	l
c010ba84	obj/kernel.asm	/^c010ba84:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba87	obj/kernel.asm	/^c010ba87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba8a	obj/kernel.asm	/^c010ba8a:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010ba8d	obj/kernel.asm	/^c010ba8d:	7c 02                	jl     c010ba91 <strtol+0x124>$/;"	l
c010ba8f	obj/kernel.asm	/^c010ba8f:	eb 1a                	jmp    c010baab <strtol+0x13e>$/;"	l
c010ba91	obj/kernel.asm	/^c010ba91:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010ba95	obj/kernel.asm	/^c010ba95:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010ba98	obj/kernel.asm	/^c010ba98:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c010ba9c	obj/kernel.asm	/^c010ba9c:	89 c2                	mov    %eax,%edx$/;"	l
c010ba9e	obj/kernel.asm	/^c010ba9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010baa1	obj/kernel.asm	/^c010baa1:	01 d0                	add    %edx,%eax$/;"	l
c010baa3	obj/kernel.asm	/^c010baa3:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010baa6	obj/kernel.asm	/^c010baa6:	e9 6f ff ff ff       	jmp    c010ba1a <strtol+0xad>$/;"	l
c010baab	obj/kernel.asm	/^c010baab:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010baaf	obj/kernel.asm	/^c010baaf:	74 08                	je     c010bab9 <strtol+0x14c>$/;"	l
c010bab1	obj/kernel.asm	/^c010bab1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bab4	obj/kernel.asm	/^c010bab4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bab7	obj/kernel.asm	/^c010bab7:	89 10                	mov    %edx,(%eax)$/;"	l
c010bab9	obj/kernel.asm	/^c010bab9:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c010babd	obj/kernel.asm	/^c010babd:	74 07                	je     c010bac6 <strtol+0x159>$/;"	l
c010babf	obj/kernel.asm	/^c010babf:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bac2	obj/kernel.asm	/^c010bac2:	f7 d8                	neg    %eax$/;"	l
c010bac4	obj/kernel.asm	/^c010bac4:	eb 03                	jmp    c010bac9 <strtol+0x15c>$/;"	l
c010bac6	obj/kernel.asm	/^c010bac6:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bac9	obj/kernel.asm	/^c010bac9:	c9                   	leave  $/;"	l
c010baca	obj/kernel.asm	/^c010baca:	c3                   	ret    $/;"	l
c010bacb	obj/kernel.asm	/^c010bacb <memset>:$/;"	l
c010bacb	obj/kernel.asm	/^c010bacb:	55                   	push   %ebp$/;"	l
c010bacc	obj/kernel.asm	/^c010bacc:	89 e5                	mov    %esp,%ebp$/;"	l
c010bace	obj/kernel.asm	/^c010bace:	57                   	push   %edi$/;"	l
c010bacf	obj/kernel.asm	/^c010bacf:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010bad2	obj/kernel.asm	/^c010bad2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bad5	obj/kernel.asm	/^c010bad5:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c010bad8	obj/kernel.asm	/^c010bad8:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c010badc	obj/kernel.asm	/^c010badc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010badf	obj/kernel.asm	/^c010badf:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010bae2	obj/kernel.asm	/^c010bae2:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c010bae5	obj/kernel.asm	/^c010bae5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010bae8	obj/kernel.asm	/^c010bae8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010baeb	obj/kernel.asm	/^c010baeb:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010baee	obj/kernel.asm	/^c010baee:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c010baf2	obj/kernel.asm	/^c010baf2:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010baf5	obj/kernel.asm	/^c010baf5:	89 d7                	mov    %edx,%edi$/;"	l
c010baf7	obj/kernel.asm	/^c010baf7:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c010baf9	obj/kernel.asm	/^c010baf9:	89 fa                	mov    %edi,%edx$/;"	l
c010bafb	obj/kernel.asm	/^c010bafb:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010bafe	obj/kernel.asm	/^c010bafe:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010bb01	obj/kernel.asm	/^c010bb01:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bb04	obj/kernel.asm	/^c010bb04:	83 c4 24             	add    $0x24,%esp$/;"	l
c010bb07	obj/kernel.asm	/^c010bb07:	5f                   	pop    %edi$/;"	l
c010bb08	obj/kernel.asm	/^c010bb08:	5d                   	pop    %ebp$/;"	l
c010bb09	obj/kernel.asm	/^c010bb09:	c3                   	ret    $/;"	l
c010bb0a	obj/kernel.asm	/^c010bb0a <memmove>:$/;"	l
c010bb0a	obj/kernel.asm	/^c010bb0a:	55                   	push   %ebp$/;"	l
c010bb0b	obj/kernel.asm	/^c010bb0b:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb0d	obj/kernel.asm	/^c010bb0d:	57                   	push   %edi$/;"	l
c010bb0e	obj/kernel.asm	/^c010bb0e:	56                   	push   %esi$/;"	l
c010bb0f	obj/kernel.asm	/^c010bb0f:	53                   	push   %ebx$/;"	l
c010bb10	obj/kernel.asm	/^c010bb10:	83 ec 30             	sub    $0x30,%esp$/;"	l
c010bb13	obj/kernel.asm	/^c010bb13:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb16	obj/kernel.asm	/^c010bb16:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bb19	obj/kernel.asm	/^c010bb19:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bb1c	obj/kernel.asm	/^c010bb1c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bb1f	obj/kernel.asm	/^c010bb1f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010bb22	obj/kernel.asm	/^c010bb22:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bb25	obj/kernel.asm	/^c010bb25:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb28	obj/kernel.asm	/^c010bb28:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010bb2b	obj/kernel.asm	/^c010bb2b:	73 42                	jae    c010bb6f <memmove+0x65>$/;"	l
c010bb2d	obj/kernel.asm	/^c010bb2d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb30	obj/kernel.asm	/^c010bb30:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010bb33	obj/kernel.asm	/^c010bb33:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bb36	obj/kernel.asm	/^c010bb36:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010bb39	obj/kernel.asm	/^c010bb39:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bb3c	obj/kernel.asm	/^c010bb3c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010bb3f	obj/kernel.asm	/^c010bb3f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010bb42	obj/kernel.asm	/^c010bb42:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010bb45	obj/kernel.asm	/^c010bb45:	89 c1                	mov    %eax,%ecx$/;"	l
c010bb47	obj/kernel.asm	/^c010bb47:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010bb4a	obj/kernel.asm	/^c010bb4a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bb4d	obj/kernel.asm	/^c010bb4d:	89 d7                	mov    %edx,%edi$/;"	l
c010bb4f	obj/kernel.asm	/^c010bb4f:	89 c6                	mov    %eax,%esi$/;"	l
c010bb51	obj/kernel.asm	/^c010bb51:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010bb53	obj/kernel.asm	/^c010bb53:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c010bb56	obj/kernel.asm	/^c010bb56:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010bb59	obj/kernel.asm	/^c010bb59:	74 02                	je     c010bb5d <memmove+0x53>$/;"	l
c010bb5b	obj/kernel.asm	/^c010bb5b:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010bb5d	obj/kernel.asm	/^c010bb5d:	89 f0                	mov    %esi,%eax$/;"	l
c010bb5f	obj/kernel.asm	/^c010bb5f:	89 fa                	mov    %edi,%edx$/;"	l
c010bb61	obj/kernel.asm	/^c010bb61:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c010bb64	obj/kernel.asm	/^c010bb64:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010bb67	obj/kernel.asm	/^c010bb67:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010bb6a	obj/kernel.asm	/^c010bb6a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bb6d	obj/kernel.asm	/^c010bb6d:	eb 36                	jmp    c010bba5 <memmove+0x9b>$/;"	l
c010bb6f	obj/kernel.asm	/^c010bb6f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bb72	obj/kernel.asm	/^c010bb72:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010bb75	obj/kernel.asm	/^c010bb75:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bb78	obj/kernel.asm	/^c010bb78:	01 c2                	add    %eax,%edx$/;"	l
c010bb7a	obj/kernel.asm	/^c010bb7a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bb7d	obj/kernel.asm	/^c010bb7d:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c010bb80	obj/kernel.asm	/^c010bb80:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb83	obj/kernel.asm	/^c010bb83:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c010bb86	obj/kernel.asm	/^c010bb86:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bb89	obj/kernel.asm	/^c010bb89:	89 c1                	mov    %eax,%ecx$/;"	l
c010bb8b	obj/kernel.asm	/^c010bb8b:	89 d8                	mov    %ebx,%eax$/;"	l
c010bb8d	obj/kernel.asm	/^c010bb8d:	89 d6                	mov    %edx,%esi$/;"	l
c010bb8f	obj/kernel.asm	/^c010bb8f:	89 c7                	mov    %eax,%edi$/;"	l
c010bb91	obj/kernel.asm	/^c010bb91:	fd                   	std    $/;"	l
c010bb92	obj/kernel.asm	/^c010bb92:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010bb94	obj/kernel.asm	/^c010bb94:	fc                   	cld    $/;"	l
c010bb95	obj/kernel.asm	/^c010bb95:	89 f8                	mov    %edi,%eax$/;"	l
c010bb97	obj/kernel.asm	/^c010bb97:	89 f2                	mov    %esi,%edx$/;"	l
c010bb99	obj/kernel.asm	/^c010bb99:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c010bb9c	obj/kernel.asm	/^c010bb9c:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c010bb9f	obj/kernel.asm	/^c010bb9f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010bba2	obj/kernel.asm	/^c010bba2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bba5	obj/kernel.asm	/^c010bba5:	83 c4 30             	add    $0x30,%esp$/;"	l
c010bba8	obj/kernel.asm	/^c010bba8:	5b                   	pop    %ebx$/;"	l
c010bba9	obj/kernel.asm	/^c010bba9:	5e                   	pop    %esi$/;"	l
c010bbaa	obj/kernel.asm	/^c010bbaa:	5f                   	pop    %edi$/;"	l
c010bbab	obj/kernel.asm	/^c010bbab:	5d                   	pop    %ebp$/;"	l
c010bbac	obj/kernel.asm	/^c010bbac:	c3                   	ret    $/;"	l
c010bbad	obj/kernel.asm	/^c010bbad <memcpy>:$/;"	l
c010bbad	obj/kernel.asm	/^c010bbad:	55                   	push   %ebp$/;"	l
c010bbae	obj/kernel.asm	/^c010bbae:	89 e5                	mov    %esp,%ebp$/;"	l
c010bbb0	obj/kernel.asm	/^c010bbb0:	57                   	push   %edi$/;"	l
c010bbb1	obj/kernel.asm	/^c010bbb1:	56                   	push   %esi$/;"	l
c010bbb2	obj/kernel.asm	/^c010bbb2:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010bbb5	obj/kernel.asm	/^c010bbb5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbb8	obj/kernel.asm	/^c010bbb8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bbbb	obj/kernel.asm	/^c010bbbb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bbbe	obj/kernel.asm	/^c010bbbe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bbc1	obj/kernel.asm	/^c010bbc1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010bbc4	obj/kernel.asm	/^c010bbc4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bbc7	obj/kernel.asm	/^c010bbc7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bbca	obj/kernel.asm	/^c010bbca:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010bbcd	obj/kernel.asm	/^c010bbcd:	89 c1                	mov    %eax,%ecx$/;"	l
c010bbcf	obj/kernel.asm	/^c010bbcf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bbd2	obj/kernel.asm	/^c010bbd2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bbd5	obj/kernel.asm	/^c010bbd5:	89 d7                	mov    %edx,%edi$/;"	l
c010bbd7	obj/kernel.asm	/^c010bbd7:	89 c6                	mov    %eax,%esi$/;"	l
c010bbd9	obj/kernel.asm	/^c010bbd9:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010bbdb	obj/kernel.asm	/^c010bbdb:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010bbde	obj/kernel.asm	/^c010bbde:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010bbe1	obj/kernel.asm	/^c010bbe1:	74 02                	je     c010bbe5 <memcpy+0x38>$/;"	l
c010bbe3	obj/kernel.asm	/^c010bbe3:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010bbe5	obj/kernel.asm	/^c010bbe5:	89 f0                	mov    %esi,%eax$/;"	l
c010bbe7	obj/kernel.asm	/^c010bbe7:	89 fa                	mov    %edi,%edx$/;"	l
c010bbe9	obj/kernel.asm	/^c010bbe9:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010bbec	obj/kernel.asm	/^c010bbec:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010bbef	obj/kernel.asm	/^c010bbef:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010bbf2	obj/kernel.asm	/^c010bbf2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bbf5	obj/kernel.asm	/^c010bbf5:	83 c4 20             	add    $0x20,%esp$/;"	l
c010bbf8	obj/kernel.asm	/^c010bbf8:	5e                   	pop    %esi$/;"	l
c010bbf9	obj/kernel.asm	/^c010bbf9:	5f                   	pop    %edi$/;"	l
c010bbfa	obj/kernel.asm	/^c010bbfa:	5d                   	pop    %ebp$/;"	l
c010bbfb	obj/kernel.asm	/^c010bbfb:	c3                   	ret    $/;"	l
c010bbfc	obj/kernel.asm	/^c010bbfc <memcmp>:$/;"	l
c010bbfc	obj/kernel.asm	/^c010bbfc:	55                   	push   %ebp$/;"	l
c010bbfd	obj/kernel.asm	/^c010bbfd:	89 e5                	mov    %esp,%ebp$/;"	l
c010bbff	obj/kernel.asm	/^c010bbff:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bc02	obj/kernel.asm	/^c010bc02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc05	obj/kernel.asm	/^c010bc05:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010bc08	obj/kernel.asm	/^c010bc08:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc0b	obj/kernel.asm	/^c010bc0b:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010bc0e	obj/kernel.asm	/^c010bc0e:	eb 30                	jmp    c010bc40 <memcmp+0x44>$/;"	l
c010bc10	obj/kernel.asm	/^c010bc10:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bc13	obj/kernel.asm	/^c010bc13:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010bc16	obj/kernel.asm	/^c010bc16:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bc19	obj/kernel.asm	/^c010bc19:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010bc1c	obj/kernel.asm	/^c010bc1c:	38 c2                	cmp    %al,%dl$/;"	l
c010bc1e	obj/kernel.asm	/^c010bc1e:	74 18                	je     c010bc38 <memcmp+0x3c>$/;"	l
c010bc20	obj/kernel.asm	/^c010bc20:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bc23	obj/kernel.asm	/^c010bc23:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010bc26	obj/kernel.asm	/^c010bc26:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010bc29	obj/kernel.asm	/^c010bc29:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bc2c	obj/kernel.asm	/^c010bc2c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010bc2f	obj/kernel.asm	/^c010bc2f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010bc32	obj/kernel.asm	/^c010bc32:	29 c2                	sub    %eax,%edx$/;"	l
c010bc34	obj/kernel.asm	/^c010bc34:	89 d0                	mov    %edx,%eax$/;"	l
c010bc36	obj/kernel.asm	/^c010bc36:	eb 1a                	jmp    c010bc52 <memcmp+0x56>$/;"	l
c010bc38	obj/kernel.asm	/^c010bc38:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010bc3c	obj/kernel.asm	/^c010bc3c:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010bc40	obj/kernel.asm	/^c010bc40:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010bc43	obj/kernel.asm	/^c010bc43:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010bc46	obj/kernel.asm	/^c010bc46:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010bc49	obj/kernel.asm	/^c010bc49:	85 c0                	test   %eax,%eax$/;"	l
c010bc4b	obj/kernel.asm	/^c010bc4b:	75 c3                	jne    c010bc10 <memcmp+0x14>$/;"	l
c010bc4d	obj/kernel.asm	/^c010bc4d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bc52	obj/kernel.asm	/^c010bc52:	c9                   	leave  $/;"	l
c010bc53	obj/kernel.asm	/^c010bc53:	c3                   	ret    $/;"	l
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon1	file:
char	obj/kernel.asm	/^char *$/;"	l
char	obj/user/badarg.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/exit.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/forktest.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/pgdir.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/waitkill.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon2	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
cont	boot/bootasm.S	/^cont:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon1	file:
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
default	obj/user/badarg.asm	/^        default:$/;"	l
default	obj/user/badsegment.asm	/^        default:$/;"	l
default	obj/user/divzero.asm	/^        default:$/;"	l
default	obj/user/exit.asm	/^        default:$/;"	l
default	obj/user/faultread.asm	/^        default:$/;"	l
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
default	obj/user/forktree.asm	/^        default:$/;"	l
default	obj/user/hello.asm	/^        default:$/;"	l
default	obj/user/pgdir.asm	/^        default:$/;"	l
default	obj/user/softint.asm	/^        default:$/;"	l
default	obj/user/spin.asm	/^        default:$/;"	l
default	obj/user/testbss.asm	/^        default:$/;"	l
default	obj/user/waitkill.asm	/^        default:$/;"	l
default	obj/user/yield.asm	/^        default:$/;"	l
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_check	tools/grade.sh	/^default_check() {$/;"	f
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_div	libs/x86.h	6;"	d
do_execve	kern/process/proc.c	/^do_execve(const char *name, size_t len, unsigned char *binary, size_t size) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebp	obj/kernel.asm	/^        ebp = *((uint32_t*)ebp);$/;"	d
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
eip	obj/kernel.asm	/^        eip = *(((uint32_t*)ebp)+4);$/;"	d
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
fail	tools/grade.sh	/^fail() {$/;"	f
failed	obj/kernel.asm	/^failed:$/;"	l
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon4
free_list	kern/mm/default_pmm.c	59;"	d	file:
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon4
free_list	kern/mm/swap.c	176;"	d	file:
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
inside	obj/kernel.asm	/^    inside:$/;"	l
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int$/;"	l
int	obj/user/badarg.asm	/^int main(void);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int main(void);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int main(void);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(void);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int main(void);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(void);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/forktest.asm	/^int main(void);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int main(void);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int main(void);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/pgdir.asm	/^int main(void);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int main(void);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int main(void);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int main(void);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/waitkill.asm	/^int main(void);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int main(void);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, unsigned char *binary, size_t size) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
last	obj/kernel.asm	/^        last = (current == idleproc) ? &proc_list : &(current->list_link);$/;"	d
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
le	obj/kernel.asm	/^          le = len;$/;"	d
le	obj/kernel.asm	/^        le = last;$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list_prev(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = list_prev(&(base->page_link));$/;"	d
le2page	kern/mm/memlayout.h	150;"	d
le2proc	kern/process/proc.h	68;"	d
le2vma	kern/mm/vmm.h	22;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
len	obj/kernel.asm	/^          len = list_next(le);$/;"	d
len	obj/kernel.asm	/^        len = PROC_NAME_LEN;$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list $/;"	m	struct:proc_struct
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
load_icode	kern/process/proc.c	/^load_icode(unsigned char *binary, size_t size) {$/;"	f	file:
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_restore	obj/kernel.asm	/^#define local_intr_restore(x)   __intr_restore(x);$/;"	d
local_intr_save	kern/sync/sync.h	27;"	d
lock	kern/sync/sync.h	/^lock(lock_t *lock) {$/;"	f
lock_init	kern/sync/sync.h	/^lock_init(lock_t *lock) {$/;"	f
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
lock_t	kern/sync/sync.h	/^typedef volatile bool lock_t;$/;"	t
long	obj/kernel.asm	/^long$/;"	l
long	obj/user/badarg.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/exit.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/forktest.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/pgdir.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/waitkill.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop	user/waitkill.c	/^loop(void) {$/;"	f
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
main	user/testbss.c	/^main(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon3
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_lock	kern/mm/vmm.h	/^    lock_t mm_lock;                \/\/ mutex for using dup_mmap fun to duplicat the mm$/;"	m	struct:mm_struct
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
next	obj/kernel.asm	/^                next = le2proc(le, list_link);$/;"	d
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	kern/mm/default_pmm.c	60;"	d	file:
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon4
nr_free	kern/mm/swap.c	177;"	d	file:
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
number	obj/user/badarg.asm	/^        number:$/;"	l
number	obj/user/badsegment.asm	/^        number:$/;"	l
number	obj/user/divzero.asm	/^        number:$/;"	l
number	obj/user/exit.asm	/^        number:$/;"	l
number	obj/user/faultread.asm	/^        number:$/;"	l
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
number	obj/user/forktest.asm	/^        number:$/;"	l
number	obj/user/forktree.asm	/^        number:$/;"	l
number	obj/user/hello.asm	/^        number:$/;"	l
number	obj/user/pgdir.asm	/^        number:$/;"	l
number	obj/user/softint.asm	/^        number:$/;"	l
number	obj/user/spin.asm	/^        number:$/;"	l
number	obj/user/testbss.asm	/^        number:$/;"	l
number	obj/user/waitkill.asm	/^        number:$/;"	l
number	obj/user/yield.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
offsetof	libs/defs.h	55;"	d
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
out	obj/kernel.asm	/^out:$/;"	l
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^        p = le2page(le,page_link);$/;"	d
p	obj/kernel.asm	/^      p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p	obj/kernel.asm	/^    p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = le2page(le,page_link) ;$/;"	d
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic	kern/debug/assert.h	12;"	d
panic	user/libs/ulib.h	12;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
pass	tools/grade.sh	/^pass() {$/;"	f
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid_hashfn	kern/process/proc.c	67;"	d	file:
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ the num of free block, used in first fit pm manager$/;"	m	struct:Page
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptep	obj/kernel.asm	/^    ptep = get_pte(mm->pgdir, addr, 1);              \/\/(1) try to find a pte, if pte's PT(Page Table) isn't existed, then create a PT.$/;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
rand	libs/rand.c	/^rand(void) {$/;"	f
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
relocated	kern/init/entry.S	/^relocated:$/;"	l
relocated	obj/kernel.asm	/^relocated:$/;"	l
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon2	file:
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_test	tools/grade.sh	/^run_test() {$/;"	f
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon3
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
size_t	obj/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badarg.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/exit.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/forktest.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_allocated	kern/mm/kmalloc.c	/^slob_allocated(void) {$/;"	f
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_init	kern/mm/kmalloc.c	/^slob_init(void) {$/;"	f
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
spin	boot/bootasm.S	/^spin:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
spin	obj/kernel.asm	/^spin:$/;"	l
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
stab	kern/debug/stab.h	/^struct stab {$/;"	s
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
start	boot/bootasm.S	/^start:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	kern/debug/assert.h	23;"	d
static_assert	user/libs/ulib.h	23;"	d
sti	libs/x86.h	/^sti(void) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_offset	kern/mm/swap.h	25;"	d
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
swapfs_init	kern/fs/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
to_struct	libs/defs.h	64;"	d
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
try_lock	kern/sync/sync.h	/^try_lock(lock_t *lock) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon3
typedef	obj/kernel.asm	/^typedef volatile bool lock_t;$/;"	l
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/libs/umain.c	/^umain(void) {$/;"	f
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
unlock	kern/sync/sync.h	/^unlock(lock_t *lock) {$/;"	f
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
update_score	tools/grade.sh	/^update_score() {$/;"	f
uprog_ld	Makefile	/^define uprog_ld$/;"	m
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma, not include the vm_end itself$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/ start addr of vma      $/;"	m	struct:vma_struct
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
void	obj/bootblock.asm	/^void$/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void grade_backtrace(void);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap) {$/;"	f
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
warn	kern/debug/assert.h	9;"	d
warn	user/libs/ulib.h	9;"	d
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
work	user/waitkill.c	/^work(void) {$/;"	f
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon2	file:
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
zero	user/divzero.c	/^int zero;$/;"	v
