!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
ALT	kern/driver/console.c	260;"	d	file:
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
ARRAYSIZE	user/testbss.c	4;"	d	file:
AWK	Makefile	/^AWK		:= awk$/;"	m
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
BIG_STRIDE	kern/schedule/default_sched.c	11;"	d	file:
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
BS_OCMD	kern/driver/kbdreg.h	23;"	d
BUFSIZE	kern/libs/readline.c	3;"	d	file:
C	kern/driver/console.c	323;"	d	file:
CAPSLOCK	kern/driver/console.c	262;"	d	file:
CC	Makefile	/^CC		:= $(GCCPREFIX)gcc$/;"	m
CC	Makefile	/^CC		:= clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
CGA_BASE	kern/driver/console.c	45;"	d	file:
CGA_BUF	kern/driver/console.c	46;"	d	file:
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
CLONE_THREAD	libs/unistd.h	28;"	d
CLONE_VM	libs/unistd.h	27;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
COM1	kern/driver/console.c	21;"	d	file:
COM_DLL	kern/driver/console.c	25;"	d	file:
COM_DLM	kern/driver/console.c	26;"	d	file:
COM_FCR	kern/driver/console.c	30;"	d	file:
COM_IER	kern/driver/console.c	27;"	d	file:
COM_IER_RDI	kern/driver/console.c	28;"	d	file:
COM_IIR	kern/driver/console.c	29;"	d	file:
COM_LCR	kern/driver/console.c	31;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	32;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	33;"	d	file:
COM_LSR	kern/driver/console.c	38;"	d	file:
COM_LSR_DATA	kern/driver/console.c	39;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	41;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	40;"	d	file:
COM_MCR	kern/driver/console.c	34;"	d	file:
COM_MCR_DTR	kern/driver/console.c	36;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	37;"	d	file:
COM_MCR_RTS	kern/driver/console.c	35;"	d	file:
COM_RX	kern/driver/console.c	23;"	d	file:
COM_TX	kern/driver/console.c	24;"	d	file:
CONSBUFSIZE	kern/driver/console.c	208;"	d	file:
COPY	Makefile	/^COPY	:= cp$/;"	m
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
CRT_COLS	kern/driver/console.c	48;"	d	file:
CRT_ROWS	kern/driver/console.c	47;"	d	file:
CRT_SIZE	kern/driver/console.c	49;"	d	file:
CTL	kern/driver/console.c	259;"	d	file:
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
ClearPageProperty	kern/mm/memlayout.h	146;"	d
ClearPageReserved	kern/mm/memlayout.h	143;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DEPTH	user/forktree.c	5;"	d	file:
DPL_KERNEL	kern/mm/memlayout.h	20;"	d
DPL_USER	kern/mm/memlayout.h	21;"	d
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/matrix.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/priority.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/driver/console.c	266;"	d	file:
E820MAX	kern/mm/memlayout.h	111;"	d
E820_ARM	kern/mm/memlayout.h	112;"	d
E820_ARR	kern/mm/memlayout.h	113;"	d
ELFHDR	boot/bootmain.c	34;"	d	file:
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
EMPTY	Makefile	/^EMPTY	:=$/;"	m
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GD_KDATA	kern/mm/memlayout.h	15;"	d
GD_KTEXT	kern/mm/memlayout.h	14;"	d
GD_TSS	kern/mm/memlayout.h	18;"	d
GD_UDATA	kern/mm/memlayout.h	17;"	d
GD_UTEXT	kern/mm/memlayout.h	16;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= lab$(PROJ)-handin.tar.gz$/;"	m
HASH_LIST_SIZE	kern/process/proc.c	66;"	d	file:
HASH_SHIFT	kern/process/proc.c	65;"	d	file:
HOSTCC	Makefile	/^HOSTCC		:= clang$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2$/;"	m
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
KADDR	kern/mm/pmm.h	69;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KERNBASE	kern/mm/memlayout.h	70;"	d
KERNEL_CS	kern/mm/memlayout.h	23;"	d
KERNEL_DS	kern/mm/memlayout.h	24;"	d
KERNEL_EXECVE	kern/process/proc.c	819;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	831;"	d	file:
KERNEL_EXECVE2	obj/kernel.asm	/^#define KERNEL_EXECVE2(x, xstart, xsize)        __KERNEL_EXECVE2(x, xstart, xsize)$/;"	d
KERNTOP	kern/mm/memlayout.h	72;"	d
KERN_ACCESS	kern/mm/memlayout.h	97;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
KMEMSIZE	kern/mm/memlayout.h	71;"	d
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
KSTACKPAGE	kern/mm/memlayout.h	82;"	d
KSTACKSIZE	kern/mm/memlayout.h	83;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
LPTPORT	kern/driver/console.c	51;"	d	file:
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MATSIZE	user/matrix.c	6;"	d	file:
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
MAXERROR	libs/error.h	30;"	d
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/matrix.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/priority.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	user/libs/syscall.c	6;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
MAX_PID	kern/process/proc.h	39;"	d
MAX_PROCESS	kern/process/proc.h	38;"	d
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
MAX_TIME	user/priority.c	8;"	d	file:
MAX_TIME_SLICE	kern/schedule/sched.h	8;"	d
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MONO_BASE	kern/driver/console.c	43;"	d	file:
MONO_BUF	kern/driver/console.c	44;"	d	file:
MV	Makefile	/^MV		:= mv$/;"	m
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
NO	kern/driver/console.c	256;"	d	file:
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
NULL	libs/defs.h	5;"	d
NUMLOCK	kern/driver/console.c	263;"	d	file:
NUM_SYSCALLS	kern/syscall/syscall.c	94;"	d	file:
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
PADDR	kern/mm/pmm.h	57;"	d
PAGE_NSECT	kern/fs/fs.h	7;"	d
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PF_EXITING	kern/process/proc.h	69;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PG_property	kern/mm/memlayout.h	140;"	d
PG_reserved	kern/mm/memlayout.h	139;"	d
PPN	kern/mm/mmu.h	210;"	d
PROC_NAME_LEN	kern/process/proc.h	37;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
PROJ	Makefile	/^PROJ	:= 6$/;"	m
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	147;"	d
PageReserved	kern/mm/memlayout.h	144;"	d
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback$/;"	m
RAND_MAX	libs/stdlib.h	7;"	d
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
RM	Makefile	/^RM		:= rm -f$/;"	m
ROUNDDOWN	libs/defs.h	43;"	d
ROUNDUP	libs/defs.h	49;"	d
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SCROLLLOCK	kern/driver/console.c	264;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
SECTSIZE	kern/fs/fs.h	6;"	d
SED	Makefile	/^SED		:= sed$/;"	m
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	boot/asm.h	11;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SEG_NULLASM	boot/asm.h	7;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
SH	Makefile	/^SH		:= sh$/;"	m
SHIFT	kern/driver/console.c	258;"	d	file:
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
STA_A	boot/asm.h	23;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	boot/asm.h	20;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	boot/asm.h	19;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	boot/asm.h	22;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	boot/asm.h	21;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	boot/asm.h	18;"	d
STA_X	kern/mm/mmu.h	28;"	d
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
SWAP_DEV_NO	kern/fs/fs.h	9;"	d
SYS_brk	libs/unistd.h	17;"	d
SYS_clone	libs/unistd.h	11;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_lab6_set_priority	libs/unistd.h	24;"	d
SYS_mmap	libs/unistd.h	18;"	d
SYS_munmap	libs/unistd.h	19;"	d
SYS_pgdir	libs/unistd.h	22;"	d
SYS_putc	libs/unistd.h	21;"	d
SYS_shmem	libs/unistd.h	20;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_yield	libs/unistd.h	12;"	d
SetPageProperty	kern/mm/memlayout.h	145;"	d
SetPageReserved	kern/mm/memlayout.h	142;"	d
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
TICK_NUM	kern/trap/trap.c	20;"	d	file:
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
TOTAL	user/priority.c	6;"	d	file:
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_SYSCALL	libs/unistd.h	4;"	d
T_TSS	kern/trap/trap.h	19;"	d
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USERBASE	kern/mm/memlayout.h	90;"	d
USERTOP	kern/mm/memlayout.h	85;"	d
USER_ACCESS	kern/mm/memlayout.h	94;"	d
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_CS	kern/mm/memlayout.h	25;"	d
USER_DS	kern/mm/memlayout.h	26;"	d
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
USE_SKEW_HEAP	kern/schedule/default_sched.c	7;"	d	file:
USTAB	kern/mm/memlayout.h	92;"	d
USTACKPAGE	kern/mm/memlayout.h	87;"	d
USTACKSIZE	kern/mm/memlayout.h	88;"	d
USTACKTOP	kern/mm/memlayout.h	86;"	d
UTEXT	kern/mm/memlayout.h	91;"	d
V	Makefile	/^V       := @$/;"	m
VALID_IDE	kern/driver/ide.c	47;"	d	file:
VM_EXEC	kern/mm/vmm.h	27;"	d
VM_READ	kern/mm/vmm.h	25;"	d
VM_STACK	kern/mm/vmm.h	28;"	d
VM_WRITE	kern/mm/vmm.h	26;"	d
VPT	kern/mm/memlayout.h	80;"	d
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
WT_CHILD	kern/process/proc.h	71;"	d
WT_INTERRUPTED	kern/process/proc.h	72;"	d
__BOOT_ASM_H__	boot/asm.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	283;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	264;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	250;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	210;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	234;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__KERNEL_EXECVE	kern/process/proc.c	813;"	d	file:
__KERNEL_EXECVE2	kern/process/proc.c	826;"	d	file:
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
__KERN_FS_SWAPFS_H__	kern/fs/swapfs.h	2;"	d
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
__KERN_MM_KMALLOC_H__	kern/mm/kmalloc.h	2;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
__KERN_SCHEDULE_SCHED_RR_H__	kern/schedule/default_sched.h	2;"	d
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
__LIBS_LIST_H__	libs/list.h	2;"	d
__LIBS_SKEW_HEAP_H__	libs/skew_heap.h	2;"	d
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
__LIBS_STRING_H__	libs/string.h	2;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__always_inline	libs/defs.h	8;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__rq	kern/schedule/sched.c	/^static struct run_queue __rq;$/;"	v	typeref:struct:run_queue	file:
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
_start	obj/user/badarg.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/exit.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/forktest.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/matrix.asm	/^_start:$/;"	l
_start	obj/user/pgdir.asm	/^_start:$/;"	l
_start	obj/user/priority.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/waitkill.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_start	user/libs/initcode.S	/^_start:$/;"	l
acc	user/priority.c	/^unsigned int acc[TOTAL];$/;"	v
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
add_timer	kern/schedule/sched.c	/^add_timer(timer_t *timer) {$/;"	f
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon3
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/matrix.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/priority.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
assert	kern/debug/assert.h	15;"	d
assert	user/libs/ulib.h	15;"	d
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
barrier	libs/x86.h	21;"	d
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon1	file:
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 16;$/;"	d
base	obj/user/matrix.asm	/^            base = 8;$/;"	d
base	obj/user/matrix.asm	/^        base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 16;$/;"	d
base	obj/user/priority.asm	/^            base = 8;$/;"	d
base	obj/user/priority.asm	/^        base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool user_mem_check(struct mm_struct *mm, uintptr_t start, size_t len, bool write);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon2	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
build_run	tools/grade.sh	/^build_run() {$/;"	f
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 d0 12 00 	lgdtl  0x12d018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 d0 12 c0       	mov    $0xc012d000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba 78 1f 1b c0       	mov    $0xc01b1f78,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 d4 ed 1a c0       	mov    $0xc01aedd4,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	00 $/;"	l
c010004a	obj/kernel.asm	/^c010004a:	c7 04 24 d4 ed 1a c0 	movl   $0xc01aedd4,(%esp)$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 43 c2 00 00       	call   c010c299 <memset>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	e8 85 16 00 00       	call   c01016e0 <cons_init>$/;"	l
c010005b	obj/kernel.asm	/^c010005b:	c7 45 f4 40 c4 10 c0 	movl   $0xc010c440,-0xc(%ebp)$/;"	l
c0100062	obj/kernel.asm	/^c0100062:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100065	obj/kernel.asm	/^c0100065:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100069	obj/kernel.asm	/^c0100069:	c7 04 24 5c c4 10 c0 	movl   $0xc010c45c,(%esp)$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 e3 02 00 00       	call   c0100358 <cprintf>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 0a 09 00 00       	call   c0100984 <print_kerninfo>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 a2 00 00 00       	call   c0100121 <grade_backtrace>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 54 56 00 00       	call   c01056d8 <pmm_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 35 20 00 00       	call   c01020be <pic_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 ad 21 00 00       	call   c010223b <idt_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 4c 85 00 00       	call   c01085df <vmm_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 63 b0 00 00       	call   c010b0fb <sched_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 29 ab 00 00       	call   c010abc6 <proc_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 6f 17 00 00       	call   c0101811 <ide_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 da 6c 00 00       	call   c0106d81 <swap_init>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 ea 0d 00 00       	call   c0100e96 <clock_init>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	e8 7b 1f 00 00       	call   c010202c <intr_enable>$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1:	e8 cf ac 00 00       	call   c010ad85 <cpu_idle>$/;"	l
c01000b6	obj/kernel.asm	/^c01000b6 <grade_backtrace2>:$/;"	l
c01000b6	obj/kernel.asm	/^c01000b6:	55                   	push   %ebp$/;"	l
c01000b7	obj/kernel.asm	/^c01000b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01000b9	obj/kernel.asm	/^c01000b9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01000bc	obj/kernel.asm	/^c01000bc:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01000c3	obj/kernel.asm	/^c01000c3:	00 $/;"	l
c01000c4	obj/kernel.asm	/^c01000c4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01000cb	obj/kernel.asm	/^c01000cb:	00 $/;"	l
c01000cc	obj/kernel.asm	/^c01000cc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c01000d3	obj/kernel.asm	/^c01000d3:	e8 f0 0c 00 00       	call   c0100dc8 <mon_backtrace>$/;"	l
c01000d8	obj/kernel.asm	/^c01000d8:	c9                   	leave  $/;"	l
c01000d9	obj/kernel.asm	/^c01000d9:	c3                   	ret    $/;"	l
c01000da	obj/kernel.asm	/^c01000da <grade_backtrace1>:$/;"	l
c01000da	obj/kernel.asm	/^c01000da:	55                   	push   %ebp$/;"	l
c01000db	obj/kernel.asm	/^c01000db:	89 e5                	mov    %esp,%ebp$/;"	l
c01000dd	obj/kernel.asm	/^c01000dd:	53                   	push   %ebx$/;"	l
c01000de	obj/kernel.asm	/^c01000de:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01000e1	obj/kernel.asm	/^c01000e1:	8d 5d 0c             	lea    0xc(%ebp),%ebx$/;"	l
c01000e4	obj/kernel.asm	/^c01000e4:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c01000e7	obj/kernel.asm	/^c01000e7:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c01000ea	obj/kernel.asm	/^c01000ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000ed	obj/kernel.asm	/^c01000ed:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c01000f1	obj/kernel.asm	/^c01000f1:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01000f5	obj/kernel.asm	/^c01000f5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01000f9	obj/kernel.asm	/^c01000f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01000fc	obj/kernel.asm	/^c01000fc:	e8 b5 ff ff ff       	call   c01000b6 <grade_backtrace2>$/;"	l
c0100101	obj/kernel.asm	/^c0100101:	83 c4 14             	add    $0x14,%esp$/;"	l
c0100104	obj/kernel.asm	/^c0100104:	5b                   	pop    %ebx$/;"	l
c0100105	obj/kernel.asm	/^c0100105:	5d                   	pop    %ebp$/;"	l
c0100106	obj/kernel.asm	/^c0100106:	c3                   	ret    $/;"	l
c0100107	obj/kernel.asm	/^c0100107 <grade_backtrace0>:$/;"	l
c0100107	obj/kernel.asm	/^c0100107:	55                   	push   %ebp$/;"	l
c0100108	obj/kernel.asm	/^c0100108:	89 e5                	mov    %esp,%ebp$/;"	l
c010010a	obj/kernel.asm	/^c010010a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010010d	obj/kernel.asm	/^c010010d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100110	obj/kernel.asm	/^c0100110:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100114	obj/kernel.asm	/^c0100114:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100117	obj/kernel.asm	/^c0100117:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010011a	obj/kernel.asm	/^c010011a:	e8 bb ff ff ff       	call   c01000da <grade_backtrace1>$/;"	l
c010011f	obj/kernel.asm	/^c010011f:	c9                   	leave  $/;"	l
c0100120	obj/kernel.asm	/^c0100120:	c3                   	ret    $/;"	l
c0100121	obj/kernel.asm	/^c0100121 <grade_backtrace>:$/;"	l
c0100121	obj/kernel.asm	/^c0100121:	55                   	push   %ebp$/;"	l
c0100122	obj/kernel.asm	/^c0100122:	89 e5                	mov    %esp,%ebp$/;"	l
c0100124	obj/kernel.asm	/^c0100124:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100127	obj/kernel.asm	/^c0100127:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c010012c	obj/kernel.asm	/^c010012c:	c7 44 24 08 00 00 ff 	movl   $0xffff0000,0x8(%esp)$/;"	l
c0100133	obj/kernel.asm	/^c0100133:	ff $/;"	l
c0100134	obj/kernel.asm	/^c0100134:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100138	obj/kernel.asm	/^c0100138:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010013f	obj/kernel.asm	/^c010013f:	e8 c3 ff ff ff       	call   c0100107 <grade_backtrace0>$/;"	l
c0100144	obj/kernel.asm	/^c0100144:	c9                   	leave  $/;"	l
c0100145	obj/kernel.asm	/^c0100145:	c3                   	ret    $/;"	l
c0100146	obj/kernel.asm	/^c0100146 <lab1_print_cur_status>:$/;"	l
c0100146	obj/kernel.asm	/^c0100146:	55                   	push   %ebp$/;"	l
c0100147	obj/kernel.asm	/^c0100147:	89 e5                	mov    %esp,%ebp$/;"	l
c0100149	obj/kernel.asm	/^c0100149:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010014c	obj/kernel.asm	/^c010014c:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c010014f	obj/kernel.asm	/^c010014f:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c0100152	obj/kernel.asm	/^c0100152:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c0100155	obj/kernel.asm	/^c0100155:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c0100158	obj/kernel.asm	/^c0100158:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010015c	obj/kernel.asm	/^c010015c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010015f	obj/kernel.asm	/^c010015f:	83 e0 03             	and    $0x3,%eax$/;"	l
c0100162	obj/kernel.asm	/^c0100162:	89 c2                	mov    %eax,%edx$/;"	l
c0100164	obj/kernel.asm	/^c0100164:	a1 e0 ed 1a c0       	mov    0xc01aede0,%eax$/;"	l
c0100169	obj/kernel.asm	/^c0100169:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010016d	obj/kernel.asm	/^c010016d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100171	obj/kernel.asm	/^c0100171:	c7 04 24 61 c4 10 c0 	movl   $0xc010c461,(%esp)$/;"	l
c0100178	obj/kernel.asm	/^c0100178:	e8 db 01 00 00       	call   c0100358 <cprintf>$/;"	l
c010017d	obj/kernel.asm	/^c010017d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100181	obj/kernel.asm	/^c0100181:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100184	obj/kernel.asm	/^c0100184:	a1 e0 ed 1a c0       	mov    0xc01aede0,%eax$/;"	l
c0100189	obj/kernel.asm	/^c0100189:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010018d	obj/kernel.asm	/^c010018d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100191	obj/kernel.asm	/^c0100191:	c7 04 24 6f c4 10 c0 	movl   $0xc010c46f,(%esp)$/;"	l
c0100198	obj/kernel.asm	/^c0100198:	e8 bb 01 00 00       	call   c0100358 <cprintf>$/;"	l
c010019d	obj/kernel.asm	/^c010019d:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c01001a1	obj/kernel.asm	/^c01001a1:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001a4	obj/kernel.asm	/^c01001a4:	a1 e0 ed 1a c0       	mov    0xc01aede0,%eax$/;"	l
c01001a9	obj/kernel.asm	/^c01001a9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001ad	obj/kernel.asm	/^c01001ad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001b1	obj/kernel.asm	/^c01001b1:	c7 04 24 7d c4 10 c0 	movl   $0xc010c47d,(%esp)$/;"	l
c01001b8	obj/kernel.asm	/^c01001b8:	e8 9b 01 00 00       	call   c0100358 <cprintf>$/;"	l
c01001bd	obj/kernel.asm	/^c01001bd:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01001c1	obj/kernel.asm	/^c01001c1:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001c4	obj/kernel.asm	/^c01001c4:	a1 e0 ed 1a c0       	mov    0xc01aede0,%eax$/;"	l
c01001c9	obj/kernel.asm	/^c01001c9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001cd	obj/kernel.asm	/^c01001cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001d1	obj/kernel.asm	/^c01001d1:	c7 04 24 8b c4 10 c0 	movl   $0xc010c48b,(%esp)$/;"	l
c01001d8	obj/kernel.asm	/^c01001d8:	e8 7b 01 00 00       	call   c0100358 <cprintf>$/;"	l
c01001dd	obj/kernel.asm	/^c01001dd:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001e1	obj/kernel.asm	/^c01001e1:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001e4	obj/kernel.asm	/^c01001e4:	a1 e0 ed 1a c0       	mov    0xc01aede0,%eax$/;"	l
c01001e9	obj/kernel.asm	/^c01001e9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001ed	obj/kernel.asm	/^c01001ed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001f1	obj/kernel.asm	/^c01001f1:	c7 04 24 99 c4 10 c0 	movl   $0xc010c499,(%esp)$/;"	l
c01001f8	obj/kernel.asm	/^c01001f8:	e8 5b 01 00 00       	call   c0100358 <cprintf>$/;"	l
c01001fd	obj/kernel.asm	/^c01001fd:	a1 e0 ed 1a c0       	mov    0xc01aede0,%eax$/;"	l
c0100202	obj/kernel.asm	/^c0100202:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100205	obj/kernel.asm	/^c0100205:	a3 e0 ed 1a c0       	mov    %eax,0xc01aede0$/;"	l
c010020a	obj/kernel.asm	/^c010020a:	c9                   	leave  $/;"	l
c010020b	obj/kernel.asm	/^c010020b:	c3                   	ret    $/;"	l
c010020c	obj/kernel.asm	/^c010020c <lab1_switch_to_user>:$/;"	l
c010020c	obj/kernel.asm	/^c010020c:	55                   	push   %ebp$/;"	l
c010020d	obj/kernel.asm	/^c010020d:	89 e5                	mov    %esp,%ebp$/;"	l
c010020f	obj/kernel.asm	/^c010020f:	5d                   	pop    %ebp$/;"	l
c0100210	obj/kernel.asm	/^c0100210:	c3                   	ret    $/;"	l
c0100211	obj/kernel.asm	/^c0100211 <lab1_switch_to_kernel>:$/;"	l
c0100211	obj/kernel.asm	/^c0100211:	55                   	push   %ebp$/;"	l
c0100212	obj/kernel.asm	/^c0100212:	89 e5                	mov    %esp,%ebp$/;"	l
c0100214	obj/kernel.asm	/^c0100214:	5d                   	pop    %ebp$/;"	l
c0100215	obj/kernel.asm	/^c0100215:	c3                   	ret    $/;"	l
c0100216	obj/kernel.asm	/^c0100216 <lab1_switch_test>:$/;"	l
c0100216	obj/kernel.asm	/^c0100216:	55                   	push   %ebp$/;"	l
c0100217	obj/kernel.asm	/^c0100217:	89 e5                	mov    %esp,%ebp$/;"	l
c0100219	obj/kernel.asm	/^c0100219:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010021c	obj/kernel.asm	/^c010021c:	e8 25 ff ff ff       	call   c0100146 <lab1_print_cur_status>$/;"	l
c0100221	obj/kernel.asm	/^c0100221:	c7 04 24 a8 c4 10 c0 	movl   $0xc010c4a8,(%esp)$/;"	l
c0100228	obj/kernel.asm	/^c0100228:	e8 2b 01 00 00       	call   c0100358 <cprintf>$/;"	l
c010022d	obj/kernel.asm	/^c010022d:	e8 da ff ff ff       	call   c010020c <lab1_switch_to_user>$/;"	l
c0100232	obj/kernel.asm	/^c0100232:	e8 0f ff ff ff       	call   c0100146 <lab1_print_cur_status>$/;"	l
c0100237	obj/kernel.asm	/^c0100237:	c7 04 24 c8 c4 10 c0 	movl   $0xc010c4c8,(%esp)$/;"	l
c010023e	obj/kernel.asm	/^c010023e:	e8 15 01 00 00       	call   c0100358 <cprintf>$/;"	l
c0100243	obj/kernel.asm	/^c0100243:	e8 c9 ff ff ff       	call   c0100211 <lab1_switch_to_kernel>$/;"	l
c0100248	obj/kernel.asm	/^c0100248:	e8 f9 fe ff ff       	call   c0100146 <lab1_print_cur_status>$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	c9                   	leave  $/;"	l
c010024e	obj/kernel.asm	/^c010024e:	c3                   	ret    $/;"	l
c010024f	obj/kernel.asm	/^c010024f <readline>:$/;"	l
c010024f	obj/kernel.asm	/^c010024f:	55                   	push   %ebp$/;"	l
c0100250	obj/kernel.asm	/^c0100250:	89 e5                	mov    %esp,%ebp$/;"	l
c0100252	obj/kernel.asm	/^c0100252:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100255	obj/kernel.asm	/^c0100255:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100259	obj/kernel.asm	/^c0100259:	74 13                	je     c010026e <readline+0x1f>$/;"	l
c010025b	obj/kernel.asm	/^c010025b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010025e	obj/kernel.asm	/^c010025e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100262	obj/kernel.asm	/^c0100262:	c7 04 24 e7 c4 10 c0 	movl   $0xc010c4e7,(%esp)$/;"	l
c0100269	obj/kernel.asm	/^c0100269:	e8 ea 00 00 00       	call   c0100358 <cprintf>$/;"	l
c010026e	obj/kernel.asm	/^c010026e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100275	obj/kernel.asm	/^c0100275:	e8 66 01 00 00       	call   c01003e0 <getchar>$/;"	l
c010027a	obj/kernel.asm	/^c010027a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010027d	obj/kernel.asm	/^c010027d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100281	obj/kernel.asm	/^c0100281:	79 07                	jns    c010028a <readline+0x3b>$/;"	l
c0100283	obj/kernel.asm	/^c0100283:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100288	obj/kernel.asm	/^c0100288:	eb 79                	jmp    c0100303 <readline+0xb4>$/;"	l
c010028a	obj/kernel.asm	/^c010028a:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c010028e	obj/kernel.asm	/^c010028e:	7e 28                	jle    c01002b8 <readline+0x69>$/;"	l
c0100290	obj/kernel.asm	/^c0100290:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c0100297	obj/kernel.asm	/^c0100297:	7f 1f                	jg     c01002b8 <readline+0x69>$/;"	l
c0100299	obj/kernel.asm	/^c0100299:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010029c	obj/kernel.asm	/^c010029c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010029f	obj/kernel.asm	/^c010029f:	e8 da 00 00 00       	call   c010037e <cputchar>$/;"	l
c01002a4	obj/kernel.asm	/^c01002a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002a7	obj/kernel.asm	/^c01002a7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01002aa	obj/kernel.asm	/^c01002aa:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01002ad	obj/kernel.asm	/^c01002ad:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01002b0	obj/kernel.asm	/^c01002b0:	88 90 00 ee 1a c0    	mov    %dl,-0x3fe51200(%eax)$/;"	l
c01002b6	obj/kernel.asm	/^c01002b6:	eb 46                	jmp    c01002fe <readline+0xaf>$/;"	l
c01002b8	obj/kernel.asm	/^c01002b8:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c01002bc	obj/kernel.asm	/^c01002bc:	75 17                	jne    c01002d5 <readline+0x86>$/;"	l
c01002be	obj/kernel.asm	/^c01002be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01002c2	obj/kernel.asm	/^c01002c2:	7e 11                	jle    c01002d5 <readline+0x86>$/;"	l
c01002c4	obj/kernel.asm	/^c01002c4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002c7	obj/kernel.asm	/^c01002c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002ca	obj/kernel.asm	/^c01002ca:	e8 af 00 00 00       	call   c010037e <cputchar>$/;"	l
c01002cf	obj/kernel.asm	/^c01002cf:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01002d3	obj/kernel.asm	/^c01002d3:	eb 29                	jmp    c01002fe <readline+0xaf>$/;"	l
c01002d5	obj/kernel.asm	/^c01002d5:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01002d9	obj/kernel.asm	/^c01002d9:	74 06                	je     c01002e1 <readline+0x92>$/;"	l
c01002db	obj/kernel.asm	/^c01002db:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01002df	obj/kernel.asm	/^c01002df:	75 1d                	jne    c01002fe <readline+0xaf>$/;"	l
c01002e1	obj/kernel.asm	/^c01002e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002e4	obj/kernel.asm	/^c01002e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002e7	obj/kernel.asm	/^c01002e7:	e8 92 00 00 00       	call   c010037e <cputchar>$/;"	l
c01002ec	obj/kernel.asm	/^c01002ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002ef	obj/kernel.asm	/^c01002ef:	05 00 ee 1a c0       	add    $0xc01aee00,%eax$/;"	l
c01002f4	obj/kernel.asm	/^c01002f4:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01002f7	obj/kernel.asm	/^c01002f7:	b8 00 ee 1a c0       	mov    $0xc01aee00,%eax$/;"	l
c01002fc	obj/kernel.asm	/^c01002fc:	eb 05                	jmp    c0100303 <readline+0xb4>$/;"	l
c01002fe	obj/kernel.asm	/^c01002fe:	e9 72 ff ff ff       	jmp    c0100275 <readline+0x26>$/;"	l
c0100303	obj/kernel.asm	/^c0100303:	c9                   	leave  $/;"	l
c0100304	obj/kernel.asm	/^c0100304:	c3                   	ret    $/;"	l
c0100305	obj/kernel.asm	/^c0100305 <cputch>:$/;"	l
c0100305	obj/kernel.asm	/^c0100305:	55                   	push   %ebp$/;"	l
c0100306	obj/kernel.asm	/^c0100306:	89 e5                	mov    %esp,%ebp$/;"	l
c0100308	obj/kernel.asm	/^c0100308:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010030b	obj/kernel.asm	/^c010030b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010030e	obj/kernel.asm	/^c010030e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100311	obj/kernel.asm	/^c0100311:	e8 f6 13 00 00       	call   c010170c <cons_putc>$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100319	obj/kernel.asm	/^c0100319:	8b 00                	mov    (%eax),%eax$/;"	l
c010031b	obj/kernel.asm	/^c010031b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010031e	obj/kernel.asm	/^c010031e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100321	obj/kernel.asm	/^c0100321:	89 10                	mov    %edx,(%eax)$/;"	l
c0100323	obj/kernel.asm	/^c0100323:	c9                   	leave  $/;"	l
c0100324	obj/kernel.asm	/^c0100324:	c3                   	ret    $/;"	l
c0100325	obj/kernel.asm	/^c0100325 <vcprintf>:$/;"	l
c0100325	obj/kernel.asm	/^c0100325:	55                   	push   %ebp$/;"	l
c0100326	obj/kernel.asm	/^c0100326:	89 e5                	mov    %esp,%ebp$/;"	l
c0100328	obj/kernel.asm	/^c0100328:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010032b	obj/kernel.asm	/^c010032b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100332	obj/kernel.asm	/^c0100332:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100335	obj/kernel.asm	/^c0100335:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0100339	obj/kernel.asm	/^c0100339:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010033c	obj/kernel.asm	/^c010033c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100340	obj/kernel.asm	/^c0100340:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100343	obj/kernel.asm	/^c0100343:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100347	obj/kernel.asm	/^c0100347:	c7 04 24 05 03 10 c0 	movl   $0xc0100305,(%esp)$/;"	l
c010034e	obj/kernel.asm	/^c010034e:	e8 87 b6 00 00       	call   c010b9da <vprintfmt>$/;"	l
c0100353	obj/kernel.asm	/^c0100353:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100356	obj/kernel.asm	/^c0100356:	c9                   	leave  $/;"	l
c0100357	obj/kernel.asm	/^c0100357:	c3                   	ret    $/;"	l
c0100358	obj/kernel.asm	/^c0100358 <cprintf>:$/;"	l
c0100358	obj/kernel.asm	/^c0100358:	55                   	push   %ebp$/;"	l
c0100359	obj/kernel.asm	/^c0100359:	89 e5                	mov    %esp,%ebp$/;"	l
c010035b	obj/kernel.asm	/^c010035b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010035e	obj/kernel.asm	/^c010035e:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c0100361	obj/kernel.asm	/^c0100361:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100364	obj/kernel.asm	/^c0100364:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100367	obj/kernel.asm	/^c0100367:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010036b	obj/kernel.asm	/^c010036b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010036e	obj/kernel.asm	/^c010036e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100371	obj/kernel.asm	/^c0100371:	e8 af ff ff ff       	call   c0100325 <vcprintf>$/;"	l
c0100376	obj/kernel.asm	/^c0100376:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100379	obj/kernel.asm	/^c0100379:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010037c	obj/kernel.asm	/^c010037c:	c9                   	leave  $/;"	l
c010037d	obj/kernel.asm	/^c010037d:	c3                   	ret    $/;"	l
c010037e	obj/kernel.asm	/^c010037e <cputchar>:$/;"	l
c010037e	obj/kernel.asm	/^c010037e:	55                   	push   %ebp$/;"	l
c010037f	obj/kernel.asm	/^c010037f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100381	obj/kernel.asm	/^c0100381:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100384	obj/kernel.asm	/^c0100384:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100387	obj/kernel.asm	/^c0100387:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010038a	obj/kernel.asm	/^c010038a:	e8 7d 13 00 00       	call   c010170c <cons_putc>$/;"	l
c010038f	obj/kernel.asm	/^c010038f:	c9                   	leave  $/;"	l
c0100390	obj/kernel.asm	/^c0100390:	c3                   	ret    $/;"	l
c0100391	obj/kernel.asm	/^c0100391 <cputs>:$/;"	l
c0100391	obj/kernel.asm	/^c0100391:	55                   	push   %ebp$/;"	l
c0100392	obj/kernel.asm	/^c0100392:	89 e5                	mov    %esp,%ebp$/;"	l
c0100394	obj/kernel.asm	/^c0100394:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100397	obj/kernel.asm	/^c0100397:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010039e	obj/kernel.asm	/^c010039e:	eb 13                	jmp    c01003b3 <cputs+0x22>$/;"	l
c01003a0	obj/kernel.asm	/^c01003a0:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c01003a4	obj/kernel.asm	/^c01003a4:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01003a7	obj/kernel.asm	/^c01003a7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01003ab	obj/kernel.asm	/^c01003ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01003ae	obj/kernel.asm	/^c01003ae:	e8 52 ff ff ff       	call   c0100305 <cputch>$/;"	l
c01003b3	obj/kernel.asm	/^c01003b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01003b6	obj/kernel.asm	/^c01003b6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01003b9	obj/kernel.asm	/^c01003b9:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01003bc	obj/kernel.asm	/^c01003bc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01003bf	obj/kernel.asm	/^c01003bf:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01003c2	obj/kernel.asm	/^c01003c2:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01003c6	obj/kernel.asm	/^c01003c6:	75 d8                	jne    c01003a0 <cputs+0xf>$/;"	l
c01003c8	obj/kernel.asm	/^c01003c8:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01003cb	obj/kernel.asm	/^c01003cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01003cf	obj/kernel.asm	/^c01003cf:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c01003d6	obj/kernel.asm	/^c01003d6:	e8 2a ff ff ff       	call   c0100305 <cputch>$/;"	l
c01003db	obj/kernel.asm	/^c01003db:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01003de	obj/kernel.asm	/^c01003de:	c9                   	leave  $/;"	l
c01003df	obj/kernel.asm	/^c01003df:	c3                   	ret    $/;"	l
c01003e0	obj/kernel.asm	/^c01003e0 <getchar>:$/;"	l
c01003e0	obj/kernel.asm	/^c01003e0:	55                   	push   %ebp$/;"	l
c01003e1	obj/kernel.asm	/^c01003e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01003e3	obj/kernel.asm	/^c01003e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003e6	obj/kernel.asm	/^c01003e6:	e8 5d 13 00 00       	call   c0101748 <cons_getc>$/;"	l
c01003eb	obj/kernel.asm	/^c01003eb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01003ee	obj/kernel.asm	/^c01003ee:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01003f2	obj/kernel.asm	/^c01003f2:	74 f2                	je     c01003e6 <getchar+0x6>$/;"	l
c01003f4	obj/kernel.asm	/^c01003f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003f7	obj/kernel.asm	/^c01003f7:	c9                   	leave  $/;"	l
c01003f8	obj/kernel.asm	/^c01003f8:	c3                   	ret    $/;"	l
c01003f9	obj/kernel.asm	/^c01003f9 <stab_binsearch>:$/;"	l
c01003f9	obj/kernel.asm	/^c01003f9:	55                   	push   %ebp$/;"	l
c01003fa	obj/kernel.asm	/^c01003fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01003fc	obj/kernel.asm	/^c01003fc:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01003ff	obj/kernel.asm	/^c01003ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100402	obj/kernel.asm	/^c0100402:	8b 00                	mov    (%eax),%eax$/;"	l
c0100404	obj/kernel.asm	/^c0100404:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100407	obj/kernel.asm	/^c0100407:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010040a	obj/kernel.asm	/^c010040a:	8b 00                	mov    (%eax),%eax$/;"	l
c010040c	obj/kernel.asm	/^c010040c:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010040f	obj/kernel.asm	/^c010040f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100416	obj/kernel.asm	/^c0100416:	e9 d2 00 00 00       	jmp    c01004ed <stab_binsearch+0xf4>$/;"	l
c010041b	obj/kernel.asm	/^c010041b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010041e	obj/kernel.asm	/^c010041e:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100421	obj/kernel.asm	/^c0100421:	01 d0                	add    %edx,%eax$/;"	l
c0100423	obj/kernel.asm	/^c0100423:	89 c2                	mov    %eax,%edx$/;"	l
c0100425	obj/kernel.asm	/^c0100425:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c0100428	obj/kernel.asm	/^c0100428:	01 d0                	add    %edx,%eax$/;"	l
c010042a	obj/kernel.asm	/^c010042a:	d1 f8                	sar    %eax$/;"	d
c010042c	obj/kernel.asm	/^c010042c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010042f	obj/kernel.asm	/^c010042f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100432	obj/kernel.asm	/^c0100432:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100435	obj/kernel.asm	/^c0100435:	eb 04                	jmp    c010043b <stab_binsearch+0x42>$/;"	l
c0100437	obj/kernel.asm	/^c0100437:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c010043b	obj/kernel.asm	/^c010043b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010043e	obj/kernel.asm	/^c010043e:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100441	obj/kernel.asm	/^c0100441:	7c 1f                	jl     c0100462 <stab_binsearch+0x69>$/;"	l
c0100443	obj/kernel.asm	/^c0100443:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100446	obj/kernel.asm	/^c0100446:	89 d0                	mov    %edx,%eax$/;"	l
c0100448	obj/kernel.asm	/^c0100448:	01 c0                	add    %eax,%eax$/;"	l
c010044a	obj/kernel.asm	/^c010044a:	01 d0                	add    %edx,%eax$/;"	l
c010044c	obj/kernel.asm	/^c010044c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010044f	obj/kernel.asm	/^c010044f:	89 c2                	mov    %eax,%edx$/;"	l
c0100451	obj/kernel.asm	/^c0100451:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100454	obj/kernel.asm	/^c0100454:	01 d0                	add    %edx,%eax$/;"	l
c0100456	obj/kernel.asm	/^c0100456:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010045a	obj/kernel.asm	/^c010045a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010045d	obj/kernel.asm	/^c010045d:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0100460	obj/kernel.asm	/^c0100460:	75 d5                	jne    c0100437 <stab_binsearch+0x3e>$/;"	l
c0100462	obj/kernel.asm	/^c0100462:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100465	obj/kernel.asm	/^c0100465:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100468	obj/kernel.asm	/^c0100468:	7d 0b                	jge    c0100475 <stab_binsearch+0x7c>$/;"	l
c010046a	obj/kernel.asm	/^c010046a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010046d	obj/kernel.asm	/^c010046d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100470	obj/kernel.asm	/^c0100470:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100473	obj/kernel.asm	/^c0100473:	eb 78                	jmp    c01004ed <stab_binsearch+0xf4>$/;"	l
c0100475	obj/kernel.asm	/^c0100475:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010047c	obj/kernel.asm	/^c010047c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010047f	obj/kernel.asm	/^c010047f:	89 d0                	mov    %edx,%eax$/;"	l
c0100481	obj/kernel.asm	/^c0100481:	01 c0                	add    %eax,%eax$/;"	l
c0100483	obj/kernel.asm	/^c0100483:	01 d0                	add    %edx,%eax$/;"	l
c0100485	obj/kernel.asm	/^c0100485:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100488	obj/kernel.asm	/^c0100488:	89 c2                	mov    %eax,%edx$/;"	l
c010048a	obj/kernel.asm	/^c010048a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010048d	obj/kernel.asm	/^c010048d:	01 d0                	add    %edx,%eax$/;"	l
c010048f	obj/kernel.asm	/^c010048f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100492	obj/kernel.asm	/^c0100492:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100495	obj/kernel.asm	/^c0100495:	73 13                	jae    c01004aa <stab_binsearch+0xb1>$/;"	l
c0100497	obj/kernel.asm	/^c0100497:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010049a	obj/kernel.asm	/^c010049a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010049d	obj/kernel.asm	/^c010049d:	89 10                	mov    %edx,(%eax)$/;"	l
c010049f	obj/kernel.asm	/^c010049f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004a2	obj/kernel.asm	/^c01004a2:	83 c0 01             	add    $0x1,%eax$/;"	l
c01004a5	obj/kernel.asm	/^c01004a5:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004a8	obj/kernel.asm	/^c01004a8:	eb 43                	jmp    c01004ed <stab_binsearch+0xf4>$/;"	l
c01004aa	obj/kernel.asm	/^c01004aa:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01004ad	obj/kernel.asm	/^c01004ad:	89 d0                	mov    %edx,%eax$/;"	l
c01004af	obj/kernel.asm	/^c01004af:	01 c0                	add    %eax,%eax$/;"	l
c01004b1	obj/kernel.asm	/^c01004b1:	01 d0                	add    %edx,%eax$/;"	l
c01004b3	obj/kernel.asm	/^c01004b3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01004b6	obj/kernel.asm	/^c01004b6:	89 c2                	mov    %eax,%edx$/;"	l
c01004b8	obj/kernel.asm	/^c01004b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01004bb	obj/kernel.asm	/^c01004bb:	01 d0                	add    %edx,%eax$/;"	l
c01004bd	obj/kernel.asm	/^c01004bd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01004c0	obj/kernel.asm	/^c01004c0:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c01004c3	obj/kernel.asm	/^c01004c3:	76 16                	jbe    c01004db <stab_binsearch+0xe2>$/;"	l
c01004c5	obj/kernel.asm	/^c01004c5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004c8	obj/kernel.asm	/^c01004c8:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01004cb	obj/kernel.asm	/^c01004cb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01004ce	obj/kernel.asm	/^c01004ce:	89 10                	mov    %edx,(%eax)$/;"	l
c01004d0	obj/kernel.asm	/^c01004d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004d3	obj/kernel.asm	/^c01004d3:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01004d6	obj/kernel.asm	/^c01004d6:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01004d9	obj/kernel.asm	/^c01004d9:	eb 12                	jmp    c01004ed <stab_binsearch+0xf4>$/;"	l
c01004db	obj/kernel.asm	/^c01004db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004de	obj/kernel.asm	/^c01004de:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01004e1	obj/kernel.asm	/^c01004e1:	89 10                	mov    %edx,(%eax)$/;"	l
c01004e3	obj/kernel.asm	/^c01004e3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004e6	obj/kernel.asm	/^c01004e6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004e9	obj/kernel.asm	/^c01004e9:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01004f0	obj/kernel.asm	/^c01004f0:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01004f3	obj/kernel.asm	/^c01004f3:	0f 8e 22 ff ff ff    	jle    c010041b <stab_binsearch+0x22>$/;"	l
c01004f9	obj/kernel.asm	/^c01004f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01004fd	obj/kernel.asm	/^c01004fd:	75 0f                	jne    c010050e <stab_binsearch+0x115>$/;"	l
c01004ff	obj/kernel.asm	/^c01004ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100502	obj/kernel.asm	/^c0100502:	8b 00                	mov    (%eax),%eax$/;"	l
c0100504	obj/kernel.asm	/^c0100504:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0100507	obj/kernel.asm	/^c0100507:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010050a	obj/kernel.asm	/^c010050a:	89 10                	mov    %edx,(%eax)$/;"	l
c010050c	obj/kernel.asm	/^c010050c:	eb 3f                	jmp    c010054d <stab_binsearch+0x154>$/;"	l
c010050e	obj/kernel.asm	/^c010050e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100511	obj/kernel.asm	/^c0100511:	8b 00                	mov    (%eax),%eax$/;"	l
c0100513	obj/kernel.asm	/^c0100513:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100516	obj/kernel.asm	/^c0100516:	eb 04                	jmp    c010051c <stab_binsearch+0x123>$/;"	l
c0100518	obj/kernel.asm	/^c0100518:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c010051c	obj/kernel.asm	/^c010051c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010051f	obj/kernel.asm	/^c010051f:	8b 00                	mov    (%eax),%eax$/;"	l
c0100521	obj/kernel.asm	/^c0100521:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100524	obj/kernel.asm	/^c0100524:	7d 1f                	jge    c0100545 <stab_binsearch+0x14c>$/;"	l
c0100526	obj/kernel.asm	/^c0100526:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100529	obj/kernel.asm	/^c0100529:	89 d0                	mov    %edx,%eax$/;"	l
c010052b	obj/kernel.asm	/^c010052b:	01 c0                	add    %eax,%eax$/;"	l
c010052d	obj/kernel.asm	/^c010052d:	01 d0                	add    %edx,%eax$/;"	l
c010052f	obj/kernel.asm	/^c010052f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100532	obj/kernel.asm	/^c0100532:	89 c2                	mov    %eax,%edx$/;"	l
c0100534	obj/kernel.asm	/^c0100534:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100537	obj/kernel.asm	/^c0100537:	01 d0                	add    %edx,%eax$/;"	l
c0100539	obj/kernel.asm	/^c0100539:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010053d	obj/kernel.asm	/^c010053d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100540	obj/kernel.asm	/^c0100540:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0100543	obj/kernel.asm	/^c0100543:	75 d3                	jne    c0100518 <stab_binsearch+0x11f>$/;"	l
c0100545	obj/kernel.asm	/^c0100545:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	89 10                	mov    %edx,(%eax)$/;"	l
c010054d	obj/kernel.asm	/^c010054d:	c9                   	leave  $/;"	l
c010054e	obj/kernel.asm	/^c010054e:	c3                   	ret    $/;"	l
c010054f	obj/kernel.asm	/^c010054f <debuginfo_eip>:$/;"	l
c010054f	obj/kernel.asm	/^c010054f:	55                   	push   %ebp$/;"	l
c0100550	obj/kernel.asm	/^c0100550:	89 e5                	mov    %esp,%ebp$/;"	l
c0100552	obj/kernel.asm	/^c0100552:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100555	obj/kernel.asm	/^c0100555:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100558	obj/kernel.asm	/^c0100558:	c7 00 ec c4 10 c0    	movl   $0xc010c4ec,(%eax)$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100561	obj/kernel.asm	/^c0100561:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0100568	obj/kernel.asm	/^c0100568:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010056b	obj/kernel.asm	/^c010056b:	c7 40 08 ec c4 10 c0 	movl   $0xc010c4ec,0x8(%eax)$/;"	l
c0100572	obj/kernel.asm	/^c0100572:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100575	obj/kernel.asm	/^c0100575:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c010057c	obj/kernel.asm	/^c010057c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010057f	obj/kernel.asm	/^c010057f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100582	obj/kernel.asm	/^c0100582:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100585	obj/kernel.asm	/^c0100585:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100588	obj/kernel.asm	/^c0100588:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010058f	obj/kernel.asm	/^c010058f:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100596	obj/kernel.asm	/^c0100596:	76 21                	jbe    c01005b9 <debuginfo_eip+0x6a>$/;"	l
c0100598	obj/kernel.asm	/^c0100598:	c7 45 f4 c0 ec 10 c0 	movl   $0xc010ecc0,-0xc(%ebp)$/;"	l
c010059f	obj/kernel.asm	/^c010059f:	c7 45 f0 70 3e 12 c0 	movl   $0xc0123e70,-0x10(%ebp)$/;"	l
c01005a6	obj/kernel.asm	/^c01005a6:	c7 45 ec 71 3e 12 c0 	movl   $0xc0123e71,-0x14(%ebp)$/;"	l
c01005ad	obj/kernel.asm	/^c01005ad:	c7 45 e8 44 a2 12 c0 	movl   $0xc012a244,-0x18(%ebp)$/;"	l
c01005b4	obj/kernel.asm	/^c01005b4:	e9 ea 00 00 00       	jmp    c01006a3 <debuginfo_eip+0x154>$/;"	l
c01005b9	obj/kernel.asm	/^c01005b9:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c01005c0	obj/kernel.asm	/^c01005c0:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c01005c5	obj/kernel.asm	/^c01005c5:	85 c0                	test   %eax,%eax$/;"	l
c01005c7	obj/kernel.asm	/^c01005c7:	74 11                	je     c01005da <debuginfo_eip+0x8b>$/;"	l
c01005c9	obj/kernel.asm	/^c01005c9:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c01005ce	obj/kernel.asm	/^c01005ce:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01005d1	obj/kernel.asm	/^c01005d1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01005d4	obj/kernel.asm	/^c01005d4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01005d8	obj/kernel.asm	/^c01005d8:	75 0a                	jne    c01005e4 <debuginfo_eip+0x95>$/;"	l
c01005da	obj/kernel.asm	/^c01005da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01005df	obj/kernel.asm	/^c01005df:	e9 9e 03 00 00       	jmp    c0100982 <debuginfo_eip+0x433>$/;"	l
c01005e4	obj/kernel.asm	/^c01005e4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01005e7	obj/kernel.asm	/^c01005e7:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01005ee	obj/kernel.asm	/^c01005ee:	00 $/;"	l
c01005ef	obj/kernel.asm	/^c01005ef:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c01005f6	obj/kernel.asm	/^c01005f6:	00 $/;"	l
c01005f7	obj/kernel.asm	/^c01005f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01005fb	obj/kernel.asm	/^c01005fb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01005fe	obj/kernel.asm	/^c01005fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100601	obj/kernel.asm	/^c0100601:	e8 b3 88 00 00       	call   c0108eb9 <user_mem_check>$/;"	l
c0100606	obj/kernel.asm	/^c0100606:	85 c0                	test   %eax,%eax$/;"	l
c0100608	obj/kernel.asm	/^c0100608:	75 0a                	jne    c0100614 <debuginfo_eip+0xc5>$/;"	l
c010060a	obj/kernel.asm	/^c010060a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010060f	obj/kernel.asm	/^c010060f:	e9 6e 03 00 00       	jmp    c0100982 <debuginfo_eip+0x433>$/;"	l
c0100614	obj/kernel.asm	/^c0100614:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100617	obj/kernel.asm	/^c0100617:	8b 00                	mov    (%eax),%eax$/;"	l
c0100619	obj/kernel.asm	/^c0100619:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010061c	obj/kernel.asm	/^c010061c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010061f	obj/kernel.asm	/^c010061f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0100622	obj/kernel.asm	/^c0100622:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100625	obj/kernel.asm	/^c0100625:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100628	obj/kernel.asm	/^c0100628:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010062b	obj/kernel.asm	/^c010062b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010062e	obj/kernel.asm	/^c010062e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100631	obj/kernel.asm	/^c0100631:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0100634	obj/kernel.asm	/^c0100634:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100637	obj/kernel.asm	/^c0100637:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010063a	obj/kernel.asm	/^c010063a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010063d	obj/kernel.asm	/^c010063d:	29 c2                	sub    %eax,%edx$/;"	l
c010063f	obj/kernel.asm	/^c010063f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100642	obj/kernel.asm	/^c0100642:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0100649	obj/kernel.asm	/^c0100649:	00 $/;"	l
c010064a	obj/kernel.asm	/^c010064a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010064e	obj/kernel.asm	/^c010064e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100652	obj/kernel.asm	/^c0100652:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100655	obj/kernel.asm	/^c0100655:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100658	obj/kernel.asm	/^c0100658:	e8 5c 88 00 00       	call   c0108eb9 <user_mem_check>$/;"	l
c010065d	obj/kernel.asm	/^c010065d:	85 c0                	test   %eax,%eax$/;"	l
c010065f	obj/kernel.asm	/^c010065f:	75 0a                	jne    c010066b <debuginfo_eip+0x11c>$/;"	l
c0100661	obj/kernel.asm	/^c0100661:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100666	obj/kernel.asm	/^c0100666:	e9 17 03 00 00       	jmp    c0100982 <debuginfo_eip+0x433>$/;"	l
c010066b	obj/kernel.asm	/^c010066b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010066e	obj/kernel.asm	/^c010066e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100671	obj/kernel.asm	/^c0100671:	29 c2                	sub    %eax,%edx$/;"	l
c0100673	obj/kernel.asm	/^c0100673:	89 d0                	mov    %edx,%eax$/;"	l
c0100675	obj/kernel.asm	/^c0100675:	89 c2                	mov    %eax,%edx$/;"	l
c0100677	obj/kernel.asm	/^c0100677:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010067a	obj/kernel.asm	/^c010067a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0100681	obj/kernel.asm	/^c0100681:	00 $/;"	l
c0100682	obj/kernel.asm	/^c0100682:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100686	obj/kernel.asm	/^c0100686:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010068a	obj/kernel.asm	/^c010068a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010068d	obj/kernel.asm	/^c010068d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100690	obj/kernel.asm	/^c0100690:	e8 24 88 00 00       	call   c0108eb9 <user_mem_check>$/;"	l
c0100695	obj/kernel.asm	/^c0100695:	85 c0                	test   %eax,%eax$/;"	l
c0100697	obj/kernel.asm	/^c0100697:	75 0a                	jne    c01006a3 <debuginfo_eip+0x154>$/;"	l
c0100699	obj/kernel.asm	/^c0100699:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010069e	obj/kernel.asm	/^c010069e:	e9 df 02 00 00       	jmp    c0100982 <debuginfo_eip+0x433>$/;"	l
c01006a3	obj/kernel.asm	/^c01006a3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01006a6	obj/kernel.asm	/^c01006a6:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01006a9	obj/kernel.asm	/^c01006a9:	76 0d                	jbe    c01006b8 <debuginfo_eip+0x169>$/;"	l
c01006ab	obj/kernel.asm	/^c01006ab:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01006ae	obj/kernel.asm	/^c01006ae:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01006b1	obj/kernel.asm	/^c01006b1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01006b4	obj/kernel.asm	/^c01006b4:	84 c0                	test   %al,%al$/;"	l
c01006b6	obj/kernel.asm	/^c01006b6:	74 0a                	je     c01006c2 <debuginfo_eip+0x173>$/;"	l
c01006b8	obj/kernel.asm	/^c01006b8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006bd	obj/kernel.asm	/^c01006bd:	e9 c0 02 00 00       	jmp    c0100982 <debuginfo_eip+0x433>$/;"	l
c01006c2	obj/kernel.asm	/^c01006c2:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01006c9	obj/kernel.asm	/^c01006c9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01006cc	obj/kernel.asm	/^c01006cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006cf	obj/kernel.asm	/^c01006cf:	29 c2                	sub    %eax,%edx$/;"	l
c01006d1	obj/kernel.asm	/^c01006d1:	89 d0                	mov    %edx,%eax$/;"	l
c01006d3	obj/kernel.asm	/^c01006d3:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c01006d6	obj/kernel.asm	/^c01006d6:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c01006dc	obj/kernel.asm	/^c01006dc:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01006df	obj/kernel.asm	/^c01006df:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01006e2	obj/kernel.asm	/^c01006e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01006e5	obj/kernel.asm	/^c01006e5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c01006e9	obj/kernel.asm	/^c01006e9:	c7 44 24 0c 64 00 00 	movl   $0x64,0xc(%esp)$/;"	l
c01006f0	obj/kernel.asm	/^c01006f0:	00 $/;"	l
c01006f1	obj/kernel.asm	/^c01006f1:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c01006f4	obj/kernel.asm	/^c01006f4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01006f8	obj/kernel.asm	/^c01006f8:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c01006fb	obj/kernel.asm	/^c01006fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01006ff	obj/kernel.asm	/^c01006ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100702	obj/kernel.asm	/^c0100702:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100705	obj/kernel.asm	/^c0100705:	e8 ef fc ff ff       	call   c01003f9 <stab_binsearch>$/;"	l
c010070a	obj/kernel.asm	/^c010070a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010070d	obj/kernel.asm	/^c010070d:	85 c0                	test   %eax,%eax$/;"	l
c010070f	obj/kernel.asm	/^c010070f:	75 0a                	jne    c010071b <debuginfo_eip+0x1cc>$/;"	l
c0100711	obj/kernel.asm	/^c0100711:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100716	obj/kernel.asm	/^c0100716:	e9 67 02 00 00       	jmp    c0100982 <debuginfo_eip+0x433>$/;"	l
c010071b	obj/kernel.asm	/^c010071b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010071e	obj/kernel.asm	/^c010071e:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0100721	obj/kernel.asm	/^c0100721:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100724	obj/kernel.asm	/^c0100724:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100727	obj/kernel.asm	/^c0100727:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010072a	obj/kernel.asm	/^c010072a:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010072e	obj/kernel.asm	/^c010072e:	c7 44 24 0c 24 00 00 	movl   $0x24,0xc(%esp)$/;"	l
c0100735	obj/kernel.asm	/^c0100735:	00 $/;"	l
c0100736	obj/kernel.asm	/^c0100736:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c0100739	obj/kernel.asm	/^c0100739:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010073d	obj/kernel.asm	/^c010073d:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c0100740	obj/kernel.asm	/^c0100740:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100744	obj/kernel.asm	/^c0100744:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100747	obj/kernel.asm	/^c0100747:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010074a	obj/kernel.asm	/^c010074a:	e8 aa fc ff ff       	call   c01003f9 <stab_binsearch>$/;"	l
c010074f	obj/kernel.asm	/^c010074f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0100752	obj/kernel.asm	/^c0100752:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100755	obj/kernel.asm	/^c0100755:	39 c2                	cmp    %eax,%edx$/;"	l
c0100757	obj/kernel.asm	/^c0100757:	7f 7c                	jg     c01007d5 <debuginfo_eip+0x286>$/;"	l
c0100759	obj/kernel.asm	/^c0100759:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010075c	obj/kernel.asm	/^c010075c:	89 c2                	mov    %eax,%edx$/;"	l
c010075e	obj/kernel.asm	/^c010075e:	89 d0                	mov    %edx,%eax$/;"	l
c0100760	obj/kernel.asm	/^c0100760:	01 c0                	add    %eax,%eax$/;"	l
c0100762	obj/kernel.asm	/^c0100762:	01 d0                	add    %edx,%eax$/;"	l
c0100764	obj/kernel.asm	/^c0100764:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100767	obj/kernel.asm	/^c0100767:	89 c2                	mov    %eax,%edx$/;"	l
c0100769	obj/kernel.asm	/^c0100769:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010076c	obj/kernel.asm	/^c010076c:	01 d0                	add    %edx,%eax$/;"	l
c010076e	obj/kernel.asm	/^c010076e:	8b 10                	mov    (%eax),%edx$/;"	l
c0100770	obj/kernel.asm	/^c0100770:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0100773	obj/kernel.asm	/^c0100773:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100776	obj/kernel.asm	/^c0100776:	29 c1                	sub    %eax,%ecx$/;"	l
c0100778	obj/kernel.asm	/^c0100778:	89 c8                	mov    %ecx,%eax$/;"	l
c010077a	obj/kernel.asm	/^c010077a:	39 c2                	cmp    %eax,%edx$/;"	l
c010077c	obj/kernel.asm	/^c010077c:	73 22                	jae    c01007a0 <debuginfo_eip+0x251>$/;"	l
c010077e	obj/kernel.asm	/^c010077e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100781	obj/kernel.asm	/^c0100781:	89 c2                	mov    %eax,%edx$/;"	l
c0100783	obj/kernel.asm	/^c0100783:	89 d0                	mov    %edx,%eax$/;"	l
c0100785	obj/kernel.asm	/^c0100785:	01 c0                	add    %eax,%eax$/;"	l
c0100787	obj/kernel.asm	/^c0100787:	01 d0                	add    %edx,%eax$/;"	l
c0100789	obj/kernel.asm	/^c0100789:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010078c	obj/kernel.asm	/^c010078c:	89 c2                	mov    %eax,%edx$/;"	l
c010078e	obj/kernel.asm	/^c010078e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100791	obj/kernel.asm	/^c0100791:	01 d0                	add    %edx,%eax$/;"	l
c0100793	obj/kernel.asm	/^c0100793:	8b 10                	mov    (%eax),%edx$/;"	l
c0100795	obj/kernel.asm	/^c0100795:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100798	obj/kernel.asm	/^c0100798:	01 c2                	add    %eax,%edx$/;"	l
c010079a	obj/kernel.asm	/^c010079a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010079d	obj/kernel.asm	/^c010079d:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01007a0	obj/kernel.asm	/^c01007a0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007a3	obj/kernel.asm	/^c01007a3:	89 c2                	mov    %eax,%edx$/;"	l
c01007a5	obj/kernel.asm	/^c01007a5:	89 d0                	mov    %edx,%eax$/;"	l
c01007a7	obj/kernel.asm	/^c01007a7:	01 c0                	add    %eax,%eax$/;"	l
c01007a9	obj/kernel.asm	/^c01007a9:	01 d0                	add    %edx,%eax$/;"	l
c01007ab	obj/kernel.asm	/^c01007ab:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01007ae	obj/kernel.asm	/^c01007ae:	89 c2                	mov    %eax,%edx$/;"	l
c01007b0	obj/kernel.asm	/^c01007b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007b3	obj/kernel.asm	/^c01007b3:	01 d0                	add    %edx,%eax$/;"	l
c01007b5	obj/kernel.asm	/^c01007b5:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01007b8	obj/kernel.asm	/^c01007b8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007bb	obj/kernel.asm	/^c01007bb:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01007be	obj/kernel.asm	/^c01007be:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007c1	obj/kernel.asm	/^c01007c1:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01007c4	obj/kernel.asm	/^c01007c4:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c01007c7	obj/kernel.asm	/^c01007c7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007ca	obj/kernel.asm	/^c01007ca:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01007cd	obj/kernel.asm	/^c01007cd:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01007d0	obj/kernel.asm	/^c01007d0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01007d3	obj/kernel.asm	/^c01007d3:	eb 15                	jmp    c01007ea <debuginfo_eip+0x29b>$/;"	l
c01007d5	obj/kernel.asm	/^c01007d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007d8	obj/kernel.asm	/^c01007d8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01007db	obj/kernel.asm	/^c01007db:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01007de	obj/kernel.asm	/^c01007de:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01007e1	obj/kernel.asm	/^c01007e1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01007e4	obj/kernel.asm	/^c01007e4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01007e7	obj/kernel.asm	/^c01007e7:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01007ea	obj/kernel.asm	/^c01007ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007ed	obj/kernel.asm	/^c01007ed:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01007f0	obj/kernel.asm	/^c01007f0:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c01007f7	obj/kernel.asm	/^c01007f7:	00 $/;"	l
c01007f8	obj/kernel.asm	/^c01007f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01007fb	obj/kernel.asm	/^c01007fb:	e8 0d b9 00 00       	call   c010c10d <strfind>$/;"	l
c0100800	obj/kernel.asm	/^c0100800:	89 c2                	mov    %eax,%edx$/;"	l
c0100802	obj/kernel.asm	/^c0100802:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100805	obj/kernel.asm	/^c0100805:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100808	obj/kernel.asm	/^c0100808:	29 c2                	sub    %eax,%edx$/;"	l
c010080a	obj/kernel.asm	/^c010080a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010080d	obj/kernel.asm	/^c010080d:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0100810	obj/kernel.asm	/^c0100810:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100813	obj/kernel.asm	/^c0100813:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0100817	obj/kernel.asm	/^c0100817:	c7 44 24 0c 44 00 00 	movl   $0x44,0xc(%esp)$/;"	l
c010081e	obj/kernel.asm	/^c010081e:	00 $/;"	l
c010081f	obj/kernel.asm	/^c010081f:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c0100822	obj/kernel.asm	/^c0100822:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100826	obj/kernel.asm	/^c0100826:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0100829	obj/kernel.asm	/^c0100829:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010082d	obj/kernel.asm	/^c010082d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100830	obj/kernel.asm	/^c0100830:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100833	obj/kernel.asm	/^c0100833:	e8 c1 fb ff ff       	call   c01003f9 <stab_binsearch>$/;"	l
c0100838	obj/kernel.asm	/^c0100838:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010083b	obj/kernel.asm	/^c010083b:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010083e	obj/kernel.asm	/^c010083e:	39 c2                	cmp    %eax,%edx$/;"	l
c0100840	obj/kernel.asm	/^c0100840:	7f 24                	jg     c0100866 <debuginfo_eip+0x317>$/;"	l
c0100842	obj/kernel.asm	/^c0100842:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100845	obj/kernel.asm	/^c0100845:	89 c2                	mov    %eax,%edx$/;"	l
c0100847	obj/kernel.asm	/^c0100847:	89 d0                	mov    %edx,%eax$/;"	l
c0100849	obj/kernel.asm	/^c0100849:	01 c0                	add    %eax,%eax$/;"	l
c010084b	obj/kernel.asm	/^c010084b:	01 d0                	add    %edx,%eax$/;"	l
c010084d	obj/kernel.asm	/^c010084d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100850	obj/kernel.asm	/^c0100850:	89 c2                	mov    %eax,%edx$/;"	l
c0100852	obj/kernel.asm	/^c0100852:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100855	obj/kernel.asm	/^c0100855:	01 d0                	add    %edx,%eax$/;"	l
c0100857	obj/kernel.asm	/^c0100857:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c010085b	obj/kernel.asm	/^c010085b:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010085e	obj/kernel.asm	/^c010085e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100861	obj/kernel.asm	/^c0100861:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0100864	obj/kernel.asm	/^c0100864:	eb 13                	jmp    c0100879 <debuginfo_eip+0x32a>$/;"	l
c0100866	obj/kernel.asm	/^c0100866:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010086b	obj/kernel.asm	/^c010086b:	e9 12 01 00 00       	jmp    c0100982 <debuginfo_eip+0x433>$/;"	l
c0100870	obj/kernel.asm	/^c0100870:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100873	obj/kernel.asm	/^c0100873:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100876	obj/kernel.asm	/^c0100876:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100879	obj/kernel.asm	/^c0100879:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010087c	obj/kernel.asm	/^c010087c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010087f	obj/kernel.asm	/^c010087f:	39 c2                	cmp    %eax,%edx$/;"	l
c0100881	obj/kernel.asm	/^c0100881:	7c 56                	jl     c01008d9 <debuginfo_eip+0x38a>$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100886	obj/kernel.asm	/^c0100886:	89 c2                	mov    %eax,%edx$/;"	l
c0100888	obj/kernel.asm	/^c0100888:	89 d0                	mov    %edx,%eax$/;"	l
c010088a	obj/kernel.asm	/^c010088a:	01 c0                	add    %eax,%eax$/;"	l
c010088c	obj/kernel.asm	/^c010088c:	01 d0                	add    %edx,%eax$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100891	obj/kernel.asm	/^c0100891:	89 c2                	mov    %eax,%edx$/;"	l
c0100893	obj/kernel.asm	/^c0100893:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100896	obj/kernel.asm	/^c0100896:	01 d0                	add    %edx,%eax$/;"	l
c0100898	obj/kernel.asm	/^c0100898:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010089c	obj/kernel.asm	/^c010089c:	3c 84                	cmp    $0x84,%al$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	74 39                	je     c01008d9 <debuginfo_eip+0x38a>$/;"	l
c01008a0	obj/kernel.asm	/^c01008a0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008a3	obj/kernel.asm	/^c01008a3:	89 c2                	mov    %eax,%edx$/;"	l
c01008a5	obj/kernel.asm	/^c01008a5:	89 d0                	mov    %edx,%eax$/;"	l
c01008a7	obj/kernel.asm	/^c01008a7:	01 c0                	add    %eax,%eax$/;"	l
c01008a9	obj/kernel.asm	/^c01008a9:	01 d0                	add    %edx,%eax$/;"	l
c01008ab	obj/kernel.asm	/^c01008ab:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008ae	obj/kernel.asm	/^c01008ae:	89 c2                	mov    %eax,%edx$/;"	l
c01008b0	obj/kernel.asm	/^c01008b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008b3	obj/kernel.asm	/^c01008b3:	01 d0                	add    %edx,%eax$/;"	l
c01008b5	obj/kernel.asm	/^c01008b5:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01008b9	obj/kernel.asm	/^c01008b9:	3c 64                	cmp    $0x64,%al$/;"	l
c01008bb	obj/kernel.asm	/^c01008bb:	75 b3                	jne    c0100870 <debuginfo_eip+0x321>$/;"	l
c01008bd	obj/kernel.asm	/^c01008bd:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008c0	obj/kernel.asm	/^c01008c0:	89 c2                	mov    %eax,%edx$/;"	l
c01008c2	obj/kernel.asm	/^c01008c2:	89 d0                	mov    %edx,%eax$/;"	l
c01008c4	obj/kernel.asm	/^c01008c4:	01 c0                	add    %eax,%eax$/;"	l
c01008c6	obj/kernel.asm	/^c01008c6:	01 d0                	add    %edx,%eax$/;"	l
c01008c8	obj/kernel.asm	/^c01008c8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008cb	obj/kernel.asm	/^c01008cb:	89 c2                	mov    %eax,%edx$/;"	l
c01008cd	obj/kernel.asm	/^c01008cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008d0	obj/kernel.asm	/^c01008d0:	01 d0                	add    %edx,%eax$/;"	l
c01008d2	obj/kernel.asm	/^c01008d2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01008d5	obj/kernel.asm	/^c01008d5:	85 c0                	test   %eax,%eax$/;"	l
c01008d7	obj/kernel.asm	/^c01008d7:	74 97                	je     c0100870 <debuginfo_eip+0x321>$/;"	l
c01008d9	obj/kernel.asm	/^c01008d9:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01008dc	obj/kernel.asm	/^c01008dc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01008df	obj/kernel.asm	/^c01008df:	39 c2                	cmp    %eax,%edx$/;"	l
c01008e1	obj/kernel.asm	/^c01008e1:	7c 46                	jl     c0100929 <debuginfo_eip+0x3da>$/;"	l
c01008e3	obj/kernel.asm	/^c01008e3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008e6	obj/kernel.asm	/^c01008e6:	89 c2                	mov    %eax,%edx$/;"	l
c01008e8	obj/kernel.asm	/^c01008e8:	89 d0                	mov    %edx,%eax$/;"	l
c01008ea	obj/kernel.asm	/^c01008ea:	01 c0                	add    %eax,%eax$/;"	l
c01008ec	obj/kernel.asm	/^c01008ec:	01 d0                	add    %edx,%eax$/;"	l
c01008ee	obj/kernel.asm	/^c01008ee:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008f1	obj/kernel.asm	/^c01008f1:	89 c2                	mov    %eax,%edx$/;"	l
c01008f3	obj/kernel.asm	/^c01008f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008f6	obj/kernel.asm	/^c01008f6:	01 d0                	add    %edx,%eax$/;"	l
c01008f8	obj/kernel.asm	/^c01008f8:	8b 10                	mov    (%eax),%edx$/;"	l
c01008fa	obj/kernel.asm	/^c01008fa:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01008fd	obj/kernel.asm	/^c01008fd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100900	obj/kernel.asm	/^c0100900:	29 c1                	sub    %eax,%ecx$/;"	l
c0100902	obj/kernel.asm	/^c0100902:	89 c8                	mov    %ecx,%eax$/;"	l
c0100904	obj/kernel.asm	/^c0100904:	39 c2                	cmp    %eax,%edx$/;"	l
c0100906	obj/kernel.asm	/^c0100906:	73 21                	jae    c0100929 <debuginfo_eip+0x3da>$/;"	l
c0100908	obj/kernel.asm	/^c0100908:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010090b	obj/kernel.asm	/^c010090b:	89 c2                	mov    %eax,%edx$/;"	l
c010090d	obj/kernel.asm	/^c010090d:	89 d0                	mov    %edx,%eax$/;"	l
c010090f	obj/kernel.asm	/^c010090f:	01 c0                	add    %eax,%eax$/;"	l
c0100911	obj/kernel.asm	/^c0100911:	01 d0                	add    %edx,%eax$/;"	l
c0100913	obj/kernel.asm	/^c0100913:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100916	obj/kernel.asm	/^c0100916:	89 c2                	mov    %eax,%edx$/;"	l
c0100918	obj/kernel.asm	/^c0100918:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010091b	obj/kernel.asm	/^c010091b:	01 d0                	add    %edx,%eax$/;"	l
c010091d	obj/kernel.asm	/^c010091d:	8b 10                	mov    (%eax),%edx$/;"	l
c010091f	obj/kernel.asm	/^c010091f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100922	obj/kernel.asm	/^c0100922:	01 c2                	add    %eax,%edx$/;"	l
c0100924	obj/kernel.asm	/^c0100924:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100927	obj/kernel.asm	/^c0100927:	89 10                	mov    %edx,(%eax)$/;"	l
c0100929	obj/kernel.asm	/^c0100929:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010092c	obj/kernel.asm	/^c010092c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010092f	obj/kernel.asm	/^c010092f:	39 c2                	cmp    %eax,%edx$/;"	l
c0100931	obj/kernel.asm	/^c0100931:	7d 4a                	jge    c010097d <debuginfo_eip+0x42e>$/;"	l
c0100933	obj/kernel.asm	/^c0100933:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100936	obj/kernel.asm	/^c0100936:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010093c	obj/kernel.asm	/^c010093c:	eb 18                	jmp    c0100956 <debuginfo_eip+0x407>$/;"	l
c010093e	obj/kernel.asm	/^c010093e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100941	obj/kernel.asm	/^c0100941:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100944	obj/kernel.asm	/^c0100944:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100947	obj/kernel.asm	/^c0100947:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010094a	obj/kernel.asm	/^c010094a:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010094d	obj/kernel.asm	/^c010094d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100950	obj/kernel.asm	/^c0100950:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100953	obj/kernel.asm	/^c0100953:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100956	obj/kernel.asm	/^c0100956:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100959	obj/kernel.asm	/^c0100959:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010095c	obj/kernel.asm	/^c010095c:	39 c2                	cmp    %eax,%edx$/;"	l
c010095e	obj/kernel.asm	/^c010095e:	7d 1d                	jge    c010097d <debuginfo_eip+0x42e>$/;"	l
c0100960	obj/kernel.asm	/^c0100960:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100963	obj/kernel.asm	/^c0100963:	89 c2                	mov    %eax,%edx$/;"	l
c0100965	obj/kernel.asm	/^c0100965:	89 d0                	mov    %edx,%eax$/;"	l
c0100967	obj/kernel.asm	/^c0100967:	01 c0                	add    %eax,%eax$/;"	l
c0100969	obj/kernel.asm	/^c0100969:	01 d0                	add    %edx,%eax$/;"	l
c010096b	obj/kernel.asm	/^c010096b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010096e	obj/kernel.asm	/^c010096e:	89 c2                	mov    %eax,%edx$/;"	l
c0100970	obj/kernel.asm	/^c0100970:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100973	obj/kernel.asm	/^c0100973:	01 d0                	add    %edx,%eax$/;"	l
c0100975	obj/kernel.asm	/^c0100975:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100979	obj/kernel.asm	/^c0100979:	3c a0                	cmp    $0xa0,%al$/;"	l
c010097b	obj/kernel.asm	/^c010097b:	74 c1                	je     c010093e <debuginfo_eip+0x3ef>$/;"	l
c010097d	obj/kernel.asm	/^c010097d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100982	obj/kernel.asm	/^c0100982:	c9                   	leave  $/;"	l
c0100983	obj/kernel.asm	/^c0100983:	c3                   	ret    $/;"	l
c0100984	obj/kernel.asm	/^c0100984 <print_kerninfo>:$/;"	l
c0100984	obj/kernel.asm	/^c0100984:	55                   	push   %ebp$/;"	l
c0100985	obj/kernel.asm	/^c0100985:	89 e5                	mov    %esp,%ebp$/;"	l
c0100987	obj/kernel.asm	/^c0100987:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010098a	obj/kernel.asm	/^c010098a:	c7 04 24 f6 c4 10 c0 	movl   $0xc010c4f6,(%esp)$/;"	l
c0100991	obj/kernel.asm	/^c0100991:	e8 c2 f9 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100996	obj/kernel.asm	/^c0100996:	c7 44 24 04 2a 00 10 	movl   $0xc010002a,0x4(%esp)$/;"	l
c010099d	obj/kernel.asm	/^c010099d:	c0 $/;"	l
c010099e	obj/kernel.asm	/^c010099e:	c7 04 24 0f c5 10 c0 	movl   $0xc010c50f,(%esp)$/;"	l
c01009a5	obj/kernel.asm	/^c01009a5:	e8 ae f9 ff ff       	call   c0100358 <cprintf>$/;"	l
c01009aa	obj/kernel.asm	/^c01009aa:	c7 44 24 04 22 c4 10 	movl   $0xc010c422,0x4(%esp)$/;"	l
c01009b1	obj/kernel.asm	/^c01009b1:	c0 $/;"	l
c01009b2	obj/kernel.asm	/^c01009b2:	c7 04 24 27 c5 10 c0 	movl   $0xc010c527,(%esp)$/;"	l
c01009b9	obj/kernel.asm	/^c01009b9:	e8 9a f9 ff ff       	call   c0100358 <cprintf>$/;"	l
c01009be	obj/kernel.asm	/^c01009be:	c7 44 24 04 d4 ed 1a 	movl   $0xc01aedd4,0x4(%esp)$/;"	l
c01009c5	obj/kernel.asm	/^c01009c5:	c0 $/;"	l
c01009c6	obj/kernel.asm	/^c01009c6:	c7 04 24 3f c5 10 c0 	movl   $0xc010c53f,(%esp)$/;"	l
c01009cd	obj/kernel.asm	/^c01009cd:	e8 86 f9 ff ff       	call   c0100358 <cprintf>$/;"	l
c01009d2	obj/kernel.asm	/^c01009d2:	c7 44 24 04 78 1f 1b 	movl   $0xc01b1f78,0x4(%esp)$/;"	l
c01009d9	obj/kernel.asm	/^c01009d9:	c0 $/;"	l
c01009da	obj/kernel.asm	/^c01009da:	c7 04 24 57 c5 10 c0 	movl   $0xc010c557,(%esp)$/;"	l
c01009e1	obj/kernel.asm	/^c01009e1:	e8 72 f9 ff ff       	call   c0100358 <cprintf>$/;"	l
c01009e6	obj/kernel.asm	/^c01009e6:	b8 78 1f 1b c0       	mov    $0xc01b1f78,%eax$/;"	l
c01009eb	obj/kernel.asm	/^c01009eb:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c01009f1	obj/kernel.asm	/^c01009f1:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c01009f6	obj/kernel.asm	/^c01009f6:	29 c2                	sub    %eax,%edx$/;"	l
c01009f8	obj/kernel.asm	/^c01009f8:	89 d0                	mov    %edx,%eax$/;"	l
c01009fa	obj/kernel.asm	/^c01009fa:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100a00	obj/kernel.asm	/^c0100a00:	85 c0                	test   %eax,%eax$/;"	l
c0100a02	obj/kernel.asm	/^c0100a02:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100a05	obj/kernel.asm	/^c0100a05:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100a08	obj/kernel.asm	/^c0100a08:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100a0c	obj/kernel.asm	/^c0100a0c:	c7 04 24 70 c5 10 c0 	movl   $0xc010c570,(%esp)$/;"	l
c0100a13	obj/kernel.asm	/^c0100a13:	e8 40 f9 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100a18	obj/kernel.asm	/^c0100a18:	c9                   	leave  $/;"	l
c0100a19	obj/kernel.asm	/^c0100a19:	c3                   	ret    $/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a <print_debuginfo>:$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	55                   	push   %ebp$/;"	l
c0100a1b	obj/kernel.asm	/^c0100a1b:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a1d	obj/kernel.asm	/^c0100a1d:	81 ec 48 01 00 00    	sub    $0x148,%esp$/;"	l
c0100a23	obj/kernel.asm	/^c0100a23:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100a26	obj/kernel.asm	/^c0100a26:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100a2a	obj/kernel.asm	/^c0100a2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100a2d	obj/kernel.asm	/^c0100a2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100a30	obj/kernel.asm	/^c0100a30:	e8 1a fb ff ff       	call   c010054f <debuginfo_eip>$/;"	l
c0100a35	obj/kernel.asm	/^c0100a35:	85 c0                	test   %eax,%eax$/;"	l
c0100a37	obj/kernel.asm	/^c0100a37:	74 15                	je     c0100a4e <print_debuginfo+0x34>$/;"	l
c0100a39	obj/kernel.asm	/^c0100a39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100a3c	obj/kernel.asm	/^c0100a3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100a40	obj/kernel.asm	/^c0100a40:	c7 04 24 9a c5 10 c0 	movl   $0xc010c59a,(%esp)$/;"	l
c0100a47	obj/kernel.asm	/^c0100a47:	e8 0c f9 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100a4c	obj/kernel.asm	/^c0100a4c:	eb 6d                	jmp    c0100abb <print_debuginfo+0xa1>$/;"	l
c0100a4e	obj/kernel.asm	/^c0100a4e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100a55	obj/kernel.asm	/^c0100a55:	eb 1c                	jmp    c0100a73 <print_debuginfo+0x59>$/;"	l
c0100a57	obj/kernel.asm	/^c0100a57:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100a5a	obj/kernel.asm	/^c0100a5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a5d	obj/kernel.asm	/^c0100a5d:	01 d0                	add    %edx,%eax$/;"	l
c0100a5f	obj/kernel.asm	/^c0100a5f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100a62	obj/kernel.asm	/^c0100a62:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100a68	obj/kernel.asm	/^c0100a68:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100a6b	obj/kernel.asm	/^c0100a6b:	01 ca                	add    %ecx,%edx$/;"	l
c0100a6d	obj/kernel.asm	/^c0100a6d:	88 02                	mov    %al,(%edx)$/;"	l
c0100a6f	obj/kernel.asm	/^c0100a6f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100a73	obj/kernel.asm	/^c0100a73:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100a76	obj/kernel.asm	/^c0100a76:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100a79	obj/kernel.asm	/^c0100a79:	7f dc                	jg     c0100a57 <print_debuginfo+0x3d>$/;"	l
c0100a7b	obj/kernel.asm	/^c0100a7b:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100a81	obj/kernel.asm	/^c0100a81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a84	obj/kernel.asm	/^c0100a84:	01 d0                	add    %edx,%eax$/;"	l
c0100a86	obj/kernel.asm	/^c0100a86:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100a89	obj/kernel.asm	/^c0100a89:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a8c	obj/kernel.asm	/^c0100a8c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100a8f	obj/kernel.asm	/^c0100a8f:	89 d1                	mov    %edx,%ecx$/;"	l
c0100a91	obj/kernel.asm	/^c0100a91:	29 c1                	sub    %eax,%ecx$/;"	l
c0100a93	obj/kernel.asm	/^c0100a93:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100a96	obj/kernel.asm	/^c0100a96:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100a99	obj/kernel.asm	/^c0100a99:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0100a9d	obj/kernel.asm	/^c0100a9d:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100aa3	obj/kernel.asm	/^c0100aa3:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0100aa7	obj/kernel.asm	/^c0100aa7:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100aab	obj/kernel.asm	/^c0100aab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100aaf	obj/kernel.asm	/^c0100aaf:	c7 04 24 b6 c5 10 c0 	movl   $0xc010c5b6,(%esp)$/;"	l
c0100ab6	obj/kernel.asm	/^c0100ab6:	e8 9d f8 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100abb	obj/kernel.asm	/^c0100abb:	c9                   	leave  $/;"	l
c0100abc	obj/kernel.asm	/^c0100abc:	c3                   	ret    $/;"	l
c0100abd	obj/kernel.asm	/^c0100abd <read_eip>:$/;"	l
c0100abd	obj/kernel.asm	/^c0100abd:	55                   	push   %ebp$/;"	l
c0100abe	obj/kernel.asm	/^c0100abe:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ac0	obj/kernel.asm	/^c0100ac0:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100ac3	obj/kernel.asm	/^c0100ac3:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100ac6	obj/kernel.asm	/^c0100ac6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100ac9	obj/kernel.asm	/^c0100ac9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100acc	obj/kernel.asm	/^c0100acc:	c9                   	leave  $/;"	l
c0100acd	obj/kernel.asm	/^c0100acd:	c3                   	ret    $/;"	l
c0100ace	obj/kernel.asm	/^c0100ace <print_stackframe>:$/;"	l
c0100ace	obj/kernel.asm	/^c0100ace:	55                   	push   %ebp$/;"	l
c0100acf	obj/kernel.asm	/^c0100acf:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ad1	obj/kernel.asm	/^c0100ad1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100ad4	obj/kernel.asm	/^c0100ad4:	89 e8                	mov    %ebp,%eax$/;"	l
c0100ad6	obj/kernel.asm	/^c0100ad6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100ad9	obj/kernel.asm	/^c0100ad9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100adc	obj/kernel.asm	/^c0100adc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100adf	obj/kernel.asm	/^c0100adf:	e8 d9 ff ff ff       	call   c0100abd <read_eip>$/;"	l
c0100ae4	obj/kernel.asm	/^c0100ae4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100ae7	obj/kernel.asm	/^c0100ae7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0100aee	obj/kernel.asm	/^c0100aee:	e9 88 00 00 00       	jmp    c0100b7b <print_stackframe+0xad>$/;"	l
c0100af3	obj/kernel.asm	/^c0100af3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100af6	obj/kernel.asm	/^c0100af6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100afa	obj/kernel.asm	/^c0100afa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100afd	obj/kernel.asm	/^c0100afd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b01	obj/kernel.asm	/^c0100b01:	c7 04 24 c8 c5 10 c0 	movl   $0xc010c5c8,(%esp)$/;"	l
c0100b08	obj/kernel.asm	/^c0100b08:	e8 4b f8 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100b0d	obj/kernel.asm	/^c0100b0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b10	obj/kernel.asm	/^c0100b10:	83 c0 08             	add    $0x8,%eax$/;"	l
c0100b13	obj/kernel.asm	/^c0100b13:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100b16	obj/kernel.asm	/^c0100b16:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0100b1d	obj/kernel.asm	/^c0100b1d:	eb 25                	jmp    c0100b44 <print_stackframe+0x76>$/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100b22	obj/kernel.asm	/^c0100b22:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100b29	obj/kernel.asm	/^c0100b29:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100b2c	obj/kernel.asm	/^c0100b2c:	01 d0                	add    %edx,%eax$/;"	l
c0100b2e	obj/kernel.asm	/^c0100b2e:	8b 00                	mov    (%eax),%eax$/;"	l
c0100b30	obj/kernel.asm	/^c0100b30:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b34	obj/kernel.asm	/^c0100b34:	c7 04 24 e6 c5 10 c0 	movl   $0xc010c5e6,(%esp)$/;"	l
c0100b3b	obj/kernel.asm	/^c0100b3b:	e8 18 f8 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100b40	obj/kernel.asm	/^c0100b40:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
c0100b44	obj/kernel.asm	/^c0100b44:	83 7d e8 03          	cmpl   $0x3,-0x18(%ebp)$/;"	l
c0100b48	obj/kernel.asm	/^c0100b48:	7e d5                	jle    c0100b1f <print_stackframe+0x51>$/;"	l
c0100b4a	obj/kernel.asm	/^c0100b4a:	c7 04 24 ee c5 10 c0 	movl   $0xc010c5ee,(%esp)$/;"	l
c0100b51	obj/kernel.asm	/^c0100b51:	e8 02 f8 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100b56	obj/kernel.asm	/^c0100b56:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100b59	obj/kernel.asm	/^c0100b59:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100b5c	obj/kernel.asm	/^c0100b5c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100b5f	obj/kernel.asm	/^c0100b5f:	e8 b6 fe ff ff       	call   c0100a1a <print_debuginfo>$/;"	l
c0100b64	obj/kernel.asm	/^c0100b64:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b67	obj/kernel.asm	/^c0100b67:	83 c0 10             	add    $0x10,%eax$/;"	l
c0100b6a	obj/kernel.asm	/^c0100b6a:	8b 00                	mov    (%eax),%eax$/;"	l
c0100b6c	obj/kernel.asm	/^c0100b6c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100b6f	obj/kernel.asm	/^c0100b6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b72	obj/kernel.asm	/^c0100b72:	8b 00                	mov    (%eax),%eax$/;"	l
c0100b74	obj/kernel.asm	/^c0100b74:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100b77	obj/kernel.asm	/^c0100b77:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0100b7b	obj/kernel.asm	/^c0100b7b:	83 7d ec 13          	cmpl   $0x13,-0x14(%ebp)$/;"	l
c0100b7f	obj/kernel.asm	/^c0100b7f:	7f 0a                	jg     c0100b8b <print_stackframe+0xbd>$/;"	l
c0100b81	obj/kernel.asm	/^c0100b81:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100b85	obj/kernel.asm	/^c0100b85:	0f 85 68 ff ff ff    	jne    c0100af3 <print_stackframe+0x25>$/;"	l
c0100b8b	obj/kernel.asm	/^c0100b8b:	c9                   	leave  $/;"	l
c0100b8c	obj/kernel.asm	/^c0100b8c:	c3                   	ret    $/;"	l
c0100b8d	obj/kernel.asm	/^c0100b8d <parse>:$/;"	l
c0100b8d	obj/kernel.asm	/^c0100b8d:	55                   	push   %ebp$/;"	l
c0100b8e	obj/kernel.asm	/^c0100b8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b90	obj/kernel.asm	/^c0100b90:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100b93	obj/kernel.asm	/^c0100b93:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b9a	obj/kernel.asm	/^c0100b9a:	eb 0c                	jmp    c0100ba8 <parse+0x1b>$/;"	l
c0100b9c	obj/kernel.asm	/^c0100b9c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b9f	obj/kernel.asm	/^c0100b9f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100ba2	obj/kernel.asm	/^c0100ba2:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100ba5	obj/kernel.asm	/^c0100ba5:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100ba8	obj/kernel.asm	/^c0100ba8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bab	obj/kernel.asm	/^c0100bab:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bae	obj/kernel.asm	/^c0100bae:	84 c0                	test   %al,%al$/;"	l
c0100bb0	obj/kernel.asm	/^c0100bb0:	74 1d                	je     c0100bcf <parse+0x42>$/;"	l
c0100bb2	obj/kernel.asm	/^c0100bb2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bb5	obj/kernel.asm	/^c0100bb5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bb8	obj/kernel.asm	/^c0100bb8:	0f be c0             	movsbl %al,%eax$/;"	l
c0100bbb	obj/kernel.asm	/^c0100bbb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100bbf	obj/kernel.asm	/^c0100bbf:	c7 04 24 70 c6 10 c0 	movl   $0xc010c670,(%esp)$/;"	l
c0100bc6	obj/kernel.asm	/^c0100bc6:	e8 0f b5 00 00       	call   c010c0da <strchr>$/;"	l
c0100bcb	obj/kernel.asm	/^c0100bcb:	85 c0                	test   %eax,%eax$/;"	l
c0100bcd	obj/kernel.asm	/^c0100bcd:	75 cd                	jne    c0100b9c <parse+0xf>$/;"	l
c0100bcf	obj/kernel.asm	/^c0100bcf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bd2	obj/kernel.asm	/^c0100bd2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bd5	obj/kernel.asm	/^c0100bd5:	84 c0                	test   %al,%al$/;"	l
c0100bd7	obj/kernel.asm	/^c0100bd7:	75 02                	jne    c0100bdb <parse+0x4e>$/;"	l
c0100bd9	obj/kernel.asm	/^c0100bd9:	eb 67                	jmp    c0100c42 <parse+0xb5>$/;"	l
c0100bdb	obj/kernel.asm	/^c0100bdb:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100bdf	obj/kernel.asm	/^c0100bdf:	75 14                	jne    c0100bf5 <parse+0x68>$/;"	l
c0100be1	obj/kernel.asm	/^c0100be1:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0100be8	obj/kernel.asm	/^c0100be8:	00 $/;"	l
c0100be9	obj/kernel.asm	/^c0100be9:	c7 04 24 75 c6 10 c0 	movl   $0xc010c675,(%esp)$/;"	l
c0100bf0	obj/kernel.asm	/^c0100bf0:	e8 63 f7 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100bf5	obj/kernel.asm	/^c0100bf5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bf8	obj/kernel.asm	/^c0100bf8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100bfb	obj/kernel.asm	/^c0100bfb:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100c05	obj/kernel.asm	/^c0100c05:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100c08	obj/kernel.asm	/^c0100c08:	01 c2                	add    %eax,%edx$/;"	l
c0100c0a	obj/kernel.asm	/^c0100c0a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c0d	obj/kernel.asm	/^c0100c0d:	89 02                	mov    %eax,(%edx)$/;"	l
c0100c0f	obj/kernel.asm	/^c0100c0f:	eb 04                	jmp    c0100c15 <parse+0x88>$/;"	l
c0100c11	obj/kernel.asm	/^c0100c11:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100c15	obj/kernel.asm	/^c0100c15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c18	obj/kernel.asm	/^c0100c18:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c1b	obj/kernel.asm	/^c0100c1b:	84 c0                	test   %al,%al$/;"	l
c0100c1d	obj/kernel.asm	/^c0100c1d:	74 1d                	je     c0100c3c <parse+0xaf>$/;"	l
c0100c1f	obj/kernel.asm	/^c0100c1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c22	obj/kernel.asm	/^c0100c22:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c25	obj/kernel.asm	/^c0100c25:	0f be c0             	movsbl %al,%eax$/;"	l
c0100c28	obj/kernel.asm	/^c0100c28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100c2c	obj/kernel.asm	/^c0100c2c:	c7 04 24 70 c6 10 c0 	movl   $0xc010c670,(%esp)$/;"	l
c0100c33	obj/kernel.asm	/^c0100c33:	e8 a2 b4 00 00       	call   c010c0da <strchr>$/;"	l
c0100c38	obj/kernel.asm	/^c0100c38:	85 c0                	test   %eax,%eax$/;"	l
c0100c3a	obj/kernel.asm	/^c0100c3a:	74 d5                	je     c0100c11 <parse+0x84>$/;"	l
c0100c3c	obj/kernel.asm	/^c0100c3c:	90                   	nop$/;"	l
c0100c3d	obj/kernel.asm	/^c0100c3d:	e9 66 ff ff ff       	jmp    c0100ba8 <parse+0x1b>$/;"	l
c0100c42	obj/kernel.asm	/^c0100c42:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c45	obj/kernel.asm	/^c0100c45:	c9                   	leave  $/;"	l
c0100c46	obj/kernel.asm	/^c0100c46:	c3                   	ret    $/;"	l
c0100c47	obj/kernel.asm	/^c0100c47 <runcmd>:$/;"	l
c0100c47	obj/kernel.asm	/^c0100c47:	55                   	push   %ebp$/;"	l
c0100c48	obj/kernel.asm	/^c0100c48:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c4a	obj/kernel.asm	/^c0100c4a:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0100c4d	obj/kernel.asm	/^c0100c4d:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100c50	obj/kernel.asm	/^c0100c50:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100c54	obj/kernel.asm	/^c0100c54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c57	obj/kernel.asm	/^c0100c57:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100c5a	obj/kernel.asm	/^c0100c5a:	e8 2e ff ff ff       	call   c0100b8d <parse>$/;"	l
c0100c5f	obj/kernel.asm	/^c0100c5f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100c62	obj/kernel.asm	/^c0100c62:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100c66	obj/kernel.asm	/^c0100c66:	75 0a                	jne    c0100c72 <runcmd+0x2b>$/;"	l
c0100c68	obj/kernel.asm	/^c0100c68:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100c6d	obj/kernel.asm	/^c0100c6d:	e9 85 00 00 00       	jmp    c0100cf7 <runcmd+0xb0>$/;"	l
c0100c72	obj/kernel.asm	/^c0100c72:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c79	obj/kernel.asm	/^c0100c79:	eb 5c                	jmp    c0100cd7 <runcmd+0x90>$/;"	l
c0100c7b	obj/kernel.asm	/^c0100c7b:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100c7e	obj/kernel.asm	/^c0100c7e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c81	obj/kernel.asm	/^c0100c81:	89 d0                	mov    %edx,%eax$/;"	l
c0100c83	obj/kernel.asm	/^c0100c83:	01 c0                	add    %eax,%eax$/;"	l
c0100c85	obj/kernel.asm	/^c0100c85:	01 d0                	add    %edx,%eax$/;"	l
c0100c87	obj/kernel.asm	/^c0100c87:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100c8a	obj/kernel.asm	/^c0100c8a:	05 20 d0 12 c0       	add    $0xc012d020,%eax$/;"	l
c0100c8f	obj/kernel.asm	/^c0100c8f:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c91	obj/kernel.asm	/^c0100c91:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0100c95	obj/kernel.asm	/^c0100c95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100c98	obj/kernel.asm	/^c0100c98:	e8 9e b3 00 00       	call   c010c03b <strcmp>$/;"	l
c0100c9d	obj/kernel.asm	/^c0100c9d:	85 c0                	test   %eax,%eax$/;"	l
c0100c9f	obj/kernel.asm	/^c0100c9f:	75 32                	jne    c0100cd3 <runcmd+0x8c>$/;"	l
c0100ca1	obj/kernel.asm	/^c0100ca1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100ca4	obj/kernel.asm	/^c0100ca4:	89 d0                	mov    %edx,%eax$/;"	l
c0100ca6	obj/kernel.asm	/^c0100ca6:	01 c0                	add    %eax,%eax$/;"	l
c0100ca8	obj/kernel.asm	/^c0100ca8:	01 d0                	add    %edx,%eax$/;"	l
c0100caa	obj/kernel.asm	/^c0100caa:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100cad	obj/kernel.asm	/^c0100cad:	05 20 d0 12 c0       	add    $0xc012d020,%eax$/;"	l
c0100cb2	obj/kernel.asm	/^c0100cb2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100cb5	obj/kernel.asm	/^c0100cb5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100cb8	obj/kernel.asm	/^c0100cb8:	8d 4a ff             	lea    -0x1(%edx),%ecx$/;"	l
c0100cbb	obj/kernel.asm	/^c0100cbb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0100cbe	obj/kernel.asm	/^c0100cbe:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100cc2	obj/kernel.asm	/^c0100cc2:	8d 55 b0             	lea    -0x50(%ebp),%edx$/;"	l
c0100cc5	obj/kernel.asm	/^c0100cc5:	83 c2 04             	add    $0x4,%edx$/;"	l
c0100cc8	obj/kernel.asm	/^c0100cc8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0100ccc	obj/kernel.asm	/^c0100ccc:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
c0100ccf	obj/kernel.asm	/^c0100ccf:	ff d0                	call   *%eax$/;"	l
c0100cd1	obj/kernel.asm	/^c0100cd1:	eb 24                	jmp    c0100cf7 <runcmd+0xb0>$/;"	l
c0100cd3	obj/kernel.asm	/^c0100cd3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100cd7	obj/kernel.asm	/^c0100cd7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100cda	obj/kernel.asm	/^c0100cda:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100cdd	obj/kernel.asm	/^c0100cdd:	76 9c                	jbe    c0100c7b <runcmd+0x34>$/;"	l
c0100cdf	obj/kernel.asm	/^c0100cdf:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100ce2	obj/kernel.asm	/^c0100ce2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100ce6	obj/kernel.asm	/^c0100ce6:	c7 04 24 93 c6 10 c0 	movl   $0xc010c693,(%esp)$/;"	l
c0100ced	obj/kernel.asm	/^c0100ced:	e8 66 f6 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100cf2	obj/kernel.asm	/^c0100cf2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100cf7	obj/kernel.asm	/^c0100cf7:	c9                   	leave  $/;"	l
c0100cf8	obj/kernel.asm	/^c0100cf8:	c3                   	ret    $/;"	l
c0100cf9	obj/kernel.asm	/^c0100cf9 <kmonitor>:$/;"	l
c0100cf9	obj/kernel.asm	/^c0100cf9:	55                   	push   %ebp$/;"	l
c0100cfa	obj/kernel.asm	/^c0100cfa:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cfc	obj/kernel.asm	/^c0100cfc:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100cff	obj/kernel.asm	/^c0100cff:	c7 04 24 ac c6 10 c0 	movl   $0xc010c6ac,(%esp)$/;"	l
c0100d06	obj/kernel.asm	/^c0100d06:	e8 4d f6 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100d0b	obj/kernel.asm	/^c0100d0b:	c7 04 24 d4 c6 10 c0 	movl   $0xc010c6d4,(%esp)$/;"	l
c0100d12	obj/kernel.asm	/^c0100d12:	e8 41 f6 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100d17	obj/kernel.asm	/^c0100d17:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100d1b	obj/kernel.asm	/^c0100d1b:	74 0b                	je     c0100d28 <kmonitor+0x2f>$/;"	l
c0100d1d	obj/kernel.asm	/^c0100d1d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d20	obj/kernel.asm	/^c0100d20:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100d23	obj/kernel.asm	/^c0100d23:	e8 c8 16 00 00       	call   c01023f0 <print_trapframe>$/;"	l
c0100d28	obj/kernel.asm	/^c0100d28:	c7 04 24 f9 c6 10 c0 	movl   $0xc010c6f9,(%esp)$/;"	l
c0100d2f	obj/kernel.asm	/^c0100d2f:	e8 1b f5 ff ff       	call   c010024f <readline>$/;"	l
c0100d34	obj/kernel.asm	/^c0100d34:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100d37	obj/kernel.asm	/^c0100d37:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100d3b	obj/kernel.asm	/^c0100d3b:	74 18                	je     c0100d55 <kmonitor+0x5c>$/;"	l
c0100d3d	obj/kernel.asm	/^c0100d3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d40	obj/kernel.asm	/^c0100d40:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100d44	obj/kernel.asm	/^c0100d44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d47	obj/kernel.asm	/^c0100d47:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100d4a	obj/kernel.asm	/^c0100d4a:	e8 f8 fe ff ff       	call   c0100c47 <runcmd>$/;"	l
c0100d4f	obj/kernel.asm	/^c0100d4f:	85 c0                	test   %eax,%eax$/;"	l
c0100d51	obj/kernel.asm	/^c0100d51:	79 02                	jns    c0100d55 <kmonitor+0x5c>$/;"	l
c0100d53	obj/kernel.asm	/^c0100d53:	eb 02                	jmp    c0100d57 <kmonitor+0x5e>$/;"	l
c0100d55	obj/kernel.asm	/^c0100d55:	eb d1                	jmp    c0100d28 <kmonitor+0x2f>$/;"	l
c0100d57	obj/kernel.asm	/^c0100d57:	c9                   	leave  $/;"	l
c0100d58	obj/kernel.asm	/^c0100d58:	c3                   	ret    $/;"	l
c0100d59	obj/kernel.asm	/^c0100d59 <mon_help>:$/;"	l
c0100d59	obj/kernel.asm	/^c0100d59:	55                   	push   %ebp$/;"	l
c0100d5a	obj/kernel.asm	/^c0100d5a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d5c	obj/kernel.asm	/^c0100d5c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100d5f	obj/kernel.asm	/^c0100d5f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100d66	obj/kernel.asm	/^c0100d66:	eb 3f                	jmp    c0100da7 <mon_help+0x4e>$/;"	l
c0100d68	obj/kernel.asm	/^c0100d68:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d6b	obj/kernel.asm	/^c0100d6b:	89 d0                	mov    %edx,%eax$/;"	l
c0100d6d	obj/kernel.asm	/^c0100d6d:	01 c0                	add    %eax,%eax$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	01 d0                	add    %edx,%eax$/;"	l
c0100d71	obj/kernel.asm	/^c0100d71:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d74	obj/kernel.asm	/^c0100d74:	05 20 d0 12 c0       	add    $0xc012d020,%eax$/;"	l
c0100d79	obj/kernel.asm	/^c0100d79:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100d7c	obj/kernel.asm	/^c0100d7c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d7f	obj/kernel.asm	/^c0100d7f:	89 d0                	mov    %edx,%eax$/;"	l
c0100d81	obj/kernel.asm	/^c0100d81:	01 c0                	add    %eax,%eax$/;"	l
c0100d83	obj/kernel.asm	/^c0100d83:	01 d0                	add    %edx,%eax$/;"	l
c0100d85	obj/kernel.asm	/^c0100d85:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d88	obj/kernel.asm	/^c0100d88:	05 20 d0 12 c0       	add    $0xc012d020,%eax$/;"	l
c0100d8d	obj/kernel.asm	/^c0100d8d:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d8f	obj/kernel.asm	/^c0100d8f:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0100d93	obj/kernel.asm	/^c0100d93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100d97	obj/kernel.asm	/^c0100d97:	c7 04 24 fd c6 10 c0 	movl   $0xc010c6fd,(%esp)$/;"	l
c0100d9e	obj/kernel.asm	/^c0100d9e:	e8 b5 f5 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100da3	obj/kernel.asm	/^c0100da3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100da7	obj/kernel.asm	/^c0100da7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100daa	obj/kernel.asm	/^c0100daa:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100dad	obj/kernel.asm	/^c0100dad:	76 b9                	jbe    c0100d68 <mon_help+0xf>$/;"	l
c0100daf	obj/kernel.asm	/^c0100daf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100db4	obj/kernel.asm	/^c0100db4:	c9                   	leave  $/;"	l
c0100db5	obj/kernel.asm	/^c0100db5:	c3                   	ret    $/;"	l
c0100db6	obj/kernel.asm	/^c0100db6 <mon_kerninfo>:$/;"	l
c0100db6	obj/kernel.asm	/^c0100db6:	55                   	push   %ebp$/;"	l
c0100db7	obj/kernel.asm	/^c0100db7:	89 e5                	mov    %esp,%ebp$/;"	l
c0100db9	obj/kernel.asm	/^c0100db9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100dbc	obj/kernel.asm	/^c0100dbc:	e8 c3 fb ff ff       	call   c0100984 <print_kerninfo>$/;"	l
c0100dc1	obj/kernel.asm	/^c0100dc1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100dc6	obj/kernel.asm	/^c0100dc6:	c9                   	leave  $/;"	l
c0100dc7	obj/kernel.asm	/^c0100dc7:	c3                   	ret    $/;"	l
c0100dc8	obj/kernel.asm	/^c0100dc8 <mon_backtrace>:$/;"	l
c0100dc8	obj/kernel.asm	/^c0100dc8:	55                   	push   %ebp$/;"	l
c0100dc9	obj/kernel.asm	/^c0100dc9:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dcb	obj/kernel.asm	/^c0100dcb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100dce	obj/kernel.asm	/^c0100dce:	e8 fb fc ff ff       	call   c0100ace <print_stackframe>$/;"	l
c0100dd3	obj/kernel.asm	/^c0100dd3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100dd8	obj/kernel.asm	/^c0100dd8:	c9                   	leave  $/;"	l
c0100dd9	obj/kernel.asm	/^c0100dd9:	c3                   	ret    $/;"	l
c0100dda	obj/kernel.asm	/^c0100dda <__panic>:$/;"	l
c0100dda	obj/kernel.asm	/^c0100dda:	55                   	push   %ebp$/;"	l
c0100ddb	obj/kernel.asm	/^c0100ddb:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ddd	obj/kernel.asm	/^c0100ddd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100de0	obj/kernel.asm	/^c0100de0:	a1 00 f2 1a c0       	mov    0xc01af200,%eax$/;"	l
c0100de5	obj/kernel.asm	/^c0100de5:	85 c0                	test   %eax,%eax$/;"	l
c0100de7	obj/kernel.asm	/^c0100de7:	74 02                	je     c0100deb <__panic+0x11>$/;"	l
c0100de9	obj/kernel.asm	/^c0100de9:	eb 48                	jmp    c0100e33 <__panic+0x59>$/;"	l
c0100deb	obj/kernel.asm	/^c0100deb:	c7 05 00 f2 1a c0 01 	movl   $0x1,0xc01af200$/;"	l
c0100df2	obj/kernel.asm	/^c0100df2:	00 00 00 $/;"	l
c0100df5	obj/kernel.asm	/^c0100df5:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100df8	obj/kernel.asm	/^c0100df8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100dfb	obj/kernel.asm	/^c0100dfb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100dfe	obj/kernel.asm	/^c0100dfe:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100e02	obj/kernel.asm	/^c0100e02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e05	obj/kernel.asm	/^c0100e05:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e09	obj/kernel.asm	/^c0100e09:	c7 04 24 06 c7 10 c0 	movl   $0xc010c706,(%esp)$/;"	l
c0100e10	obj/kernel.asm	/^c0100e10:	e8 43 f5 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100e15	obj/kernel.asm	/^c0100e15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e18	obj/kernel.asm	/^c0100e18:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e1c	obj/kernel.asm	/^c0100e1c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100e1f	obj/kernel.asm	/^c0100e1f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	e8 fe f4 ff ff       	call   c0100325 <vcprintf>$/;"	l
c0100e27	obj/kernel.asm	/^c0100e27:	c7 04 24 22 c7 10 c0 	movl   $0xc010c722,(%esp)$/;"	l
c0100e2e	obj/kernel.asm	/^c0100e2e:	e8 25 f5 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100e33	obj/kernel.asm	/^c0100e33:	e8 fa 11 00 00       	call   c0102032 <intr_disable>$/;"	l
c0100e38	obj/kernel.asm	/^c0100e38:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100e3f	obj/kernel.asm	/^c0100e3f:	e8 b5 fe ff ff       	call   c0100cf9 <kmonitor>$/;"	l
c0100e44	obj/kernel.asm	/^c0100e44:	eb f2                	jmp    c0100e38 <__panic+0x5e>$/;"	l
c0100e46	obj/kernel.asm	/^c0100e46 <__warn>:$/;"	l
c0100e46	obj/kernel.asm	/^c0100e46:	55                   	push   %ebp$/;"	l
c0100e47	obj/kernel.asm	/^c0100e47:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e49	obj/kernel.asm	/^c0100e49:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100e4c	obj/kernel.asm	/^c0100e4c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100e4f	obj/kernel.asm	/^c0100e4f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100e52	obj/kernel.asm	/^c0100e52:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e55	obj/kernel.asm	/^c0100e55:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100e59	obj/kernel.asm	/^c0100e59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e5c	obj/kernel.asm	/^c0100e5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e60	obj/kernel.asm	/^c0100e60:	c7 04 24 24 c7 10 c0 	movl   $0xc010c724,(%esp)$/;"	l
c0100e67	obj/kernel.asm	/^c0100e67:	e8 ec f4 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100e6c	obj/kernel.asm	/^c0100e6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e6f	obj/kernel.asm	/^c0100e6f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e73	obj/kernel.asm	/^c0100e73:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100e76	obj/kernel.asm	/^c0100e76:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100e79	obj/kernel.asm	/^c0100e79:	e8 a7 f4 ff ff       	call   c0100325 <vcprintf>$/;"	l
c0100e7e	obj/kernel.asm	/^c0100e7e:	c7 04 24 22 c7 10 c0 	movl   $0xc010c722,(%esp)$/;"	l
c0100e85	obj/kernel.asm	/^c0100e85:	e8 ce f4 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100e8a	obj/kernel.asm	/^c0100e8a:	c9                   	leave  $/;"	l
c0100e8b	obj/kernel.asm	/^c0100e8b:	c3                   	ret    $/;"	l
c0100e8c	obj/kernel.asm	/^c0100e8c <is_kernel_panic>:$/;"	l
c0100e8c	obj/kernel.asm	/^c0100e8c:	55                   	push   %ebp$/;"	l
c0100e8d	obj/kernel.asm	/^c0100e8d:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e8f	obj/kernel.asm	/^c0100e8f:	a1 00 f2 1a c0       	mov    0xc01af200,%eax$/;"	l
c0100e94	obj/kernel.asm	/^c0100e94:	5d                   	pop    %ebp$/;"	l
c0100e95	obj/kernel.asm	/^c0100e95:	c3                   	ret    $/;"	l
c0100e96	obj/kernel.asm	/^c0100e96 <clock_init>:$/;"	l
c0100e96	obj/kernel.asm	/^c0100e96:	55                   	push   %ebp$/;"	l
c0100e97	obj/kernel.asm	/^c0100e97:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e99	obj/kernel.asm	/^c0100e99:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100e9c	obj/kernel.asm	/^c0100e9c:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c0100ea2	obj/kernel.asm	/^c0100ea2:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c0100ea6	obj/kernel.asm	/^c0100ea6:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0100eaa	obj/kernel.asm	/^c0100eaa:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0100eae	obj/kernel.asm	/^c0100eae:	ee                   	out    %al,(%dx)$/;"	l
c0100eaf	obj/kernel.asm	/^c0100eaf:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c0100eb5	obj/kernel.asm	/^c0100eb5:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c0100eb9	obj/kernel.asm	/^c0100eb9:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0100ebd	obj/kernel.asm	/^c0100ebd:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0100ec1	obj/kernel.asm	/^c0100ec1:	ee                   	out    %al,(%dx)$/;"	l
c0100ec2	obj/kernel.asm	/^c0100ec2:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c0100ecc	obj/kernel.asm	/^c0100ecc:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0100ed0	obj/kernel.asm	/^c0100ed0:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0100ed4	obj/kernel.asm	/^c0100ed4:	ee                   	out    %al,(%dx)$/;"	l
c0100ed5	obj/kernel.asm	/^c0100ed5:	c7 05 78 1e 1b c0 00 	movl   $0x0,0xc01b1e78$/;"	l
c0100edc	obj/kernel.asm	/^c0100edc:	00 00 00 $/;"	l
c0100edf	obj/kernel.asm	/^c0100edf:	c7 04 24 42 c7 10 c0 	movl   $0xc010c742,(%esp)$/;"	l
c0100ee6	obj/kernel.asm	/^c0100ee6:	e8 6d f4 ff ff       	call   c0100358 <cprintf>$/;"	l
c0100eeb	obj/kernel.asm	/^c0100eeb:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100ef2	obj/kernel.asm	/^c0100ef2:	e8 99 11 00 00       	call   c0102090 <pic_enable>$/;"	l
c0100ef7	obj/kernel.asm	/^c0100ef7:	c9                   	leave  $/;"	l
c0100ef8	obj/kernel.asm	/^c0100ef8:	c3                   	ret    $/;"	l
c0100ef9	obj/kernel.asm	/^c0100ef9 <__intr_save>:$/;"	l
c0100ef9	obj/kernel.asm	/^c0100ef9:	55                   	push   %ebp$/;"	l
c0100efa	obj/kernel.asm	/^c0100efa:	89 e5                	mov    %esp,%ebp$/;"	l
c0100efc	obj/kernel.asm	/^c0100efc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100eff	obj/kernel.asm	/^c0100eff:	9c                   	pushf  $/;"	l
c0100f00	obj/kernel.asm	/^c0100f00:	58                   	pop    %eax$/;"	l
c0100f01	obj/kernel.asm	/^c0100f01:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100f04	obj/kernel.asm	/^c0100f04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100f07	obj/kernel.asm	/^c0100f07:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0100f0c	obj/kernel.asm	/^c0100f0c:	85 c0                	test   %eax,%eax$/;"	l
c0100f0e	obj/kernel.asm	/^c0100f0e:	74 0c                	je     c0100f1c <__intr_save+0x23>$/;"	l
c0100f10	obj/kernel.asm	/^c0100f10:	e8 1d 11 00 00       	call   c0102032 <intr_disable>$/;"	l
c0100f15	obj/kernel.asm	/^c0100f15:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0100f1a	obj/kernel.asm	/^c0100f1a:	eb 05                	jmp    c0100f21 <__intr_save+0x28>$/;"	l
c0100f1c	obj/kernel.asm	/^c0100f1c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100f21	obj/kernel.asm	/^c0100f21:	c9                   	leave  $/;"	l
c0100f22	obj/kernel.asm	/^c0100f22:	c3                   	ret    $/;"	l
c0100f23	obj/kernel.asm	/^c0100f23 <__intr_restore>:$/;"	l
c0100f23	obj/kernel.asm	/^c0100f23:	55                   	push   %ebp$/;"	l
c0100f24	obj/kernel.asm	/^c0100f24:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f26	obj/kernel.asm	/^c0100f26:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100f29	obj/kernel.asm	/^c0100f29:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100f2d	obj/kernel.asm	/^c0100f2d:	74 05                	je     c0100f34 <__intr_restore+0x11>$/;"	l
c0100f2f	obj/kernel.asm	/^c0100f2f:	e8 f8 10 00 00       	call   c010202c <intr_enable>$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	c9                   	leave  $/;"	l
c0100f35	obj/kernel.asm	/^c0100f35:	c3                   	ret    $/;"	l
c0100f36	obj/kernel.asm	/^c0100f36 <delay>:$/;"	l
c0100f36	obj/kernel.asm	/^c0100f36:	55                   	push   %ebp$/;"	l
c0100f37	obj/kernel.asm	/^c0100f37:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f39	obj/kernel.asm	/^c0100f39:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100f3c	obj/kernel.asm	/^c0100f3c:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c0100f42	obj/kernel.asm	/^c0100f42:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c0100f46	obj/kernel.asm	/^c0100f46:	89 c2                	mov    %eax,%edx$/;"	l
c0100f48	obj/kernel.asm	/^c0100f48:	ec                   	in     (%dx),%al$/;"	l
c0100f49	obj/kernel.asm	/^c0100f49:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0100f4c	obj/kernel.asm	/^c0100f4c:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c0100f52	obj/kernel.asm	/^c0100f52:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0100f56	obj/kernel.asm	/^c0100f56:	89 c2                	mov    %eax,%edx$/;"	l
c0100f58	obj/kernel.asm	/^c0100f58:	ec                   	in     (%dx),%al$/;"	l
c0100f59	obj/kernel.asm	/^c0100f59:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0100f5c	obj/kernel.asm	/^c0100f5c:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c0100f62	obj/kernel.asm	/^c0100f62:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f66	obj/kernel.asm	/^c0100f66:	89 c2                	mov    %eax,%edx$/;"	l
c0100f68	obj/kernel.asm	/^c0100f68:	ec                   	in     (%dx),%al$/;"	l
c0100f69	obj/kernel.asm	/^c0100f69:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0100f6c	obj/kernel.asm	/^c0100f6c:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c0100f72	obj/kernel.asm	/^c0100f72:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0100f76	obj/kernel.asm	/^c0100f76:	89 c2                	mov    %eax,%edx$/;"	l
c0100f78	obj/kernel.asm	/^c0100f78:	ec                   	in     (%dx),%al$/;"	l
c0100f79	obj/kernel.asm	/^c0100f79:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0100f7c	obj/kernel.asm	/^c0100f7c:	c9                   	leave  $/;"	l
c0100f7d	obj/kernel.asm	/^c0100f7d:	c3                   	ret    $/;"	l
c0100f7e	obj/kernel.asm	/^c0100f7e <cga_init>:$/;"	l
c0100f7e	obj/kernel.asm	/^c0100f7e:	55                   	push   %ebp$/;"	l
c0100f7f	obj/kernel.asm	/^c0100f7f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f81	obj/kernel.asm	/^c0100f81:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0100f84	obj/kernel.asm	/^c0100f84:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c0100f8b	obj/kernel.asm	/^c0100f8b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100f8e	obj/kernel.asm	/^c0100f8e:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0100f91	obj/kernel.asm	/^c0100f91:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0100f95	obj/kernel.asm	/^c0100f95:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100f98	obj/kernel.asm	/^c0100f98:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c0100f9d	obj/kernel.asm	/^c0100f9d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100fa0	obj/kernel.asm	/^c0100fa0:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0100fa3	obj/kernel.asm	/^c0100fa3:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c0100fa7	obj/kernel.asm	/^c0100fa7:	74 12                	je     c0100fbb <cga_init+0x3d>$/;"	l
c0100fa9	obj/kernel.asm	/^c0100fa9:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c0100fb0	obj/kernel.asm	/^c0100fb0:	66 c7 05 26 f2 1a c0 	movw   $0x3b4,0xc01af226$/;"	l
c0100fb7	obj/kernel.asm	/^c0100fb7:	b4 03 $/;"	l
c0100fb9	obj/kernel.asm	/^c0100fb9:	eb 13                	jmp    c0100fce <cga_init+0x50>$/;"	l
c0100fbb	obj/kernel.asm	/^c0100fbb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100fbe	obj/kernel.asm	/^c0100fbe:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0100fc2	obj/kernel.asm	/^c0100fc2:	66 89 10             	mov    %dx,(%eax)$/;"	l
c0100fc5	obj/kernel.asm	/^c0100fc5:	66 c7 05 26 f2 1a c0 	movw   $0x3d4,0xc01af226$/;"	l
c0100fcc	obj/kernel.asm	/^c0100fcc:	d4 03 $/;"	d
c0100fce	obj/kernel.asm	/^c0100fce:	0f b7 05 26 f2 1a c0 	movzwl 0xc01af226,%eax$/;"	l
c0100fd5	obj/kernel.asm	/^c0100fd5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100fd8	obj/kernel.asm	/^c0100fd8:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0100fdc	obj/kernel.asm	/^c0100fdc:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0100fe0	obj/kernel.asm	/^c0100fe0:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0100fe4	obj/kernel.asm	/^c0100fe4:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0100fe8	obj/kernel.asm	/^c0100fe8:	ee                   	out    %al,(%dx)$/;"	l
c0100fe9	obj/kernel.asm	/^c0100fe9:	0f b7 05 26 f2 1a c0 	movzwl 0xc01af226,%eax$/;"	l
c0100ff0	obj/kernel.asm	/^c0100ff0:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100ff3	obj/kernel.asm	/^c0100ff3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100ff6	obj/kernel.asm	/^c0100ff6:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0100ffa	obj/kernel.asm	/^c0100ffa:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c0100ffe	obj/kernel.asm	/^c0100ffe:	89 c2                	mov    %eax,%edx$/;"	l
c0101000	obj/kernel.asm	/^c0101000:	ec                   	in     (%dx),%al$/;"	l
c0101001	obj/kernel.asm	/^c0101001:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101004	obj/kernel.asm	/^c0101004:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101008	obj/kernel.asm	/^c0101008:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010100b	obj/kernel.asm	/^c010100b:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c010100e	obj/kernel.asm	/^c010100e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101011	obj/kernel.asm	/^c0101011:	0f b7 05 26 f2 1a c0 	movzwl 0xc01af226,%eax$/;"	l
c0101018	obj/kernel.asm	/^c0101018:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010101b	obj/kernel.asm	/^c010101b:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c010101f	obj/kernel.asm	/^c010101f:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101023	obj/kernel.asm	/^c0101023:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101027	obj/kernel.asm	/^c0101027:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010102b	obj/kernel.asm	/^c010102b:	ee                   	out    %al,(%dx)$/;"	l
c010102c	obj/kernel.asm	/^c010102c:	0f b7 05 26 f2 1a c0 	movzwl 0xc01af226,%eax$/;"	l
c0101033	obj/kernel.asm	/^c0101033:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101036	obj/kernel.asm	/^c0101036:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101039	obj/kernel.asm	/^c0101039:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c010103d	obj/kernel.asm	/^c010103d:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c0101041	obj/kernel.asm	/^c0101041:	89 c2                	mov    %eax,%edx$/;"	l
c0101043	obj/kernel.asm	/^c0101043:	ec                   	in     (%dx),%al$/;"	l
c0101044	obj/kernel.asm	/^c0101044:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101047	obj/kernel.asm	/^c0101047:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010104b	obj/kernel.asm	/^c010104b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010104e	obj/kernel.asm	/^c010104e:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c0101051	obj/kernel.asm	/^c0101051:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101054	obj/kernel.asm	/^c0101054:	a3 20 f2 1a c0       	mov    %eax,0xc01af220$/;"	l
c0101059	obj/kernel.asm	/^c0101059:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010105c	obj/kernel.asm	/^c010105c:	66 a3 24 f2 1a c0    	mov    %ax,0xc01af224$/;"	l
c0101062	obj/kernel.asm	/^c0101062:	c9                   	leave  $/;"	l
c0101063	obj/kernel.asm	/^c0101063:	c3                   	ret    $/;"	l
c0101064	obj/kernel.asm	/^c0101064 <serial_init>:$/;"	l
c0101064	obj/kernel.asm	/^c0101064:	55                   	push   %ebp$/;"	l
c0101065	obj/kernel.asm	/^c0101065:	89 e5                	mov    %esp,%ebp$/;"	l
c0101067	obj/kernel.asm	/^c0101067:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010106a	obj/kernel.asm	/^c010106a:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c0101070	obj/kernel.asm	/^c0101070:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c0101074	obj/kernel.asm	/^c0101074:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101078	obj/kernel.asm	/^c0101078:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c010107c	obj/kernel.asm	/^c010107c:	ee                   	out    %al,(%dx)$/;"	l
c010107d	obj/kernel.asm	/^c010107d:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c0101083	obj/kernel.asm	/^c0101083:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c0101087	obj/kernel.asm	/^c0101087:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010108b	obj/kernel.asm	/^c010108b:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010108f	obj/kernel.asm	/^c010108f:	ee                   	out    %al,(%dx)$/;"	l
c0101090	obj/kernel.asm	/^c0101090:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c0101096	obj/kernel.asm	/^c0101096:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c010109a	obj/kernel.asm	/^c010109a:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010109e	obj/kernel.asm	/^c010109e:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01010a2	obj/kernel.asm	/^c01010a2:	ee                   	out    %al,(%dx)$/;"	l
c01010a3	obj/kernel.asm	/^c01010a3:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01010a9	obj/kernel.asm	/^c01010a9:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01010ad	obj/kernel.asm	/^c01010ad:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01010b1	obj/kernel.asm	/^c01010b1:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01010b5	obj/kernel.asm	/^c01010b5:	ee                   	out    %al,(%dx)$/;"	l
c01010b6	obj/kernel.asm	/^c01010b6:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01010bc	obj/kernel.asm	/^c01010bc:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01010c0	obj/kernel.asm	/^c01010c0:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01010c8	obj/kernel.asm	/^c01010c8:	ee                   	out    %al,(%dx)$/;"	l
c01010c9	obj/kernel.asm	/^c01010c9:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01010cf	obj/kernel.asm	/^c01010cf:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01010d3	obj/kernel.asm	/^c01010d3:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01010d7	obj/kernel.asm	/^c01010d7:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01010db	obj/kernel.asm	/^c01010db:	ee                   	out    %al,(%dx)$/;"	l
c01010dc	obj/kernel.asm	/^c01010dc:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01010e2	obj/kernel.asm	/^c01010e2:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c01010e6	obj/kernel.asm	/^c01010e6:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01010ea	obj/kernel.asm	/^c01010ea:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01010ee	obj/kernel.asm	/^c01010ee:	ee                   	out    %al,(%dx)$/;"	l
c01010ef	obj/kernel.asm	/^c01010ef:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c01010f5	obj/kernel.asm	/^c01010f5:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c01010f9	obj/kernel.asm	/^c01010f9:	89 c2                	mov    %eax,%edx$/;"	l
c01010fb	obj/kernel.asm	/^c01010fb:	ec                   	in     (%dx),%al$/;"	l
c01010fc	obj/kernel.asm	/^c01010fc:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01010ff	obj/kernel.asm	/^c01010ff:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	3c ff                	cmp    $0xff,%al$/;"	l
c0101105	obj/kernel.asm	/^c0101105:	0f 95 c0             	setne  %al$/;"	l
c0101108	obj/kernel.asm	/^c0101108:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010110b	obj/kernel.asm	/^c010110b:	a3 28 f2 1a c0       	mov    %eax,0xc01af228$/;"	l
c0101110	obj/kernel.asm	/^c0101110:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c0101116	obj/kernel.asm	/^c0101116:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c010111a	obj/kernel.asm	/^c010111a:	89 c2                	mov    %eax,%edx$/;"	l
c010111c	obj/kernel.asm	/^c010111c:	ec                   	in     (%dx),%al$/;"	l
c010111d	obj/kernel.asm	/^c010111d:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c0101120	obj/kernel.asm	/^c0101120:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c0101126	obj/kernel.asm	/^c0101126:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c010112a	obj/kernel.asm	/^c010112a:	89 c2                	mov    %eax,%edx$/;"	l
c010112c	obj/kernel.asm	/^c010112c:	ec                   	in     (%dx),%al$/;"	l
c010112d	obj/kernel.asm	/^c010112d:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101130	obj/kernel.asm	/^c0101130:	a1 28 f2 1a c0       	mov    0xc01af228,%eax$/;"	l
c0101135	obj/kernel.asm	/^c0101135:	85 c0                	test   %eax,%eax$/;"	l
c0101137	obj/kernel.asm	/^c0101137:	74 0c                	je     c0101145 <serial_init+0xe1>$/;"	l
c0101139	obj/kernel.asm	/^c0101139:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c0101140	obj/kernel.asm	/^c0101140:	e8 4b 0f 00 00       	call   c0102090 <pic_enable>$/;"	l
c0101145	obj/kernel.asm	/^c0101145:	c9                   	leave  $/;"	l
c0101146	obj/kernel.asm	/^c0101146:	c3                   	ret    $/;"	l
c0101147	obj/kernel.asm	/^c0101147 <lpt_putc_sub>:$/;"	l
c0101147	obj/kernel.asm	/^c0101147:	55                   	push   %ebp$/;"	l
c0101148	obj/kernel.asm	/^c0101148:	89 e5                	mov    %esp,%ebp$/;"	l
c010114a	obj/kernel.asm	/^c010114a:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010114d	obj/kernel.asm	/^c010114d:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101154	obj/kernel.asm	/^c0101154:	eb 09                	jmp    c010115f <lpt_putc_sub+0x18>$/;"	l
c0101156	obj/kernel.asm	/^c0101156:	e8 db fd ff ff       	call   c0100f36 <delay>$/;"	l
c010115b	obj/kernel.asm	/^c010115b:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010115f	obj/kernel.asm	/^c010115f:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c0101165	obj/kernel.asm	/^c0101165:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101169	obj/kernel.asm	/^c0101169:	89 c2                	mov    %eax,%edx$/;"	l
c010116b	obj/kernel.asm	/^c010116b:	ec                   	in     (%dx),%al$/;"	l
c010116c	obj/kernel.asm	/^c010116c:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c010116f	obj/kernel.asm	/^c010116f:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101173	obj/kernel.asm	/^c0101173:	84 c0                	test   %al,%al$/;"	l
c0101175	obj/kernel.asm	/^c0101175:	78 09                	js     c0101180 <lpt_putc_sub+0x39>$/;"	l
c0101177	obj/kernel.asm	/^c0101177:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c010117e	obj/kernel.asm	/^c010117e:	7e d6                	jle    c0101156 <lpt_putc_sub+0xf>$/;"	l
c0101180	obj/kernel.asm	/^c0101180:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101183	obj/kernel.asm	/^c0101183:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101186	obj/kernel.asm	/^c0101186:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c010118c	obj/kernel.asm	/^c010118c:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c010118f	obj/kernel.asm	/^c010118f:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101193	obj/kernel.asm	/^c0101193:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101197	obj/kernel.asm	/^c0101197:	ee                   	out    %al,(%dx)$/;"	l
c0101198	obj/kernel.asm	/^c0101198:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c010119e	obj/kernel.asm	/^c010119e:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c01011a2	obj/kernel.asm	/^c01011a2:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01011a6	obj/kernel.asm	/^c01011a6:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01011aa	obj/kernel.asm	/^c01011aa:	ee                   	out    %al,(%dx)$/;"	l
c01011ab	obj/kernel.asm	/^c01011ab:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01011b1	obj/kernel.asm	/^c01011b1:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01011b5	obj/kernel.asm	/^c01011b5:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01011b9	obj/kernel.asm	/^c01011b9:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01011bd	obj/kernel.asm	/^c01011bd:	ee                   	out    %al,(%dx)$/;"	l
c01011be	obj/kernel.asm	/^c01011be:	c9                   	leave  $/;"	l
c01011bf	obj/kernel.asm	/^c01011bf:	c3                   	ret    $/;"	l
c01011c0	obj/kernel.asm	/^c01011c0 <lpt_putc>:$/;"	l
c01011c0	obj/kernel.asm	/^c01011c0:	55                   	push   %ebp$/;"	l
c01011c1	obj/kernel.asm	/^c01011c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01011c3	obj/kernel.asm	/^c01011c3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01011c6	obj/kernel.asm	/^c01011c6:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01011ca	obj/kernel.asm	/^c01011ca:	74 0d                	je     c01011d9 <lpt_putc+0x19>$/;"	l
c01011cc	obj/kernel.asm	/^c01011cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01011cf	obj/kernel.asm	/^c01011cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01011d2	obj/kernel.asm	/^c01011d2:	e8 70 ff ff ff       	call   c0101147 <lpt_putc_sub>$/;"	l
c01011d7	obj/kernel.asm	/^c01011d7:	eb 24                	jmp    c01011fd <lpt_putc+0x3d>$/;"	l
c01011d9	obj/kernel.asm	/^c01011d9:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01011e0	obj/kernel.asm	/^c01011e0:	e8 62 ff ff ff       	call   c0101147 <lpt_putc_sub>$/;"	l
c01011e5	obj/kernel.asm	/^c01011e5:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c01011ec	obj/kernel.asm	/^c01011ec:	e8 56 ff ff ff       	call   c0101147 <lpt_putc_sub>$/;"	l
c01011f1	obj/kernel.asm	/^c01011f1:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01011f8	obj/kernel.asm	/^c01011f8:	e8 4a ff ff ff       	call   c0101147 <lpt_putc_sub>$/;"	l
c01011fd	obj/kernel.asm	/^c01011fd:	c9                   	leave  $/;"	l
c01011fe	obj/kernel.asm	/^c01011fe:	c3                   	ret    $/;"	l
c01011ff	obj/kernel.asm	/^c01011ff <cga_putc>:$/;"	l
c01011ff	obj/kernel.asm	/^c01011ff:	55                   	push   %ebp$/;"	l
c0101200	obj/kernel.asm	/^c0101200:	89 e5                	mov    %esp,%ebp$/;"	l
c0101202	obj/kernel.asm	/^c0101202:	53                   	push   %ebx$/;"	l
c0101203	obj/kernel.asm	/^c0101203:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0101206	obj/kernel.asm	/^c0101206:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101209	obj/kernel.asm	/^c0101209:	b0 00                	mov    $0x0,%al$/;"	l
c010120b	obj/kernel.asm	/^c010120b:	85 c0                	test   %eax,%eax$/;"	l
c010120d	obj/kernel.asm	/^c010120d:	75 07                	jne    c0101216 <cga_putc+0x17>$/;"	l
c010120f	obj/kernel.asm	/^c010120f:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c0101216	obj/kernel.asm	/^c0101216:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101219	obj/kernel.asm	/^c0101219:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010121c	obj/kernel.asm	/^c010121c:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c010121f	obj/kernel.asm	/^c010121f:	74 4c                	je     c010126d <cga_putc+0x6e>$/;"	l
c0101221	obj/kernel.asm	/^c0101221:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c0101224	obj/kernel.asm	/^c0101224:	74 57                	je     c010127d <cga_putc+0x7e>$/;"	l
c0101226	obj/kernel.asm	/^c0101226:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0101229	obj/kernel.asm	/^c0101229:	0f 85 88 00 00 00    	jne    c01012b7 <cga_putc+0xb8>$/;"	l
c010122f	obj/kernel.asm	/^c010122f:	0f b7 05 24 f2 1a c0 	movzwl 0xc01af224,%eax$/;"	l
c0101236	obj/kernel.asm	/^c0101236:	66 85 c0             	test   %ax,%ax$/;"	l
c0101239	obj/kernel.asm	/^c0101239:	74 30                	je     c010126b <cga_putc+0x6c>$/;"	l
c010123b	obj/kernel.asm	/^c010123b:	0f b7 05 24 f2 1a c0 	movzwl 0xc01af224,%eax$/;"	l
c0101242	obj/kernel.asm	/^c0101242:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101245	obj/kernel.asm	/^c0101245:	66 a3 24 f2 1a c0    	mov    %ax,0xc01af224$/;"	l
c010124b	obj/kernel.asm	/^c010124b:	a1 20 f2 1a c0       	mov    0xc01af220,%eax$/;"	l
c0101250	obj/kernel.asm	/^c0101250:	0f b7 15 24 f2 1a c0 	movzwl 0xc01af224,%edx$/;"	l
c0101257	obj/kernel.asm	/^c0101257:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010125a	obj/kernel.asm	/^c010125a:	01 d2                	add    %edx,%edx$/;"	l
c010125c	obj/kernel.asm	/^c010125c:	01 c2                	add    %eax,%edx$/;"	l
c010125e	obj/kernel.asm	/^c010125e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101261	obj/kernel.asm	/^c0101261:	b0 00                	mov    $0x0,%al$/;"	l
c0101263	obj/kernel.asm	/^c0101263:	83 c8 20             	or     $0x20,%eax$/;"	l
c0101266	obj/kernel.asm	/^c0101266:	66 89 02             	mov    %ax,(%edx)$/;"	l
c0101269	obj/kernel.asm	/^c0101269:	eb 72                	jmp    c01012dd <cga_putc+0xde>$/;"	l
c010126b	obj/kernel.asm	/^c010126b:	eb 70                	jmp    c01012dd <cga_putc+0xde>$/;"	l
c010126d	obj/kernel.asm	/^c010126d:	0f b7 05 24 f2 1a c0 	movzwl 0xc01af224,%eax$/;"	l
c0101274	obj/kernel.asm	/^c0101274:	83 c0 50             	add    $0x50,%eax$/;"	l
c0101277	obj/kernel.asm	/^c0101277:	66 a3 24 f2 1a c0    	mov    %ax,0xc01af224$/;"	l
c010127d	obj/kernel.asm	/^c010127d:	0f b7 1d 24 f2 1a c0 	movzwl 0xc01af224,%ebx$/;"	l
c0101284	obj/kernel.asm	/^c0101284:	0f b7 0d 24 f2 1a c0 	movzwl 0xc01af224,%ecx$/;"	l
c010128b	obj/kernel.asm	/^c010128b:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c010128e	obj/kernel.asm	/^c010128e:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c0101294	obj/kernel.asm	/^c0101294:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101297	obj/kernel.asm	/^c0101297:	89 c2                	mov    %eax,%edx$/;"	l
c0101299	obj/kernel.asm	/^c0101299:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c010129d	obj/kernel.asm	/^c010129d:	89 d0                	mov    %edx,%eax$/;"	l
c010129f	obj/kernel.asm	/^c010129f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01012a2	obj/kernel.asm	/^c01012a2:	01 d0                	add    %edx,%eax$/;"	l
c01012a4	obj/kernel.asm	/^c01012a4:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01012a7	obj/kernel.asm	/^c01012a7:	29 c1                	sub    %eax,%ecx$/;"	l
c01012a9	obj/kernel.asm	/^c01012a9:	89 ca                	mov    %ecx,%edx$/;"	l
c01012ab	obj/kernel.asm	/^c01012ab:	89 d8                	mov    %ebx,%eax$/;"	l
c01012ad	obj/kernel.asm	/^c01012ad:	29 d0                	sub    %edx,%eax$/;"	l
c01012af	obj/kernel.asm	/^c01012af:	66 a3 24 f2 1a c0    	mov    %ax,0xc01af224$/;"	l
c01012b5	obj/kernel.asm	/^c01012b5:	eb 26                	jmp    c01012dd <cga_putc+0xde>$/;"	l
c01012b7	obj/kernel.asm	/^c01012b7:	8b 0d 20 f2 1a c0    	mov    0xc01af220,%ecx$/;"	l
c01012bd	obj/kernel.asm	/^c01012bd:	0f b7 05 24 f2 1a c0 	movzwl 0xc01af224,%eax$/;"	l
c01012c4	obj/kernel.asm	/^c01012c4:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01012c7	obj/kernel.asm	/^c01012c7:	66 89 15 24 f2 1a c0 	mov    %dx,0xc01af224$/;"	l
c01012ce	obj/kernel.asm	/^c01012ce:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01012d1	obj/kernel.asm	/^c01012d1:	01 c0                	add    %eax,%eax$/;"	l
c01012d3	obj/kernel.asm	/^c01012d3:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c01012d6	obj/kernel.asm	/^c01012d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01012d9	obj/kernel.asm	/^c01012d9:	66 89 02             	mov    %ax,(%edx)$/;"	l
c01012dc	obj/kernel.asm	/^c01012dc:	90                   	nop$/;"	l
c01012dd	obj/kernel.asm	/^c01012dd:	0f b7 05 24 f2 1a c0 	movzwl 0xc01af224,%eax$/;"	l
c01012e4	obj/kernel.asm	/^c01012e4:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c01012e8	obj/kernel.asm	/^c01012e8:	76 5b                	jbe    c0101345 <cga_putc+0x146>$/;"	l
c01012ea	obj/kernel.asm	/^c01012ea:	a1 20 f2 1a c0       	mov    0xc01af220,%eax$/;"	l
c01012ef	obj/kernel.asm	/^c01012ef:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c01012f5	obj/kernel.asm	/^c01012f5:	a1 20 f2 1a c0       	mov    0xc01af220,%eax$/;"	l
c01012fa	obj/kernel.asm	/^c01012fa:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
c0101301	obj/kernel.asm	/^c0101301:	00 $/;"	l
c0101302	obj/kernel.asm	/^c0101302:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0101306	obj/kernel.asm	/^c0101306:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101309	obj/kernel.asm	/^c0101309:	e8 ca af 00 00       	call   c010c2d8 <memmove>$/;"	l
c010130e	obj/kernel.asm	/^c010130e:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c0101315	obj/kernel.asm	/^c0101315:	eb 15                	jmp    c010132c <cga_putc+0x12d>$/;"	l
c0101317	obj/kernel.asm	/^c0101317:	a1 20 f2 1a c0       	mov    0xc01af220,%eax$/;"	l
c010131c	obj/kernel.asm	/^c010131c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010131f	obj/kernel.asm	/^c010131f:	01 d2                	add    %edx,%edx$/;"	l
c0101321	obj/kernel.asm	/^c0101321:	01 d0                	add    %edx,%eax$/;"	l
c0101323	obj/kernel.asm	/^c0101323:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101328	obj/kernel.asm	/^c0101328:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010132c	obj/kernel.asm	/^c010132c:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c0101333	obj/kernel.asm	/^c0101333:	7e e2                	jle    c0101317 <cga_putc+0x118>$/;"	l
c0101335	obj/kernel.asm	/^c0101335:	0f b7 05 24 f2 1a c0 	movzwl 0xc01af224,%eax$/;"	l
c010133c	obj/kernel.asm	/^c010133c:	83 e8 50             	sub    $0x50,%eax$/;"	l
c010133f	obj/kernel.asm	/^c010133f:	66 a3 24 f2 1a c0    	mov    %ax,0xc01af224$/;"	l
c0101345	obj/kernel.asm	/^c0101345:	0f b7 05 26 f2 1a c0 	movzwl 0xc01af226,%eax$/;"	l
c010134c	obj/kernel.asm	/^c010134c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010134f	obj/kernel.asm	/^c010134f:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101353	obj/kernel.asm	/^c0101353:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0101357	obj/kernel.asm	/^c0101357:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010135b	obj/kernel.asm	/^c010135b:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010135f	obj/kernel.asm	/^c010135f:	ee                   	out    %al,(%dx)$/;"	l
c0101360	obj/kernel.asm	/^c0101360:	0f b7 05 24 f2 1a c0 	movzwl 0xc01af224,%eax$/;"	l
c0101367	obj/kernel.asm	/^c0101367:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c010136b	obj/kernel.asm	/^c010136b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010136e	obj/kernel.asm	/^c010136e:	0f b7 15 26 f2 1a c0 	movzwl 0xc01af226,%edx$/;"	l
c0101375	obj/kernel.asm	/^c0101375:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101378	obj/kernel.asm	/^c0101378:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010137b	obj/kernel.asm	/^c010137b:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c010137f	obj/kernel.asm	/^c010137f:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101382	obj/kernel.asm	/^c0101382:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101386	obj/kernel.asm	/^c0101386:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c010138a	obj/kernel.asm	/^c010138a:	ee                   	out    %al,(%dx)$/;"	l
c010138b	obj/kernel.asm	/^c010138b:	0f b7 05 26 f2 1a c0 	movzwl 0xc01af226,%eax$/;"	l
c0101392	obj/kernel.asm	/^c0101392:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101395	obj/kernel.asm	/^c0101395:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101399	obj/kernel.asm	/^c0101399:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c010139d	obj/kernel.asm	/^c010139d:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01013a1	obj/kernel.asm	/^c01013a1:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01013a5	obj/kernel.asm	/^c01013a5:	ee                   	out    %al,(%dx)$/;"	l
c01013a6	obj/kernel.asm	/^c01013a6:	0f b7 05 24 f2 1a c0 	movzwl 0xc01af224,%eax$/;"	l
c01013ad	obj/kernel.asm	/^c01013ad:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01013b0	obj/kernel.asm	/^c01013b0:	0f b7 15 26 f2 1a c0 	movzwl 0xc01af226,%edx$/;"	l
c01013b7	obj/kernel.asm	/^c01013b7:	83 c2 01             	add    $0x1,%edx$/;"	l
c01013ba	obj/kernel.asm	/^c01013ba:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01013bd	obj/kernel.asm	/^c01013bd:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c01013c1	obj/kernel.asm	/^c01013c1:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c01013c4	obj/kernel.asm	/^c01013c4:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01013c8	obj/kernel.asm	/^c01013c8:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01013cc	obj/kernel.asm	/^c01013cc:	ee                   	out    %al,(%dx)$/;"	l
c01013cd	obj/kernel.asm	/^c01013cd:	83 c4 34             	add    $0x34,%esp$/;"	l
c01013d0	obj/kernel.asm	/^c01013d0:	5b                   	pop    %ebx$/;"	l
c01013d1	obj/kernel.asm	/^c01013d1:	5d                   	pop    %ebp$/;"	l
c01013d2	obj/kernel.asm	/^c01013d2:	c3                   	ret    $/;"	l
c01013d3	obj/kernel.asm	/^c01013d3 <serial_putc_sub>:$/;"	l
c01013d3	obj/kernel.asm	/^c01013d3:	55                   	push   %ebp$/;"	l
c01013d4	obj/kernel.asm	/^c01013d4:	89 e5                	mov    %esp,%ebp$/;"	l
c01013d6	obj/kernel.asm	/^c01013d6:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01013d9	obj/kernel.asm	/^c01013d9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01013e0	obj/kernel.asm	/^c01013e0:	eb 09                	jmp    c01013eb <serial_putc_sub+0x18>$/;"	l
c01013e2	obj/kernel.asm	/^c01013e2:	e8 4f fb ff ff       	call   c0100f36 <delay>$/;"	l
c01013e7	obj/kernel.asm	/^c01013e7:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01013eb	obj/kernel.asm	/^c01013eb:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01013f1	obj/kernel.asm	/^c01013f1:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01013f5	obj/kernel.asm	/^c01013f5:	89 c2                	mov    %eax,%edx$/;"	l
c01013f7	obj/kernel.asm	/^c01013f7:	ec                   	in     (%dx),%al$/;"	l
c01013f8	obj/kernel.asm	/^c01013f8:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01013fb	obj/kernel.asm	/^c01013fb:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01013ff	obj/kernel.asm	/^c01013ff:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101402	obj/kernel.asm	/^c0101402:	83 e0 20             	and    $0x20,%eax$/;"	l
c0101405	obj/kernel.asm	/^c0101405:	85 c0                	test   %eax,%eax$/;"	l
c0101407	obj/kernel.asm	/^c0101407:	75 09                	jne    c0101412 <serial_putc_sub+0x3f>$/;"	l
c0101409	obj/kernel.asm	/^c0101409:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101410	obj/kernel.asm	/^c0101410:	7e d0                	jle    c01013e2 <serial_putc_sub+0xf>$/;"	l
c0101412	obj/kernel.asm	/^c0101412:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101415	obj/kernel.asm	/^c0101415:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101418	obj/kernel.asm	/^c0101418:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c010141e	obj/kernel.asm	/^c010141e:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101421	obj/kernel.asm	/^c0101421:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101425	obj/kernel.asm	/^c0101425:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101429	obj/kernel.asm	/^c0101429:	ee                   	out    %al,(%dx)$/;"	l
c010142a	obj/kernel.asm	/^c010142a:	c9                   	leave  $/;"	l
c010142b	obj/kernel.asm	/^c010142b:	c3                   	ret    $/;"	l
c010142c	obj/kernel.asm	/^c010142c <serial_putc>:$/;"	l
c010142c	obj/kernel.asm	/^c010142c:	55                   	push   %ebp$/;"	l
c010142d	obj/kernel.asm	/^c010142d:	89 e5                	mov    %esp,%ebp$/;"	l
c010142f	obj/kernel.asm	/^c010142f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101432	obj/kernel.asm	/^c0101432:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0101436	obj/kernel.asm	/^c0101436:	74 0d                	je     c0101445 <serial_putc+0x19>$/;"	l
c0101438	obj/kernel.asm	/^c0101438:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010143b	obj/kernel.asm	/^c010143b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010143e	obj/kernel.asm	/^c010143e:	e8 90 ff ff ff       	call   c01013d3 <serial_putc_sub>$/;"	l
c0101443	obj/kernel.asm	/^c0101443:	eb 24                	jmp    c0101469 <serial_putc+0x3d>$/;"	l
c0101445	obj/kernel.asm	/^c0101445:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c010144c	obj/kernel.asm	/^c010144c:	e8 82 ff ff ff       	call   c01013d3 <serial_putc_sub>$/;"	l
c0101451	obj/kernel.asm	/^c0101451:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0101458	obj/kernel.asm	/^c0101458:	e8 76 ff ff ff       	call   c01013d3 <serial_putc_sub>$/;"	l
c010145d	obj/kernel.asm	/^c010145d:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c0101464	obj/kernel.asm	/^c0101464:	e8 6a ff ff ff       	call   c01013d3 <serial_putc_sub>$/;"	l
c0101469	obj/kernel.asm	/^c0101469:	c9                   	leave  $/;"	l
c010146a	obj/kernel.asm	/^c010146a:	c3                   	ret    $/;"	l
c010146b	obj/kernel.asm	/^c010146b <cons_intr>:$/;"	l
c010146b	obj/kernel.asm	/^c010146b:	55                   	push   %ebp$/;"	l
c010146c	obj/kernel.asm	/^c010146c:	89 e5                	mov    %esp,%ebp$/;"	l
c010146e	obj/kernel.asm	/^c010146e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101471	obj/kernel.asm	/^c0101471:	eb 33                	jmp    c01014a6 <cons_intr+0x3b>$/;"	l
c0101473	obj/kernel.asm	/^c0101473:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101477	obj/kernel.asm	/^c0101477:	74 2d                	je     c01014a6 <cons_intr+0x3b>$/;"	l
c0101479	obj/kernel.asm	/^c0101479:	a1 44 f4 1a c0       	mov    0xc01af444,%eax$/;"	l
c010147e	obj/kernel.asm	/^c010147e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101481	obj/kernel.asm	/^c0101481:	89 15 44 f4 1a c0    	mov    %edx,0xc01af444$/;"	l
c0101487	obj/kernel.asm	/^c0101487:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010148a	obj/kernel.asm	/^c010148a:	88 90 40 f2 1a c0    	mov    %dl,-0x3fe50dc0(%eax)$/;"	l
c0101490	obj/kernel.asm	/^c0101490:	a1 44 f4 1a c0       	mov    0xc01af444,%eax$/;"	l
c0101495	obj/kernel.asm	/^c0101495:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c010149a	obj/kernel.asm	/^c010149a:	75 0a                	jne    c01014a6 <cons_intr+0x3b>$/;"	l
c010149c	obj/kernel.asm	/^c010149c:	c7 05 44 f4 1a c0 00 	movl   $0x0,0xc01af444$/;"	l
c01014a3	obj/kernel.asm	/^c01014a3:	00 00 00 $/;"	l
c01014a6	obj/kernel.asm	/^c01014a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01014a9	obj/kernel.asm	/^c01014a9:	ff d0                	call   *%eax$/;"	l
c01014ab	obj/kernel.asm	/^c01014ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01014ae	obj/kernel.asm	/^c01014ae:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c01014b2	obj/kernel.asm	/^c01014b2:	75 bf                	jne    c0101473 <cons_intr+0x8>$/;"	l
c01014b4	obj/kernel.asm	/^c01014b4:	c9                   	leave  $/;"	l
c01014b5	obj/kernel.asm	/^c01014b5:	c3                   	ret    $/;"	l
c01014b6	obj/kernel.asm	/^c01014b6 <serial_proc_data>:$/;"	l
c01014b6	obj/kernel.asm	/^c01014b6:	55                   	push   %ebp$/;"	l
c01014b7	obj/kernel.asm	/^c01014b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01014b9	obj/kernel.asm	/^c01014b9:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01014bc	obj/kernel.asm	/^c01014bc:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01014c2	obj/kernel.asm	/^c01014c2:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01014c6	obj/kernel.asm	/^c01014c6:	89 c2                	mov    %eax,%edx$/;"	l
c01014c8	obj/kernel.asm	/^c01014c8:	ec                   	in     (%dx),%al$/;"	l
c01014c9	obj/kernel.asm	/^c01014c9:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01014cc	obj/kernel.asm	/^c01014cc:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01014d0	obj/kernel.asm	/^c01014d0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014d3	obj/kernel.asm	/^c01014d3:	83 e0 01             	and    $0x1,%eax$/;"	l
c01014d6	obj/kernel.asm	/^c01014d6:	85 c0                	test   %eax,%eax$/;"	l
c01014d8	obj/kernel.asm	/^c01014d8:	75 07                	jne    c01014e1 <serial_proc_data+0x2b>$/;"	l
c01014da	obj/kernel.asm	/^c01014da:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01014df	obj/kernel.asm	/^c01014df:	eb 2a                	jmp    c010150b <serial_proc_data+0x55>$/;"	l
c01014e1	obj/kernel.asm	/^c01014e1:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c01014e7	obj/kernel.asm	/^c01014e7:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01014eb	obj/kernel.asm	/^c01014eb:	89 c2                	mov    %eax,%edx$/;"	l
c01014ed	obj/kernel.asm	/^c01014ed:	ec                   	in     (%dx),%al$/;"	l
c01014ee	obj/kernel.asm	/^c01014ee:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01014f1	obj/kernel.asm	/^c01014f1:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01014f5	obj/kernel.asm	/^c01014f5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014f8	obj/kernel.asm	/^c01014f8:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01014fb	obj/kernel.asm	/^c01014fb:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c01014ff	obj/kernel.asm	/^c01014ff:	75 07                	jne    c0101508 <serial_proc_data+0x52>$/;"	l
c0101501	obj/kernel.asm	/^c0101501:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101508	obj/kernel.asm	/^c0101508:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010150b	obj/kernel.asm	/^c010150b:	c9                   	leave  $/;"	l
c010150c	obj/kernel.asm	/^c010150c:	c3                   	ret    $/;"	l
c010150d	obj/kernel.asm	/^c010150d <serial_intr>:$/;"	l
c010150d	obj/kernel.asm	/^c010150d:	55                   	push   %ebp$/;"	l
c010150e	obj/kernel.asm	/^c010150e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101510	obj/kernel.asm	/^c0101510:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101513	obj/kernel.asm	/^c0101513:	a1 28 f2 1a c0       	mov    0xc01af228,%eax$/;"	l
c0101518	obj/kernel.asm	/^c0101518:	85 c0                	test   %eax,%eax$/;"	l
c010151a	obj/kernel.asm	/^c010151a:	74 0c                	je     c0101528 <serial_intr+0x1b>$/;"	l
c010151c	obj/kernel.asm	/^c010151c:	c7 04 24 b6 14 10 c0 	movl   $0xc01014b6,(%esp)$/;"	l
c0101523	obj/kernel.asm	/^c0101523:	e8 43 ff ff ff       	call   c010146b <cons_intr>$/;"	l
c0101528	obj/kernel.asm	/^c0101528:	c9                   	leave  $/;"	l
c0101529	obj/kernel.asm	/^c0101529:	c3                   	ret    $/;"	l
c010152a	obj/kernel.asm	/^c010152a <kbd_proc_data>:$/;"	l
c010152a	obj/kernel.asm	/^c010152a:	55                   	push   %ebp$/;"	l
c010152b	obj/kernel.asm	/^c010152b:	89 e5                	mov    %esp,%ebp$/;"	l
c010152d	obj/kernel.asm	/^c010152d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0101530	obj/kernel.asm	/^c0101530:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c0101536	obj/kernel.asm	/^c0101536:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c010153a	obj/kernel.asm	/^c010153a:	89 c2                	mov    %eax,%edx$/;"	l
c010153c	obj/kernel.asm	/^c010153c:	ec                   	in     (%dx),%al$/;"	l
c010153d	obj/kernel.asm	/^c010153d:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c0101540	obj/kernel.asm	/^c0101540:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c0101544	obj/kernel.asm	/^c0101544:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101547	obj/kernel.asm	/^c0101547:	83 e0 01             	and    $0x1,%eax$/;"	l
c010154a	obj/kernel.asm	/^c010154a:	85 c0                	test   %eax,%eax$/;"	l
c010154c	obj/kernel.asm	/^c010154c:	75 0a                	jne    c0101558 <kbd_proc_data+0x2e>$/;"	l
c010154e	obj/kernel.asm	/^c010154e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101553	obj/kernel.asm	/^c0101553:	e9 59 01 00 00       	jmp    c01016b1 <kbd_proc_data+0x187>$/;"	l
c0101558	obj/kernel.asm	/^c0101558:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c010155e	obj/kernel.asm	/^c010155e:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101562	obj/kernel.asm	/^c0101562:	89 c2                	mov    %eax,%edx$/;"	l
c0101564	obj/kernel.asm	/^c0101564:	ec                   	in     (%dx),%al$/;"	l
c0101565	obj/kernel.asm	/^c0101565:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101568	obj/kernel.asm	/^c0101568:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c010156c	obj/kernel.asm	/^c010156c:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c010156f	obj/kernel.asm	/^c010156f:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c0101573	obj/kernel.asm	/^c0101573:	75 17                	jne    c010158c <kbd_proc_data+0x62>$/;"	l
c0101575	obj/kernel.asm	/^c0101575:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c010157a	obj/kernel.asm	/^c010157a:	83 c8 40             	or     $0x40,%eax$/;"	l
c010157d	obj/kernel.asm	/^c010157d:	a3 48 f4 1a c0       	mov    %eax,0xc01af448$/;"	l
c0101582	obj/kernel.asm	/^c0101582:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101587	obj/kernel.asm	/^c0101587:	e9 25 01 00 00       	jmp    c01016b1 <kbd_proc_data+0x187>$/;"	l
c010158c	obj/kernel.asm	/^c010158c:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101590	obj/kernel.asm	/^c0101590:	84 c0                	test   %al,%al$/;"	l
c0101592	obj/kernel.asm	/^c0101592:	79 47                	jns    c01015db <kbd_proc_data+0xb1>$/;"	l
c0101594	obj/kernel.asm	/^c0101594:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c0101599	obj/kernel.asm	/^c0101599:	83 e0 40             	and    $0x40,%eax$/;"	l
c010159c	obj/kernel.asm	/^c010159c:	85 c0                	test   %eax,%eax$/;"	l
c010159e	obj/kernel.asm	/^c010159e:	75 09                	jne    c01015a9 <kbd_proc_data+0x7f>$/;"	l
c01015a0	obj/kernel.asm	/^c01015a0:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01015a4	obj/kernel.asm	/^c01015a4:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c01015a7	obj/kernel.asm	/^c01015a7:	eb 04                	jmp    c01015ad <kbd_proc_data+0x83>$/;"	l
c01015a9	obj/kernel.asm	/^c01015a9:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01015ad	obj/kernel.asm	/^c01015ad:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c01015b0	obj/kernel.asm	/^c01015b0:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01015b4	obj/kernel.asm	/^c01015b4:	0f b6 80 60 d0 12 c0 	movzbl -0x3fed2fa0(%eax),%eax$/;"	l
c01015bb	obj/kernel.asm	/^c01015bb:	83 c8 40             	or     $0x40,%eax$/;"	l
c01015be	obj/kernel.asm	/^c01015be:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01015c1	obj/kernel.asm	/^c01015c1:	f7 d0                	not    %eax$/;"	l
c01015c3	obj/kernel.asm	/^c01015c3:	89 c2                	mov    %eax,%edx$/;"	l
c01015c5	obj/kernel.asm	/^c01015c5:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c01015ca	obj/kernel.asm	/^c01015ca:	21 d0                	and    %edx,%eax$/;"	l
c01015cc	obj/kernel.asm	/^c01015cc:	a3 48 f4 1a c0       	mov    %eax,0xc01af448$/;"	l
c01015d1	obj/kernel.asm	/^c01015d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01015d6	obj/kernel.asm	/^c01015d6:	e9 d6 00 00 00       	jmp    c01016b1 <kbd_proc_data+0x187>$/;"	l
c01015db	obj/kernel.asm	/^c01015db:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c01015e0	obj/kernel.asm	/^c01015e0:	83 e0 40             	and    $0x40,%eax$/;"	l
c01015e3	obj/kernel.asm	/^c01015e3:	85 c0                	test   %eax,%eax$/;"	l
c01015e5	obj/kernel.asm	/^c01015e5:	74 11                	je     c01015f8 <kbd_proc_data+0xce>$/;"	l
c01015e7	obj/kernel.asm	/^c01015e7:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c01015eb	obj/kernel.asm	/^c01015eb:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c01015f0	obj/kernel.asm	/^c01015f0:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c01015f3	obj/kernel.asm	/^c01015f3:	a3 48 f4 1a c0       	mov    %eax,0xc01af448$/;"	l
c01015f8	obj/kernel.asm	/^c01015f8:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01015fc	obj/kernel.asm	/^c01015fc:	0f b6 80 60 d0 12 c0 	movzbl -0x3fed2fa0(%eax),%eax$/;"	l
c0101603	obj/kernel.asm	/^c0101603:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101606	obj/kernel.asm	/^c0101606:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c010160b	obj/kernel.asm	/^c010160b:	09 d0                	or     %edx,%eax$/;"	l
c010160d	obj/kernel.asm	/^c010160d:	a3 48 f4 1a c0       	mov    %eax,0xc01af448$/;"	l
c0101612	obj/kernel.asm	/^c0101612:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101616	obj/kernel.asm	/^c0101616:	0f b6 80 60 d1 12 c0 	movzbl -0x3fed2ea0(%eax),%eax$/;"	l
c010161d	obj/kernel.asm	/^c010161d:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101620	obj/kernel.asm	/^c0101620:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c0101625	obj/kernel.asm	/^c0101625:	31 d0                	xor    %edx,%eax$/;"	l
c0101627	obj/kernel.asm	/^c0101627:	a3 48 f4 1a c0       	mov    %eax,0xc01af448$/;"	l
c010162c	obj/kernel.asm	/^c010162c:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c0101631	obj/kernel.asm	/^c0101631:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101634	obj/kernel.asm	/^c0101634:	8b 14 85 60 d5 12 c0 	mov    -0x3fed2aa0(,%eax,4),%edx$/;"	l
c010163b	obj/kernel.asm	/^c010163b:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010163f	obj/kernel.asm	/^c010163f:	01 d0                	add    %edx,%eax$/;"	l
c0101641	obj/kernel.asm	/^c0101641:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101644	obj/kernel.asm	/^c0101644:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101647	obj/kernel.asm	/^c0101647:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010164a	obj/kernel.asm	/^c010164a:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c010164f	obj/kernel.asm	/^c010164f:	83 e0 08             	and    $0x8,%eax$/;"	l
c0101652	obj/kernel.asm	/^c0101652:	85 c0                	test   %eax,%eax$/;"	l
c0101654	obj/kernel.asm	/^c0101654:	74 22                	je     c0101678 <kbd_proc_data+0x14e>$/;"	l
c0101656	obj/kernel.asm	/^c0101656:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c010165a	obj/kernel.asm	/^c010165a:	7e 0c                	jle    c0101668 <kbd_proc_data+0x13e>$/;"	l
c010165c	obj/kernel.asm	/^c010165c:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c0101660	obj/kernel.asm	/^c0101660:	7f 06                	jg     c0101668 <kbd_proc_data+0x13e>$/;"	l
c0101662	obj/kernel.asm	/^c0101662:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c0101666	obj/kernel.asm	/^c0101666:	eb 10                	jmp    c0101678 <kbd_proc_data+0x14e>$/;"	l
c0101668	obj/kernel.asm	/^c0101668:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c010166c	obj/kernel.asm	/^c010166c:	7e 0a                	jle    c0101678 <kbd_proc_data+0x14e>$/;"	l
c010166e	obj/kernel.asm	/^c010166e:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c0101672	obj/kernel.asm	/^c0101672:	7f 04                	jg     c0101678 <kbd_proc_data+0x14e>$/;"	l
c0101674	obj/kernel.asm	/^c0101674:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101678	obj/kernel.asm	/^c0101678:	a1 48 f4 1a c0       	mov    0xc01af448,%eax$/;"	l
c010167d	obj/kernel.asm	/^c010167d:	f7 d0                	not    %eax$/;"	l
c010167f	obj/kernel.asm	/^c010167f:	83 e0 06             	and    $0x6,%eax$/;"	l
c0101682	obj/kernel.asm	/^c0101682:	85 c0                	test   %eax,%eax$/;"	l
c0101684	obj/kernel.asm	/^c0101684:	75 28                	jne    c01016ae <kbd_proc_data+0x184>$/;"	l
c0101686	obj/kernel.asm	/^c0101686:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c010168d	obj/kernel.asm	/^c010168d:	75 1f                	jne    c01016ae <kbd_proc_data+0x184>$/;"	l
c010168f	obj/kernel.asm	/^c010168f:	c7 04 24 5d c7 10 c0 	movl   $0xc010c75d,(%esp)$/;"	l
c0101696	obj/kernel.asm	/^c0101696:	e8 bd ec ff ff       	call   c0100358 <cprintf>$/;"	l
c010169b	obj/kernel.asm	/^c010169b:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c01016a1	obj/kernel.asm	/^c01016a1:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c01016a5	obj/kernel.asm	/^c01016a5:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c01016a9	obj/kernel.asm	/^c01016a9:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c01016ad	obj/kernel.asm	/^c01016ad:	ee                   	out    %al,(%dx)$/;"	l
c01016ae	obj/kernel.asm	/^c01016ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01016b1	obj/kernel.asm	/^c01016b1:	c9                   	leave  $/;"	l
c01016b2	obj/kernel.asm	/^c01016b2:	c3                   	ret    $/;"	l
c01016b3	obj/kernel.asm	/^c01016b3 <kbd_intr>:$/;"	l
c01016b3	obj/kernel.asm	/^c01016b3:	55                   	push   %ebp$/;"	l
c01016b4	obj/kernel.asm	/^c01016b4:	89 e5                	mov    %esp,%ebp$/;"	l
c01016b6	obj/kernel.asm	/^c01016b6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01016b9	obj/kernel.asm	/^c01016b9:	c7 04 24 2a 15 10 c0 	movl   $0xc010152a,(%esp)$/;"	l
c01016c0	obj/kernel.asm	/^c01016c0:	e8 a6 fd ff ff       	call   c010146b <cons_intr>$/;"	l
c01016c5	obj/kernel.asm	/^c01016c5:	c9                   	leave  $/;"	l
c01016c6	obj/kernel.asm	/^c01016c6:	c3                   	ret    $/;"	l
c01016c7	obj/kernel.asm	/^c01016c7 <kbd_init>:$/;"	l
c01016c7	obj/kernel.asm	/^c01016c7:	55                   	push   %ebp$/;"	l
c01016c8	obj/kernel.asm	/^c01016c8:	89 e5                	mov    %esp,%ebp$/;"	l
c01016ca	obj/kernel.asm	/^c01016ca:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01016cd	obj/kernel.asm	/^c01016cd:	e8 e1 ff ff ff       	call   c01016b3 <kbd_intr>$/;"	l
c01016d2	obj/kernel.asm	/^c01016d2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01016d9	obj/kernel.asm	/^c01016d9:	e8 b2 09 00 00       	call   c0102090 <pic_enable>$/;"	l
c01016de	obj/kernel.asm	/^c01016de:	c9                   	leave  $/;"	l
c01016df	obj/kernel.asm	/^c01016df:	c3                   	ret    $/;"	l
c01016e0	obj/kernel.asm	/^c01016e0 <cons_init>:$/;"	l
c01016e0	obj/kernel.asm	/^c01016e0:	55                   	push   %ebp$/;"	l
c01016e1	obj/kernel.asm	/^c01016e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01016e3	obj/kernel.asm	/^c01016e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01016e6	obj/kernel.asm	/^c01016e6:	e8 93 f8 ff ff       	call   c0100f7e <cga_init>$/;"	l
c01016eb	obj/kernel.asm	/^c01016eb:	e8 74 f9 ff ff       	call   c0101064 <serial_init>$/;"	l
c01016f0	obj/kernel.asm	/^c01016f0:	e8 d2 ff ff ff       	call   c01016c7 <kbd_init>$/;"	l
c01016f5	obj/kernel.asm	/^c01016f5:	a1 28 f2 1a c0       	mov    0xc01af228,%eax$/;"	l
c01016fa	obj/kernel.asm	/^c01016fa:	85 c0                	test   %eax,%eax$/;"	l
c01016fc	obj/kernel.asm	/^c01016fc:	75 0c                	jne    c010170a <cons_init+0x2a>$/;"	l
c01016fe	obj/kernel.asm	/^c01016fe:	c7 04 24 69 c7 10 c0 	movl   $0xc010c769,(%esp)$/;"	l
c0101705	obj/kernel.asm	/^c0101705:	e8 4e ec ff ff       	call   c0100358 <cprintf>$/;"	l
c010170a	obj/kernel.asm	/^c010170a:	c9                   	leave  $/;"	l
c010170b	obj/kernel.asm	/^c010170b:	c3                   	ret    $/;"	l
c010170c	obj/kernel.asm	/^c010170c <cons_putc>:$/;"	l
c010170c	obj/kernel.asm	/^c010170c:	55                   	push   %ebp$/;"	l
c010170d	obj/kernel.asm	/^c010170d:	89 e5                	mov    %esp,%ebp$/;"	l
c010170f	obj/kernel.asm	/^c010170f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101712	obj/kernel.asm	/^c0101712:	e8 e2 f7 ff ff       	call   c0100ef9 <__intr_save>$/;"	l
c0101717	obj/kernel.asm	/^c0101717:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010171a	obj/kernel.asm	/^c010171a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010171d	obj/kernel.asm	/^c010171d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101720	obj/kernel.asm	/^c0101720:	e8 9b fa ff ff       	call   c01011c0 <lpt_putc>$/;"	l
c0101725	obj/kernel.asm	/^c0101725:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101728	obj/kernel.asm	/^c0101728:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010172b	obj/kernel.asm	/^c010172b:	e8 cf fa ff ff       	call   c01011ff <cga_putc>$/;"	l
c0101730	obj/kernel.asm	/^c0101730:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101733	obj/kernel.asm	/^c0101733:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101736	obj/kernel.asm	/^c0101736:	e8 f1 fc ff ff       	call   c010142c <serial_putc>$/;"	l
c010173b	obj/kernel.asm	/^c010173b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010173e	obj/kernel.asm	/^c010173e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101741	obj/kernel.asm	/^c0101741:	e8 dd f7 ff ff       	call   c0100f23 <__intr_restore>$/;"	l
c0101746	obj/kernel.asm	/^c0101746:	c9                   	leave  $/;"	l
c0101747	obj/kernel.asm	/^c0101747:	c3                   	ret    $/;"	l
c0101748	obj/kernel.asm	/^c0101748 <cons_getc>:$/;"	l
c0101748	obj/kernel.asm	/^c0101748:	55                   	push   %ebp$/;"	l
c0101749	obj/kernel.asm	/^c0101749:	89 e5                	mov    %esp,%ebp$/;"	l
c010174b	obj/kernel.asm	/^c010174b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010174e	obj/kernel.asm	/^c010174e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101755	obj/kernel.asm	/^c0101755:	e8 9f f7 ff ff       	call   c0100ef9 <__intr_save>$/;"	l
c010175a	obj/kernel.asm	/^c010175a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010175d	obj/kernel.asm	/^c010175d:	e8 ab fd ff ff       	call   c010150d <serial_intr>$/;"	l
c0101762	obj/kernel.asm	/^c0101762:	e8 4c ff ff ff       	call   c01016b3 <kbd_intr>$/;"	l
c0101767	obj/kernel.asm	/^c0101767:	8b 15 40 f4 1a c0    	mov    0xc01af440,%edx$/;"	l
c010176d	obj/kernel.asm	/^c010176d:	a1 44 f4 1a c0       	mov    0xc01af444,%eax$/;"	l
c0101772	obj/kernel.asm	/^c0101772:	39 c2                	cmp    %eax,%edx$/;"	l
c0101774	obj/kernel.asm	/^c0101774:	74 31                	je     c01017a7 <cons_getc+0x5f>$/;"	l
c0101776	obj/kernel.asm	/^c0101776:	a1 40 f4 1a c0       	mov    0xc01af440,%eax$/;"	l
c010177b	obj/kernel.asm	/^c010177b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010177e	obj/kernel.asm	/^c010177e:	89 15 40 f4 1a c0    	mov    %edx,0xc01af440$/;"	l
c0101784	obj/kernel.asm	/^c0101784:	0f b6 80 40 f2 1a c0 	movzbl -0x3fe50dc0(%eax),%eax$/;"	l
c010178b	obj/kernel.asm	/^c010178b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010178e	obj/kernel.asm	/^c010178e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101791	obj/kernel.asm	/^c0101791:	a1 40 f4 1a c0       	mov    0xc01af440,%eax$/;"	l
c0101796	obj/kernel.asm	/^c0101796:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c010179b	obj/kernel.asm	/^c010179b:	75 0a                	jne    c01017a7 <cons_getc+0x5f>$/;"	l
c010179d	obj/kernel.asm	/^c010179d:	c7 05 40 f4 1a c0 00 	movl   $0x0,0xc01af440$/;"	l
c01017a4	obj/kernel.asm	/^c01017a4:	00 00 00 $/;"	l
c01017a7	obj/kernel.asm	/^c01017a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01017aa	obj/kernel.asm	/^c01017aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01017ad	obj/kernel.asm	/^c01017ad:	e8 71 f7 ff ff       	call   c0100f23 <__intr_restore>$/;"	l
c01017b2	obj/kernel.asm	/^c01017b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01017b5	obj/kernel.asm	/^c01017b5:	c9                   	leave  $/;"	l
c01017b6	obj/kernel.asm	/^c01017b6:	c3                   	ret    $/;"	l
c01017b7	obj/kernel.asm	/^c01017b7 <ide_wait_ready>:$/;"	l
c01017b7	obj/kernel.asm	/^c01017b7:	55                   	push   %ebp$/;"	l
c01017b8	obj/kernel.asm	/^c01017b8:	89 e5                	mov    %esp,%ebp$/;"	l
c01017ba	obj/kernel.asm	/^c01017ba:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01017bd	obj/kernel.asm	/^c01017bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01017c0	obj/kernel.asm	/^c01017c0:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c01017c4	obj/kernel.asm	/^c01017c4:	90                   	nop$/;"	l
c01017c5	obj/kernel.asm	/^c01017c5:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01017c9	obj/kernel.asm	/^c01017c9:	83 c0 07             	add    $0x7,%eax$/;"	l
c01017cc	obj/kernel.asm	/^c01017cc:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01017cf	obj/kernel.asm	/^c01017cf:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01017d3	obj/kernel.asm	/^c01017d3:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01017d7	obj/kernel.asm	/^c01017d7:	89 c2                	mov    %eax,%edx$/;"	l
c01017d9	obj/kernel.asm	/^c01017d9:	ec                   	in     (%dx),%al$/;"	l
c01017da	obj/kernel.asm	/^c01017da:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01017dd	obj/kernel.asm	/^c01017dd:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01017e1	obj/kernel.asm	/^c01017e1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01017e4	obj/kernel.asm	/^c01017e4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01017e7	obj/kernel.asm	/^c01017e7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01017ea	obj/kernel.asm	/^c01017ea:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c01017ef	obj/kernel.asm	/^c01017ef:	85 c0                	test   %eax,%eax$/;"	l
c01017f1	obj/kernel.asm	/^c01017f1:	75 d2                	jne    c01017c5 <ide_wait_ready+0xe>$/;"	l
c01017f3	obj/kernel.asm	/^c01017f3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01017f7	obj/kernel.asm	/^c01017f7:	74 11                	je     c010180a <ide_wait_ready+0x53>$/;"	l
c01017f9	obj/kernel.asm	/^c01017f9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01017fc	obj/kernel.asm	/^c01017fc:	83 e0 21             	and    $0x21,%eax$/;"	l
c01017ff	obj/kernel.asm	/^c01017ff:	85 c0                	test   %eax,%eax$/;"	l
c0101801	obj/kernel.asm	/^c0101801:	74 07                	je     c010180a <ide_wait_ready+0x53>$/;"	l
c0101803	obj/kernel.asm	/^c0101803:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101808	obj/kernel.asm	/^c0101808:	eb 05                	jmp    c010180f <ide_wait_ready+0x58>$/;"	l
c010180a	obj/kernel.asm	/^c010180a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010180f	obj/kernel.asm	/^c010180f:	c9                   	leave  $/;"	l
c0101810	obj/kernel.asm	/^c0101810:	c3                   	ret    $/;"	l
c0101811	obj/kernel.asm	/^c0101811 <ide_init>:$/;"	l
c0101811	obj/kernel.asm	/^c0101811:	55                   	push   %ebp$/;"	l
c0101812	obj/kernel.asm	/^c0101812:	89 e5                	mov    %esp,%ebp$/;"	l
c0101814	obj/kernel.asm	/^c0101814:	57                   	push   %edi$/;"	l
c0101815	obj/kernel.asm	/^c0101815:	53                   	push   %ebx$/;"	l
c0101816	obj/kernel.asm	/^c0101816:	81 ec 50 02 00 00    	sub    $0x250,%esp$/;"	l
c010181c	obj/kernel.asm	/^c010181c:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c0101822	obj/kernel.asm	/^c0101822:	e9 d6 02 00 00       	jmp    c0101afd <ide_init+0x2ec>$/;"	l
c0101827	obj/kernel.asm	/^c0101827:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010182b	obj/kernel.asm	/^c010182b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010182e	obj/kernel.asm	/^c010182e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101835	obj/kernel.asm	/^c0101835:	29 c2                	sub    %eax,%edx$/;"	l
c0101837	obj/kernel.asm	/^c0101837:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c010183d	obj/kernel.asm	/^c010183d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101840	obj/kernel.asm	/^c0101840:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101844	obj/kernel.asm	/^c0101844:	66 d1 e8             	shr    %ax$/;"	l
c0101847	obj/kernel.asm	/^c0101847:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010184a	obj/kernel.asm	/^c010184a:	0f b7 04 85 88 c7 10 	movzwl -0x3fef3878(,%eax,4),%eax$/;"	l
c0101851	obj/kernel.asm	/^c0101851:	c0 $/;"	l
c0101852	obj/kernel.asm	/^c0101852:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101856	obj/kernel.asm	/^c0101856:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c010185a	obj/kernel.asm	/^c010185a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101861	obj/kernel.asm	/^c0101861:	00 $/;"	l
c0101862	obj/kernel.asm	/^c0101862:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101865	obj/kernel.asm	/^c0101865:	e8 4d ff ff ff       	call   c01017b7 <ide_wait_ready>$/;"	l
c010186a	obj/kernel.asm	/^c010186a:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010186e	obj/kernel.asm	/^c010186e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101871	obj/kernel.asm	/^c0101871:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101874	obj/kernel.asm	/^c0101874:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101877	obj/kernel.asm	/^c0101877:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010187a	obj/kernel.asm	/^c010187a:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010187e	obj/kernel.asm	/^c010187e:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101881	obj/kernel.asm	/^c0101881:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101884	obj/kernel.asm	/^c0101884:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0101888	obj/kernel.asm	/^c0101888:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c010188b	obj/kernel.asm	/^c010188b:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c010188f	obj/kernel.asm	/^c010188f:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0101893	obj/kernel.asm	/^c0101893:	ee                   	out    %al,(%dx)$/;"	l
c0101894	obj/kernel.asm	/^c0101894:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101898	obj/kernel.asm	/^c0101898:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010189f	obj/kernel.asm	/^c010189f:	00 $/;"	l
c01018a0	obj/kernel.asm	/^c01018a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01018a3	obj/kernel.asm	/^c01018a3:	e8 0f ff ff ff       	call   c01017b7 <ide_wait_ready>$/;"	l
c01018a8	obj/kernel.asm	/^c01018a8:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01018ac	obj/kernel.asm	/^c01018ac:	83 c0 07             	add    $0x7,%eax$/;"	l
c01018af	obj/kernel.asm	/^c01018af:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018b2	obj/kernel.asm	/^c01018b2:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c01018b6	obj/kernel.asm	/^c01018b6:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c01018ba	obj/kernel.asm	/^c01018ba:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01018be	obj/kernel.asm	/^c01018be:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01018c2	obj/kernel.asm	/^c01018c2:	ee                   	out    %al,(%dx)$/;"	l
c01018c3	obj/kernel.asm	/^c01018c3:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01018c7	obj/kernel.asm	/^c01018c7:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01018ce	obj/kernel.asm	/^c01018ce:	00 $/;"	l
c01018cf	obj/kernel.asm	/^c01018cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01018d2	obj/kernel.asm	/^c01018d2:	e8 e0 fe ff ff       	call   c01017b7 <ide_wait_ready>$/;"	l
c01018d7	obj/kernel.asm	/^c01018d7:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01018db	obj/kernel.asm	/^c01018db:	83 c0 07             	add    $0x7,%eax$/;"	l
c01018de	obj/kernel.asm	/^c01018de:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018e1	obj/kernel.asm	/^c01018e1:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c01018e5	obj/kernel.asm	/^c01018e5:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c01018e9	obj/kernel.asm	/^c01018e9:	89 c2                	mov    %eax,%edx$/;"	l
c01018eb	obj/kernel.asm	/^c01018eb:	ec                   	in     (%dx),%al$/;"	l
c01018ec	obj/kernel.asm	/^c01018ec:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c01018ef	obj/kernel.asm	/^c01018ef:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c01018f3	obj/kernel.asm	/^c01018f3:	84 c0                	test   %al,%al$/;"	l
c01018f5	obj/kernel.asm	/^c01018f5:	0f 84 f7 01 00 00    	je     c0101af2 <ide_init+0x2e1>$/;"	l
c01018fb	obj/kernel.asm	/^c01018fb:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01018ff	obj/kernel.asm	/^c01018ff:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101906	obj/kernel.asm	/^c0101906:	00 $/;"	l
c0101907	obj/kernel.asm	/^c0101907:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010190a	obj/kernel.asm	/^c010190a:	e8 a8 fe ff ff       	call   c01017b7 <ide_wait_ready>$/;"	l
c010190f	obj/kernel.asm	/^c010190f:	85 c0                	test   %eax,%eax$/;"	l
c0101911	obj/kernel.asm	/^c0101911:	0f 85 db 01 00 00    	jne    c0101af2 <ide_init+0x2e1>$/;"	l
c0101917	obj/kernel.asm	/^c0101917:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010191b	obj/kernel.asm	/^c010191b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010191e	obj/kernel.asm	/^c010191e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101925	obj/kernel.asm	/^c0101925:	29 c2                	sub    %eax,%edx$/;"	l
c0101927	obj/kernel.asm	/^c0101927:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c010192d	obj/kernel.asm	/^c010192d:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0101930	obj/kernel.asm	/^c0101930:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101934	obj/kernel.asm	/^c0101934:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0101937	obj/kernel.asm	/^c0101937:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c010193d	obj/kernel.asm	/^c010193d:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0101940	obj/kernel.asm	/^c0101940:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0101947	obj/kernel.asm	/^c0101947:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c010194a	obj/kernel.asm	/^c010194a:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c010194d	obj/kernel.asm	/^c010194d:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0101950	obj/kernel.asm	/^c0101950:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101952	obj/kernel.asm	/^c0101952:	89 df                	mov    %ebx,%edi$/;"	l
c0101954	obj/kernel.asm	/^c0101954:	89 c1                	mov    %eax,%ecx$/;"	l
c0101956	obj/kernel.asm	/^c0101956:	fc                   	cld    $/;"	l
c0101957	obj/kernel.asm	/^c0101957:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101959	obj/kernel.asm	/^c0101959:	89 c8                	mov    %ecx,%eax$/;"	l
c010195b	obj/kernel.asm	/^c010195b:	89 fb                	mov    %edi,%ebx$/;"	l
c010195d	obj/kernel.asm	/^c010195d:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c0101960	obj/kernel.asm	/^c0101960:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0101963	obj/kernel.asm	/^c0101963:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010196c	obj/kernel.asm	/^c010196c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010196f	obj/kernel.asm	/^c010196f:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0101975	obj/kernel.asm	/^c0101975:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0101978	obj/kernel.asm	/^c0101978:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010197b	obj/kernel.asm	/^c010197b:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c0101980	obj/kernel.asm	/^c0101980:	85 c0                	test   %eax,%eax$/;"	l
c0101982	obj/kernel.asm	/^c0101982:	74 0e                	je     c0101992 <ide_init+0x181>$/;"	l
c0101984	obj/kernel.asm	/^c0101984:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101987	obj/kernel.asm	/^c0101987:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c010198d	obj/kernel.asm	/^c010198d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101990	obj/kernel.asm	/^c0101990:	eb 09                	jmp    c010199b <ide_init+0x18a>$/;"	l
c0101992	obj/kernel.asm	/^c0101992:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101995	obj/kernel.asm	/^c0101995:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0101998	obj/kernel.asm	/^c0101998:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010199b	obj/kernel.asm	/^c010199b:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010199f	obj/kernel.asm	/^c010199f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01019a2	obj/kernel.asm	/^c01019a2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01019a9	obj/kernel.asm	/^c01019a9:	29 c2                	sub    %eax,%edx$/;"	l
c01019ab	obj/kernel.asm	/^c01019ab:	81 c2 60 f4 1a c0    	add    $0xc01af460,%edx$/;"	l
c01019b1	obj/kernel.asm	/^c01019b1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01019b4	obj/kernel.asm	/^c01019b4:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c01019b7	obj/kernel.asm	/^c01019b7:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01019bb	obj/kernel.asm	/^c01019bb:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01019be	obj/kernel.asm	/^c01019be:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01019c5	obj/kernel.asm	/^c01019c5:	29 c2                	sub    %eax,%edx$/;"	l
c01019c7	obj/kernel.asm	/^c01019c7:	81 c2 60 f4 1a c0    	add    $0xc01af460,%edx$/;"	l
c01019cd	obj/kernel.asm	/^c01019cd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01019d0	obj/kernel.asm	/^c01019d0:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c01019d3	obj/kernel.asm	/^c01019d3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01019d6	obj/kernel.asm	/^c01019d6:	83 c0 62             	add    $0x62,%eax$/;"	l
c01019d9	obj/kernel.asm	/^c01019d9:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01019dc	obj/kernel.asm	/^c01019dc:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019df	obj/kernel.asm	/^c01019df:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01019e4	obj/kernel.asm	/^c01019e4:	85 c0                	test   %eax,%eax$/;"	l
c01019e6	obj/kernel.asm	/^c01019e6:	75 24                	jne    c0101a0c <ide_init+0x1fb>$/;"	l
c01019e8	obj/kernel.asm	/^c01019e8:	c7 44 24 0c 90 c7 10 	movl   $0xc010c790,0xc(%esp)$/;"	l
c01019ef	obj/kernel.asm	/^c01019ef:	c0 $/;"	l
c01019f0	obj/kernel.asm	/^c01019f0:	c7 44 24 08 d3 c7 10 	movl   $0xc010c7d3,0x8(%esp)$/;"	l
c01019f7	obj/kernel.asm	/^c01019f7:	c0 $/;"	l
c01019f8	obj/kernel.asm	/^c01019f8:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c01019ff	obj/kernel.asm	/^c01019ff:	00 $/;"	l
c0101a00	obj/kernel.asm	/^c0101a00:	c7 04 24 e8 c7 10 c0 	movl   $0xc010c7e8,(%esp)$/;"	l
c0101a07	obj/kernel.asm	/^c0101a07:	e8 ce f3 ff ff       	call   c0100dda <__panic>$/;"	l
c0101a0c	obj/kernel.asm	/^c0101a0c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101a10	obj/kernel.asm	/^c0101a10:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101a13	obj/kernel.asm	/^c0101a13:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101a1a	obj/kernel.asm	/^c0101a1a:	29 c2                	sub    %eax,%edx$/;"	l
c0101a1c	obj/kernel.asm	/^c0101a1c:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c0101a22	obj/kernel.asm	/^c0101a22:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0101a25	obj/kernel.asm	/^c0101a25:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0101a28	obj/kernel.asm	/^c0101a28:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101a2b	obj/kernel.asm	/^c0101a2b:	83 c0 36             	add    $0x36,%eax$/;"	l
c0101a2e	obj/kernel.asm	/^c0101a2e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0101a31	obj/kernel.asm	/^c0101a31:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0101a38	obj/kernel.asm	/^c0101a38:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0101a3f	obj/kernel.asm	/^c0101a3f:	eb 34                	jmp    c0101a75 <ide_init+0x264>$/;"	l
c0101a41	obj/kernel.asm	/^c0101a41:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a44	obj/kernel.asm	/^c0101a44:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101a47	obj/kernel.asm	/^c0101a47:	01 c2                	add    %eax,%edx$/;"	l
c0101a49	obj/kernel.asm	/^c0101a49:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a4c	obj/kernel.asm	/^c0101a4c:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0101a4f	obj/kernel.asm	/^c0101a4f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0101a52	obj/kernel.asm	/^c0101a52:	01 c8                	add    %ecx,%eax$/;"	l
c0101a54	obj/kernel.asm	/^c0101a54:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101a57	obj/kernel.asm	/^c0101a57:	88 02                	mov    %al,(%edx)$/;"	l
c0101a59	obj/kernel.asm	/^c0101a59:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a5c	obj/kernel.asm	/^c0101a5c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101a5f	obj/kernel.asm	/^c0101a5f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101a62	obj/kernel.asm	/^c0101a62:	01 c2                	add    %eax,%edx$/;"	l
c0101a64	obj/kernel.asm	/^c0101a64:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a67	obj/kernel.asm	/^c0101a67:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101a6a	obj/kernel.asm	/^c0101a6a:	01 c8                	add    %ecx,%eax$/;"	l
c0101a6c	obj/kernel.asm	/^c0101a6c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101a6f	obj/kernel.asm	/^c0101a6f:	88 02                	mov    %al,(%edx)$/;"	l
c0101a71	obj/kernel.asm	/^c0101a71:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c0101a75	obj/kernel.asm	/^c0101a75:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a78	obj/kernel.asm	/^c0101a78:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0101a7b	obj/kernel.asm	/^c0101a7b:	72 c4                	jb     c0101a41 <ide_init+0x230>$/;"	l
c0101a7d	obj/kernel.asm	/^c0101a7d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a80	obj/kernel.asm	/^c0101a80:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101a83	obj/kernel.asm	/^c0101a83:	01 d0                	add    %edx,%eax$/;"	l
c0101a85	obj/kernel.asm	/^c0101a85:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101a88	obj/kernel.asm	/^c0101a88:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a8b	obj/kernel.asm	/^c0101a8b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0101a8e	obj/kernel.asm	/^c0101a8e:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0101a91	obj/kernel.asm	/^c0101a91:	85 c0                	test   %eax,%eax$/;"	l
c0101a93	obj/kernel.asm	/^c0101a93:	74 0f                	je     c0101aa4 <ide_init+0x293>$/;"	l
c0101a95	obj/kernel.asm	/^c0101a95:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101a98	obj/kernel.asm	/^c0101a98:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101a9b	obj/kernel.asm	/^c0101a9b:	01 d0                	add    %edx,%eax$/;"	l
c0101a9d	obj/kernel.asm	/^c0101a9d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101aa0	obj/kernel.asm	/^c0101aa0:	3c 20                	cmp    $0x20,%al$/;"	l
c0101aa2	obj/kernel.asm	/^c0101aa2:	74 d9                	je     c0101a7d <ide_init+0x26c>$/;"	l
c0101aa4	obj/kernel.asm	/^c0101aa4:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101aa8	obj/kernel.asm	/^c0101aa8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101aab	obj/kernel.asm	/^c0101aab:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101ab2	obj/kernel.asm	/^c0101ab2:	29 c2                	sub    %eax,%edx$/;"	l
c0101ab4	obj/kernel.asm	/^c0101ab4:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c0101aba	obj/kernel.asm	/^c0101aba:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c0101abd	obj/kernel.asm	/^c0101abd:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101ac1	obj/kernel.asm	/^c0101ac1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101ac4	obj/kernel.asm	/^c0101ac4:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101acb	obj/kernel.asm	/^c0101acb:	29 c2                	sub    %eax,%edx$/;"	l
c0101acd	obj/kernel.asm	/^c0101acd:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c0101ad3	obj/kernel.asm	/^c0101ad3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0101ad6	obj/kernel.asm	/^c0101ad6:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101ada	obj/kernel.asm	/^c0101ada:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0101ade	obj/kernel.asm	/^c0101ade:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0101ae2	obj/kernel.asm	/^c0101ae2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101ae6	obj/kernel.asm	/^c0101ae6:	c7 04 24 fa c7 10 c0 	movl   $0xc010c7fa,(%esp)$/;"	l
c0101aed	obj/kernel.asm	/^c0101aed:	e8 66 e8 ff ff       	call   c0100358 <cprintf>$/;"	l
c0101af2	obj/kernel.asm	/^c0101af2:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101af6	obj/kernel.asm	/^c0101af6:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101af9	obj/kernel.asm	/^c0101af9:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c0101afd	obj/kernel.asm	/^c0101afd:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c0101b02	obj/kernel.asm	/^c0101b02:	0f 86 1f fd ff ff    	jbe    c0101827 <ide_init+0x16>$/;"	l
c0101b08	obj/kernel.asm	/^c0101b08:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)$/;"	l
c0101b0f	obj/kernel.asm	/^c0101b0f:	e8 7c 05 00 00       	call   c0102090 <pic_enable>$/;"	l
c0101b14	obj/kernel.asm	/^c0101b14:	c7 04 24 0f 00 00 00 	movl   $0xf,(%esp)$/;"	l
c0101b1b	obj/kernel.asm	/^c0101b1b:	e8 70 05 00 00       	call   c0102090 <pic_enable>$/;"	l
c0101b20	obj/kernel.asm	/^c0101b20:	81 c4 50 02 00 00    	add    $0x250,%esp$/;"	l
c0101b26	obj/kernel.asm	/^c0101b26:	5b                   	pop    %ebx$/;"	l
c0101b27	obj/kernel.asm	/^c0101b27:	5f                   	pop    %edi$/;"	l
c0101b28	obj/kernel.asm	/^c0101b28:	5d                   	pop    %ebp$/;"	l
c0101b29	obj/kernel.asm	/^c0101b29:	c3                   	ret    $/;"	l
c0101b2a	obj/kernel.asm	/^c0101b2a <ide_device_valid>:$/;"	l
c0101b2a	obj/kernel.asm	/^c0101b2a:	55                   	push   %ebp$/;"	l
c0101b2b	obj/kernel.asm	/^c0101b2b:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b2d	obj/kernel.asm	/^c0101b2d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101b30	obj/kernel.asm	/^c0101b30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101b33	obj/kernel.asm	/^c0101b33:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101b37	obj/kernel.asm	/^c0101b37:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c0101b3c	obj/kernel.asm	/^c0101b3c:	77 24                	ja     c0101b62 <ide_device_valid+0x38>$/;"	l
c0101b3e	obj/kernel.asm	/^c0101b3e:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101b42	obj/kernel.asm	/^c0101b42:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101b45	obj/kernel.asm	/^c0101b45:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101b4c	obj/kernel.asm	/^c0101b4c:	29 c2                	sub    %eax,%edx$/;"	l
c0101b4e	obj/kernel.asm	/^c0101b4e:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c0101b54	obj/kernel.asm	/^c0101b54:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b57	obj/kernel.asm	/^c0101b57:	84 c0                	test   %al,%al$/;"	l
c0101b59	obj/kernel.asm	/^c0101b59:	74 07                	je     c0101b62 <ide_device_valid+0x38>$/;"	l
c0101b5b	obj/kernel.asm	/^c0101b5b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101b60	obj/kernel.asm	/^c0101b60:	eb 05                	jmp    c0101b67 <ide_device_valid+0x3d>$/;"	l
c0101b62	obj/kernel.asm	/^c0101b62:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101b67	obj/kernel.asm	/^c0101b67:	c9                   	leave  $/;"	l
c0101b68	obj/kernel.asm	/^c0101b68:	c3                   	ret    $/;"	l
c0101b69	obj/kernel.asm	/^c0101b69 <ide_device_size>:$/;"	l
c0101b69	obj/kernel.asm	/^c0101b69:	55                   	push   %ebp$/;"	l
c0101b6a	obj/kernel.asm	/^c0101b6a:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b6c	obj/kernel.asm	/^c0101b6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101b6f	obj/kernel.asm	/^c0101b6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101b72	obj/kernel.asm	/^c0101b72:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101b76	obj/kernel.asm	/^c0101b76:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101b7a	obj/kernel.asm	/^c0101b7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101b7d	obj/kernel.asm	/^c0101b7d:	e8 a8 ff ff ff       	call   c0101b2a <ide_device_valid>$/;"	l
c0101b82	obj/kernel.asm	/^c0101b82:	85 c0                	test   %eax,%eax$/;"	l
c0101b84	obj/kernel.asm	/^c0101b84:	74 1b                	je     c0101ba1 <ide_device_size+0x38>$/;"	l
c0101b86	obj/kernel.asm	/^c0101b86:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101b8a	obj/kernel.asm	/^c0101b8a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101b8d	obj/kernel.asm	/^c0101b8d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101b94	obj/kernel.asm	/^c0101b94:	29 c2                	sub    %eax,%edx$/;"	l
c0101b96	obj/kernel.asm	/^c0101b96:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c0101b9c	obj/kernel.asm	/^c0101b9c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101b9f	obj/kernel.asm	/^c0101b9f:	eb 05                	jmp    c0101ba6 <ide_device_size+0x3d>$/;"	l
c0101ba1	obj/kernel.asm	/^c0101ba1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101ba6	obj/kernel.asm	/^c0101ba6:	c9                   	leave  $/;"	l
c0101ba7	obj/kernel.asm	/^c0101ba7:	c3                   	ret    $/;"	l
c0101ba8	obj/kernel.asm	/^c0101ba8 <ide_read_secs>:$/;"	l
c0101ba8	obj/kernel.asm	/^c0101ba8:	55                   	push   %ebp$/;"	l
c0101ba9	obj/kernel.asm	/^c0101ba9:	89 e5                	mov    %esp,%ebp$/;"	l
c0101bab	obj/kernel.asm	/^c0101bab:	57                   	push   %edi$/;"	l
c0101bac	obj/kernel.asm	/^c0101bac:	53                   	push   %ebx$/;"	l
c0101bad	obj/kernel.asm	/^c0101bad:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101bb0	obj/kernel.asm	/^c0101bb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101bb3	obj/kernel.asm	/^c0101bb3:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101bb7	obj/kernel.asm	/^c0101bb7:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101bbe	obj/kernel.asm	/^c0101bbe:	77 24                	ja     c0101be4 <ide_read_secs+0x3c>$/;"	l
c0101bc0	obj/kernel.asm	/^c0101bc0:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101bc5	obj/kernel.asm	/^c0101bc5:	77 1d                	ja     c0101be4 <ide_read_secs+0x3c>$/;"	l
c0101bc7	obj/kernel.asm	/^c0101bc7:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101bcb	obj/kernel.asm	/^c0101bcb:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101bce	obj/kernel.asm	/^c0101bce:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101bd5	obj/kernel.asm	/^c0101bd5:	29 c2                	sub    %eax,%edx$/;"	l
c0101bd7	obj/kernel.asm	/^c0101bd7:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c0101bdd	obj/kernel.asm	/^c0101bdd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101be0	obj/kernel.asm	/^c0101be0:	84 c0                	test   %al,%al$/;"	l
c0101be2	obj/kernel.asm	/^c0101be2:	75 24                	jne    c0101c08 <ide_read_secs+0x60>$/;"	l
c0101be4	obj/kernel.asm	/^c0101be4:	c7 44 24 0c 18 c8 10 	movl   $0xc010c818,0xc(%esp)$/;"	l
c0101beb	obj/kernel.asm	/^c0101beb:	c0 $/;"	l
c0101bec	obj/kernel.asm	/^c0101bec:	c7 44 24 08 d3 c7 10 	movl   $0xc010c7d3,0x8(%esp)$/;"	l
c0101bf3	obj/kernel.asm	/^c0101bf3:	c0 $/;"	l
c0101bf4	obj/kernel.asm	/^c0101bf4:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
c0101bfb	obj/kernel.asm	/^c0101bfb:	00 $/;"	l
c0101bfc	obj/kernel.asm	/^c0101bfc:	c7 04 24 e8 c7 10 c0 	movl   $0xc010c7e8,(%esp)$/;"	l
c0101c03	obj/kernel.asm	/^c0101c03:	e8 d2 f1 ff ff       	call   c0100dda <__panic>$/;"	l
c0101c08	obj/kernel.asm	/^c0101c08:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101c0f	obj/kernel.asm	/^c0101c0f:	77 0f                	ja     c0101c20 <ide_read_secs+0x78>$/;"	l
c0101c11	obj/kernel.asm	/^c0101c11:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101c14	obj/kernel.asm	/^c0101c14:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101c17	obj/kernel.asm	/^c0101c17:	01 d0                	add    %edx,%eax$/;"	l
c0101c19	obj/kernel.asm	/^c0101c19:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101c1e	obj/kernel.asm	/^c0101c1e:	76 24                	jbe    c0101c44 <ide_read_secs+0x9c>$/;"	l
c0101c20	obj/kernel.asm	/^c0101c20:	c7 44 24 0c 40 c8 10 	movl   $0xc010c840,0xc(%esp)$/;"	l
c0101c27	obj/kernel.asm	/^c0101c27:	c0 $/;"	l
c0101c28	obj/kernel.asm	/^c0101c28:	c7 44 24 08 d3 c7 10 	movl   $0xc010c7d3,0x8(%esp)$/;"	l
c0101c2f	obj/kernel.asm	/^c0101c2f:	c0 $/;"	l
c0101c30	obj/kernel.asm	/^c0101c30:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c0101c37	obj/kernel.asm	/^c0101c37:	00 $/;"	l
c0101c38	obj/kernel.asm	/^c0101c38:	c7 04 24 e8 c7 10 c0 	movl   $0xc010c7e8,(%esp)$/;"	l
c0101c3f	obj/kernel.asm	/^c0101c3f:	e8 96 f1 ff ff       	call   c0100dda <__panic>$/;"	l
c0101c44	obj/kernel.asm	/^c0101c44:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101c48	obj/kernel.asm	/^c0101c48:	66 d1 e8             	shr    %ax$/;"	l
c0101c4b	obj/kernel.asm	/^c0101c4b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101c4e	obj/kernel.asm	/^c0101c4e:	0f b7 04 85 88 c7 10 	movzwl -0x3fef3878(,%eax,4),%eax$/;"	l
c0101c55	obj/kernel.asm	/^c0101c55:	c0 $/;"	l
c0101c56	obj/kernel.asm	/^c0101c56:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101c5a	obj/kernel.asm	/^c0101c5a:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101c5e	obj/kernel.asm	/^c0101c5e:	66 d1 e8             	shr    %ax$/;"	l
c0101c61	obj/kernel.asm	/^c0101c61:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101c64	obj/kernel.asm	/^c0101c64:	0f b7 04 85 8a c7 10 	movzwl -0x3fef3876(,%eax,4),%eax$/;"	l
c0101c6b	obj/kernel.asm	/^c0101c6b:	c0 $/;"	l
c0101c6c	obj/kernel.asm	/^c0101c6c:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101c70	obj/kernel.asm	/^c0101c70:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101c74	obj/kernel.asm	/^c0101c74:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101c7b	obj/kernel.asm	/^c0101c7b:	00 $/;"	l
c0101c7c	obj/kernel.asm	/^c0101c7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101c7f	obj/kernel.asm	/^c0101c7f:	e8 33 fb ff ff       	call   c01017b7 <ide_wait_ready>$/;"	l
c0101c84	obj/kernel.asm	/^c0101c84:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101c88	obj/kernel.asm	/^c0101c88:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101c8b	obj/kernel.asm	/^c0101c8b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101c8e	obj/kernel.asm	/^c0101c8e:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101c92	obj/kernel.asm	/^c0101c92:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101c96	obj/kernel.asm	/^c0101c96:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101c9a	obj/kernel.asm	/^c0101c9a:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101c9e	obj/kernel.asm	/^c0101c9e:	ee                   	out    %al,(%dx)$/;"	l
c0101c9f	obj/kernel.asm	/^c0101c9f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101ca2	obj/kernel.asm	/^c0101ca2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ca5	obj/kernel.asm	/^c0101ca5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101ca9	obj/kernel.asm	/^c0101ca9:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101cac	obj/kernel.asm	/^c0101cac:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101caf	obj/kernel.asm	/^c0101caf:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101cb3	obj/kernel.asm	/^c0101cb3:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101cb6	obj/kernel.asm	/^c0101cb6:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101cba	obj/kernel.asm	/^c0101cba:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101cbe	obj/kernel.asm	/^c0101cbe:	ee                   	out    %al,(%dx)$/;"	l
c0101cbf	obj/kernel.asm	/^c0101cbf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101cc2	obj/kernel.asm	/^c0101cc2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cc5	obj/kernel.asm	/^c0101cc5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101cc9	obj/kernel.asm	/^c0101cc9:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101ccc	obj/kernel.asm	/^c0101ccc:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101ccf	obj/kernel.asm	/^c0101ccf:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101cd3	obj/kernel.asm	/^c0101cd3:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101cd6	obj/kernel.asm	/^c0101cd6:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101cda	obj/kernel.asm	/^c0101cda:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101cde	obj/kernel.asm	/^c0101cde:	ee                   	out    %al,(%dx)$/;"	l
c0101cdf	obj/kernel.asm	/^c0101cdf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101ce2	obj/kernel.asm	/^c0101ce2:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101ce5	obj/kernel.asm	/^c0101ce5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ce8	obj/kernel.asm	/^c0101ce8:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101cec	obj/kernel.asm	/^c0101cec:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101cef	obj/kernel.asm	/^c0101cef:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101cf2	obj/kernel.asm	/^c0101cf2:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101cf6	obj/kernel.asm	/^c0101cf6:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101cf9	obj/kernel.asm	/^c0101cf9:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101cfd	obj/kernel.asm	/^c0101cfd:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101d01	obj/kernel.asm	/^c0101d01:	ee                   	out    %al,(%dx)$/;"	l
c0101d02	obj/kernel.asm	/^c0101d02:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101d05	obj/kernel.asm	/^c0101d05:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101d08	obj/kernel.asm	/^c0101d08:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d0b	obj/kernel.asm	/^c0101d0b:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101d0f	obj/kernel.asm	/^c0101d0f:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101d12	obj/kernel.asm	/^c0101d12:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101d15	obj/kernel.asm	/^c0101d15:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101d19	obj/kernel.asm	/^c0101d19:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101d1c	obj/kernel.asm	/^c0101d1c:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101d20	obj/kernel.asm	/^c0101d20:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101d24	obj/kernel.asm	/^c0101d24:	ee                   	out    %al,(%dx)$/;"	l
c0101d25	obj/kernel.asm	/^c0101d25:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101d29	obj/kernel.asm	/^c0101d29:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101d2c	obj/kernel.asm	/^c0101d2c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101d2f	obj/kernel.asm	/^c0101d2f:	89 c2                	mov    %eax,%edx$/;"	l
c0101d31	obj/kernel.asm	/^c0101d31:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101d34	obj/kernel.asm	/^c0101d34:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101d37	obj/kernel.asm	/^c0101d37:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101d3a	obj/kernel.asm	/^c0101d3a:	09 d0                	or     %edx,%eax$/;"	l
c0101d3c	obj/kernel.asm	/^c0101d3c:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101d3f	obj/kernel.asm	/^c0101d3f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d42	obj/kernel.asm	/^c0101d42:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101d46	obj/kernel.asm	/^c0101d46:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101d49	obj/kernel.asm	/^c0101d49:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101d4c	obj/kernel.asm	/^c0101d4c:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101d50	obj/kernel.asm	/^c0101d50:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101d53	obj/kernel.asm	/^c0101d53:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101d57	obj/kernel.asm	/^c0101d57:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101d5b	obj/kernel.asm	/^c0101d5b:	ee                   	out    %al,(%dx)$/;"	l
c0101d5c	obj/kernel.asm	/^c0101d5c:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101d60	obj/kernel.asm	/^c0101d60:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101d63	obj/kernel.asm	/^c0101d63:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101d66	obj/kernel.asm	/^c0101d66:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101d6a	obj/kernel.asm	/^c0101d6a:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c0101d6e	obj/kernel.asm	/^c0101d6e:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101d72	obj/kernel.asm	/^c0101d72:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101d76	obj/kernel.asm	/^c0101d76:	ee                   	out    %al,(%dx)$/;"	l
c0101d77	obj/kernel.asm	/^c0101d77:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101d7e	obj/kernel.asm	/^c0101d7e:	eb 5a                	jmp    c0101dda <ide_read_secs+0x232>$/;"	l
c0101d80	obj/kernel.asm	/^c0101d80:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101d84	obj/kernel.asm	/^c0101d84:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101d8b	obj/kernel.asm	/^c0101d8b:	00 $/;"	l
c0101d8c	obj/kernel.asm	/^c0101d8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101d8f	obj/kernel.asm	/^c0101d8f:	e8 23 fa ff ff       	call   c01017b7 <ide_wait_ready>$/;"	l
c0101d94	obj/kernel.asm	/^c0101d94:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101d97	obj/kernel.asm	/^c0101d97:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101d9b	obj/kernel.asm	/^c0101d9b:	74 02                	je     c0101d9f <ide_read_secs+0x1f7>$/;"	l
c0101d9d	obj/kernel.asm	/^c0101d9d:	eb 41                	jmp    c0101de0 <ide_read_secs+0x238>$/;"	l
c0101d9f	obj/kernel.asm	/^c0101d9f:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101da3	obj/kernel.asm	/^c0101da3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101da6	obj/kernel.asm	/^c0101da6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101da9	obj/kernel.asm	/^c0101da9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101dac	obj/kernel.asm	/^c0101dac:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101db3	obj/kernel.asm	/^c0101db3:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101db6	obj/kernel.asm	/^c0101db6:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101db9	obj/kernel.asm	/^c0101db9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101dbc	obj/kernel.asm	/^c0101dbc:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101dbe	obj/kernel.asm	/^c0101dbe:	89 df                	mov    %ebx,%edi$/;"	l
c0101dc0	obj/kernel.asm	/^c0101dc0:	89 c1                	mov    %eax,%ecx$/;"	l
c0101dc2	obj/kernel.asm	/^c0101dc2:	fc                   	cld    $/;"	l
c0101dc3	obj/kernel.asm	/^c0101dc3:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101dc5	obj/kernel.asm	/^c0101dc5:	89 c8                	mov    %ecx,%eax$/;"	l
c0101dc7	obj/kernel.asm	/^c0101dc7:	89 fb                	mov    %edi,%ebx$/;"	l
c0101dc9	obj/kernel.asm	/^c0101dc9:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101dcc	obj/kernel.asm	/^c0101dcc:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101dcf	obj/kernel.asm	/^c0101dcf:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101dd3	obj/kernel.asm	/^c0101dd3:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101dda	obj/kernel.asm	/^c0101dda:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101dde	obj/kernel.asm	/^c0101dde:	75 a0                	jne    c0101d80 <ide_read_secs+0x1d8>$/;"	l
c0101de0	obj/kernel.asm	/^c0101de0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101de3	obj/kernel.asm	/^c0101de3:	83 c4 50             	add    $0x50,%esp$/;"	l
c0101de6	obj/kernel.asm	/^c0101de6:	5b                   	pop    %ebx$/;"	l
c0101de7	obj/kernel.asm	/^c0101de7:	5f                   	pop    %edi$/;"	l
c0101de8	obj/kernel.asm	/^c0101de8:	5d                   	pop    %ebp$/;"	l
c0101de9	obj/kernel.asm	/^c0101de9:	c3                   	ret    $/;"	l
c0101dea	obj/kernel.asm	/^c0101dea <ide_write_secs>:$/;"	l
c0101dea	obj/kernel.asm	/^c0101dea:	55                   	push   %ebp$/;"	l
c0101deb	obj/kernel.asm	/^c0101deb:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ded	obj/kernel.asm	/^c0101ded:	56                   	push   %esi$/;"	l
c0101dee	obj/kernel.asm	/^c0101dee:	53                   	push   %ebx$/;"	l
c0101def	obj/kernel.asm	/^c0101def:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101df2	obj/kernel.asm	/^c0101df2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101df5	obj/kernel.asm	/^c0101df5:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101df9	obj/kernel.asm	/^c0101df9:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101e00	obj/kernel.asm	/^c0101e00:	77 24                	ja     c0101e26 <ide_write_secs+0x3c>$/;"	l
c0101e02	obj/kernel.asm	/^c0101e02:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101e07	obj/kernel.asm	/^c0101e07:	77 1d                	ja     c0101e26 <ide_write_secs+0x3c>$/;"	l
c0101e09	obj/kernel.asm	/^c0101e09:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101e0d	obj/kernel.asm	/^c0101e0d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101e10	obj/kernel.asm	/^c0101e10:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101e17	obj/kernel.asm	/^c0101e17:	29 c2                	sub    %eax,%edx$/;"	l
c0101e19	obj/kernel.asm	/^c0101e19:	8d 82 60 f4 1a c0    	lea    -0x3fe50ba0(%edx),%eax$/;"	l
c0101e1f	obj/kernel.asm	/^c0101e1f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101e22	obj/kernel.asm	/^c0101e22:	84 c0                	test   %al,%al$/;"	l
c0101e24	obj/kernel.asm	/^c0101e24:	75 24                	jne    c0101e4a <ide_write_secs+0x60>$/;"	l
c0101e26	obj/kernel.asm	/^c0101e26:	c7 44 24 0c 18 c8 10 	movl   $0xc010c818,0xc(%esp)$/;"	l
c0101e2d	obj/kernel.asm	/^c0101e2d:	c0 $/;"	l
c0101e2e	obj/kernel.asm	/^c0101e2e:	c7 44 24 08 d3 c7 10 	movl   $0xc010c7d3,0x8(%esp)$/;"	l
c0101e35	obj/kernel.asm	/^c0101e35:	c0 $/;"	l
c0101e36	obj/kernel.asm	/^c0101e36:	c7 44 24 04 bc 00 00 	movl   $0xbc,0x4(%esp)$/;"	l
c0101e3d	obj/kernel.asm	/^c0101e3d:	00 $/;"	l
c0101e3e	obj/kernel.asm	/^c0101e3e:	c7 04 24 e8 c7 10 c0 	movl   $0xc010c7e8,(%esp)$/;"	l
c0101e45	obj/kernel.asm	/^c0101e45:	e8 90 ef ff ff       	call   c0100dda <__panic>$/;"	l
c0101e4a	obj/kernel.asm	/^c0101e4a:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101e51	obj/kernel.asm	/^c0101e51:	77 0f                	ja     c0101e62 <ide_write_secs+0x78>$/;"	l
c0101e53	obj/kernel.asm	/^c0101e53:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101e56	obj/kernel.asm	/^c0101e56:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101e59	obj/kernel.asm	/^c0101e59:	01 d0                	add    %edx,%eax$/;"	l
c0101e5b	obj/kernel.asm	/^c0101e5b:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101e60	obj/kernel.asm	/^c0101e60:	76 24                	jbe    c0101e86 <ide_write_secs+0x9c>$/;"	l
c0101e62	obj/kernel.asm	/^c0101e62:	c7 44 24 0c 40 c8 10 	movl   $0xc010c840,0xc(%esp)$/;"	l
c0101e69	obj/kernel.asm	/^c0101e69:	c0 $/;"	l
c0101e6a	obj/kernel.asm	/^c0101e6a:	c7 44 24 08 d3 c7 10 	movl   $0xc010c7d3,0x8(%esp)$/;"	l
c0101e71	obj/kernel.asm	/^c0101e71:	c0 $/;"	l
c0101e72	obj/kernel.asm	/^c0101e72:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
c0101e79	obj/kernel.asm	/^c0101e79:	00 $/;"	l
c0101e7a	obj/kernel.asm	/^c0101e7a:	c7 04 24 e8 c7 10 c0 	movl   $0xc010c7e8,(%esp)$/;"	l
c0101e81	obj/kernel.asm	/^c0101e81:	e8 54 ef ff ff       	call   c0100dda <__panic>$/;"	l
c0101e86	obj/kernel.asm	/^c0101e86:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101e8a	obj/kernel.asm	/^c0101e8a:	66 d1 e8             	shr    %ax$/;"	l
c0101e8d	obj/kernel.asm	/^c0101e8d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101e90	obj/kernel.asm	/^c0101e90:	0f b7 04 85 88 c7 10 	movzwl -0x3fef3878(,%eax,4),%eax$/;"	l
c0101e97	obj/kernel.asm	/^c0101e97:	c0 $/;"	l
c0101e98	obj/kernel.asm	/^c0101e98:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101e9c	obj/kernel.asm	/^c0101e9c:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101ea0	obj/kernel.asm	/^c0101ea0:	66 d1 e8             	shr    %ax$/;"	l
c0101ea3	obj/kernel.asm	/^c0101ea3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101ea6	obj/kernel.asm	/^c0101ea6:	0f b7 04 85 8a c7 10 	movzwl -0x3fef3876(,%eax,4),%eax$/;"	l
c0101ead	obj/kernel.asm	/^c0101ead:	c0 $/;"	l
c0101eae	obj/kernel.asm	/^c0101eae:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101eb2	obj/kernel.asm	/^c0101eb2:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101eb6	obj/kernel.asm	/^c0101eb6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101ebd	obj/kernel.asm	/^c0101ebd:	00 $/;"	l
c0101ebe	obj/kernel.asm	/^c0101ebe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101ec1	obj/kernel.asm	/^c0101ec1:	e8 f1 f8 ff ff       	call   c01017b7 <ide_wait_ready>$/;"	l
c0101ec6	obj/kernel.asm	/^c0101ec6:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101eca	obj/kernel.asm	/^c0101eca:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101ecd	obj/kernel.asm	/^c0101ecd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101ed0	obj/kernel.asm	/^c0101ed0:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101ed4	obj/kernel.asm	/^c0101ed4:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101ed8	obj/kernel.asm	/^c0101ed8:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101edc	obj/kernel.asm	/^c0101edc:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101ee0	obj/kernel.asm	/^c0101ee0:	ee                   	out    %al,(%dx)$/;"	l
c0101ee1	obj/kernel.asm	/^c0101ee1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101ee4	obj/kernel.asm	/^c0101ee4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ee7	obj/kernel.asm	/^c0101ee7:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101eeb	obj/kernel.asm	/^c0101eeb:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101eee	obj/kernel.asm	/^c0101eee:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101ef1	obj/kernel.asm	/^c0101ef1:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101ef5	obj/kernel.asm	/^c0101ef5:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101ef8	obj/kernel.asm	/^c0101ef8:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101efc	obj/kernel.asm	/^c0101efc:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101f00	obj/kernel.asm	/^c0101f00:	ee                   	out    %al,(%dx)$/;"	l
c0101f01	obj/kernel.asm	/^c0101f01:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f04	obj/kernel.asm	/^c0101f04:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f07	obj/kernel.asm	/^c0101f07:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101f0b	obj/kernel.asm	/^c0101f0b:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101f0e	obj/kernel.asm	/^c0101f0e:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101f11	obj/kernel.asm	/^c0101f11:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101f15	obj/kernel.asm	/^c0101f15:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101f18	obj/kernel.asm	/^c0101f18:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101f1c	obj/kernel.asm	/^c0101f1c:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101f20	obj/kernel.asm	/^c0101f20:	ee                   	out    %al,(%dx)$/;"	l
c0101f21	obj/kernel.asm	/^c0101f21:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f24	obj/kernel.asm	/^c0101f24:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101f27	obj/kernel.asm	/^c0101f27:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f2a	obj/kernel.asm	/^c0101f2a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101f2e	obj/kernel.asm	/^c0101f2e:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101f31	obj/kernel.asm	/^c0101f31:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101f34	obj/kernel.asm	/^c0101f34:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101f38	obj/kernel.asm	/^c0101f38:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101f3b	obj/kernel.asm	/^c0101f3b:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101f3f	obj/kernel.asm	/^c0101f3f:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101f43	obj/kernel.asm	/^c0101f43:	ee                   	out    %al,(%dx)$/;"	l
c0101f44	obj/kernel.asm	/^c0101f44:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f47	obj/kernel.asm	/^c0101f47:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101f4a	obj/kernel.asm	/^c0101f4a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f4d	obj/kernel.asm	/^c0101f4d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101f51	obj/kernel.asm	/^c0101f51:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101f54	obj/kernel.asm	/^c0101f54:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101f57	obj/kernel.asm	/^c0101f57:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101f5b	obj/kernel.asm	/^c0101f5b:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101f5e	obj/kernel.asm	/^c0101f5e:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101f62	obj/kernel.asm	/^c0101f62:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101f66	obj/kernel.asm	/^c0101f66:	ee                   	out    %al,(%dx)$/;"	l
c0101f67	obj/kernel.asm	/^c0101f67:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101f6b	obj/kernel.asm	/^c0101f6b:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101f6e	obj/kernel.asm	/^c0101f6e:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101f71	obj/kernel.asm	/^c0101f71:	89 c2                	mov    %eax,%edx$/;"	l
c0101f73	obj/kernel.asm	/^c0101f73:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101f76	obj/kernel.asm	/^c0101f76:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101f79	obj/kernel.asm	/^c0101f79:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101f7c	obj/kernel.asm	/^c0101f7c:	09 d0                	or     %edx,%eax$/;"	l
c0101f7e	obj/kernel.asm	/^c0101f7e:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101f81	obj/kernel.asm	/^c0101f81:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f84	obj/kernel.asm	/^c0101f84:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101f88	obj/kernel.asm	/^c0101f88:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101f8b	obj/kernel.asm	/^c0101f8b:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101f8e	obj/kernel.asm	/^c0101f8e:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101f92	obj/kernel.asm	/^c0101f92:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101f95	obj/kernel.asm	/^c0101f95:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101f99	obj/kernel.asm	/^c0101f99:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101f9d	obj/kernel.asm	/^c0101f9d:	ee                   	out    %al,(%dx)$/;"	l
c0101f9e	obj/kernel.asm	/^c0101f9e:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101fa2	obj/kernel.asm	/^c0101fa2:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101fa5	obj/kernel.asm	/^c0101fa5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101fa8	obj/kernel.asm	/^c0101fa8:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101fac	obj/kernel.asm	/^c0101fac:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c0101fb0	obj/kernel.asm	/^c0101fb0:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101fb4	obj/kernel.asm	/^c0101fb4:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101fb8	obj/kernel.asm	/^c0101fb8:	ee                   	out    %al,(%dx)$/;"	l
c0101fb9	obj/kernel.asm	/^c0101fb9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101fc0	obj/kernel.asm	/^c0101fc0:	eb 5a                	jmp    c010201c <ide_write_secs+0x232>$/;"	l
c0101fc2	obj/kernel.asm	/^c0101fc2:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101fc6	obj/kernel.asm	/^c0101fc6:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101fcd	obj/kernel.asm	/^c0101fcd:	00 $/;"	l
c0101fce	obj/kernel.asm	/^c0101fce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101fd1	obj/kernel.asm	/^c0101fd1:	e8 e1 f7 ff ff       	call   c01017b7 <ide_wait_ready>$/;"	l
c0101fd6	obj/kernel.asm	/^c0101fd6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101fd9	obj/kernel.asm	/^c0101fd9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101fdd	obj/kernel.asm	/^c0101fdd:	74 02                	je     c0101fe1 <ide_write_secs+0x1f7>$/;"	l
c0101fdf	obj/kernel.asm	/^c0101fdf:	eb 41                	jmp    c0102022 <ide_write_secs+0x238>$/;"	l
c0101fe1	obj/kernel.asm	/^c0101fe1:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101fe5	obj/kernel.asm	/^c0101fe5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101fe8	obj/kernel.asm	/^c0101fe8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101feb	obj/kernel.asm	/^c0101feb:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101fee	obj/kernel.asm	/^c0101fee:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101ff5	obj/kernel.asm	/^c0101ff5:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101ff8	obj/kernel.asm	/^c0101ff8:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101ffb	obj/kernel.asm	/^c0101ffb:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101ffe	obj/kernel.asm	/^c0101ffe:	89 cb                	mov    %ecx,%ebx$/;"	l
c0102000	obj/kernel.asm	/^c0102000:	89 de                	mov    %ebx,%esi$/;"	l
c0102002	obj/kernel.asm	/^c0102002:	89 c1                	mov    %eax,%ecx$/;"	l
c0102004	obj/kernel.asm	/^c0102004:	fc                   	cld    $/;"	l
c0102005	obj/kernel.asm	/^c0102005:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c0102007	obj/kernel.asm	/^c0102007:	89 c8                	mov    %ecx,%eax$/;"	l
c0102009	obj/kernel.asm	/^c0102009:	89 f3                	mov    %esi,%ebx$/;"	l
c010200b	obj/kernel.asm	/^c010200b:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c010200e	obj/kernel.asm	/^c010200e:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0102011	obj/kernel.asm	/^c0102011:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0102015	obj/kernel.asm	/^c0102015:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c010201c	obj/kernel.asm	/^c010201c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0102020	obj/kernel.asm	/^c0102020:	75 a0                	jne    c0101fc2 <ide_write_secs+0x1d8>$/;"	l
c0102022	obj/kernel.asm	/^c0102022:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102025	obj/kernel.asm	/^c0102025:	83 c4 50             	add    $0x50,%esp$/;"	l
c0102028	obj/kernel.asm	/^c0102028:	5b                   	pop    %ebx$/;"	l
c0102029	obj/kernel.asm	/^c0102029:	5e                   	pop    %esi$/;"	l
c010202a	obj/kernel.asm	/^c010202a:	5d                   	pop    %ebp$/;"	l
c010202b	obj/kernel.asm	/^c010202b:	c3                   	ret    $/;"	l
c010202c	obj/kernel.asm	/^c010202c <intr_enable>:$/;"	l
c010202c	obj/kernel.asm	/^c010202c:	55                   	push   %ebp$/;"	l
c010202d	obj/kernel.asm	/^c010202d:	89 e5                	mov    %esp,%ebp$/;"	l
c010202f	obj/kernel.asm	/^c010202f:	fb                   	sti    $/;"	l
c0102030	obj/kernel.asm	/^c0102030:	5d                   	pop    %ebp$/;"	l
c0102031	obj/kernel.asm	/^c0102031:	c3                   	ret    $/;"	l
c0102032	obj/kernel.asm	/^c0102032 <intr_disable>:$/;"	l
c0102032	obj/kernel.asm	/^c0102032:	55                   	push   %ebp$/;"	l
c0102033	obj/kernel.asm	/^c0102033:	89 e5                	mov    %esp,%ebp$/;"	l
c0102035	obj/kernel.asm	/^c0102035:	fa                   	cli    $/;"	l
c0102036	obj/kernel.asm	/^c0102036:	5d                   	pop    %ebp$/;"	l
c0102037	obj/kernel.asm	/^c0102037:	c3                   	ret    $/;"	l
c0102038	obj/kernel.asm	/^c0102038 <pic_setmask>:$/;"	l
c0102038	obj/kernel.asm	/^c0102038:	55                   	push   %ebp$/;"	l
c0102039	obj/kernel.asm	/^c0102039:	89 e5                	mov    %esp,%ebp$/;"	l
c010203b	obj/kernel.asm	/^c010203b:	83 ec 14             	sub    $0x14,%esp$/;"	l
c010203e	obj/kernel.asm	/^c010203e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102041	obj/kernel.asm	/^c0102041:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0102045	obj/kernel.asm	/^c0102045:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102049	obj/kernel.asm	/^c0102049:	66 a3 70 d5 12 c0    	mov    %ax,0xc012d570$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	a1 40 f5 1a c0       	mov    0xc01af540,%eax$/;"	l
c0102054	obj/kernel.asm	/^c0102054:	85 c0                	test   %eax,%eax$/;"	l
c0102056	obj/kernel.asm	/^c0102056:	74 36                	je     c010208e <pic_setmask+0x56>$/;"	l
c0102058	obj/kernel.asm	/^c0102058:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c010205c	obj/kernel.asm	/^c010205c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010205f	obj/kernel.asm	/^c010205f:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0102065	obj/kernel.asm	/^c0102065:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0102068	obj/kernel.asm	/^c0102068:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c010206c	obj/kernel.asm	/^c010206c:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0102070	obj/kernel.asm	/^c0102070:	ee                   	out    %al,(%dx)$/;"	l
c0102071	obj/kernel.asm	/^c0102071:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102075	obj/kernel.asm	/^c0102075:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0102079	obj/kernel.asm	/^c0102079:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010207c	obj/kernel.asm	/^c010207c:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0102082	obj/kernel.asm	/^c0102082:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0102085	obj/kernel.asm	/^c0102085:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0102089	obj/kernel.asm	/^c0102089:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c010208d	obj/kernel.asm	/^c010208d:	ee                   	out    %al,(%dx)$/;"	l
c010208e	obj/kernel.asm	/^c010208e:	c9                   	leave  $/;"	l
c010208f	obj/kernel.asm	/^c010208f:	c3                   	ret    $/;"	l
c0102090	obj/kernel.asm	/^c0102090 <pic_enable>:$/;"	l
c0102090	obj/kernel.asm	/^c0102090:	55                   	push   %ebp$/;"	l
c0102091	obj/kernel.asm	/^c0102091:	89 e5                	mov    %esp,%ebp$/;"	l
c0102093	obj/kernel.asm	/^c0102093:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102096	obj/kernel.asm	/^c0102096:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102099	obj/kernel.asm	/^c0102099:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c010209e	obj/kernel.asm	/^c010209e:	89 c1                	mov    %eax,%ecx$/;"	l
c01020a0	obj/kernel.asm	/^c01020a0:	d3 e2                	shl    %cl,%edx$/;"	d
c01020a2	obj/kernel.asm	/^c01020a2:	89 d0                	mov    %edx,%eax$/;"	l
c01020a4	obj/kernel.asm	/^c01020a4:	f7 d0                	not    %eax$/;"	l
c01020a6	obj/kernel.asm	/^c01020a6:	89 c2                	mov    %eax,%edx$/;"	l
c01020a8	obj/kernel.asm	/^c01020a8:	0f b7 05 70 d5 12 c0 	movzwl 0xc012d570,%eax$/;"	l
c01020af	obj/kernel.asm	/^c01020af:	21 d0                	and    %edx,%eax$/;"	l
c01020b1	obj/kernel.asm	/^c01020b1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01020b4	obj/kernel.asm	/^c01020b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01020b7	obj/kernel.asm	/^c01020b7:	e8 7c ff ff ff       	call   c0102038 <pic_setmask>$/;"	l
c01020bc	obj/kernel.asm	/^c01020bc:	c9                   	leave  $/;"	l
c01020bd	obj/kernel.asm	/^c01020bd:	c3                   	ret    $/;"	l
c01020be	obj/kernel.asm	/^c01020be <pic_init>:$/;"	l
c01020be	obj/kernel.asm	/^c01020be:	55                   	push   %ebp$/;"	l
c01020bf	obj/kernel.asm	/^c01020bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01020c1	obj/kernel.asm	/^c01020c1:	83 ec 44             	sub    $0x44,%esp$/;"	l
c01020c4	obj/kernel.asm	/^c01020c4:	c7 05 40 f5 1a c0 01 	movl   $0x1,0xc01af540$/;"	l
c01020cb	obj/kernel.asm	/^c01020cb:	00 00 00 $/;"	l
c01020ce	obj/kernel.asm	/^c01020ce:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c01020d4	obj/kernel.asm	/^c01020d4:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c01020d8	obj/kernel.asm	/^c01020d8:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c01020dc	obj/kernel.asm	/^c01020dc:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c01020e0	obj/kernel.asm	/^c01020e0:	ee                   	out    %al,(%dx)$/;"	l
c01020e1	obj/kernel.asm	/^c01020e1:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c01020e7	obj/kernel.asm	/^c01020e7:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c01020eb	obj/kernel.asm	/^c01020eb:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01020ef	obj/kernel.asm	/^c01020ef:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01020f3	obj/kernel.asm	/^c01020f3:	ee                   	out    %al,(%dx)$/;"	l
c01020f4	obj/kernel.asm	/^c01020f4:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c01020fa	obj/kernel.asm	/^c01020fa:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c01020fe	obj/kernel.asm	/^c01020fe:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0102102	obj/kernel.asm	/^c0102102:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0102106	obj/kernel.asm	/^c0102106:	ee                   	out    %al,(%dx)$/;"	l
c0102107	obj/kernel.asm	/^c0102107:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c010210d	obj/kernel.asm	/^c010210d:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c0102111	obj/kernel.asm	/^c0102111:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0102115	obj/kernel.asm	/^c0102115:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102119	obj/kernel.asm	/^c0102119:	ee                   	out    %al,(%dx)$/;"	l
c010211a	obj/kernel.asm	/^c010211a:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c0102120	obj/kernel.asm	/^c0102120:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c0102124	obj/kernel.asm	/^c0102124:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0102128	obj/kernel.asm	/^c0102128:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c010212c	obj/kernel.asm	/^c010212c:	ee                   	out    %al,(%dx)$/;"	l
c010212d	obj/kernel.asm	/^c010212d:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c0102133	obj/kernel.asm	/^c0102133:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c0102137	obj/kernel.asm	/^c0102137:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010213b	obj/kernel.asm	/^c010213b:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010213f	obj/kernel.asm	/^c010213f:	ee                   	out    %al,(%dx)$/;"	l
c0102140	obj/kernel.asm	/^c0102140:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c0102146	obj/kernel.asm	/^c0102146:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c010214a	obj/kernel.asm	/^c010214a:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010214e	obj/kernel.asm	/^c010214e:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0102152	obj/kernel.asm	/^c0102152:	ee                   	out    %al,(%dx)$/;"	l
c0102153	obj/kernel.asm	/^c0102153:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c0102159	obj/kernel.asm	/^c0102159:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c010215d	obj/kernel.asm	/^c010215d:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0102161	obj/kernel.asm	/^c0102161:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0102165	obj/kernel.asm	/^c0102165:	ee                   	out    %al,(%dx)$/;"	l
c0102166	obj/kernel.asm	/^c0102166:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c010216c	obj/kernel.asm	/^c010216c:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c0102170	obj/kernel.asm	/^c0102170:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0102174	obj/kernel.asm	/^c0102174:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0102178	obj/kernel.asm	/^c0102178:	ee                   	out    %al,(%dx)$/;"	l
c0102179	obj/kernel.asm	/^c0102179:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c010217f	obj/kernel.asm	/^c010217f:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c0102183	obj/kernel.asm	/^c0102183:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102187	obj/kernel.asm	/^c0102187:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c010218b	obj/kernel.asm	/^c010218b:	ee                   	out    %al,(%dx)$/;"	l
c010218c	obj/kernel.asm	/^c010218c:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c0102192	obj/kernel.asm	/^c0102192:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c0102196	obj/kernel.asm	/^c0102196:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c010219a	obj/kernel.asm	/^c010219a:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c010219e	obj/kernel.asm	/^c010219e:	ee                   	out    %al,(%dx)$/;"	l
c010219f	obj/kernel.asm	/^c010219f:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c01021a5	obj/kernel.asm	/^c01021a5:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c01021a9	obj/kernel.asm	/^c01021a9:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c01021ad	obj/kernel.asm	/^c01021ad:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c01021b1	obj/kernel.asm	/^c01021b1:	ee                   	out    %al,(%dx)$/;"	l
c01021b2	obj/kernel.asm	/^c01021b2:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c01021b8	obj/kernel.asm	/^c01021b8:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c01021bc	obj/kernel.asm	/^c01021bc:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01021c0	obj/kernel.asm	/^c01021c0:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01021c4	obj/kernel.asm	/^c01021c4:	ee                   	out    %al,(%dx)$/;"	l
c01021c5	obj/kernel.asm	/^c01021c5:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c01021cb	obj/kernel.asm	/^c01021cb:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c01021cf	obj/kernel.asm	/^c01021cf:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c01021d3	obj/kernel.asm	/^c01021d3:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c01021d7	obj/kernel.asm	/^c01021d7:	ee                   	out    %al,(%dx)$/;"	l
c01021d8	obj/kernel.asm	/^c01021d8:	0f b7 05 70 d5 12 c0 	movzwl 0xc012d570,%eax$/;"	l
c01021df	obj/kernel.asm	/^c01021df:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c01021e3	obj/kernel.asm	/^c01021e3:	74 12                	je     c01021f7 <pic_init+0x139>$/;"	l
c01021e5	obj/kernel.asm	/^c01021e5:	0f b7 05 70 d5 12 c0 	movzwl 0xc012d570,%eax$/;"	l
c01021ec	obj/kernel.asm	/^c01021ec:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01021ef	obj/kernel.asm	/^c01021ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01021f2	obj/kernel.asm	/^c01021f2:	e8 41 fe ff ff       	call   c0102038 <pic_setmask>$/;"	l
c01021f7	obj/kernel.asm	/^c01021f7:	c9                   	leave  $/;"	l
c01021f8	obj/kernel.asm	/^c01021f8:	c3                   	ret    $/;"	l
c01021f9	obj/kernel.asm	/^c01021f9 <print_ticks>:$/;"	l
c01021f9	obj/kernel.asm	/^c01021f9:	55                   	push   %ebp$/;"	l
c01021fa	obj/kernel.asm	/^c01021fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01021fc	obj/kernel.asm	/^c01021fc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01021ff	obj/kernel.asm	/^c01021ff:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0102206	obj/kernel.asm	/^c0102206:	00 $/;"	l
c0102207	obj/kernel.asm	/^c0102207:	c7 04 24 80 c8 10 c0 	movl   $0xc010c880,(%esp)$/;"	l
c010220e	obj/kernel.asm	/^c010220e:	e8 45 e1 ff ff       	call   c0100358 <cprintf>$/;"	l
c0102213	obj/kernel.asm	/^c0102213:	c7 04 24 8a c8 10 c0 	movl   $0xc010c88a,(%esp)$/;"	l
c010221a	obj/kernel.asm	/^c010221a:	e8 39 e1 ff ff       	call   c0100358 <cprintf>$/;"	l
c010221f	obj/kernel.asm	/^c010221f:	c7 44 24 08 98 c8 10 	movl   $0xc010c898,0x8(%esp)$/;"	l
c0102226	obj/kernel.asm	/^c0102226:	c0 $/;"	l
c0102227	obj/kernel.asm	/^c0102227:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
c010222e	obj/kernel.asm	/^c010222e:	00 $/;"	l
c010222f	obj/kernel.asm	/^c010222f:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c0102236	obj/kernel.asm	/^c0102236:	e8 9f eb ff ff       	call   c0100dda <__panic>$/;"	l
c010223b	obj/kernel.asm	/^c010223b <idt_init>:$/;"	l
c010223b	obj/kernel.asm	/^c010223b:	55                   	push   %ebp$/;"	l
c010223c	obj/kernel.asm	/^c010223c:	89 e5                	mov    %esp,%ebp$/;"	l
c010223e	obj/kernel.asm	/^c010223e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0102241	obj/kernel.asm	/^c0102241:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0102248	obj/kernel.asm	/^c0102248:	e9 c3 00 00 00       	jmp    c0102310 <idt_init+0xd5>$/;"	l
c010224d	obj/kernel.asm	/^c010224d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102250	obj/kernel.asm	/^c0102250:	8b 04 85 00 d6 12 c0 	mov    -0x3fed2a00(,%eax,4),%eax$/;"	l
c0102257	obj/kernel.asm	/^c0102257:	89 c2                	mov    %eax,%edx$/;"	l
c0102259	obj/kernel.asm	/^c0102259:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010225c	obj/kernel.asm	/^c010225c:	66 89 14 c5 60 f5 1a 	mov    %dx,-0x3fe50aa0(,%eax,8)$/;"	l
c0102263	obj/kernel.asm	/^c0102263:	c0 $/;"	l
c0102264	obj/kernel.asm	/^c0102264:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102267	obj/kernel.asm	/^c0102267:	66 c7 04 c5 62 f5 1a 	movw   $0x8,-0x3fe50a9e(,%eax,8)$/;"	l
c010226e	obj/kernel.asm	/^c010226e:	c0 08 00 $/;"	l
c0102271	obj/kernel.asm	/^c0102271:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102274	obj/kernel.asm	/^c0102274:	0f b6 14 c5 64 f5 1a 	movzbl -0x3fe50a9c(,%eax,8),%edx$/;"	l
c010227b	obj/kernel.asm	/^c010227b:	c0 $/;"	l
c010227c	obj/kernel.asm	/^c010227c:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c010227f	obj/kernel.asm	/^c010227f:	88 14 c5 64 f5 1a c0 	mov    %dl,-0x3fe50a9c(,%eax,8)$/;"	l
c0102286	obj/kernel.asm	/^c0102286:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102289	obj/kernel.asm	/^c0102289:	0f b6 14 c5 64 f5 1a 	movzbl -0x3fe50a9c(,%eax,8),%edx$/;"	l
c0102290	obj/kernel.asm	/^c0102290:	c0 $/;"	l
c0102291	obj/kernel.asm	/^c0102291:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102294	obj/kernel.asm	/^c0102294:	88 14 c5 64 f5 1a c0 	mov    %dl,-0x3fe50a9c(,%eax,8)$/;"	l
c010229b	obj/kernel.asm	/^c010229b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010229e	obj/kernel.asm	/^c010229e:	0f b6 14 c5 65 f5 1a 	movzbl -0x3fe50a9b(,%eax,8),%edx$/;"	l
c01022a5	obj/kernel.asm	/^c01022a5:	c0 $/;"	l
c01022a6	obj/kernel.asm	/^c01022a6:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01022a9	obj/kernel.asm	/^c01022a9:	83 ca 0e             	or     $0xe,%edx$/;"	l
c01022ac	obj/kernel.asm	/^c01022ac:	88 14 c5 65 f5 1a c0 	mov    %dl,-0x3fe50a9b(,%eax,8)$/;"	l
c01022b3	obj/kernel.asm	/^c01022b3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022b6	obj/kernel.asm	/^c01022b6:	0f b6 14 c5 65 f5 1a 	movzbl -0x3fe50a9b(,%eax,8),%edx$/;"	l
c01022bd	obj/kernel.asm	/^c01022bd:	c0 $/;"	l
c01022be	obj/kernel.asm	/^c01022be:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01022c1	obj/kernel.asm	/^c01022c1:	88 14 c5 65 f5 1a c0 	mov    %dl,-0x3fe50a9b(,%eax,8)$/;"	l
c01022c8	obj/kernel.asm	/^c01022c8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022cb	obj/kernel.asm	/^c01022cb:	0f b6 14 c5 65 f5 1a 	movzbl -0x3fe50a9b(,%eax,8),%edx$/;"	l
c01022d2	obj/kernel.asm	/^c01022d2:	c0 $/;"	l
c01022d3	obj/kernel.asm	/^c01022d3:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01022d6	obj/kernel.asm	/^c01022d6:	88 14 c5 65 f5 1a c0 	mov    %dl,-0x3fe50a9b(,%eax,8)$/;"	l
c01022dd	obj/kernel.asm	/^c01022dd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022e0	obj/kernel.asm	/^c01022e0:	0f b6 14 c5 65 f5 1a 	movzbl -0x3fe50a9b(,%eax,8),%edx$/;"	l
c01022e7	obj/kernel.asm	/^c01022e7:	c0 $/;"	l
c01022e8	obj/kernel.asm	/^c01022e8:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01022eb	obj/kernel.asm	/^c01022eb:	88 14 c5 65 f5 1a c0 	mov    %dl,-0x3fe50a9b(,%eax,8)$/;"	l
c01022f2	obj/kernel.asm	/^c01022f2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022f5	obj/kernel.asm	/^c01022f5:	8b 04 85 00 d6 12 c0 	mov    -0x3fed2a00(,%eax,4),%eax$/;"	l
c01022fc	obj/kernel.asm	/^c01022fc:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01022ff	obj/kernel.asm	/^c01022ff:	89 c2                	mov    %eax,%edx$/;"	l
c0102301	obj/kernel.asm	/^c0102301:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102304	obj/kernel.asm	/^c0102304:	66 89 14 c5 66 f5 1a 	mov    %dx,-0x3fe50a9a(,%eax,8)$/;"	l
c010230b	obj/kernel.asm	/^c010230b:	c0 $/;"	l
c010230c	obj/kernel.asm	/^c010230c:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0102310	obj/kernel.asm	/^c0102310:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102313	obj/kernel.asm	/^c0102313:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c0102318	obj/kernel.asm	/^c0102318:	0f 86 2f ff ff ff    	jbe    c010224d <idt_init+0x12>$/;"	l
c010231e	obj/kernel.asm	/^c010231e:	a1 00 d8 12 c0       	mov    0xc012d800,%eax$/;"	l
c0102323	obj/kernel.asm	/^c0102323:	66 a3 60 f9 1a c0    	mov    %ax,0xc01af960$/;"	l
c0102329	obj/kernel.asm	/^c0102329:	66 c7 05 62 f9 1a c0 	movw   $0x8,0xc01af962$/;"	l
c0102330	obj/kernel.asm	/^c0102330:	08 00 $/;"	l
c0102332	obj/kernel.asm	/^c0102332:	0f b6 05 64 f9 1a c0 	movzbl 0xc01af964,%eax$/;"	l
c0102339	obj/kernel.asm	/^c0102339:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c010233c	obj/kernel.asm	/^c010233c:	a2 64 f9 1a c0       	mov    %al,0xc01af964$/;"	l
c0102341	obj/kernel.asm	/^c0102341:	0f b6 05 64 f9 1a c0 	movzbl 0xc01af964,%eax$/;"	l
c0102348	obj/kernel.asm	/^c0102348:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c010234b	obj/kernel.asm	/^c010234b:	a2 64 f9 1a c0       	mov    %al,0xc01af964$/;"	l
c0102350	obj/kernel.asm	/^c0102350:	0f b6 05 65 f9 1a c0 	movzbl 0xc01af965,%eax$/;"	l
c0102357	obj/kernel.asm	/^c0102357:	83 c8 0f             	or     $0xf,%eax$/;"	l
c010235a	obj/kernel.asm	/^c010235a:	a2 65 f9 1a c0       	mov    %al,0xc01af965$/;"	l
c010235f	obj/kernel.asm	/^c010235f:	0f b6 05 65 f9 1a c0 	movzbl 0xc01af965,%eax$/;"	l
c0102366	obj/kernel.asm	/^c0102366:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0102369	obj/kernel.asm	/^c0102369:	a2 65 f9 1a c0       	mov    %al,0xc01af965$/;"	l
c010236e	obj/kernel.asm	/^c010236e:	0f b6 05 65 f9 1a c0 	movzbl 0xc01af965,%eax$/;"	l
c0102375	obj/kernel.asm	/^c0102375:	83 c8 60             	or     $0x60,%eax$/;"	l
c0102378	obj/kernel.asm	/^c0102378:	a2 65 f9 1a c0       	mov    %al,0xc01af965$/;"	l
c010237d	obj/kernel.asm	/^c010237d:	0f b6 05 65 f9 1a c0 	movzbl 0xc01af965,%eax$/;"	l
c0102384	obj/kernel.asm	/^c0102384:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0102387	obj/kernel.asm	/^c0102387:	a2 65 f9 1a c0       	mov    %al,0xc01af965$/;"	l
c010238c	obj/kernel.asm	/^c010238c:	a1 00 d8 12 c0       	mov    0xc012d800,%eax$/;"	l
c0102391	obj/kernel.asm	/^c0102391:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102394	obj/kernel.asm	/^c0102394:	66 a3 66 f9 1a c0    	mov    %ax,0xc01af966$/;"	l
c010239a	obj/kernel.asm	/^c010239a:	c7 45 f8 80 d5 12 c0 	movl   $0xc012d580,-0x8(%ebp)$/;"	l
c01023a1	obj/kernel.asm	/^c01023a1:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01023a4	obj/kernel.asm	/^c01023a4:	0f 01 18             	lidtl  (%eax)$/;"	l
c01023a7	obj/kernel.asm	/^c01023a7:	c9                   	leave  $/;"	l
c01023a8	obj/kernel.asm	/^c01023a8:	c3                   	ret    $/;"	l
c01023a9	obj/kernel.asm	/^c01023a9 <trapname>:$/;"	l
c01023a9	obj/kernel.asm	/^c01023a9:	55                   	push   %ebp$/;"	l
c01023aa	obj/kernel.asm	/^c01023aa:	89 e5                	mov    %esp,%ebp$/;"	l
c01023ac	obj/kernel.asm	/^c01023ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023af	obj/kernel.asm	/^c01023af:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c01023b2	obj/kernel.asm	/^c01023b2:	77 0c                	ja     c01023c0 <trapname+0x17>$/;"	l
c01023b4	obj/kernel.asm	/^c01023b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023b7	obj/kernel.asm	/^c01023b7:	8b 04 85 40 cd 10 c0 	mov    -0x3fef32c0(,%eax,4),%eax$/;"	l
c01023be	obj/kernel.asm	/^c01023be:	eb 18                	jmp    c01023d8 <trapname+0x2f>$/;"	l
c01023c0	obj/kernel.asm	/^c01023c0:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c01023c4	obj/kernel.asm	/^c01023c4:	7e 0d                	jle    c01023d3 <trapname+0x2a>$/;"	l
c01023c6	obj/kernel.asm	/^c01023c6:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c01023ca	obj/kernel.asm	/^c01023ca:	7f 07                	jg     c01023d3 <trapname+0x2a>$/;"	l
c01023cc	obj/kernel.asm	/^c01023cc:	b8 bf c8 10 c0       	mov    $0xc010c8bf,%eax$/;"	l
c01023d1	obj/kernel.asm	/^c01023d1:	eb 05                	jmp    c01023d8 <trapname+0x2f>$/;"	l
c01023d3	obj/kernel.asm	/^c01023d3:	b8 d2 c8 10 c0       	mov    $0xc010c8d2,%eax$/;"	l
c01023d8	obj/kernel.asm	/^c01023d8:	5d                   	pop    %ebp$/;"	l
c01023d9	obj/kernel.asm	/^c01023d9:	c3                   	ret    $/;"	l
c01023da	obj/kernel.asm	/^c01023da <trap_in_kernel>:$/;"	l
c01023da	obj/kernel.asm	/^c01023da:	55                   	push   %ebp$/;"	l
c01023db	obj/kernel.asm	/^c01023db:	89 e5                	mov    %esp,%ebp$/;"	l
c01023dd	obj/kernel.asm	/^c01023dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023e0	obj/kernel.asm	/^c01023e0:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01023e4	obj/kernel.asm	/^c01023e4:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c01023e8	obj/kernel.asm	/^c01023e8:	0f 94 c0             	sete   %al$/;"	l
c01023eb	obj/kernel.asm	/^c01023eb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01023ee	obj/kernel.asm	/^c01023ee:	5d                   	pop    %ebp$/;"	l
c01023ef	obj/kernel.asm	/^c01023ef:	c3                   	ret    $/;"	l
c01023f0	obj/kernel.asm	/^c01023f0 <print_trapframe>:$/;"	l
c01023f0	obj/kernel.asm	/^c01023f0:	55                   	push   %ebp$/;"	l
c01023f1	obj/kernel.asm	/^c01023f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01023f3	obj/kernel.asm	/^c01023f3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01023f6	obj/kernel.asm	/^c01023f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023f9	obj/kernel.asm	/^c01023f9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01023fd	obj/kernel.asm	/^c01023fd:	c7 04 24 13 c9 10 c0 	movl   $0xc010c913,(%esp)$/;"	l
c0102404	obj/kernel.asm	/^c0102404:	e8 4f df ff ff       	call   c0100358 <cprintf>$/;"	l
c0102409	obj/kernel.asm	/^c0102409:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010240c	obj/kernel.asm	/^c010240c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010240f	obj/kernel.asm	/^c010240f:	e8 a1 01 00 00       	call   c01025b5 <print_regs>$/;"	l
c0102414	obj/kernel.asm	/^c0102414:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102417	obj/kernel.asm	/^c0102417:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010241b	obj/kernel.asm	/^c010241b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010241e	obj/kernel.asm	/^c010241e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102422	obj/kernel.asm	/^c0102422:	c7 04 24 24 c9 10 c0 	movl   $0xc010c924,(%esp)$/;"	l
c0102429	obj/kernel.asm	/^c0102429:	e8 2a df ff ff       	call   c0100358 <cprintf>$/;"	l
c010242e	obj/kernel.asm	/^c010242e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102431	obj/kernel.asm	/^c0102431:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c0102435	obj/kernel.asm	/^c0102435:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102438	obj/kernel.asm	/^c0102438:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010243c	obj/kernel.asm	/^c010243c:	c7 04 24 37 c9 10 c0 	movl   $0xc010c937,(%esp)$/;"	l
c0102443	obj/kernel.asm	/^c0102443:	e8 10 df ff ff       	call   c0100358 <cprintf>$/;"	l
c0102448	obj/kernel.asm	/^c0102448:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010244b	obj/kernel.asm	/^c010244b:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c010244f	obj/kernel.asm	/^c010244f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102452	obj/kernel.asm	/^c0102452:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102456	obj/kernel.asm	/^c0102456:	c7 04 24 4a c9 10 c0 	movl   $0xc010c94a,(%esp)$/;"	l
c010245d	obj/kernel.asm	/^c010245d:	e8 f6 de ff ff       	call   c0100358 <cprintf>$/;"	l
c0102462	obj/kernel.asm	/^c0102462:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102465	obj/kernel.asm	/^c0102465:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c0102469	obj/kernel.asm	/^c0102469:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010246c	obj/kernel.asm	/^c010246c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102470	obj/kernel.asm	/^c0102470:	c7 04 24 5d c9 10 c0 	movl   $0xc010c95d,(%esp)$/;"	l
c0102477	obj/kernel.asm	/^c0102477:	e8 dc de ff ff       	call   c0100358 <cprintf>$/;"	l
c010247c	obj/kernel.asm	/^c010247c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010247f	obj/kernel.asm	/^c010247f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0102482	obj/kernel.asm	/^c0102482:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102485	obj/kernel.asm	/^c0102485:	e8 1f ff ff ff       	call   c01023a9 <trapname>$/;"	l
c010248a	obj/kernel.asm	/^c010248a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010248d	obj/kernel.asm	/^c010248d:	8b 52 30             	mov    0x30(%edx),%edx$/;"	l
c0102490	obj/kernel.asm	/^c0102490:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0102494	obj/kernel.asm	/^c0102494:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0102498	obj/kernel.asm	/^c0102498:	c7 04 24 70 c9 10 c0 	movl   $0xc010c970,(%esp)$/;"	l
c010249f	obj/kernel.asm	/^c010249f:	e8 b4 de ff ff       	call   c0100358 <cprintf>$/;"	l
c01024a4	obj/kernel.asm	/^c01024a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024a7	obj/kernel.asm	/^c01024a7:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01024aa	obj/kernel.asm	/^c01024aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024ae	obj/kernel.asm	/^c01024ae:	c7 04 24 82 c9 10 c0 	movl   $0xc010c982,(%esp)$/;"	l
c01024b5	obj/kernel.asm	/^c01024b5:	e8 9e de ff ff       	call   c0100358 <cprintf>$/;"	l
c01024ba	obj/kernel.asm	/^c01024ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024bd	obj/kernel.asm	/^c01024bd:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01024c0	obj/kernel.asm	/^c01024c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024c4	obj/kernel.asm	/^c01024c4:	c7 04 24 91 c9 10 c0 	movl   $0xc010c991,(%esp)$/;"	l
c01024cb	obj/kernel.asm	/^c01024cb:	e8 88 de ff ff       	call   c0100358 <cprintf>$/;"	l
c01024d0	obj/kernel.asm	/^c01024d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024d3	obj/kernel.asm	/^c01024d3:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01024d7	obj/kernel.asm	/^c01024d7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01024da	obj/kernel.asm	/^c01024da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024de	obj/kernel.asm	/^c01024de:	c7 04 24 a0 c9 10 c0 	movl   $0xc010c9a0,(%esp)$/;"	l
c01024e5	obj/kernel.asm	/^c01024e5:	e8 6e de ff ff       	call   c0100358 <cprintf>$/;"	l
c01024ea	obj/kernel.asm	/^c01024ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024ed	obj/kernel.asm	/^c01024ed:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c01024f0	obj/kernel.asm	/^c01024f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024f4	obj/kernel.asm	/^c01024f4:	c7 04 24 b3 c9 10 c0 	movl   $0xc010c9b3,(%esp)$/;"	l
c01024fb	obj/kernel.asm	/^c01024fb:	e8 58 de ff ff       	call   c0100358 <cprintf>$/;"	l
c0102500	obj/kernel.asm	/^c0102500:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102507	obj/kernel.asm	/^c0102507:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010250e	obj/kernel.asm	/^c010250e:	eb 3e                	jmp    c010254e <print_trapframe+0x15e>$/;"	l
c0102510	obj/kernel.asm	/^c0102510:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102513	obj/kernel.asm	/^c0102513:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c0102516	obj/kernel.asm	/^c0102516:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102519	obj/kernel.asm	/^c0102519:	21 d0                	and    %edx,%eax$/;"	l
c010251b	obj/kernel.asm	/^c010251b:	85 c0                	test   %eax,%eax$/;"	l
c010251d	obj/kernel.asm	/^c010251d:	74 28                	je     c0102547 <print_trapframe+0x157>$/;"	l
c010251f	obj/kernel.asm	/^c010251f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102522	obj/kernel.asm	/^c0102522:	8b 04 85 a0 d5 12 c0 	mov    -0x3fed2a60(,%eax,4),%eax$/;"	l
c0102529	obj/kernel.asm	/^c0102529:	85 c0                	test   %eax,%eax$/;"	l
c010252b	obj/kernel.asm	/^c010252b:	74 1a                	je     c0102547 <print_trapframe+0x157>$/;"	l
c010252d	obj/kernel.asm	/^c010252d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102530	obj/kernel.asm	/^c0102530:	8b 04 85 a0 d5 12 c0 	mov    -0x3fed2a60(,%eax,4),%eax$/;"	l
c0102537	obj/kernel.asm	/^c0102537:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010253b	obj/kernel.asm	/^c010253b:	c7 04 24 c2 c9 10 c0 	movl   $0xc010c9c2,(%esp)$/;"	l
c0102542	obj/kernel.asm	/^c0102542:	e8 11 de ff ff       	call   c0100358 <cprintf>$/;"	l
c0102547	obj/kernel.asm	/^c0102547:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010254b	obj/kernel.asm	/^c010254b:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c010254e	obj/kernel.asm	/^c010254e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102551	obj/kernel.asm	/^c0102551:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c0102554	obj/kernel.asm	/^c0102554:	76 ba                	jbe    c0102510 <print_trapframe+0x120>$/;"	l
c0102556	obj/kernel.asm	/^c0102556:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102559	obj/kernel.asm	/^c0102559:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010255c	obj/kernel.asm	/^c010255c:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c0102561	obj/kernel.asm	/^c0102561:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0102564	obj/kernel.asm	/^c0102564:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102568	obj/kernel.asm	/^c0102568:	c7 04 24 c6 c9 10 c0 	movl   $0xc010c9c6,(%esp)$/;"	l
c010256f	obj/kernel.asm	/^c010256f:	e8 e4 dd ff ff       	call   c0100358 <cprintf>$/;"	l
c0102574	obj/kernel.asm	/^c0102574:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102577	obj/kernel.asm	/^c0102577:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010257a	obj/kernel.asm	/^c010257a:	e8 5b fe ff ff       	call   c01023da <trap_in_kernel>$/;"	l
c010257f	obj/kernel.asm	/^c010257f:	85 c0                	test   %eax,%eax$/;"	l
c0102581	obj/kernel.asm	/^c0102581:	75 30                	jne    c01025b3 <print_trapframe+0x1c3>$/;"	l
c0102583	obj/kernel.asm	/^c0102583:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102586	obj/kernel.asm	/^c0102586:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102589	obj/kernel.asm	/^c0102589:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010258d	obj/kernel.asm	/^c010258d:	c7 04 24 cf c9 10 c0 	movl   $0xc010c9cf,(%esp)$/;"	l
c0102594	obj/kernel.asm	/^c0102594:	e8 bf dd ff ff       	call   c0100358 <cprintf>$/;"	l
c0102599	obj/kernel.asm	/^c0102599:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010259c	obj/kernel.asm	/^c010259c:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c01025a0	obj/kernel.asm	/^c01025a0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01025a3	obj/kernel.asm	/^c01025a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025a7	obj/kernel.asm	/^c01025a7:	c7 04 24 de c9 10 c0 	movl   $0xc010c9de,(%esp)$/;"	l
c01025ae	obj/kernel.asm	/^c01025ae:	e8 a5 dd ff ff       	call   c0100358 <cprintf>$/;"	l
c01025b3	obj/kernel.asm	/^c01025b3:	c9                   	leave  $/;"	l
c01025b4	obj/kernel.asm	/^c01025b4:	c3                   	ret    $/;"	l
c01025b5	obj/kernel.asm	/^c01025b5 <print_regs>:$/;"	l
c01025b5	obj/kernel.asm	/^c01025b5:	55                   	push   %ebp$/;"	l
c01025b6	obj/kernel.asm	/^c01025b6:	89 e5                	mov    %esp,%ebp$/;"	l
c01025b8	obj/kernel.asm	/^c01025b8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01025bb	obj/kernel.asm	/^c01025bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025be	obj/kernel.asm	/^c01025be:	8b 00                	mov    (%eax),%eax$/;"	l
c01025c0	obj/kernel.asm	/^c01025c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025c4	obj/kernel.asm	/^c01025c4:	c7 04 24 f1 c9 10 c0 	movl   $0xc010c9f1,(%esp)$/;"	l
c01025cb	obj/kernel.asm	/^c01025cb:	e8 88 dd ff ff       	call   c0100358 <cprintf>$/;"	l
c01025d0	obj/kernel.asm	/^c01025d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025d3	obj/kernel.asm	/^c01025d3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01025d6	obj/kernel.asm	/^c01025d6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025da	obj/kernel.asm	/^c01025da:	c7 04 24 00 ca 10 c0 	movl   $0xc010ca00,(%esp)$/;"	l
c01025e1	obj/kernel.asm	/^c01025e1:	e8 72 dd ff ff       	call   c0100358 <cprintf>$/;"	l
c01025e6	obj/kernel.asm	/^c01025e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025e9	obj/kernel.asm	/^c01025e9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01025ec	obj/kernel.asm	/^c01025ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025f0	obj/kernel.asm	/^c01025f0:	c7 04 24 0f ca 10 c0 	movl   $0xc010ca0f,(%esp)$/;"	l
c01025f7	obj/kernel.asm	/^c01025f7:	e8 5c dd ff ff       	call   c0100358 <cprintf>$/;"	l
c01025fc	obj/kernel.asm	/^c01025fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025ff	obj/kernel.asm	/^c01025ff:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0102602	obj/kernel.asm	/^c0102602:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102606	obj/kernel.asm	/^c0102606:	c7 04 24 1e ca 10 c0 	movl   $0xc010ca1e,(%esp)$/;"	l
c010260d	obj/kernel.asm	/^c010260d:	e8 46 dd ff ff       	call   c0100358 <cprintf>$/;"	l
c0102612	obj/kernel.asm	/^c0102612:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102615	obj/kernel.asm	/^c0102615:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102618	obj/kernel.asm	/^c0102618:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010261c	obj/kernel.asm	/^c010261c:	c7 04 24 2d ca 10 c0 	movl   $0xc010ca2d,(%esp)$/;"	l
c0102623	obj/kernel.asm	/^c0102623:	e8 30 dd ff ff       	call   c0100358 <cprintf>$/;"	l
c0102628	obj/kernel.asm	/^c0102628:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010262b	obj/kernel.asm	/^c010262b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010262e	obj/kernel.asm	/^c010262e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102632	obj/kernel.asm	/^c0102632:	c7 04 24 3c ca 10 c0 	movl   $0xc010ca3c,(%esp)$/;"	l
c0102639	obj/kernel.asm	/^c0102639:	e8 1a dd ff ff       	call   c0100358 <cprintf>$/;"	l
c010263e	obj/kernel.asm	/^c010263e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102641	obj/kernel.asm	/^c0102641:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0102644	obj/kernel.asm	/^c0102644:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102648	obj/kernel.asm	/^c0102648:	c7 04 24 4b ca 10 c0 	movl   $0xc010ca4b,(%esp)$/;"	l
c010264f	obj/kernel.asm	/^c010264f:	e8 04 dd ff ff       	call   c0100358 <cprintf>$/;"	l
c0102654	obj/kernel.asm	/^c0102654:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102657	obj/kernel.asm	/^c0102657:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010265a	obj/kernel.asm	/^c010265a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010265e	obj/kernel.asm	/^c010265e:	c7 04 24 5a ca 10 c0 	movl   $0xc010ca5a,(%esp)$/;"	l
c0102665	obj/kernel.asm	/^c0102665:	e8 ee dc ff ff       	call   c0100358 <cprintf>$/;"	l
c010266a	obj/kernel.asm	/^c010266a:	c9                   	leave  $/;"	l
c010266b	obj/kernel.asm	/^c010266b:	c3                   	ret    $/;"	l
c010266c	obj/kernel.asm	/^c010266c <print_pgfault>:$/;"	l
c010266c	obj/kernel.asm	/^c010266c:	55                   	push   %ebp$/;"	l
c010266d	obj/kernel.asm	/^c010266d:	89 e5                	mov    %esp,%ebp$/;"	l
c010266f	obj/kernel.asm	/^c010266f:	53                   	push   %ebx$/;"	l
c0102670	obj/kernel.asm	/^c0102670:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0102673	obj/kernel.asm	/^c0102673:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102676	obj/kernel.asm	/^c0102676:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102679	obj/kernel.asm	/^c0102679:	83 e0 01             	and    $0x1,%eax$/;"	l
c010267c	obj/kernel.asm	/^c010267c:	85 c0                	test   %eax,%eax$/;"	l
c010267e	obj/kernel.asm	/^c010267e:	74 07                	je     c0102687 <print_pgfault+0x1b>$/;"	l
c0102680	obj/kernel.asm	/^c0102680:	b9 69 ca 10 c0       	mov    $0xc010ca69,%ecx$/;"	l
c0102685	obj/kernel.asm	/^c0102685:	eb 05                	jmp    c010268c <print_pgfault+0x20>$/;"	l
c0102687	obj/kernel.asm	/^c0102687:	b9 7a ca 10 c0       	mov    $0xc010ca7a,%ecx$/;"	l
c010268c	obj/kernel.asm	/^c010268c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010268f	obj/kernel.asm	/^c010268f:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102692	obj/kernel.asm	/^c0102692:	83 e0 02             	and    $0x2,%eax$/;"	l
c0102695	obj/kernel.asm	/^c0102695:	85 c0                	test   %eax,%eax$/;"	l
c0102697	obj/kernel.asm	/^c0102697:	74 07                	je     c01026a0 <print_pgfault+0x34>$/;"	l
c0102699	obj/kernel.asm	/^c0102699:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
c010269e	obj/kernel.asm	/^c010269e:	eb 05                	jmp    c01026a5 <print_pgfault+0x39>$/;"	l
c01026a0	obj/kernel.asm	/^c01026a0:	ba 52 00 00 00       	mov    $0x52,%edx$/;"	l
c01026a5	obj/kernel.asm	/^c01026a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026a8	obj/kernel.asm	/^c01026a8:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026ab	obj/kernel.asm	/^c01026ab:	83 e0 04             	and    $0x4,%eax$/;"	l
c01026ae	obj/kernel.asm	/^c01026ae:	85 c0                	test   %eax,%eax$/;"	l
c01026b0	obj/kernel.asm	/^c01026b0:	74 07                	je     c01026b9 <print_pgfault+0x4d>$/;"	l
c01026b2	obj/kernel.asm	/^c01026b2:	b8 55 00 00 00       	mov    $0x55,%eax$/;"	l
c01026b7	obj/kernel.asm	/^c01026b7:	eb 05                	jmp    c01026be <print_pgfault+0x52>$/;"	l
c01026b9	obj/kernel.asm	/^c01026b9:	b8 4b 00 00 00       	mov    $0x4b,%eax$/;"	l
c01026be	obj/kernel.asm	/^c01026be:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
c01026c1	obj/kernel.asm	/^c01026c1:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
c01026c4	obj/kernel.asm	/^c01026c4:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
c01026c7	obj/kernel.asm	/^c01026c7:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c01026cb	obj/kernel.asm	/^c01026cb:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01026cf	obj/kernel.asm	/^c01026cf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01026d3	obj/kernel.asm	/^c01026d3:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c01026d7	obj/kernel.asm	/^c01026d7:	c7 04 24 88 ca 10 c0 	movl   $0xc010ca88,(%esp)$/;"	l
c01026de	obj/kernel.asm	/^c01026de:	e8 75 dc ff ff       	call   c0100358 <cprintf>$/;"	l
c01026e3	obj/kernel.asm	/^c01026e3:	83 c4 34             	add    $0x34,%esp$/;"	l
c01026e6	obj/kernel.asm	/^c01026e6:	5b                   	pop    %ebx$/;"	l
c01026e7	obj/kernel.asm	/^c01026e7:	5d                   	pop    %ebp$/;"	l
c01026e8	obj/kernel.asm	/^c01026e8:	c3                   	ret    $/;"	l
c01026e9	obj/kernel.asm	/^c01026e9 <pgfault_handler>:$/;"	l
c01026e9	obj/kernel.asm	/^c01026e9:	55                   	push   %ebp$/;"	l
c01026ea	obj/kernel.asm	/^c01026ea:	89 e5                	mov    %esp,%ebp$/;"	l
c01026ec	obj/kernel.asm	/^c01026ec:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01026ef	obj/kernel.asm	/^c01026ef:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c01026f4	obj/kernel.asm	/^c01026f4:	85 c0                	test   %eax,%eax$/;"	l
c01026f6	obj/kernel.asm	/^c01026f6:	74 0b                	je     c0102703 <pgfault_handler+0x1a>$/;"	l
c01026f8	obj/kernel.asm	/^c01026f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026fb	obj/kernel.asm	/^c01026fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01026fe	obj/kernel.asm	/^c01026fe:	e8 69 ff ff ff       	call   c010266c <print_pgfault>$/;"	l
c0102703	obj/kernel.asm	/^c0102703:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c0102708	obj/kernel.asm	/^c0102708:	85 c0                	test   %eax,%eax$/;"	l
c010270a	obj/kernel.asm	/^c010270a:	74 3d                	je     c0102749 <pgfault_handler+0x60>$/;"	l
c010270c	obj/kernel.asm	/^c010270c:	8b 15 28 fe 1a c0    	mov    0xc01afe28,%edx$/;"	l
c0102712	obj/kernel.asm	/^c0102712:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c0102717	obj/kernel.asm	/^c0102717:	39 c2                	cmp    %eax,%edx$/;"	l
c0102719	obj/kernel.asm	/^c0102719:	74 24                	je     c010273f <pgfault_handler+0x56>$/;"	l
c010271b	obj/kernel.asm	/^c010271b:	c7 44 24 0c ab ca 10 	movl   $0xc010caab,0xc(%esp)$/;"	l
c0102722	obj/kernel.asm	/^c0102722:	c0 $/;"	l
c0102723	obj/kernel.asm	/^c0102723:	c7 44 24 08 bf ca 10 	movl   $0xc010cabf,0x8(%esp)$/;"	l
c010272a	obj/kernel.asm	/^c010272a:	c0 $/;"	l
c010272b	obj/kernel.asm	/^c010272b:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
c0102732	obj/kernel.asm	/^c0102732:	00 $/;"	l
c0102733	obj/kernel.asm	/^c0102733:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c010273a	obj/kernel.asm	/^c010273a:	e8 9b e6 ff ff       	call   c0100dda <__panic>$/;"	l
c010273f	obj/kernel.asm	/^c010273f:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c0102744	obj/kernel.asm	/^c0102744:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102747	obj/kernel.asm	/^c0102747:	eb 46                	jmp    c010278f <pgfault_handler+0xa6>$/;"	l
c0102749	obj/kernel.asm	/^c0102749:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010274e	obj/kernel.asm	/^c010274e:	85 c0                	test   %eax,%eax$/;"	l
c0102750	obj/kernel.asm	/^c0102750:	75 32                	jne    c0102784 <pgfault_handler+0x9b>$/;"	l
c0102752	obj/kernel.asm	/^c0102752:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102755	obj/kernel.asm	/^c0102755:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102758	obj/kernel.asm	/^c0102758:	e8 93 fc ff ff       	call   c01023f0 <print_trapframe>$/;"	l
c010275d	obj/kernel.asm	/^c010275d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102760	obj/kernel.asm	/^c0102760:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102763	obj/kernel.asm	/^c0102763:	e8 04 ff ff ff       	call   c010266c <print_pgfault>$/;"	l
c0102768	obj/kernel.asm	/^c0102768:	c7 44 24 08 d4 ca 10 	movl   $0xc010cad4,0x8(%esp)$/;"	l
c010276f	obj/kernel.asm	/^c010276f:	c0 $/;"	l
c0102770	obj/kernel.asm	/^c0102770:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
c0102777	obj/kernel.asm	/^c0102777:	00 $/;"	l
c0102778	obj/kernel.asm	/^c0102778:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c010277f	obj/kernel.asm	/^c010277f:	e8 56 e6 ff ff       	call   c0100dda <__panic>$/;"	l
c0102784	obj/kernel.asm	/^c0102784:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102789	obj/kernel.asm	/^c0102789:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010278c	obj/kernel.asm	/^c010278c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010278f	obj/kernel.asm	/^c010278f:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c0102792	obj/kernel.asm	/^c0102792:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102795	obj/kernel.asm	/^c0102795:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102798	obj/kernel.asm	/^c0102798:	89 c2                	mov    %eax,%edx$/;"	l
c010279a	obj/kernel.asm	/^c010279a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010279d	obj/kernel.asm	/^c010279d:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01027a0	obj/kernel.asm	/^c01027a0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01027a4	obj/kernel.asm	/^c01027a4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01027a8	obj/kernel.asm	/^c01027a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01027ab	obj/kernel.asm	/^c01027ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01027ae	obj/kernel.asm	/^c01027ae:	e8 3d 65 00 00       	call   c0108cf0 <do_pgfault>$/;"	l
c01027b3	obj/kernel.asm	/^c01027b3:	c9                   	leave  $/;"	l
c01027b4	obj/kernel.asm	/^c01027b4:	c3                   	ret    $/;"	l
c01027b5	obj/kernel.asm	/^c01027b5 <trap_dispatch>:$/;"	l
c01027b5	obj/kernel.asm	/^c01027b5:	55                   	push   %ebp$/;"	l
c01027b6	obj/kernel.asm	/^c01027b6:	89 e5                	mov    %esp,%ebp$/;"	l
c01027b8	obj/kernel.asm	/^c01027b8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01027bb	obj/kernel.asm	/^c01027bb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01027c2	obj/kernel.asm	/^c01027c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027c5	obj/kernel.asm	/^c01027c5:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01027c8	obj/kernel.asm	/^c01027c8:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c01027cb	obj/kernel.asm	/^c01027cb:	77 38                	ja     c0102805 <trap_dispatch+0x50>$/;"	l
c01027cd	obj/kernel.asm	/^c01027cd:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c01027d0	obj/kernel.asm	/^c01027d0:	0f 83 32 02 00 00    	jae    c0102a08 <trap_dispatch+0x253>$/;"	l
c01027d6	obj/kernel.asm	/^c01027d6:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01027d9	obj/kernel.asm	/^c01027d9:	0f 84 07 01 00 00    	je     c01028e6 <trap_dispatch+0x131>$/;"	l
c01027df	obj/kernel.asm	/^c01027df:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01027e2	obj/kernel.asm	/^c01027e2:	77 0a                	ja     c01027ee <trap_dispatch+0x39>$/;"	l
c01027e4	obj/kernel.asm	/^c01027e4:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c01027e7	obj/kernel.asm	/^c01027e7:	74 3e                	je     c0102827 <trap_dispatch+0x72>$/;"	l
c01027e9	obj/kernel.asm	/^c01027e9:	e9 d2 01 00 00       	jmp    c01029c0 <trap_dispatch+0x20b>$/;"	l
c01027ee	obj/kernel.asm	/^c01027ee:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c01027f1	obj/kernel.asm	/^c01027f1:	0f 84 87 01 00 00    	je     c010297e <trap_dispatch+0x1c9>$/;"	l
c01027f7	obj/kernel.asm	/^c01027f7:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c01027fa	obj/kernel.asm	/^c01027fa:	0f 84 55 01 00 00    	je     c0102955 <trap_dispatch+0x1a0>$/;"	l
c0102800	obj/kernel.asm	/^c0102800:	e9 bb 01 00 00       	jmp    c01029c0 <trap_dispatch+0x20b>$/;"	l
c0102805	obj/kernel.asm	/^c0102805:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c0102808	obj/kernel.asm	/^c0102808:	0f 82 b2 01 00 00    	jb     c01029c0 <trap_dispatch+0x20b>$/;"	l
c010280e	obj/kernel.asm	/^c010280e:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c0102811	obj/kernel.asm	/^c0102811:	0f 86 8d 01 00 00    	jbe    c01029a4 <trap_dispatch+0x1ef>$/;"	l
c0102817	obj/kernel.asm	/^c0102817:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c010281c	obj/kernel.asm	/^c010281c:	0f 84 ba 00 00 00    	je     c01028dc <trap_dispatch+0x127>$/;"	l
c0102822	obj/kernel.asm	/^c0102822:	e9 99 01 00 00       	jmp    c01029c0 <trap_dispatch+0x20b>$/;"	l
c0102827	obj/kernel.asm	/^c0102827:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010282a	obj/kernel.asm	/^c010282a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010282d	obj/kernel.asm	/^c010282d:	e8 b7 fe ff ff       	call   c01026e9 <pgfault_handler>$/;"	l
c0102832	obj/kernel.asm	/^c0102832:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102835	obj/kernel.asm	/^c0102835:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0102839	obj/kernel.asm	/^c0102839:	0f 84 98 00 00 00    	je     c01028d7 <trap_dispatch+0x122>$/;"	l
c010283f	obj/kernel.asm	/^c010283f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102842	obj/kernel.asm	/^c0102842:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102845	obj/kernel.asm	/^c0102845:	e8 a6 fb ff ff       	call   c01023f0 <print_trapframe>$/;"	l
c010284a	obj/kernel.asm	/^c010284a:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010284f	obj/kernel.asm	/^c010284f:	85 c0                	test   %eax,%eax$/;"	l
c0102851	obj/kernel.asm	/^c0102851:	75 23                	jne    c0102876 <trap_dispatch+0xc1>$/;"	l
c0102853	obj/kernel.asm	/^c0102853:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102856	obj/kernel.asm	/^c0102856:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010285a	obj/kernel.asm	/^c010285a:	c7 44 24 08 ec ca 10 	movl   $0xc010caec,0x8(%esp)$/;"	l
c0102861	obj/kernel.asm	/^c0102861:	c0 $/;"	l
c0102862	obj/kernel.asm	/^c0102862:	c7 44 24 04 d2 00 00 	movl   $0xd2,0x4(%esp)$/;"	l
c0102869	obj/kernel.asm	/^c0102869:	00 $/;"	l
c010286a	obj/kernel.asm	/^c010286a:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c0102871	obj/kernel.asm	/^c0102871:	e8 64 e5 ff ff       	call   c0100dda <__panic>$/;"	l
c0102876	obj/kernel.asm	/^c0102876:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102879	obj/kernel.asm	/^c0102879:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010287c	obj/kernel.asm	/^c010287c:	e8 59 fb ff ff       	call   c01023da <trap_in_kernel>$/;"	l
c0102881	obj/kernel.asm	/^c0102881:	85 c0                	test   %eax,%eax$/;"	l
c0102883	obj/kernel.asm	/^c0102883:	74 23                	je     c01028a8 <trap_dispatch+0xf3>$/;"	l
c0102885	obj/kernel.asm	/^c0102885:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102888	obj/kernel.asm	/^c0102888:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010288c	obj/kernel.asm	/^c010288c:	c7 44 24 08 0c cb 10 	movl   $0xc010cb0c,0x8(%esp)$/;"	l
c0102893	obj/kernel.asm	/^c0102893:	c0 $/;"	l
c0102894	obj/kernel.asm	/^c0102894:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c010289b	obj/kernel.asm	/^c010289b:	00 $/;"	l
c010289c	obj/kernel.asm	/^c010289c:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c01028a3	obj/kernel.asm	/^c01028a3:	e8 32 e5 ff ff       	call   c0100dda <__panic>$/;"	l
c01028a8	obj/kernel.asm	/^c01028a8:	c7 04 24 3a cb 10 c0 	movl   $0xc010cb3a,(%esp)$/;"	l
c01028af	obj/kernel.asm	/^c01028af:	e8 a4 da ff ff       	call   c0100358 <cprintf>$/;"	l
c01028b4	obj/kernel.asm	/^c01028b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01028b7	obj/kernel.asm	/^c01028b7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01028bb	obj/kernel.asm	/^c01028bb:	c7 44 24 08 50 cb 10 	movl   $0xc010cb50,0x8(%esp)$/;"	l
c01028c2	obj/kernel.asm	/^c01028c2:	c0 $/;"	l
c01028c3	obj/kernel.asm	/^c01028c3:	c7 44 24 04 d9 00 00 	movl   $0xd9,0x4(%esp)$/;"	l
c01028ca	obj/kernel.asm	/^c01028ca:	00 $/;"	l
c01028cb	obj/kernel.asm	/^c01028cb:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c01028d2	obj/kernel.asm	/^c01028d2:	e8 03 e5 ff ff       	call   c0100dda <__panic>$/;"	l
c01028d7	obj/kernel.asm	/^c01028d7:	e9 2d 01 00 00       	jmp    c0102a09 <trap_dispatch+0x254>$/;"	l
c01028dc	obj/kernel.asm	/^c01028dc:	e8 43 8e 00 00       	call   c010b724 <syscall>$/;"	l
c01028e1	obj/kernel.asm	/^c01028e1:	e9 23 01 00 00       	jmp    c0102a09 <trap_dispatch+0x254>$/;"	l
c01028e6	obj/kernel.asm	/^c01028e6:	a1 78 1e 1b c0       	mov    0xc01b1e78,%eax$/;"	l
c01028eb	obj/kernel.asm	/^c01028eb:	83 c0 01             	add    $0x1,%eax$/;"	l
c01028ee	obj/kernel.asm	/^c01028ee:	a3 78 1e 1b c0       	mov    %eax,0xc01b1e78$/;"	l
c01028f3	obj/kernel.asm	/^c01028f3:	8b 0d 78 1e 1b c0    	mov    0xc01b1e78,%ecx$/;"	l
c01028f9	obj/kernel.asm	/^c01028f9:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx$/;"	l
c01028fe	obj/kernel.asm	/^c01028fe:	89 c8                	mov    %ecx,%eax$/;"	l
c0102900	obj/kernel.asm	/^c0102900:	f7 e2                	mul    %edx$/;"	l
c0102902	obj/kernel.asm	/^c0102902:	89 d0                	mov    %edx,%eax$/;"	l
c0102904	obj/kernel.asm	/^c0102904:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c0102907	obj/kernel.asm	/^c0102907:	6b c0 64             	imul   $0x64,%eax,%eax$/;"	l
c010290a	obj/kernel.asm	/^c010290a:	29 c1                	sub    %eax,%ecx$/;"	l
c010290c	obj/kernel.asm	/^c010290c:	89 c8                	mov    %ecx,%eax$/;"	l
c010290e	obj/kernel.asm	/^c010290e:	85 c0                	test   %eax,%eax$/;"	l
c0102910	obj/kernel.asm	/^c0102910:	75 3e                	jne    c0102950 <trap_dispatch+0x19b>$/;"	l
c0102912	obj/kernel.asm	/^c0102912:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102917	obj/kernel.asm	/^c0102917:	85 c0                	test   %eax,%eax$/;"	l
c0102919	obj/kernel.asm	/^c0102919:	75 24                	jne    c010293f <trap_dispatch+0x18a>$/;"	l
c010291b	obj/kernel.asm	/^c010291b:	c7 44 24 0c 79 cb 10 	movl   $0xc010cb79,0xc(%esp)$/;"	l
c0102922	obj/kernel.asm	/^c0102922:	c0 $/;"	l
c0102923	obj/kernel.asm	/^c0102923:	c7 44 24 08 bf ca 10 	movl   $0xc010cabf,0x8(%esp)$/;"	l
c010292a	obj/kernel.asm	/^c010292a:	c0 $/;"	l
c010292b	obj/kernel.asm	/^c010292b:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c0102932	obj/kernel.asm	/^c0102932:	00 $/;"	l
c0102933	obj/kernel.asm	/^c0102933:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c010293a	obj/kernel.asm	/^c010293a:	e8 9b e4 ff ff       	call   c0100dda <__panic>$/;"	l
c010293f	obj/kernel.asm	/^c010293f:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102944	obj/kernel.asm	/^c0102944:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010294b	obj/kernel.asm	/^c010294b:	e9 b9 00 00 00       	jmp    c0102a09 <trap_dispatch+0x254>$/;"	l
c0102950	obj/kernel.asm	/^c0102950:	e9 b4 00 00 00       	jmp    c0102a09 <trap_dispatch+0x254>$/;"	l
c0102955	obj/kernel.asm	/^c0102955:	e8 ee ed ff ff       	call   c0101748 <cons_getc>$/;"	l
c010295a	obj/kernel.asm	/^c010295a:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c010295d	obj/kernel.asm	/^c010295d:	0f be 55 f3          	movsbl -0xd(%ebp),%edx$/;"	l
c0102961	obj/kernel.asm	/^c0102961:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c0102965	obj/kernel.asm	/^c0102965:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0102969	obj/kernel.asm	/^c0102969:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010296d	obj/kernel.asm	/^c010296d:	c7 04 24 89 cb 10 c0 	movl   $0xc010cb89,(%esp)$/;"	l
c0102974	obj/kernel.asm	/^c0102974:	e8 df d9 ff ff       	call   c0100358 <cprintf>$/;"	l
c0102979	obj/kernel.asm	/^c0102979:	e9 8b 00 00 00       	jmp    c0102a09 <trap_dispatch+0x254>$/;"	l
c010297e	obj/kernel.asm	/^c010297e:	e8 c5 ed ff ff       	call   c0101748 <cons_getc>$/;"	l
c0102983	obj/kernel.asm	/^c0102983:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0102986	obj/kernel.asm	/^c0102986:	0f be 55 f3          	movsbl -0xd(%ebp),%edx$/;"	l
c010298a	obj/kernel.asm	/^c010298a:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c010298e	obj/kernel.asm	/^c010298e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0102992	obj/kernel.asm	/^c0102992:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102996	obj/kernel.asm	/^c0102996:	c7 04 24 9b cb 10 c0 	movl   $0xc010cb9b,(%esp)$/;"	l
c010299d	obj/kernel.asm	/^c010299d:	e8 b6 d9 ff ff       	call   c0100358 <cprintf>$/;"	l
c01029a2	obj/kernel.asm	/^c01029a2:	eb 65                	jmp    c0102a09 <trap_dispatch+0x254>$/;"	l
c01029a4	obj/kernel.asm	/^c01029a4:	c7 44 24 08 aa cb 10 	movl   $0xc010cbaa,0x8(%esp)$/;"	l
c01029ab	obj/kernel.asm	/^c01029ab:	c0 $/;"	l
c01029ac	obj/kernel.asm	/^c01029ac:	c7 44 24 04 0a 01 00 	movl   $0x10a,0x4(%esp)$/;"	l
c01029b3	obj/kernel.asm	/^c01029b3:	00 $/;"	l
c01029b4	obj/kernel.asm	/^c01029b4:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c01029bb	obj/kernel.asm	/^c01029bb:	e8 1a e4 ff ff       	call   c0100dda <__panic>$/;"	l
c01029c0	obj/kernel.asm	/^c01029c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01029c3	obj/kernel.asm	/^c01029c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01029c6	obj/kernel.asm	/^c01029c6:	e8 25 fa ff ff       	call   c01023f0 <print_trapframe>$/;"	l
c01029cb	obj/kernel.asm	/^c01029cb:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c01029d0	obj/kernel.asm	/^c01029d0:	85 c0                	test   %eax,%eax$/;"	l
c01029d2	obj/kernel.asm	/^c01029d2:	74 18                	je     c01029ec <trap_dispatch+0x237>$/;"	l
c01029d4	obj/kernel.asm	/^c01029d4:	c7 04 24 ba cb 10 c0 	movl   $0xc010cbba,(%esp)$/;"	l
c01029db	obj/kernel.asm	/^c01029db:	e8 78 d9 ff ff       	call   c0100358 <cprintf>$/;"	l
c01029e0	obj/kernel.asm	/^c01029e0:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c01029e7	obj/kernel.asm	/^c01029e7:	e8 47 74 00 00       	call   c0109e33 <do_exit>$/;"	l
c01029ec	obj/kernel.asm	/^c01029ec:	c7 44 24 08 cb cb 10 	movl   $0xc010cbcb,0x8(%esp)$/;"	l
c01029f3	obj/kernel.asm	/^c01029f3:	c0 $/;"	l
c01029f4	obj/kernel.asm	/^c01029f4:	c7 44 24 04 17 01 00 	movl   $0x117,0x4(%esp)$/;"	l
c01029fb	obj/kernel.asm	/^c01029fb:	00 $/;"	l
c01029fc	obj/kernel.asm	/^c01029fc:	c7 04 24 ae c8 10 c0 	movl   $0xc010c8ae,(%esp)$/;"	l
c0102a03	obj/kernel.asm	/^c0102a03:	e8 d2 e3 ff ff       	call   c0100dda <__panic>$/;"	l
c0102a08	obj/kernel.asm	/^c0102a08:	90                   	nop$/;"	l
c0102a09	obj/kernel.asm	/^c0102a09:	c9                   	leave  $/;"	l
c0102a0a	obj/kernel.asm	/^c0102a0a:	c3                   	ret    $/;"	l
c0102a0b	obj/kernel.asm	/^c0102a0b <trap>:$/;"	l
c0102a0b	obj/kernel.asm	/^c0102a0b:	55                   	push   %ebp$/;"	l
c0102a0c	obj/kernel.asm	/^c0102a0c:	89 e5                	mov    %esp,%ebp$/;"	l
c0102a0e	obj/kernel.asm	/^c0102a0e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0102a11	obj/kernel.asm	/^c0102a11:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102a16	obj/kernel.asm	/^c0102a16:	85 c0                	test   %eax,%eax$/;"	l
c0102a18	obj/kernel.asm	/^c0102a18:	75 0d                	jne    c0102a27 <trap+0x1c>$/;"	l
c0102a1a	obj/kernel.asm	/^c0102a1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a1d	obj/kernel.asm	/^c0102a1d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a20	obj/kernel.asm	/^c0102a20:	e8 90 fd ff ff       	call   c01027b5 <trap_dispatch>$/;"	l
c0102a25	obj/kernel.asm	/^c0102a25:	eb 6c                	jmp    c0102a93 <trap+0x88>$/;"	l
c0102a27	obj/kernel.asm	/^c0102a27:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102a2c	obj/kernel.asm	/^c0102a2c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0102a2f	obj/kernel.asm	/^c0102a2f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102a32	obj/kernel.asm	/^c0102a32:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102a37	obj/kernel.asm	/^c0102a37:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102a3a	obj/kernel.asm	/^c0102a3a:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102a3d	obj/kernel.asm	/^c0102a3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a40	obj/kernel.asm	/^c0102a40:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a43	obj/kernel.asm	/^c0102a43:	e8 92 f9 ff ff       	call   c01023da <trap_in_kernel>$/;"	l
c0102a48	obj/kernel.asm	/^c0102a48:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102a4b	obj/kernel.asm	/^c0102a4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a4e	obj/kernel.asm	/^c0102a4e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a51	obj/kernel.asm	/^c0102a51:	e8 5f fd ff ff       	call   c01027b5 <trap_dispatch>$/;"	l
c0102a56	obj/kernel.asm	/^c0102a56:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102a5b	obj/kernel.asm	/^c0102a5b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102a5e	obj/kernel.asm	/^c0102a5e:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102a61	obj/kernel.asm	/^c0102a61:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102a65	obj/kernel.asm	/^c0102a65:	75 2c                	jne    c0102a93 <trap+0x88>$/;"	l
c0102a67	obj/kernel.asm	/^c0102a67:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102a6c	obj/kernel.asm	/^c0102a6c:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102a6f	obj/kernel.asm	/^c0102a6f:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102a72	obj/kernel.asm	/^c0102a72:	85 c0                	test   %eax,%eax$/;"	l
c0102a74	obj/kernel.asm	/^c0102a74:	74 0c                	je     c0102a82 <trap+0x77>$/;"	l
c0102a76	obj/kernel.asm	/^c0102a76:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c0102a7d	obj/kernel.asm	/^c0102a7d:	e8 b1 73 00 00       	call   c0109e33 <do_exit>$/;"	l
c0102a82	obj/kernel.asm	/^c0102a82:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0102a87	obj/kernel.asm	/^c0102a87:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102a8a	obj/kernel.asm	/^c0102a8a:	85 c0                	test   %eax,%eax$/;"	l
c0102a8c	obj/kernel.asm	/^c0102a8c:	74 05                	je     c0102a93 <trap+0x88>$/;"	l
c0102a8e	obj/kernel.asm	/^c0102a8e:	e8 6e 87 00 00       	call   c010b201 <schedule>$/;"	l
c0102a93	obj/kernel.asm	/^c0102a93:	c9                   	leave  $/;"	l
c0102a94	obj/kernel.asm	/^c0102a94:	c3                   	ret    $/;"	l
c0102a95	obj/kernel.asm	/^c0102a95 <__alltraps>:$/;"	l
c0102a95	obj/kernel.asm	/^c0102a95:	1e                   	push   %ds$/;"	l
c0102a96	obj/kernel.asm	/^c0102a96:	06                   	push   %es$/;"	l
c0102a97	obj/kernel.asm	/^c0102a97:	0f a0                	push   %fs$/;"	l
c0102a99	obj/kernel.asm	/^c0102a99:	0f a8                	push   %gs$/;"	l
c0102a9b	obj/kernel.asm	/^c0102a9b:	60                   	pusha  $/;"	l
c0102a9c	obj/kernel.asm	/^c0102a9c:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0102aa1	obj/kernel.asm	/^c0102aa1:	8e d8                	mov    %eax,%ds$/;"	l
c0102aa3	obj/kernel.asm	/^c0102aa3:	8e c0                	mov    %eax,%es$/;"	l
c0102aa5	obj/kernel.asm	/^c0102aa5:	54                   	push   %esp$/;"	l
c0102aa6	obj/kernel.asm	/^c0102aa6:	e8 60 ff ff ff       	call   c0102a0b <trap>$/;"	l
c0102aab	obj/kernel.asm	/^c0102aab:	5c                   	pop    %esp$/;"	l
c0102aac	obj/kernel.asm	/^c0102aac <__trapret>:$/;"	l
c0102aac	obj/kernel.asm	/^c0102aac:	61                   	popa   $/;"	l
c0102aad	obj/kernel.asm	/^c0102aad:	0f a9                	pop    %gs$/;"	l
c0102aaf	obj/kernel.asm	/^c0102aaf:	0f a1                	pop    %fs$/;"	l
c0102ab1	obj/kernel.asm	/^c0102ab1:	07                   	pop    %es$/;"	l
c0102ab2	obj/kernel.asm	/^c0102ab2:	1f                   	pop    %ds$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	83 c4 08             	add    $0x8,%esp$/;"	l
c0102ab6	obj/kernel.asm	/^c0102ab6:	cf                   	iret   $/;"	l
c0102ab7	obj/kernel.asm	/^c0102ab7 <forkrets>:$/;"	l
c0102ab7	obj/kernel.asm	/^c0102ab7:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c0102abb	obj/kernel.asm	/^c0102abb:	e9 ec ff ff ff       	jmp    c0102aac <__trapret>$/;"	l
c0102ac0	obj/kernel.asm	/^c0102ac0 <vector0>:$/;"	l
c0102ac0	obj/kernel.asm	/^c0102ac0:	6a 00                	push   $0x0$/;"	l
c0102ac2	obj/kernel.asm	/^c0102ac2:	6a 00                	push   $0x0$/;"	l
c0102ac4	obj/kernel.asm	/^c0102ac4:	e9 cc ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ac9	obj/kernel.asm	/^c0102ac9 <vector1>:$/;"	l
c0102ac9	obj/kernel.asm	/^c0102ac9:	6a 00                	push   $0x0$/;"	l
c0102acb	obj/kernel.asm	/^c0102acb:	6a 01                	push   $0x1$/;"	l
c0102acd	obj/kernel.asm	/^c0102acd:	e9 c3 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ad2	obj/kernel.asm	/^c0102ad2 <vector2>:$/;"	l
c0102ad2	obj/kernel.asm	/^c0102ad2:	6a 00                	push   $0x0$/;"	l
c0102ad4	obj/kernel.asm	/^c0102ad4:	6a 02                	push   $0x2$/;"	l
c0102ad6	obj/kernel.asm	/^c0102ad6:	e9 ba ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102adb	obj/kernel.asm	/^c0102adb <vector3>:$/;"	l
c0102adb	obj/kernel.asm	/^c0102adb:	6a 00                	push   $0x0$/;"	l
c0102add	obj/kernel.asm	/^c0102add:	6a 03                	push   $0x3$/;"	l
c0102adf	obj/kernel.asm	/^c0102adf:	e9 b1 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ae4	obj/kernel.asm	/^c0102ae4 <vector4>:$/;"	l
c0102ae4	obj/kernel.asm	/^c0102ae4:	6a 00                	push   $0x0$/;"	l
c0102ae6	obj/kernel.asm	/^c0102ae6:	6a 04                	push   $0x4$/;"	l
c0102ae8	obj/kernel.asm	/^c0102ae8:	e9 a8 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102aed	obj/kernel.asm	/^c0102aed <vector5>:$/;"	l
c0102aed	obj/kernel.asm	/^c0102aed:	6a 00                	push   $0x0$/;"	l
c0102aef	obj/kernel.asm	/^c0102aef:	6a 05                	push   $0x5$/;"	l
c0102af1	obj/kernel.asm	/^c0102af1:	e9 9f ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102af6	obj/kernel.asm	/^c0102af6 <vector6>:$/;"	l
c0102af6	obj/kernel.asm	/^c0102af6:	6a 00                	push   $0x0$/;"	l
c0102af8	obj/kernel.asm	/^c0102af8:	6a 06                	push   $0x6$/;"	l
c0102afa	obj/kernel.asm	/^c0102afa:	e9 96 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102aff	obj/kernel.asm	/^c0102aff <vector7>:$/;"	l
c0102aff	obj/kernel.asm	/^c0102aff:	6a 00                	push   $0x0$/;"	l
c0102b01	obj/kernel.asm	/^c0102b01:	6a 07                	push   $0x7$/;"	l
c0102b03	obj/kernel.asm	/^c0102b03:	e9 8d ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b08	obj/kernel.asm	/^c0102b08 <vector8>:$/;"	l
c0102b08	obj/kernel.asm	/^c0102b08:	6a 08                	push   $0x8$/;"	l
c0102b0a	obj/kernel.asm	/^c0102b0a:	e9 86 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b0f	obj/kernel.asm	/^c0102b0f <vector9>:$/;"	l
c0102b0f	obj/kernel.asm	/^c0102b0f:	6a 09                	push   $0x9$/;"	l
c0102b11	obj/kernel.asm	/^c0102b11:	e9 7f ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b16	obj/kernel.asm	/^c0102b16 <vector10>:$/;"	l
c0102b16	obj/kernel.asm	/^c0102b16:	6a 0a                	push   $0xa$/;"	l
c0102b18	obj/kernel.asm	/^c0102b18:	e9 78 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b1d	obj/kernel.asm	/^c0102b1d <vector11>:$/;"	l
c0102b1d	obj/kernel.asm	/^c0102b1d:	6a 0b                	push   $0xb$/;"	l
c0102b1f	obj/kernel.asm	/^c0102b1f:	e9 71 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b24	obj/kernel.asm	/^c0102b24 <vector12>:$/;"	l
c0102b24	obj/kernel.asm	/^c0102b24:	6a 0c                	push   $0xc$/;"	l
c0102b26	obj/kernel.asm	/^c0102b26:	e9 6a ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b2b	obj/kernel.asm	/^c0102b2b <vector13>:$/;"	l
c0102b2b	obj/kernel.asm	/^c0102b2b:	6a 0d                	push   $0xd$/;"	l
c0102b2d	obj/kernel.asm	/^c0102b2d:	e9 63 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b32	obj/kernel.asm	/^c0102b32 <vector14>:$/;"	l
c0102b32	obj/kernel.asm	/^c0102b32:	6a 0e                	push   $0xe$/;"	l
c0102b34	obj/kernel.asm	/^c0102b34:	e9 5c ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b39	obj/kernel.asm	/^c0102b39 <vector15>:$/;"	l
c0102b39	obj/kernel.asm	/^c0102b39:	6a 00                	push   $0x0$/;"	l
c0102b3b	obj/kernel.asm	/^c0102b3b:	6a 0f                	push   $0xf$/;"	l
c0102b3d	obj/kernel.asm	/^c0102b3d:	e9 53 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b42	obj/kernel.asm	/^c0102b42 <vector16>:$/;"	l
c0102b42	obj/kernel.asm	/^c0102b42:	6a 00                	push   $0x0$/;"	l
c0102b44	obj/kernel.asm	/^c0102b44:	6a 10                	push   $0x10$/;"	l
c0102b46	obj/kernel.asm	/^c0102b46:	e9 4a ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b4b	obj/kernel.asm	/^c0102b4b <vector17>:$/;"	l
c0102b4b	obj/kernel.asm	/^c0102b4b:	6a 11                	push   $0x11$/;"	l
c0102b4d	obj/kernel.asm	/^c0102b4d:	e9 43 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b52	obj/kernel.asm	/^c0102b52 <vector18>:$/;"	l
c0102b52	obj/kernel.asm	/^c0102b52:	6a 00                	push   $0x0$/;"	l
c0102b54	obj/kernel.asm	/^c0102b54:	6a 12                	push   $0x12$/;"	l
c0102b56	obj/kernel.asm	/^c0102b56:	e9 3a ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b5b	obj/kernel.asm	/^c0102b5b <vector19>:$/;"	l
c0102b5b	obj/kernel.asm	/^c0102b5b:	6a 00                	push   $0x0$/;"	l
c0102b5d	obj/kernel.asm	/^c0102b5d:	6a 13                	push   $0x13$/;"	l
c0102b5f	obj/kernel.asm	/^c0102b5f:	e9 31 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b64	obj/kernel.asm	/^c0102b64 <vector20>:$/;"	l
c0102b64	obj/kernel.asm	/^c0102b64:	6a 00                	push   $0x0$/;"	l
c0102b66	obj/kernel.asm	/^c0102b66:	6a 14                	push   $0x14$/;"	l
c0102b68	obj/kernel.asm	/^c0102b68:	e9 28 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b6d	obj/kernel.asm	/^c0102b6d <vector21>:$/;"	l
c0102b6d	obj/kernel.asm	/^c0102b6d:	6a 00                	push   $0x0$/;"	l
c0102b6f	obj/kernel.asm	/^c0102b6f:	6a 15                	push   $0x15$/;"	l
c0102b71	obj/kernel.asm	/^c0102b71:	e9 1f ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b76	obj/kernel.asm	/^c0102b76 <vector22>:$/;"	l
c0102b76	obj/kernel.asm	/^c0102b76:	6a 00                	push   $0x0$/;"	l
c0102b78	obj/kernel.asm	/^c0102b78:	6a 16                	push   $0x16$/;"	l
c0102b7a	obj/kernel.asm	/^c0102b7a:	e9 16 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b7f	obj/kernel.asm	/^c0102b7f <vector23>:$/;"	l
c0102b7f	obj/kernel.asm	/^c0102b7f:	6a 00                	push   $0x0$/;"	l
c0102b81	obj/kernel.asm	/^c0102b81:	6a 17                	push   $0x17$/;"	l
c0102b83	obj/kernel.asm	/^c0102b83:	e9 0d ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88 <vector24>:$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88:	6a 00                	push   $0x0$/;"	l
c0102b8a	obj/kernel.asm	/^c0102b8a:	6a 18                	push   $0x18$/;"	l
c0102b8c	obj/kernel.asm	/^c0102b8c:	e9 04 ff ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b91	obj/kernel.asm	/^c0102b91 <vector25>:$/;"	l
c0102b91	obj/kernel.asm	/^c0102b91:	6a 00                	push   $0x0$/;"	l
c0102b93	obj/kernel.asm	/^c0102b93:	6a 19                	push   $0x19$/;"	l
c0102b95	obj/kernel.asm	/^c0102b95:	e9 fb fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102b9a	obj/kernel.asm	/^c0102b9a <vector26>:$/;"	l
c0102b9a	obj/kernel.asm	/^c0102b9a:	6a 00                	push   $0x0$/;"	l
c0102b9c	obj/kernel.asm	/^c0102b9c:	6a 1a                	push   $0x1a$/;"	l
c0102b9e	obj/kernel.asm	/^c0102b9e:	e9 f2 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ba3	obj/kernel.asm	/^c0102ba3 <vector27>:$/;"	l
c0102ba3	obj/kernel.asm	/^c0102ba3:	6a 00                	push   $0x0$/;"	l
c0102ba5	obj/kernel.asm	/^c0102ba5:	6a 1b                	push   $0x1b$/;"	l
c0102ba7	obj/kernel.asm	/^c0102ba7:	e9 e9 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102bac	obj/kernel.asm	/^c0102bac <vector28>:$/;"	l
c0102bac	obj/kernel.asm	/^c0102bac:	6a 00                	push   $0x0$/;"	l
c0102bae	obj/kernel.asm	/^c0102bae:	6a 1c                	push   $0x1c$/;"	l
c0102bb0	obj/kernel.asm	/^c0102bb0:	e9 e0 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102bb5	obj/kernel.asm	/^c0102bb5 <vector29>:$/;"	l
c0102bb5	obj/kernel.asm	/^c0102bb5:	6a 00                	push   $0x0$/;"	l
c0102bb7	obj/kernel.asm	/^c0102bb7:	6a 1d                	push   $0x1d$/;"	l
c0102bb9	obj/kernel.asm	/^c0102bb9:	e9 d7 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102bbe	obj/kernel.asm	/^c0102bbe <vector30>:$/;"	l
c0102bbe	obj/kernel.asm	/^c0102bbe:	6a 00                	push   $0x0$/;"	l
c0102bc0	obj/kernel.asm	/^c0102bc0:	6a 1e                	push   $0x1e$/;"	l
c0102bc2	obj/kernel.asm	/^c0102bc2:	e9 ce fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102bc7	obj/kernel.asm	/^c0102bc7 <vector31>:$/;"	l
c0102bc7	obj/kernel.asm	/^c0102bc7:	6a 00                	push   $0x0$/;"	l
c0102bc9	obj/kernel.asm	/^c0102bc9:	6a 1f                	push   $0x1f$/;"	l
c0102bcb	obj/kernel.asm	/^c0102bcb:	e9 c5 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102bd0	obj/kernel.asm	/^c0102bd0 <vector32>:$/;"	l
c0102bd0	obj/kernel.asm	/^c0102bd0:	6a 00                	push   $0x0$/;"	l
c0102bd2	obj/kernel.asm	/^c0102bd2:	6a 20                	push   $0x20$/;"	l
c0102bd4	obj/kernel.asm	/^c0102bd4:	e9 bc fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102bd9	obj/kernel.asm	/^c0102bd9 <vector33>:$/;"	l
c0102bd9	obj/kernel.asm	/^c0102bd9:	6a 00                	push   $0x0$/;"	l
c0102bdb	obj/kernel.asm	/^c0102bdb:	6a 21                	push   $0x21$/;"	l
c0102bdd	obj/kernel.asm	/^c0102bdd:	e9 b3 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102be2	obj/kernel.asm	/^c0102be2 <vector34>:$/;"	l
c0102be2	obj/kernel.asm	/^c0102be2:	6a 00                	push   $0x0$/;"	l
c0102be4	obj/kernel.asm	/^c0102be4:	6a 22                	push   $0x22$/;"	l
c0102be6	obj/kernel.asm	/^c0102be6:	e9 aa fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102beb	obj/kernel.asm	/^c0102beb <vector35>:$/;"	l
c0102beb	obj/kernel.asm	/^c0102beb:	6a 00                	push   $0x0$/;"	l
c0102bed	obj/kernel.asm	/^c0102bed:	6a 23                	push   $0x23$/;"	l
c0102bef	obj/kernel.asm	/^c0102bef:	e9 a1 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102bf4	obj/kernel.asm	/^c0102bf4 <vector36>:$/;"	l
c0102bf4	obj/kernel.asm	/^c0102bf4:	6a 00                	push   $0x0$/;"	l
c0102bf6	obj/kernel.asm	/^c0102bf6:	6a 24                	push   $0x24$/;"	l
c0102bf8	obj/kernel.asm	/^c0102bf8:	e9 98 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102bfd	obj/kernel.asm	/^c0102bfd <vector37>:$/;"	l
c0102bfd	obj/kernel.asm	/^c0102bfd:	6a 00                	push   $0x0$/;"	l
c0102bff	obj/kernel.asm	/^c0102bff:	6a 25                	push   $0x25$/;"	l
c0102c01	obj/kernel.asm	/^c0102c01:	e9 8f fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c06	obj/kernel.asm	/^c0102c06 <vector38>:$/;"	l
c0102c06	obj/kernel.asm	/^c0102c06:	6a 00                	push   $0x0$/;"	l
c0102c08	obj/kernel.asm	/^c0102c08:	6a 26                	push   $0x26$/;"	l
c0102c0a	obj/kernel.asm	/^c0102c0a:	e9 86 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c0f	obj/kernel.asm	/^c0102c0f <vector39>:$/;"	l
c0102c0f	obj/kernel.asm	/^c0102c0f:	6a 00                	push   $0x0$/;"	l
c0102c11	obj/kernel.asm	/^c0102c11:	6a 27                	push   $0x27$/;"	l
c0102c13	obj/kernel.asm	/^c0102c13:	e9 7d fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c18	obj/kernel.asm	/^c0102c18 <vector40>:$/;"	l
c0102c18	obj/kernel.asm	/^c0102c18:	6a 00                	push   $0x0$/;"	l
c0102c1a	obj/kernel.asm	/^c0102c1a:	6a 28                	push   $0x28$/;"	l
c0102c1c	obj/kernel.asm	/^c0102c1c:	e9 74 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c21	obj/kernel.asm	/^c0102c21 <vector41>:$/;"	l
c0102c21	obj/kernel.asm	/^c0102c21:	6a 00                	push   $0x0$/;"	l
c0102c23	obj/kernel.asm	/^c0102c23:	6a 29                	push   $0x29$/;"	l
c0102c25	obj/kernel.asm	/^c0102c25:	e9 6b fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c2a	obj/kernel.asm	/^c0102c2a <vector42>:$/;"	l
c0102c2a	obj/kernel.asm	/^c0102c2a:	6a 00                	push   $0x0$/;"	l
c0102c2c	obj/kernel.asm	/^c0102c2c:	6a 2a                	push   $0x2a$/;"	l
c0102c2e	obj/kernel.asm	/^c0102c2e:	e9 62 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c33	obj/kernel.asm	/^c0102c33 <vector43>:$/;"	l
c0102c33	obj/kernel.asm	/^c0102c33:	6a 00                	push   $0x0$/;"	l
c0102c35	obj/kernel.asm	/^c0102c35:	6a 2b                	push   $0x2b$/;"	l
c0102c37	obj/kernel.asm	/^c0102c37:	e9 59 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c3c	obj/kernel.asm	/^c0102c3c <vector44>:$/;"	l
c0102c3c	obj/kernel.asm	/^c0102c3c:	6a 00                	push   $0x0$/;"	l
c0102c3e	obj/kernel.asm	/^c0102c3e:	6a 2c                	push   $0x2c$/;"	l
c0102c40	obj/kernel.asm	/^c0102c40:	e9 50 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c45	obj/kernel.asm	/^c0102c45 <vector45>:$/;"	l
c0102c45	obj/kernel.asm	/^c0102c45:	6a 00                	push   $0x0$/;"	l
c0102c47	obj/kernel.asm	/^c0102c47:	6a 2d                	push   $0x2d$/;"	l
c0102c49	obj/kernel.asm	/^c0102c49:	e9 47 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c4e	obj/kernel.asm	/^c0102c4e <vector46>:$/;"	l
c0102c4e	obj/kernel.asm	/^c0102c4e:	6a 00                	push   $0x0$/;"	l
c0102c50	obj/kernel.asm	/^c0102c50:	6a 2e                	push   $0x2e$/;"	l
c0102c52	obj/kernel.asm	/^c0102c52:	e9 3e fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c57	obj/kernel.asm	/^c0102c57 <vector47>:$/;"	l
c0102c57	obj/kernel.asm	/^c0102c57:	6a 00                	push   $0x0$/;"	l
c0102c59	obj/kernel.asm	/^c0102c59:	6a 2f                	push   $0x2f$/;"	l
c0102c5b	obj/kernel.asm	/^c0102c5b:	e9 35 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c60	obj/kernel.asm	/^c0102c60 <vector48>:$/;"	l
c0102c60	obj/kernel.asm	/^c0102c60:	6a 00                	push   $0x0$/;"	l
c0102c62	obj/kernel.asm	/^c0102c62:	6a 30                	push   $0x30$/;"	l
c0102c64	obj/kernel.asm	/^c0102c64:	e9 2c fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c69	obj/kernel.asm	/^c0102c69 <vector49>:$/;"	l
c0102c69	obj/kernel.asm	/^c0102c69:	6a 00                	push   $0x0$/;"	l
c0102c6b	obj/kernel.asm	/^c0102c6b:	6a 31                	push   $0x31$/;"	l
c0102c6d	obj/kernel.asm	/^c0102c6d:	e9 23 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c72	obj/kernel.asm	/^c0102c72 <vector50>:$/;"	l
c0102c72	obj/kernel.asm	/^c0102c72:	6a 00                	push   $0x0$/;"	l
c0102c74	obj/kernel.asm	/^c0102c74:	6a 32                	push   $0x32$/;"	l
c0102c76	obj/kernel.asm	/^c0102c76:	e9 1a fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c7b	obj/kernel.asm	/^c0102c7b <vector51>:$/;"	l
c0102c7b	obj/kernel.asm	/^c0102c7b:	6a 00                	push   $0x0$/;"	l
c0102c7d	obj/kernel.asm	/^c0102c7d:	6a 33                	push   $0x33$/;"	l
c0102c7f	obj/kernel.asm	/^c0102c7f:	e9 11 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c84	obj/kernel.asm	/^c0102c84 <vector52>:$/;"	l
c0102c84	obj/kernel.asm	/^c0102c84:	6a 00                	push   $0x0$/;"	l
c0102c86	obj/kernel.asm	/^c0102c86:	6a 34                	push   $0x34$/;"	l
c0102c88	obj/kernel.asm	/^c0102c88:	e9 08 fe ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c8d	obj/kernel.asm	/^c0102c8d <vector53>:$/;"	l
c0102c8d	obj/kernel.asm	/^c0102c8d:	6a 00                	push   $0x0$/;"	l
c0102c8f	obj/kernel.asm	/^c0102c8f:	6a 35                	push   $0x35$/;"	l
c0102c91	obj/kernel.asm	/^c0102c91:	e9 ff fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c96	obj/kernel.asm	/^c0102c96 <vector54>:$/;"	l
c0102c96	obj/kernel.asm	/^c0102c96:	6a 00                	push   $0x0$/;"	l
c0102c98	obj/kernel.asm	/^c0102c98:	6a 36                	push   $0x36$/;"	l
c0102c9a	obj/kernel.asm	/^c0102c9a:	e9 f6 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102c9f	obj/kernel.asm	/^c0102c9f <vector55>:$/;"	l
c0102c9f	obj/kernel.asm	/^c0102c9f:	6a 00                	push   $0x0$/;"	l
c0102ca1	obj/kernel.asm	/^c0102ca1:	6a 37                	push   $0x37$/;"	l
c0102ca3	obj/kernel.asm	/^c0102ca3:	e9 ed fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ca8	obj/kernel.asm	/^c0102ca8 <vector56>:$/;"	l
c0102ca8	obj/kernel.asm	/^c0102ca8:	6a 00                	push   $0x0$/;"	l
c0102caa	obj/kernel.asm	/^c0102caa:	6a 38                	push   $0x38$/;"	l
c0102cac	obj/kernel.asm	/^c0102cac:	e9 e4 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102cb1	obj/kernel.asm	/^c0102cb1 <vector57>:$/;"	l
c0102cb1	obj/kernel.asm	/^c0102cb1:	6a 00                	push   $0x0$/;"	l
c0102cb3	obj/kernel.asm	/^c0102cb3:	6a 39                	push   $0x39$/;"	l
c0102cb5	obj/kernel.asm	/^c0102cb5:	e9 db fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102cba	obj/kernel.asm	/^c0102cba <vector58>:$/;"	l
c0102cba	obj/kernel.asm	/^c0102cba:	6a 00                	push   $0x0$/;"	l
c0102cbc	obj/kernel.asm	/^c0102cbc:	6a 3a                	push   $0x3a$/;"	l
c0102cbe	obj/kernel.asm	/^c0102cbe:	e9 d2 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102cc3	obj/kernel.asm	/^c0102cc3 <vector59>:$/;"	l
c0102cc3	obj/kernel.asm	/^c0102cc3:	6a 00                	push   $0x0$/;"	l
c0102cc5	obj/kernel.asm	/^c0102cc5:	6a 3b                	push   $0x3b$/;"	l
c0102cc7	obj/kernel.asm	/^c0102cc7:	e9 c9 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ccc	obj/kernel.asm	/^c0102ccc <vector60>:$/;"	l
c0102ccc	obj/kernel.asm	/^c0102ccc:	6a 00                	push   $0x0$/;"	l
c0102cce	obj/kernel.asm	/^c0102cce:	6a 3c                	push   $0x3c$/;"	l
c0102cd0	obj/kernel.asm	/^c0102cd0:	e9 c0 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102cd5	obj/kernel.asm	/^c0102cd5 <vector61>:$/;"	l
c0102cd5	obj/kernel.asm	/^c0102cd5:	6a 00                	push   $0x0$/;"	l
c0102cd7	obj/kernel.asm	/^c0102cd7:	6a 3d                	push   $0x3d$/;"	l
c0102cd9	obj/kernel.asm	/^c0102cd9:	e9 b7 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102cde	obj/kernel.asm	/^c0102cde <vector62>:$/;"	l
c0102cde	obj/kernel.asm	/^c0102cde:	6a 00                	push   $0x0$/;"	l
c0102ce0	obj/kernel.asm	/^c0102ce0:	6a 3e                	push   $0x3e$/;"	l
c0102ce2	obj/kernel.asm	/^c0102ce2:	e9 ae fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ce7	obj/kernel.asm	/^c0102ce7 <vector63>:$/;"	l
c0102ce7	obj/kernel.asm	/^c0102ce7:	6a 00                	push   $0x0$/;"	l
c0102ce9	obj/kernel.asm	/^c0102ce9:	6a 3f                	push   $0x3f$/;"	l
c0102ceb	obj/kernel.asm	/^c0102ceb:	e9 a5 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102cf0	obj/kernel.asm	/^c0102cf0 <vector64>:$/;"	l
c0102cf0	obj/kernel.asm	/^c0102cf0:	6a 00                	push   $0x0$/;"	l
c0102cf2	obj/kernel.asm	/^c0102cf2:	6a 40                	push   $0x40$/;"	l
c0102cf4	obj/kernel.asm	/^c0102cf4:	e9 9c fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102cf9	obj/kernel.asm	/^c0102cf9 <vector65>:$/;"	l
c0102cf9	obj/kernel.asm	/^c0102cf9:	6a 00                	push   $0x0$/;"	l
c0102cfb	obj/kernel.asm	/^c0102cfb:	6a 41                	push   $0x41$/;"	l
c0102cfd	obj/kernel.asm	/^c0102cfd:	e9 93 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d02	obj/kernel.asm	/^c0102d02 <vector66>:$/;"	l
c0102d02	obj/kernel.asm	/^c0102d02:	6a 00                	push   $0x0$/;"	l
c0102d04	obj/kernel.asm	/^c0102d04:	6a 42                	push   $0x42$/;"	l
c0102d06	obj/kernel.asm	/^c0102d06:	e9 8a fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d0b	obj/kernel.asm	/^c0102d0b <vector67>:$/;"	l
c0102d0b	obj/kernel.asm	/^c0102d0b:	6a 00                	push   $0x0$/;"	l
c0102d0d	obj/kernel.asm	/^c0102d0d:	6a 43                	push   $0x43$/;"	l
c0102d0f	obj/kernel.asm	/^c0102d0f:	e9 81 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d14	obj/kernel.asm	/^c0102d14 <vector68>:$/;"	l
c0102d14	obj/kernel.asm	/^c0102d14:	6a 00                	push   $0x0$/;"	l
c0102d16	obj/kernel.asm	/^c0102d16:	6a 44                	push   $0x44$/;"	l
c0102d18	obj/kernel.asm	/^c0102d18:	e9 78 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d1d	obj/kernel.asm	/^c0102d1d <vector69>:$/;"	l
c0102d1d	obj/kernel.asm	/^c0102d1d:	6a 00                	push   $0x0$/;"	l
c0102d1f	obj/kernel.asm	/^c0102d1f:	6a 45                	push   $0x45$/;"	l
c0102d21	obj/kernel.asm	/^c0102d21:	e9 6f fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d26	obj/kernel.asm	/^c0102d26 <vector70>:$/;"	l
c0102d26	obj/kernel.asm	/^c0102d26:	6a 00                	push   $0x0$/;"	l
c0102d28	obj/kernel.asm	/^c0102d28:	6a 46                	push   $0x46$/;"	l
c0102d2a	obj/kernel.asm	/^c0102d2a:	e9 66 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d2f	obj/kernel.asm	/^c0102d2f <vector71>:$/;"	l
c0102d2f	obj/kernel.asm	/^c0102d2f:	6a 00                	push   $0x0$/;"	l
c0102d31	obj/kernel.asm	/^c0102d31:	6a 47                	push   $0x47$/;"	l
c0102d33	obj/kernel.asm	/^c0102d33:	e9 5d fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d38	obj/kernel.asm	/^c0102d38 <vector72>:$/;"	l
c0102d38	obj/kernel.asm	/^c0102d38:	6a 00                	push   $0x0$/;"	l
c0102d3a	obj/kernel.asm	/^c0102d3a:	6a 48                	push   $0x48$/;"	l
c0102d3c	obj/kernel.asm	/^c0102d3c:	e9 54 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d41	obj/kernel.asm	/^c0102d41 <vector73>:$/;"	l
c0102d41	obj/kernel.asm	/^c0102d41:	6a 00                	push   $0x0$/;"	l
c0102d43	obj/kernel.asm	/^c0102d43:	6a 49                	push   $0x49$/;"	l
c0102d45	obj/kernel.asm	/^c0102d45:	e9 4b fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d4a	obj/kernel.asm	/^c0102d4a <vector74>:$/;"	l
c0102d4a	obj/kernel.asm	/^c0102d4a:	6a 00                	push   $0x0$/;"	l
c0102d4c	obj/kernel.asm	/^c0102d4c:	6a 4a                	push   $0x4a$/;"	l
c0102d4e	obj/kernel.asm	/^c0102d4e:	e9 42 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d53	obj/kernel.asm	/^c0102d53 <vector75>:$/;"	l
c0102d53	obj/kernel.asm	/^c0102d53:	6a 00                	push   $0x0$/;"	l
c0102d55	obj/kernel.asm	/^c0102d55:	6a 4b                	push   $0x4b$/;"	l
c0102d57	obj/kernel.asm	/^c0102d57:	e9 39 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d5c	obj/kernel.asm	/^c0102d5c <vector76>:$/;"	l
c0102d5c	obj/kernel.asm	/^c0102d5c:	6a 00                	push   $0x0$/;"	l
c0102d5e	obj/kernel.asm	/^c0102d5e:	6a 4c                	push   $0x4c$/;"	l
c0102d60	obj/kernel.asm	/^c0102d60:	e9 30 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d65	obj/kernel.asm	/^c0102d65 <vector77>:$/;"	l
c0102d65	obj/kernel.asm	/^c0102d65:	6a 00                	push   $0x0$/;"	l
c0102d67	obj/kernel.asm	/^c0102d67:	6a 4d                	push   $0x4d$/;"	l
c0102d69	obj/kernel.asm	/^c0102d69:	e9 27 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d6e	obj/kernel.asm	/^c0102d6e <vector78>:$/;"	l
c0102d6e	obj/kernel.asm	/^c0102d6e:	6a 00                	push   $0x0$/;"	l
c0102d70	obj/kernel.asm	/^c0102d70:	6a 4e                	push   $0x4e$/;"	l
c0102d72	obj/kernel.asm	/^c0102d72:	e9 1e fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d77	obj/kernel.asm	/^c0102d77 <vector79>:$/;"	l
c0102d77	obj/kernel.asm	/^c0102d77:	6a 00                	push   $0x0$/;"	l
c0102d79	obj/kernel.asm	/^c0102d79:	6a 4f                	push   $0x4f$/;"	l
c0102d7b	obj/kernel.asm	/^c0102d7b:	e9 15 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d80	obj/kernel.asm	/^c0102d80 <vector80>:$/;"	l
c0102d80	obj/kernel.asm	/^c0102d80:	6a 00                	push   $0x0$/;"	l
c0102d82	obj/kernel.asm	/^c0102d82:	6a 50                	push   $0x50$/;"	l
c0102d84	obj/kernel.asm	/^c0102d84:	e9 0c fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d89	obj/kernel.asm	/^c0102d89 <vector81>:$/;"	l
c0102d89	obj/kernel.asm	/^c0102d89:	6a 00                	push   $0x0$/;"	l
c0102d8b	obj/kernel.asm	/^c0102d8b:	6a 51                	push   $0x51$/;"	l
c0102d8d	obj/kernel.asm	/^c0102d8d:	e9 03 fd ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d92	obj/kernel.asm	/^c0102d92 <vector82>:$/;"	l
c0102d92	obj/kernel.asm	/^c0102d92:	6a 00                	push   $0x0$/;"	l
c0102d94	obj/kernel.asm	/^c0102d94:	6a 52                	push   $0x52$/;"	l
c0102d96	obj/kernel.asm	/^c0102d96:	e9 fa fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102d9b	obj/kernel.asm	/^c0102d9b <vector83>:$/;"	l
c0102d9b	obj/kernel.asm	/^c0102d9b:	6a 00                	push   $0x0$/;"	l
c0102d9d	obj/kernel.asm	/^c0102d9d:	6a 53                	push   $0x53$/;"	l
c0102d9f	obj/kernel.asm	/^c0102d9f:	e9 f1 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102da4	obj/kernel.asm	/^c0102da4 <vector84>:$/;"	l
c0102da4	obj/kernel.asm	/^c0102da4:	6a 00                	push   $0x0$/;"	l
c0102da6	obj/kernel.asm	/^c0102da6:	6a 54                	push   $0x54$/;"	l
c0102da8	obj/kernel.asm	/^c0102da8:	e9 e8 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102dad	obj/kernel.asm	/^c0102dad <vector85>:$/;"	l
c0102dad	obj/kernel.asm	/^c0102dad:	6a 00                	push   $0x0$/;"	l
c0102daf	obj/kernel.asm	/^c0102daf:	6a 55                	push   $0x55$/;"	l
c0102db1	obj/kernel.asm	/^c0102db1:	e9 df fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102db6	obj/kernel.asm	/^c0102db6 <vector86>:$/;"	l
c0102db6	obj/kernel.asm	/^c0102db6:	6a 00                	push   $0x0$/;"	l
c0102db8	obj/kernel.asm	/^c0102db8:	6a 56                	push   $0x56$/;"	l
c0102dba	obj/kernel.asm	/^c0102dba:	e9 d6 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102dbf	obj/kernel.asm	/^c0102dbf <vector87>:$/;"	l
c0102dbf	obj/kernel.asm	/^c0102dbf:	6a 00                	push   $0x0$/;"	l
c0102dc1	obj/kernel.asm	/^c0102dc1:	6a 57                	push   $0x57$/;"	l
c0102dc3	obj/kernel.asm	/^c0102dc3:	e9 cd fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102dc8	obj/kernel.asm	/^c0102dc8 <vector88>:$/;"	l
c0102dc8	obj/kernel.asm	/^c0102dc8:	6a 00                	push   $0x0$/;"	l
c0102dca	obj/kernel.asm	/^c0102dca:	6a 58                	push   $0x58$/;"	l
c0102dcc	obj/kernel.asm	/^c0102dcc:	e9 c4 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102dd1	obj/kernel.asm	/^c0102dd1 <vector89>:$/;"	l
c0102dd1	obj/kernel.asm	/^c0102dd1:	6a 00                	push   $0x0$/;"	l
c0102dd3	obj/kernel.asm	/^c0102dd3:	6a 59                	push   $0x59$/;"	l
c0102dd5	obj/kernel.asm	/^c0102dd5:	e9 bb fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102dda	obj/kernel.asm	/^c0102dda <vector90>:$/;"	l
c0102dda	obj/kernel.asm	/^c0102dda:	6a 00                	push   $0x0$/;"	l
c0102ddc	obj/kernel.asm	/^c0102ddc:	6a 5a                	push   $0x5a$/;"	l
c0102dde	obj/kernel.asm	/^c0102dde:	e9 b2 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102de3	obj/kernel.asm	/^c0102de3 <vector91>:$/;"	l
c0102de3	obj/kernel.asm	/^c0102de3:	6a 00                	push   $0x0$/;"	l
c0102de5	obj/kernel.asm	/^c0102de5:	6a 5b                	push   $0x5b$/;"	l
c0102de7	obj/kernel.asm	/^c0102de7:	e9 a9 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102dec	obj/kernel.asm	/^c0102dec <vector92>:$/;"	l
c0102dec	obj/kernel.asm	/^c0102dec:	6a 00                	push   $0x0$/;"	l
c0102dee	obj/kernel.asm	/^c0102dee:	6a 5c                	push   $0x5c$/;"	l
c0102df0	obj/kernel.asm	/^c0102df0:	e9 a0 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102df5	obj/kernel.asm	/^c0102df5 <vector93>:$/;"	l
c0102df5	obj/kernel.asm	/^c0102df5:	6a 00                	push   $0x0$/;"	l
c0102df7	obj/kernel.asm	/^c0102df7:	6a 5d                	push   $0x5d$/;"	l
c0102df9	obj/kernel.asm	/^c0102df9:	e9 97 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102dfe	obj/kernel.asm	/^c0102dfe <vector94>:$/;"	l
c0102dfe	obj/kernel.asm	/^c0102dfe:	6a 00                	push   $0x0$/;"	l
c0102e00	obj/kernel.asm	/^c0102e00:	6a 5e                	push   $0x5e$/;"	l
c0102e02	obj/kernel.asm	/^c0102e02:	e9 8e fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e07	obj/kernel.asm	/^c0102e07 <vector95>:$/;"	l
c0102e07	obj/kernel.asm	/^c0102e07:	6a 00                	push   $0x0$/;"	l
c0102e09	obj/kernel.asm	/^c0102e09:	6a 5f                	push   $0x5f$/;"	l
c0102e0b	obj/kernel.asm	/^c0102e0b:	e9 85 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e10	obj/kernel.asm	/^c0102e10 <vector96>:$/;"	l
c0102e10	obj/kernel.asm	/^c0102e10:	6a 00                	push   $0x0$/;"	l
c0102e12	obj/kernel.asm	/^c0102e12:	6a 60                	push   $0x60$/;"	l
c0102e14	obj/kernel.asm	/^c0102e14:	e9 7c fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e19	obj/kernel.asm	/^c0102e19 <vector97>:$/;"	l
c0102e19	obj/kernel.asm	/^c0102e19:	6a 00                	push   $0x0$/;"	l
c0102e1b	obj/kernel.asm	/^c0102e1b:	6a 61                	push   $0x61$/;"	l
c0102e1d	obj/kernel.asm	/^c0102e1d:	e9 73 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e22	obj/kernel.asm	/^c0102e22 <vector98>:$/;"	l
c0102e22	obj/kernel.asm	/^c0102e22:	6a 00                	push   $0x0$/;"	l
c0102e24	obj/kernel.asm	/^c0102e24:	6a 62                	push   $0x62$/;"	l
c0102e26	obj/kernel.asm	/^c0102e26:	e9 6a fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e2b	obj/kernel.asm	/^c0102e2b <vector99>:$/;"	l
c0102e2b	obj/kernel.asm	/^c0102e2b:	6a 00                	push   $0x0$/;"	l
c0102e2d	obj/kernel.asm	/^c0102e2d:	6a 63                	push   $0x63$/;"	l
c0102e2f	obj/kernel.asm	/^c0102e2f:	e9 61 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e34	obj/kernel.asm	/^c0102e34 <vector100>:$/;"	l
c0102e34	obj/kernel.asm	/^c0102e34:	6a 00                	push   $0x0$/;"	l
c0102e36	obj/kernel.asm	/^c0102e36:	6a 64                	push   $0x64$/;"	l
c0102e38	obj/kernel.asm	/^c0102e38:	e9 58 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e3d	obj/kernel.asm	/^c0102e3d <vector101>:$/;"	l
c0102e3d	obj/kernel.asm	/^c0102e3d:	6a 00                	push   $0x0$/;"	l
c0102e3f	obj/kernel.asm	/^c0102e3f:	6a 65                	push   $0x65$/;"	l
c0102e41	obj/kernel.asm	/^c0102e41:	e9 4f fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e46	obj/kernel.asm	/^c0102e46 <vector102>:$/;"	l
c0102e46	obj/kernel.asm	/^c0102e46:	6a 00                	push   $0x0$/;"	l
c0102e48	obj/kernel.asm	/^c0102e48:	6a 66                	push   $0x66$/;"	l
c0102e4a	obj/kernel.asm	/^c0102e4a:	e9 46 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e4f	obj/kernel.asm	/^c0102e4f <vector103>:$/;"	l
c0102e4f	obj/kernel.asm	/^c0102e4f:	6a 00                	push   $0x0$/;"	l
c0102e51	obj/kernel.asm	/^c0102e51:	6a 67                	push   $0x67$/;"	l
c0102e53	obj/kernel.asm	/^c0102e53:	e9 3d fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e58	obj/kernel.asm	/^c0102e58 <vector104>:$/;"	l
c0102e58	obj/kernel.asm	/^c0102e58:	6a 00                	push   $0x0$/;"	l
c0102e5a	obj/kernel.asm	/^c0102e5a:	6a 68                	push   $0x68$/;"	l
c0102e5c	obj/kernel.asm	/^c0102e5c:	e9 34 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e61	obj/kernel.asm	/^c0102e61 <vector105>:$/;"	l
c0102e61	obj/kernel.asm	/^c0102e61:	6a 00                	push   $0x0$/;"	l
c0102e63	obj/kernel.asm	/^c0102e63:	6a 69                	push   $0x69$/;"	l
c0102e65	obj/kernel.asm	/^c0102e65:	e9 2b fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e6a	obj/kernel.asm	/^c0102e6a <vector106>:$/;"	l
c0102e6a	obj/kernel.asm	/^c0102e6a:	6a 00                	push   $0x0$/;"	l
c0102e6c	obj/kernel.asm	/^c0102e6c:	6a 6a                	push   $0x6a$/;"	l
c0102e6e	obj/kernel.asm	/^c0102e6e:	e9 22 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e73	obj/kernel.asm	/^c0102e73 <vector107>:$/;"	l
c0102e73	obj/kernel.asm	/^c0102e73:	6a 00                	push   $0x0$/;"	l
c0102e75	obj/kernel.asm	/^c0102e75:	6a 6b                	push   $0x6b$/;"	l
c0102e77	obj/kernel.asm	/^c0102e77:	e9 19 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e7c	obj/kernel.asm	/^c0102e7c <vector108>:$/;"	l
c0102e7c	obj/kernel.asm	/^c0102e7c:	6a 00                	push   $0x0$/;"	l
c0102e7e	obj/kernel.asm	/^c0102e7e:	6a 6c                	push   $0x6c$/;"	l
c0102e80	obj/kernel.asm	/^c0102e80:	e9 10 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e85	obj/kernel.asm	/^c0102e85 <vector109>:$/;"	l
c0102e85	obj/kernel.asm	/^c0102e85:	6a 00                	push   $0x0$/;"	l
c0102e87	obj/kernel.asm	/^c0102e87:	6a 6d                	push   $0x6d$/;"	l
c0102e89	obj/kernel.asm	/^c0102e89:	e9 07 fc ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e8e	obj/kernel.asm	/^c0102e8e <vector110>:$/;"	l
c0102e8e	obj/kernel.asm	/^c0102e8e:	6a 00                	push   $0x0$/;"	l
c0102e90	obj/kernel.asm	/^c0102e90:	6a 6e                	push   $0x6e$/;"	l
c0102e92	obj/kernel.asm	/^c0102e92:	e9 fe fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102e97	obj/kernel.asm	/^c0102e97 <vector111>:$/;"	l
c0102e97	obj/kernel.asm	/^c0102e97:	6a 00                	push   $0x0$/;"	l
c0102e99	obj/kernel.asm	/^c0102e99:	6a 6f                	push   $0x6f$/;"	l
c0102e9b	obj/kernel.asm	/^c0102e9b:	e9 f5 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ea0	obj/kernel.asm	/^c0102ea0 <vector112>:$/;"	l
c0102ea0	obj/kernel.asm	/^c0102ea0:	6a 00                	push   $0x0$/;"	l
c0102ea2	obj/kernel.asm	/^c0102ea2:	6a 70                	push   $0x70$/;"	l
c0102ea4	obj/kernel.asm	/^c0102ea4:	e9 ec fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ea9	obj/kernel.asm	/^c0102ea9 <vector113>:$/;"	l
c0102ea9	obj/kernel.asm	/^c0102ea9:	6a 00                	push   $0x0$/;"	l
c0102eab	obj/kernel.asm	/^c0102eab:	6a 71                	push   $0x71$/;"	l
c0102ead	obj/kernel.asm	/^c0102ead:	e9 e3 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102eb2	obj/kernel.asm	/^c0102eb2 <vector114>:$/;"	l
c0102eb2	obj/kernel.asm	/^c0102eb2:	6a 00                	push   $0x0$/;"	l
c0102eb4	obj/kernel.asm	/^c0102eb4:	6a 72                	push   $0x72$/;"	l
c0102eb6	obj/kernel.asm	/^c0102eb6:	e9 da fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ebb	obj/kernel.asm	/^c0102ebb <vector115>:$/;"	l
c0102ebb	obj/kernel.asm	/^c0102ebb:	6a 00                	push   $0x0$/;"	l
c0102ebd	obj/kernel.asm	/^c0102ebd:	6a 73                	push   $0x73$/;"	l
c0102ebf	obj/kernel.asm	/^c0102ebf:	e9 d1 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ec4	obj/kernel.asm	/^c0102ec4 <vector116>:$/;"	l
c0102ec4	obj/kernel.asm	/^c0102ec4:	6a 00                	push   $0x0$/;"	l
c0102ec6	obj/kernel.asm	/^c0102ec6:	6a 74                	push   $0x74$/;"	l
c0102ec8	obj/kernel.asm	/^c0102ec8:	e9 c8 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ecd	obj/kernel.asm	/^c0102ecd <vector117>:$/;"	l
c0102ecd	obj/kernel.asm	/^c0102ecd:	6a 00                	push   $0x0$/;"	l
c0102ecf	obj/kernel.asm	/^c0102ecf:	6a 75                	push   $0x75$/;"	l
c0102ed1	obj/kernel.asm	/^c0102ed1:	e9 bf fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ed6	obj/kernel.asm	/^c0102ed6 <vector118>:$/;"	l
c0102ed6	obj/kernel.asm	/^c0102ed6:	6a 00                	push   $0x0$/;"	l
c0102ed8	obj/kernel.asm	/^c0102ed8:	6a 76                	push   $0x76$/;"	l
c0102eda	obj/kernel.asm	/^c0102eda:	e9 b6 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102edf	obj/kernel.asm	/^c0102edf <vector119>:$/;"	l
c0102edf	obj/kernel.asm	/^c0102edf:	6a 00                	push   $0x0$/;"	l
c0102ee1	obj/kernel.asm	/^c0102ee1:	6a 77                	push   $0x77$/;"	l
c0102ee3	obj/kernel.asm	/^c0102ee3:	e9 ad fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ee8	obj/kernel.asm	/^c0102ee8 <vector120>:$/;"	l
c0102ee8	obj/kernel.asm	/^c0102ee8:	6a 00                	push   $0x0$/;"	l
c0102eea	obj/kernel.asm	/^c0102eea:	6a 78                	push   $0x78$/;"	l
c0102eec	obj/kernel.asm	/^c0102eec:	e9 a4 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ef1	obj/kernel.asm	/^c0102ef1 <vector121>:$/;"	l
c0102ef1	obj/kernel.asm	/^c0102ef1:	6a 00                	push   $0x0$/;"	l
c0102ef3	obj/kernel.asm	/^c0102ef3:	6a 79                	push   $0x79$/;"	l
c0102ef5	obj/kernel.asm	/^c0102ef5:	e9 9b fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102efa	obj/kernel.asm	/^c0102efa <vector122>:$/;"	l
c0102efa	obj/kernel.asm	/^c0102efa:	6a 00                	push   $0x0$/;"	l
c0102efc	obj/kernel.asm	/^c0102efc:	6a 7a                	push   $0x7a$/;"	l
c0102efe	obj/kernel.asm	/^c0102efe:	e9 92 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f03	obj/kernel.asm	/^c0102f03 <vector123>:$/;"	l
c0102f03	obj/kernel.asm	/^c0102f03:	6a 00                	push   $0x0$/;"	l
c0102f05	obj/kernel.asm	/^c0102f05:	6a 7b                	push   $0x7b$/;"	l
c0102f07	obj/kernel.asm	/^c0102f07:	e9 89 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f0c	obj/kernel.asm	/^c0102f0c <vector124>:$/;"	l
c0102f0c	obj/kernel.asm	/^c0102f0c:	6a 00                	push   $0x0$/;"	l
c0102f0e	obj/kernel.asm	/^c0102f0e:	6a 7c                	push   $0x7c$/;"	l
c0102f10	obj/kernel.asm	/^c0102f10:	e9 80 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f15	obj/kernel.asm	/^c0102f15 <vector125>:$/;"	l
c0102f15	obj/kernel.asm	/^c0102f15:	6a 00                	push   $0x0$/;"	l
c0102f17	obj/kernel.asm	/^c0102f17:	6a 7d                	push   $0x7d$/;"	l
c0102f19	obj/kernel.asm	/^c0102f19:	e9 77 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f1e	obj/kernel.asm	/^c0102f1e <vector126>:$/;"	l
c0102f1e	obj/kernel.asm	/^c0102f1e:	6a 00                	push   $0x0$/;"	l
c0102f20	obj/kernel.asm	/^c0102f20:	6a 7e                	push   $0x7e$/;"	l
c0102f22	obj/kernel.asm	/^c0102f22:	e9 6e fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f27	obj/kernel.asm	/^c0102f27 <vector127>:$/;"	l
c0102f27	obj/kernel.asm	/^c0102f27:	6a 00                	push   $0x0$/;"	l
c0102f29	obj/kernel.asm	/^c0102f29:	6a 7f                	push   $0x7f$/;"	l
c0102f2b	obj/kernel.asm	/^c0102f2b:	e9 65 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f30	obj/kernel.asm	/^c0102f30 <vector128>:$/;"	l
c0102f30	obj/kernel.asm	/^c0102f30:	6a 00                	push   $0x0$/;"	l
c0102f32	obj/kernel.asm	/^c0102f32:	68 80 00 00 00       	push   $0x80$/;"	l
c0102f37	obj/kernel.asm	/^c0102f37:	e9 59 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f3c	obj/kernel.asm	/^c0102f3c <vector129>:$/;"	l
c0102f3c	obj/kernel.asm	/^c0102f3c:	6a 00                	push   $0x0$/;"	l
c0102f3e	obj/kernel.asm	/^c0102f3e:	68 81 00 00 00       	push   $0x81$/;"	l
c0102f43	obj/kernel.asm	/^c0102f43:	e9 4d fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f48	obj/kernel.asm	/^c0102f48 <vector130>:$/;"	l
c0102f48	obj/kernel.asm	/^c0102f48:	6a 00                	push   $0x0$/;"	l
c0102f4a	obj/kernel.asm	/^c0102f4a:	68 82 00 00 00       	push   $0x82$/;"	l
c0102f4f	obj/kernel.asm	/^c0102f4f:	e9 41 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f54	obj/kernel.asm	/^c0102f54 <vector131>:$/;"	l
c0102f54	obj/kernel.asm	/^c0102f54:	6a 00                	push   $0x0$/;"	l
c0102f56	obj/kernel.asm	/^c0102f56:	68 83 00 00 00       	push   $0x83$/;"	l
c0102f5b	obj/kernel.asm	/^c0102f5b:	e9 35 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f60	obj/kernel.asm	/^c0102f60 <vector132>:$/;"	l
c0102f60	obj/kernel.asm	/^c0102f60:	6a 00                	push   $0x0$/;"	l
c0102f62	obj/kernel.asm	/^c0102f62:	68 84 00 00 00       	push   $0x84$/;"	l
c0102f67	obj/kernel.asm	/^c0102f67:	e9 29 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f6c	obj/kernel.asm	/^c0102f6c <vector133>:$/;"	l
c0102f6c	obj/kernel.asm	/^c0102f6c:	6a 00                	push   $0x0$/;"	l
c0102f6e	obj/kernel.asm	/^c0102f6e:	68 85 00 00 00       	push   $0x85$/;"	l
c0102f73	obj/kernel.asm	/^c0102f73:	e9 1d fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f78	obj/kernel.asm	/^c0102f78 <vector134>:$/;"	l
c0102f78	obj/kernel.asm	/^c0102f78:	6a 00                	push   $0x0$/;"	l
c0102f7a	obj/kernel.asm	/^c0102f7a:	68 86 00 00 00       	push   $0x86$/;"	l
c0102f7f	obj/kernel.asm	/^c0102f7f:	e9 11 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f84	obj/kernel.asm	/^c0102f84 <vector135>:$/;"	l
c0102f84	obj/kernel.asm	/^c0102f84:	6a 00                	push   $0x0$/;"	l
c0102f86	obj/kernel.asm	/^c0102f86:	68 87 00 00 00       	push   $0x87$/;"	l
c0102f8b	obj/kernel.asm	/^c0102f8b:	e9 05 fb ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f90	obj/kernel.asm	/^c0102f90 <vector136>:$/;"	l
c0102f90	obj/kernel.asm	/^c0102f90:	6a 00                	push   $0x0$/;"	l
c0102f92	obj/kernel.asm	/^c0102f92:	68 88 00 00 00       	push   $0x88$/;"	l
c0102f97	obj/kernel.asm	/^c0102f97:	e9 f9 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102f9c	obj/kernel.asm	/^c0102f9c <vector137>:$/;"	l
c0102f9c	obj/kernel.asm	/^c0102f9c:	6a 00                	push   $0x0$/;"	l
c0102f9e	obj/kernel.asm	/^c0102f9e:	68 89 00 00 00       	push   $0x89$/;"	l
c0102fa3	obj/kernel.asm	/^c0102fa3:	e9 ed fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102fa8	obj/kernel.asm	/^c0102fa8 <vector138>:$/;"	l
c0102fa8	obj/kernel.asm	/^c0102fa8:	6a 00                	push   $0x0$/;"	l
c0102faa	obj/kernel.asm	/^c0102faa:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0102faf	obj/kernel.asm	/^c0102faf:	e9 e1 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102fb4	obj/kernel.asm	/^c0102fb4 <vector139>:$/;"	l
c0102fb4	obj/kernel.asm	/^c0102fb4:	6a 00                	push   $0x0$/;"	l
c0102fb6	obj/kernel.asm	/^c0102fb6:	68 8b 00 00 00       	push   $0x8b$/;"	l
c0102fbb	obj/kernel.asm	/^c0102fbb:	e9 d5 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102fc0	obj/kernel.asm	/^c0102fc0 <vector140>:$/;"	l
c0102fc0	obj/kernel.asm	/^c0102fc0:	6a 00                	push   $0x0$/;"	l
c0102fc2	obj/kernel.asm	/^c0102fc2:	68 8c 00 00 00       	push   $0x8c$/;"	l
c0102fc7	obj/kernel.asm	/^c0102fc7:	e9 c9 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102fcc	obj/kernel.asm	/^c0102fcc <vector141>:$/;"	l
c0102fcc	obj/kernel.asm	/^c0102fcc:	6a 00                	push   $0x0$/;"	l
c0102fce	obj/kernel.asm	/^c0102fce:	68 8d 00 00 00       	push   $0x8d$/;"	l
c0102fd3	obj/kernel.asm	/^c0102fd3:	e9 bd fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102fd8	obj/kernel.asm	/^c0102fd8 <vector142>:$/;"	l
c0102fd8	obj/kernel.asm	/^c0102fd8:	6a 00                	push   $0x0$/;"	l
c0102fda	obj/kernel.asm	/^c0102fda:	68 8e 00 00 00       	push   $0x8e$/;"	l
c0102fdf	obj/kernel.asm	/^c0102fdf:	e9 b1 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102fe4	obj/kernel.asm	/^c0102fe4 <vector143>:$/;"	l
c0102fe4	obj/kernel.asm	/^c0102fe4:	6a 00                	push   $0x0$/;"	l
c0102fe6	obj/kernel.asm	/^c0102fe6:	68 8f 00 00 00       	push   $0x8f$/;"	l
c0102feb	obj/kernel.asm	/^c0102feb:	e9 a5 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ff0	obj/kernel.asm	/^c0102ff0 <vector144>:$/;"	l
c0102ff0	obj/kernel.asm	/^c0102ff0:	6a 00                	push   $0x0$/;"	l
c0102ff2	obj/kernel.asm	/^c0102ff2:	68 90 00 00 00       	push   $0x90$/;"	l
c0102ff7	obj/kernel.asm	/^c0102ff7:	e9 99 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0102ffc	obj/kernel.asm	/^c0102ffc <vector145>:$/;"	l
c0102ffc	obj/kernel.asm	/^c0102ffc:	6a 00                	push   $0x0$/;"	l
c0102ffe	obj/kernel.asm	/^c0102ffe:	68 91 00 00 00       	push   $0x91$/;"	l
c0103003	obj/kernel.asm	/^c0103003:	e9 8d fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103008	obj/kernel.asm	/^c0103008 <vector146>:$/;"	l
c0103008	obj/kernel.asm	/^c0103008:	6a 00                	push   $0x0$/;"	l
c010300a	obj/kernel.asm	/^c010300a:	68 92 00 00 00       	push   $0x92$/;"	l
c010300f	obj/kernel.asm	/^c010300f:	e9 81 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103014	obj/kernel.asm	/^c0103014 <vector147>:$/;"	l
c0103014	obj/kernel.asm	/^c0103014:	6a 00                	push   $0x0$/;"	l
c0103016	obj/kernel.asm	/^c0103016:	68 93 00 00 00       	push   $0x93$/;"	l
c010301b	obj/kernel.asm	/^c010301b:	e9 75 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103020	obj/kernel.asm	/^c0103020 <vector148>:$/;"	l
c0103020	obj/kernel.asm	/^c0103020:	6a 00                	push   $0x0$/;"	l
c0103022	obj/kernel.asm	/^c0103022:	68 94 00 00 00       	push   $0x94$/;"	l
c0103027	obj/kernel.asm	/^c0103027:	e9 69 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010302c	obj/kernel.asm	/^c010302c <vector149>:$/;"	l
c010302c	obj/kernel.asm	/^c010302c:	6a 00                	push   $0x0$/;"	l
c010302e	obj/kernel.asm	/^c010302e:	68 95 00 00 00       	push   $0x95$/;"	l
c0103033	obj/kernel.asm	/^c0103033:	e9 5d fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103038	obj/kernel.asm	/^c0103038 <vector150>:$/;"	l
c0103038	obj/kernel.asm	/^c0103038:	6a 00                	push   $0x0$/;"	l
c010303a	obj/kernel.asm	/^c010303a:	68 96 00 00 00       	push   $0x96$/;"	l
c010303f	obj/kernel.asm	/^c010303f:	e9 51 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103044	obj/kernel.asm	/^c0103044 <vector151>:$/;"	l
c0103044	obj/kernel.asm	/^c0103044:	6a 00                	push   $0x0$/;"	l
c0103046	obj/kernel.asm	/^c0103046:	68 97 00 00 00       	push   $0x97$/;"	l
c010304b	obj/kernel.asm	/^c010304b:	e9 45 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103050	obj/kernel.asm	/^c0103050 <vector152>:$/;"	l
c0103050	obj/kernel.asm	/^c0103050:	6a 00                	push   $0x0$/;"	l
c0103052	obj/kernel.asm	/^c0103052:	68 98 00 00 00       	push   $0x98$/;"	l
c0103057	obj/kernel.asm	/^c0103057:	e9 39 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010305c	obj/kernel.asm	/^c010305c <vector153>:$/;"	l
c010305c	obj/kernel.asm	/^c010305c:	6a 00                	push   $0x0$/;"	l
c010305e	obj/kernel.asm	/^c010305e:	68 99 00 00 00       	push   $0x99$/;"	l
c0103063	obj/kernel.asm	/^c0103063:	e9 2d fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103068	obj/kernel.asm	/^c0103068 <vector154>:$/;"	l
c0103068	obj/kernel.asm	/^c0103068:	6a 00                	push   $0x0$/;"	l
c010306a	obj/kernel.asm	/^c010306a:	68 9a 00 00 00       	push   $0x9a$/;"	l
c010306f	obj/kernel.asm	/^c010306f:	e9 21 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103074	obj/kernel.asm	/^c0103074 <vector155>:$/;"	l
c0103074	obj/kernel.asm	/^c0103074:	6a 00                	push   $0x0$/;"	l
c0103076	obj/kernel.asm	/^c0103076:	68 9b 00 00 00       	push   $0x9b$/;"	l
c010307b	obj/kernel.asm	/^c010307b:	e9 15 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103080	obj/kernel.asm	/^c0103080 <vector156>:$/;"	l
c0103080	obj/kernel.asm	/^c0103080:	6a 00                	push   $0x0$/;"	l
c0103082	obj/kernel.asm	/^c0103082:	68 9c 00 00 00       	push   $0x9c$/;"	l
c0103087	obj/kernel.asm	/^c0103087:	e9 09 fa ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010308c	obj/kernel.asm	/^c010308c <vector157>:$/;"	l
c010308c	obj/kernel.asm	/^c010308c:	6a 00                	push   $0x0$/;"	l
c010308e	obj/kernel.asm	/^c010308e:	68 9d 00 00 00       	push   $0x9d$/;"	l
c0103093	obj/kernel.asm	/^c0103093:	e9 fd f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103098	obj/kernel.asm	/^c0103098 <vector158>:$/;"	l
c0103098	obj/kernel.asm	/^c0103098:	6a 00                	push   $0x0$/;"	l
c010309a	obj/kernel.asm	/^c010309a:	68 9e 00 00 00       	push   $0x9e$/;"	l
c010309f	obj/kernel.asm	/^c010309f:	e9 f1 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01030a4	obj/kernel.asm	/^c01030a4 <vector159>:$/;"	l
c01030a4	obj/kernel.asm	/^c01030a4:	6a 00                	push   $0x0$/;"	l
c01030a6	obj/kernel.asm	/^c01030a6:	68 9f 00 00 00       	push   $0x9f$/;"	l
c01030ab	obj/kernel.asm	/^c01030ab:	e9 e5 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01030b0	obj/kernel.asm	/^c01030b0 <vector160>:$/;"	l
c01030b0	obj/kernel.asm	/^c01030b0:	6a 00                	push   $0x0$/;"	l
c01030b2	obj/kernel.asm	/^c01030b2:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01030b7	obj/kernel.asm	/^c01030b7:	e9 d9 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01030bc	obj/kernel.asm	/^c01030bc <vector161>:$/;"	l
c01030bc	obj/kernel.asm	/^c01030bc:	6a 00                	push   $0x0$/;"	l
c01030be	obj/kernel.asm	/^c01030be:	68 a1 00 00 00       	push   $0xa1$/;"	l
c01030c3	obj/kernel.asm	/^c01030c3:	e9 cd f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01030c8	obj/kernel.asm	/^c01030c8 <vector162>:$/;"	l
c01030c8	obj/kernel.asm	/^c01030c8:	6a 00                	push   $0x0$/;"	l
c01030ca	obj/kernel.asm	/^c01030ca:	68 a2 00 00 00       	push   $0xa2$/;"	l
c01030cf	obj/kernel.asm	/^c01030cf:	e9 c1 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01030d4	obj/kernel.asm	/^c01030d4 <vector163>:$/;"	l
c01030d4	obj/kernel.asm	/^c01030d4:	6a 00                	push   $0x0$/;"	l
c01030d6	obj/kernel.asm	/^c01030d6:	68 a3 00 00 00       	push   $0xa3$/;"	l
c01030db	obj/kernel.asm	/^c01030db:	e9 b5 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01030e0	obj/kernel.asm	/^c01030e0 <vector164>:$/;"	l
c01030e0	obj/kernel.asm	/^c01030e0:	6a 00                	push   $0x0$/;"	l
c01030e2	obj/kernel.asm	/^c01030e2:	68 a4 00 00 00       	push   $0xa4$/;"	l
c01030e7	obj/kernel.asm	/^c01030e7:	e9 a9 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01030ec	obj/kernel.asm	/^c01030ec <vector165>:$/;"	l
c01030ec	obj/kernel.asm	/^c01030ec:	6a 00                	push   $0x0$/;"	l
c01030ee	obj/kernel.asm	/^c01030ee:	68 a5 00 00 00       	push   $0xa5$/;"	l
c01030f3	obj/kernel.asm	/^c01030f3:	e9 9d f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01030f8	obj/kernel.asm	/^c01030f8 <vector166>:$/;"	l
c01030f8	obj/kernel.asm	/^c01030f8:	6a 00                	push   $0x0$/;"	l
c01030fa	obj/kernel.asm	/^c01030fa:	68 a6 00 00 00       	push   $0xa6$/;"	l
c01030ff	obj/kernel.asm	/^c01030ff:	e9 91 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103104	obj/kernel.asm	/^c0103104 <vector167>:$/;"	l
c0103104	obj/kernel.asm	/^c0103104:	6a 00                	push   $0x0$/;"	l
c0103106	obj/kernel.asm	/^c0103106:	68 a7 00 00 00       	push   $0xa7$/;"	l
c010310b	obj/kernel.asm	/^c010310b:	e9 85 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103110	obj/kernel.asm	/^c0103110 <vector168>:$/;"	l
c0103110	obj/kernel.asm	/^c0103110:	6a 00                	push   $0x0$/;"	l
c0103112	obj/kernel.asm	/^c0103112:	68 a8 00 00 00       	push   $0xa8$/;"	l
c0103117	obj/kernel.asm	/^c0103117:	e9 79 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010311c	obj/kernel.asm	/^c010311c <vector169>:$/;"	l
c010311c	obj/kernel.asm	/^c010311c:	6a 00                	push   $0x0$/;"	l
c010311e	obj/kernel.asm	/^c010311e:	68 a9 00 00 00       	push   $0xa9$/;"	l
c0103123	obj/kernel.asm	/^c0103123:	e9 6d f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103128	obj/kernel.asm	/^c0103128 <vector170>:$/;"	l
c0103128	obj/kernel.asm	/^c0103128:	6a 00                	push   $0x0$/;"	l
c010312a	obj/kernel.asm	/^c010312a:	68 aa 00 00 00       	push   $0xaa$/;"	l
c010312f	obj/kernel.asm	/^c010312f:	e9 61 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103134	obj/kernel.asm	/^c0103134 <vector171>:$/;"	l
c0103134	obj/kernel.asm	/^c0103134:	6a 00                	push   $0x0$/;"	l
c0103136	obj/kernel.asm	/^c0103136:	68 ab 00 00 00       	push   $0xab$/;"	l
c010313b	obj/kernel.asm	/^c010313b:	e9 55 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103140	obj/kernel.asm	/^c0103140 <vector172>:$/;"	l
c0103140	obj/kernel.asm	/^c0103140:	6a 00                	push   $0x0$/;"	l
c0103142	obj/kernel.asm	/^c0103142:	68 ac 00 00 00       	push   $0xac$/;"	l
c0103147	obj/kernel.asm	/^c0103147:	e9 49 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010314c	obj/kernel.asm	/^c010314c <vector173>:$/;"	l
c010314c	obj/kernel.asm	/^c010314c:	6a 00                	push   $0x0$/;"	l
c010314e	obj/kernel.asm	/^c010314e:	68 ad 00 00 00       	push   $0xad$/;"	l
c0103153	obj/kernel.asm	/^c0103153:	e9 3d f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103158	obj/kernel.asm	/^c0103158 <vector174>:$/;"	l
c0103158	obj/kernel.asm	/^c0103158:	6a 00                	push   $0x0$/;"	l
c010315a	obj/kernel.asm	/^c010315a:	68 ae 00 00 00       	push   $0xae$/;"	l
c010315f	obj/kernel.asm	/^c010315f:	e9 31 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103164	obj/kernel.asm	/^c0103164 <vector175>:$/;"	l
c0103164	obj/kernel.asm	/^c0103164:	6a 00                	push   $0x0$/;"	l
c0103166	obj/kernel.asm	/^c0103166:	68 af 00 00 00       	push   $0xaf$/;"	l
c010316b	obj/kernel.asm	/^c010316b:	e9 25 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103170	obj/kernel.asm	/^c0103170 <vector176>:$/;"	l
c0103170	obj/kernel.asm	/^c0103170:	6a 00                	push   $0x0$/;"	l
c0103172	obj/kernel.asm	/^c0103172:	68 b0 00 00 00       	push   $0xb0$/;"	l
c0103177	obj/kernel.asm	/^c0103177:	e9 19 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010317c	obj/kernel.asm	/^c010317c <vector177>:$/;"	l
c010317c	obj/kernel.asm	/^c010317c:	6a 00                	push   $0x0$/;"	l
c010317e	obj/kernel.asm	/^c010317e:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0103183	obj/kernel.asm	/^c0103183:	e9 0d f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103188	obj/kernel.asm	/^c0103188 <vector178>:$/;"	l
c0103188	obj/kernel.asm	/^c0103188:	6a 00                	push   $0x0$/;"	l
c010318a	obj/kernel.asm	/^c010318a:	68 b2 00 00 00       	push   $0xb2$/;"	l
c010318f	obj/kernel.asm	/^c010318f:	e9 01 f9 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103194	obj/kernel.asm	/^c0103194 <vector179>:$/;"	l
c0103194	obj/kernel.asm	/^c0103194:	6a 00                	push   $0x0$/;"	l
c0103196	obj/kernel.asm	/^c0103196:	68 b3 00 00 00       	push   $0xb3$/;"	l
c010319b	obj/kernel.asm	/^c010319b:	e9 f5 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01031a0	obj/kernel.asm	/^c01031a0 <vector180>:$/;"	l
c01031a0	obj/kernel.asm	/^c01031a0:	6a 00                	push   $0x0$/;"	l
c01031a2	obj/kernel.asm	/^c01031a2:	68 b4 00 00 00       	push   $0xb4$/;"	l
c01031a7	obj/kernel.asm	/^c01031a7:	e9 e9 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01031ac	obj/kernel.asm	/^c01031ac <vector181>:$/;"	l
c01031ac	obj/kernel.asm	/^c01031ac:	6a 00                	push   $0x0$/;"	l
c01031ae	obj/kernel.asm	/^c01031ae:	68 b5 00 00 00       	push   $0xb5$/;"	l
c01031b3	obj/kernel.asm	/^c01031b3:	e9 dd f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01031b8	obj/kernel.asm	/^c01031b8 <vector182>:$/;"	l
c01031b8	obj/kernel.asm	/^c01031b8:	6a 00                	push   $0x0$/;"	l
c01031ba	obj/kernel.asm	/^c01031ba:	68 b6 00 00 00       	push   $0xb6$/;"	l
c01031bf	obj/kernel.asm	/^c01031bf:	e9 d1 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01031c4	obj/kernel.asm	/^c01031c4 <vector183>:$/;"	l
c01031c4	obj/kernel.asm	/^c01031c4:	6a 00                	push   $0x0$/;"	l
c01031c6	obj/kernel.asm	/^c01031c6:	68 b7 00 00 00       	push   $0xb7$/;"	l
c01031cb	obj/kernel.asm	/^c01031cb:	e9 c5 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01031d0	obj/kernel.asm	/^c01031d0 <vector184>:$/;"	l
c01031d0	obj/kernel.asm	/^c01031d0:	6a 00                	push   $0x0$/;"	l
c01031d2	obj/kernel.asm	/^c01031d2:	68 b8 00 00 00       	push   $0xb8$/;"	l
c01031d7	obj/kernel.asm	/^c01031d7:	e9 b9 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01031dc	obj/kernel.asm	/^c01031dc <vector185>:$/;"	l
c01031dc	obj/kernel.asm	/^c01031dc:	6a 00                	push   $0x0$/;"	l
c01031de	obj/kernel.asm	/^c01031de:	68 b9 00 00 00       	push   $0xb9$/;"	l
c01031e3	obj/kernel.asm	/^c01031e3:	e9 ad f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01031e8	obj/kernel.asm	/^c01031e8 <vector186>:$/;"	l
c01031e8	obj/kernel.asm	/^c01031e8:	6a 00                	push   $0x0$/;"	l
c01031ea	obj/kernel.asm	/^c01031ea:	68 ba 00 00 00       	push   $0xba$/;"	l
c01031ef	obj/kernel.asm	/^c01031ef:	e9 a1 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01031f4	obj/kernel.asm	/^c01031f4 <vector187>:$/;"	l
c01031f4	obj/kernel.asm	/^c01031f4:	6a 00                	push   $0x0$/;"	l
c01031f6	obj/kernel.asm	/^c01031f6:	68 bb 00 00 00       	push   $0xbb$/;"	l
c01031fb	obj/kernel.asm	/^c01031fb:	e9 95 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103200	obj/kernel.asm	/^c0103200 <vector188>:$/;"	l
c0103200	obj/kernel.asm	/^c0103200:	6a 00                	push   $0x0$/;"	l
c0103202	obj/kernel.asm	/^c0103202:	68 bc 00 00 00       	push   $0xbc$/;"	l
c0103207	obj/kernel.asm	/^c0103207:	e9 89 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010320c	obj/kernel.asm	/^c010320c <vector189>:$/;"	l
c010320c	obj/kernel.asm	/^c010320c:	6a 00                	push   $0x0$/;"	l
c010320e	obj/kernel.asm	/^c010320e:	68 bd 00 00 00       	push   $0xbd$/;"	l
c0103213	obj/kernel.asm	/^c0103213:	e9 7d f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103218	obj/kernel.asm	/^c0103218 <vector190>:$/;"	l
c0103218	obj/kernel.asm	/^c0103218:	6a 00                	push   $0x0$/;"	l
c010321a	obj/kernel.asm	/^c010321a:	68 be 00 00 00       	push   $0xbe$/;"	l
c010321f	obj/kernel.asm	/^c010321f:	e9 71 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103224	obj/kernel.asm	/^c0103224 <vector191>:$/;"	l
c0103224	obj/kernel.asm	/^c0103224:	6a 00                	push   $0x0$/;"	l
c0103226	obj/kernel.asm	/^c0103226:	68 bf 00 00 00       	push   $0xbf$/;"	l
c010322b	obj/kernel.asm	/^c010322b:	e9 65 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103230	obj/kernel.asm	/^c0103230 <vector192>:$/;"	l
c0103230	obj/kernel.asm	/^c0103230:	6a 00                	push   $0x0$/;"	l
c0103232	obj/kernel.asm	/^c0103232:	68 c0 00 00 00       	push   $0xc0$/;"	l
c0103237	obj/kernel.asm	/^c0103237:	e9 59 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010323c	obj/kernel.asm	/^c010323c <vector193>:$/;"	l
c010323c	obj/kernel.asm	/^c010323c:	6a 00                	push   $0x0$/;"	l
c010323e	obj/kernel.asm	/^c010323e:	68 c1 00 00 00       	push   $0xc1$/;"	l
c0103243	obj/kernel.asm	/^c0103243:	e9 4d f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103248	obj/kernel.asm	/^c0103248 <vector194>:$/;"	l
c0103248	obj/kernel.asm	/^c0103248:	6a 00                	push   $0x0$/;"	l
c010324a	obj/kernel.asm	/^c010324a:	68 c2 00 00 00       	push   $0xc2$/;"	l
c010324f	obj/kernel.asm	/^c010324f:	e9 41 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103254	obj/kernel.asm	/^c0103254 <vector195>:$/;"	l
c0103254	obj/kernel.asm	/^c0103254:	6a 00                	push   $0x0$/;"	l
c0103256	obj/kernel.asm	/^c0103256:	68 c3 00 00 00       	push   $0xc3$/;"	l
c010325b	obj/kernel.asm	/^c010325b:	e9 35 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103260	obj/kernel.asm	/^c0103260 <vector196>:$/;"	l
c0103260	obj/kernel.asm	/^c0103260:	6a 00                	push   $0x0$/;"	l
c0103262	obj/kernel.asm	/^c0103262:	68 c4 00 00 00       	push   $0xc4$/;"	l
c0103267	obj/kernel.asm	/^c0103267:	e9 29 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010326c	obj/kernel.asm	/^c010326c <vector197>:$/;"	l
c010326c	obj/kernel.asm	/^c010326c:	6a 00                	push   $0x0$/;"	l
c010326e	obj/kernel.asm	/^c010326e:	68 c5 00 00 00       	push   $0xc5$/;"	l
c0103273	obj/kernel.asm	/^c0103273:	e9 1d f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103278	obj/kernel.asm	/^c0103278 <vector198>:$/;"	l
c0103278	obj/kernel.asm	/^c0103278:	6a 00                	push   $0x0$/;"	l
c010327a	obj/kernel.asm	/^c010327a:	68 c6 00 00 00       	push   $0xc6$/;"	l
c010327f	obj/kernel.asm	/^c010327f:	e9 11 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103284	obj/kernel.asm	/^c0103284 <vector199>:$/;"	l
c0103284	obj/kernel.asm	/^c0103284:	6a 00                	push   $0x0$/;"	l
c0103286	obj/kernel.asm	/^c0103286:	68 c7 00 00 00       	push   $0xc7$/;"	l
c010328b	obj/kernel.asm	/^c010328b:	e9 05 f8 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103290	obj/kernel.asm	/^c0103290 <vector200>:$/;"	l
c0103290	obj/kernel.asm	/^c0103290:	6a 00                	push   $0x0$/;"	l
c0103292	obj/kernel.asm	/^c0103292:	68 c8 00 00 00       	push   $0xc8$/;"	l
c0103297	obj/kernel.asm	/^c0103297:	e9 f9 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010329c	obj/kernel.asm	/^c010329c <vector201>:$/;"	l
c010329c	obj/kernel.asm	/^c010329c:	6a 00                	push   $0x0$/;"	l
c010329e	obj/kernel.asm	/^c010329e:	68 c9 00 00 00       	push   $0xc9$/;"	l
c01032a3	obj/kernel.asm	/^c01032a3:	e9 ed f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01032a8	obj/kernel.asm	/^c01032a8 <vector202>:$/;"	l
c01032a8	obj/kernel.asm	/^c01032a8:	6a 00                	push   $0x0$/;"	l
c01032aa	obj/kernel.asm	/^c01032aa:	68 ca 00 00 00       	push   $0xca$/;"	l
c01032af	obj/kernel.asm	/^c01032af:	e9 e1 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01032b4	obj/kernel.asm	/^c01032b4 <vector203>:$/;"	l
c01032b4	obj/kernel.asm	/^c01032b4:	6a 00                	push   $0x0$/;"	l
c01032b6	obj/kernel.asm	/^c01032b6:	68 cb 00 00 00       	push   $0xcb$/;"	l
c01032bb	obj/kernel.asm	/^c01032bb:	e9 d5 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01032c0	obj/kernel.asm	/^c01032c0 <vector204>:$/;"	l
c01032c0	obj/kernel.asm	/^c01032c0:	6a 00                	push   $0x0$/;"	l
c01032c2	obj/kernel.asm	/^c01032c2:	68 cc 00 00 00       	push   $0xcc$/;"	l
c01032c7	obj/kernel.asm	/^c01032c7:	e9 c9 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01032cc	obj/kernel.asm	/^c01032cc <vector205>:$/;"	l
c01032cc	obj/kernel.asm	/^c01032cc:	6a 00                	push   $0x0$/;"	l
c01032ce	obj/kernel.asm	/^c01032ce:	68 cd 00 00 00       	push   $0xcd$/;"	l
c01032d3	obj/kernel.asm	/^c01032d3:	e9 bd f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01032d8	obj/kernel.asm	/^c01032d8 <vector206>:$/;"	l
c01032d8	obj/kernel.asm	/^c01032d8:	6a 00                	push   $0x0$/;"	l
c01032da	obj/kernel.asm	/^c01032da:	68 ce 00 00 00       	push   $0xce$/;"	l
c01032df	obj/kernel.asm	/^c01032df:	e9 b1 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01032e4	obj/kernel.asm	/^c01032e4 <vector207>:$/;"	l
c01032e4	obj/kernel.asm	/^c01032e4:	6a 00                	push   $0x0$/;"	l
c01032e6	obj/kernel.asm	/^c01032e6:	68 cf 00 00 00       	push   $0xcf$/;"	l
c01032eb	obj/kernel.asm	/^c01032eb:	e9 a5 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01032f0	obj/kernel.asm	/^c01032f0 <vector208>:$/;"	l
c01032f0	obj/kernel.asm	/^c01032f0:	6a 00                	push   $0x0$/;"	l
c01032f2	obj/kernel.asm	/^c01032f2:	68 d0 00 00 00       	push   $0xd0$/;"	l
c01032f7	obj/kernel.asm	/^c01032f7:	e9 99 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01032fc	obj/kernel.asm	/^c01032fc <vector209>:$/;"	l
c01032fc	obj/kernel.asm	/^c01032fc:	6a 00                	push   $0x0$/;"	l
c01032fe	obj/kernel.asm	/^c01032fe:	68 d1 00 00 00       	push   $0xd1$/;"	l
c0103303	obj/kernel.asm	/^c0103303:	e9 8d f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103308	obj/kernel.asm	/^c0103308 <vector210>:$/;"	l
c0103308	obj/kernel.asm	/^c0103308:	6a 00                	push   $0x0$/;"	l
c010330a	obj/kernel.asm	/^c010330a:	68 d2 00 00 00       	push   $0xd2$/;"	l
c010330f	obj/kernel.asm	/^c010330f:	e9 81 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103314	obj/kernel.asm	/^c0103314 <vector211>:$/;"	l
c0103314	obj/kernel.asm	/^c0103314:	6a 00                	push   $0x0$/;"	l
c0103316	obj/kernel.asm	/^c0103316:	68 d3 00 00 00       	push   $0xd3$/;"	l
c010331b	obj/kernel.asm	/^c010331b:	e9 75 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103320	obj/kernel.asm	/^c0103320 <vector212>:$/;"	l
c0103320	obj/kernel.asm	/^c0103320:	6a 00                	push   $0x0$/;"	l
c0103322	obj/kernel.asm	/^c0103322:	68 d4 00 00 00       	push   $0xd4$/;"	l
c0103327	obj/kernel.asm	/^c0103327:	e9 69 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010332c	obj/kernel.asm	/^c010332c <vector213>:$/;"	l
c010332c	obj/kernel.asm	/^c010332c:	6a 00                	push   $0x0$/;"	l
c010332e	obj/kernel.asm	/^c010332e:	68 d5 00 00 00       	push   $0xd5$/;"	l
c0103333	obj/kernel.asm	/^c0103333:	e9 5d f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103338	obj/kernel.asm	/^c0103338 <vector214>:$/;"	l
c0103338	obj/kernel.asm	/^c0103338:	6a 00                	push   $0x0$/;"	l
c010333a	obj/kernel.asm	/^c010333a:	68 d6 00 00 00       	push   $0xd6$/;"	l
c010333f	obj/kernel.asm	/^c010333f:	e9 51 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103344	obj/kernel.asm	/^c0103344 <vector215>:$/;"	l
c0103344	obj/kernel.asm	/^c0103344:	6a 00                	push   $0x0$/;"	l
c0103346	obj/kernel.asm	/^c0103346:	68 d7 00 00 00       	push   $0xd7$/;"	l
c010334b	obj/kernel.asm	/^c010334b:	e9 45 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103350	obj/kernel.asm	/^c0103350 <vector216>:$/;"	l
c0103350	obj/kernel.asm	/^c0103350:	6a 00                	push   $0x0$/;"	l
c0103352	obj/kernel.asm	/^c0103352:	68 d8 00 00 00       	push   $0xd8$/;"	l
c0103357	obj/kernel.asm	/^c0103357:	e9 39 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010335c	obj/kernel.asm	/^c010335c <vector217>:$/;"	l
c010335c	obj/kernel.asm	/^c010335c:	6a 00                	push   $0x0$/;"	l
c010335e	obj/kernel.asm	/^c010335e:	68 d9 00 00 00       	push   $0xd9$/;"	l
c0103363	obj/kernel.asm	/^c0103363:	e9 2d f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103368	obj/kernel.asm	/^c0103368 <vector218>:$/;"	l
c0103368	obj/kernel.asm	/^c0103368:	6a 00                	push   $0x0$/;"	l
c010336a	obj/kernel.asm	/^c010336a:	68 da 00 00 00       	push   $0xda$/;"	l
c010336f	obj/kernel.asm	/^c010336f:	e9 21 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103374	obj/kernel.asm	/^c0103374 <vector219>:$/;"	l
c0103374	obj/kernel.asm	/^c0103374:	6a 00                	push   $0x0$/;"	l
c0103376	obj/kernel.asm	/^c0103376:	68 db 00 00 00       	push   $0xdb$/;"	l
c010337b	obj/kernel.asm	/^c010337b:	e9 15 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103380	obj/kernel.asm	/^c0103380 <vector220>:$/;"	l
c0103380	obj/kernel.asm	/^c0103380:	6a 00                	push   $0x0$/;"	l
c0103382	obj/kernel.asm	/^c0103382:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0103387	obj/kernel.asm	/^c0103387:	e9 09 f7 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010338c	obj/kernel.asm	/^c010338c <vector221>:$/;"	l
c010338c	obj/kernel.asm	/^c010338c:	6a 00                	push   $0x0$/;"	l
c010338e	obj/kernel.asm	/^c010338e:	68 dd 00 00 00       	push   $0xdd$/;"	l
c0103393	obj/kernel.asm	/^c0103393:	e9 fd f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103398	obj/kernel.asm	/^c0103398 <vector222>:$/;"	l
c0103398	obj/kernel.asm	/^c0103398:	6a 00                	push   $0x0$/;"	l
c010339a	obj/kernel.asm	/^c010339a:	68 de 00 00 00       	push   $0xde$/;"	l
c010339f	obj/kernel.asm	/^c010339f:	e9 f1 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01033a4	obj/kernel.asm	/^c01033a4 <vector223>:$/;"	l
c01033a4	obj/kernel.asm	/^c01033a4:	6a 00                	push   $0x0$/;"	l
c01033a6	obj/kernel.asm	/^c01033a6:	68 df 00 00 00       	push   $0xdf$/;"	l
c01033ab	obj/kernel.asm	/^c01033ab:	e9 e5 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01033b0	obj/kernel.asm	/^c01033b0 <vector224>:$/;"	l
c01033b0	obj/kernel.asm	/^c01033b0:	6a 00                	push   $0x0$/;"	l
c01033b2	obj/kernel.asm	/^c01033b2:	68 e0 00 00 00       	push   $0xe0$/;"	l
c01033b7	obj/kernel.asm	/^c01033b7:	e9 d9 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01033bc	obj/kernel.asm	/^c01033bc <vector225>:$/;"	l
c01033bc	obj/kernel.asm	/^c01033bc:	6a 00                	push   $0x0$/;"	l
c01033be	obj/kernel.asm	/^c01033be:	68 e1 00 00 00       	push   $0xe1$/;"	l
c01033c3	obj/kernel.asm	/^c01033c3:	e9 cd f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01033c8	obj/kernel.asm	/^c01033c8 <vector226>:$/;"	l
c01033c8	obj/kernel.asm	/^c01033c8:	6a 00                	push   $0x0$/;"	l
c01033ca	obj/kernel.asm	/^c01033ca:	68 e2 00 00 00       	push   $0xe2$/;"	l
c01033cf	obj/kernel.asm	/^c01033cf:	e9 c1 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01033d4	obj/kernel.asm	/^c01033d4 <vector227>:$/;"	l
c01033d4	obj/kernel.asm	/^c01033d4:	6a 00                	push   $0x0$/;"	l
c01033d6	obj/kernel.asm	/^c01033d6:	68 e3 00 00 00       	push   $0xe3$/;"	l
c01033db	obj/kernel.asm	/^c01033db:	e9 b5 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01033e0	obj/kernel.asm	/^c01033e0 <vector228>:$/;"	l
c01033e0	obj/kernel.asm	/^c01033e0:	6a 00                	push   $0x0$/;"	l
c01033e2	obj/kernel.asm	/^c01033e2:	68 e4 00 00 00       	push   $0xe4$/;"	l
c01033e7	obj/kernel.asm	/^c01033e7:	e9 a9 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01033ec	obj/kernel.asm	/^c01033ec <vector229>:$/;"	l
c01033ec	obj/kernel.asm	/^c01033ec:	6a 00                	push   $0x0$/;"	l
c01033ee	obj/kernel.asm	/^c01033ee:	68 e5 00 00 00       	push   $0xe5$/;"	l
c01033f3	obj/kernel.asm	/^c01033f3:	e9 9d f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01033f8	obj/kernel.asm	/^c01033f8 <vector230>:$/;"	l
c01033f8	obj/kernel.asm	/^c01033f8:	6a 00                	push   $0x0$/;"	l
c01033fa	obj/kernel.asm	/^c01033fa:	68 e6 00 00 00       	push   $0xe6$/;"	l
c01033ff	obj/kernel.asm	/^c01033ff:	e9 91 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103404	obj/kernel.asm	/^c0103404 <vector231>:$/;"	l
c0103404	obj/kernel.asm	/^c0103404:	6a 00                	push   $0x0$/;"	l
c0103406	obj/kernel.asm	/^c0103406:	68 e7 00 00 00       	push   $0xe7$/;"	l
c010340b	obj/kernel.asm	/^c010340b:	e9 85 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103410	obj/kernel.asm	/^c0103410 <vector232>:$/;"	l
c0103410	obj/kernel.asm	/^c0103410:	6a 00                	push   $0x0$/;"	l
c0103412	obj/kernel.asm	/^c0103412:	68 e8 00 00 00       	push   $0xe8$/;"	l
c0103417	obj/kernel.asm	/^c0103417:	e9 79 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010341c	obj/kernel.asm	/^c010341c <vector233>:$/;"	l
c010341c	obj/kernel.asm	/^c010341c:	6a 00                	push   $0x0$/;"	l
c010341e	obj/kernel.asm	/^c010341e:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103423	obj/kernel.asm	/^c0103423:	e9 6d f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103428	obj/kernel.asm	/^c0103428 <vector234>:$/;"	l
c0103428	obj/kernel.asm	/^c0103428:	6a 00                	push   $0x0$/;"	l
c010342a	obj/kernel.asm	/^c010342a:	68 ea 00 00 00       	push   $0xea$/;"	l
c010342f	obj/kernel.asm	/^c010342f:	e9 61 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103434	obj/kernel.asm	/^c0103434 <vector235>:$/;"	l
c0103434	obj/kernel.asm	/^c0103434:	6a 00                	push   $0x0$/;"	l
c0103436	obj/kernel.asm	/^c0103436:	68 eb 00 00 00       	push   $0xeb$/;"	l
c010343b	obj/kernel.asm	/^c010343b:	e9 55 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103440	obj/kernel.asm	/^c0103440 <vector236>:$/;"	l
c0103440	obj/kernel.asm	/^c0103440:	6a 00                	push   $0x0$/;"	l
c0103442	obj/kernel.asm	/^c0103442:	68 ec 00 00 00       	push   $0xec$/;"	l
c0103447	obj/kernel.asm	/^c0103447:	e9 49 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010344c	obj/kernel.asm	/^c010344c <vector237>:$/;"	l
c010344c	obj/kernel.asm	/^c010344c:	6a 00                	push   $0x0$/;"	l
c010344e	obj/kernel.asm	/^c010344e:	68 ed 00 00 00       	push   $0xed$/;"	l
c0103453	obj/kernel.asm	/^c0103453:	e9 3d f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103458	obj/kernel.asm	/^c0103458 <vector238>:$/;"	l
c0103458	obj/kernel.asm	/^c0103458:	6a 00                	push   $0x0$/;"	l
c010345a	obj/kernel.asm	/^c010345a:	68 ee 00 00 00       	push   $0xee$/;"	l
c010345f	obj/kernel.asm	/^c010345f:	e9 31 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103464	obj/kernel.asm	/^c0103464 <vector239>:$/;"	l
c0103464	obj/kernel.asm	/^c0103464:	6a 00                	push   $0x0$/;"	l
c0103466	obj/kernel.asm	/^c0103466:	68 ef 00 00 00       	push   $0xef$/;"	l
c010346b	obj/kernel.asm	/^c010346b:	e9 25 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103470	obj/kernel.asm	/^c0103470 <vector240>:$/;"	l
c0103470	obj/kernel.asm	/^c0103470:	6a 00                	push   $0x0$/;"	l
c0103472	obj/kernel.asm	/^c0103472:	68 f0 00 00 00       	push   $0xf0$/;"	l
c0103477	obj/kernel.asm	/^c0103477:	e9 19 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010347c	obj/kernel.asm	/^c010347c <vector241>:$/;"	l
c010347c	obj/kernel.asm	/^c010347c:	6a 00                	push   $0x0$/;"	l
c010347e	obj/kernel.asm	/^c010347e:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0103483	obj/kernel.asm	/^c0103483:	e9 0d f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103488	obj/kernel.asm	/^c0103488 <vector242>:$/;"	l
c0103488	obj/kernel.asm	/^c0103488:	6a 00                	push   $0x0$/;"	l
c010348a	obj/kernel.asm	/^c010348a:	68 f2 00 00 00       	push   $0xf2$/;"	l
c010348f	obj/kernel.asm	/^c010348f:	e9 01 f6 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103494	obj/kernel.asm	/^c0103494 <vector243>:$/;"	l
c0103494	obj/kernel.asm	/^c0103494:	6a 00                	push   $0x0$/;"	l
c0103496	obj/kernel.asm	/^c0103496:	68 f3 00 00 00       	push   $0xf3$/;"	l
c010349b	obj/kernel.asm	/^c010349b:	e9 f5 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01034a0	obj/kernel.asm	/^c01034a0 <vector244>:$/;"	l
c01034a0	obj/kernel.asm	/^c01034a0:	6a 00                	push   $0x0$/;"	l
c01034a2	obj/kernel.asm	/^c01034a2:	68 f4 00 00 00       	push   $0xf4$/;"	l
c01034a7	obj/kernel.asm	/^c01034a7:	e9 e9 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01034ac	obj/kernel.asm	/^c01034ac <vector245>:$/;"	l
c01034ac	obj/kernel.asm	/^c01034ac:	6a 00                	push   $0x0$/;"	l
c01034ae	obj/kernel.asm	/^c01034ae:	68 f5 00 00 00       	push   $0xf5$/;"	l
c01034b3	obj/kernel.asm	/^c01034b3:	e9 dd f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01034b8	obj/kernel.asm	/^c01034b8 <vector246>:$/;"	l
c01034b8	obj/kernel.asm	/^c01034b8:	6a 00                	push   $0x0$/;"	l
c01034ba	obj/kernel.asm	/^c01034ba:	68 f6 00 00 00       	push   $0xf6$/;"	l
c01034bf	obj/kernel.asm	/^c01034bf:	e9 d1 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01034c4	obj/kernel.asm	/^c01034c4 <vector247>:$/;"	l
c01034c4	obj/kernel.asm	/^c01034c4:	6a 00                	push   $0x0$/;"	l
c01034c6	obj/kernel.asm	/^c01034c6:	68 f7 00 00 00       	push   $0xf7$/;"	l
c01034cb	obj/kernel.asm	/^c01034cb:	e9 c5 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01034d0	obj/kernel.asm	/^c01034d0 <vector248>:$/;"	l
c01034d0	obj/kernel.asm	/^c01034d0:	6a 00                	push   $0x0$/;"	l
c01034d2	obj/kernel.asm	/^c01034d2:	68 f8 00 00 00       	push   $0xf8$/;"	l
c01034d7	obj/kernel.asm	/^c01034d7:	e9 b9 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01034dc	obj/kernel.asm	/^c01034dc <vector249>:$/;"	l
c01034dc	obj/kernel.asm	/^c01034dc:	6a 00                	push   $0x0$/;"	l
c01034de	obj/kernel.asm	/^c01034de:	68 f9 00 00 00       	push   $0xf9$/;"	l
c01034e3	obj/kernel.asm	/^c01034e3:	e9 ad f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01034e8	obj/kernel.asm	/^c01034e8 <vector250>:$/;"	l
c01034e8	obj/kernel.asm	/^c01034e8:	6a 00                	push   $0x0$/;"	l
c01034ea	obj/kernel.asm	/^c01034ea:	68 fa 00 00 00       	push   $0xfa$/;"	l
c01034ef	obj/kernel.asm	/^c01034ef:	e9 a1 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c01034f4	obj/kernel.asm	/^c01034f4 <vector251>:$/;"	l
c01034f4	obj/kernel.asm	/^c01034f4:	6a 00                	push   $0x0$/;"	l
c01034f6	obj/kernel.asm	/^c01034f6:	68 fb 00 00 00       	push   $0xfb$/;"	l
c01034fb	obj/kernel.asm	/^c01034fb:	e9 95 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103500	obj/kernel.asm	/^c0103500 <vector252>:$/;"	l
c0103500	obj/kernel.asm	/^c0103500:	6a 00                	push   $0x0$/;"	l
c0103502	obj/kernel.asm	/^c0103502:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0103507	obj/kernel.asm	/^c0103507:	e9 89 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c010350c	obj/kernel.asm	/^c010350c <vector253>:$/;"	l
c010350c	obj/kernel.asm	/^c010350c:	6a 00                	push   $0x0$/;"	l
c010350e	obj/kernel.asm	/^c010350e:	68 fd 00 00 00       	push   $0xfd$/;"	l
c0103513	obj/kernel.asm	/^c0103513:	e9 7d f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103518	obj/kernel.asm	/^c0103518 <vector254>:$/;"	l
c0103518	obj/kernel.asm	/^c0103518:	6a 00                	push   $0x0$/;"	l
c010351a	obj/kernel.asm	/^c010351a:	68 fe 00 00 00       	push   $0xfe$/;"	l
c010351f	obj/kernel.asm	/^c010351f:	e9 71 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103524	obj/kernel.asm	/^c0103524 <vector255>:$/;"	l
c0103524	obj/kernel.asm	/^c0103524:	6a 00                	push   $0x0$/;"	l
c0103526	obj/kernel.asm	/^c0103526:	68 ff 00 00 00       	push   $0xff$/;"	l
c010352b	obj/kernel.asm	/^c010352b:	e9 65 f5 ff ff       	jmp    c0102a95 <__alltraps>$/;"	l
c0103530	obj/kernel.asm	/^c0103530 <page2ppn>:$/;"	l
c0103530	obj/kernel.asm	/^c0103530:	55                   	push   %ebp$/;"	l
c0103531	obj/kernel.asm	/^c0103531:	89 e5                	mov    %esp,%ebp$/;"	l
c0103533	obj/kernel.asm	/^c0103533:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0103536	obj/kernel.asm	/^c0103536:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c010353b	obj/kernel.asm	/^c010353b:	29 c2                	sub    %eax,%edx$/;"	l
c010353d	obj/kernel.asm	/^c010353d:	89 d0                	mov    %edx,%eax$/;"	l
c010353f	obj/kernel.asm	/^c010353f:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0103542	obj/kernel.asm	/^c0103542:	5d                   	pop    %ebp$/;"	l
c0103543	obj/kernel.asm	/^c0103543:	c3                   	ret    $/;"	l
c0103544	obj/kernel.asm	/^c0103544 <page2pa>:$/;"	l
c0103544	obj/kernel.asm	/^c0103544:	55                   	push   %ebp$/;"	l
c0103545	obj/kernel.asm	/^c0103545:	89 e5                	mov    %esp,%ebp$/;"	l
c0103547	obj/kernel.asm	/^c0103547:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010354a	obj/kernel.asm	/^c010354a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010354d	obj/kernel.asm	/^c010354d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103550	obj/kernel.asm	/^c0103550:	e8 db ff ff ff       	call   c0103530 <page2ppn>$/;"	l
c0103555	obj/kernel.asm	/^c0103555:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0103558	obj/kernel.asm	/^c0103558:	c9                   	leave  $/;"	l
c0103559	obj/kernel.asm	/^c0103559:	c3                   	ret    $/;"	l
c010355a	obj/kernel.asm	/^c010355a <page_ref>:$/;"	l
c010355a	obj/kernel.asm	/^c010355a:	55                   	push   %ebp$/;"	l
c010355b	obj/kernel.asm	/^c010355b:	89 e5                	mov    %esp,%ebp$/;"	l
c010355d	obj/kernel.asm	/^c010355d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103560	obj/kernel.asm	/^c0103560:	8b 00                	mov    (%eax),%eax$/;"	l
c0103562	obj/kernel.asm	/^c0103562:	5d                   	pop    %ebp$/;"	l
c0103563	obj/kernel.asm	/^c0103563:	c3                   	ret    $/;"	l
c0103564	obj/kernel.asm	/^c0103564 <set_page_ref>:$/;"	l
c0103564	obj/kernel.asm	/^c0103564:	55                   	push   %ebp$/;"	l
c0103565	obj/kernel.asm	/^c0103565:	89 e5                	mov    %esp,%ebp$/;"	l
c0103567	obj/kernel.asm	/^c0103567:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010356a	obj/kernel.asm	/^c010356a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010356d	obj/kernel.asm	/^c010356d:	89 10                	mov    %edx,(%eax)$/;"	l
c010356f	obj/kernel.asm	/^c010356f:	5d                   	pop    %ebp$/;"	l
c0103570	obj/kernel.asm	/^c0103570:	c3                   	ret    $/;"	l
c0103571	obj/kernel.asm	/^c0103571 <default_init>:$/;"	l
c0103571	obj/kernel.asm	/^c0103571:	55                   	push   %ebp$/;"	l
c0103572	obj/kernel.asm	/^c0103572:	89 e5                	mov    %esp,%ebp$/;"	l
c0103574	obj/kernel.asm	/^c0103574:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103577	obj/kernel.asm	/^c0103577:	c7 45 fc 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x4(%ebp)$/;"	l
c010357e	obj/kernel.asm	/^c010357e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103581	obj/kernel.asm	/^c0103581:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0103584	obj/kernel.asm	/^c0103584:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103587	obj/kernel.asm	/^c0103587:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010358a	obj/kernel.asm	/^c010358a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010358d	obj/kernel.asm	/^c010358d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103590	obj/kernel.asm	/^c0103590:	89 10                	mov    %edx,(%eax)$/;"	l
c0103592	obj/kernel.asm	/^c0103592:	c7 05 84 1e 1b c0 00 	movl   $0x0,0xc01b1e84$/;"	l
c0103599	obj/kernel.asm	/^c0103599:	00 00 00 $/;"	l
c010359c	obj/kernel.asm	/^c010359c:	c9                   	leave  $/;"	l
c010359d	obj/kernel.asm	/^c010359d:	c3                   	ret    $/;"	l
c010359e	obj/kernel.asm	/^c010359e <default_init_memmap>:$/;"	l
c010359e	obj/kernel.asm	/^c010359e:	55                   	push   %ebp$/;"	l
c010359f	obj/kernel.asm	/^c010359f:	89 e5                	mov    %esp,%ebp$/;"	l
c01035a1	obj/kernel.asm	/^c01035a1:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01035a4	obj/kernel.asm	/^c01035a4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01035a8	obj/kernel.asm	/^c01035a8:	75 24                	jne    c01035ce <default_init_memmap+0x30>$/;"	l
c01035aa	obj/kernel.asm	/^c01035aa:	c7 44 24 0c 90 cd 10 	movl   $0xc010cd90,0xc(%esp)$/;"	l
c01035b1	obj/kernel.asm	/^c01035b1:	c0 $/;"	l
c01035b2	obj/kernel.asm	/^c01035b2:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01035b9	obj/kernel.asm	/^c01035b9:	c0 $/;"	l
c01035ba	obj/kernel.asm	/^c01035ba:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)$/;"	l
c01035c1	obj/kernel.asm	/^c01035c1:	00 $/;"	l
c01035c2	obj/kernel.asm	/^c01035c2:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01035c9	obj/kernel.asm	/^c01035c9:	e8 0c d8 ff ff       	call   c0100dda <__panic>$/;"	l
c01035ce	obj/kernel.asm	/^c01035ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035d1	obj/kernel.asm	/^c01035d1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01035d4	obj/kernel.asm	/^c01035d4:	e9 dc 00 00 00       	jmp    c01036b5 <default_init_memmap+0x117>$/;"	l
c01035d9	obj/kernel.asm	/^c01035d9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01035dc	obj/kernel.asm	/^c01035dc:	83 c0 04             	add    $0x4,%eax$/;"	l
c01035df	obj/kernel.asm	/^c01035df:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01035e6	obj/kernel.asm	/^c01035e6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01035e9	obj/kernel.asm	/^c01035e9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01035ec	obj/kernel.asm	/^c01035ec:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01035ef	obj/kernel.asm	/^c01035ef:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01035f2	obj/kernel.asm	/^c01035f2:	19 c0                	sbb    %eax,%eax$/;"	l
c01035f4	obj/kernel.asm	/^c01035f4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01035f7	obj/kernel.asm	/^c01035f7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01035fb	obj/kernel.asm	/^c01035fb:	0f 95 c0             	setne  %al$/;"	l
c01035fe	obj/kernel.asm	/^c01035fe:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103601	obj/kernel.asm	/^c0103601:	85 c0                	test   %eax,%eax$/;"	l
c0103603	obj/kernel.asm	/^c0103603:	75 24                	jne    c0103629 <default_init_memmap+0x8b>$/;"	l
c0103605	obj/kernel.asm	/^c0103605:	c7 44 24 0c c1 cd 10 	movl   $0xc010cdc1,0xc(%esp)$/;"	l
c010360c	obj/kernel.asm	/^c010360c:	c0 $/;"	l
c010360d	obj/kernel.asm	/^c010360d:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103614	obj/kernel.asm	/^c0103614:	c0 $/;"	l
c0103615	obj/kernel.asm	/^c0103615:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
c010361c	obj/kernel.asm	/^c010361c:	00 $/;"	l
c010361d	obj/kernel.asm	/^c010361d:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103624	obj/kernel.asm	/^c0103624:	e8 b1 d7 ff ff       	call   c0100dda <__panic>$/;"	l
c0103629	obj/kernel.asm	/^c0103629:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010362c	obj/kernel.asm	/^c010362c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0103633	obj/kernel.asm	/^c0103633:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103636	obj/kernel.asm	/^c0103636:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103639	obj/kernel.asm	/^c0103639:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c0103640	obj/kernel.asm	/^c0103640:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103643	obj/kernel.asm	/^c0103643:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103646	obj/kernel.asm	/^c0103646:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103649	obj/kernel.asm	/^c0103649:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c010364c	obj/kernel.asm	/^c010364c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010364f	obj/kernel.asm	/^c010364f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0103656	obj/kernel.asm	/^c0103656:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010365d	obj/kernel.asm	/^c010365d:	00 $/;"	l
c010365e	obj/kernel.asm	/^c010365e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103661	obj/kernel.asm	/^c0103661:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103664	obj/kernel.asm	/^c0103664:	e8 fb fe ff ff       	call   c0103564 <set_page_ref>$/;"	l
c0103669	obj/kernel.asm	/^c0103669:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010366c	obj/kernel.asm	/^c010366c:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010366f	obj/kernel.asm	/^c010366f:	c7 45 dc 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x24(%ebp)$/;"	l
c0103676	obj/kernel.asm	/^c0103676:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0103679	obj/kernel.asm	/^c0103679:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010367c	obj/kernel.asm	/^c010367c:	8b 00                	mov    (%eax),%eax$/;"	l
c010367e	obj/kernel.asm	/^c010367e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0103681	obj/kernel.asm	/^c0103681:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103684	obj/kernel.asm	/^c0103684:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103687	obj/kernel.asm	/^c0103687:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010368a	obj/kernel.asm	/^c010368a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010368d	obj/kernel.asm	/^c010368d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103690	obj/kernel.asm	/^c0103690:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103693	obj/kernel.asm	/^c0103693:	89 10                	mov    %edx,(%eax)$/;"	l
c0103695	obj/kernel.asm	/^c0103695:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103698	obj/kernel.asm	/^c0103698:	8b 10                	mov    (%eax),%edx$/;"	l
c010369a	obj/kernel.asm	/^c010369a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010369d	obj/kernel.asm	/^c010369d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01036a0	obj/kernel.asm	/^c01036a0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01036a3	obj/kernel.asm	/^c01036a3:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01036a6	obj/kernel.asm	/^c01036a6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01036a9	obj/kernel.asm	/^c01036a9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01036ac	obj/kernel.asm	/^c01036ac:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01036af	obj/kernel.asm	/^c01036af:	89 10                	mov    %edx,(%eax)$/;"	l
c01036b1	obj/kernel.asm	/^c01036b1:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c01036b5	obj/kernel.asm	/^c01036b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01036b8	obj/kernel.asm	/^c01036b8:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c01036bb	obj/kernel.asm	/^c01036bb:	89 c2                	mov    %eax,%edx$/;"	l
c01036bd	obj/kernel.asm	/^c01036bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01036c0	obj/kernel.asm	/^c01036c0:	01 d0                	add    %edx,%eax$/;"	l
c01036c2	obj/kernel.asm	/^c01036c2:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01036c5	obj/kernel.asm	/^c01036c5:	0f 85 0e ff ff ff    	jne    c01035d9 <default_init_memmap+0x3b>$/;"	l
c01036cb	obj/kernel.asm	/^c01036cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01036ce	obj/kernel.asm	/^c01036ce:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01036d1	obj/kernel.asm	/^c01036d1:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01036d4	obj/kernel.asm	/^c01036d4:	8b 15 84 1e 1b c0    	mov    0xc01b1e84,%edx$/;"	l
c01036da	obj/kernel.asm	/^c01036da:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01036dd	obj/kernel.asm	/^c01036dd:	01 d0                	add    %edx,%eax$/;"	l
c01036df	obj/kernel.asm	/^c01036df:	a3 84 1e 1b c0       	mov    %eax,0xc01b1e84$/;"	l
c01036e4	obj/kernel.asm	/^c01036e4:	c9                   	leave  $/;"	l
c01036e5	obj/kernel.asm	/^c01036e5:	c3                   	ret    $/;"	l
c01036e6	obj/kernel.asm	/^c01036e6 <default_alloc_pages>:$/;"	l
c01036e6	obj/kernel.asm	/^c01036e6:	55                   	push   %ebp$/;"	l
c01036e7	obj/kernel.asm	/^c01036e7:	89 e5                	mov    %esp,%ebp$/;"	l
c01036e9	obj/kernel.asm	/^c01036e9:	83 ec 68             	sub    $0x68,%esp$/;"	l
c01036ec	obj/kernel.asm	/^c01036ec:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01036f0	obj/kernel.asm	/^c01036f0:	75 24                	jne    c0103716 <default_alloc_pages+0x30>$/;"	l
c01036f2	obj/kernel.asm	/^c01036f2:	c7 44 24 0c 90 cd 10 	movl   $0xc010cd90,0xc(%esp)$/;"	l
c01036f9	obj/kernel.asm	/^c01036f9:	c0 $/;"	l
c01036fa	obj/kernel.asm	/^c01036fa:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103701	obj/kernel.asm	/^c0103701:	c0 $/;"	l
c0103702	obj/kernel.asm	/^c0103702:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
c0103709	obj/kernel.asm	/^c0103709:	00 $/;"	l
c010370a	obj/kernel.asm	/^c010370a:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103711	obj/kernel.asm	/^c0103711:	e8 c4 d6 ff ff       	call   c0100dda <__panic>$/;"	l
c0103716	obj/kernel.asm	/^c0103716:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c010371b	obj/kernel.asm	/^c010371b:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010371e	obj/kernel.asm	/^c010371e:	73 0a                	jae    c010372a <default_alloc_pages+0x44>$/;"	l
c0103720	obj/kernel.asm	/^c0103720:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0103725	obj/kernel.asm	/^c0103725:	e9 37 01 00 00       	jmp    c0103861 <default_alloc_pages+0x17b>$/;"	l
c010372a	obj/kernel.asm	/^c010372a:	c7 45 f4 7c 1e 1b c0 	movl   $0xc01b1e7c,-0xc(%ebp)$/;"	l
c0103731	obj/kernel.asm	/^c0103731:	e9 0a 01 00 00       	jmp    c0103840 <default_alloc_pages+0x15a>$/;"	l
c0103736	obj/kernel.asm	/^c0103736:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103739	obj/kernel.asm	/^c0103739:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010373c	obj/kernel.asm	/^c010373c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010373f	obj/kernel.asm	/^c010373f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103742	obj/kernel.asm	/^c0103742:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103745	obj/kernel.asm	/^c0103745:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103748	obj/kernel.asm	/^c0103748:	0f 82 f2 00 00 00    	jb     c0103840 <default_alloc_pages+0x15a>$/;"	l
c010374e	obj/kernel.asm	/^c010374e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0103755	obj/kernel.asm	/^c0103755:	eb 7c                	jmp    c01037d3 <default_alloc_pages+0xed>$/;"	l
c0103757	obj/kernel.asm	/^c0103757:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010375a	obj/kernel.asm	/^c010375a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010375d	obj/kernel.asm	/^c010375d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103760	obj/kernel.asm	/^c0103760:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103763	obj/kernel.asm	/^c0103763:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103766	obj/kernel.asm	/^c0103766:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103769	obj/kernel.asm	/^c0103769:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010376c	obj/kernel.asm	/^c010376c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010376f	obj/kernel.asm	/^c010376f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103772	obj/kernel.asm	/^c0103772:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103775	obj/kernel.asm	/^c0103775:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010377c	obj/kernel.asm	/^c010377c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010377f	obj/kernel.asm	/^c010377f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0103782	obj/kernel.asm	/^c0103782:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103785	obj/kernel.asm	/^c0103785:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103788	obj/kernel.asm	/^c0103788:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010378b	obj/kernel.asm	/^c010378b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010378e	obj/kernel.asm	/^c010378e:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
c0103795	obj/kernel.asm	/^c0103795:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103798	obj/kernel.asm	/^c0103798:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010379b	obj/kernel.asm	/^c010379b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010379e	obj/kernel.asm	/^c010379e:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c01037a1	obj/kernel.asm	/^c01037a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037a4	obj/kernel.asm	/^c01037a4:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01037a7	obj/kernel.asm	/^c01037a7:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01037aa	obj/kernel.asm	/^c01037aa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01037ad	obj/kernel.asm	/^c01037ad:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01037b0	obj/kernel.asm	/^c01037b0:	8b 12                	mov    (%edx),%edx$/;"	l
c01037b2	obj/kernel.asm	/^c01037b2:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c01037b5	obj/kernel.asm	/^c01037b5:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c01037b8	obj/kernel.asm	/^c01037b8:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01037bb	obj/kernel.asm	/^c01037bb:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c01037be	obj/kernel.asm	/^c01037be:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01037c1	obj/kernel.asm	/^c01037c1:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01037c4	obj/kernel.asm	/^c01037c4:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01037c7	obj/kernel.asm	/^c01037c7:	89 10                	mov    %edx,(%eax)$/;"	l
c01037c9	obj/kernel.asm	/^c01037c9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01037cc	obj/kernel.asm	/^c01037cc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01037cf	obj/kernel.asm	/^c01037cf:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01037d3	obj/kernel.asm	/^c01037d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01037d6	obj/kernel.asm	/^c01037d6:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01037d9	obj/kernel.asm	/^c01037d9:	0f 82 78 ff ff ff    	jb     c0103757 <default_alloc_pages+0x71>$/;"	l
c01037df	obj/kernel.asm	/^c01037df:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01037e2	obj/kernel.asm	/^c01037e2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01037e5	obj/kernel.asm	/^c01037e5:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01037e8	obj/kernel.asm	/^c01037e8:	76 12                	jbe    c01037fc <default_alloc_pages+0x116>$/;"	l
c01037ea	obj/kernel.asm	/^c01037ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037ed	obj/kernel.asm	/^c01037ed:	8d 50 f4             	lea    -0xc(%eax),%edx$/;"	l
c01037f0	obj/kernel.asm	/^c01037f0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01037f3	obj/kernel.asm	/^c01037f3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01037f6	obj/kernel.asm	/^c01037f6:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c01037f9	obj/kernel.asm	/^c01037f9:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c01037fc	obj/kernel.asm	/^c01037fc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01037ff	obj/kernel.asm	/^c01037ff:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103802	obj/kernel.asm	/^c0103802:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0103809	obj/kernel.asm	/^c0103809:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010380c	obj/kernel.asm	/^c010380c:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010380f	obj/kernel.asm	/^c010380f:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0103812	obj/kernel.asm	/^c0103812:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0103815	obj/kernel.asm	/^c0103815:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103818	obj/kernel.asm	/^c0103818:	83 c0 04             	add    $0x4,%eax$/;"	l
c010381b	obj/kernel.asm	/^c010381b:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)$/;"	l
c0103822	obj/kernel.asm	/^c0103822:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0103825	obj/kernel.asm	/^c0103825:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0103828	obj/kernel.asm	/^c0103828:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c010382b	obj/kernel.asm	/^c010382b:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c010382e	obj/kernel.asm	/^c010382e:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c0103833	obj/kernel.asm	/^c0103833:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0103836	obj/kernel.asm	/^c0103836:	a3 84 1e 1b c0       	mov    %eax,0xc01b1e84$/;"	l
c010383b	obj/kernel.asm	/^c010383b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010383e	obj/kernel.asm	/^c010383e:	eb 21                	jmp    c0103861 <default_alloc_pages+0x17b>$/;"	l
c0103840	obj/kernel.asm	/^c0103840:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103843	obj/kernel.asm	/^c0103843:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0103846	obj/kernel.asm	/^c0103846:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103849	obj/kernel.asm	/^c0103849:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010384c	obj/kernel.asm	/^c010384c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010384f	obj/kernel.asm	/^c010384f:	81 7d f4 7c 1e 1b c0 	cmpl   $0xc01b1e7c,-0xc(%ebp)$/;"	l
c0103856	obj/kernel.asm	/^c0103856:	0f 85 da fe ff ff    	jne    c0103736 <default_alloc_pages+0x50>$/;"	l
c010385c	obj/kernel.asm	/^c010385c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0103861	obj/kernel.asm	/^c0103861:	c9                   	leave  $/;"	l
c0103862	obj/kernel.asm	/^c0103862:	c3                   	ret    $/;"	l
c0103863	obj/kernel.asm	/^c0103863 <default_free_pages>:$/;"	l
c0103863	obj/kernel.asm	/^c0103863:	55                   	push   %ebp$/;"	l
c0103864	obj/kernel.asm	/^c0103864:	89 e5                	mov    %esp,%ebp$/;"	l
c0103866	obj/kernel.asm	/^c0103866:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0103869	obj/kernel.asm	/^c0103869:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010386d	obj/kernel.asm	/^c010386d:	75 24                	jne    c0103893 <default_free_pages+0x30>$/;"	l
c010386f	obj/kernel.asm	/^c010386f:	c7 44 24 0c 90 cd 10 	movl   $0xc010cd90,0xc(%esp)$/;"	l
c0103876	obj/kernel.asm	/^c0103876:	c0 $/;"	l
c0103877	obj/kernel.asm	/^c0103877:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010387e	obj/kernel.asm	/^c010387e:	c0 $/;"	l
c010387f	obj/kernel.asm	/^c010387f:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
c0103886	obj/kernel.asm	/^c0103886:	00 $/;"	l
c0103887	obj/kernel.asm	/^c0103887:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010388e	obj/kernel.asm	/^c010388e:	e8 47 d5 ff ff       	call   c0100dda <__panic>$/;"	l
c0103893	obj/kernel.asm	/^c0103893:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103896	obj/kernel.asm	/^c0103896:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103899	obj/kernel.asm	/^c0103899:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01038a0	obj/kernel.asm	/^c01038a0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01038a3	obj/kernel.asm	/^c01038a3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01038a6	obj/kernel.asm	/^c01038a6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01038a9	obj/kernel.asm	/^c01038a9:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01038ac	obj/kernel.asm	/^c01038ac:	19 c0                	sbb    %eax,%eax$/;"	l
c01038ae	obj/kernel.asm	/^c01038ae:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01038b1	obj/kernel.asm	/^c01038b1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01038b5	obj/kernel.asm	/^c01038b5:	0f 95 c0             	setne  %al$/;"	l
c01038b8	obj/kernel.asm	/^c01038b8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01038bb	obj/kernel.asm	/^c01038bb:	85 c0                	test   %eax,%eax$/;"	l
c01038bd	obj/kernel.asm	/^c01038bd:	75 24                	jne    c01038e3 <default_free_pages+0x80>$/;"	l
c01038bf	obj/kernel.asm	/^c01038bf:	c7 44 24 0c d1 cd 10 	movl   $0xc010cdd1,0xc(%esp)$/;"	l
c01038c6	obj/kernel.asm	/^c01038c6:	c0 $/;"	l
c01038c7	obj/kernel.asm	/^c01038c7:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01038ce	obj/kernel.asm	/^c01038ce:	c0 $/;"	l
c01038cf	obj/kernel.asm	/^c01038cf:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
c01038d6	obj/kernel.asm	/^c01038d6:	00 $/;"	l
c01038d7	obj/kernel.asm	/^c01038d7:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01038de	obj/kernel.asm	/^c01038de:	e8 f7 d4 ff ff       	call   c0100dda <__panic>$/;"	l
c01038e3	obj/kernel.asm	/^c01038e3:	c7 45 f4 7c 1e 1b c0 	movl   $0xc01b1e7c,-0xc(%ebp)$/;"	l
c01038ea	obj/kernel.asm	/^c01038ea:	eb 13                	jmp    c01038ff <default_free_pages+0x9c>$/;"	l
c01038ec	obj/kernel.asm	/^c01038ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01038ef	obj/kernel.asm	/^c01038ef:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01038f2	obj/kernel.asm	/^c01038f2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01038f5	obj/kernel.asm	/^c01038f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01038f8	obj/kernel.asm	/^c01038f8:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01038fb	obj/kernel.asm	/^c01038fb:	76 02                	jbe    c01038ff <default_free_pages+0x9c>$/;"	l
c01038fd	obj/kernel.asm	/^c01038fd:	eb 18                	jmp    c0103917 <default_free_pages+0xb4>$/;"	l
c01038ff	obj/kernel.asm	/^c01038ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103902	obj/kernel.asm	/^c0103902:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103905	obj/kernel.asm	/^c0103905:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103908	obj/kernel.asm	/^c0103908:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010390b	obj/kernel.asm	/^c010390b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010390e	obj/kernel.asm	/^c010390e:	81 7d f4 7c 1e 1b c0 	cmpl   $0xc01b1e7c,-0xc(%ebp)$/;"	l
c0103915	obj/kernel.asm	/^c0103915:	75 d5                	jne    c01038ec <default_free_pages+0x89>$/;"	l
c0103917	obj/kernel.asm	/^c0103917:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010391a	obj/kernel.asm	/^c010391a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010391d	obj/kernel.asm	/^c010391d:	eb 4b                	jmp    c010396a <default_free_pages+0x107>$/;"	l
c010391f	obj/kernel.asm	/^c010391f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103922	obj/kernel.asm	/^c0103922:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0103925	obj/kernel.asm	/^c0103925:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103928	obj/kernel.asm	/^c0103928:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010392b	obj/kernel.asm	/^c010392b:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010392e	obj/kernel.asm	/^c010392e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0103931	obj/kernel.asm	/^c0103931:	8b 00                	mov    (%eax),%eax$/;"	l
c0103933	obj/kernel.asm	/^c0103933:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0103936	obj/kernel.asm	/^c0103936:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103939	obj/kernel.asm	/^c0103939:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010393c	obj/kernel.asm	/^c010393c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010393f	obj/kernel.asm	/^c010393f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0103942	obj/kernel.asm	/^c0103942:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103945	obj/kernel.asm	/^c0103945:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103948	obj/kernel.asm	/^c0103948:	89 10                	mov    %edx,(%eax)$/;"	l
c010394a	obj/kernel.asm	/^c010394a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010394d	obj/kernel.asm	/^c010394d:	8b 10                	mov    (%eax),%edx$/;"	l
c010394f	obj/kernel.asm	/^c010394f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103952	obj/kernel.asm	/^c0103952:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103955	obj/kernel.asm	/^c0103955:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0103958	obj/kernel.asm	/^c0103958:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010395b	obj/kernel.asm	/^c010395b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010395e	obj/kernel.asm	/^c010395e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0103961	obj/kernel.asm	/^c0103961:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103964	obj/kernel.asm	/^c0103964:	89 10                	mov    %edx,(%eax)$/;"	l
c0103966	obj/kernel.asm	/^c0103966:	83 45 f0 20          	addl   $0x20,-0x10(%ebp)$/;"	l
c010396a	obj/kernel.asm	/^c010396a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010396d	obj/kernel.asm	/^c010396d:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103970	obj/kernel.asm	/^c0103970:	89 c2                	mov    %eax,%edx$/;"	l
c0103972	obj/kernel.asm	/^c0103972:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103975	obj/kernel.asm	/^c0103975:	01 d0                	add    %edx,%eax$/;"	l
c0103977	obj/kernel.asm	/^c0103977:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010397a	obj/kernel.asm	/^c010397a:	77 a3                	ja     c010391f <default_free_pages+0xbc>$/;"	l
c010397c	obj/kernel.asm	/^c010397c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010397f	obj/kernel.asm	/^c010397f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0103986	obj/kernel.asm	/^c0103986:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010398d	obj/kernel.asm	/^c010398d:	00 $/;"	l
c010398e	obj/kernel.asm	/^c010398e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103991	obj/kernel.asm	/^c0103991:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103994	obj/kernel.asm	/^c0103994:	e8 cb fb ff ff       	call   c0103564 <set_page_ref>$/;"	l
c0103999	obj/kernel.asm	/^c0103999:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010399c	obj/kernel.asm	/^c010399c:	83 c0 04             	add    $0x4,%eax$/;"	l
c010399f	obj/kernel.asm	/^c010399f:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)$/;"	l
c01039a6	obj/kernel.asm	/^c01039a6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c01039a9	obj/kernel.asm	/^c01039a9:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01039ac	obj/kernel.asm	/^c01039ac:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01039af	obj/kernel.asm	/^c01039af:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c01039b2	obj/kernel.asm	/^c01039b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039b5	obj/kernel.asm	/^c01039b5:	83 c0 04             	add    $0x4,%eax$/;"	l
c01039b8	obj/kernel.asm	/^c01039b8:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c01039bf	obj/kernel.asm	/^c01039bf:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01039c2	obj/kernel.asm	/^c01039c2:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01039c5	obj/kernel.asm	/^c01039c5:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c01039c8	obj/kernel.asm	/^c01039c8:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01039cb	obj/kernel.asm	/^c01039cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039ce	obj/kernel.asm	/^c01039ce:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01039d1	obj/kernel.asm	/^c01039d1:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01039d4	obj/kernel.asm	/^c01039d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01039d7	obj/kernel.asm	/^c01039d7:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01039da	obj/kernel.asm	/^c01039da:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01039dd	obj/kernel.asm	/^c01039dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01039e0	obj/kernel.asm	/^c01039e0:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c01039e3	obj/kernel.asm	/^c01039e3:	89 c2                	mov    %eax,%edx$/;"	l
c01039e5	obj/kernel.asm	/^c01039e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039e8	obj/kernel.asm	/^c01039e8:	01 d0                	add    %edx,%eax$/;"	l
c01039ea	obj/kernel.asm	/^c01039ea:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01039ed	obj/kernel.asm	/^c01039ed:	75 1e                	jne    c0103a0d <default_free_pages+0x1aa>$/;"	l
c01039ef	obj/kernel.asm	/^c01039ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039f2	obj/kernel.asm	/^c01039f2:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01039f5	obj/kernel.asm	/^c01039f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01039f8	obj/kernel.asm	/^c01039f8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01039fb	obj/kernel.asm	/^c01039fb:	01 c2                	add    %eax,%edx$/;"	l
c01039fd	obj/kernel.asm	/^c01039fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a00	obj/kernel.asm	/^c0103a00:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103a03	obj/kernel.asm	/^c0103a03:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a06	obj/kernel.asm	/^c0103a06:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0103a0d	obj/kernel.asm	/^c0103a0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a10	obj/kernel.asm	/^c0103a10:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0103a13	obj/kernel.asm	/^c0103a13:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0103a16	obj/kernel.asm	/^c0103a16:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0103a19	obj/kernel.asm	/^c0103a19:	8b 00                	mov    (%eax),%eax$/;"	l
c0103a1b	obj/kernel.asm	/^c0103a1b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103a1e	obj/kernel.asm	/^c0103a1e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a21	obj/kernel.asm	/^c0103a21:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103a24	obj/kernel.asm	/^c0103a24:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a27	obj/kernel.asm	/^c0103a27:	81 7d f4 7c 1e 1b c0 	cmpl   $0xc01b1e7c,-0xc(%ebp)$/;"	l
c0103a2e	obj/kernel.asm	/^c0103a2e:	74 57                	je     c0103a87 <default_free_pages+0x224>$/;"	l
c0103a30	obj/kernel.asm	/^c0103a30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a33	obj/kernel.asm	/^c0103a33:	83 e8 20             	sub    $0x20,%eax$/;"	l
c0103a36	obj/kernel.asm	/^c0103a36:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103a39	obj/kernel.asm	/^c0103a39:	75 4c                	jne    c0103a87 <default_free_pages+0x224>$/;"	l
c0103a3b	obj/kernel.asm	/^c0103a3b:	eb 41                	jmp    c0103a7e <default_free_pages+0x21b>$/;"	l
c0103a3d	obj/kernel.asm	/^c0103a3d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a40	obj/kernel.asm	/^c0103a40:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103a43	obj/kernel.asm	/^c0103a43:	85 c0                	test   %eax,%eax$/;"	l
c0103a45	obj/kernel.asm	/^c0103a45:	74 20                	je     c0103a67 <default_free_pages+0x204>$/;"	l
c0103a47	obj/kernel.asm	/^c0103a47:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a4a	obj/kernel.asm	/^c0103a4a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103a4d	obj/kernel.asm	/^c0103a4d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a50	obj/kernel.asm	/^c0103a50:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103a53	obj/kernel.asm	/^c0103a53:	01 c2                	add    %eax,%edx$/;"	l
c0103a55	obj/kernel.asm	/^c0103a55:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a58	obj/kernel.asm	/^c0103a58:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103a5b	obj/kernel.asm	/^c0103a5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a5e	obj/kernel.asm	/^c0103a5e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0103a65	obj/kernel.asm	/^c0103a65:	eb 20                	jmp    c0103a87 <default_free_pages+0x224>$/;"	l
c0103a67	obj/kernel.asm	/^c0103a67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a6a	obj/kernel.asm	/^c0103a6a:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0103a6d	obj/kernel.asm	/^c0103a6d:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0103a70	obj/kernel.asm	/^c0103a70:	8b 00                	mov    (%eax),%eax$/;"	l
c0103a72	obj/kernel.asm	/^c0103a72:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103a75	obj/kernel.asm	/^c0103a75:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a78	obj/kernel.asm	/^c0103a78:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103a7b	obj/kernel.asm	/^c0103a7b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a7e	obj/kernel.asm	/^c0103a7e:	81 7d f4 7c 1e 1b c0 	cmpl   $0xc01b1e7c,-0xc(%ebp)$/;"	l
c0103a85	obj/kernel.asm	/^c0103a85:	75 b6                	jne    c0103a3d <default_free_pages+0x1da>$/;"	l
c0103a87	obj/kernel.asm	/^c0103a87:	8b 15 84 1e 1b c0    	mov    0xc01b1e84,%edx$/;"	l
c0103a8d	obj/kernel.asm	/^c0103a8d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103a90	obj/kernel.asm	/^c0103a90:	01 d0                	add    %edx,%eax$/;"	l
c0103a92	obj/kernel.asm	/^c0103a92:	a3 84 1e 1b c0       	mov    %eax,0xc01b1e84$/;"	l
c0103a97	obj/kernel.asm	/^c0103a97:	90                   	nop$/;"	l
c0103a98	obj/kernel.asm	/^c0103a98:	c9                   	leave  $/;"	l
c0103a99	obj/kernel.asm	/^c0103a99:	c3                   	ret    $/;"	l
c0103a9a	obj/kernel.asm	/^c0103a9a <default_nr_free_pages>:$/;"	l
c0103a9a	obj/kernel.asm	/^c0103a9a:	55                   	push   %ebp$/;"	l
c0103a9b	obj/kernel.asm	/^c0103a9b:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a9d	obj/kernel.asm	/^c0103a9d:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c0103aa2	obj/kernel.asm	/^c0103aa2:	5d                   	pop    %ebp$/;"	l
c0103aa3	obj/kernel.asm	/^c0103aa3:	c3                   	ret    $/;"	l
c0103aa4	obj/kernel.asm	/^c0103aa4 <basic_check>:$/;"	l
c0103aa4	obj/kernel.asm	/^c0103aa4:	55                   	push   %ebp$/;"	l
c0103aa5	obj/kernel.asm	/^c0103aa5:	89 e5                	mov    %esp,%ebp$/;"	l
c0103aa7	obj/kernel.asm	/^c0103aa7:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0103aaa	obj/kernel.asm	/^c0103aaa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0103ab1	obj/kernel.asm	/^c0103ab1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103ab4	obj/kernel.asm	/^c0103ab4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103ab7	obj/kernel.asm	/^c0103ab7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103aba	obj/kernel.asm	/^c0103aba:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103abd	obj/kernel.asm	/^c0103abd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ac4	obj/kernel.asm	/^c0103ac4:	e8 dc 15 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103ac9	obj/kernel.asm	/^c0103ac9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103acc	obj/kernel.asm	/^c0103acc:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0103ad0	obj/kernel.asm	/^c0103ad0:	75 24                	jne    c0103af6 <basic_check+0x52>$/;"	l
c0103ad2	obj/kernel.asm	/^c0103ad2:	c7 44 24 0c e4 cd 10 	movl   $0xc010cde4,0xc(%esp)$/;"	l
c0103ad9	obj/kernel.asm	/^c0103ad9:	c0 $/;"	l
c0103ada	obj/kernel.asm	/^c0103ada:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103ae1	obj/kernel.asm	/^c0103ae1:	c0 $/;"	l
c0103ae2	obj/kernel.asm	/^c0103ae2:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
c0103ae9	obj/kernel.asm	/^c0103ae9:	00 $/;"	l
c0103aea	obj/kernel.asm	/^c0103aea:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103af1	obj/kernel.asm	/^c0103af1:	e8 e4 d2 ff ff       	call   c0100dda <__panic>$/;"	l
c0103af6	obj/kernel.asm	/^c0103af6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103afd	obj/kernel.asm	/^c0103afd:	e8 a3 15 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103b02	obj/kernel.asm	/^c0103b02:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103b05	obj/kernel.asm	/^c0103b05:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103b09	obj/kernel.asm	/^c0103b09:	75 24                	jne    c0103b2f <basic_check+0x8b>$/;"	l
c0103b0b	obj/kernel.asm	/^c0103b0b:	c7 44 24 0c 00 ce 10 	movl   $0xc010ce00,0xc(%esp)$/;"	l
c0103b12	obj/kernel.asm	/^c0103b12:	c0 $/;"	l
c0103b13	obj/kernel.asm	/^c0103b13:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103b1a	obj/kernel.asm	/^c0103b1a:	c0 $/;"	l
c0103b1b	obj/kernel.asm	/^c0103b1b:	c7 44 24 04 ae 00 00 	movl   $0xae,0x4(%esp)$/;"	l
c0103b22	obj/kernel.asm	/^c0103b22:	00 $/;"	l
c0103b23	obj/kernel.asm	/^c0103b23:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103b2a	obj/kernel.asm	/^c0103b2a:	e8 ab d2 ff ff       	call   c0100dda <__panic>$/;"	l
c0103b2f	obj/kernel.asm	/^c0103b2f:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103b36	obj/kernel.asm	/^c0103b36:	e8 6a 15 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103b3b	obj/kernel.asm	/^c0103b3b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103b3e	obj/kernel.asm	/^c0103b3e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103b42	obj/kernel.asm	/^c0103b42:	75 24                	jne    c0103b68 <basic_check+0xc4>$/;"	l
c0103b44	obj/kernel.asm	/^c0103b44:	c7 44 24 0c 1c ce 10 	movl   $0xc010ce1c,0xc(%esp)$/;"	l
c0103b4b	obj/kernel.asm	/^c0103b4b:	c0 $/;"	l
c0103b4c	obj/kernel.asm	/^c0103b4c:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103b53	obj/kernel.asm	/^c0103b53:	c0 $/;"	l
c0103b54	obj/kernel.asm	/^c0103b54:	c7 44 24 04 af 00 00 	movl   $0xaf,0x4(%esp)$/;"	l
c0103b5b	obj/kernel.asm	/^c0103b5b:	00 $/;"	l
c0103b5c	obj/kernel.asm	/^c0103b5c:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103b63	obj/kernel.asm	/^c0103b63:	e8 72 d2 ff ff       	call   c0100dda <__panic>$/;"	l
c0103b68	obj/kernel.asm	/^c0103b68:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103b6b	obj/kernel.asm	/^c0103b6b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103b6e	obj/kernel.asm	/^c0103b6e:	74 10                	je     c0103b80 <basic_check+0xdc>$/;"	l
c0103b70	obj/kernel.asm	/^c0103b70:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103b73	obj/kernel.asm	/^c0103b73:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103b76	obj/kernel.asm	/^c0103b76:	74 08                	je     c0103b80 <basic_check+0xdc>$/;"	l
c0103b78	obj/kernel.asm	/^c0103b78:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103b7b	obj/kernel.asm	/^c0103b7b:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103b7e	obj/kernel.asm	/^c0103b7e:	75 24                	jne    c0103ba4 <basic_check+0x100>$/;"	l
c0103b80	obj/kernel.asm	/^c0103b80:	c7 44 24 0c 38 ce 10 	movl   $0xc010ce38,0xc(%esp)$/;"	l
c0103b87	obj/kernel.asm	/^c0103b87:	c0 $/;"	l
c0103b88	obj/kernel.asm	/^c0103b88:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103b8f	obj/kernel.asm	/^c0103b8f:	c0 $/;"	l
c0103b90	obj/kernel.asm	/^c0103b90:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)$/;"	l
c0103b97	obj/kernel.asm	/^c0103b97:	00 $/;"	l
c0103b98	obj/kernel.asm	/^c0103b98:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103b9f	obj/kernel.asm	/^c0103b9f:	e8 36 d2 ff ff       	call   c0100dda <__panic>$/;"	l
c0103ba4	obj/kernel.asm	/^c0103ba4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103ba7	obj/kernel.asm	/^c0103ba7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103baa	obj/kernel.asm	/^c0103baa:	e8 ab f9 ff ff       	call   c010355a <page_ref>$/;"	l
c0103baf	obj/kernel.asm	/^c0103baf:	85 c0                	test   %eax,%eax$/;"	l
c0103bb1	obj/kernel.asm	/^c0103bb1:	75 1e                	jne    c0103bd1 <basic_check+0x12d>$/;"	l
c0103bb3	obj/kernel.asm	/^c0103bb3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103bb6	obj/kernel.asm	/^c0103bb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103bb9	obj/kernel.asm	/^c0103bb9:	e8 9c f9 ff ff       	call   c010355a <page_ref>$/;"	l
c0103bbe	obj/kernel.asm	/^c0103bbe:	85 c0                	test   %eax,%eax$/;"	l
c0103bc0	obj/kernel.asm	/^c0103bc0:	75 0f                	jne    c0103bd1 <basic_check+0x12d>$/;"	l
c0103bc2	obj/kernel.asm	/^c0103bc2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103bc5	obj/kernel.asm	/^c0103bc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103bc8	obj/kernel.asm	/^c0103bc8:	e8 8d f9 ff ff       	call   c010355a <page_ref>$/;"	l
c0103bcd	obj/kernel.asm	/^c0103bcd:	85 c0                	test   %eax,%eax$/;"	l
c0103bcf	obj/kernel.asm	/^c0103bcf:	74 24                	je     c0103bf5 <basic_check+0x151>$/;"	l
c0103bd1	obj/kernel.asm	/^c0103bd1:	c7 44 24 0c 5c ce 10 	movl   $0xc010ce5c,0xc(%esp)$/;"	l
c0103bd8	obj/kernel.asm	/^c0103bd8:	c0 $/;"	l
c0103bd9	obj/kernel.asm	/^c0103bd9:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103be0	obj/kernel.asm	/^c0103be0:	c0 $/;"	l
c0103be1	obj/kernel.asm	/^c0103be1:	c7 44 24 04 b2 00 00 	movl   $0xb2,0x4(%esp)$/;"	l
c0103be8	obj/kernel.asm	/^c0103be8:	00 $/;"	l
c0103be9	obj/kernel.asm	/^c0103be9:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103bf0	obj/kernel.asm	/^c0103bf0:	e8 e5 d1 ff ff       	call   c0100dda <__panic>$/;"	l
c0103bf5	obj/kernel.asm	/^c0103bf5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103bf8	obj/kernel.asm	/^c0103bf8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103bfb	obj/kernel.asm	/^c0103bfb:	e8 44 f9 ff ff       	call   c0103544 <page2pa>$/;"	l
c0103c00	obj/kernel.asm	/^c0103c00:	8b 15 80 fd 1a c0    	mov    0xc01afd80,%edx$/;"	l
c0103c06	obj/kernel.asm	/^c0103c06:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103c09	obj/kernel.asm	/^c0103c09:	39 d0                	cmp    %edx,%eax$/;"	l
c0103c0b	obj/kernel.asm	/^c0103c0b:	72 24                	jb     c0103c31 <basic_check+0x18d>$/;"	l
c0103c0d	obj/kernel.asm	/^c0103c0d:	c7 44 24 0c 98 ce 10 	movl   $0xc010ce98,0xc(%esp)$/;"	l
c0103c14	obj/kernel.asm	/^c0103c14:	c0 $/;"	l
c0103c15	obj/kernel.asm	/^c0103c15:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103c1c	obj/kernel.asm	/^c0103c1c:	c0 $/;"	l
c0103c1d	obj/kernel.asm	/^c0103c1d:	c7 44 24 04 b4 00 00 	movl   $0xb4,0x4(%esp)$/;"	l
c0103c24	obj/kernel.asm	/^c0103c24:	00 $/;"	l
c0103c25	obj/kernel.asm	/^c0103c25:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103c2c	obj/kernel.asm	/^c0103c2c:	e8 a9 d1 ff ff       	call   c0100dda <__panic>$/;"	l
c0103c31	obj/kernel.asm	/^c0103c31:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103c34	obj/kernel.asm	/^c0103c34:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c37	obj/kernel.asm	/^c0103c37:	e8 08 f9 ff ff       	call   c0103544 <page2pa>$/;"	l
c0103c3c	obj/kernel.asm	/^c0103c3c:	8b 15 80 fd 1a c0    	mov    0xc01afd80,%edx$/;"	l
c0103c42	obj/kernel.asm	/^c0103c42:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103c45	obj/kernel.asm	/^c0103c45:	39 d0                	cmp    %edx,%eax$/;"	l
c0103c47	obj/kernel.asm	/^c0103c47:	72 24                	jb     c0103c6d <basic_check+0x1c9>$/;"	l
c0103c49	obj/kernel.asm	/^c0103c49:	c7 44 24 0c b5 ce 10 	movl   $0xc010ceb5,0xc(%esp)$/;"	l
c0103c50	obj/kernel.asm	/^c0103c50:	c0 $/;"	l
c0103c51	obj/kernel.asm	/^c0103c51:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103c58	obj/kernel.asm	/^c0103c58:	c0 $/;"	l
c0103c59	obj/kernel.asm	/^c0103c59:	c7 44 24 04 b5 00 00 	movl   $0xb5,0x4(%esp)$/;"	l
c0103c60	obj/kernel.asm	/^c0103c60:	00 $/;"	l
c0103c61	obj/kernel.asm	/^c0103c61:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103c68	obj/kernel.asm	/^c0103c68:	e8 6d d1 ff ff       	call   c0100dda <__panic>$/;"	l
c0103c6d	obj/kernel.asm	/^c0103c6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103c70	obj/kernel.asm	/^c0103c70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c73	obj/kernel.asm	/^c0103c73:	e8 cc f8 ff ff       	call   c0103544 <page2pa>$/;"	l
c0103c78	obj/kernel.asm	/^c0103c78:	8b 15 80 fd 1a c0    	mov    0xc01afd80,%edx$/;"	l
c0103c7e	obj/kernel.asm	/^c0103c7e:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103c81	obj/kernel.asm	/^c0103c81:	39 d0                	cmp    %edx,%eax$/;"	l
c0103c83	obj/kernel.asm	/^c0103c83:	72 24                	jb     c0103ca9 <basic_check+0x205>$/;"	l
c0103c85	obj/kernel.asm	/^c0103c85:	c7 44 24 0c d2 ce 10 	movl   $0xc010ced2,0xc(%esp)$/;"	l
c0103c8c	obj/kernel.asm	/^c0103c8c:	c0 $/;"	l
c0103c8d	obj/kernel.asm	/^c0103c8d:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103c94	obj/kernel.asm	/^c0103c94:	c0 $/;"	l
c0103c95	obj/kernel.asm	/^c0103c95:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
c0103c9c	obj/kernel.asm	/^c0103c9c:	00 $/;"	l
c0103c9d	obj/kernel.asm	/^c0103c9d:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103ca4	obj/kernel.asm	/^c0103ca4:	e8 31 d1 ff ff       	call   c0100dda <__panic>$/;"	l
c0103ca9	obj/kernel.asm	/^c0103ca9:	a1 7c 1e 1b c0       	mov    0xc01b1e7c,%eax$/;"	l
c0103cae	obj/kernel.asm	/^c0103cae:	8b 15 80 1e 1b c0    	mov    0xc01b1e80,%edx$/;"	l
c0103cb4	obj/kernel.asm	/^c0103cb4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103cb7	obj/kernel.asm	/^c0103cb7:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103cba	obj/kernel.asm	/^c0103cba:	c7 45 e0 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x20(%ebp)$/;"	l
c0103cc1	obj/kernel.asm	/^c0103cc1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103cc4	obj/kernel.asm	/^c0103cc4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0103cc7	obj/kernel.asm	/^c0103cc7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103cca	obj/kernel.asm	/^c0103cca:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103ccd	obj/kernel.asm	/^c0103ccd:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0103cd0	obj/kernel.asm	/^c0103cd0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103cd3	obj/kernel.asm	/^c0103cd3:	89 10                	mov    %edx,(%eax)$/;"	l
c0103cd5	obj/kernel.asm	/^c0103cd5:	c7 45 dc 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x24(%ebp)$/;"	l
c0103cdc	obj/kernel.asm	/^c0103cdc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0103cdf	obj/kernel.asm	/^c0103cdf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103ce2	obj/kernel.asm	/^c0103ce2:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0103ce5	obj/kernel.asm	/^c0103ce5:	0f 94 c0             	sete   %al$/;"	l
c0103ce8	obj/kernel.asm	/^c0103ce8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103ceb	obj/kernel.asm	/^c0103ceb:	85 c0                	test   %eax,%eax$/;"	l
c0103ced	obj/kernel.asm	/^c0103ced:	75 24                	jne    c0103d13 <basic_check+0x26f>$/;"	l
c0103cef	obj/kernel.asm	/^c0103cef:	c7 44 24 0c ef ce 10 	movl   $0xc010ceef,0xc(%esp)$/;"	l
c0103cf6	obj/kernel.asm	/^c0103cf6:	c0 $/;"	l
c0103cf7	obj/kernel.asm	/^c0103cf7:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103cfe	obj/kernel.asm	/^c0103cfe:	c0 $/;"	l
c0103cff	obj/kernel.asm	/^c0103cff:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
c0103d06	obj/kernel.asm	/^c0103d06:	00 $/;"	l
c0103d07	obj/kernel.asm	/^c0103d07:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103d0e	obj/kernel.asm	/^c0103d0e:	e8 c7 d0 ff ff       	call   c0100dda <__panic>$/;"	l
c0103d13	obj/kernel.asm	/^c0103d13:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c0103d18	obj/kernel.asm	/^c0103d18:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103d1b	obj/kernel.asm	/^c0103d1b:	c7 05 84 1e 1b c0 00 	movl   $0x0,0xc01b1e84$/;"	l
c0103d22	obj/kernel.asm	/^c0103d22:	00 00 00 $/;"	l
c0103d25	obj/kernel.asm	/^c0103d25:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103d2c	obj/kernel.asm	/^c0103d2c:	e8 74 13 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103d31	obj/kernel.asm	/^c0103d31:	85 c0                	test   %eax,%eax$/;"	l
c0103d33	obj/kernel.asm	/^c0103d33:	74 24                	je     c0103d59 <basic_check+0x2b5>$/;"	l
c0103d35	obj/kernel.asm	/^c0103d35:	c7 44 24 0c 06 cf 10 	movl   $0xc010cf06,0xc(%esp)$/;"	l
c0103d3c	obj/kernel.asm	/^c0103d3c:	c0 $/;"	l
c0103d3d	obj/kernel.asm	/^c0103d3d:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103d44	obj/kernel.asm	/^c0103d44:	c0 $/;"	l
c0103d45	obj/kernel.asm	/^c0103d45:	c7 44 24 04 bf 00 00 	movl   $0xbf,0x4(%esp)$/;"	l
c0103d4c	obj/kernel.asm	/^c0103d4c:	00 $/;"	l
c0103d4d	obj/kernel.asm	/^c0103d4d:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103d54	obj/kernel.asm	/^c0103d54:	e8 81 d0 ff ff       	call   c0100dda <__panic>$/;"	l
c0103d59	obj/kernel.asm	/^c0103d59:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103d60	obj/kernel.asm	/^c0103d60:	00 $/;"	l
c0103d61	obj/kernel.asm	/^c0103d61:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103d64	obj/kernel.asm	/^c0103d64:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103d67	obj/kernel.asm	/^c0103d67:	e8 a4 13 00 00       	call   c0105110 <free_pages>$/;"	l
c0103d6c	obj/kernel.asm	/^c0103d6c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103d73	obj/kernel.asm	/^c0103d73:	00 $/;"	l
c0103d74	obj/kernel.asm	/^c0103d74:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103d77	obj/kernel.asm	/^c0103d77:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103d7a	obj/kernel.asm	/^c0103d7a:	e8 91 13 00 00       	call   c0105110 <free_pages>$/;"	l
c0103d7f	obj/kernel.asm	/^c0103d7f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103d86	obj/kernel.asm	/^c0103d86:	00 $/;"	l
c0103d87	obj/kernel.asm	/^c0103d87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103d8a	obj/kernel.asm	/^c0103d8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103d8d	obj/kernel.asm	/^c0103d8d:	e8 7e 13 00 00       	call   c0105110 <free_pages>$/;"	l
c0103d92	obj/kernel.asm	/^c0103d92:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c0103d97	obj/kernel.asm	/^c0103d97:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0103d9a	obj/kernel.asm	/^c0103d9a:	74 24                	je     c0103dc0 <basic_check+0x31c>$/;"	l
c0103d9c	obj/kernel.asm	/^c0103d9c:	c7 44 24 0c 1b cf 10 	movl   $0xc010cf1b,0xc(%esp)$/;"	l
c0103da3	obj/kernel.asm	/^c0103da3:	c0 $/;"	l
c0103da4	obj/kernel.asm	/^c0103da4:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103dab	obj/kernel.asm	/^c0103dab:	c0 $/;"	l
c0103dac	obj/kernel.asm	/^c0103dac:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)$/;"	l
c0103db3	obj/kernel.asm	/^c0103db3:	00 $/;"	l
c0103db4	obj/kernel.asm	/^c0103db4:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103dbb	obj/kernel.asm	/^c0103dbb:	e8 1a d0 ff ff       	call   c0100dda <__panic>$/;"	l
c0103dc0	obj/kernel.asm	/^c0103dc0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103dc7	obj/kernel.asm	/^c0103dc7:	e8 d9 12 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103dcc	obj/kernel.asm	/^c0103dcc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103dcf	obj/kernel.asm	/^c0103dcf:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0103dd3	obj/kernel.asm	/^c0103dd3:	75 24                	jne    c0103df9 <basic_check+0x355>$/;"	l
c0103dd5	obj/kernel.asm	/^c0103dd5:	c7 44 24 0c e4 cd 10 	movl   $0xc010cde4,0xc(%esp)$/;"	l
c0103ddc	obj/kernel.asm	/^c0103ddc:	c0 $/;"	l
c0103ddd	obj/kernel.asm	/^c0103ddd:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103de4	obj/kernel.asm	/^c0103de4:	c0 $/;"	l
c0103de5	obj/kernel.asm	/^c0103de5:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c0103dec	obj/kernel.asm	/^c0103dec:	00 $/;"	l
c0103ded	obj/kernel.asm	/^c0103ded:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103df4	obj/kernel.asm	/^c0103df4:	e8 e1 cf ff ff       	call   c0100dda <__panic>$/;"	l
c0103df9	obj/kernel.asm	/^c0103df9:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e00	obj/kernel.asm	/^c0103e00:	e8 a0 12 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103e05	obj/kernel.asm	/^c0103e05:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103e08	obj/kernel.asm	/^c0103e08:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103e0c	obj/kernel.asm	/^c0103e0c:	75 24                	jne    c0103e32 <basic_check+0x38e>$/;"	l
c0103e0e	obj/kernel.asm	/^c0103e0e:	c7 44 24 0c 00 ce 10 	movl   $0xc010ce00,0xc(%esp)$/;"	l
c0103e15	obj/kernel.asm	/^c0103e15:	c0 $/;"	l
c0103e16	obj/kernel.asm	/^c0103e16:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103e1d	obj/kernel.asm	/^c0103e1d:	c0 $/;"	l
c0103e1e	obj/kernel.asm	/^c0103e1e:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)$/;"	l
c0103e25	obj/kernel.asm	/^c0103e25:	00 $/;"	l
c0103e26	obj/kernel.asm	/^c0103e26:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103e2d	obj/kernel.asm	/^c0103e2d:	e8 a8 cf ff ff       	call   c0100dda <__panic>$/;"	l
c0103e32	obj/kernel.asm	/^c0103e32:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e39	obj/kernel.asm	/^c0103e39:	e8 67 12 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103e3e	obj/kernel.asm	/^c0103e3e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103e41	obj/kernel.asm	/^c0103e41:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103e45	obj/kernel.asm	/^c0103e45:	75 24                	jne    c0103e6b <basic_check+0x3c7>$/;"	l
c0103e47	obj/kernel.asm	/^c0103e47:	c7 44 24 0c 1c ce 10 	movl   $0xc010ce1c,0xc(%esp)$/;"	l
c0103e4e	obj/kernel.asm	/^c0103e4e:	c0 $/;"	l
c0103e4f	obj/kernel.asm	/^c0103e4f:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103e56	obj/kernel.asm	/^c0103e56:	c0 $/;"	l
c0103e57	obj/kernel.asm	/^c0103e57:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
c0103e5e	obj/kernel.asm	/^c0103e5e:	00 $/;"	l
c0103e5f	obj/kernel.asm	/^c0103e5f:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103e66	obj/kernel.asm	/^c0103e66:	e8 6f cf ff ff       	call   c0100dda <__panic>$/;"	l
c0103e6b	obj/kernel.asm	/^c0103e6b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e72	obj/kernel.asm	/^c0103e72:	e8 2e 12 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103e77	obj/kernel.asm	/^c0103e77:	85 c0                	test   %eax,%eax$/;"	l
c0103e79	obj/kernel.asm	/^c0103e79:	74 24                	je     c0103e9f <basic_check+0x3fb>$/;"	l
c0103e7b	obj/kernel.asm	/^c0103e7b:	c7 44 24 0c 06 cf 10 	movl   $0xc010cf06,0xc(%esp)$/;"	l
c0103e82	obj/kernel.asm	/^c0103e82:	c0 $/;"	l
c0103e83	obj/kernel.asm	/^c0103e83:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103e8a	obj/kernel.asm	/^c0103e8a:	c0 $/;"	l
c0103e8b	obj/kernel.asm	/^c0103e8b:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
c0103e92	obj/kernel.asm	/^c0103e92:	00 $/;"	l
c0103e93	obj/kernel.asm	/^c0103e93:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103e9a	obj/kernel.asm	/^c0103e9a:	e8 3b cf ff ff       	call   c0100dda <__panic>$/;"	l
c0103e9f	obj/kernel.asm	/^c0103e9f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103ea6	obj/kernel.asm	/^c0103ea6:	00 $/;"	l
c0103ea7	obj/kernel.asm	/^c0103ea7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103eaa	obj/kernel.asm	/^c0103eaa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103ead	obj/kernel.asm	/^c0103ead:	e8 5e 12 00 00       	call   c0105110 <free_pages>$/;"	l
c0103eb2	obj/kernel.asm	/^c0103eb2:	c7 45 d8 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x28(%ebp)$/;"	l
c0103eb9	obj/kernel.asm	/^c0103eb9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0103ebc	obj/kernel.asm	/^c0103ebc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103ebf	obj/kernel.asm	/^c0103ebf:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c0103ec2	obj/kernel.asm	/^c0103ec2:	0f 94 c0             	sete   %al$/;"	l
c0103ec5	obj/kernel.asm	/^c0103ec5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103ec8	obj/kernel.asm	/^c0103ec8:	85 c0                	test   %eax,%eax$/;"	l
c0103eca	obj/kernel.asm	/^c0103eca:	74 24                	je     c0103ef0 <basic_check+0x44c>$/;"	l
c0103ecc	obj/kernel.asm	/^c0103ecc:	c7 44 24 0c 28 cf 10 	movl   $0xc010cf28,0xc(%esp)$/;"	l
c0103ed3	obj/kernel.asm	/^c0103ed3:	c0 $/;"	l
c0103ed4	obj/kernel.asm	/^c0103ed4:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103edb	obj/kernel.asm	/^c0103edb:	c0 $/;"	l
c0103edc	obj/kernel.asm	/^c0103edc:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c0103ee3	obj/kernel.asm	/^c0103ee3:	00 $/;"	l
c0103ee4	obj/kernel.asm	/^c0103ee4:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103eeb	obj/kernel.asm	/^c0103eeb:	e8 ea ce ff ff       	call   c0100dda <__panic>$/;"	l
c0103ef0	obj/kernel.asm	/^c0103ef0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ef7	obj/kernel.asm	/^c0103ef7:	e8 a9 11 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103efc	obj/kernel.asm	/^c0103efc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103eff	obj/kernel.asm	/^c0103eff:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103f02	obj/kernel.asm	/^c0103f02:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0103f05	obj/kernel.asm	/^c0103f05:	74 24                	je     c0103f2b <basic_check+0x487>$/;"	l
c0103f07	obj/kernel.asm	/^c0103f07:	c7 44 24 0c 40 cf 10 	movl   $0xc010cf40,0xc(%esp)$/;"	l
c0103f0e	obj/kernel.asm	/^c0103f0e:	c0 $/;"	l
c0103f0f	obj/kernel.asm	/^c0103f0f:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103f16	obj/kernel.asm	/^c0103f16:	c0 $/;"	l
c0103f17	obj/kernel.asm	/^c0103f17:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
c0103f1e	obj/kernel.asm	/^c0103f1e:	00 $/;"	l
c0103f1f	obj/kernel.asm	/^c0103f1f:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103f26	obj/kernel.asm	/^c0103f26:	e8 af ce ff ff       	call   c0100dda <__panic>$/;"	l
c0103f2b	obj/kernel.asm	/^c0103f2b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103f32	obj/kernel.asm	/^c0103f32:	e8 6e 11 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0103f37	obj/kernel.asm	/^c0103f37:	85 c0                	test   %eax,%eax$/;"	l
c0103f39	obj/kernel.asm	/^c0103f39:	74 24                	je     c0103f5f <basic_check+0x4bb>$/;"	l
c0103f3b	obj/kernel.asm	/^c0103f3b:	c7 44 24 0c 06 cf 10 	movl   $0xc010cf06,0xc(%esp)$/;"	l
c0103f42	obj/kernel.asm	/^c0103f42:	c0 $/;"	l
c0103f43	obj/kernel.asm	/^c0103f43:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103f4a	obj/kernel.asm	/^c0103f4a:	c0 $/;"	l
c0103f4b	obj/kernel.asm	/^c0103f4b:	c7 44 24 04 d1 00 00 	movl   $0xd1,0x4(%esp)$/;"	l
c0103f52	obj/kernel.asm	/^c0103f52:	00 $/;"	l
c0103f53	obj/kernel.asm	/^c0103f53:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103f5a	obj/kernel.asm	/^c0103f5a:	e8 7b ce ff ff       	call   c0100dda <__panic>$/;"	l
c0103f5f	obj/kernel.asm	/^c0103f5f:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c0103f64	obj/kernel.asm	/^c0103f64:	85 c0                	test   %eax,%eax$/;"	l
c0103f66	obj/kernel.asm	/^c0103f66:	74 24                	je     c0103f8c <basic_check+0x4e8>$/;"	l
c0103f68	obj/kernel.asm	/^c0103f68:	c7 44 24 0c 59 cf 10 	movl   $0xc010cf59,0xc(%esp)$/;"	l
c0103f6f	obj/kernel.asm	/^c0103f6f:	c0 $/;"	l
c0103f70	obj/kernel.asm	/^c0103f70:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0103f77	obj/kernel.asm	/^c0103f77:	c0 $/;"	l
c0103f78	obj/kernel.asm	/^c0103f78:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
c0103f7f	obj/kernel.asm	/^c0103f7f:	00 $/;"	l
c0103f80	obj/kernel.asm	/^c0103f80:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0103f87	obj/kernel.asm	/^c0103f87:	e8 4e ce ff ff       	call   c0100dda <__panic>$/;"	l
c0103f8c	obj/kernel.asm	/^c0103f8c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103f8f	obj/kernel.asm	/^c0103f8f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103f92	obj/kernel.asm	/^c0103f92:	a3 7c 1e 1b c0       	mov    %eax,0xc01b1e7c$/;"	l
c0103f97	obj/kernel.asm	/^c0103f97:	89 15 80 1e 1b c0    	mov    %edx,0xc01b1e80$/;"	l
c0103f9d	obj/kernel.asm	/^c0103f9d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103fa0	obj/kernel.asm	/^c0103fa0:	a3 84 1e 1b c0       	mov    %eax,0xc01b1e84$/;"	l
c0103fa5	obj/kernel.asm	/^c0103fa5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103fac	obj/kernel.asm	/^c0103fac:	00 $/;"	l
c0103fad	obj/kernel.asm	/^c0103fad:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103fb0	obj/kernel.asm	/^c0103fb0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103fb3	obj/kernel.asm	/^c0103fb3:	e8 58 11 00 00       	call   c0105110 <free_pages>$/;"	l
c0103fb8	obj/kernel.asm	/^c0103fb8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103fbf	obj/kernel.asm	/^c0103fbf:	00 $/;"	l
c0103fc0	obj/kernel.asm	/^c0103fc0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103fc3	obj/kernel.asm	/^c0103fc3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103fc6	obj/kernel.asm	/^c0103fc6:	e8 45 11 00 00       	call   c0105110 <free_pages>$/;"	l
c0103fcb	obj/kernel.asm	/^c0103fcb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103fd2	obj/kernel.asm	/^c0103fd2:	00 $/;"	l
c0103fd3	obj/kernel.asm	/^c0103fd3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103fd6	obj/kernel.asm	/^c0103fd6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103fd9	obj/kernel.asm	/^c0103fd9:	e8 32 11 00 00       	call   c0105110 <free_pages>$/;"	l
c0103fde	obj/kernel.asm	/^c0103fde:	c9                   	leave  $/;"	l
c0103fdf	obj/kernel.asm	/^c0103fdf:	c3                   	ret    $/;"	l
c0103fe0	obj/kernel.asm	/^c0103fe0 <default_check>:$/;"	l
c0103fe0	obj/kernel.asm	/^c0103fe0:	55                   	push   %ebp$/;"	l
c0103fe1	obj/kernel.asm	/^c0103fe1:	89 e5                	mov    %esp,%ebp$/;"	l
c0103fe3	obj/kernel.asm	/^c0103fe3:	53                   	push   %ebx$/;"	l
c0103fe4	obj/kernel.asm	/^c0103fe4:	81 ec 94 00 00 00    	sub    $0x94,%esp$/;"	l
c0103fea	obj/kernel.asm	/^c0103fea:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0103ff1	obj/kernel.asm	/^c0103ff1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0103ff8	obj/kernel.asm	/^c0103ff8:	c7 45 ec 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x14(%ebp)$/;"	l
c0103fff	obj/kernel.asm	/^c0103fff:	eb 6b                	jmp    c010406c <default_check+0x8c>$/;"	l
c0104001	obj/kernel.asm	/^c0104001:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104004	obj/kernel.asm	/^c0104004:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0104007	obj/kernel.asm	/^c0104007:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010400a	obj/kernel.asm	/^c010400a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010400d	obj/kernel.asm	/^c010400d:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104010	obj/kernel.asm	/^c0104010:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c0104017	obj/kernel.asm	/^c0104017:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010401a	obj/kernel.asm	/^c010401a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010401d	obj/kernel.asm	/^c010401d:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0104020	obj/kernel.asm	/^c0104020:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0104023	obj/kernel.asm	/^c0104023:	19 c0                	sbb    %eax,%eax$/;"	l
c0104025	obj/kernel.asm	/^c0104025:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0104028	obj/kernel.asm	/^c0104028:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010402c	obj/kernel.asm	/^c010402c:	0f 95 c0             	setne  %al$/;"	l
c010402f	obj/kernel.asm	/^c010402f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0104032	obj/kernel.asm	/^c0104032:	85 c0                	test   %eax,%eax$/;"	l
c0104034	obj/kernel.asm	/^c0104034:	75 24                	jne    c010405a <default_check+0x7a>$/;"	l
c0104036	obj/kernel.asm	/^c0104036:	c7 44 24 0c 66 cf 10 	movl   $0xc010cf66,0xc(%esp)$/;"	l
c010403d	obj/kernel.asm	/^c010403d:	c0 $/;"	l
c010403e	obj/kernel.asm	/^c010403e:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0104045	obj/kernel.asm	/^c0104045:	c0 $/;"	l
c0104046	obj/kernel.asm	/^c0104046:	c7 44 24 04 e4 00 00 	movl   $0xe4,0x4(%esp)$/;"	l
c010404d	obj/kernel.asm	/^c010404d:	00 $/;"	l
c010404e	obj/kernel.asm	/^c010404e:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0104055	obj/kernel.asm	/^c0104055:	e8 80 cd ff ff       	call   c0100dda <__panic>$/;"	l
c010405a	obj/kernel.asm	/^c010405a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010405e	obj/kernel.asm	/^c010405e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104061	obj/kernel.asm	/^c0104061:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0104064	obj/kernel.asm	/^c0104064:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104067	obj/kernel.asm	/^c0104067:	01 d0                	add    %edx,%eax$/;"	l
c0104069	obj/kernel.asm	/^c0104069:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010406c	obj/kernel.asm	/^c010406c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010406f	obj/kernel.asm	/^c010406f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0104072	obj/kernel.asm	/^c0104072:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0104075	obj/kernel.asm	/^c0104075:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104078	obj/kernel.asm	/^c0104078:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010407b	obj/kernel.asm	/^c010407b:	81 7d ec 7c 1e 1b c0 	cmpl   $0xc01b1e7c,-0x14(%ebp)$/;"	l
c0104082	obj/kernel.asm	/^c0104082:	0f 85 79 ff ff ff    	jne    c0104001 <default_check+0x21>$/;"	l
c0104088	obj/kernel.asm	/^c0104088:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c010408b	obj/kernel.asm	/^c010408b:	e8 b2 10 00 00       	call   c0105142 <nr_free_pages>$/;"	l
c0104090	obj/kernel.asm	/^c0104090:	39 c3                	cmp    %eax,%ebx$/;"	l
c0104092	obj/kernel.asm	/^c0104092:	74 24                	je     c01040b8 <default_check+0xd8>$/;"	l
c0104094	obj/kernel.asm	/^c0104094:	c7 44 24 0c 76 cf 10 	movl   $0xc010cf76,0xc(%esp)$/;"	l
c010409b	obj/kernel.asm	/^c010409b:	c0 $/;"	l
c010409c	obj/kernel.asm	/^c010409c:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01040a3	obj/kernel.asm	/^c01040a3:	c0 $/;"	l
c01040a4	obj/kernel.asm	/^c01040a4:	c7 44 24 04 e7 00 00 	movl   $0xe7,0x4(%esp)$/;"	l
c01040ab	obj/kernel.asm	/^c01040ab:	00 $/;"	l
c01040ac	obj/kernel.asm	/^c01040ac:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01040b3	obj/kernel.asm	/^c01040b3:	e8 22 cd ff ff       	call   c0100dda <__panic>$/;"	l
c01040b8	obj/kernel.asm	/^c01040b8:	e8 e7 f9 ff ff       	call   c0103aa4 <basic_check>$/;"	l
c01040bd	obj/kernel.asm	/^c01040bd:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c01040c4	obj/kernel.asm	/^c01040c4:	e8 dc 0f 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c01040c9	obj/kernel.asm	/^c01040c9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01040cc	obj/kernel.asm	/^c01040cc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01040d0	obj/kernel.asm	/^c01040d0:	75 24                	jne    c01040f6 <default_check+0x116>$/;"	l
c01040d2	obj/kernel.asm	/^c01040d2:	c7 44 24 0c 8f cf 10 	movl   $0xc010cf8f,0xc(%esp)$/;"	l
c01040d9	obj/kernel.asm	/^c01040d9:	c0 $/;"	l
c01040da	obj/kernel.asm	/^c01040da:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01040e1	obj/kernel.asm	/^c01040e1:	c0 $/;"	l
c01040e2	obj/kernel.asm	/^c01040e2:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
c01040e9	obj/kernel.asm	/^c01040e9:	00 $/;"	l
c01040ea	obj/kernel.asm	/^c01040ea:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01040f1	obj/kernel.asm	/^c01040f1:	e8 e4 cc ff ff       	call   c0100dda <__panic>$/;"	l
c01040f6	obj/kernel.asm	/^c01040f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01040f9	obj/kernel.asm	/^c01040f9:	83 c0 04             	add    $0x4,%eax$/;"	l
c01040fc	obj/kernel.asm	/^c01040fc:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0104103	obj/kernel.asm	/^c0104103:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0104106	obj/kernel.asm	/^c0104106:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0104109	obj/kernel.asm	/^c0104109:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010410c	obj/kernel.asm	/^c010410c:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010410f	obj/kernel.asm	/^c010410f:	19 c0                	sbb    %eax,%eax$/;"	l
c0104111	obj/kernel.asm	/^c0104111:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0104114	obj/kernel.asm	/^c0104114:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c0104118	obj/kernel.asm	/^c0104118:	0f 95 c0             	setne  %al$/;"	l
c010411b	obj/kernel.asm	/^c010411b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010411e	obj/kernel.asm	/^c010411e:	85 c0                	test   %eax,%eax$/;"	l
c0104120	obj/kernel.asm	/^c0104120:	74 24                	je     c0104146 <default_check+0x166>$/;"	l
c0104122	obj/kernel.asm	/^c0104122:	c7 44 24 0c 9a cf 10 	movl   $0xc010cf9a,0xc(%esp)$/;"	l
c0104129	obj/kernel.asm	/^c0104129:	c0 $/;"	l
c010412a	obj/kernel.asm	/^c010412a:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0104131	obj/kernel.asm	/^c0104131:	c0 $/;"	l
c0104132	obj/kernel.asm	/^c0104132:	c7 44 24 04 ed 00 00 	movl   $0xed,0x4(%esp)$/;"	l
c0104139	obj/kernel.asm	/^c0104139:	00 $/;"	l
c010413a	obj/kernel.asm	/^c010413a:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0104141	obj/kernel.asm	/^c0104141:	e8 94 cc ff ff       	call   c0100dda <__panic>$/;"	l
c0104146	obj/kernel.asm	/^c0104146:	a1 7c 1e 1b c0       	mov    0xc01b1e7c,%eax$/;"	l
c010414b	obj/kernel.asm	/^c010414b:	8b 15 80 1e 1b c0    	mov    0xc01b1e80,%edx$/;"	l
c0104151	obj/kernel.asm	/^c0104151:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c0104154	obj/kernel.asm	/^c0104154:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c0104157	obj/kernel.asm	/^c0104157:	c7 45 b4 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x4c(%ebp)$/;"	l
c010415e	obj/kernel.asm	/^c010415e:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0104161	obj/kernel.asm	/^c0104161:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0104164	obj/kernel.asm	/^c0104164:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104167	obj/kernel.asm	/^c0104167:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010416a	obj/kernel.asm	/^c010416a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010416d	obj/kernel.asm	/^c010416d:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0104170	obj/kernel.asm	/^c0104170:	89 10                	mov    %edx,(%eax)$/;"	l
c0104172	obj/kernel.asm	/^c0104172:	c7 45 b0 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x50(%ebp)$/;"	l
c0104179	obj/kernel.asm	/^c0104179:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010417c	obj/kernel.asm	/^c010417c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010417f	obj/kernel.asm	/^c010417f:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c0104182	obj/kernel.asm	/^c0104182:	0f 94 c0             	sete   %al$/;"	l
c0104185	obj/kernel.asm	/^c0104185:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0104188	obj/kernel.asm	/^c0104188:	85 c0                	test   %eax,%eax$/;"	l
c010418a	obj/kernel.asm	/^c010418a:	75 24                	jne    c01041b0 <default_check+0x1d0>$/;"	l
c010418c	obj/kernel.asm	/^c010418c:	c7 44 24 0c ef ce 10 	movl   $0xc010ceef,0xc(%esp)$/;"	l
c0104193	obj/kernel.asm	/^c0104193:	c0 $/;"	l
c0104194	obj/kernel.asm	/^c0104194:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010419b	obj/kernel.asm	/^c010419b:	c0 $/;"	l
c010419c	obj/kernel.asm	/^c010419c:	c7 44 24 04 f1 00 00 	movl   $0xf1,0x4(%esp)$/;"	l
c01041a3	obj/kernel.asm	/^c01041a3:	00 $/;"	l
c01041a4	obj/kernel.asm	/^c01041a4:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01041ab	obj/kernel.asm	/^c01041ab:	e8 2a cc ff ff       	call   c0100dda <__panic>$/;"	l
c01041b0	obj/kernel.asm	/^c01041b0:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01041b7	obj/kernel.asm	/^c01041b7:	e8 e9 0e 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c01041bc	obj/kernel.asm	/^c01041bc:	85 c0                	test   %eax,%eax$/;"	l
c01041be	obj/kernel.asm	/^c01041be:	74 24                	je     c01041e4 <default_check+0x204>$/;"	l
c01041c0	obj/kernel.asm	/^c01041c0:	c7 44 24 0c 06 cf 10 	movl   $0xc010cf06,0xc(%esp)$/;"	l
c01041c7	obj/kernel.asm	/^c01041c7:	c0 $/;"	l
c01041c8	obj/kernel.asm	/^c01041c8:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01041cf	obj/kernel.asm	/^c01041cf:	c0 $/;"	l
c01041d0	obj/kernel.asm	/^c01041d0:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c01041d7	obj/kernel.asm	/^c01041d7:	00 $/;"	l
c01041d8	obj/kernel.asm	/^c01041d8:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01041df	obj/kernel.asm	/^c01041df:	e8 f6 cb ff ff       	call   c0100dda <__panic>$/;"	l
c01041e4	obj/kernel.asm	/^c01041e4:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c01041e9	obj/kernel.asm	/^c01041e9:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01041ec	obj/kernel.asm	/^c01041ec:	c7 05 84 1e 1b c0 00 	movl   $0x0,0xc01b1e84$/;"	l
c01041f3	obj/kernel.asm	/^c01041f3:	00 00 00 $/;"	l
c01041f6	obj/kernel.asm	/^c01041f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01041f9	obj/kernel.asm	/^c01041f9:	83 c0 40             	add    $0x40,%eax$/;"	l
c01041fc	obj/kernel.asm	/^c01041fc:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c0104203	obj/kernel.asm	/^c0104203:	00 $/;"	l
c0104204	obj/kernel.asm	/^c0104204:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104207	obj/kernel.asm	/^c0104207:	e8 04 0f 00 00       	call   c0105110 <free_pages>$/;"	l
c010420c	obj/kernel.asm	/^c010420c:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c0104213	obj/kernel.asm	/^c0104213:	e8 8d 0e 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c0104218	obj/kernel.asm	/^c0104218:	85 c0                	test   %eax,%eax$/;"	l
c010421a	obj/kernel.asm	/^c010421a:	74 24                	je     c0104240 <default_check+0x260>$/;"	l
c010421c	obj/kernel.asm	/^c010421c:	c7 44 24 0c ac cf 10 	movl   $0xc010cfac,0xc(%esp)$/;"	l
c0104223	obj/kernel.asm	/^c0104223:	c0 $/;"	l
c0104224	obj/kernel.asm	/^c0104224:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010422b	obj/kernel.asm	/^c010422b:	c0 $/;"	l
c010422c	obj/kernel.asm	/^c010422c:	c7 44 24 04 f8 00 00 	movl   $0xf8,0x4(%esp)$/;"	l
c0104233	obj/kernel.asm	/^c0104233:	00 $/;"	l
c0104234	obj/kernel.asm	/^c0104234:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010423b	obj/kernel.asm	/^c010423b:	e8 9a cb ff ff       	call   c0100dda <__panic>$/;"	l
c0104240	obj/kernel.asm	/^c0104240:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104243	obj/kernel.asm	/^c0104243:	83 c0 40             	add    $0x40,%eax$/;"	l
c0104246	obj/kernel.asm	/^c0104246:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104249	obj/kernel.asm	/^c0104249:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c0104250	obj/kernel.asm	/^c0104250:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0104253	obj/kernel.asm	/^c0104253:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0104256	obj/kernel.asm	/^c0104256:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c0104259	obj/kernel.asm	/^c0104259:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010425c	obj/kernel.asm	/^c010425c:	19 c0                	sbb    %eax,%eax$/;"	l
c010425e	obj/kernel.asm	/^c010425e:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0104261	obj/kernel.asm	/^c0104261:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c0104265	obj/kernel.asm	/^c0104265:	0f 95 c0             	setne  %al$/;"	l
c0104268	obj/kernel.asm	/^c0104268:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010426b	obj/kernel.asm	/^c010426b:	85 c0                	test   %eax,%eax$/;"	l
c010426d	obj/kernel.asm	/^c010426d:	74 0e                	je     c010427d <default_check+0x29d>$/;"	l
c010426f	obj/kernel.asm	/^c010426f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104272	obj/kernel.asm	/^c0104272:	83 c0 40             	add    $0x40,%eax$/;"	l
c0104275	obj/kernel.asm	/^c0104275:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104278	obj/kernel.asm	/^c0104278:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010427b	obj/kernel.asm	/^c010427b:	74 24                	je     c01042a1 <default_check+0x2c1>$/;"	l
c010427d	obj/kernel.asm	/^c010427d:	c7 44 24 0c c4 cf 10 	movl   $0xc010cfc4,0xc(%esp)$/;"	l
c0104284	obj/kernel.asm	/^c0104284:	c0 $/;"	l
c0104285	obj/kernel.asm	/^c0104285:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010428c	obj/kernel.asm	/^c010428c:	c0 $/;"	l
c010428d	obj/kernel.asm	/^c010428d:	c7 44 24 04 f9 00 00 	movl   $0xf9,0x4(%esp)$/;"	l
c0104294	obj/kernel.asm	/^c0104294:	00 $/;"	l
c0104295	obj/kernel.asm	/^c0104295:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010429c	obj/kernel.asm	/^c010429c:	e8 39 cb ff ff       	call   c0100dda <__panic>$/;"	l
c01042a1	obj/kernel.asm	/^c01042a1:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)$/;"	l
c01042a8	obj/kernel.asm	/^c01042a8:	e8 f8 0d 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c01042ad	obj/kernel.asm	/^c01042ad:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01042b0	obj/kernel.asm	/^c01042b0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01042b4	obj/kernel.asm	/^c01042b4:	75 24                	jne    c01042da <default_check+0x2fa>$/;"	l
c01042b6	obj/kernel.asm	/^c01042b6:	c7 44 24 0c f0 cf 10 	movl   $0xc010cff0,0xc(%esp)$/;"	l
c01042bd	obj/kernel.asm	/^c01042bd:	c0 $/;"	l
c01042be	obj/kernel.asm	/^c01042be:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01042c5	obj/kernel.asm	/^c01042c5:	c0 $/;"	l
c01042c6	obj/kernel.asm	/^c01042c6:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c01042cd	obj/kernel.asm	/^c01042cd:	00 $/;"	l
c01042ce	obj/kernel.asm	/^c01042ce:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01042d5	obj/kernel.asm	/^c01042d5:	e8 00 cb ff ff       	call   c0100dda <__panic>$/;"	l
c01042da	obj/kernel.asm	/^c01042da:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01042e1	obj/kernel.asm	/^c01042e1:	e8 bf 0d 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c01042e6	obj/kernel.asm	/^c01042e6:	85 c0                	test   %eax,%eax$/;"	l
c01042e8	obj/kernel.asm	/^c01042e8:	74 24                	je     c010430e <default_check+0x32e>$/;"	l
c01042ea	obj/kernel.asm	/^c01042ea:	c7 44 24 0c 06 cf 10 	movl   $0xc010cf06,0xc(%esp)$/;"	l
c01042f1	obj/kernel.asm	/^c01042f1:	c0 $/;"	l
c01042f2	obj/kernel.asm	/^c01042f2:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01042f9	obj/kernel.asm	/^c01042f9:	c0 $/;"	l
c01042fa	obj/kernel.asm	/^c01042fa:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c0104301	obj/kernel.asm	/^c0104301:	00 $/;"	l
c0104302	obj/kernel.asm	/^c0104302:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0104309	obj/kernel.asm	/^c0104309:	e8 cc ca ff ff       	call   c0100dda <__panic>$/;"	l
c010430e	obj/kernel.asm	/^c010430e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104311	obj/kernel.asm	/^c0104311:	83 c0 40             	add    $0x40,%eax$/;"	l
c0104314	obj/kernel.asm	/^c0104314:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0104317	obj/kernel.asm	/^c0104317:	74 24                	je     c010433d <default_check+0x35d>$/;"	l
c0104319	obj/kernel.asm	/^c0104319:	c7 44 24 0c 0e d0 10 	movl   $0xc010d00e,0xc(%esp)$/;"	l
c0104320	obj/kernel.asm	/^c0104320:	c0 $/;"	l
c0104321	obj/kernel.asm	/^c0104321:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c0104328	obj/kernel.asm	/^c0104328:	c0 $/;"	l
c0104329	obj/kernel.asm	/^c0104329:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c0104330	obj/kernel.asm	/^c0104330:	00 $/;"	l
c0104331	obj/kernel.asm	/^c0104331:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0104338	obj/kernel.asm	/^c0104338:	e8 9d ca ff ff       	call   c0100dda <__panic>$/;"	l
c010433d	obj/kernel.asm	/^c010433d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104340	obj/kernel.asm	/^c0104340:	83 c0 20             	add    $0x20,%eax$/;"	l
c0104343	obj/kernel.asm	/^c0104343:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0104346	obj/kernel.asm	/^c0104346:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010434d	obj/kernel.asm	/^c010434d:	00 $/;"	l
c010434e	obj/kernel.asm	/^c010434e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104351	obj/kernel.asm	/^c0104351:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104354	obj/kernel.asm	/^c0104354:	e8 b7 0d 00 00       	call   c0105110 <free_pages>$/;"	l
c0104359	obj/kernel.asm	/^c0104359:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c0104360	obj/kernel.asm	/^c0104360:	00 $/;"	l
c0104361	obj/kernel.asm	/^c0104361:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0104364	obj/kernel.asm	/^c0104364:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104367	obj/kernel.asm	/^c0104367:	e8 a4 0d 00 00       	call   c0105110 <free_pages>$/;"	l
c010436c	obj/kernel.asm	/^c010436c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010436f	obj/kernel.asm	/^c010436f:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104372	obj/kernel.asm	/^c0104372:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c0104379	obj/kernel.asm	/^c0104379:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c010437c	obj/kernel.asm	/^c010437c:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010437f	obj/kernel.asm	/^c010437f:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0104382	obj/kernel.asm	/^c0104382:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0104385	obj/kernel.asm	/^c0104385:	19 c0                	sbb    %eax,%eax$/;"	l
c0104387	obj/kernel.asm	/^c0104387:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010438a	obj/kernel.asm	/^c010438a:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c010438e	obj/kernel.asm	/^c010438e:	0f 95 c0             	setne  %al$/;"	l
c0104391	obj/kernel.asm	/^c0104391:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0104394	obj/kernel.asm	/^c0104394:	85 c0                	test   %eax,%eax$/;"	l
c0104396	obj/kernel.asm	/^c0104396:	74 0b                	je     c01043a3 <default_check+0x3c3>$/;"	l
c0104398	obj/kernel.asm	/^c0104398:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010439b	obj/kernel.asm	/^c010439b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010439e	obj/kernel.asm	/^c010439e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01043a1	obj/kernel.asm	/^c01043a1:	74 24                	je     c01043c7 <default_check+0x3e7>$/;"	l
c01043a3	obj/kernel.asm	/^c01043a3:	c7 44 24 0c 1c d0 10 	movl   $0xc010d01c,0xc(%esp)$/;"	l
c01043aa	obj/kernel.asm	/^c01043aa:	c0 $/;"	l
c01043ab	obj/kernel.asm	/^c01043ab:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01043b2	obj/kernel.asm	/^c01043b2:	c0 $/;"	l
c01043b3	obj/kernel.asm	/^c01043b3:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c01043ba	obj/kernel.asm	/^c01043ba:	00 $/;"	l
c01043bb	obj/kernel.asm	/^c01043bb:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01043c2	obj/kernel.asm	/^c01043c2:	e8 13 ca ff ff       	call   c0100dda <__panic>$/;"	l
c01043c7	obj/kernel.asm	/^c01043c7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01043ca	obj/kernel.asm	/^c01043ca:	83 c0 04             	add    $0x4,%eax$/;"	l
c01043cd	obj/kernel.asm	/^c01043cd:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c01043d4	obj/kernel.asm	/^c01043d4:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c01043d7	obj/kernel.asm	/^c01043d7:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c01043da	obj/kernel.asm	/^c01043da:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c01043dd	obj/kernel.asm	/^c01043dd:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01043e0	obj/kernel.asm	/^c01043e0:	19 c0                	sbb    %eax,%eax$/;"	l
c01043e2	obj/kernel.asm	/^c01043e2:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c01043e5	obj/kernel.asm	/^c01043e5:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c01043e9	obj/kernel.asm	/^c01043e9:	0f 95 c0             	setne  %al$/;"	l
c01043ec	obj/kernel.asm	/^c01043ec:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01043ef	obj/kernel.asm	/^c01043ef:	85 c0                	test   %eax,%eax$/;"	l
c01043f1	obj/kernel.asm	/^c01043f1:	74 0b                	je     c01043fe <default_check+0x41e>$/;"	l
c01043f3	obj/kernel.asm	/^c01043f3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01043f6	obj/kernel.asm	/^c01043f6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01043f9	obj/kernel.asm	/^c01043f9:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01043fc	obj/kernel.asm	/^c01043fc:	74 24                	je     c0104422 <default_check+0x442>$/;"	l
c01043fe	obj/kernel.asm	/^c01043fe:	c7 44 24 0c 44 d0 10 	movl   $0xc010d044,0xc(%esp)$/;"	l
c0104405	obj/kernel.asm	/^c0104405:	c0 $/;"	l
c0104406	obj/kernel.asm	/^c0104406:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010440d	obj/kernel.asm	/^c010440d:	c0 $/;"	l
c010440e	obj/kernel.asm	/^c010440e:	c7 44 24 04 02 01 00 	movl   $0x102,0x4(%esp)$/;"	l
c0104415	obj/kernel.asm	/^c0104415:	00 $/;"	l
c0104416	obj/kernel.asm	/^c0104416:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010441d	obj/kernel.asm	/^c010441d:	e8 b8 c9 ff ff       	call   c0100dda <__panic>$/;"	l
c0104422	obj/kernel.asm	/^c0104422:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104429	obj/kernel.asm	/^c0104429:	e8 77 0c 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c010442e	obj/kernel.asm	/^c010442e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104431	obj/kernel.asm	/^c0104431:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0104434	obj/kernel.asm	/^c0104434:	83 e8 20             	sub    $0x20,%eax$/;"	l
c0104437	obj/kernel.asm	/^c0104437:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010443a	obj/kernel.asm	/^c010443a:	74 24                	je     c0104460 <default_check+0x480>$/;"	l
c010443c	obj/kernel.asm	/^c010443c:	c7 44 24 0c 6a d0 10 	movl   $0xc010d06a,0xc(%esp)$/;"	l
c0104443	obj/kernel.asm	/^c0104443:	c0 $/;"	l
c0104444	obj/kernel.asm	/^c0104444:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010444b	obj/kernel.asm	/^c010444b:	c0 $/;"	l
c010444c	obj/kernel.asm	/^c010444c:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)$/;"	l
c0104453	obj/kernel.asm	/^c0104453:	00 $/;"	l
c0104454	obj/kernel.asm	/^c0104454:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010445b	obj/kernel.asm	/^c010445b:	e8 7a c9 ff ff       	call   c0100dda <__panic>$/;"	l
c0104460	obj/kernel.asm	/^c0104460:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0104467	obj/kernel.asm	/^c0104467:	00 $/;"	l
c0104468	obj/kernel.asm	/^c0104468:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010446b	obj/kernel.asm	/^c010446b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010446e	obj/kernel.asm	/^c010446e:	e8 9d 0c 00 00       	call   c0105110 <free_pages>$/;"	l
c0104473	obj/kernel.asm	/^c0104473:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c010447a	obj/kernel.asm	/^c010447a:	e8 26 0c 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c010447f	obj/kernel.asm	/^c010447f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104482	obj/kernel.asm	/^c0104482:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0104485	obj/kernel.asm	/^c0104485:	83 c0 20             	add    $0x20,%eax$/;"	l
c0104488	obj/kernel.asm	/^c0104488:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010448b	obj/kernel.asm	/^c010448b:	74 24                	je     c01044b1 <default_check+0x4d1>$/;"	l
c010448d	obj/kernel.asm	/^c010448d:	c7 44 24 0c 88 d0 10 	movl   $0xc010d088,0xc(%esp)$/;"	l
c0104494	obj/kernel.asm	/^c0104494:	c0 $/;"	l
c0104495	obj/kernel.asm	/^c0104495:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010449c	obj/kernel.asm	/^c010449c:	c0 $/;"	l
c010449d	obj/kernel.asm	/^c010449d:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)$/;"	l
c01044a4	obj/kernel.asm	/^c01044a4:	00 $/;"	l
c01044a5	obj/kernel.asm	/^c01044a5:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c01044ac	obj/kernel.asm	/^c01044ac:	e8 29 c9 ff ff       	call   c0100dda <__panic>$/;"	l
c01044b1	obj/kernel.asm	/^c01044b1:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c01044b8	obj/kernel.asm	/^c01044b8:	00 $/;"	l
c01044b9	obj/kernel.asm	/^c01044b9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01044bc	obj/kernel.asm	/^c01044bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01044bf	obj/kernel.asm	/^c01044bf:	e8 4c 0c 00 00       	call   c0105110 <free_pages>$/;"	l
c01044c4	obj/kernel.asm	/^c01044c4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01044cb	obj/kernel.asm	/^c01044cb:	00 $/;"	l
c01044cc	obj/kernel.asm	/^c01044cc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01044cf	obj/kernel.asm	/^c01044cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01044d2	obj/kernel.asm	/^c01044d2:	e8 39 0c 00 00       	call   c0105110 <free_pages>$/;"	l
c01044d7	obj/kernel.asm	/^c01044d7:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c01044de	obj/kernel.asm	/^c01044de:	e8 c2 0b 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c01044e3	obj/kernel.asm	/^c01044e3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01044e6	obj/kernel.asm	/^c01044e6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01044ea	obj/kernel.asm	/^c01044ea:	75 24                	jne    c0104510 <default_check+0x530>$/;"	l
c01044ec	obj/kernel.asm	/^c01044ec:	c7 44 24 0c a8 d0 10 	movl   $0xc010d0a8,0xc(%esp)$/;"	l
c01044f3	obj/kernel.asm	/^c01044f3:	c0 $/;"	l
c01044f4	obj/kernel.asm	/^c01044f4:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01044fb	obj/kernel.asm	/^c01044fb:	c0 $/;"	l
c01044fc	obj/kernel.asm	/^c01044fc:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
c0104503	obj/kernel.asm	/^c0104503:	00 $/;"	l
c0104504	obj/kernel.asm	/^c0104504:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010450b	obj/kernel.asm	/^c010450b:	e8 ca c8 ff ff       	call   c0100dda <__panic>$/;"	l
c0104510	obj/kernel.asm	/^c0104510:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104517	obj/kernel.asm	/^c0104517:	e8 89 0b 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c010451c	obj/kernel.asm	/^c010451c:	85 c0                	test   %eax,%eax$/;"	l
c010451e	obj/kernel.asm	/^c010451e:	74 24                	je     c0104544 <default_check+0x564>$/;"	l
c0104520	obj/kernel.asm	/^c0104520:	c7 44 24 0c 06 cf 10 	movl   $0xc010cf06,0xc(%esp)$/;"	l
c0104527	obj/kernel.asm	/^c0104527:	c0 $/;"	l
c0104528	obj/kernel.asm	/^c0104528:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010452f	obj/kernel.asm	/^c010452f:	c0 $/;"	l
c0104530	obj/kernel.asm	/^c0104530:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
c0104537	obj/kernel.asm	/^c0104537:	00 $/;"	l
c0104538	obj/kernel.asm	/^c0104538:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010453f	obj/kernel.asm	/^c010453f:	e8 96 c8 ff ff       	call   c0100dda <__panic>$/;"	l
c0104544	obj/kernel.asm	/^c0104544:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c0104549	obj/kernel.asm	/^c0104549:	85 c0                	test   %eax,%eax$/;"	l
c010454b	obj/kernel.asm	/^c010454b:	74 24                	je     c0104571 <default_check+0x591>$/;"	l
c010454d	obj/kernel.asm	/^c010454d:	c7 44 24 0c 59 cf 10 	movl   $0xc010cf59,0xc(%esp)$/;"	l
c0104554	obj/kernel.asm	/^c0104554:	c0 $/;"	l
c0104555	obj/kernel.asm	/^c0104555:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010455c	obj/kernel.asm	/^c010455c:	c0 $/;"	l
c010455d	obj/kernel.asm	/^c010455d:	c7 44 24 04 0e 01 00 	movl   $0x10e,0x4(%esp)$/;"	l
c0104564	obj/kernel.asm	/^c0104564:	00 $/;"	l
c0104565	obj/kernel.asm	/^c0104565:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010456c	obj/kernel.asm	/^c010456c:	e8 69 c8 ff ff       	call   c0100dda <__panic>$/;"	l
c0104571	obj/kernel.asm	/^c0104571:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0104574	obj/kernel.asm	/^c0104574:	a3 84 1e 1b c0       	mov    %eax,0xc01b1e84$/;"	l
c0104579	obj/kernel.asm	/^c0104579:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c010457c	obj/kernel.asm	/^c010457c:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c010457f	obj/kernel.asm	/^c010457f:	a3 7c 1e 1b c0       	mov    %eax,0xc01b1e7c$/;"	l
c0104584	obj/kernel.asm	/^c0104584:	89 15 80 1e 1b c0    	mov    %edx,0xc01b1e80$/;"	l
c010458a	obj/kernel.asm	/^c010458a:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c0104591	obj/kernel.asm	/^c0104591:	00 $/;"	l
c0104592	obj/kernel.asm	/^c0104592:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104595	obj/kernel.asm	/^c0104595:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104598	obj/kernel.asm	/^c0104598:	e8 73 0b 00 00       	call   c0105110 <free_pages>$/;"	l
c010459d	obj/kernel.asm	/^c010459d:	c7 45 ec 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x14(%ebp)$/;"	l
c01045a4	obj/kernel.asm	/^c01045a4:	eb 1d                	jmp    c01045c3 <default_check+0x5e3>$/;"	l
c01045a6	obj/kernel.asm	/^c01045a6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01045a9	obj/kernel.asm	/^c01045a9:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01045ac	obj/kernel.asm	/^c01045ac:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01045af	obj/kernel.asm	/^c01045af:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01045b3	obj/kernel.asm	/^c01045b3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01045b6	obj/kernel.asm	/^c01045b6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01045b9	obj/kernel.asm	/^c01045b9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01045bc	obj/kernel.asm	/^c01045bc:	29 c2                	sub    %eax,%edx$/;"	l
c01045be	obj/kernel.asm	/^c01045be:	89 d0                	mov    %edx,%eax$/;"	l
c01045c0	obj/kernel.asm	/^c01045c0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01045c3	obj/kernel.asm	/^c01045c3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01045c6	obj/kernel.asm	/^c01045c6:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c01045c9	obj/kernel.asm	/^c01045c9:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c01045cc	obj/kernel.asm	/^c01045cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01045cf	obj/kernel.asm	/^c01045cf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01045d2	obj/kernel.asm	/^c01045d2:	81 7d ec 7c 1e 1b c0 	cmpl   $0xc01b1e7c,-0x14(%ebp)$/;"	l
c01045d9	obj/kernel.asm	/^c01045d9:	75 cb                	jne    c01045a6 <default_check+0x5c6>$/;"	l
c01045db	obj/kernel.asm	/^c01045db:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01045df	obj/kernel.asm	/^c01045df:	74 24                	je     c0104605 <default_check+0x625>$/;"	l
c01045e1	obj/kernel.asm	/^c01045e1:	c7 44 24 0c c6 d0 10 	movl   $0xc010d0c6,0xc(%esp)$/;"	l
c01045e8	obj/kernel.asm	/^c01045e8:	c0 $/;"	l
c01045e9	obj/kernel.asm	/^c01045e9:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c01045f0	obj/kernel.asm	/^c01045f0:	c0 $/;"	l
c01045f1	obj/kernel.asm	/^c01045f1:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
c01045f8	obj/kernel.asm	/^c01045f8:	00 $/;"	l
c01045f9	obj/kernel.asm	/^c01045f9:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c0104600	obj/kernel.asm	/^c0104600:	e8 d5 c7 ff ff       	call   c0100dda <__panic>$/;"	l
c0104605	obj/kernel.asm	/^c0104605:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104609	obj/kernel.asm	/^c0104609:	74 24                	je     c010462f <default_check+0x64f>$/;"	l
c010460b	obj/kernel.asm	/^c010460b:	c7 44 24 0c d1 d0 10 	movl   $0xc010d0d1,0xc(%esp)$/;"	l
c0104612	obj/kernel.asm	/^c0104612:	c0 $/;"	l
c0104613	obj/kernel.asm	/^c0104613:	c7 44 24 08 96 cd 10 	movl   $0xc010cd96,0x8(%esp)$/;"	l
c010461a	obj/kernel.asm	/^c010461a:	c0 $/;"	l
c010461b	obj/kernel.asm	/^c010461b:	c7 44 24 04 1a 01 00 	movl   $0x11a,0x4(%esp)$/;"	l
c0104622	obj/kernel.asm	/^c0104622:	00 $/;"	l
c0104623	obj/kernel.asm	/^c0104623:	c7 04 24 ab cd 10 c0 	movl   $0xc010cdab,(%esp)$/;"	l
c010462a	obj/kernel.asm	/^c010462a:	e8 ab c7 ff ff       	call   c0100dda <__panic>$/;"	l
c010462f	obj/kernel.asm	/^c010462f:	81 c4 94 00 00 00    	add    $0x94,%esp$/;"	l
c0104635	obj/kernel.asm	/^c0104635:	5b                   	pop    %ebx$/;"	l
c0104636	obj/kernel.asm	/^c0104636:	5d                   	pop    %ebp$/;"	l
c0104637	obj/kernel.asm	/^c0104637:	c3                   	ret    $/;"	l
c0104638	obj/kernel.asm	/^c0104638 <__intr_save>:$/;"	l
c0104638	obj/kernel.asm	/^c0104638:	55                   	push   %ebp$/;"	l
c0104639	obj/kernel.asm	/^c0104639:	89 e5                	mov    %esp,%ebp$/;"	l
c010463b	obj/kernel.asm	/^c010463b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010463e	obj/kernel.asm	/^c010463e:	9c                   	pushf  $/;"	l
c010463f	obj/kernel.asm	/^c010463f:	58                   	pop    %eax$/;"	l
c0104640	obj/kernel.asm	/^c0104640:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104643	obj/kernel.asm	/^c0104643:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104646	obj/kernel.asm	/^c0104646:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010464b	obj/kernel.asm	/^c010464b:	85 c0                	test   %eax,%eax$/;"	l
c010464d	obj/kernel.asm	/^c010464d:	74 0c                	je     c010465b <__intr_save+0x23>$/;"	l
c010464f	obj/kernel.asm	/^c010464f:	e8 de d9 ff ff       	call   c0102032 <intr_disable>$/;"	l
c0104654	obj/kernel.asm	/^c0104654:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0104659	obj/kernel.asm	/^c0104659:	eb 05                	jmp    c0104660 <__intr_save+0x28>$/;"	l
c010465b	obj/kernel.asm	/^c010465b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104660	obj/kernel.asm	/^c0104660:	c9                   	leave  $/;"	l
c0104661	obj/kernel.asm	/^c0104661:	c3                   	ret    $/;"	l
c0104662	obj/kernel.asm	/^c0104662 <__intr_restore>:$/;"	l
c0104662	obj/kernel.asm	/^c0104662:	55                   	push   %ebp$/;"	l
c0104663	obj/kernel.asm	/^c0104663:	89 e5                	mov    %esp,%ebp$/;"	l
c0104665	obj/kernel.asm	/^c0104665:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104668	obj/kernel.asm	/^c0104668:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010466c	obj/kernel.asm	/^c010466c:	74 05                	je     c0104673 <__intr_restore+0x11>$/;"	l
c010466e	obj/kernel.asm	/^c010466e:	e8 b9 d9 ff ff       	call   c010202c <intr_enable>$/;"	l
c0104673	obj/kernel.asm	/^c0104673:	c9                   	leave  $/;"	l
c0104674	obj/kernel.asm	/^c0104674:	c3                   	ret    $/;"	l
c0104675	obj/kernel.asm	/^c0104675 <page2ppn>:$/;"	l
c0104675	obj/kernel.asm	/^c0104675:	55                   	push   %ebp$/;"	l
c0104676	obj/kernel.asm	/^c0104676:	89 e5                	mov    %esp,%ebp$/;"	l
c0104678	obj/kernel.asm	/^c0104678:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010467b	obj/kernel.asm	/^c010467b:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c0104680	obj/kernel.asm	/^c0104680:	29 c2                	sub    %eax,%edx$/;"	l
c0104682	obj/kernel.asm	/^c0104682:	89 d0                	mov    %edx,%eax$/;"	l
c0104684	obj/kernel.asm	/^c0104684:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0104687	obj/kernel.asm	/^c0104687:	5d                   	pop    %ebp$/;"	l
c0104688	obj/kernel.asm	/^c0104688:	c3                   	ret    $/;"	l
c0104689	obj/kernel.asm	/^c0104689 <page2pa>:$/;"	l
c0104689	obj/kernel.asm	/^c0104689:	55                   	push   %ebp$/;"	l
c010468a	obj/kernel.asm	/^c010468a:	89 e5                	mov    %esp,%ebp$/;"	l
c010468c	obj/kernel.asm	/^c010468c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010468f	obj/kernel.asm	/^c010468f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104692	obj/kernel.asm	/^c0104692:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104695	obj/kernel.asm	/^c0104695:	e8 db ff ff ff       	call   c0104675 <page2ppn>$/;"	l
c010469a	obj/kernel.asm	/^c010469a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010469d	obj/kernel.asm	/^c010469d:	c9                   	leave  $/;"	l
c010469e	obj/kernel.asm	/^c010469e:	c3                   	ret    $/;"	l
c010469f	obj/kernel.asm	/^c010469f <pa2page>:$/;"	l
c010469f	obj/kernel.asm	/^c010469f:	55                   	push   %ebp$/;"	l
c01046a0	obj/kernel.asm	/^c01046a0:	89 e5                	mov    %esp,%ebp$/;"	l
c01046a2	obj/kernel.asm	/^c01046a2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01046a5	obj/kernel.asm	/^c01046a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01046a8	obj/kernel.asm	/^c01046a8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01046ab	obj/kernel.asm	/^c01046ab:	89 c2                	mov    %eax,%edx$/;"	l
c01046ad	obj/kernel.asm	/^c01046ad:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c01046b2	obj/kernel.asm	/^c01046b2:	39 c2                	cmp    %eax,%edx$/;"	l
c01046b4	obj/kernel.asm	/^c01046b4:	72 1c                	jb     c01046d2 <pa2page+0x33>$/;"	l
c01046b6	obj/kernel.asm	/^c01046b6:	c7 44 24 08 0c d1 10 	movl   $0xc010d10c,0x8(%esp)$/;"	l
c01046bd	obj/kernel.asm	/^c01046bd:	c0 $/;"	l
c01046be	obj/kernel.asm	/^c01046be:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c01046c5	obj/kernel.asm	/^c01046c5:	00 $/;"	l
c01046c6	obj/kernel.asm	/^c01046c6:	c7 04 24 2b d1 10 c0 	movl   $0xc010d12b,(%esp)$/;"	l
c01046cd	obj/kernel.asm	/^c01046cd:	e8 08 c7 ff ff       	call   c0100dda <__panic>$/;"	l
c01046d2	obj/kernel.asm	/^c01046d2:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c01046d7	obj/kernel.asm	/^c01046d7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01046da	obj/kernel.asm	/^c01046da:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01046dd	obj/kernel.asm	/^c01046dd:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01046e0	obj/kernel.asm	/^c01046e0:	01 d0                	add    %edx,%eax$/;"	l
c01046e2	obj/kernel.asm	/^c01046e2:	c9                   	leave  $/;"	l
c01046e3	obj/kernel.asm	/^c01046e3:	c3                   	ret    $/;"	l
c01046e4	obj/kernel.asm	/^c01046e4 <page2kva>:$/;"	l
c01046e4	obj/kernel.asm	/^c01046e4:	55                   	push   %ebp$/;"	l
c01046e5	obj/kernel.asm	/^c01046e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01046e7	obj/kernel.asm	/^c01046e7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01046ea	obj/kernel.asm	/^c01046ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01046ed	obj/kernel.asm	/^c01046ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01046f0	obj/kernel.asm	/^c01046f0:	e8 94 ff ff ff       	call   c0104689 <page2pa>$/;"	l
c01046f5	obj/kernel.asm	/^c01046f5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046f8	obj/kernel.asm	/^c01046f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046fb	obj/kernel.asm	/^c01046fb:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01046fe	obj/kernel.asm	/^c01046fe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104701	obj/kernel.asm	/^c0104701:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0104706	obj/kernel.asm	/^c0104706:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0104709	obj/kernel.asm	/^c0104709:	72 23                	jb     c010472e <page2kva+0x4a>$/;"	l
c010470b	obj/kernel.asm	/^c010470b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010470e	obj/kernel.asm	/^c010470e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104712	obj/kernel.asm	/^c0104712:	c7 44 24 08 3c d1 10 	movl   $0xc010d13c,0x8(%esp)$/;"	l
c0104719	obj/kernel.asm	/^c0104719:	c0 $/;"	l
c010471a	obj/kernel.asm	/^c010471a:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0104721	obj/kernel.asm	/^c0104721:	00 $/;"	l
c0104722	obj/kernel.asm	/^c0104722:	c7 04 24 2b d1 10 c0 	movl   $0xc010d12b,(%esp)$/;"	l
c0104729	obj/kernel.asm	/^c0104729:	e8 ac c6 ff ff       	call   c0100dda <__panic>$/;"	l
c010472e	obj/kernel.asm	/^c010472e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104731	obj/kernel.asm	/^c0104731:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104736	obj/kernel.asm	/^c0104736:	c9                   	leave  $/;"	l
c0104737	obj/kernel.asm	/^c0104737:	c3                   	ret    $/;"	l
c0104738	obj/kernel.asm	/^c0104738 <kva2page>:$/;"	l
c0104738	obj/kernel.asm	/^c0104738:	55                   	push   %ebp$/;"	l
c0104739	obj/kernel.asm	/^c0104739:	89 e5                	mov    %esp,%ebp$/;"	l
c010473b	obj/kernel.asm	/^c010473b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010473e	obj/kernel.asm	/^c010473e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104741	obj/kernel.asm	/^c0104741:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104744	obj/kernel.asm	/^c0104744:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010474b	obj/kernel.asm	/^c010474b:	77 23                	ja     c0104770 <kva2page+0x38>$/;"	l
c010474d	obj/kernel.asm	/^c010474d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104750	obj/kernel.asm	/^c0104750:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104754	obj/kernel.asm	/^c0104754:	c7 44 24 08 60 d1 10 	movl   $0xc010d160,0x8(%esp)$/;"	l
c010475b	obj/kernel.asm	/^c010475b:	c0 $/;"	l
c010475c	obj/kernel.asm	/^c010475c:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0104763	obj/kernel.asm	/^c0104763:	00 $/;"	l
c0104764	obj/kernel.asm	/^c0104764:	c7 04 24 2b d1 10 c0 	movl   $0xc010d12b,(%esp)$/;"	l
c010476b	obj/kernel.asm	/^c010476b:	e8 6a c6 ff ff       	call   c0100dda <__panic>$/;"	l
c0104770	obj/kernel.asm	/^c0104770:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104773	obj/kernel.asm	/^c0104773:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0104778	obj/kernel.asm	/^c0104778:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010477b	obj/kernel.asm	/^c010477b:	e8 1f ff ff ff       	call   c010469f <pa2page>$/;"	l
c0104780	obj/kernel.asm	/^c0104780:	c9                   	leave  $/;"	l
c0104781	obj/kernel.asm	/^c0104781:	c3                   	ret    $/;"	l
c0104782	obj/kernel.asm	/^c0104782 <__slob_get_free_pages>:$/;"	l
c0104782	obj/kernel.asm	/^c0104782:	55                   	push   %ebp$/;"	l
c0104783	obj/kernel.asm	/^c0104783:	89 e5                	mov    %esp,%ebp$/;"	l
c0104785	obj/kernel.asm	/^c0104785:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104788	obj/kernel.asm	/^c0104788:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010478b	obj/kernel.asm	/^c010478b:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0104790	obj/kernel.asm	/^c0104790:	89 c1                	mov    %eax,%ecx$/;"	l
c0104792	obj/kernel.asm	/^c0104792:	d3 e2                	shl    %cl,%edx$/;"	d
c0104794	obj/kernel.asm	/^c0104794:	89 d0                	mov    %edx,%eax$/;"	l
c0104796	obj/kernel.asm	/^c0104796:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104799	obj/kernel.asm	/^c0104799:	e8 07 09 00 00       	call   c01050a5 <alloc_pages>$/;"	l
c010479e	obj/kernel.asm	/^c010479e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01047a1	obj/kernel.asm	/^c01047a1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01047a5	obj/kernel.asm	/^c01047a5:	75 07                	jne    c01047ae <__slob_get_free_pages+0x2c>$/;"	l
c01047a7	obj/kernel.asm	/^c01047a7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01047ac	obj/kernel.asm	/^c01047ac:	eb 0b                	jmp    c01047b9 <__slob_get_free_pages+0x37>$/;"	l
c01047ae	obj/kernel.asm	/^c01047ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01047b1	obj/kernel.asm	/^c01047b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01047b4	obj/kernel.asm	/^c01047b4:	e8 2b ff ff ff       	call   c01046e4 <page2kva>$/;"	l
c01047b9	obj/kernel.asm	/^c01047b9:	c9                   	leave  $/;"	l
c01047ba	obj/kernel.asm	/^c01047ba:	c3                   	ret    $/;"	l
c01047bb	obj/kernel.asm	/^c01047bb <__slob_free_pages>:$/;"	l
c01047bb	obj/kernel.asm	/^c01047bb:	55                   	push   %ebp$/;"	l
c01047bc	obj/kernel.asm	/^c01047bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01047be	obj/kernel.asm	/^c01047be:	53                   	push   %ebx$/;"	l
c01047bf	obj/kernel.asm	/^c01047bf:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01047c2	obj/kernel.asm	/^c01047c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01047c5	obj/kernel.asm	/^c01047c5:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01047ca	obj/kernel.asm	/^c01047ca:	89 c1                	mov    %eax,%ecx$/;"	l
c01047cc	obj/kernel.asm	/^c01047cc:	d3 e2                	shl    %cl,%edx$/;"	d
c01047ce	obj/kernel.asm	/^c01047ce:	89 d0                	mov    %edx,%eax$/;"	l
c01047d0	obj/kernel.asm	/^c01047d0:	89 c3                	mov    %eax,%ebx$/;"	l
c01047d2	obj/kernel.asm	/^c01047d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01047d5	obj/kernel.asm	/^c01047d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01047d8	obj/kernel.asm	/^c01047d8:	e8 5b ff ff ff       	call   c0104738 <kva2page>$/;"	l
c01047dd	obj/kernel.asm	/^c01047dd:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c01047e1	obj/kernel.asm	/^c01047e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01047e4	obj/kernel.asm	/^c01047e4:	e8 27 09 00 00       	call   c0105110 <free_pages>$/;"	l
c01047e9	obj/kernel.asm	/^c01047e9:	83 c4 14             	add    $0x14,%esp$/;"	l
c01047ec	obj/kernel.asm	/^c01047ec:	5b                   	pop    %ebx$/;"	l
c01047ed	obj/kernel.asm	/^c01047ed:	5d                   	pop    %ebp$/;"	l
c01047ee	obj/kernel.asm	/^c01047ee:	c3                   	ret    $/;"	l
c01047ef	obj/kernel.asm	/^c01047ef <slob_alloc>:$/;"	l
c01047ef	obj/kernel.asm	/^c01047ef:	55                   	push   %ebp$/;"	l
c01047f0	obj/kernel.asm	/^c01047f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01047f2	obj/kernel.asm	/^c01047f2:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01047f5	obj/kernel.asm	/^c01047f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01047f8	obj/kernel.asm	/^c01047f8:	83 c0 08             	add    $0x8,%eax$/;"	l
c01047fb	obj/kernel.asm	/^c01047fb:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0104800	obj/kernel.asm	/^c0104800:	76 24                	jbe    c0104826 <slob_alloc+0x37>$/;"	l
c0104802	obj/kernel.asm	/^c0104802:	c7 44 24 0c 84 d1 10 	movl   $0xc010d184,0xc(%esp)$/;"	l
c0104809	obj/kernel.asm	/^c0104809:	c0 $/;"	l
c010480a	obj/kernel.asm	/^c010480a:	c7 44 24 08 a3 d1 10 	movl   $0xc010d1a3,0x8(%esp)$/;"	l
c0104811	obj/kernel.asm	/^c0104811:	c0 $/;"	l
c0104812	obj/kernel.asm	/^c0104812:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0104819	obj/kernel.asm	/^c0104819:	00 $/;"	l
c010481a	obj/kernel.asm	/^c010481a:	c7 04 24 b8 d1 10 c0 	movl   $0xc010d1b8,(%esp)$/;"	l
c0104821	obj/kernel.asm	/^c0104821:	e8 b4 c5 ff ff       	call   c0100dda <__panic>$/;"	l
c0104826	obj/kernel.asm	/^c0104826:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010482d	obj/kernel.asm	/^c010482d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0104834	obj/kernel.asm	/^c0104834:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104837	obj/kernel.asm	/^c0104837:	83 c0 07             	add    $0x7,%eax$/;"	l
c010483a	obj/kernel.asm	/^c010483a:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010483d	obj/kernel.asm	/^c010483d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104840	obj/kernel.asm	/^c0104840:	e8 f3 fd ff ff       	call   c0104638 <__intr_save>$/;"	l
c0104845	obj/kernel.asm	/^c0104845:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104848	obj/kernel.asm	/^c0104848:	a1 08 da 12 c0       	mov    0xc012da08,%eax$/;"	l
c010484d	obj/kernel.asm	/^c010484d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104850	obj/kernel.asm	/^c0104850:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104853	obj/kernel.asm	/^c0104853:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104856	obj/kernel.asm	/^c0104856:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104859	obj/kernel.asm	/^c0104859:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010485d	obj/kernel.asm	/^c010485d:	74 25                	je     c0104884 <slob_alloc+0x95>$/;"	l
c010485f	obj/kernel.asm	/^c010485f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104862	obj/kernel.asm	/^c0104862:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104865	obj/kernel.asm	/^c0104865:	01 d0                	add    %edx,%eax$/;"	l
c0104867	obj/kernel.asm	/^c0104867:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010486a	obj/kernel.asm	/^c010486a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010486d	obj/kernel.asm	/^c010486d:	f7 d8                	neg    %eax$/;"	l
c010486f	obj/kernel.asm	/^c010486f:	21 d0                	and    %edx,%eax$/;"	l
c0104871	obj/kernel.asm	/^c0104871:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104874	obj/kernel.asm	/^c0104874:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0104877	obj/kernel.asm	/^c0104877:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010487a	obj/kernel.asm	/^c010487a:	29 c2                	sub    %eax,%edx$/;"	l
c010487c	obj/kernel.asm	/^c010487c:	89 d0                	mov    %edx,%eax$/;"	l
c010487e	obj/kernel.asm	/^c010487e:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c0104881	obj/kernel.asm	/^c0104881:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104884	obj/kernel.asm	/^c0104884:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104887	obj/kernel.asm	/^c0104887:	8b 00                	mov    (%eax),%eax$/;"	l
c0104889	obj/kernel.asm	/^c0104889:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010488c	obj/kernel.asm	/^c010488c:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c010488f	obj/kernel.asm	/^c010488f:	01 ca                	add    %ecx,%edx$/;"	l
c0104891	obj/kernel.asm	/^c0104891:	39 d0                	cmp    %edx,%eax$/;"	l
c0104893	obj/kernel.asm	/^c0104893:	0f 8c aa 00 00 00    	jl     c0104943 <slob_alloc+0x154>$/;"	l
c0104899	obj/kernel.asm	/^c0104899:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010489d	obj/kernel.asm	/^c010489d:	74 38                	je     c01048d7 <slob_alloc+0xe8>$/;"	l
c010489f	obj/kernel.asm	/^c010489f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048a2	obj/kernel.asm	/^c01048a2:	8b 00                	mov    (%eax),%eax$/;"	l
c01048a4	obj/kernel.asm	/^c01048a4:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c01048a7	obj/kernel.asm	/^c01048a7:	89 c2                	mov    %eax,%edx$/;"	l
c01048a9	obj/kernel.asm	/^c01048a9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01048ac	obj/kernel.asm	/^c01048ac:	89 10                	mov    %edx,(%eax)$/;"	l
c01048ae	obj/kernel.asm	/^c01048ae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048b1	obj/kernel.asm	/^c01048b1:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01048b4	obj/kernel.asm	/^c01048b4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01048b7	obj/kernel.asm	/^c01048b7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01048ba	obj/kernel.asm	/^c01048ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048bd	obj/kernel.asm	/^c01048bd:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01048c0	obj/kernel.asm	/^c01048c0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01048c3	obj/kernel.asm	/^c01048c3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048c6	obj/kernel.asm	/^c01048c6:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01048c9	obj/kernel.asm	/^c01048c9:	89 10                	mov    %edx,(%eax)$/;"	l
c01048cb	obj/kernel.asm	/^c01048cb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048ce	obj/kernel.asm	/^c01048ce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01048d1	obj/kernel.asm	/^c01048d1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01048d4	obj/kernel.asm	/^c01048d4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01048d7	obj/kernel.asm	/^c01048d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048da	obj/kernel.asm	/^c01048da:	8b 00                	mov    (%eax),%eax$/;"	l
c01048dc	obj/kernel.asm	/^c01048dc:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01048df	obj/kernel.asm	/^c01048df:	75 0e                	jne    c01048ef <slob_alloc+0x100>$/;"	l
c01048e1	obj/kernel.asm	/^c01048e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048e4	obj/kernel.asm	/^c01048e4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01048e7	obj/kernel.asm	/^c01048e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01048ea	obj/kernel.asm	/^c01048ea:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01048ed	obj/kernel.asm	/^c01048ed:	eb 3c                	jmp    c010492b <slob_alloc+0x13c>$/;"	l
c01048ef	obj/kernel.asm	/^c01048ef:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01048f2	obj/kernel.asm	/^c01048f2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01048f9	obj/kernel.asm	/^c01048f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048fc	obj/kernel.asm	/^c01048fc:	01 c2                	add    %eax,%edx$/;"	l
c01048fe	obj/kernel.asm	/^c01048fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104901	obj/kernel.asm	/^c0104901:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104904	obj/kernel.asm	/^c0104904:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104907	obj/kernel.asm	/^c0104907:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010490a	obj/kernel.asm	/^c010490a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010490d	obj/kernel.asm	/^c010490d:	8b 12                	mov    (%edx),%edx$/;"	l
c010490f	obj/kernel.asm	/^c010490f:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c0104912	obj/kernel.asm	/^c0104912:	89 10                	mov    %edx,(%eax)$/;"	l
c0104914	obj/kernel.asm	/^c0104914:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104917	obj/kernel.asm	/^c0104917:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010491a	obj/kernel.asm	/^c010491a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010491d	obj/kernel.asm	/^c010491d:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c0104920	obj/kernel.asm	/^c0104920:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104923	obj/kernel.asm	/^c0104923:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104926	obj/kernel.asm	/^c0104926:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0104929	obj/kernel.asm	/^c0104929:	89 10                	mov    %edx,(%eax)$/;"	l
c010492b	obj/kernel.asm	/^c010492b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010492e	obj/kernel.asm	/^c010492e:	a3 08 da 12 c0       	mov    %eax,0xc012da08$/;"	l
c0104933	obj/kernel.asm	/^c0104933:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104936	obj/kernel.asm	/^c0104936:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104939	obj/kernel.asm	/^c0104939:	e8 24 fd ff ff       	call   c0104662 <__intr_restore>$/;"	l
c010493e	obj/kernel.asm	/^c010493e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104941	obj/kernel.asm	/^c0104941:	eb 7f                	jmp    c01049c2 <slob_alloc+0x1d3>$/;"	l
c0104943	obj/kernel.asm	/^c0104943:	a1 08 da 12 c0       	mov    0xc012da08,%eax$/;"	l
c0104948	obj/kernel.asm	/^c0104948:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010494b	obj/kernel.asm	/^c010494b:	75 61                	jne    c01049ae <slob_alloc+0x1bf>$/;"	l
c010494d	obj/kernel.asm	/^c010494d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104950	obj/kernel.asm	/^c0104950:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104953	obj/kernel.asm	/^c0104953:	e8 0a fd ff ff       	call   c0104662 <__intr_restore>$/;"	l
c0104958	obj/kernel.asm	/^c0104958:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c010495f	obj/kernel.asm	/^c010495f:	75 07                	jne    c0104968 <slob_alloc+0x179>$/;"	l
c0104961	obj/kernel.asm	/^c0104961:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104966	obj/kernel.asm	/^c0104966:	eb 5a                	jmp    c01049c2 <slob_alloc+0x1d3>$/;"	l
c0104968	obj/kernel.asm	/^c0104968:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010496f	obj/kernel.asm	/^c010496f:	00 $/;"	l
c0104970	obj/kernel.asm	/^c0104970:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104973	obj/kernel.asm	/^c0104973:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104976	obj/kernel.asm	/^c0104976:	e8 07 fe ff ff       	call   c0104782 <__slob_get_free_pages>$/;"	l
c010497b	obj/kernel.asm	/^c010497b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010497e	obj/kernel.asm	/^c010497e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104982	obj/kernel.asm	/^c0104982:	75 07                	jne    c010498b <slob_alloc+0x19c>$/;"	l
c0104984	obj/kernel.asm	/^c0104984:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104989	obj/kernel.asm	/^c0104989:	eb 37                	jmp    c01049c2 <slob_alloc+0x1d3>$/;"	l
c010498b	obj/kernel.asm	/^c010498b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0104992	obj/kernel.asm	/^c0104992:	00 $/;"	l
c0104993	obj/kernel.asm	/^c0104993:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104996	obj/kernel.asm	/^c0104996:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104999	obj/kernel.asm	/^c0104999:	e8 26 00 00 00       	call   c01049c4 <slob_free>$/;"	l
c010499e	obj/kernel.asm	/^c010499e:	e8 95 fc ff ff       	call   c0104638 <__intr_save>$/;"	l
c01049a3	obj/kernel.asm	/^c01049a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01049a6	obj/kernel.asm	/^c01049a6:	a1 08 da 12 c0       	mov    0xc012da08,%eax$/;"	l
c01049ab	obj/kernel.asm	/^c01049ab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01049ae	obj/kernel.asm	/^c01049ae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049b1	obj/kernel.asm	/^c01049b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01049b4	obj/kernel.asm	/^c01049b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049b7	obj/kernel.asm	/^c01049b7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049ba	obj/kernel.asm	/^c01049ba:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01049bd	obj/kernel.asm	/^c01049bd:	e9 97 fe ff ff       	jmp    c0104859 <slob_alloc+0x6a>$/;"	l
c01049c2	obj/kernel.asm	/^c01049c2:	c9                   	leave  $/;"	l
c01049c3	obj/kernel.asm	/^c01049c3:	c3                   	ret    $/;"	l
c01049c4	obj/kernel.asm	/^c01049c4 <slob_free>:$/;"	l
c01049c4	obj/kernel.asm	/^c01049c4:	55                   	push   %ebp$/;"	l
c01049c5	obj/kernel.asm	/^c01049c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01049c7	obj/kernel.asm	/^c01049c7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01049ca	obj/kernel.asm	/^c01049ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01049cd	obj/kernel.asm	/^c01049cd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01049d0	obj/kernel.asm	/^c01049d0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01049d4	obj/kernel.asm	/^c01049d4:	75 05                	jne    c01049db <slob_free+0x17>$/;"	l
c01049d6	obj/kernel.asm	/^c01049d6:	e9 ff 00 00 00       	jmp    c0104ada <slob_free+0x116>$/;"	l
c01049db	obj/kernel.asm	/^c01049db:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01049df	obj/kernel.asm	/^c01049df:	74 10                	je     c01049f1 <slob_free+0x2d>$/;"	l
c01049e1	obj/kernel.asm	/^c01049e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01049e4	obj/kernel.asm	/^c01049e4:	83 c0 07             	add    $0x7,%eax$/;"	l
c01049e7	obj/kernel.asm	/^c01049e7:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c01049ea	obj/kernel.asm	/^c01049ea:	89 c2                	mov    %eax,%edx$/;"	l
c01049ec	obj/kernel.asm	/^c01049ec:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049ef	obj/kernel.asm	/^c01049ef:	89 10                	mov    %edx,(%eax)$/;"	l
c01049f1	obj/kernel.asm	/^c01049f1:	e8 42 fc ff ff       	call   c0104638 <__intr_save>$/;"	l
c01049f6	obj/kernel.asm	/^c01049f6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01049f9	obj/kernel.asm	/^c01049f9:	a1 08 da 12 c0       	mov    0xc012da08,%eax$/;"	l
c01049fe	obj/kernel.asm	/^c01049fe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104a01	obj/kernel.asm	/^c0104a01:	eb 27                	jmp    c0104a2a <slob_free+0x66>$/;"	l
c0104a03	obj/kernel.asm	/^c0104a03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a06	obj/kernel.asm	/^c0104a06:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a09	obj/kernel.asm	/^c0104a09:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104a0c	obj/kernel.asm	/^c0104a0c:	77 13                	ja     c0104a21 <slob_free+0x5d>$/;"	l
c0104a0e	obj/kernel.asm	/^c0104a0e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a11	obj/kernel.asm	/^c0104a11:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104a14	obj/kernel.asm	/^c0104a14:	77 27                	ja     c0104a3d <slob_free+0x79>$/;"	l
c0104a16	obj/kernel.asm	/^c0104a16:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a19	obj/kernel.asm	/^c0104a19:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a1c	obj/kernel.asm	/^c0104a1c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104a1f	obj/kernel.asm	/^c0104a1f:	77 1c                	ja     c0104a3d <slob_free+0x79>$/;"	l
c0104a21	obj/kernel.asm	/^c0104a21:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a24	obj/kernel.asm	/^c0104a24:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a27	obj/kernel.asm	/^c0104a27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104a2a	obj/kernel.asm	/^c0104a2a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a2d	obj/kernel.asm	/^c0104a2d:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104a30	obj/kernel.asm	/^c0104a30:	76 d1                	jbe    c0104a03 <slob_free+0x3f>$/;"	l
c0104a32	obj/kernel.asm	/^c0104a32:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a35	obj/kernel.asm	/^c0104a35:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a38	obj/kernel.asm	/^c0104a38:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104a3b	obj/kernel.asm	/^c0104a3b:	76 c6                	jbe    c0104a03 <slob_free+0x3f>$/;"	l
c0104a3d	obj/kernel.asm	/^c0104a3d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a40	obj/kernel.asm	/^c0104a40:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a42	obj/kernel.asm	/^c0104a42:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0104a49	obj/kernel.asm	/^c0104a49:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a4c	obj/kernel.asm	/^c0104a4c:	01 c2                	add    %eax,%edx$/;"	l
c0104a4e	obj/kernel.asm	/^c0104a4e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a51	obj/kernel.asm	/^c0104a51:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a54	obj/kernel.asm	/^c0104a54:	39 c2                	cmp    %eax,%edx$/;"	l
c0104a56	obj/kernel.asm	/^c0104a56:	75 25                	jne    c0104a7d <slob_free+0xb9>$/;"	l
c0104a58	obj/kernel.asm	/^c0104a58:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a5b	obj/kernel.asm	/^c0104a5b:	8b 10                	mov    (%eax),%edx$/;"	l
c0104a5d	obj/kernel.asm	/^c0104a5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a60	obj/kernel.asm	/^c0104a60:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a63	obj/kernel.asm	/^c0104a63:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a65	obj/kernel.asm	/^c0104a65:	01 c2                	add    %eax,%edx$/;"	l
c0104a67	obj/kernel.asm	/^c0104a67:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a6a	obj/kernel.asm	/^c0104a6a:	89 10                	mov    %edx,(%eax)$/;"	l
c0104a6c	obj/kernel.asm	/^c0104a6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a6f	obj/kernel.asm	/^c0104a6f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a72	obj/kernel.asm	/^c0104a72:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104a75	obj/kernel.asm	/^c0104a75:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a78	obj/kernel.asm	/^c0104a78:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104a7b	obj/kernel.asm	/^c0104a7b:	eb 0c                	jmp    c0104a89 <slob_free+0xc5>$/;"	l
c0104a7d	obj/kernel.asm	/^c0104a7d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a80	obj/kernel.asm	/^c0104a80:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104a83	obj/kernel.asm	/^c0104a83:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a86	obj/kernel.asm	/^c0104a86:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104a89	obj/kernel.asm	/^c0104a89:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a8c	obj/kernel.asm	/^c0104a8c:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a8e	obj/kernel.asm	/^c0104a8e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0104a95	obj/kernel.asm	/^c0104a95:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a98	obj/kernel.asm	/^c0104a98:	01 d0                	add    %edx,%eax$/;"	l
c0104a9a	obj/kernel.asm	/^c0104a9a:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104a9d	obj/kernel.asm	/^c0104a9d:	75 1f                	jne    c0104abe <slob_free+0xfa>$/;"	l
c0104a9f	obj/kernel.asm	/^c0104a9f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104aa2	obj/kernel.asm	/^c0104aa2:	8b 10                	mov    (%eax),%edx$/;"	l
c0104aa4	obj/kernel.asm	/^c0104aa4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104aa7	obj/kernel.asm	/^c0104aa7:	8b 00                	mov    (%eax),%eax$/;"	l
c0104aa9	obj/kernel.asm	/^c0104aa9:	01 c2                	add    %eax,%edx$/;"	l
c0104aab	obj/kernel.asm	/^c0104aab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104aae	obj/kernel.asm	/^c0104aae:	89 10                	mov    %edx,(%eax)$/;"	l
c0104ab0	obj/kernel.asm	/^c0104ab0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ab3	obj/kernel.asm	/^c0104ab3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104ab6	obj/kernel.asm	/^c0104ab6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ab9	obj/kernel.asm	/^c0104ab9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104abc	obj/kernel.asm	/^c0104abc:	eb 09                	jmp    c0104ac7 <slob_free+0x103>$/;"	l
c0104abe	obj/kernel.asm	/^c0104abe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ac1	obj/kernel.asm	/^c0104ac1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104ac4	obj/kernel.asm	/^c0104ac4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104ac7	obj/kernel.asm	/^c0104ac7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104aca	obj/kernel.asm	/^c0104aca:	a3 08 da 12 c0       	mov    %eax,0xc012da08$/;"	l
c0104acf	obj/kernel.asm	/^c0104acf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104ad2	obj/kernel.asm	/^c0104ad2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104ad5	obj/kernel.asm	/^c0104ad5:	e8 88 fb ff ff       	call   c0104662 <__intr_restore>$/;"	l
c0104ada	obj/kernel.asm	/^c0104ada:	c9                   	leave  $/;"	l
c0104adb	obj/kernel.asm	/^c0104adb:	c3                   	ret    $/;"	l
c0104adc	obj/kernel.asm	/^c0104adc <slob_init>:$/;"	l
c0104adc	obj/kernel.asm	/^c0104adc:	55                   	push   %ebp$/;"	l
c0104add	obj/kernel.asm	/^c0104add:	89 e5                	mov    %esp,%ebp$/;"	l
c0104adf	obj/kernel.asm	/^c0104adf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104ae2	obj/kernel.asm	/^c0104ae2:	c7 04 24 ca d1 10 c0 	movl   $0xc010d1ca,(%esp)$/;"	l
c0104ae9	obj/kernel.asm	/^c0104ae9:	e8 6a b8 ff ff       	call   c0100358 <cprintf>$/;"	l
c0104aee	obj/kernel.asm	/^c0104aee:	c9                   	leave  $/;"	l
c0104aef	obj/kernel.asm	/^c0104aef:	c3                   	ret    $/;"	l
c0104af0	obj/kernel.asm	/^c0104af0 <kmalloc_init>:$/;"	l
c0104af0	obj/kernel.asm	/^c0104af0:	55                   	push   %ebp$/;"	l
c0104af1	obj/kernel.asm	/^c0104af1:	89 e5                	mov    %esp,%ebp$/;"	l
c0104af3	obj/kernel.asm	/^c0104af3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104af6	obj/kernel.asm	/^c0104af6:	e8 e1 ff ff ff       	call   c0104adc <slob_init>$/;"	l
c0104afb	obj/kernel.asm	/^c0104afb:	c7 04 24 de d1 10 c0 	movl   $0xc010d1de,(%esp)$/;"	l
c0104b02	obj/kernel.asm	/^c0104b02:	e8 51 b8 ff ff       	call   c0100358 <cprintf>$/;"	l
c0104b07	obj/kernel.asm	/^c0104b07:	c9                   	leave  $/;"	l
c0104b08	obj/kernel.asm	/^c0104b08:	c3                   	ret    $/;"	l
c0104b09	obj/kernel.asm	/^c0104b09 <slob_allocated>:$/;"	l
c0104b09	obj/kernel.asm	/^c0104b09:	55                   	push   %ebp$/;"	l
c0104b0a	obj/kernel.asm	/^c0104b0a:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b0c	obj/kernel.asm	/^c0104b0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104b11	obj/kernel.asm	/^c0104b11:	5d                   	pop    %ebp$/;"	l
c0104b12	obj/kernel.asm	/^c0104b12:	c3                   	ret    $/;"	l
c0104b13	obj/kernel.asm	/^c0104b13 <kallocated>:$/;"	l
c0104b13	obj/kernel.asm	/^c0104b13:	55                   	push   %ebp$/;"	l
c0104b14	obj/kernel.asm	/^c0104b14:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b16	obj/kernel.asm	/^c0104b16:	e8 ee ff ff ff       	call   c0104b09 <slob_allocated>$/;"	l
c0104b1b	obj/kernel.asm	/^c0104b1b:	5d                   	pop    %ebp$/;"	l
c0104b1c	obj/kernel.asm	/^c0104b1c:	c3                   	ret    $/;"	l
c0104b1d	obj/kernel.asm	/^c0104b1d <find_order>:$/;"	l
c0104b1d	obj/kernel.asm	/^c0104b1d:	55                   	push   %ebp$/;"	l
c0104b1e	obj/kernel.asm	/^c0104b1e:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b20	obj/kernel.asm	/^c0104b20:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0104b23	obj/kernel.asm	/^c0104b23:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0104b2a	obj/kernel.asm	/^c0104b2a:	eb 07                	jmp    c0104b33 <find_order+0x16>$/;"	l
c0104b2c	obj/kernel.asm	/^c0104b2c:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0104b30	obj/kernel.asm	/^c0104b30:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c0104b33	obj/kernel.asm	/^c0104b33:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0104b3a	obj/kernel.asm	/^c0104b3a:	7f f0                	jg     c0104b2c <find_order+0xf>$/;"	l
c0104b3c	obj/kernel.asm	/^c0104b3c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0104b3f	obj/kernel.asm	/^c0104b3f:	c9                   	leave  $/;"	l
c0104b40	obj/kernel.asm	/^c0104b40:	c3                   	ret    $/;"	l
c0104b41	obj/kernel.asm	/^c0104b41 <__kmalloc>:$/;"	l
c0104b41	obj/kernel.asm	/^c0104b41:	55                   	push   %ebp$/;"	l
c0104b42	obj/kernel.asm	/^c0104b42:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b44	obj/kernel.asm	/^c0104b44:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104b47	obj/kernel.asm	/^c0104b47:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c0104b4e	obj/kernel.asm	/^c0104b4e:	77 38                	ja     c0104b88 <__kmalloc+0x47>$/;"	l
c0104b50	obj/kernel.asm	/^c0104b50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104b53	obj/kernel.asm	/^c0104b53:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c0104b56	obj/kernel.asm	/^c0104b56:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0104b5d	obj/kernel.asm	/^c0104b5d:	00 $/;"	l
c0104b5e	obj/kernel.asm	/^c0104b5e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104b61	obj/kernel.asm	/^c0104b61:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104b65	obj/kernel.asm	/^c0104b65:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0104b68	obj/kernel.asm	/^c0104b68:	e8 82 fc ff ff       	call   c01047ef <slob_alloc>$/;"	l
c0104b6d	obj/kernel.asm	/^c0104b6d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104b70	obj/kernel.asm	/^c0104b70:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104b74	obj/kernel.asm	/^c0104b74:	74 08                	je     c0104b7e <__kmalloc+0x3d>$/;"	l
c0104b76	obj/kernel.asm	/^c0104b76:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b79	obj/kernel.asm	/^c0104b79:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104b7c	obj/kernel.asm	/^c0104b7c:	eb 05                	jmp    c0104b83 <__kmalloc+0x42>$/;"	l
c0104b7e	obj/kernel.asm	/^c0104b7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104b83	obj/kernel.asm	/^c0104b83:	e9 a6 00 00 00       	jmp    c0104c2e <__kmalloc+0xed>$/;"	l
c0104b88	obj/kernel.asm	/^c0104b88:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0104b8f	obj/kernel.asm	/^c0104b8f:	00 $/;"	l
c0104b90	obj/kernel.asm	/^c0104b90:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104b93	obj/kernel.asm	/^c0104b93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104b97	obj/kernel.asm	/^c0104b97:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)$/;"	l
c0104b9e	obj/kernel.asm	/^c0104b9e:	e8 4c fc ff ff       	call   c01047ef <slob_alloc>$/;"	l
c0104ba3	obj/kernel.asm	/^c0104ba3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104ba6	obj/kernel.asm	/^c0104ba6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104baa	obj/kernel.asm	/^c0104baa:	75 07                	jne    c0104bb3 <__kmalloc+0x72>$/;"	l
c0104bac	obj/kernel.asm	/^c0104bac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104bb1	obj/kernel.asm	/^c0104bb1:	eb 7b                	jmp    c0104c2e <__kmalloc+0xed>$/;"	l
c0104bb3	obj/kernel.asm	/^c0104bb3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104bb6	obj/kernel.asm	/^c0104bb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104bb9	obj/kernel.asm	/^c0104bb9:	e8 5f ff ff ff       	call   c0104b1d <find_order>$/;"	l
c0104bbe	obj/kernel.asm	/^c0104bbe:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104bc1	obj/kernel.asm	/^c0104bc1:	89 02                	mov    %eax,(%edx)$/;"	l
c0104bc3	obj/kernel.asm	/^c0104bc3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104bc6	obj/kernel.asm	/^c0104bc6:	8b 00                	mov    (%eax),%eax$/;"	l
c0104bc8	obj/kernel.asm	/^c0104bc8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104bcc	obj/kernel.asm	/^c0104bcc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104bcf	obj/kernel.asm	/^c0104bcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104bd2	obj/kernel.asm	/^c0104bd2:	e8 ab fb ff ff       	call   c0104782 <__slob_get_free_pages>$/;"	l
c0104bd7	obj/kernel.asm	/^c0104bd7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104bda	obj/kernel.asm	/^c0104bda:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0104bdd	obj/kernel.asm	/^c0104bdd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104be0	obj/kernel.asm	/^c0104be0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104be3	obj/kernel.asm	/^c0104be3:	85 c0                	test   %eax,%eax$/;"	l
c0104be5	obj/kernel.asm	/^c0104be5:	74 2f                	je     c0104c16 <__kmalloc+0xd5>$/;"	l
c0104be7	obj/kernel.asm	/^c0104be7:	e8 4c fa ff ff       	call   c0104638 <__intr_save>$/;"	l
c0104bec	obj/kernel.asm	/^c0104bec:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104bef	obj/kernel.asm	/^c0104bef:	8b 15 64 fd 1a c0    	mov    0xc01afd64,%edx$/;"	l
c0104bf5	obj/kernel.asm	/^c0104bf5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104bf8	obj/kernel.asm	/^c0104bf8:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0104bfb	obj/kernel.asm	/^c0104bfb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104bfe	obj/kernel.asm	/^c0104bfe:	a3 64 fd 1a c0       	mov    %eax,0xc01afd64$/;"	l
c0104c03	obj/kernel.asm	/^c0104c03:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104c06	obj/kernel.asm	/^c0104c06:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c09	obj/kernel.asm	/^c0104c09:	e8 54 fa ff ff       	call   c0104662 <__intr_restore>$/;"	l
c0104c0e	obj/kernel.asm	/^c0104c0e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c11	obj/kernel.asm	/^c0104c11:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104c14	obj/kernel.asm	/^c0104c14:	eb 18                	jmp    c0104c2e <__kmalloc+0xed>$/;"	l
c0104c16	obj/kernel.asm	/^c0104c16:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0104c1d	obj/kernel.asm	/^c0104c1d:	00 $/;"	l
c0104c1e	obj/kernel.asm	/^c0104c1e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c21	obj/kernel.asm	/^c0104c21:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c24	obj/kernel.asm	/^c0104c24:	e8 9b fd ff ff       	call   c01049c4 <slob_free>$/;"	l
c0104c29	obj/kernel.asm	/^c0104c29:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104c2e	obj/kernel.asm	/^c0104c2e:	c9                   	leave  $/;"	l
c0104c2f	obj/kernel.asm	/^c0104c2f:	c3                   	ret    $/;"	l
c0104c30	obj/kernel.asm	/^c0104c30 <kmalloc>:$/;"	l
c0104c30	obj/kernel.asm	/^c0104c30:	55                   	push   %ebp$/;"	l
c0104c31	obj/kernel.asm	/^c0104c31:	89 e5                	mov    %esp,%ebp$/;"	l
c0104c33	obj/kernel.asm	/^c0104c33:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104c36	obj/kernel.asm	/^c0104c36:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104c3d	obj/kernel.asm	/^c0104c3d:	00 $/;"	l
c0104c3e	obj/kernel.asm	/^c0104c3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c41	obj/kernel.asm	/^c0104c41:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c44	obj/kernel.asm	/^c0104c44:	e8 f8 fe ff ff       	call   c0104b41 <__kmalloc>$/;"	l
c0104c49	obj/kernel.asm	/^c0104c49:	c9                   	leave  $/;"	l
c0104c4a	obj/kernel.asm	/^c0104c4a:	c3                   	ret    $/;"	l
c0104c4b	obj/kernel.asm	/^c0104c4b <kfree>:$/;"	l
c0104c4b	obj/kernel.asm	/^c0104c4b:	55                   	push   %ebp$/;"	l
c0104c4c	obj/kernel.asm	/^c0104c4c:	89 e5                	mov    %esp,%ebp$/;"	l
c0104c4e	obj/kernel.asm	/^c0104c4e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104c51	obj/kernel.asm	/^c0104c51:	c7 45 f0 64 fd 1a c0 	movl   $0xc01afd64,-0x10(%ebp)$/;"	l
c0104c58	obj/kernel.asm	/^c0104c58:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104c5c	obj/kernel.asm	/^c0104c5c:	75 05                	jne    c0104c63 <kfree+0x18>$/;"	l
c0104c5e	obj/kernel.asm	/^c0104c5e:	e9 a2 00 00 00       	jmp    c0104d05 <kfree+0xba>$/;"	l
c0104c63	obj/kernel.asm	/^c0104c63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c66	obj/kernel.asm	/^c0104c66:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104c6b	obj/kernel.asm	/^c0104c6b:	85 c0                	test   %eax,%eax$/;"	l
c0104c6d	obj/kernel.asm	/^c0104c6d:	75 7f                	jne    c0104cee <kfree+0xa3>$/;"	l
c0104c6f	obj/kernel.asm	/^c0104c6f:	e8 c4 f9 ff ff       	call   c0104638 <__intr_save>$/;"	l
c0104c74	obj/kernel.asm	/^c0104c74:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104c77	obj/kernel.asm	/^c0104c77:	a1 64 fd 1a c0       	mov    0xc01afd64,%eax$/;"	l
c0104c7c	obj/kernel.asm	/^c0104c7c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104c7f	obj/kernel.asm	/^c0104c7f:	eb 5c                	jmp    c0104cdd <kfree+0x92>$/;"	l
c0104c81	obj/kernel.asm	/^c0104c81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c84	obj/kernel.asm	/^c0104c84:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104c87	obj/kernel.asm	/^c0104c87:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0104c8a	obj/kernel.asm	/^c0104c8a:	75 3f                	jne    c0104ccb <kfree+0x80>$/;"	l
c0104c8c	obj/kernel.asm	/^c0104c8c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c8f	obj/kernel.asm	/^c0104c8f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0104c92	obj/kernel.asm	/^c0104c92:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c95	obj/kernel.asm	/^c0104c95:	89 10                	mov    %edx,(%eax)$/;"	l
c0104c97	obj/kernel.asm	/^c0104c97:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104c9a	obj/kernel.asm	/^c0104c9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c9d	obj/kernel.asm	/^c0104c9d:	e8 c0 f9 ff ff       	call   c0104662 <__intr_restore>$/;"	l
c0104ca2	obj/kernel.asm	/^c0104ca2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ca5	obj/kernel.asm	/^c0104ca5:	8b 10                	mov    (%eax),%edx$/;"	l
c0104ca7	obj/kernel.asm	/^c0104ca7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104caa	obj/kernel.asm	/^c0104caa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0104cae	obj/kernel.asm	/^c0104cae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104cb1	obj/kernel.asm	/^c0104cb1:	e8 05 fb ff ff       	call   c01047bb <__slob_free_pages>$/;"	l
c0104cb6	obj/kernel.asm	/^c0104cb6:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0104cbd	obj/kernel.asm	/^c0104cbd:	00 $/;"	l
c0104cbe	obj/kernel.asm	/^c0104cbe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cc1	obj/kernel.asm	/^c0104cc1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104cc4	obj/kernel.asm	/^c0104cc4:	e8 fb fc ff ff       	call   c01049c4 <slob_free>$/;"	l
c0104cc9	obj/kernel.asm	/^c0104cc9:	eb 3a                	jmp    c0104d05 <kfree+0xba>$/;"	l
c0104ccb	obj/kernel.asm	/^c0104ccb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cce	obj/kernel.asm	/^c0104cce:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104cd1	obj/kernel.asm	/^c0104cd1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104cd4	obj/kernel.asm	/^c0104cd4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cd7	obj/kernel.asm	/^c0104cd7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104cda	obj/kernel.asm	/^c0104cda:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104cdd	obj/kernel.asm	/^c0104cdd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104ce1	obj/kernel.asm	/^c0104ce1:	75 9e                	jne    c0104c81 <kfree+0x36>$/;"	l
c0104ce3	obj/kernel.asm	/^c0104ce3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104ce6	obj/kernel.asm	/^c0104ce6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104ce9	obj/kernel.asm	/^c0104ce9:	e8 74 f9 ff ff       	call   c0104662 <__intr_restore>$/;"	l
c0104cee	obj/kernel.asm	/^c0104cee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104cf1	obj/kernel.asm	/^c0104cf1:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0104cf4	obj/kernel.asm	/^c0104cf4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104cfb	obj/kernel.asm	/^c0104cfb:	00 $/;"	l
c0104cfc	obj/kernel.asm	/^c0104cfc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104cff	obj/kernel.asm	/^c0104cff:	e8 c0 fc ff ff       	call   c01049c4 <slob_free>$/;"	l
c0104d04	obj/kernel.asm	/^c0104d04:	90                   	nop$/;"	l
c0104d05	obj/kernel.asm	/^c0104d05:	c9                   	leave  $/;"	l
c0104d06	obj/kernel.asm	/^c0104d06:	c3                   	ret    $/;"	l
c0104d07	obj/kernel.asm	/^c0104d07 <ksize>:$/;"	l
c0104d07	obj/kernel.asm	/^c0104d07:	55                   	push   %ebp$/;"	l
c0104d08	obj/kernel.asm	/^c0104d08:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d0a	obj/kernel.asm	/^c0104d0a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104d0d	obj/kernel.asm	/^c0104d0d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104d11	obj/kernel.asm	/^c0104d11:	75 07                	jne    c0104d1a <ksize+0x13>$/;"	l
c0104d13	obj/kernel.asm	/^c0104d13:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104d18	obj/kernel.asm	/^c0104d18:	eb 6b                	jmp    c0104d85 <ksize+0x7e>$/;"	l
c0104d1a	obj/kernel.asm	/^c0104d1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d1d	obj/kernel.asm	/^c0104d1d:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104d22	obj/kernel.asm	/^c0104d22:	85 c0                	test   %eax,%eax$/;"	l
c0104d24	obj/kernel.asm	/^c0104d24:	75 54                	jne    c0104d7a <ksize+0x73>$/;"	l
c0104d26	obj/kernel.asm	/^c0104d26:	e8 0d f9 ff ff       	call   c0104638 <__intr_save>$/;"	l
c0104d2b	obj/kernel.asm	/^c0104d2b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104d2e	obj/kernel.asm	/^c0104d2e:	a1 64 fd 1a c0       	mov    0xc01afd64,%eax$/;"	l
c0104d33	obj/kernel.asm	/^c0104d33:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104d36	obj/kernel.asm	/^c0104d36:	eb 31                	jmp    c0104d69 <ksize+0x62>$/;"	l
c0104d38	obj/kernel.asm	/^c0104d38:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d3b	obj/kernel.asm	/^c0104d3b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104d3e	obj/kernel.asm	/^c0104d3e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0104d41	obj/kernel.asm	/^c0104d41:	75 1d                	jne    c0104d60 <ksize+0x59>$/;"	l
c0104d43	obj/kernel.asm	/^c0104d43:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d46	obj/kernel.asm	/^c0104d46:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d49	obj/kernel.asm	/^c0104d49:	e8 14 f9 ff ff       	call   c0104662 <__intr_restore>$/;"	l
c0104d4e	obj/kernel.asm	/^c0104d4e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d51	obj/kernel.asm	/^c0104d51:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d53	obj/kernel.asm	/^c0104d53:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c0104d58	obj/kernel.asm	/^c0104d58:	89 c1                	mov    %eax,%ecx$/;"	l
c0104d5a	obj/kernel.asm	/^c0104d5a:	d3 e2                	shl    %cl,%edx$/;"	d
c0104d5c	obj/kernel.asm	/^c0104d5c:	89 d0                	mov    %edx,%eax$/;"	l
c0104d5e	obj/kernel.asm	/^c0104d5e:	eb 25                	jmp    c0104d85 <ksize+0x7e>$/;"	l
c0104d60	obj/kernel.asm	/^c0104d60:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d63	obj/kernel.asm	/^c0104d63:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104d66	obj/kernel.asm	/^c0104d66:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104d69	obj/kernel.asm	/^c0104d69:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104d6d	obj/kernel.asm	/^c0104d6d:	75 c9                	jne    c0104d38 <ksize+0x31>$/;"	l
c0104d6f	obj/kernel.asm	/^c0104d6f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d72	obj/kernel.asm	/^c0104d72:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d75	obj/kernel.asm	/^c0104d75:	e8 e8 f8 ff ff       	call   c0104662 <__intr_restore>$/;"	l
c0104d7a	obj/kernel.asm	/^c0104d7a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d7d	obj/kernel.asm	/^c0104d7d:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0104d80	obj/kernel.asm	/^c0104d80:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d82	obj/kernel.asm	/^c0104d82:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0104d85	obj/kernel.asm	/^c0104d85:	c9                   	leave  $/;"	l
c0104d86	obj/kernel.asm	/^c0104d86:	c3                   	ret    $/;"	l
c0104d87	obj/kernel.asm	/^c0104d87 <page2ppn>:$/;"	l
c0104d87	obj/kernel.asm	/^c0104d87:	55                   	push   %ebp$/;"	l
c0104d88	obj/kernel.asm	/^c0104d88:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d8a	obj/kernel.asm	/^c0104d8a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104d8d	obj/kernel.asm	/^c0104d8d:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c0104d92	obj/kernel.asm	/^c0104d92:	29 c2                	sub    %eax,%edx$/;"	l
c0104d94	obj/kernel.asm	/^c0104d94:	89 d0                	mov    %edx,%eax$/;"	l
c0104d96	obj/kernel.asm	/^c0104d96:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0104d99	obj/kernel.asm	/^c0104d99:	5d                   	pop    %ebp$/;"	l
c0104d9a	obj/kernel.asm	/^c0104d9a:	c3                   	ret    $/;"	l
c0104d9b	obj/kernel.asm	/^c0104d9b <page2pa>:$/;"	l
c0104d9b	obj/kernel.asm	/^c0104d9b:	55                   	push   %ebp$/;"	l
c0104d9c	obj/kernel.asm	/^c0104d9c:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d9e	obj/kernel.asm	/^c0104d9e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104da1	obj/kernel.asm	/^c0104da1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104da4	obj/kernel.asm	/^c0104da4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104da7	obj/kernel.asm	/^c0104da7:	e8 db ff ff ff       	call   c0104d87 <page2ppn>$/;"	l
c0104dac	obj/kernel.asm	/^c0104dac:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0104daf	obj/kernel.asm	/^c0104daf:	c9                   	leave  $/;"	l
c0104db0	obj/kernel.asm	/^c0104db0:	c3                   	ret    $/;"	l
c0104db1	obj/kernel.asm	/^c0104db1 <pa2page>:$/;"	l
c0104db1	obj/kernel.asm	/^c0104db1:	55                   	push   %ebp$/;"	l
c0104db2	obj/kernel.asm	/^c0104db2:	89 e5                	mov    %esp,%ebp$/;"	l
c0104db4	obj/kernel.asm	/^c0104db4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104db7	obj/kernel.asm	/^c0104db7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104dba	obj/kernel.asm	/^c0104dba:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104dbd	obj/kernel.asm	/^c0104dbd:	89 c2                	mov    %eax,%edx$/;"	l
c0104dbf	obj/kernel.asm	/^c0104dbf:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0104dc4	obj/kernel.asm	/^c0104dc4:	39 c2                	cmp    %eax,%edx$/;"	l
c0104dc6	obj/kernel.asm	/^c0104dc6:	72 1c                	jb     c0104de4 <pa2page+0x33>$/;"	l
c0104dc8	obj/kernel.asm	/^c0104dc8:	c7 44 24 08 fc d1 10 	movl   $0xc010d1fc,0x8(%esp)$/;"	l
c0104dcf	obj/kernel.asm	/^c0104dcf:	c0 $/;"	l
c0104dd0	obj/kernel.asm	/^c0104dd0:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0104dd7	obj/kernel.asm	/^c0104dd7:	00 $/;"	l
c0104dd8	obj/kernel.asm	/^c0104dd8:	c7 04 24 1b d2 10 c0 	movl   $0xc010d21b,(%esp)$/;"	l
c0104ddf	obj/kernel.asm	/^c0104ddf:	e8 f6 bf ff ff       	call   c0100dda <__panic>$/;"	l
c0104de4	obj/kernel.asm	/^c0104de4:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c0104de9	obj/kernel.asm	/^c0104de9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104dec	obj/kernel.asm	/^c0104dec:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0104def	obj/kernel.asm	/^c0104def:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0104df2	obj/kernel.asm	/^c0104df2:	01 d0                	add    %edx,%eax$/;"	l
c0104df4	obj/kernel.asm	/^c0104df4:	c9                   	leave  $/;"	l
c0104df5	obj/kernel.asm	/^c0104df5:	c3                   	ret    $/;"	l
c0104df6	obj/kernel.asm	/^c0104df6 <page2kva>:$/;"	l
c0104df6	obj/kernel.asm	/^c0104df6:	55                   	push   %ebp$/;"	l
c0104df7	obj/kernel.asm	/^c0104df7:	89 e5                	mov    %esp,%ebp$/;"	l
c0104df9	obj/kernel.asm	/^c0104df9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104dfc	obj/kernel.asm	/^c0104dfc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104dff	obj/kernel.asm	/^c0104dff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e02	obj/kernel.asm	/^c0104e02:	e8 94 ff ff ff       	call   c0104d9b <page2pa>$/;"	l
c0104e07	obj/kernel.asm	/^c0104e07:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104e0a	obj/kernel.asm	/^c0104e0a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104e0d	obj/kernel.asm	/^c0104e0d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104e10	obj/kernel.asm	/^c0104e10:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104e13	obj/kernel.asm	/^c0104e13:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0104e18	obj/kernel.asm	/^c0104e18:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0104e1b	obj/kernel.asm	/^c0104e1b:	72 23                	jb     c0104e40 <page2kva+0x4a>$/;"	l
c0104e1d	obj/kernel.asm	/^c0104e1d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104e20	obj/kernel.asm	/^c0104e20:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104e24	obj/kernel.asm	/^c0104e24:	c7 44 24 08 2c d2 10 	movl   $0xc010d22c,0x8(%esp)$/;"	l
c0104e2b	obj/kernel.asm	/^c0104e2b:	c0 $/;"	l
c0104e2c	obj/kernel.asm	/^c0104e2c:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0104e33	obj/kernel.asm	/^c0104e33:	00 $/;"	l
c0104e34	obj/kernel.asm	/^c0104e34:	c7 04 24 1b d2 10 c0 	movl   $0xc010d21b,(%esp)$/;"	l
c0104e3b	obj/kernel.asm	/^c0104e3b:	e8 9a bf ff ff       	call   c0100dda <__panic>$/;"	l
c0104e40	obj/kernel.asm	/^c0104e40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104e43	obj/kernel.asm	/^c0104e43:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104e48	obj/kernel.asm	/^c0104e48:	c9                   	leave  $/;"	l
c0104e49	obj/kernel.asm	/^c0104e49:	c3                   	ret    $/;"	l
c0104e4a	obj/kernel.asm	/^c0104e4a <pte2page>:$/;"	l
c0104e4a	obj/kernel.asm	/^c0104e4a:	55                   	push   %ebp$/;"	l
c0104e4b	obj/kernel.asm	/^c0104e4b:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e4d	obj/kernel.asm	/^c0104e4d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104e50	obj/kernel.asm	/^c0104e50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e53	obj/kernel.asm	/^c0104e53:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104e56	obj/kernel.asm	/^c0104e56:	85 c0                	test   %eax,%eax$/;"	l
c0104e58	obj/kernel.asm	/^c0104e58:	75 1c                	jne    c0104e76 <pte2page+0x2c>$/;"	l
c0104e5a	obj/kernel.asm	/^c0104e5a:	c7 44 24 08 50 d2 10 	movl   $0xc010d250,0x8(%esp)$/;"	l
c0104e61	obj/kernel.asm	/^c0104e61:	c0 $/;"	l
c0104e62	obj/kernel.asm	/^c0104e62:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0104e69	obj/kernel.asm	/^c0104e69:	00 $/;"	l
c0104e6a	obj/kernel.asm	/^c0104e6a:	c7 04 24 1b d2 10 c0 	movl   $0xc010d21b,(%esp)$/;"	l
c0104e71	obj/kernel.asm	/^c0104e71:	e8 64 bf ff ff       	call   c0100dda <__panic>$/;"	l
c0104e76	obj/kernel.asm	/^c0104e76:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e79	obj/kernel.asm	/^c0104e79:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104e7e	obj/kernel.asm	/^c0104e7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e81	obj/kernel.asm	/^c0104e81:	e8 2b ff ff ff       	call   c0104db1 <pa2page>$/;"	l
c0104e86	obj/kernel.asm	/^c0104e86:	c9                   	leave  $/;"	l
c0104e87	obj/kernel.asm	/^c0104e87:	c3                   	ret    $/;"	l
c0104e88	obj/kernel.asm	/^c0104e88 <pde2page>:$/;"	l
c0104e88	obj/kernel.asm	/^c0104e88:	55                   	push   %ebp$/;"	l
c0104e89	obj/kernel.asm	/^c0104e89:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e8b	obj/kernel.asm	/^c0104e8b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104e8e	obj/kernel.asm	/^c0104e8e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e91	obj/kernel.asm	/^c0104e91:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104e96	obj/kernel.asm	/^c0104e96:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e99	obj/kernel.asm	/^c0104e99:	e8 13 ff ff ff       	call   c0104db1 <pa2page>$/;"	l
c0104e9e	obj/kernel.asm	/^c0104e9e:	c9                   	leave  $/;"	l
c0104e9f	obj/kernel.asm	/^c0104e9f:	c3                   	ret    $/;"	l
c0104ea0	obj/kernel.asm	/^c0104ea0 <page_ref>:$/;"	l
c0104ea0	obj/kernel.asm	/^c0104ea0:	55                   	push   %ebp$/;"	l
c0104ea1	obj/kernel.asm	/^c0104ea1:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ea3	obj/kernel.asm	/^c0104ea3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ea6	obj/kernel.asm	/^c0104ea6:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ea8	obj/kernel.asm	/^c0104ea8:	5d                   	pop    %ebp$/;"	l
c0104ea9	obj/kernel.asm	/^c0104ea9:	c3                   	ret    $/;"	l
c0104eaa	obj/kernel.asm	/^c0104eaa <set_page_ref>:$/;"	l
c0104eaa	obj/kernel.asm	/^c0104eaa:	55                   	push   %ebp$/;"	l
c0104eab	obj/kernel.asm	/^c0104eab:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ead	obj/kernel.asm	/^c0104ead:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104eb0	obj/kernel.asm	/^c0104eb0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104eb3	obj/kernel.asm	/^c0104eb3:	89 10                	mov    %edx,(%eax)$/;"	l
c0104eb5	obj/kernel.asm	/^c0104eb5:	5d                   	pop    %ebp$/;"	l
c0104eb6	obj/kernel.asm	/^c0104eb6:	c3                   	ret    $/;"	l
c0104eb7	obj/kernel.asm	/^c0104eb7 <page_ref_inc>:$/;"	l
c0104eb7	obj/kernel.asm	/^c0104eb7:	55                   	push   %ebp$/;"	l
c0104eb8	obj/kernel.asm	/^c0104eb8:	89 e5                	mov    %esp,%ebp$/;"	l
c0104eba	obj/kernel.asm	/^c0104eba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ebd	obj/kernel.asm	/^c0104ebd:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ebf	obj/kernel.asm	/^c0104ebf:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0104ec2	obj/kernel.asm	/^c0104ec2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ec5	obj/kernel.asm	/^c0104ec5:	89 10                	mov    %edx,(%eax)$/;"	l
c0104ec7	obj/kernel.asm	/^c0104ec7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104eca	obj/kernel.asm	/^c0104eca:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ecc	obj/kernel.asm	/^c0104ecc:	5d                   	pop    %ebp$/;"	l
c0104ecd	obj/kernel.asm	/^c0104ecd:	c3                   	ret    $/;"	l
c0104ece	obj/kernel.asm	/^c0104ece <page_ref_dec>:$/;"	l
c0104ece	obj/kernel.asm	/^c0104ece:	55                   	push   %ebp$/;"	l
c0104ecf	obj/kernel.asm	/^c0104ecf:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ed1	obj/kernel.asm	/^c0104ed1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ed4	obj/kernel.asm	/^c0104ed4:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ed6	obj/kernel.asm	/^c0104ed6:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0104ed9	obj/kernel.asm	/^c0104ed9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104edc	obj/kernel.asm	/^c0104edc:	89 10                	mov    %edx,(%eax)$/;"	l
c0104ede	obj/kernel.asm	/^c0104ede:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ee1	obj/kernel.asm	/^c0104ee1:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ee3	obj/kernel.asm	/^c0104ee3:	5d                   	pop    %ebp$/;"	l
c0104ee4	obj/kernel.asm	/^c0104ee4:	c3                   	ret    $/;"	l
c0104ee5	obj/kernel.asm	/^c0104ee5 <__intr_save>:$/;"	l
c0104ee5	obj/kernel.asm	/^c0104ee5:	55                   	push   %ebp$/;"	l
c0104ee6	obj/kernel.asm	/^c0104ee6:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ee8	obj/kernel.asm	/^c0104ee8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104eeb	obj/kernel.asm	/^c0104eeb:	9c                   	pushf  $/;"	l
c0104eec	obj/kernel.asm	/^c0104eec:	58                   	pop    %eax$/;"	l
c0104eed	obj/kernel.asm	/^c0104eed:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104ef0	obj/kernel.asm	/^c0104ef0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ef3	obj/kernel.asm	/^c0104ef3:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0104ef8	obj/kernel.asm	/^c0104ef8:	85 c0                	test   %eax,%eax$/;"	l
c0104efa	obj/kernel.asm	/^c0104efa:	74 0c                	je     c0104f08 <__intr_save+0x23>$/;"	l
c0104efc	obj/kernel.asm	/^c0104efc:	e8 31 d1 ff ff       	call   c0102032 <intr_disable>$/;"	l
c0104f01	obj/kernel.asm	/^c0104f01:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0104f06	obj/kernel.asm	/^c0104f06:	eb 05                	jmp    c0104f0d <__intr_save+0x28>$/;"	l
c0104f08	obj/kernel.asm	/^c0104f08:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104f0d	obj/kernel.asm	/^c0104f0d:	c9                   	leave  $/;"	l
c0104f0e	obj/kernel.asm	/^c0104f0e:	c3                   	ret    $/;"	l
c0104f0f	obj/kernel.asm	/^c0104f0f <__intr_restore>:$/;"	l
c0104f0f	obj/kernel.asm	/^c0104f0f:	55                   	push   %ebp$/;"	l
c0104f10	obj/kernel.asm	/^c0104f10:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f12	obj/kernel.asm	/^c0104f12:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f15	obj/kernel.asm	/^c0104f15:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104f19	obj/kernel.asm	/^c0104f19:	74 05                	je     c0104f20 <__intr_restore+0x11>$/;"	l
c0104f1b	obj/kernel.asm	/^c0104f1b:	e8 0c d1 ff ff       	call   c010202c <intr_enable>$/;"	l
c0104f20	obj/kernel.asm	/^c0104f20:	c9                   	leave  $/;"	l
c0104f21	obj/kernel.asm	/^c0104f21:	c3                   	ret    $/;"	l
c0104f22	obj/kernel.asm	/^c0104f22 <lgdt>:$/;"	l
c0104f22	obj/kernel.asm	/^c0104f22:	55                   	push   %ebp$/;"	l
c0104f23	obj/kernel.asm	/^c0104f23:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f25	obj/kernel.asm	/^c0104f25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f28	obj/kernel.asm	/^c0104f28:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0104f2b	obj/kernel.asm	/^c0104f2b:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0104f30	obj/kernel.asm	/^c0104f30:	8e e8                	mov    %eax,%gs$/;"	l
c0104f32	obj/kernel.asm	/^c0104f32:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0104f37	obj/kernel.asm	/^c0104f37:	8e e0                	mov    %eax,%fs$/;"	l
c0104f39	obj/kernel.asm	/^c0104f39:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104f3e	obj/kernel.asm	/^c0104f3e:	8e c0                	mov    %eax,%es$/;"	l
c0104f40	obj/kernel.asm	/^c0104f40:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104f45	obj/kernel.asm	/^c0104f45:	8e d8                	mov    %eax,%ds$/;"	l
c0104f47	obj/kernel.asm	/^c0104f47:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104f4c	obj/kernel.asm	/^c0104f4c:	8e d0                	mov    %eax,%ss$/;"	l
c0104f4e	obj/kernel.asm	/^c0104f4e:	ea 55 4f 10 c0 08 00 	ljmp   $0x8,$0xc0104f55$/;"	l
c0104f55	obj/kernel.asm	/^c0104f55:	5d                   	pop    %ebp$/;"	l
c0104f56	obj/kernel.asm	/^c0104f56:	c3                   	ret    $/;"	l
c0104f57	obj/kernel.asm	/^c0104f57 <load_esp0>:$/;"	l
c0104f57	obj/kernel.asm	/^c0104f57:	55                   	push   %ebp$/;"	l
c0104f58	obj/kernel.asm	/^c0104f58:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f5a	obj/kernel.asm	/^c0104f5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f5d	obj/kernel.asm	/^c0104f5d:	a3 a4 fd 1a c0       	mov    %eax,0xc01afda4$/;"	l
c0104f62	obj/kernel.asm	/^c0104f62:	5d                   	pop    %ebp$/;"	l
c0104f63	obj/kernel.asm	/^c0104f63:	c3                   	ret    $/;"	l
c0104f64	obj/kernel.asm	/^c0104f64 <gdt_init>:$/;"	l
c0104f64	obj/kernel.asm	/^c0104f64:	55                   	push   %ebp$/;"	l
c0104f65	obj/kernel.asm	/^c0104f65:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f67	obj/kernel.asm	/^c0104f67:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0104f6a	obj/kernel.asm	/^c0104f6a:	b8 00 d0 12 c0       	mov    $0xc012d000,%eax$/;"	l
c0104f6f	obj/kernel.asm	/^c0104f6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104f72	obj/kernel.asm	/^c0104f72:	e8 e0 ff ff ff       	call   c0104f57 <load_esp0>$/;"	l
c0104f77	obj/kernel.asm	/^c0104f77:	66 c7 05 a8 fd 1a c0 	movw   $0x10,0xc01afda8$/;"	l
c0104f7e	obj/kernel.asm	/^c0104f7e:	10 00 $/;"	l
c0104f80	obj/kernel.asm	/^c0104f80:	66 c7 05 48 da 12 c0 	movw   $0x68,0xc012da48$/;"	l
c0104f87	obj/kernel.asm	/^c0104f87:	68 00 $/;"	l
c0104f89	obj/kernel.asm	/^c0104f89:	b8 a0 fd 1a c0       	mov    $0xc01afda0,%eax$/;"	l
c0104f8e	obj/kernel.asm	/^c0104f8e:	66 a3 4a da 12 c0    	mov    %ax,0xc012da4a$/;"	l
c0104f94	obj/kernel.asm	/^c0104f94:	b8 a0 fd 1a c0       	mov    $0xc01afda0,%eax$/;"	l
c0104f99	obj/kernel.asm	/^c0104f99:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0104f9c	obj/kernel.asm	/^c0104f9c:	a2 4c da 12 c0       	mov    %al,0xc012da4c$/;"	l
c0104fa1	obj/kernel.asm	/^c0104fa1:	0f b6 05 4d da 12 c0 	movzbl 0xc012da4d,%eax$/;"	l
c0104fa8	obj/kernel.asm	/^c0104fa8:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0104fab	obj/kernel.asm	/^c0104fab:	83 c8 09             	or     $0x9,%eax$/;"	l
c0104fae	obj/kernel.asm	/^c0104fae:	a2 4d da 12 c0       	mov    %al,0xc012da4d$/;"	l
c0104fb3	obj/kernel.asm	/^c0104fb3:	0f b6 05 4d da 12 c0 	movzbl 0xc012da4d,%eax$/;"	l
c0104fba	obj/kernel.asm	/^c0104fba:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0104fbd	obj/kernel.asm	/^c0104fbd:	a2 4d da 12 c0       	mov    %al,0xc012da4d$/;"	l
c0104fc2	obj/kernel.asm	/^c0104fc2:	0f b6 05 4d da 12 c0 	movzbl 0xc012da4d,%eax$/;"	l
c0104fc9	obj/kernel.asm	/^c0104fc9:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c0104fcc	obj/kernel.asm	/^c0104fcc:	a2 4d da 12 c0       	mov    %al,0xc012da4d$/;"	l
c0104fd1	obj/kernel.asm	/^c0104fd1:	0f b6 05 4d da 12 c0 	movzbl 0xc012da4d,%eax$/;"	l
c0104fd8	obj/kernel.asm	/^c0104fd8:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0104fdb	obj/kernel.asm	/^c0104fdb:	a2 4d da 12 c0       	mov    %al,0xc012da4d$/;"	l
c0104fe0	obj/kernel.asm	/^c0104fe0:	0f b6 05 4e da 12 c0 	movzbl 0xc012da4e,%eax$/;"	l
c0104fe7	obj/kernel.asm	/^c0104fe7:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0104fea	obj/kernel.asm	/^c0104fea:	a2 4e da 12 c0       	mov    %al,0xc012da4e$/;"	l
c0104fef	obj/kernel.asm	/^c0104fef:	0f b6 05 4e da 12 c0 	movzbl 0xc012da4e,%eax$/;"	l
c0104ff6	obj/kernel.asm	/^c0104ff6:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0104ff9	obj/kernel.asm	/^c0104ff9:	a2 4e da 12 c0       	mov    %al,0xc012da4e$/;"	l
c0104ffe	obj/kernel.asm	/^c0104ffe:	0f b6 05 4e da 12 c0 	movzbl 0xc012da4e,%eax$/;"	l
c0105005	obj/kernel.asm	/^c0105005:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c0105008	obj/kernel.asm	/^c0105008:	a2 4e da 12 c0       	mov    %al,0xc012da4e$/;"	l
c010500d	obj/kernel.asm	/^c010500d:	0f b6 05 4e da 12 c0 	movzbl 0xc012da4e,%eax$/;"	l
c0105014	obj/kernel.asm	/^c0105014:	83 c8 40             	or     $0x40,%eax$/;"	l
c0105017	obj/kernel.asm	/^c0105017:	a2 4e da 12 c0       	mov    %al,0xc012da4e$/;"	l
c010501c	obj/kernel.asm	/^c010501c:	0f b6 05 4e da 12 c0 	movzbl 0xc012da4e,%eax$/;"	l
c0105023	obj/kernel.asm	/^c0105023:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c0105026	obj/kernel.asm	/^c0105026:	a2 4e da 12 c0       	mov    %al,0xc012da4e$/;"	l
c010502b	obj/kernel.asm	/^c010502b:	b8 a0 fd 1a c0       	mov    $0xc01afda0,%eax$/;"	l
c0105030	obj/kernel.asm	/^c0105030:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0105033	obj/kernel.asm	/^c0105033:	a2 4f da 12 c0       	mov    %al,0xc012da4f$/;"	l
c0105038	obj/kernel.asm	/^c0105038:	c7 04 24 50 da 12 c0 	movl   $0xc012da50,(%esp)$/;"	l
c010503f	obj/kernel.asm	/^c010503f:	e8 de fe ff ff       	call   c0104f22 <lgdt>$/;"	l
c0105044	obj/kernel.asm	/^c0105044:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c010504a	obj/kernel.asm	/^c010504a:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c010504e	obj/kernel.asm	/^c010504e:	0f 00 d8             	ltr    %ax$/;"	l
c0105051	obj/kernel.asm	/^c0105051:	c9                   	leave  $/;"	l
c0105052	obj/kernel.asm	/^c0105052:	c3                   	ret    $/;"	l
c0105053	obj/kernel.asm	/^c0105053 <init_pmm_manager>:$/;"	l
c0105053	obj/kernel.asm	/^c0105053:	55                   	push   %ebp$/;"	l
c0105054	obj/kernel.asm	/^c0105054:	89 e5                	mov    %esp,%ebp$/;"	l
c0105056	obj/kernel.asm	/^c0105056:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0105059	obj/kernel.asm	/^c0105059:	c7 05 88 1e 1b c0 f0 	movl   $0xc010d0f0,0xc01b1e88$/;"	l
c0105060	obj/kernel.asm	/^c0105060:	d0 10 c0 $/;"	d
c0105063	obj/kernel.asm	/^c0105063:	a1 88 1e 1b c0       	mov    0xc01b1e88,%eax$/;"	l
c0105068	obj/kernel.asm	/^c0105068:	8b 00                	mov    (%eax),%eax$/;"	l
c010506a	obj/kernel.asm	/^c010506a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010506e	obj/kernel.asm	/^c010506e:	c7 04 24 7c d2 10 c0 	movl   $0xc010d27c,(%esp)$/;"	l
c0105075	obj/kernel.asm	/^c0105075:	e8 de b2 ff ff       	call   c0100358 <cprintf>$/;"	l
c010507a	obj/kernel.asm	/^c010507a:	a1 88 1e 1b c0       	mov    0xc01b1e88,%eax$/;"	l
c010507f	obj/kernel.asm	/^c010507f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105082	obj/kernel.asm	/^c0105082:	ff d0                	call   *%eax$/;"	l
c0105084	obj/kernel.asm	/^c0105084:	c9                   	leave  $/;"	l
c0105085	obj/kernel.asm	/^c0105085:	c3                   	ret    $/;"	l
c0105086	obj/kernel.asm	/^c0105086 <init_memmap>:$/;"	l
c0105086	obj/kernel.asm	/^c0105086:	55                   	push   %ebp$/;"	l
c0105087	obj/kernel.asm	/^c0105087:	89 e5                	mov    %esp,%ebp$/;"	l
c0105089	obj/kernel.asm	/^c0105089:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010508c	obj/kernel.asm	/^c010508c:	a1 88 1e 1b c0       	mov    0xc01b1e88,%eax$/;"	l
c0105091	obj/kernel.asm	/^c0105091:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105094	obj/kernel.asm	/^c0105094:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105097	obj/kernel.asm	/^c0105097:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010509b	obj/kernel.asm	/^c010509b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010509e	obj/kernel.asm	/^c010509e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01050a1	obj/kernel.asm	/^c01050a1:	ff d0                	call   *%eax$/;"	l
c01050a3	obj/kernel.asm	/^c01050a3:	c9                   	leave  $/;"	l
c01050a4	obj/kernel.asm	/^c01050a4:	c3                   	ret    $/;"	l
c01050a5	obj/kernel.asm	/^c01050a5 <alloc_pages>:$/;"	l
c01050a5	obj/kernel.asm	/^c01050a5:	55                   	push   %ebp$/;"	l
c01050a6	obj/kernel.asm	/^c01050a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01050a8	obj/kernel.asm	/^c01050a8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01050ab	obj/kernel.asm	/^c01050ab:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01050b2	obj/kernel.asm	/^c01050b2:	e8 2e fe ff ff       	call   c0104ee5 <__intr_save>$/;"	l
c01050b7	obj/kernel.asm	/^c01050b7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01050ba	obj/kernel.asm	/^c01050ba:	a1 88 1e 1b c0       	mov    0xc01b1e88,%eax$/;"	l
c01050bf	obj/kernel.asm	/^c01050bf:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01050c2	obj/kernel.asm	/^c01050c2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01050c5	obj/kernel.asm	/^c01050c5:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01050c8	obj/kernel.asm	/^c01050c8:	ff d0                	call   *%eax$/;"	l
c01050ca	obj/kernel.asm	/^c01050ca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01050cd	obj/kernel.asm	/^c01050cd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01050d0	obj/kernel.asm	/^c01050d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01050d3	obj/kernel.asm	/^c01050d3:	e8 37 fe ff ff       	call   c0104f0f <__intr_restore>$/;"	l
c01050d8	obj/kernel.asm	/^c01050d8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01050dc	obj/kernel.asm	/^c01050dc:	75 2d                	jne    c010510b <alloc_pages+0x66>$/;"	l
c01050de	obj/kernel.asm	/^c01050de:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c01050e2	obj/kernel.asm	/^c01050e2:	77 27                	ja     c010510b <alloc_pages+0x66>$/;"	l
c01050e4	obj/kernel.asm	/^c01050e4:	a1 0c fe 1a c0       	mov    0xc01afe0c,%eax$/;"	l
c01050e9	obj/kernel.asm	/^c01050e9:	85 c0                	test   %eax,%eax$/;"	l
c01050eb	obj/kernel.asm	/^c01050eb:	74 1e                	je     c010510b <alloc_pages+0x66>$/;"	l
c01050ed	obj/kernel.asm	/^c01050ed:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01050f0	obj/kernel.asm	/^c01050f0:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c01050f5	obj/kernel.asm	/^c01050f5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01050fc	obj/kernel.asm	/^c01050fc:	00 $/;"	l
c01050fd	obj/kernel.asm	/^c01050fd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105101	obj/kernel.asm	/^c0105101:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105104	obj/kernel.asm	/^c0105104:	e8 84 1d 00 00       	call   c0106e8d <swap_out>$/;"	l
c0105109	obj/kernel.asm	/^c0105109:	eb a7                	jmp    c01050b2 <alloc_pages+0xd>$/;"	l
c010510b	obj/kernel.asm	/^c010510b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010510e	obj/kernel.asm	/^c010510e:	c9                   	leave  $/;"	l
c010510f	obj/kernel.asm	/^c010510f:	c3                   	ret    $/;"	l
c0105110	obj/kernel.asm	/^c0105110 <free_pages>:$/;"	l
c0105110	obj/kernel.asm	/^c0105110:	55                   	push   %ebp$/;"	l
c0105111	obj/kernel.asm	/^c0105111:	89 e5                	mov    %esp,%ebp$/;"	l
c0105113	obj/kernel.asm	/^c0105113:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105116	obj/kernel.asm	/^c0105116:	e8 ca fd ff ff       	call   c0104ee5 <__intr_save>$/;"	l
c010511b	obj/kernel.asm	/^c010511b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010511e	obj/kernel.asm	/^c010511e:	a1 88 1e 1b c0       	mov    0xc01b1e88,%eax$/;"	l
c0105123	obj/kernel.asm	/^c0105123:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0105126	obj/kernel.asm	/^c0105126:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105129	obj/kernel.asm	/^c0105129:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010512d	obj/kernel.asm	/^c010512d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105130	obj/kernel.asm	/^c0105130:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0105133	obj/kernel.asm	/^c0105133:	ff d0                	call   *%eax$/;"	l
c0105135	obj/kernel.asm	/^c0105135:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105138	obj/kernel.asm	/^c0105138:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010513b	obj/kernel.asm	/^c010513b:	e8 cf fd ff ff       	call   c0104f0f <__intr_restore>$/;"	l
c0105140	obj/kernel.asm	/^c0105140:	c9                   	leave  $/;"	l
c0105141	obj/kernel.asm	/^c0105141:	c3                   	ret    $/;"	l
c0105142	obj/kernel.asm	/^c0105142 <nr_free_pages>:$/;"	l
c0105142	obj/kernel.asm	/^c0105142:	55                   	push   %ebp$/;"	l
c0105143	obj/kernel.asm	/^c0105143:	89 e5                	mov    %esp,%ebp$/;"	l
c0105145	obj/kernel.asm	/^c0105145:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105148	obj/kernel.asm	/^c0105148:	e8 98 fd ff ff       	call   c0104ee5 <__intr_save>$/;"	l
c010514d	obj/kernel.asm	/^c010514d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105150	obj/kernel.asm	/^c0105150:	a1 88 1e 1b c0       	mov    0xc01b1e88,%eax$/;"	l
c0105155	obj/kernel.asm	/^c0105155:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0105158	obj/kernel.asm	/^c0105158:	ff d0                	call   *%eax$/;"	l
c010515a	obj/kernel.asm	/^c010515a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010515d	obj/kernel.asm	/^c010515d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105160	obj/kernel.asm	/^c0105160:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105163	obj/kernel.asm	/^c0105163:	e8 a7 fd ff ff       	call   c0104f0f <__intr_restore>$/;"	l
c0105168	obj/kernel.asm	/^c0105168:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010516b	obj/kernel.asm	/^c010516b:	c9                   	leave  $/;"	l
c010516c	obj/kernel.asm	/^c010516c:	c3                   	ret    $/;"	l
c010516d	obj/kernel.asm	/^c010516d <page_init>:$/;"	l
c010516d	obj/kernel.asm	/^c010516d:	55                   	push   %ebp$/;"	l
c010516e	obj/kernel.asm	/^c010516e:	89 e5                	mov    %esp,%ebp$/;"	l
c0105170	obj/kernel.asm	/^c0105170:	57                   	push   %edi$/;"	l
c0105171	obj/kernel.asm	/^c0105171:	56                   	push   %esi$/;"	l
c0105172	obj/kernel.asm	/^c0105172:	53                   	push   %ebx$/;"	l
c0105173	obj/kernel.asm	/^c0105173:	81 ec 9c 00 00 00    	sub    $0x9c,%esp$/;"	l
c0105179	obj/kernel.asm	/^c0105179:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c0105180	obj/kernel.asm	/^c0105180:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0105187	obj/kernel.asm	/^c0105187:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010518e	obj/kernel.asm	/^c010518e:	c7 04 24 93 d2 10 c0 	movl   $0xc010d293,(%esp)$/;"	l
c0105195	obj/kernel.asm	/^c0105195:	e8 be b1 ff ff       	call   c0100358 <cprintf>$/;"	l
c010519a	obj/kernel.asm	/^c010519a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01051a1	obj/kernel.asm	/^c01051a1:	e9 15 01 00 00       	jmp    c01052bb <page_init+0x14e>$/;"	l
c01051a6	obj/kernel.asm	/^c01051a6:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01051a9	obj/kernel.asm	/^c01051a9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01051ac	obj/kernel.asm	/^c01051ac:	89 d0                	mov    %edx,%eax$/;"	l
c01051ae	obj/kernel.asm	/^c01051ae:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051b1	obj/kernel.asm	/^c01051b1:	01 d0                	add    %edx,%eax$/;"	l
c01051b3	obj/kernel.asm	/^c01051b3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051b6	obj/kernel.asm	/^c01051b6:	01 c8                	add    %ecx,%eax$/;"	l
c01051b8	obj/kernel.asm	/^c01051b8:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01051bb	obj/kernel.asm	/^c01051bb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01051be	obj/kernel.asm	/^c01051be:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01051c1	obj/kernel.asm	/^c01051c1:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c01051c4	obj/kernel.asm	/^c01051c4:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01051c7	obj/kernel.asm	/^c01051c7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01051ca	obj/kernel.asm	/^c01051ca:	89 d0                	mov    %edx,%eax$/;"	l
c01051cc	obj/kernel.asm	/^c01051cc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051cf	obj/kernel.asm	/^c01051cf:	01 d0                	add    %edx,%eax$/;"	l
c01051d1	obj/kernel.asm	/^c01051d1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051d4	obj/kernel.asm	/^c01051d4:	01 c8                	add    %ecx,%eax$/;"	l
c01051d6	obj/kernel.asm	/^c01051d6:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01051d9	obj/kernel.asm	/^c01051d9:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c01051dc	obj/kernel.asm	/^c01051dc:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01051df	obj/kernel.asm	/^c01051df:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c01051e2	obj/kernel.asm	/^c01051e2:	01 c8                	add    %ecx,%eax$/;"	l
c01051e4	obj/kernel.asm	/^c01051e4:	11 da                	adc    %ebx,%edx$/;"	l
c01051e6	obj/kernel.asm	/^c01051e6:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01051e9	obj/kernel.asm	/^c01051e9:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c01051ec	obj/kernel.asm	/^c01051ec:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01051ef	obj/kernel.asm	/^c01051ef:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01051f2	obj/kernel.asm	/^c01051f2:	89 d0                	mov    %edx,%eax$/;"	l
c01051f4	obj/kernel.asm	/^c01051f4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051f7	obj/kernel.asm	/^c01051f7:	01 d0                	add    %edx,%eax$/;"	l
c01051f9	obj/kernel.asm	/^c01051f9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051fc	obj/kernel.asm	/^c01051fc:	01 c8                	add    %ecx,%eax$/;"	l
c01051fe	obj/kernel.asm	/^c01051fe:	83 c0 14             	add    $0x14,%eax$/;"	l
c0105201	obj/kernel.asm	/^c0105201:	8b 00                	mov    (%eax),%eax$/;"	l
c0105203	obj/kernel.asm	/^c0105203:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c0105209	obj/kernel.asm	/^c0105209:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010520c	obj/kernel.asm	/^c010520c:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010520f	obj/kernel.asm	/^c010520f:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c0105212	obj/kernel.asm	/^c0105212:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c0105215	obj/kernel.asm	/^c0105215:	89 c6                	mov    %eax,%esi$/;"	l
c0105217	obj/kernel.asm	/^c0105217:	89 d7                	mov    %edx,%edi$/;"	l
c0105219	obj/kernel.asm	/^c0105219:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010521c	obj/kernel.asm	/^c010521c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010521f	obj/kernel.asm	/^c010521f:	89 d0                	mov    %edx,%eax$/;"	l
c0105221	obj/kernel.asm	/^c0105221:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105224	obj/kernel.asm	/^c0105224:	01 d0                	add    %edx,%eax$/;"	l
c0105226	obj/kernel.asm	/^c0105226:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105229	obj/kernel.asm	/^c0105229:	01 c8                	add    %ecx,%eax$/;"	l
c010522b	obj/kernel.asm	/^c010522b:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010522e	obj/kernel.asm	/^c010522e:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0105231	obj/kernel.asm	/^c0105231:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c0105237	obj/kernel.asm	/^c0105237:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c010523b	obj/kernel.asm	/^c010523b:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
c010523f	obj/kernel.asm	/^c010523f:	89 7c 24 18          	mov    %edi,0x18(%esp)$/;"	l
c0105243	obj/kernel.asm	/^c0105243:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0105246	obj/kernel.asm	/^c0105246:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0105249	obj/kernel.asm	/^c0105249:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010524d	obj/kernel.asm	/^c010524d:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0105251	obj/kernel.asm	/^c0105251:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0105255	obj/kernel.asm	/^c0105255:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c0105259	obj/kernel.asm	/^c0105259:	c7 04 24 a0 d2 10 c0 	movl   $0xc010d2a0,(%esp)$/;"	l
c0105260	obj/kernel.asm	/^c0105260:	e8 f3 b0 ff ff       	call   c0100358 <cprintf>$/;"	l
c0105265	obj/kernel.asm	/^c0105265:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105268	obj/kernel.asm	/^c0105268:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010526b	obj/kernel.asm	/^c010526b:	89 d0                	mov    %edx,%eax$/;"	l
c010526d	obj/kernel.asm	/^c010526d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105270	obj/kernel.asm	/^c0105270:	01 d0                	add    %edx,%eax$/;"	l
c0105272	obj/kernel.asm	/^c0105272:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105275	obj/kernel.asm	/^c0105275:	01 c8                	add    %ecx,%eax$/;"	l
c0105277	obj/kernel.asm	/^c0105277:	83 c0 14             	add    $0x14,%eax$/;"	l
c010527a	obj/kernel.asm	/^c010527a:	8b 00                	mov    (%eax),%eax$/;"	l
c010527c	obj/kernel.asm	/^c010527c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010527f	obj/kernel.asm	/^c010527f:	75 36                	jne    c01052b7 <page_init+0x14a>$/;"	l
c0105281	obj/kernel.asm	/^c0105281:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105284	obj/kernel.asm	/^c0105284:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105287	obj/kernel.asm	/^c0105287:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c010528a	obj/kernel.asm	/^c010528a:	77 2b                	ja     c01052b7 <page_init+0x14a>$/;"	l
c010528c	obj/kernel.asm	/^c010528c:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c010528f	obj/kernel.asm	/^c010528f:	72 05                	jb     c0105296 <page_init+0x129>$/;"	l
c0105291	obj/kernel.asm	/^c0105291:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c0105294	obj/kernel.asm	/^c0105294:	73 21                	jae    c01052b7 <page_init+0x14a>$/;"	l
c0105296	obj/kernel.asm	/^c0105296:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c010529a	obj/kernel.asm	/^c010529a:	77 1b                	ja     c01052b7 <page_init+0x14a>$/;"	l
c010529c	obj/kernel.asm	/^c010529c:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c01052a0	obj/kernel.asm	/^c01052a0:	72 09                	jb     c01052ab <page_init+0x13e>$/;"	l
c01052a2	obj/kernel.asm	/^c01052a2:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c01052a9	obj/kernel.asm	/^c01052a9:	77 0c                	ja     c01052b7 <page_init+0x14a>$/;"	l
c01052ab	obj/kernel.asm	/^c01052ab:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01052ae	obj/kernel.asm	/^c01052ae:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01052b1	obj/kernel.asm	/^c01052b1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01052b4	obj/kernel.asm	/^c01052b4:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01052b7	obj/kernel.asm	/^c01052b7:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c01052bb	obj/kernel.asm	/^c01052bb:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01052be	obj/kernel.asm	/^c01052be:	8b 00                	mov    (%eax),%eax$/;"	l
c01052c0	obj/kernel.asm	/^c01052c0:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01052c3	obj/kernel.asm	/^c01052c3:	0f 8f dd fe ff ff    	jg     c01051a6 <page_init+0x39>$/;"	l
c01052c9	obj/kernel.asm	/^c01052c9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01052cd	obj/kernel.asm	/^c01052cd:	72 1d                	jb     c01052ec <page_init+0x17f>$/;"	l
c01052cf	obj/kernel.asm	/^c01052cf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01052d3	obj/kernel.asm	/^c01052d3:	77 09                	ja     c01052de <page_init+0x171>$/;"	l
c01052d5	obj/kernel.asm	/^c01052d5:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c01052dc	obj/kernel.asm	/^c01052dc:	76 0e                	jbe    c01052ec <page_init+0x17f>$/;"	l
c01052de	obj/kernel.asm	/^c01052de:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c01052e5	obj/kernel.asm	/^c01052e5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01052ec	obj/kernel.asm	/^c01052ec:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01052ef	obj/kernel.asm	/^c01052ef:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01052f2	obj/kernel.asm	/^c01052f2:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c01052f6	obj/kernel.asm	/^c01052f6:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01052f9	obj/kernel.asm	/^c01052f9:	a3 80 fd 1a c0       	mov    %eax,0xc01afd80$/;"	l
c01052fe	obj/kernel.asm	/^c01052fe:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c0105305	obj/kernel.asm	/^c0105305:	b8 78 1f 1b c0       	mov    $0xc01b1f78,%eax$/;"	l
c010530a	obj/kernel.asm	/^c010530a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010530d	obj/kernel.asm	/^c010530d:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0105310	obj/kernel.asm	/^c0105310:	01 d0                	add    %edx,%eax$/;"	l
c0105312	obj/kernel.asm	/^c0105312:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0105315	obj/kernel.asm	/^c0105315:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0105318	obj/kernel.asm	/^c0105318:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010531d	obj/kernel.asm	/^c010531d:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c0105320	obj/kernel.asm	/^c0105320:	89 d0                	mov    %edx,%eax$/;"	l
c0105322	obj/kernel.asm	/^c0105322:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0105325	obj/kernel.asm	/^c0105325:	29 c2                	sub    %eax,%edx$/;"	l
c0105327	obj/kernel.asm	/^c0105327:	89 d0                	mov    %edx,%eax$/;"	l
c0105329	obj/kernel.asm	/^c0105329:	a3 90 1e 1b c0       	mov    %eax,0xc01b1e90$/;"	l
c010532e	obj/kernel.asm	/^c010532e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105335	obj/kernel.asm	/^c0105335:	eb 27                	jmp    c010535e <page_init+0x1f1>$/;"	l
c0105337	obj/kernel.asm	/^c0105337:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c010533c	obj/kernel.asm	/^c010533c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010533f	obj/kernel.asm	/^c010533f:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0105342	obj/kernel.asm	/^c0105342:	01 d0                	add    %edx,%eax$/;"	l
c0105344	obj/kernel.asm	/^c0105344:	83 c0 04             	add    $0x4,%eax$/;"	l
c0105347	obj/kernel.asm	/^c0105347:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c010534e	obj/kernel.asm	/^c010534e:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0105351	obj/kernel.asm	/^c0105351:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0105354	obj/kernel.asm	/^c0105354:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0105357	obj/kernel.asm	/^c0105357:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c010535a	obj/kernel.asm	/^c010535a:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c010535e	obj/kernel.asm	/^c010535e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105361	obj/kernel.asm	/^c0105361:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0105366	obj/kernel.asm	/^c0105366:	39 c2                	cmp    %eax,%edx$/;"	l
c0105368	obj/kernel.asm	/^c0105368:	72 cd                	jb     c0105337 <page_init+0x1ca>$/;"	l
c010536a	obj/kernel.asm	/^c010536a:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c010536f	obj/kernel.asm	/^c010536f:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0105372	obj/kernel.asm	/^c0105372:	89 c2                	mov    %eax,%edx$/;"	l
c0105374	obj/kernel.asm	/^c0105374:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c0105379	obj/kernel.asm	/^c0105379:	01 d0                	add    %edx,%eax$/;"	l
c010537b	obj/kernel.asm	/^c010537b:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010537e	obj/kernel.asm	/^c010537e:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c0105385	obj/kernel.asm	/^c0105385:	77 23                	ja     c01053aa <page_init+0x23d>$/;"	l
c0105387	obj/kernel.asm	/^c0105387:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010538a	obj/kernel.asm	/^c010538a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010538e	obj/kernel.asm	/^c010538e:	c7 44 24 08 d0 d2 10 	movl   $0xc010d2d0,0x8(%esp)$/;"	l
c0105395	obj/kernel.asm	/^c0105395:	c0 $/;"	l
c0105396	obj/kernel.asm	/^c0105396:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c010539d	obj/kernel.asm	/^c010539d:	00 $/;"	l
c010539e	obj/kernel.asm	/^c010539e:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01053a5	obj/kernel.asm	/^c01053a5:	e8 30 ba ff ff       	call   c0100dda <__panic>$/;"	l
c01053aa	obj/kernel.asm	/^c01053aa:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c01053ad	obj/kernel.asm	/^c01053ad:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01053b2	obj/kernel.asm	/^c01053b2:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c01053b5	obj/kernel.asm	/^c01053b5:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01053bc	obj/kernel.asm	/^c01053bc:	e9 74 01 00 00       	jmp    c0105535 <page_init+0x3c8>$/;"	l
c01053c1	obj/kernel.asm	/^c01053c1:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01053c4	obj/kernel.asm	/^c01053c4:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01053c7	obj/kernel.asm	/^c01053c7:	89 d0                	mov    %edx,%eax$/;"	l
c01053c9	obj/kernel.asm	/^c01053c9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01053cc	obj/kernel.asm	/^c01053cc:	01 d0                	add    %edx,%eax$/;"	l
c01053ce	obj/kernel.asm	/^c01053ce:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01053d1	obj/kernel.asm	/^c01053d1:	01 c8                	add    %ecx,%eax$/;"	l
c01053d3	obj/kernel.asm	/^c01053d3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01053d6	obj/kernel.asm	/^c01053d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053d9	obj/kernel.asm	/^c01053d9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01053dc	obj/kernel.asm	/^c01053dc:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01053df	obj/kernel.asm	/^c01053df:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01053e2	obj/kernel.asm	/^c01053e2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01053e5	obj/kernel.asm	/^c01053e5:	89 d0                	mov    %edx,%eax$/;"	l
c01053e7	obj/kernel.asm	/^c01053e7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01053ea	obj/kernel.asm	/^c01053ea:	01 d0                	add    %edx,%eax$/;"	l
c01053ec	obj/kernel.asm	/^c01053ec:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01053ef	obj/kernel.asm	/^c01053ef:	01 c8                	add    %ecx,%eax$/;"	l
c01053f1	obj/kernel.asm	/^c01053f1:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01053f4	obj/kernel.asm	/^c01053f4:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c01053f7	obj/kernel.asm	/^c01053f7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01053fa	obj/kernel.asm	/^c01053fa:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01053fd	obj/kernel.asm	/^c01053fd:	01 c8                	add    %ecx,%eax$/;"	l
c01053ff	obj/kernel.asm	/^c01053ff:	11 da                	adc    %ebx,%edx$/;"	l
c0105401	obj/kernel.asm	/^c0105401:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0105404	obj/kernel.asm	/^c0105404:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0105407	obj/kernel.asm	/^c0105407:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010540a	obj/kernel.asm	/^c010540a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010540d	obj/kernel.asm	/^c010540d:	89 d0                	mov    %edx,%eax$/;"	l
c010540f	obj/kernel.asm	/^c010540f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105412	obj/kernel.asm	/^c0105412:	01 d0                	add    %edx,%eax$/;"	l
c0105414	obj/kernel.asm	/^c0105414:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105417	obj/kernel.asm	/^c0105417:	01 c8                	add    %ecx,%eax$/;"	l
c0105419	obj/kernel.asm	/^c0105419:	83 c0 14             	add    $0x14,%eax$/;"	l
c010541c	obj/kernel.asm	/^c010541c:	8b 00                	mov    (%eax),%eax$/;"	l
c010541e	obj/kernel.asm	/^c010541e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0105421	obj/kernel.asm	/^c0105421:	0f 85 0a 01 00 00    	jne    c0105531 <page_init+0x3c4>$/;"	l
c0105427	obj/kernel.asm	/^c0105427:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010542a	obj/kernel.asm	/^c010542a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010542f	obj/kernel.asm	/^c010542f:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0105432	obj/kernel.asm	/^c0105432:	72 17                	jb     c010544b <page_init+0x2de>$/;"	l
c0105434	obj/kernel.asm	/^c0105434:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0105437	obj/kernel.asm	/^c0105437:	77 05                	ja     c010543e <page_init+0x2d1>$/;"	l
c0105439	obj/kernel.asm	/^c0105439:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c010543c	obj/kernel.asm	/^c010543c:	76 0d                	jbe    c010544b <page_init+0x2de>$/;"	l
c010543e	obj/kernel.asm	/^c010543e:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0105441	obj/kernel.asm	/^c0105441:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105444	obj/kernel.asm	/^c0105444:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c010544b	obj/kernel.asm	/^c010544b:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c010544f	obj/kernel.asm	/^c010544f:	72 1d                	jb     c010546e <page_init+0x301>$/;"	l
c0105451	obj/kernel.asm	/^c0105451:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0105455	obj/kernel.asm	/^c0105455:	77 09                	ja     c0105460 <page_init+0x2f3>$/;"	l
c0105457	obj/kernel.asm	/^c0105457:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c010545e	obj/kernel.asm	/^c010545e:	76 0e                	jbe    c010546e <page_init+0x301>$/;"	l
c0105460	obj/kernel.asm	/^c0105460:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c0105467	obj/kernel.asm	/^c0105467:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010546e	obj/kernel.asm	/^c010546e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105471	obj/kernel.asm	/^c0105471:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105474	obj/kernel.asm	/^c0105474:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0105477	obj/kernel.asm	/^c0105477:	0f 87 b4 00 00 00    	ja     c0105531 <page_init+0x3c4>$/;"	l
c010547d	obj/kernel.asm	/^c010547d:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0105480	obj/kernel.asm	/^c0105480:	72 09                	jb     c010548b <page_init+0x31e>$/;"	l
c0105482	obj/kernel.asm	/^c0105482:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0105485	obj/kernel.asm	/^c0105485:	0f 83 a6 00 00 00    	jae    c0105531 <page_init+0x3c4>$/;"	l
c010548b	obj/kernel.asm	/^c010548b:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0105492	obj/kernel.asm	/^c0105492:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0105495	obj/kernel.asm	/^c0105495:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0105498	obj/kernel.asm	/^c0105498:	01 d0                	add    %edx,%eax$/;"	l
c010549a	obj/kernel.asm	/^c010549a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010549d	obj/kernel.asm	/^c010549d:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c01054a0	obj/kernel.asm	/^c01054a0:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c01054a3	obj/kernel.asm	/^c01054a3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01054a8	obj/kernel.asm	/^c01054a8:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c01054ab	obj/kernel.asm	/^c01054ab:	89 d0                	mov    %edx,%eax$/;"	l
c01054ad	obj/kernel.asm	/^c01054ad:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c01054b0	obj/kernel.asm	/^c01054b0:	29 c2                	sub    %eax,%edx$/;"	l
c01054b2	obj/kernel.asm	/^c01054b2:	89 d0                	mov    %edx,%eax$/;"	l
c01054b4	obj/kernel.asm	/^c01054b4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01054b9	obj/kernel.asm	/^c01054b9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01054bc	obj/kernel.asm	/^c01054bc:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01054bf	obj/kernel.asm	/^c01054bf:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01054c2	obj/kernel.asm	/^c01054c2:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c01054c5	obj/kernel.asm	/^c01054c5:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c01054c8	obj/kernel.asm	/^c01054c8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01054cd	obj/kernel.asm	/^c01054cd:	89 c7                	mov    %eax,%edi$/;"	l
c01054cf	obj/kernel.asm	/^c01054cf:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
c01054d5	obj/kernel.asm	/^c01054d5:	89 7d 80             	mov    %edi,-0x80(%ebp)$/;"	l
c01054d8	obj/kernel.asm	/^c01054d8:	89 d0                	mov    %edx,%eax$/;"	l
c01054da	obj/kernel.asm	/^c01054da:	83 e0 00             	and    $0x0,%eax$/;"	l
c01054dd	obj/kernel.asm	/^c01054dd:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c01054e0	obj/kernel.asm	/^c01054e0:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c01054e3	obj/kernel.asm	/^c01054e3:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c01054e6	obj/kernel.asm	/^c01054e6:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01054e9	obj/kernel.asm	/^c01054e9:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c01054ec	obj/kernel.asm	/^c01054ec:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01054ef	obj/kernel.asm	/^c01054ef:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01054f2	obj/kernel.asm	/^c01054f2:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c01054f5	obj/kernel.asm	/^c01054f5:	77 3a                	ja     c0105531 <page_init+0x3c4>$/;"	l
c01054f7	obj/kernel.asm	/^c01054f7:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c01054fa	obj/kernel.asm	/^c01054fa:	72 05                	jb     c0105501 <page_init+0x394>$/;"	l
c01054fc	obj/kernel.asm	/^c01054fc:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c01054ff	obj/kernel.asm	/^c01054ff:	73 30                	jae    c0105531 <page_init+0x3c4>$/;"	l
c0105501	obj/kernel.asm	/^c0105501:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
c0105504	obj/kernel.asm	/^c0105504:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
c0105507	obj/kernel.asm	/^c0105507:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010550a	obj/kernel.asm	/^c010550a:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010550d	obj/kernel.asm	/^c010550d:	29 c8                	sub    %ecx,%eax$/;"	l
c010550f	obj/kernel.asm	/^c010550f:	19 da                	sbb    %ebx,%edx$/;"	l
c0105511	obj/kernel.asm	/^c0105511:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0105515	obj/kernel.asm	/^c0105515:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0105518	obj/kernel.asm	/^c0105518:	89 c3                	mov    %eax,%ebx$/;"	l
c010551a	obj/kernel.asm	/^c010551a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010551d	obj/kernel.asm	/^c010551d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105520	obj/kernel.asm	/^c0105520:	e8 8c f8 ff ff       	call   c0104db1 <pa2page>$/;"	l
c0105525	obj/kernel.asm	/^c0105525:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0105529	obj/kernel.asm	/^c0105529:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010552c	obj/kernel.asm	/^c010552c:	e8 55 fb ff ff       	call   c0105086 <init_memmap>$/;"	l
c0105531	obj/kernel.asm	/^c0105531:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0105535	obj/kernel.asm	/^c0105535:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0105538	obj/kernel.asm	/^c0105538:	8b 00                	mov    (%eax),%eax$/;"	l
c010553a	obj/kernel.asm	/^c010553a:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c010553d	obj/kernel.asm	/^c010553d:	0f 8f 7e fe ff ff    	jg     c01053c1 <page_init+0x254>$/;"	l
c0105543	obj/kernel.asm	/^c0105543:	81 c4 9c 00 00 00    	add    $0x9c,%esp$/;"	l
c0105549	obj/kernel.asm	/^c0105549:	5b                   	pop    %ebx$/;"	l
c010554a	obj/kernel.asm	/^c010554a:	5e                   	pop    %esi$/;"	l
c010554b	obj/kernel.asm	/^c010554b:	5f                   	pop    %edi$/;"	l
c010554c	obj/kernel.asm	/^c010554c:	5d                   	pop    %ebp$/;"	l
c010554d	obj/kernel.asm	/^c010554d:	c3                   	ret    $/;"	l
c010554e	obj/kernel.asm	/^c010554e <enable_paging>:$/;"	l
c010554e	obj/kernel.asm	/^c010554e:	55                   	push   %ebp$/;"	l
c010554f	obj/kernel.asm	/^c010554f:	89 e5                	mov    %esp,%ebp$/;"	l
c0105551	obj/kernel.asm	/^c0105551:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0105554	obj/kernel.asm	/^c0105554:	a1 8c 1e 1b c0       	mov    0xc01b1e8c,%eax$/;"	l
c0105559	obj/kernel.asm	/^c0105559:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010555c	obj/kernel.asm	/^c010555c:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010555f	obj/kernel.asm	/^c010555f:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0105562	obj/kernel.asm	/^c0105562:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0105565	obj/kernel.asm	/^c0105565:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105568	obj/kernel.asm	/^c0105568:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010556b	obj/kernel.asm	/^c010556b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010556e	obj/kernel.asm	/^c010556e:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0105575	obj/kernel.asm	/^c0105575:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c0105579	obj/kernel.asm	/^c0105579:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010557c	obj/kernel.asm	/^c010557c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010557f	obj/kernel.asm	/^c010557f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105582	obj/kernel.asm	/^c0105582:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0105585	obj/kernel.asm	/^c0105585:	c9                   	leave  $/;"	l
c0105586	obj/kernel.asm	/^c0105586:	c3                   	ret    $/;"	l
c0105587	obj/kernel.asm	/^c0105587 <boot_map_segment>:$/;"	l
c0105587	obj/kernel.asm	/^c0105587:	55                   	push   %ebp$/;"	l
c0105588	obj/kernel.asm	/^c0105588:	89 e5                	mov    %esp,%ebp$/;"	l
c010558a	obj/kernel.asm	/^c010558a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010558d	obj/kernel.asm	/^c010558d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105590	obj/kernel.asm	/^c0105590:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105593	obj/kernel.asm	/^c0105593:	31 d0                	xor    %edx,%eax$/;"	l
c0105595	obj/kernel.asm	/^c0105595:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010559a	obj/kernel.asm	/^c010559a:	85 c0                	test   %eax,%eax$/;"	l
c010559c	obj/kernel.asm	/^c010559c:	74 24                	je     c01055c2 <boot_map_segment+0x3b>$/;"	l
c010559e	obj/kernel.asm	/^c010559e:	c7 44 24 0c 02 d3 10 	movl   $0xc010d302,0xc(%esp)$/;"	l
c01055a5	obj/kernel.asm	/^c01055a5:	c0 $/;"	l
c01055a6	obj/kernel.asm	/^c01055a6:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01055ad	obj/kernel.asm	/^c01055ad:	c0 $/;"	l
c01055ae	obj/kernel.asm	/^c01055ae:	c7 44 24 04 12 01 00 	movl   $0x112,0x4(%esp)$/;"	l
c01055b5	obj/kernel.asm	/^c01055b5:	00 $/;"	l
c01055b6	obj/kernel.asm	/^c01055b6:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01055bd	obj/kernel.asm	/^c01055bd:	e8 18 b8 ff ff       	call   c0100dda <__panic>$/;"	l
c01055c2	obj/kernel.asm	/^c01055c2:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c01055c9	obj/kernel.asm	/^c01055c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01055cc	obj/kernel.asm	/^c01055cc:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01055d1	obj/kernel.asm	/^c01055d1:	89 c2                	mov    %eax,%edx$/;"	l
c01055d3	obj/kernel.asm	/^c01055d3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01055d6	obj/kernel.asm	/^c01055d6:	01 c2                	add    %eax,%edx$/;"	l
c01055d8	obj/kernel.asm	/^c01055d8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01055db	obj/kernel.asm	/^c01055db:	01 d0                	add    %edx,%eax$/;"	l
c01055dd	obj/kernel.asm	/^c01055dd:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01055e0	obj/kernel.asm	/^c01055e0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01055e3	obj/kernel.asm	/^c01055e3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01055e6	obj/kernel.asm	/^c01055e6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01055eb	obj/kernel.asm	/^c01055eb:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c01055ee	obj/kernel.asm	/^c01055ee:	89 d0                	mov    %edx,%eax$/;"	l
c01055f0	obj/kernel.asm	/^c01055f0:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01055f3	obj/kernel.asm	/^c01055f3:	29 c2                	sub    %eax,%edx$/;"	l
c01055f5	obj/kernel.asm	/^c01055f5:	89 d0                	mov    %edx,%eax$/;"	l
c01055f7	obj/kernel.asm	/^c01055f7:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01055fa	obj/kernel.asm	/^c01055fa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01055fd	obj/kernel.asm	/^c01055fd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105600	obj/kernel.asm	/^c0105600:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105603	obj/kernel.asm	/^c0105603:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105606	obj/kernel.asm	/^c0105606:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010560b	obj/kernel.asm	/^c010560b:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010560e	obj/kernel.asm	/^c010560e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105611	obj/kernel.asm	/^c0105611:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105614	obj/kernel.asm	/^c0105614:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105617	obj/kernel.asm	/^c0105617:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010561c	obj/kernel.asm	/^c010561c:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c010561f	obj/kernel.asm	/^c010561f:	eb 6b                	jmp    c010568c <boot_map_segment+0x105>$/;"	l
c0105621	obj/kernel.asm	/^c0105621:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105628	obj/kernel.asm	/^c0105628:	00 $/;"	l
c0105629	obj/kernel.asm	/^c0105629:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010562c	obj/kernel.asm	/^c010562c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105630	obj/kernel.asm	/^c0105630:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105633	obj/kernel.asm	/^c0105633:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105636	obj/kernel.asm	/^c0105636:	e8 d1 01 00 00       	call   c010580c <get_pte>$/;"	l
c010563b	obj/kernel.asm	/^c010563b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010563e	obj/kernel.asm	/^c010563e:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105642	obj/kernel.asm	/^c0105642:	75 24                	jne    c0105668 <boot_map_segment+0xe1>$/;"	l
c0105644	obj/kernel.asm	/^c0105644:	c7 44 24 0c 2e d3 10 	movl   $0xc010d32e,0xc(%esp)$/;"	l
c010564b	obj/kernel.asm	/^c010564b:	c0 $/;"	l
c010564c	obj/kernel.asm	/^c010564c:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105653	obj/kernel.asm	/^c0105653:	c0 $/;"	l
c0105654	obj/kernel.asm	/^c0105654:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
c010565b	obj/kernel.asm	/^c010565b:	00 $/;"	l
c010565c	obj/kernel.asm	/^c010565c:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105663	obj/kernel.asm	/^c0105663:	e8 72 b7 ff ff       	call   c0100dda <__panic>$/;"	l
c0105668	obj/kernel.asm	/^c0105668:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010566b	obj/kernel.asm	/^c010566b:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010566e	obj/kernel.asm	/^c010566e:	09 d0                	or     %edx,%eax$/;"	l
c0105670	obj/kernel.asm	/^c0105670:	83 c8 01             	or     $0x1,%eax$/;"	l
c0105673	obj/kernel.asm	/^c0105673:	89 c2                	mov    %eax,%edx$/;"	l
c0105675	obj/kernel.asm	/^c0105675:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105678	obj/kernel.asm	/^c0105678:	89 10                	mov    %edx,(%eax)$/;"	l
c010567a	obj/kernel.asm	/^c010567a:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010567e	obj/kernel.asm	/^c010567e:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0105685	obj/kernel.asm	/^c0105685:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c010568c	obj/kernel.asm	/^c010568c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105690	obj/kernel.asm	/^c0105690:	75 8f                	jne    c0105621 <boot_map_segment+0x9a>$/;"	l
c0105692	obj/kernel.asm	/^c0105692:	c9                   	leave  $/;"	l
c0105693	obj/kernel.asm	/^c0105693:	c3                   	ret    $/;"	l
c0105694	obj/kernel.asm	/^c0105694 <boot_alloc_page>:$/;"	l
c0105694	obj/kernel.asm	/^c0105694:	55                   	push   %ebp$/;"	l
c0105695	obj/kernel.asm	/^c0105695:	89 e5                	mov    %esp,%ebp$/;"	l
c0105697	obj/kernel.asm	/^c0105697:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010569a	obj/kernel.asm	/^c010569a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01056a1	obj/kernel.asm	/^c01056a1:	e8 ff f9 ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c01056a6	obj/kernel.asm	/^c01056a6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01056a9	obj/kernel.asm	/^c01056a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01056ad	obj/kernel.asm	/^c01056ad:	75 1c                	jne    c01056cb <boot_alloc_page+0x37>$/;"	l
c01056af	obj/kernel.asm	/^c01056af:	c7 44 24 08 3b d3 10 	movl   $0xc010d33b,0x8(%esp)$/;"	l
c01056b6	obj/kernel.asm	/^c01056b6:	c0 $/;"	l
c01056b7	obj/kernel.asm	/^c01056b7:	c7 44 24 04 24 01 00 	movl   $0x124,0x4(%esp)$/;"	l
c01056be	obj/kernel.asm	/^c01056be:	00 $/;"	l
c01056bf	obj/kernel.asm	/^c01056bf:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01056c6	obj/kernel.asm	/^c01056c6:	e8 0f b7 ff ff       	call   c0100dda <__panic>$/;"	l
c01056cb	obj/kernel.asm	/^c01056cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01056ce	obj/kernel.asm	/^c01056ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01056d1	obj/kernel.asm	/^c01056d1:	e8 20 f7 ff ff       	call   c0104df6 <page2kva>$/;"	l
c01056d6	obj/kernel.asm	/^c01056d6:	c9                   	leave  $/;"	l
c01056d7	obj/kernel.asm	/^c01056d7:	c3                   	ret    $/;"	l
c01056d8	obj/kernel.asm	/^c01056d8 <pmm_init>:$/;"	l
c01056d8	obj/kernel.asm	/^c01056d8:	55                   	push   %ebp$/;"	l
c01056d9	obj/kernel.asm	/^c01056d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01056db	obj/kernel.asm	/^c01056db:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01056de	obj/kernel.asm	/^c01056de:	e8 70 f9 ff ff       	call   c0105053 <init_pmm_manager>$/;"	l
c01056e3	obj/kernel.asm	/^c01056e3:	e8 85 fa ff ff       	call   c010516d <page_init>$/;"	l
c01056e8	obj/kernel.asm	/^c01056e8:	e8 58 09 00 00       	call   c0106045 <check_alloc_page>$/;"	l
c01056ed	obj/kernel.asm	/^c01056ed:	e8 a2 ff ff ff       	call   c0105694 <boot_alloc_page>$/;"	l
c01056f2	obj/kernel.asm	/^c01056f2:	a3 84 fd 1a c0       	mov    %eax,0xc01afd84$/;"	l
c01056f7	obj/kernel.asm	/^c01056f7:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01056fc	obj/kernel.asm	/^c01056fc:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0105703	obj/kernel.asm	/^c0105703:	00 $/;"	l
c0105704	obj/kernel.asm	/^c0105704:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010570b	obj/kernel.asm	/^c010570b:	00 $/;"	l
c010570c	obj/kernel.asm	/^c010570c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010570f	obj/kernel.asm	/^c010570f:	e8 85 6b 00 00       	call   c010c299 <memset>$/;"	l
c0105714	obj/kernel.asm	/^c0105714:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0105719	obj/kernel.asm	/^c0105719:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010571c	obj/kernel.asm	/^c010571c:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0105723	obj/kernel.asm	/^c0105723:	77 23                	ja     c0105748 <pmm_init+0x70>$/;"	l
c0105725	obj/kernel.asm	/^c0105725:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105728	obj/kernel.asm	/^c0105728:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010572c	obj/kernel.asm	/^c010572c:	c7 44 24 08 d0 d2 10 	movl   $0xc010d2d0,0x8(%esp)$/;"	l
c0105733	obj/kernel.asm	/^c0105733:	c0 $/;"	l
c0105734	obj/kernel.asm	/^c0105734:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
c010573b	obj/kernel.asm	/^c010573b:	00 $/;"	l
c010573c	obj/kernel.asm	/^c010573c:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105743	obj/kernel.asm	/^c0105743:	e8 92 b6 ff ff       	call   c0100dda <__panic>$/;"	l
c0105748	obj/kernel.asm	/^c0105748:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010574b	obj/kernel.asm	/^c010574b:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105750	obj/kernel.asm	/^c0105750:	a3 8c 1e 1b c0       	mov    %eax,0xc01b1e8c$/;"	l
c0105755	obj/kernel.asm	/^c0105755:	e8 09 09 00 00       	call   c0106063 <check_pgdir>$/;"	l
c010575a	obj/kernel.asm	/^c010575a:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c010575f	obj/kernel.asm	/^c010575f:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0105765	obj/kernel.asm	/^c0105765:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c010576a	obj/kernel.asm	/^c010576a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010576d	obj/kernel.asm	/^c010576d:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0105774	obj/kernel.asm	/^c0105774:	77 23                	ja     c0105799 <pmm_init+0xc1>$/;"	l
c0105776	obj/kernel.asm	/^c0105776:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105779	obj/kernel.asm	/^c0105779:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010577d	obj/kernel.asm	/^c010577d:	c7 44 24 08 d0 d2 10 	movl   $0xc010d2d0,0x8(%esp)$/;"	l
c0105784	obj/kernel.asm	/^c0105784:	c0 $/;"	l
c0105785	obj/kernel.asm	/^c0105785:	c7 44 24 04 46 01 00 	movl   $0x146,0x4(%esp)$/;"	l
c010578c	obj/kernel.asm	/^c010578c:	00 $/;"	l
c010578d	obj/kernel.asm	/^c010578d:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105794	obj/kernel.asm	/^c0105794:	e8 41 b6 ff ff       	call   c0100dda <__panic>$/;"	l
c0105799	obj/kernel.asm	/^c0105799:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010579c	obj/kernel.asm	/^c010579c:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01057a1	obj/kernel.asm	/^c01057a1:	83 c8 03             	or     $0x3,%eax$/;"	l
c01057a4	obj/kernel.asm	/^c01057a4:	89 02                	mov    %eax,(%edx)$/;"	l
c01057a6	obj/kernel.asm	/^c01057a6:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01057ab	obj/kernel.asm	/^c01057ab:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)$/;"	l
c01057b2	obj/kernel.asm	/^c01057b2:	00 $/;"	l
c01057b3	obj/kernel.asm	/^c01057b3:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01057ba	obj/kernel.asm	/^c01057ba:	00 $/;"	l
c01057bb	obj/kernel.asm	/^c01057bb:	c7 44 24 08 00 00 00 	movl   $0x38000000,0x8(%esp)$/;"	l
c01057c2	obj/kernel.asm	/^c01057c2:	38 $/;"	l
c01057c3	obj/kernel.asm	/^c01057c3:	c7 44 24 04 00 00 00 	movl   $0xc0000000,0x4(%esp)$/;"	l
c01057ca	obj/kernel.asm	/^c01057ca:	c0 $/;"	l
c01057cb	obj/kernel.asm	/^c01057cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01057ce	obj/kernel.asm	/^c01057ce:	e8 b4 fd ff ff       	call   c0105587 <boot_map_segment>$/;"	l
c01057d3	obj/kernel.asm	/^c01057d3:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01057d8	obj/kernel.asm	/^c01057d8:	8b 15 84 fd 1a c0    	mov    0xc01afd84,%edx$/;"	l
c01057de	obj/kernel.asm	/^c01057de:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c01057e4	obj/kernel.asm	/^c01057e4:	89 10                	mov    %edx,(%eax)$/;"	l
c01057e6	obj/kernel.asm	/^c01057e6:	e8 63 fd ff ff       	call   c010554e <enable_paging>$/;"	l
c01057eb	obj/kernel.asm	/^c01057eb:	e8 74 f7 ff ff       	call   c0104f64 <gdt_init>$/;"	l
c01057f0	obj/kernel.asm	/^c01057f0:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01057f5	obj/kernel.asm	/^c01057f5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01057fb	obj/kernel.asm	/^c01057fb:	e8 fe 0e 00 00       	call   c01066fe <check_boot_pgdir>$/;"	l
c0105800	obj/kernel.asm	/^c0105800:	e8 8b 13 00 00       	call   c0106b90 <print_pgdir>$/;"	l
c0105805	obj/kernel.asm	/^c0105805:	e8 e6 f2 ff ff       	call   c0104af0 <kmalloc_init>$/;"	l
c010580a	obj/kernel.asm	/^c010580a:	c9                   	leave  $/;"	l
c010580b	obj/kernel.asm	/^c010580b:	c3                   	ret    $/;"	l
c010580c	obj/kernel.asm	/^c010580c <get_pte>:$/;"	l
c010580c	obj/kernel.asm	/^c010580c:	55                   	push   %ebp$/;"	l
c010580d	obj/kernel.asm	/^c010580d:	89 e5                	mov    %esp,%ebp$/;"	l
c010580f	obj/kernel.asm	/^c010580f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0105812	obj/kernel.asm	/^c0105812:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105815	obj/kernel.asm	/^c0105815:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0105818	obj/kernel.asm	/^c0105818:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010581f	obj/kernel.asm	/^c010581f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105822	obj/kernel.asm	/^c0105822:	01 d0                	add    %edx,%eax$/;"	l
c0105824	obj/kernel.asm	/^c0105824:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105827	obj/kernel.asm	/^c0105827:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010582a	obj/kernel.asm	/^c010582a:	8b 00                	mov    (%eax),%eax$/;"	l
c010582c	obj/kernel.asm	/^c010582c:	83 e0 01             	and    $0x1,%eax$/;"	l
c010582f	obj/kernel.asm	/^c010582f:	85 c0                	test   %eax,%eax$/;"	l
c0105831	obj/kernel.asm	/^c0105831:	0f 85 af 00 00 00    	jne    c01058e6 <get_pte+0xda>$/;"	l
c0105837	obj/kernel.asm	/^c0105837:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010583b	obj/kernel.asm	/^c010583b:	74 15                	je     c0105852 <get_pte+0x46>$/;"	l
c010583d	obj/kernel.asm	/^c010583d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105844	obj/kernel.asm	/^c0105844:	e8 5c f8 ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c0105849	obj/kernel.asm	/^c0105849:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010584c	obj/kernel.asm	/^c010584c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0105850	obj/kernel.asm	/^c0105850:	75 0a                	jne    c010585c <get_pte+0x50>$/;"	l
c0105852	obj/kernel.asm	/^c0105852:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105857	obj/kernel.asm	/^c0105857:	e9 e6 00 00 00       	jmp    c0105942 <get_pte+0x136>$/;"	l
c010585c	obj/kernel.asm	/^c010585c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105863	obj/kernel.asm	/^c0105863:	00 $/;"	l
c0105864	obj/kernel.asm	/^c0105864:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105867	obj/kernel.asm	/^c0105867:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010586a	obj/kernel.asm	/^c010586a:	e8 3b f6 ff ff       	call   c0104eaa <set_page_ref>$/;"	l
c010586f	obj/kernel.asm	/^c010586f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105872	obj/kernel.asm	/^c0105872:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105875	obj/kernel.asm	/^c0105875:	e8 21 f5 ff ff       	call   c0104d9b <page2pa>$/;"	l
c010587a	obj/kernel.asm	/^c010587a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010587d	obj/kernel.asm	/^c010587d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105880	obj/kernel.asm	/^c0105880:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105883	obj/kernel.asm	/^c0105883:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105886	obj/kernel.asm	/^c0105886:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105889	obj/kernel.asm	/^c0105889:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010588c	obj/kernel.asm	/^c010588c:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0105891	obj/kernel.asm	/^c0105891:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0105894	obj/kernel.asm	/^c0105894:	72 23                	jb     c01058b9 <get_pte+0xad>$/;"	l
c0105896	obj/kernel.asm	/^c0105896:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105899	obj/kernel.asm	/^c0105899:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010589d	obj/kernel.asm	/^c010589d:	c7 44 24 08 2c d2 10 	movl   $0xc010d22c,0x8(%esp)$/;"	l
c01058a4	obj/kernel.asm	/^c01058a4:	c0 $/;"	l
c01058a5	obj/kernel.asm	/^c01058a5:	c7 44 24 04 97 01 00 	movl   $0x197,0x4(%esp)$/;"	l
c01058ac	obj/kernel.asm	/^c01058ac:	00 $/;"	l
c01058ad	obj/kernel.asm	/^c01058ad:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01058b4	obj/kernel.asm	/^c01058b4:	e8 21 b5 ff ff       	call   c0100dda <__panic>$/;"	l
c01058b9	obj/kernel.asm	/^c01058b9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01058bc	obj/kernel.asm	/^c01058bc:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01058c1	obj/kernel.asm	/^c01058c1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01058c8	obj/kernel.asm	/^c01058c8:	00 $/;"	l
c01058c9	obj/kernel.asm	/^c01058c9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01058d0	obj/kernel.asm	/^c01058d0:	00 $/;"	l
c01058d1	obj/kernel.asm	/^c01058d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01058d4	obj/kernel.asm	/^c01058d4:	e8 c0 69 00 00       	call   c010c299 <memset>$/;"	l
c01058d9	obj/kernel.asm	/^c01058d9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01058dc	obj/kernel.asm	/^c01058dc:	83 c8 07             	or     $0x7,%eax$/;"	l
c01058df	obj/kernel.asm	/^c01058df:	89 c2                	mov    %eax,%edx$/;"	l
c01058e1	obj/kernel.asm	/^c01058e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058e4	obj/kernel.asm	/^c01058e4:	89 10                	mov    %edx,(%eax)$/;"	l
c01058e6	obj/kernel.asm	/^c01058e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058e9	obj/kernel.asm	/^c01058e9:	8b 00                	mov    (%eax),%eax$/;"	l
c01058eb	obj/kernel.asm	/^c01058eb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01058f0	obj/kernel.asm	/^c01058f0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01058f3	obj/kernel.asm	/^c01058f3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01058f6	obj/kernel.asm	/^c01058f6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01058f9	obj/kernel.asm	/^c01058f9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01058fc	obj/kernel.asm	/^c01058fc:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0105901	obj/kernel.asm	/^c0105901:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0105904	obj/kernel.asm	/^c0105904:	72 23                	jb     c0105929 <get_pte+0x11d>$/;"	l
c0105906	obj/kernel.asm	/^c0105906:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105909	obj/kernel.asm	/^c0105909:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010590d	obj/kernel.asm	/^c010590d:	c7 44 24 08 2c d2 10 	movl   $0xc010d22c,0x8(%esp)$/;"	l
c0105914	obj/kernel.asm	/^c0105914:	c0 $/;"	l
c0105915	obj/kernel.asm	/^c0105915:	c7 44 24 04 9b 01 00 	movl   $0x19b,0x4(%esp)$/;"	l
c010591c	obj/kernel.asm	/^c010591c:	00 $/;"	l
c010591d	obj/kernel.asm	/^c010591d:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105924	obj/kernel.asm	/^c0105924:	e8 b1 b4 ff ff       	call   c0100dda <__panic>$/;"	l
c0105929	obj/kernel.asm	/^c0105929:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010592c	obj/kernel.asm	/^c010592c:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0105931	obj/kernel.asm	/^c0105931:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105934	obj/kernel.asm	/^c0105934:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0105937	obj/kernel.asm	/^c0105937:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
c010593d	obj/kernel.asm	/^c010593d:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0105940	obj/kernel.asm	/^c0105940:	01 d0                	add    %edx,%eax$/;"	l
c0105942	obj/kernel.asm	/^c0105942:	c9                   	leave  $/;"	l
c0105943	obj/kernel.asm	/^c0105943:	c3                   	ret    $/;"	l
c0105944	obj/kernel.asm	/^c0105944 <get_page>:$/;"	l
c0105944	obj/kernel.asm	/^c0105944:	55                   	push   %ebp$/;"	l
c0105945	obj/kernel.asm	/^c0105945:	89 e5                	mov    %esp,%ebp$/;"	l
c0105947	obj/kernel.asm	/^c0105947:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010594a	obj/kernel.asm	/^c010594a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105951	obj/kernel.asm	/^c0105951:	00 $/;"	l
c0105952	obj/kernel.asm	/^c0105952:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105955	obj/kernel.asm	/^c0105955:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105959	obj/kernel.asm	/^c0105959:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010595c	obj/kernel.asm	/^c010595c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010595f	obj/kernel.asm	/^c010595f:	e8 a8 fe ff ff       	call   c010580c <get_pte>$/;"	l
c0105964	obj/kernel.asm	/^c0105964:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105967	obj/kernel.asm	/^c0105967:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010596b	obj/kernel.asm	/^c010596b:	74 08                	je     c0105975 <get_page+0x31>$/;"	l
c010596d	obj/kernel.asm	/^c010596d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105970	obj/kernel.asm	/^c0105970:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105973	obj/kernel.asm	/^c0105973:	89 10                	mov    %edx,(%eax)$/;"	l
c0105975	obj/kernel.asm	/^c0105975:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105979	obj/kernel.asm	/^c0105979:	74 1b                	je     c0105996 <get_page+0x52>$/;"	l
c010597b	obj/kernel.asm	/^c010597b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010597e	obj/kernel.asm	/^c010597e:	8b 00                	mov    (%eax),%eax$/;"	l
c0105980	obj/kernel.asm	/^c0105980:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105983	obj/kernel.asm	/^c0105983:	85 c0                	test   %eax,%eax$/;"	l
c0105985	obj/kernel.asm	/^c0105985:	74 0f                	je     c0105996 <get_page+0x52>$/;"	l
c0105987	obj/kernel.asm	/^c0105987:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010598a	obj/kernel.asm	/^c010598a:	8b 00                	mov    (%eax),%eax$/;"	l
c010598c	obj/kernel.asm	/^c010598c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010598f	obj/kernel.asm	/^c010598f:	e8 1d f4 ff ff       	call   c0104db1 <pa2page>$/;"	l
c0105994	obj/kernel.asm	/^c0105994:	eb 05                	jmp    c010599b <get_page+0x57>$/;"	l
c0105996	obj/kernel.asm	/^c0105996:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010599b	obj/kernel.asm	/^c010599b:	c9                   	leave  $/;"	l
c010599c	obj/kernel.asm	/^c010599c:	c3                   	ret    $/;"	l
c010599d	obj/kernel.asm	/^c010599d <page_remove_pte>:$/;"	l
c010599d	obj/kernel.asm	/^c010599d:	55                   	push   %ebp$/;"	l
c010599e	obj/kernel.asm	/^c010599e:	89 e5                	mov    %esp,%ebp$/;"	l
c01059a0	obj/kernel.asm	/^c01059a0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01059a3	obj/kernel.asm	/^c01059a3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01059a6	obj/kernel.asm	/^c01059a6:	8b 00                	mov    (%eax),%eax$/;"	l
c01059a8	obj/kernel.asm	/^c01059a8:	83 e0 01             	and    $0x1,%eax$/;"	l
c01059ab	obj/kernel.asm	/^c01059ab:	85 c0                	test   %eax,%eax$/;"	l
c01059ad	obj/kernel.asm	/^c01059ad:	74 4d                	je     c01059fc <page_remove_pte+0x5f>$/;"	l
c01059af	obj/kernel.asm	/^c01059af:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01059b2	obj/kernel.asm	/^c01059b2:	8b 00                	mov    (%eax),%eax$/;"	l
c01059b4	obj/kernel.asm	/^c01059b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059b7	obj/kernel.asm	/^c01059b7:	e8 8e f4 ff ff       	call   c0104e4a <pte2page>$/;"	l
c01059bc	obj/kernel.asm	/^c01059bc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01059bf	obj/kernel.asm	/^c01059bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01059c2	obj/kernel.asm	/^c01059c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059c5	obj/kernel.asm	/^c01059c5:	e8 04 f5 ff ff       	call   c0104ece <page_ref_dec>$/;"	l
c01059ca	obj/kernel.asm	/^c01059ca:	85 c0                	test   %eax,%eax$/;"	l
c01059cc	obj/kernel.asm	/^c01059cc:	75 13                	jne    c01059e1 <page_remove_pte+0x44>$/;"	l
c01059ce	obj/kernel.asm	/^c01059ce:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01059d5	obj/kernel.asm	/^c01059d5:	00 $/;"	l
c01059d6	obj/kernel.asm	/^c01059d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01059d9	obj/kernel.asm	/^c01059d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059dc	obj/kernel.asm	/^c01059dc:	e8 2f f7 ff ff       	call   c0105110 <free_pages>$/;"	l
c01059e1	obj/kernel.asm	/^c01059e1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01059e4	obj/kernel.asm	/^c01059e4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01059ea	obj/kernel.asm	/^c01059ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01059ed	obj/kernel.asm	/^c01059ed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01059f1	obj/kernel.asm	/^c01059f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01059f4	obj/kernel.asm	/^c01059f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059f7	obj/kernel.asm	/^c01059f7:	e8 18 05 00 00       	call   c0105f14 <tlb_invalidate>$/;"	l
c01059fc	obj/kernel.asm	/^c01059fc:	c9                   	leave  $/;"	l
c01059fd	obj/kernel.asm	/^c01059fd:	c3                   	ret    $/;"	l
c01059fe	obj/kernel.asm	/^c01059fe <unmap_range>:$/;"	l
c01059fe	obj/kernel.asm	/^c01059fe:	55                   	push   %ebp$/;"	l
c01059ff	obj/kernel.asm	/^c01059ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0105a01	obj/kernel.asm	/^c0105a01:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105a04	obj/kernel.asm	/^c0105a04:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a07	obj/kernel.asm	/^c0105a07:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105a0c	obj/kernel.asm	/^c0105a0c:	85 c0                	test   %eax,%eax$/;"	l
c0105a0e	obj/kernel.asm	/^c0105a0e:	75 0c                	jne    c0105a1c <unmap_range+0x1e>$/;"	l
c0105a10	obj/kernel.asm	/^c0105a10:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105a13	obj/kernel.asm	/^c0105a13:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105a18	obj/kernel.asm	/^c0105a18:	85 c0                	test   %eax,%eax$/;"	l
c0105a1a	obj/kernel.asm	/^c0105a1a:	74 24                	je     c0105a40 <unmap_range+0x42>$/;"	l
c0105a1c	obj/kernel.asm	/^c0105a1c:	c7 44 24 0c 54 d3 10 	movl   $0xc010d354,0xc(%esp)$/;"	l
c0105a23	obj/kernel.asm	/^c0105a23:	c0 $/;"	l
c0105a24	obj/kernel.asm	/^c0105a24:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105a2b	obj/kernel.asm	/^c0105a2b:	c0 $/;"	l
c0105a2c	obj/kernel.asm	/^c0105a2c:	c7 44 24 04 d5 01 00 	movl   $0x1d5,0x4(%esp)$/;"	l
c0105a33	obj/kernel.asm	/^c0105a33:	00 $/;"	l
c0105a34	obj/kernel.asm	/^c0105a34:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105a3b	obj/kernel.asm	/^c0105a3b:	e8 9a b3 ff ff       	call   c0100dda <__panic>$/;"	l
c0105a40	obj/kernel.asm	/^c0105a40:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0105a47	obj/kernel.asm	/^c0105a47:	76 11                	jbe    c0105a5a <unmap_range+0x5c>$/;"	l
c0105a49	obj/kernel.asm	/^c0105a49:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a4c	obj/kernel.asm	/^c0105a4c:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105a4f	obj/kernel.asm	/^c0105a4f:	73 09                	jae    c0105a5a <unmap_range+0x5c>$/;"	l
c0105a51	obj/kernel.asm	/^c0105a51:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0105a58	obj/kernel.asm	/^c0105a58:	76 24                	jbe    c0105a7e <unmap_range+0x80>$/;"	l
c0105a5a	obj/kernel.asm	/^c0105a5a:	c7 44 24 0c 7d d3 10 	movl   $0xc010d37d,0xc(%esp)$/;"	l
c0105a61	obj/kernel.asm	/^c0105a61:	c0 $/;"	l
c0105a62	obj/kernel.asm	/^c0105a62:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105a69	obj/kernel.asm	/^c0105a69:	c0 $/;"	l
c0105a6a	obj/kernel.asm	/^c0105a6a:	c7 44 24 04 d6 01 00 	movl   $0x1d6,0x4(%esp)$/;"	l
c0105a71	obj/kernel.asm	/^c0105a71:	00 $/;"	l
c0105a72	obj/kernel.asm	/^c0105a72:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105a79	obj/kernel.asm	/^c0105a79:	e8 5c b3 ff ff       	call   c0100dda <__panic>$/;"	l
c0105a7e	obj/kernel.asm	/^c0105a7e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105a85	obj/kernel.asm	/^c0105a85:	00 $/;"	l
c0105a86	obj/kernel.asm	/^c0105a86:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a89	obj/kernel.asm	/^c0105a89:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105a8d	obj/kernel.asm	/^c0105a8d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105a90	obj/kernel.asm	/^c0105a90:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a93	obj/kernel.asm	/^c0105a93:	e8 74 fd ff ff       	call   c010580c <get_pte>$/;"	l
c0105a98	obj/kernel.asm	/^c0105a98:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a9b	obj/kernel.asm	/^c0105a9b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105a9f	obj/kernel.asm	/^c0105a9f:	75 18                	jne    c0105ab9 <unmap_range+0xbb>$/;"	l
c0105aa1	obj/kernel.asm	/^c0105aa1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105aa4	obj/kernel.asm	/^c0105aa4:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105aa9	obj/kernel.asm	/^c0105aa9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105aac	obj/kernel.asm	/^c0105aac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105aaf	obj/kernel.asm	/^c0105aaf:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105ab4	obj/kernel.asm	/^c0105ab4:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105ab7	obj/kernel.asm	/^c0105ab7:	eb 29                	jmp    c0105ae2 <unmap_range+0xe4>$/;"	l
c0105ab9	obj/kernel.asm	/^c0105ab9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	8b 00                	mov    (%eax),%eax$/;"	l
c0105abe	obj/kernel.asm	/^c0105abe:	85 c0                	test   %eax,%eax$/;"	l
c0105ac0	obj/kernel.asm	/^c0105ac0:	74 19                	je     c0105adb <unmap_range+0xdd>$/;"	l
c0105ac2	obj/kernel.asm	/^c0105ac2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ac5	obj/kernel.asm	/^c0105ac5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105ac9	obj/kernel.asm	/^c0105ac9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105acc	obj/kernel.asm	/^c0105acc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105ad0	obj/kernel.asm	/^c0105ad0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105ad3	obj/kernel.asm	/^c0105ad3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ad6	obj/kernel.asm	/^c0105ad6:	e8 c2 fe ff ff       	call   c010599d <page_remove_pte>$/;"	l
c0105adb	obj/kernel.asm	/^c0105adb:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0105ae2	obj/kernel.asm	/^c0105ae2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105ae6	obj/kernel.asm	/^c0105ae6:	74 08                	je     c0105af0 <unmap_range+0xf2>$/;"	l
c0105ae8	obj/kernel.asm	/^c0105ae8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105aeb	obj/kernel.asm	/^c0105aeb:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105aee	obj/kernel.asm	/^c0105aee:	72 8e                	jb     c0105a7e <unmap_range+0x80>$/;"	l
c0105af0	obj/kernel.asm	/^c0105af0:	c9                   	leave  $/;"	l
c0105af1	obj/kernel.asm	/^c0105af1:	c3                   	ret    $/;"	l
c0105af2	obj/kernel.asm	/^c0105af2 <exit_range>:$/;"	l
c0105af2	obj/kernel.asm	/^c0105af2:	55                   	push   %ebp$/;"	l
c0105af3	obj/kernel.asm	/^c0105af3:	89 e5                	mov    %esp,%ebp$/;"	l
c0105af5	obj/kernel.asm	/^c0105af5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105af8	obj/kernel.asm	/^c0105af8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105afb	obj/kernel.asm	/^c0105afb:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105b00	obj/kernel.asm	/^c0105b00:	85 c0                	test   %eax,%eax$/;"	l
c0105b02	obj/kernel.asm	/^c0105b02:	75 0c                	jne    c0105b10 <exit_range+0x1e>$/;"	l
c0105b04	obj/kernel.asm	/^c0105b04:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105b07	obj/kernel.asm	/^c0105b07:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105b0c	obj/kernel.asm	/^c0105b0c:	85 c0                	test   %eax,%eax$/;"	l
c0105b0e	obj/kernel.asm	/^c0105b0e:	74 24                	je     c0105b34 <exit_range+0x42>$/;"	l
c0105b10	obj/kernel.asm	/^c0105b10:	c7 44 24 0c 54 d3 10 	movl   $0xc010d354,0xc(%esp)$/;"	l
c0105b17	obj/kernel.asm	/^c0105b17:	c0 $/;"	l
c0105b18	obj/kernel.asm	/^c0105b18:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105b1f	obj/kernel.asm	/^c0105b1f:	c0 $/;"	l
c0105b20	obj/kernel.asm	/^c0105b20:	c7 44 24 04 e7 01 00 	movl   $0x1e7,0x4(%esp)$/;"	l
c0105b27	obj/kernel.asm	/^c0105b27:	00 $/;"	l
c0105b28	obj/kernel.asm	/^c0105b28:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105b2f	obj/kernel.asm	/^c0105b2f:	e8 a6 b2 ff ff       	call   c0100dda <__panic>$/;"	l
c0105b34	obj/kernel.asm	/^c0105b34:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0105b3b	obj/kernel.asm	/^c0105b3b:	76 11                	jbe    c0105b4e <exit_range+0x5c>$/;"	l
c0105b3d	obj/kernel.asm	/^c0105b3d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b40	obj/kernel.asm	/^c0105b40:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105b43	obj/kernel.asm	/^c0105b43:	73 09                	jae    c0105b4e <exit_range+0x5c>$/;"	l
c0105b45	obj/kernel.asm	/^c0105b45:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0105b4c	obj/kernel.asm	/^c0105b4c:	76 24                	jbe    c0105b72 <exit_range+0x80>$/;"	l
c0105b4e	obj/kernel.asm	/^c0105b4e:	c7 44 24 0c 7d d3 10 	movl   $0xc010d37d,0xc(%esp)$/;"	l
c0105b55	obj/kernel.asm	/^c0105b55:	c0 $/;"	l
c0105b56	obj/kernel.asm	/^c0105b56:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105b5d	obj/kernel.asm	/^c0105b5d:	c0 $/;"	l
c0105b5e	obj/kernel.asm	/^c0105b5e:	c7 44 24 04 e8 01 00 	movl   $0x1e8,0x4(%esp)$/;"	l
c0105b65	obj/kernel.asm	/^c0105b65:	00 $/;"	l
c0105b66	obj/kernel.asm	/^c0105b66:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105b6d	obj/kernel.asm	/^c0105b6d:	e8 68 b2 ff ff       	call   c0100dda <__panic>$/;"	l
c0105b72	obj/kernel.asm	/^c0105b72:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b75	obj/kernel.asm	/^c0105b75:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105b78	obj/kernel.asm	/^c0105b78:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b7b	obj/kernel.asm	/^c0105b7b:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105b80	obj/kernel.asm	/^c0105b80:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105b83	obj/kernel.asm	/^c0105b83:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b86	obj/kernel.asm	/^c0105b86:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0105b89	obj/kernel.asm	/^c0105b89:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b8c	obj/kernel.asm	/^c0105b8c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b8f	obj/kernel.asm	/^c0105b8f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105b96	obj/kernel.asm	/^c0105b96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105b99	obj/kernel.asm	/^c0105b99:	01 d0                	add    %edx,%eax$/;"	l
c0105b9b	obj/kernel.asm	/^c0105b9b:	8b 00                	mov    (%eax),%eax$/;"	l
c0105b9d	obj/kernel.asm	/^c0105b9d:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105ba0	obj/kernel.asm	/^c0105ba0:	85 c0                	test   %eax,%eax$/;"	l
c0105ba2	obj/kernel.asm	/^c0105ba2:	74 3e                	je     c0105be2 <exit_range+0xf0>$/;"	l
c0105ba4	obj/kernel.asm	/^c0105ba4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105ba7	obj/kernel.asm	/^c0105ba7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105bae	obj/kernel.asm	/^c0105bae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105bb1	obj/kernel.asm	/^c0105bb1:	01 d0                	add    %edx,%eax$/;"	l
c0105bb3	obj/kernel.asm	/^c0105bb3:	8b 00                	mov    (%eax),%eax$/;"	l
c0105bb5	obj/kernel.asm	/^c0105bb5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105bb8	obj/kernel.asm	/^c0105bb8:	e8 cb f2 ff ff       	call   c0104e88 <pde2page>$/;"	l
c0105bbd	obj/kernel.asm	/^c0105bbd:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105bc4	obj/kernel.asm	/^c0105bc4:	00 $/;"	l
c0105bc5	obj/kernel.asm	/^c0105bc5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105bc8	obj/kernel.asm	/^c0105bc8:	e8 43 f5 ff ff       	call   c0105110 <free_pages>$/;"	l
c0105bcd	obj/kernel.asm	/^c0105bcd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105bd0	obj/kernel.asm	/^c0105bd0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105bd7	obj/kernel.asm	/^c0105bd7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105bda	obj/kernel.asm	/^c0105bda:	01 d0                	add    %edx,%eax$/;"	l
c0105bdc	obj/kernel.asm	/^c0105bdc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105be2	obj/kernel.asm	/^c0105be2:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c0105be9	obj/kernel.asm	/^c0105be9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105bed	obj/kernel.asm	/^c0105bed:	74 08                	je     c0105bf7 <exit_range+0x105>$/;"	l
c0105bef	obj/kernel.asm	/^c0105bef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105bf2	obj/kernel.asm	/^c0105bf2:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105bf5	obj/kernel.asm	/^c0105bf5:	72 8c                	jb     c0105b83 <exit_range+0x91>$/;"	l
c0105bf7	obj/kernel.asm	/^c0105bf7:	c9                   	leave  $/;"	l
c0105bf8	obj/kernel.asm	/^c0105bf8:	c3                   	ret    $/;"	l
c0105bf9	obj/kernel.asm	/^c0105bf9 <copy_range>:$/;"	l
c0105bf9	obj/kernel.asm	/^c0105bf9:	55                   	push   %ebp$/;"	l
c0105bfa	obj/kernel.asm	/^c0105bfa:	89 e5                	mov    %esp,%ebp$/;"	l
c0105bfc	obj/kernel.asm	/^c0105bfc:	53                   	push   %ebx$/;"	l
c0105bfd	obj/kernel.asm	/^c0105bfd:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0105c00	obj/kernel.asm	/^c0105c00:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105c03	obj/kernel.asm	/^c0105c03:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105c08	obj/kernel.asm	/^c0105c08:	85 c0                	test   %eax,%eax$/;"	l
c0105c0a	obj/kernel.asm	/^c0105c0a:	75 0c                	jne    c0105c18 <copy_range+0x1f>$/;"	l
c0105c0c	obj/kernel.asm	/^c0105c0c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105c0f	obj/kernel.asm	/^c0105c0f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105c14	obj/kernel.asm	/^c0105c14:	85 c0                	test   %eax,%eax$/;"	l
c0105c16	obj/kernel.asm	/^c0105c16:	74 24                	je     c0105c3c <copy_range+0x43>$/;"	l
c0105c18	obj/kernel.asm	/^c0105c18:	c7 44 24 0c 54 d3 10 	movl   $0xc010d354,0xc(%esp)$/;"	l
c0105c1f	obj/kernel.asm	/^c0105c1f:	c0 $/;"	l
c0105c20	obj/kernel.asm	/^c0105c20:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105c27	obj/kernel.asm	/^c0105c27:	c0 $/;"	l
c0105c28	obj/kernel.asm	/^c0105c28:	c7 44 24 04 fd 01 00 	movl   $0x1fd,0x4(%esp)$/;"	l
c0105c2f	obj/kernel.asm	/^c0105c2f:	00 $/;"	l
c0105c30	obj/kernel.asm	/^c0105c30:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105c37	obj/kernel.asm	/^c0105c37:	e8 9e b1 ff ff       	call   c0100dda <__panic>$/;"	l
c0105c3c	obj/kernel.asm	/^c0105c3c:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c0105c43	obj/kernel.asm	/^c0105c43:	76 11                	jbe    c0105c56 <copy_range+0x5d>$/;"	l
c0105c45	obj/kernel.asm	/^c0105c45:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105c48	obj/kernel.asm	/^c0105c48:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105c4b	obj/kernel.asm	/^c0105c4b:	73 09                	jae    c0105c56 <copy_range+0x5d>$/;"	l
c0105c4d	obj/kernel.asm	/^c0105c4d:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c0105c54	obj/kernel.asm	/^c0105c54:	76 24                	jbe    c0105c7a <copy_range+0x81>$/;"	l
c0105c56	obj/kernel.asm	/^c0105c56:	c7 44 24 0c 7d d3 10 	movl   $0xc010d37d,0xc(%esp)$/;"	l
c0105c5d	obj/kernel.asm	/^c0105c5d:	c0 $/;"	l
c0105c5e	obj/kernel.asm	/^c0105c5e:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105c65	obj/kernel.asm	/^c0105c65:	c0 $/;"	l
c0105c66	obj/kernel.asm	/^c0105c66:	c7 44 24 04 fe 01 00 	movl   $0x1fe,0x4(%esp)$/;"	l
c0105c6d	obj/kernel.asm	/^c0105c6d:	00 $/;"	l
c0105c6e	obj/kernel.asm	/^c0105c6e:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105c75	obj/kernel.asm	/^c0105c75:	e8 60 b1 ff ff       	call   c0100dda <__panic>$/;"	l
c0105c7a	obj/kernel.asm	/^c0105c7a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105c81	obj/kernel.asm	/^c0105c81:	00 $/;"	l
c0105c82	obj/kernel.asm	/^c0105c82:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105c85	obj/kernel.asm	/^c0105c85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105c89	obj/kernel.asm	/^c0105c89:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105c8c	obj/kernel.asm	/^c0105c8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c8f	obj/kernel.asm	/^c0105c8f:	e8 78 fb ff ff       	call   c010580c <get_pte>$/;"	l
c0105c94	obj/kernel.asm	/^c0105c94:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105c97	obj/kernel.asm	/^c0105c97:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105c9b	obj/kernel.asm	/^c0105c9b:	75 1b                	jne    c0105cb8 <copy_range+0xbf>$/;"	l
c0105c9d	obj/kernel.asm	/^c0105c9d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105ca0	obj/kernel.asm	/^c0105ca0:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105ca5	obj/kernel.asm	/^c0105ca5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105ca8	obj/kernel.asm	/^c0105ca8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105cab	obj/kernel.asm	/^c0105cab:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105cb0	obj/kernel.asm	/^c0105cb0:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0105cb3	obj/kernel.asm	/^c0105cb3:	e9 42 01 00 00       	jmp    c0105dfa <copy_range+0x201>$/;"	l
c0105cb8	obj/kernel.asm	/^c0105cb8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105cbb	obj/kernel.asm	/^c0105cbb:	8b 00                	mov    (%eax),%eax$/;"	l
c0105cbd	obj/kernel.asm	/^c0105cbd:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105cc0	obj/kernel.asm	/^c0105cc0:	85 c0                	test   %eax,%eax$/;"	l
c0105cc2	obj/kernel.asm	/^c0105cc2:	0f 84 2b 01 00 00    	je     c0105df3 <copy_range+0x1fa>$/;"	l
c0105cc8	obj/kernel.asm	/^c0105cc8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105ccf	obj/kernel.asm	/^c0105ccf:	00 $/;"	l
c0105cd0	obj/kernel.asm	/^c0105cd0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105cd3	obj/kernel.asm	/^c0105cd3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105cd7	obj/kernel.asm	/^c0105cd7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105cda	obj/kernel.asm	/^c0105cda:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105cdd	obj/kernel.asm	/^c0105cdd:	e8 2a fb ff ff       	call   c010580c <get_pte>$/;"	l
c0105ce2	obj/kernel.asm	/^c0105ce2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105ce5	obj/kernel.asm	/^c0105ce5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0105ce9	obj/kernel.asm	/^c0105ce9:	75 0a                	jne    c0105cf5 <copy_range+0xfc>$/;"	l
c0105ceb	obj/kernel.asm	/^c0105ceb:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105cf0	obj/kernel.asm	/^c0105cf0:	e9 1c 01 00 00       	jmp    c0105e11 <copy_range+0x218>$/;"	l
c0105cf5	obj/kernel.asm	/^c0105cf5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105cf8	obj/kernel.asm	/^c0105cf8:	8b 00                	mov    (%eax),%eax$/;"	l
c0105cfa	obj/kernel.asm	/^c0105cfa:	83 e0 07             	and    $0x7,%eax$/;"	l
c0105cfd	obj/kernel.asm	/^c0105cfd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105d00	obj/kernel.asm	/^c0105d00:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d03	obj/kernel.asm	/^c0105d03:	8b 00                	mov    (%eax),%eax$/;"	l
c0105d05	obj/kernel.asm	/^c0105d05:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d08	obj/kernel.asm	/^c0105d08:	e8 3d f1 ff ff       	call   c0104e4a <pte2page>$/;"	l
c0105d0d	obj/kernel.asm	/^c0105d0d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105d10	obj/kernel.asm	/^c0105d10:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105d17	obj/kernel.asm	/^c0105d17:	e8 89 f3 ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c0105d1c	obj/kernel.asm	/^c0105d1c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105d1f	obj/kernel.asm	/^c0105d1f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105d23	obj/kernel.asm	/^c0105d23:	75 24                	jne    c0105d49 <copy_range+0x150>$/;"	l
c0105d25	obj/kernel.asm	/^c0105d25:	c7 44 24 0c 95 d3 10 	movl   $0xc010d395,0xc(%esp)$/;"	l
c0105d2c	obj/kernel.asm	/^c0105d2c:	c0 $/;"	l
c0105d2d	obj/kernel.asm	/^c0105d2d:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105d34	obj/kernel.asm	/^c0105d34:	c0 $/;"	l
c0105d35	obj/kernel.asm	/^c0105d35:	c7 44 24 04 11 02 00 	movl   $0x211,0x4(%esp)$/;"	l
c0105d3c	obj/kernel.asm	/^c0105d3c:	00 $/;"	l
c0105d3d	obj/kernel.asm	/^c0105d3d:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105d44	obj/kernel.asm	/^c0105d44:	e8 91 b0 ff ff       	call   c0100dda <__panic>$/;"	l
c0105d49	obj/kernel.asm	/^c0105d49:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105d4d	obj/kernel.asm	/^c0105d4d:	75 24                	jne    c0105d73 <copy_range+0x17a>$/;"	l
c0105d4f	obj/kernel.asm	/^c0105d4f:	c7 44 24 0c a0 d3 10 	movl   $0xc010d3a0,0xc(%esp)$/;"	l
c0105d56	obj/kernel.asm	/^c0105d56:	c0 $/;"	l
c0105d57	obj/kernel.asm	/^c0105d57:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105d5e	obj/kernel.asm	/^c0105d5e:	c0 $/;"	l
c0105d5f	obj/kernel.asm	/^c0105d5f:	c7 44 24 04 12 02 00 	movl   $0x212,0x4(%esp)$/;"	l
c0105d66	obj/kernel.asm	/^c0105d66:	00 $/;"	l
c0105d67	obj/kernel.asm	/^c0105d67:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105d6e	obj/kernel.asm	/^c0105d6e:	e8 67 b0 ff ff       	call   c0100dda <__panic>$/;"	l
c0105d73	obj/kernel.asm	/^c0105d73:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105d7a	obj/kernel.asm	/^c0105d7a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105d7d	obj/kernel.asm	/^c0105d7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d80	obj/kernel.asm	/^c0105d80:	e8 71 f0 ff ff       	call   c0104df6 <page2kva>$/;"	l
c0105d85	obj/kernel.asm	/^c0105d85:	89 c3                	mov    %eax,%ebx$/;"	l
c0105d87	obj/kernel.asm	/^c0105d87:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105d8a	obj/kernel.asm	/^c0105d8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d8d	obj/kernel.asm	/^c0105d8d:	e8 64 f0 ff ff       	call   c0104df6 <page2kva>$/;"	l
c0105d92	obj/kernel.asm	/^c0105d92:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0105d99	obj/kernel.asm	/^c0105d99:	00 $/;"	l
c0105d9a	obj/kernel.asm	/^c0105d9a:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0105d9e	obj/kernel.asm	/^c0105d9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105da1	obj/kernel.asm	/^c0105da1:	e8 d5 65 00 00       	call   c010c37b <memcpy>$/;"	l
c0105da6	obj/kernel.asm	/^c0105da6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105da9	obj/kernel.asm	/^c0105da9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105dad	obj/kernel.asm	/^c0105dad:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105db0	obj/kernel.asm	/^c0105db0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105db4	obj/kernel.asm	/^c0105db4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105db7	obj/kernel.asm	/^c0105db7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105dbb	obj/kernel.asm	/^c0105dbb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105dbe	obj/kernel.asm	/^c0105dbe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105dc1	obj/kernel.asm	/^c0105dc1:	e8 95 00 00 00       	call   c0105e5b <page_insert>$/;"	l
c0105dc6	obj/kernel.asm	/^c0105dc6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105dc9	obj/kernel.asm	/^c0105dc9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105dcd	obj/kernel.asm	/^c0105dcd:	74 24                	je     c0105df3 <copy_range+0x1fa>$/;"	l
c0105dcf	obj/kernel.asm	/^c0105dcf:	c7 44 24 0c ac d3 10 	movl   $0xc010d3ac,0xc(%esp)$/;"	l
c0105dd6	obj/kernel.asm	/^c0105dd6:	c0 $/;"	l
c0105dd7	obj/kernel.asm	/^c0105dd7:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0105dde	obj/kernel.asm	/^c0105dde:	c0 $/;"	l
c0105ddf	obj/kernel.asm	/^c0105ddf:	c7 44 24 04 26 02 00 	movl   $0x226,0x4(%esp)$/;"	l
c0105de6	obj/kernel.asm	/^c0105de6:	00 $/;"	l
c0105de7	obj/kernel.asm	/^c0105de7:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105dee	obj/kernel.asm	/^c0105dee:	e8 e7 af ff ff       	call   c0100dda <__panic>$/;"	l
c0105df3	obj/kernel.asm	/^c0105df3:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c0105dfa	obj/kernel.asm	/^c0105dfa:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0105dfe	obj/kernel.asm	/^c0105dfe:	74 0c                	je     c0105e0c <copy_range+0x213>$/;"	l
c0105e00	obj/kernel.asm	/^c0105e00:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105e03	obj/kernel.asm	/^c0105e03:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105e06	obj/kernel.asm	/^c0105e06:	0f 82 6e fe ff ff    	jb     c0105c7a <copy_range+0x81>$/;"	l
c0105e0c	obj/kernel.asm	/^c0105e0c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105e11	obj/kernel.asm	/^c0105e11:	83 c4 34             	add    $0x34,%esp$/;"	l
c0105e14	obj/kernel.asm	/^c0105e14:	5b                   	pop    %ebx$/;"	l
c0105e15	obj/kernel.asm	/^c0105e15:	5d                   	pop    %ebp$/;"	l
c0105e16	obj/kernel.asm	/^c0105e16:	c3                   	ret    $/;"	l
c0105e17	obj/kernel.asm	/^c0105e17 <page_remove>:$/;"	l
c0105e17	obj/kernel.asm	/^c0105e17:	55                   	push   %ebp$/;"	l
c0105e18	obj/kernel.asm	/^c0105e18:	89 e5                	mov    %esp,%ebp$/;"	l
c0105e1a	obj/kernel.asm	/^c0105e1a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105e1d	obj/kernel.asm	/^c0105e1d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105e24	obj/kernel.asm	/^c0105e24:	00 $/;"	l
c0105e25	obj/kernel.asm	/^c0105e25:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105e28	obj/kernel.asm	/^c0105e28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e2c	obj/kernel.asm	/^c0105e2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e2f	obj/kernel.asm	/^c0105e2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e32	obj/kernel.asm	/^c0105e32:	e8 d5 f9 ff ff       	call   c010580c <get_pte>$/;"	l
c0105e37	obj/kernel.asm	/^c0105e37:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105e3a	obj/kernel.asm	/^c0105e3a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105e3e	obj/kernel.asm	/^c0105e3e:	74 19                	je     c0105e59 <page_remove+0x42>$/;"	l
c0105e40	obj/kernel.asm	/^c0105e40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105e43	obj/kernel.asm	/^c0105e43:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105e47	obj/kernel.asm	/^c0105e47:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105e4a	obj/kernel.asm	/^c0105e4a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e4e	obj/kernel.asm	/^c0105e4e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e51	obj/kernel.asm	/^c0105e51:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e54	obj/kernel.asm	/^c0105e54:	e8 44 fb ff ff       	call   c010599d <page_remove_pte>$/;"	l
c0105e59	obj/kernel.asm	/^c0105e59:	c9                   	leave  $/;"	l
c0105e5a	obj/kernel.asm	/^c0105e5a:	c3                   	ret    $/;"	l
c0105e5b	obj/kernel.asm	/^c0105e5b <page_insert>:$/;"	l
c0105e5b	obj/kernel.asm	/^c0105e5b:	55                   	push   %ebp$/;"	l
c0105e5c	obj/kernel.asm	/^c0105e5c:	89 e5                	mov    %esp,%ebp$/;"	l
c0105e5e	obj/kernel.asm	/^c0105e5e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105e61	obj/kernel.asm	/^c0105e61:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105e68	obj/kernel.asm	/^c0105e68:	00 $/;"	l
c0105e69	obj/kernel.asm	/^c0105e69:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105e6c	obj/kernel.asm	/^c0105e6c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e70	obj/kernel.asm	/^c0105e70:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e73	obj/kernel.asm	/^c0105e73:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e76	obj/kernel.asm	/^c0105e76:	e8 91 f9 ff ff       	call   c010580c <get_pte>$/;"	l
c0105e7b	obj/kernel.asm	/^c0105e7b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105e7e	obj/kernel.asm	/^c0105e7e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105e82	obj/kernel.asm	/^c0105e82:	75 0a                	jne    c0105e8e <page_insert+0x33>$/;"	l
c0105e84	obj/kernel.asm	/^c0105e84:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105e89	obj/kernel.asm	/^c0105e89:	e9 84 00 00 00       	jmp    c0105f12 <page_insert+0xb7>$/;"	l
c0105e8e	obj/kernel.asm	/^c0105e8e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105e91	obj/kernel.asm	/^c0105e91:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e94	obj/kernel.asm	/^c0105e94:	e8 1e f0 ff ff       	call   c0104eb7 <page_ref_inc>$/;"	l
c0105e99	obj/kernel.asm	/^c0105e99:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105e9c	obj/kernel.asm	/^c0105e9c:	8b 00                	mov    (%eax),%eax$/;"	l
c0105e9e	obj/kernel.asm	/^c0105e9e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105ea1	obj/kernel.asm	/^c0105ea1:	85 c0                	test   %eax,%eax$/;"	l
c0105ea3	obj/kernel.asm	/^c0105ea3:	74 3e                	je     c0105ee3 <page_insert+0x88>$/;"	l
c0105ea5	obj/kernel.asm	/^c0105ea5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ea8	obj/kernel.asm	/^c0105ea8:	8b 00                	mov    (%eax),%eax$/;"	l
c0105eaa	obj/kernel.asm	/^c0105eaa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ead	obj/kernel.asm	/^c0105ead:	e8 98 ef ff ff       	call   c0104e4a <pte2page>$/;"	l
c0105eb2	obj/kernel.asm	/^c0105eb2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105eb5	obj/kernel.asm	/^c0105eb5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105eb8	obj/kernel.asm	/^c0105eb8:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105ebb	obj/kernel.asm	/^c0105ebb:	75 0d                	jne    c0105eca <page_insert+0x6f>$/;"	l
c0105ebd	obj/kernel.asm	/^c0105ebd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105ec0	obj/kernel.asm	/^c0105ec0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ec3	obj/kernel.asm	/^c0105ec3:	e8 06 f0 ff ff       	call   c0104ece <page_ref_dec>$/;"	l
c0105ec8	obj/kernel.asm	/^c0105ec8:	eb 19                	jmp    c0105ee3 <page_insert+0x88>$/;"	l
c0105eca	obj/kernel.asm	/^c0105eca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ecd	obj/kernel.asm	/^c0105ecd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105ed1	obj/kernel.asm	/^c0105ed1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105ed4	obj/kernel.asm	/^c0105ed4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105ed8	obj/kernel.asm	/^c0105ed8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105edb	obj/kernel.asm	/^c0105edb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ede	obj/kernel.asm	/^c0105ede:	e8 ba fa ff ff       	call   c010599d <page_remove_pte>$/;"	l
c0105ee3	obj/kernel.asm	/^c0105ee3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105ee6	obj/kernel.asm	/^c0105ee6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ee9	obj/kernel.asm	/^c0105ee9:	e8 ad ee ff ff       	call   c0104d9b <page2pa>$/;"	l
c0105eee	obj/kernel.asm	/^c0105eee:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c0105ef1	obj/kernel.asm	/^c0105ef1:	83 c8 01             	or     $0x1,%eax$/;"	l
c0105ef4	obj/kernel.asm	/^c0105ef4:	89 c2                	mov    %eax,%edx$/;"	l
c0105ef6	obj/kernel.asm	/^c0105ef6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ef9	obj/kernel.asm	/^c0105ef9:	89 10                	mov    %edx,(%eax)$/;"	l
c0105efb	obj/kernel.asm	/^c0105efb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105efe	obj/kernel.asm	/^c0105efe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105f02	obj/kernel.asm	/^c0105f02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105f05	obj/kernel.asm	/^c0105f05:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f08	obj/kernel.asm	/^c0105f08:	e8 07 00 00 00       	call   c0105f14 <tlb_invalidate>$/;"	l
c0105f0d	obj/kernel.asm	/^c0105f0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105f12	obj/kernel.asm	/^c0105f12:	c9                   	leave  $/;"	l
c0105f13	obj/kernel.asm	/^c0105f13:	c3                   	ret    $/;"	l
c0105f14	obj/kernel.asm	/^c0105f14 <tlb_invalidate>:$/;"	l
c0105f14	obj/kernel.asm	/^c0105f14:	55                   	push   %ebp$/;"	l
c0105f15	obj/kernel.asm	/^c0105f15:	89 e5                	mov    %esp,%ebp$/;"	l
c0105f17	obj/kernel.asm	/^c0105f17:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105f1a	obj/kernel.asm	/^c0105f1a:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c0105f1d	obj/kernel.asm	/^c0105f1d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105f20	obj/kernel.asm	/^c0105f20:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105f23	obj/kernel.asm	/^c0105f23:	89 c2                	mov    %eax,%edx$/;"	l
c0105f25	obj/kernel.asm	/^c0105f25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105f28	obj/kernel.asm	/^c0105f28:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105f2b	obj/kernel.asm	/^c0105f2b:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0105f32	obj/kernel.asm	/^c0105f32:	77 23                	ja     c0105f57 <tlb_invalidate+0x43>$/;"	l
c0105f34	obj/kernel.asm	/^c0105f34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f37	obj/kernel.asm	/^c0105f37:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105f3b	obj/kernel.asm	/^c0105f3b:	c7 44 24 08 d0 d2 10 	movl   $0xc010d2d0,0x8(%esp)$/;"	l
c0105f42	obj/kernel.asm	/^c0105f42:	c0 $/;"	l
c0105f43	obj/kernel.asm	/^c0105f43:	c7 44 24 04 57 02 00 	movl   $0x257,0x4(%esp)$/;"	l
c0105f4a	obj/kernel.asm	/^c0105f4a:	00 $/;"	l
c0105f4b	obj/kernel.asm	/^c0105f4b:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0105f52	obj/kernel.asm	/^c0105f52:	e8 83 ae ff ff       	call   c0100dda <__panic>$/;"	l
c0105f57	obj/kernel.asm	/^c0105f57:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f5a	obj/kernel.asm	/^c0105f5a:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105f5f	obj/kernel.asm	/^c0105f5f:	39 c2                	cmp    %eax,%edx$/;"	l
c0105f61	obj/kernel.asm	/^c0105f61:	75 0c                	jne    c0105f6f <tlb_invalidate+0x5b>$/;"	l
c0105f63	obj/kernel.asm	/^c0105f63:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105f66	obj/kernel.asm	/^c0105f66:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105f69	obj/kernel.asm	/^c0105f69:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105f6c	obj/kernel.asm	/^c0105f6c:	0f 01 38             	invlpg (%eax)$/;"	l
c0105f6f	obj/kernel.asm	/^c0105f6f:	c9                   	leave  $/;"	l
c0105f70	obj/kernel.asm	/^c0105f70:	c3                   	ret    $/;"	l
c0105f71	obj/kernel.asm	/^c0105f71 <pgdir_alloc_page>:$/;"	l
c0105f71	obj/kernel.asm	/^c0105f71:	55                   	push   %ebp$/;"	l
c0105f72	obj/kernel.asm	/^c0105f72:	89 e5                	mov    %esp,%ebp$/;"	l
c0105f74	obj/kernel.asm	/^c0105f74:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105f77	obj/kernel.asm	/^c0105f77:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105f7e	obj/kernel.asm	/^c0105f7e:	e8 22 f1 ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c0105f83	obj/kernel.asm	/^c0105f83:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105f86	obj/kernel.asm	/^c0105f86:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105f8a	obj/kernel.asm	/^c0105f8a:	0f 84 b0 00 00 00    	je     c0106040 <pgdir_alloc_page+0xcf>$/;"	l
c0105f90	obj/kernel.asm	/^c0105f90:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105f93	obj/kernel.asm	/^c0105f93:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105f97	obj/kernel.asm	/^c0105f97:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105f9a	obj/kernel.asm	/^c0105f9a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105f9e	obj/kernel.asm	/^c0105f9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105fa1	obj/kernel.asm	/^c0105fa1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105fa5	obj/kernel.asm	/^c0105fa5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105fa8	obj/kernel.asm	/^c0105fa8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105fab	obj/kernel.asm	/^c0105fab:	e8 ab fe ff ff       	call   c0105e5b <page_insert>$/;"	l
c0105fb0	obj/kernel.asm	/^c0105fb0:	85 c0                	test   %eax,%eax$/;"	l
c0105fb2	obj/kernel.asm	/^c0105fb2:	74 1a                	je     c0105fce <pgdir_alloc_page+0x5d>$/;"	l
c0105fb4	obj/kernel.asm	/^c0105fb4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105fbb	obj/kernel.asm	/^c0105fbb:	00 $/;"	l
c0105fbc	obj/kernel.asm	/^c0105fbc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105fbf	obj/kernel.asm	/^c0105fbf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105fc2	obj/kernel.asm	/^c0105fc2:	e8 49 f1 ff ff       	call   c0105110 <free_pages>$/;"	l
c0105fc7	obj/kernel.asm	/^c0105fc7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105fcc	obj/kernel.asm	/^c0105fcc:	eb 75                	jmp    c0106043 <pgdir_alloc_page+0xd2>$/;"	l
c0105fce	obj/kernel.asm	/^c0105fce:	a1 0c fe 1a c0       	mov    0xc01afe0c,%eax$/;"	l
c0105fd3	obj/kernel.asm	/^c0105fd3:	85 c0                	test   %eax,%eax$/;"	l
c0105fd5	obj/kernel.asm	/^c0105fd5:	74 69                	je     c0106040 <pgdir_alloc_page+0xcf>$/;"	l
c0105fd7	obj/kernel.asm	/^c0105fd7:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c0105fdc	obj/kernel.asm	/^c0105fdc:	85 c0                	test   %eax,%eax$/;"	l
c0105fde	obj/kernel.asm	/^c0105fde:	74 60                	je     c0106040 <pgdir_alloc_page+0xcf>$/;"	l
c0105fe0	obj/kernel.asm	/^c0105fe0:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c0105fe5	obj/kernel.asm	/^c0105fe5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0105fec	obj/kernel.asm	/^c0105fec:	00 $/;"	l
c0105fed	obj/kernel.asm	/^c0105fed:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105ff0	obj/kernel.asm	/^c0105ff0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0105ff4	obj/kernel.asm	/^c0105ff4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105ff7	obj/kernel.asm	/^c0105ff7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105ffb	obj/kernel.asm	/^c0105ffb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ffe	obj/kernel.asm	/^c0105ffe:	e8 3e 0e 00 00       	call   c0106e41 <swap_map_swappable>$/;"	l
c0106003	obj/kernel.asm	/^c0106003:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106006	obj/kernel.asm	/^c0106006:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106009	obj/kernel.asm	/^c0106009:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010600c	obj/kernel.asm	/^c010600c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010600f	obj/kernel.asm	/^c010600f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106012	obj/kernel.asm	/^c0106012:	e8 89 ee ff ff       	call   c0104ea0 <page_ref>$/;"	l
c0106017	obj/kernel.asm	/^c0106017:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010601a	obj/kernel.asm	/^c010601a:	74 24                	je     c0106040 <pgdir_alloc_page+0xcf>$/;"	l
c010601c	obj/kernel.asm	/^c010601c:	c7 44 24 0c b5 d3 10 	movl   $0xc010d3b5,0xc(%esp)$/;"	l
c0106023	obj/kernel.asm	/^c0106023:	c0 $/;"	l
c0106024	obj/kernel.asm	/^c0106024:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010602b	obj/kernel.asm	/^c010602b:	c0 $/;"	l
c010602c	obj/kernel.asm	/^c010602c:	c7 44 24 04 6b 02 00 	movl   $0x26b,0x4(%esp)$/;"	l
c0106033	obj/kernel.asm	/^c0106033:	00 $/;"	l
c0106034	obj/kernel.asm	/^c0106034:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010603b	obj/kernel.asm	/^c010603b:	e8 9a ad ff ff       	call   c0100dda <__panic>$/;"	l
c0106040	obj/kernel.asm	/^c0106040:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106043	obj/kernel.asm	/^c0106043:	c9                   	leave  $/;"	l
c0106044	obj/kernel.asm	/^c0106044:	c3                   	ret    $/;"	l
c0106045	obj/kernel.asm	/^c0106045 <check_alloc_page>:$/;"	l
c0106045	obj/kernel.asm	/^c0106045:	55                   	push   %ebp$/;"	l
c0106046	obj/kernel.asm	/^c0106046:	89 e5                	mov    %esp,%ebp$/;"	l
c0106048	obj/kernel.asm	/^c0106048:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010604b	obj/kernel.asm	/^c010604b:	a1 88 1e 1b c0       	mov    0xc01b1e88,%eax$/;"	l
c0106050	obj/kernel.asm	/^c0106050:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0106053	obj/kernel.asm	/^c0106053:	ff d0                	call   *%eax$/;"	l
c0106055	obj/kernel.asm	/^c0106055:	c7 04 24 cc d3 10 c0 	movl   $0xc010d3cc,(%esp)$/;"	l
c010605c	obj/kernel.asm	/^c010605c:	e8 f7 a2 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106061	obj/kernel.asm	/^c0106061:	c9                   	leave  $/;"	l
c0106062	obj/kernel.asm	/^c0106062:	c3                   	ret    $/;"	l
c0106063	obj/kernel.asm	/^c0106063 <check_pgdir>:$/;"	l
c0106063	obj/kernel.asm	/^c0106063:	55                   	push   %ebp$/;"	l
c0106064	obj/kernel.asm	/^c0106064:	89 e5                	mov    %esp,%ebp$/;"	l
c0106066	obj/kernel.asm	/^c0106066:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106069	obj/kernel.asm	/^c0106069:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c010606e	obj/kernel.asm	/^c010606e:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c0106073	obj/kernel.asm	/^c0106073:	76 24                	jbe    c0106099 <check_pgdir+0x36>$/;"	l
c0106075	obj/kernel.asm	/^c0106075:	c7 44 24 0c eb d3 10 	movl   $0xc010d3eb,0xc(%esp)$/;"	l
c010607c	obj/kernel.asm	/^c010607c:	c0 $/;"	l
c010607d	obj/kernel.asm	/^c010607d:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106084	obj/kernel.asm	/^c0106084:	c0 $/;"	l
c0106085	obj/kernel.asm	/^c0106085:	c7 44 24 04 83 02 00 	movl   $0x283,0x4(%esp)$/;"	l
c010608c	obj/kernel.asm	/^c010608c:	00 $/;"	l
c010608d	obj/kernel.asm	/^c010608d:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106094	obj/kernel.asm	/^c0106094:	e8 41 ad ff ff       	call   c0100dda <__panic>$/;"	l
c0106099	obj/kernel.asm	/^c0106099:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c010609e	obj/kernel.asm	/^c010609e:	85 c0                	test   %eax,%eax$/;"	l
c01060a0	obj/kernel.asm	/^c01060a0:	74 0e                	je     c01060b0 <check_pgdir+0x4d>$/;"	l
c01060a2	obj/kernel.asm	/^c01060a2:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01060a7	obj/kernel.asm	/^c01060a7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01060ac	obj/kernel.asm	/^c01060ac:	85 c0                	test   %eax,%eax$/;"	l
c01060ae	obj/kernel.asm	/^c01060ae:	74 24                	je     c01060d4 <check_pgdir+0x71>$/;"	l
c01060b0	obj/kernel.asm	/^c01060b0:	c7 44 24 0c 08 d4 10 	movl   $0xc010d408,0xc(%esp)$/;"	l
c01060b7	obj/kernel.asm	/^c01060b7:	c0 $/;"	l
c01060b8	obj/kernel.asm	/^c01060b8:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01060bf	obj/kernel.asm	/^c01060bf:	c0 $/;"	l
c01060c0	obj/kernel.asm	/^c01060c0:	c7 44 24 04 84 02 00 	movl   $0x284,0x4(%esp)$/;"	l
c01060c7	obj/kernel.asm	/^c01060c7:	00 $/;"	l
c01060c8	obj/kernel.asm	/^c01060c8:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01060cf	obj/kernel.asm	/^c01060cf:	e8 06 ad ff ff       	call   c0100dda <__panic>$/;"	l
c01060d4	obj/kernel.asm	/^c01060d4:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01060d9	obj/kernel.asm	/^c01060d9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01060e0	obj/kernel.asm	/^c01060e0:	00 $/;"	l
c01060e1	obj/kernel.asm	/^c01060e1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01060e8	obj/kernel.asm	/^c01060e8:	00 $/;"	l
c01060e9	obj/kernel.asm	/^c01060e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01060ec	obj/kernel.asm	/^c01060ec:	e8 53 f8 ff ff       	call   c0105944 <get_page>$/;"	l
c01060f1	obj/kernel.asm	/^c01060f1:	85 c0                	test   %eax,%eax$/;"	l
c01060f3	obj/kernel.asm	/^c01060f3:	74 24                	je     c0106119 <check_pgdir+0xb6>$/;"	l
c01060f5	obj/kernel.asm	/^c01060f5:	c7 44 24 0c 40 d4 10 	movl   $0xc010d440,0xc(%esp)$/;"	l
c01060fc	obj/kernel.asm	/^c01060fc:	c0 $/;"	l
c01060fd	obj/kernel.asm	/^c01060fd:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106104	obj/kernel.asm	/^c0106104:	c0 $/;"	l
c0106105	obj/kernel.asm	/^c0106105:	c7 44 24 04 85 02 00 	movl   $0x285,0x4(%esp)$/;"	l
c010610c	obj/kernel.asm	/^c010610c:	00 $/;"	l
c010610d	obj/kernel.asm	/^c010610d:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106114	obj/kernel.asm	/^c0106114:	e8 c1 ac ff ff       	call   c0100dda <__panic>$/;"	l
c0106119	obj/kernel.asm	/^c0106119:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0106120	obj/kernel.asm	/^c0106120:	e8 80 ef ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c0106125	obj/kernel.asm	/^c0106125:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106128	obj/kernel.asm	/^c0106128:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c010612d	obj/kernel.asm	/^c010612d:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106134	obj/kernel.asm	/^c0106134:	00 $/;"	l
c0106135	obj/kernel.asm	/^c0106135:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010613c	obj/kernel.asm	/^c010613c:	00 $/;"	l
c010613d	obj/kernel.asm	/^c010613d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106140	obj/kernel.asm	/^c0106140:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106144	obj/kernel.asm	/^c0106144:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106147	obj/kernel.asm	/^c0106147:	e8 0f fd ff ff       	call   c0105e5b <page_insert>$/;"	l
c010614c	obj/kernel.asm	/^c010614c:	85 c0                	test   %eax,%eax$/;"	l
c010614e	obj/kernel.asm	/^c010614e:	74 24                	je     c0106174 <check_pgdir+0x111>$/;"	l
c0106150	obj/kernel.asm	/^c0106150:	c7 44 24 0c 68 d4 10 	movl   $0xc010d468,0xc(%esp)$/;"	l
c0106157	obj/kernel.asm	/^c0106157:	c0 $/;"	l
c0106158	obj/kernel.asm	/^c0106158:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010615f	obj/kernel.asm	/^c010615f:	c0 $/;"	l
c0106160	obj/kernel.asm	/^c0106160:	c7 44 24 04 89 02 00 	movl   $0x289,0x4(%esp)$/;"	l
c0106167	obj/kernel.asm	/^c0106167:	00 $/;"	l
c0106168	obj/kernel.asm	/^c0106168:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010616f	obj/kernel.asm	/^c010616f:	e8 66 ac ff ff       	call   c0100dda <__panic>$/;"	l
c0106174	obj/kernel.asm	/^c0106174:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106179	obj/kernel.asm	/^c0106179:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106180	obj/kernel.asm	/^c0106180:	00 $/;"	l
c0106181	obj/kernel.asm	/^c0106181:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0106188	obj/kernel.asm	/^c0106188:	00 $/;"	l
c0106189	obj/kernel.asm	/^c0106189:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010618c	obj/kernel.asm	/^c010618c:	e8 7b f6 ff ff       	call   c010580c <get_pte>$/;"	l
c0106191	obj/kernel.asm	/^c0106191:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106194	obj/kernel.asm	/^c0106194:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106198	obj/kernel.asm	/^c0106198:	75 24                	jne    c01061be <check_pgdir+0x15b>$/;"	l
c010619a	obj/kernel.asm	/^c010619a:	c7 44 24 0c 94 d4 10 	movl   $0xc010d494,0xc(%esp)$/;"	l
c01061a1	obj/kernel.asm	/^c01061a1:	c0 $/;"	l
c01061a2	obj/kernel.asm	/^c01061a2:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01061a9	obj/kernel.asm	/^c01061a9:	c0 $/;"	l
c01061aa	obj/kernel.asm	/^c01061aa:	c7 44 24 04 8c 02 00 	movl   $0x28c,0x4(%esp)$/;"	l
c01061b1	obj/kernel.asm	/^c01061b1:	00 $/;"	l
c01061b2	obj/kernel.asm	/^c01061b2:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01061b9	obj/kernel.asm	/^c01061b9:	e8 1c ac ff ff       	call   c0100dda <__panic>$/;"	l
c01061be	obj/kernel.asm	/^c01061be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01061c1	obj/kernel.asm	/^c01061c1:	8b 00                	mov    (%eax),%eax$/;"	l
c01061c3	obj/kernel.asm	/^c01061c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01061c6	obj/kernel.asm	/^c01061c6:	e8 e6 eb ff ff       	call   c0104db1 <pa2page>$/;"	l
c01061cb	obj/kernel.asm	/^c01061cb:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01061ce	obj/kernel.asm	/^c01061ce:	74 24                	je     c01061f4 <check_pgdir+0x191>$/;"	l
c01061d0	obj/kernel.asm	/^c01061d0:	c7 44 24 0c c1 d4 10 	movl   $0xc010d4c1,0xc(%esp)$/;"	l
c01061d7	obj/kernel.asm	/^c01061d7:	c0 $/;"	l
c01061d8	obj/kernel.asm	/^c01061d8:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01061df	obj/kernel.asm	/^c01061df:	c0 $/;"	l
c01061e0	obj/kernel.asm	/^c01061e0:	c7 44 24 04 8d 02 00 	movl   $0x28d,0x4(%esp)$/;"	l
c01061e7	obj/kernel.asm	/^c01061e7:	00 $/;"	l
c01061e8	obj/kernel.asm	/^c01061e8:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01061ef	obj/kernel.asm	/^c01061ef:	e8 e6 ab ff ff       	call   c0100dda <__panic>$/;"	l
c01061f4	obj/kernel.asm	/^c01061f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01061f7	obj/kernel.asm	/^c01061f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01061fa	obj/kernel.asm	/^c01061fa:	e8 a1 ec ff ff       	call   c0104ea0 <page_ref>$/;"	l
c01061ff	obj/kernel.asm	/^c01061ff:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106202	obj/kernel.asm	/^c0106202:	74 24                	je     c0106228 <check_pgdir+0x1c5>$/;"	l
c0106204	obj/kernel.asm	/^c0106204:	c7 44 24 0c d6 d4 10 	movl   $0xc010d4d6,0xc(%esp)$/;"	l
c010620b	obj/kernel.asm	/^c010620b:	c0 $/;"	l
c010620c	obj/kernel.asm	/^c010620c:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106213	obj/kernel.asm	/^c0106213:	c0 $/;"	l
c0106214	obj/kernel.asm	/^c0106214:	c7 44 24 04 8e 02 00 	movl   $0x28e,0x4(%esp)$/;"	l
c010621b	obj/kernel.asm	/^c010621b:	00 $/;"	l
c010621c	obj/kernel.asm	/^c010621c:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106223	obj/kernel.asm	/^c0106223:	e8 b2 ab ff ff       	call   c0100dda <__panic>$/;"	l
c0106228	obj/kernel.asm	/^c0106228:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c010622d	obj/kernel.asm	/^c010622d:	8b 00                	mov    (%eax),%eax$/;"	l
c010622f	obj/kernel.asm	/^c010622f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106234	obj/kernel.asm	/^c0106234:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106237	obj/kernel.asm	/^c0106237:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010623a	obj/kernel.asm	/^c010623a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010623d	obj/kernel.asm	/^c010623d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106240	obj/kernel.asm	/^c0106240:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0106245	obj/kernel.asm	/^c0106245:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c0106248	obj/kernel.asm	/^c0106248:	72 23                	jb     c010626d <check_pgdir+0x20a>$/;"	l
c010624a	obj/kernel.asm	/^c010624a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010624d	obj/kernel.asm	/^c010624d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106251	obj/kernel.asm	/^c0106251:	c7 44 24 08 2c d2 10 	movl   $0xc010d22c,0x8(%esp)$/;"	l
c0106258	obj/kernel.asm	/^c0106258:	c0 $/;"	l
c0106259	obj/kernel.asm	/^c0106259:	c7 44 24 04 90 02 00 	movl   $0x290,0x4(%esp)$/;"	l
c0106260	obj/kernel.asm	/^c0106260:	00 $/;"	l
c0106261	obj/kernel.asm	/^c0106261:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106268	obj/kernel.asm	/^c0106268:	e8 6d ab ff ff       	call   c0100dda <__panic>$/;"	l
c010626d	obj/kernel.asm	/^c010626d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106270	obj/kernel.asm	/^c0106270:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106275	obj/kernel.asm	/^c0106275:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106278	obj/kernel.asm	/^c0106278:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010627b	obj/kernel.asm	/^c010627b:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106280	obj/kernel.asm	/^c0106280:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106287	obj/kernel.asm	/^c0106287:	00 $/;"	l
c0106288	obj/kernel.asm	/^c0106288:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010628f	obj/kernel.asm	/^c010628f:	00 $/;"	l
c0106290	obj/kernel.asm	/^c0106290:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106293	obj/kernel.asm	/^c0106293:	e8 74 f5 ff ff       	call   c010580c <get_pte>$/;"	l
c0106298	obj/kernel.asm	/^c0106298:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010629b	obj/kernel.asm	/^c010629b:	74 24                	je     c01062c1 <check_pgdir+0x25e>$/;"	l
c010629d	obj/kernel.asm	/^c010629d:	c7 44 24 0c e8 d4 10 	movl   $0xc010d4e8,0xc(%esp)$/;"	l
c01062a4	obj/kernel.asm	/^c01062a4:	c0 $/;"	l
c01062a5	obj/kernel.asm	/^c01062a5:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01062ac	obj/kernel.asm	/^c01062ac:	c0 $/;"	l
c01062ad	obj/kernel.asm	/^c01062ad:	c7 44 24 04 91 02 00 	movl   $0x291,0x4(%esp)$/;"	l
c01062b4	obj/kernel.asm	/^c01062b4:	00 $/;"	l
c01062b5	obj/kernel.asm	/^c01062b5:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01062bc	obj/kernel.asm	/^c01062bc:	e8 19 ab ff ff       	call   c0100dda <__panic>$/;"	l
c01062c1	obj/kernel.asm	/^c01062c1:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01062c8	obj/kernel.asm	/^c01062c8:	e8 d8 ed ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c01062cd	obj/kernel.asm	/^c01062cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01062d0	obj/kernel.asm	/^c01062d0:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01062d5	obj/kernel.asm	/^c01062d5:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
c01062dc	obj/kernel.asm	/^c01062dc:	00 $/;"	l
c01062dd	obj/kernel.asm	/^c01062dd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01062e4	obj/kernel.asm	/^c01062e4:	00 $/;"	l
c01062e5	obj/kernel.asm	/^c01062e5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01062e8	obj/kernel.asm	/^c01062e8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01062ec	obj/kernel.asm	/^c01062ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01062ef	obj/kernel.asm	/^c01062ef:	e8 67 fb ff ff       	call   c0105e5b <page_insert>$/;"	l
c01062f4	obj/kernel.asm	/^c01062f4:	85 c0                	test   %eax,%eax$/;"	l
c01062f6	obj/kernel.asm	/^c01062f6:	74 24                	je     c010631c <check_pgdir+0x2b9>$/;"	l
c01062f8	obj/kernel.asm	/^c01062f8:	c7 44 24 0c 10 d5 10 	movl   $0xc010d510,0xc(%esp)$/;"	l
c01062ff	obj/kernel.asm	/^c01062ff:	c0 $/;"	l
c0106300	obj/kernel.asm	/^c0106300:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106307	obj/kernel.asm	/^c0106307:	c0 $/;"	l
c0106308	obj/kernel.asm	/^c0106308:	c7 44 24 04 94 02 00 	movl   $0x294,0x4(%esp)$/;"	l
c010630f	obj/kernel.asm	/^c010630f:	00 $/;"	l
c0106310	obj/kernel.asm	/^c0106310:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106317	obj/kernel.asm	/^c0106317:	e8 be aa ff ff       	call   c0100dda <__panic>$/;"	l
c010631c	obj/kernel.asm	/^c010631c:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106321	obj/kernel.asm	/^c0106321:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106328	obj/kernel.asm	/^c0106328:	00 $/;"	l
c0106329	obj/kernel.asm	/^c0106329:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0106330	obj/kernel.asm	/^c0106330:	00 $/;"	l
c0106331	obj/kernel.asm	/^c0106331:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106334	obj/kernel.asm	/^c0106334:	e8 d3 f4 ff ff       	call   c010580c <get_pte>$/;"	l
c0106339	obj/kernel.asm	/^c0106339:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010633c	obj/kernel.asm	/^c010633c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106340	obj/kernel.asm	/^c0106340:	75 24                	jne    c0106366 <check_pgdir+0x303>$/;"	l
c0106342	obj/kernel.asm	/^c0106342:	c7 44 24 0c 48 d5 10 	movl   $0xc010d548,0xc(%esp)$/;"	l
c0106349	obj/kernel.asm	/^c0106349:	c0 $/;"	l
c010634a	obj/kernel.asm	/^c010634a:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106351	obj/kernel.asm	/^c0106351:	c0 $/;"	l
c0106352	obj/kernel.asm	/^c0106352:	c7 44 24 04 95 02 00 	movl   $0x295,0x4(%esp)$/;"	l
c0106359	obj/kernel.asm	/^c0106359:	00 $/;"	l
c010635a	obj/kernel.asm	/^c010635a:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106361	obj/kernel.asm	/^c0106361:	e8 74 aa ff ff       	call   c0100dda <__panic>$/;"	l
c0106366	obj/kernel.asm	/^c0106366:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106369	obj/kernel.asm	/^c0106369:	8b 00                	mov    (%eax),%eax$/;"	l
c010636b	obj/kernel.asm	/^c010636b:	83 e0 04             	and    $0x4,%eax$/;"	l
c010636e	obj/kernel.asm	/^c010636e:	85 c0                	test   %eax,%eax$/;"	l
c0106370	obj/kernel.asm	/^c0106370:	75 24                	jne    c0106396 <check_pgdir+0x333>$/;"	l
c0106372	obj/kernel.asm	/^c0106372:	c7 44 24 0c 78 d5 10 	movl   $0xc010d578,0xc(%esp)$/;"	l
c0106379	obj/kernel.asm	/^c0106379:	c0 $/;"	l
c010637a	obj/kernel.asm	/^c010637a:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106381	obj/kernel.asm	/^c0106381:	c0 $/;"	l
c0106382	obj/kernel.asm	/^c0106382:	c7 44 24 04 96 02 00 	movl   $0x296,0x4(%esp)$/;"	l
c0106389	obj/kernel.asm	/^c0106389:	00 $/;"	l
c010638a	obj/kernel.asm	/^c010638a:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106391	obj/kernel.asm	/^c0106391:	e8 44 aa ff ff       	call   c0100dda <__panic>$/;"	l
c0106396	obj/kernel.asm	/^c0106396:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106399	obj/kernel.asm	/^c0106399:	8b 00                	mov    (%eax),%eax$/;"	l
c010639b	obj/kernel.asm	/^c010639b:	83 e0 02             	and    $0x2,%eax$/;"	l
c010639e	obj/kernel.asm	/^c010639e:	85 c0                	test   %eax,%eax$/;"	l
c01063a0	obj/kernel.asm	/^c01063a0:	75 24                	jne    c01063c6 <check_pgdir+0x363>$/;"	l
c01063a2	obj/kernel.asm	/^c01063a2:	c7 44 24 0c 86 d5 10 	movl   $0xc010d586,0xc(%esp)$/;"	l
c01063a9	obj/kernel.asm	/^c01063a9:	c0 $/;"	l
c01063aa	obj/kernel.asm	/^c01063aa:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01063b1	obj/kernel.asm	/^c01063b1:	c0 $/;"	l
c01063b2	obj/kernel.asm	/^c01063b2:	c7 44 24 04 97 02 00 	movl   $0x297,0x4(%esp)$/;"	l
c01063b9	obj/kernel.asm	/^c01063b9:	00 $/;"	l
c01063ba	obj/kernel.asm	/^c01063ba:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01063c1	obj/kernel.asm	/^c01063c1:	e8 14 aa ff ff       	call   c0100dda <__panic>$/;"	l
c01063c6	obj/kernel.asm	/^c01063c6:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01063cb	obj/kernel.asm	/^c01063cb:	8b 00                	mov    (%eax),%eax$/;"	l
c01063cd	obj/kernel.asm	/^c01063cd:	83 e0 04             	and    $0x4,%eax$/;"	l
c01063d0	obj/kernel.asm	/^c01063d0:	85 c0                	test   %eax,%eax$/;"	l
c01063d2	obj/kernel.asm	/^c01063d2:	75 24                	jne    c01063f8 <check_pgdir+0x395>$/;"	l
c01063d4	obj/kernel.asm	/^c01063d4:	c7 44 24 0c 94 d5 10 	movl   $0xc010d594,0xc(%esp)$/;"	l
c01063db	obj/kernel.asm	/^c01063db:	c0 $/;"	l
c01063dc	obj/kernel.asm	/^c01063dc:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01063e3	obj/kernel.asm	/^c01063e3:	c0 $/;"	l
c01063e4	obj/kernel.asm	/^c01063e4:	c7 44 24 04 98 02 00 	movl   $0x298,0x4(%esp)$/;"	l
c01063eb	obj/kernel.asm	/^c01063eb:	00 $/;"	l
c01063ec	obj/kernel.asm	/^c01063ec:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01063f3	obj/kernel.asm	/^c01063f3:	e8 e2 a9 ff ff       	call   c0100dda <__panic>$/;"	l
c01063f8	obj/kernel.asm	/^c01063f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01063fb	obj/kernel.asm	/^c01063fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01063fe	obj/kernel.asm	/^c01063fe:	e8 9d ea ff ff       	call   c0104ea0 <page_ref>$/;"	l
c0106403	obj/kernel.asm	/^c0106403:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106406	obj/kernel.asm	/^c0106406:	74 24                	je     c010642c <check_pgdir+0x3c9>$/;"	l
c0106408	obj/kernel.asm	/^c0106408:	c7 44 24 0c aa d5 10 	movl   $0xc010d5aa,0xc(%esp)$/;"	l
c010640f	obj/kernel.asm	/^c010640f:	c0 $/;"	l
c0106410	obj/kernel.asm	/^c0106410:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106417	obj/kernel.asm	/^c0106417:	c0 $/;"	l
c0106418	obj/kernel.asm	/^c0106418:	c7 44 24 04 99 02 00 	movl   $0x299,0x4(%esp)$/;"	l
c010641f	obj/kernel.asm	/^c010641f:	00 $/;"	l
c0106420	obj/kernel.asm	/^c0106420:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106427	obj/kernel.asm	/^c0106427:	e8 ae a9 ff ff       	call   c0100dda <__panic>$/;"	l
c010642c	obj/kernel.asm	/^c010642c:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106431	obj/kernel.asm	/^c0106431:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106438	obj/kernel.asm	/^c0106438:	00 $/;"	l
c0106439	obj/kernel.asm	/^c0106439:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0106440	obj/kernel.asm	/^c0106440:	00 $/;"	l
c0106441	obj/kernel.asm	/^c0106441:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106444	obj/kernel.asm	/^c0106444:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106448	obj/kernel.asm	/^c0106448:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010644b	obj/kernel.asm	/^c010644b:	e8 0b fa ff ff       	call   c0105e5b <page_insert>$/;"	l
c0106450	obj/kernel.asm	/^c0106450:	85 c0                	test   %eax,%eax$/;"	l
c0106452	obj/kernel.asm	/^c0106452:	74 24                	je     c0106478 <check_pgdir+0x415>$/;"	l
c0106454	obj/kernel.asm	/^c0106454:	c7 44 24 0c bc d5 10 	movl   $0xc010d5bc,0xc(%esp)$/;"	l
c010645b	obj/kernel.asm	/^c010645b:	c0 $/;"	l
c010645c	obj/kernel.asm	/^c010645c:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106463	obj/kernel.asm	/^c0106463:	c0 $/;"	l
c0106464	obj/kernel.asm	/^c0106464:	c7 44 24 04 9b 02 00 	movl   $0x29b,0x4(%esp)$/;"	l
c010646b	obj/kernel.asm	/^c010646b:	00 $/;"	l
c010646c	obj/kernel.asm	/^c010646c:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106473	obj/kernel.asm	/^c0106473:	e8 62 a9 ff ff       	call   c0100dda <__panic>$/;"	l
c0106478	obj/kernel.asm	/^c0106478:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010647b	obj/kernel.asm	/^c010647b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010647e	obj/kernel.asm	/^c010647e:	e8 1d ea ff ff       	call   c0104ea0 <page_ref>$/;"	l
c0106483	obj/kernel.asm	/^c0106483:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0106486	obj/kernel.asm	/^c0106486:	74 24                	je     c01064ac <check_pgdir+0x449>$/;"	l
c0106488	obj/kernel.asm	/^c0106488:	c7 44 24 0c e8 d5 10 	movl   $0xc010d5e8,0xc(%esp)$/;"	l
c010648f	obj/kernel.asm	/^c010648f:	c0 $/;"	l
c0106490	obj/kernel.asm	/^c0106490:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106497	obj/kernel.asm	/^c0106497:	c0 $/;"	l
c0106498	obj/kernel.asm	/^c0106498:	c7 44 24 04 9c 02 00 	movl   $0x29c,0x4(%esp)$/;"	l
c010649f	obj/kernel.asm	/^c010649f:	00 $/;"	l
c01064a0	obj/kernel.asm	/^c01064a0:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01064a7	obj/kernel.asm	/^c01064a7:	e8 2e a9 ff ff       	call   c0100dda <__panic>$/;"	l
c01064ac	obj/kernel.asm	/^c01064ac:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01064af	obj/kernel.asm	/^c01064af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01064b2	obj/kernel.asm	/^c01064b2:	e8 e9 e9 ff ff       	call   c0104ea0 <page_ref>$/;"	l
c01064b7	obj/kernel.asm	/^c01064b7:	85 c0                	test   %eax,%eax$/;"	l
c01064b9	obj/kernel.asm	/^c01064b9:	74 24                	je     c01064df <check_pgdir+0x47c>$/;"	l
c01064bb	obj/kernel.asm	/^c01064bb:	c7 44 24 0c fa d5 10 	movl   $0xc010d5fa,0xc(%esp)$/;"	l
c01064c2	obj/kernel.asm	/^c01064c2:	c0 $/;"	l
c01064c3	obj/kernel.asm	/^c01064c3:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01064ca	obj/kernel.asm	/^c01064ca:	c0 $/;"	l
c01064cb	obj/kernel.asm	/^c01064cb:	c7 44 24 04 9d 02 00 	movl   $0x29d,0x4(%esp)$/;"	l
c01064d2	obj/kernel.asm	/^c01064d2:	00 $/;"	l
c01064d3	obj/kernel.asm	/^c01064d3:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01064da	obj/kernel.asm	/^c01064da:	e8 fb a8 ff ff       	call   c0100dda <__panic>$/;"	l
c01064df	obj/kernel.asm	/^c01064df:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01064e4	obj/kernel.asm	/^c01064e4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01064eb	obj/kernel.asm	/^c01064eb:	00 $/;"	l
c01064ec	obj/kernel.asm	/^c01064ec:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01064f3	obj/kernel.asm	/^c01064f3:	00 $/;"	l
c01064f4	obj/kernel.asm	/^c01064f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01064f7	obj/kernel.asm	/^c01064f7:	e8 10 f3 ff ff       	call   c010580c <get_pte>$/;"	l
c01064fc	obj/kernel.asm	/^c01064fc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01064ff	obj/kernel.asm	/^c01064ff:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106503	obj/kernel.asm	/^c0106503:	75 24                	jne    c0106529 <check_pgdir+0x4c6>$/;"	l
c0106505	obj/kernel.asm	/^c0106505:	c7 44 24 0c 48 d5 10 	movl   $0xc010d548,0xc(%esp)$/;"	l
c010650c	obj/kernel.asm	/^c010650c:	c0 $/;"	l
c010650d	obj/kernel.asm	/^c010650d:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106514	obj/kernel.asm	/^c0106514:	c0 $/;"	l
c0106515	obj/kernel.asm	/^c0106515:	c7 44 24 04 9e 02 00 	movl   $0x29e,0x4(%esp)$/;"	l
c010651c	obj/kernel.asm	/^c010651c:	00 $/;"	l
c010651d	obj/kernel.asm	/^c010651d:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106524	obj/kernel.asm	/^c0106524:	e8 b1 a8 ff ff       	call   c0100dda <__panic>$/;"	l
c0106529	obj/kernel.asm	/^c0106529:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010652c	obj/kernel.asm	/^c010652c:	8b 00                	mov    (%eax),%eax$/;"	l
c010652e	obj/kernel.asm	/^c010652e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106531	obj/kernel.asm	/^c0106531:	e8 7b e8 ff ff       	call   c0104db1 <pa2page>$/;"	l
c0106536	obj/kernel.asm	/^c0106536:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0106539	obj/kernel.asm	/^c0106539:	74 24                	je     c010655f <check_pgdir+0x4fc>$/;"	l
c010653b	obj/kernel.asm	/^c010653b:	c7 44 24 0c c1 d4 10 	movl   $0xc010d4c1,0xc(%esp)$/;"	l
c0106542	obj/kernel.asm	/^c0106542:	c0 $/;"	l
c0106543	obj/kernel.asm	/^c0106543:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010654a	obj/kernel.asm	/^c010654a:	c0 $/;"	l
c010654b	obj/kernel.asm	/^c010654b:	c7 44 24 04 9f 02 00 	movl   $0x29f,0x4(%esp)$/;"	l
c0106552	obj/kernel.asm	/^c0106552:	00 $/;"	l
c0106553	obj/kernel.asm	/^c0106553:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010655a	obj/kernel.asm	/^c010655a:	e8 7b a8 ff ff       	call   c0100dda <__panic>$/;"	l
c010655f	obj/kernel.asm	/^c010655f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106562	obj/kernel.asm	/^c0106562:	8b 00                	mov    (%eax),%eax$/;"	l
c0106564	obj/kernel.asm	/^c0106564:	83 e0 04             	and    $0x4,%eax$/;"	l
c0106567	obj/kernel.asm	/^c0106567:	85 c0                	test   %eax,%eax$/;"	l
c0106569	obj/kernel.asm	/^c0106569:	74 24                	je     c010658f <check_pgdir+0x52c>$/;"	l
c010656b	obj/kernel.asm	/^c010656b:	c7 44 24 0c 0c d6 10 	movl   $0xc010d60c,0xc(%esp)$/;"	l
c0106572	obj/kernel.asm	/^c0106572:	c0 $/;"	l
c0106573	obj/kernel.asm	/^c0106573:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010657a	obj/kernel.asm	/^c010657a:	c0 $/;"	l
c010657b	obj/kernel.asm	/^c010657b:	c7 44 24 04 a0 02 00 	movl   $0x2a0,0x4(%esp)$/;"	l
c0106582	obj/kernel.asm	/^c0106582:	00 $/;"	l
c0106583	obj/kernel.asm	/^c0106583:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010658a	obj/kernel.asm	/^c010658a:	e8 4b a8 ff ff       	call   c0100dda <__panic>$/;"	l
c010658f	obj/kernel.asm	/^c010658f:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106594	obj/kernel.asm	/^c0106594:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010659b	obj/kernel.asm	/^c010659b:	00 $/;"	l
c010659c	obj/kernel.asm	/^c010659c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010659f	obj/kernel.asm	/^c010659f:	e8 73 f8 ff ff       	call   c0105e17 <page_remove>$/;"	l
c01065a4	obj/kernel.asm	/^c01065a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065a7	obj/kernel.asm	/^c01065a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01065aa	obj/kernel.asm	/^c01065aa:	e8 f1 e8 ff ff       	call   c0104ea0 <page_ref>$/;"	l
c01065af	obj/kernel.asm	/^c01065af:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01065b2	obj/kernel.asm	/^c01065b2:	74 24                	je     c01065d8 <check_pgdir+0x575>$/;"	l
c01065b4	obj/kernel.asm	/^c01065b4:	c7 44 24 0c d6 d4 10 	movl   $0xc010d4d6,0xc(%esp)$/;"	l
c01065bb	obj/kernel.asm	/^c01065bb:	c0 $/;"	l
c01065bc	obj/kernel.asm	/^c01065bc:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01065c3	obj/kernel.asm	/^c01065c3:	c0 $/;"	l
c01065c4	obj/kernel.asm	/^c01065c4:	c7 44 24 04 a3 02 00 	movl   $0x2a3,0x4(%esp)$/;"	l
c01065cb	obj/kernel.asm	/^c01065cb:	00 $/;"	l
c01065cc	obj/kernel.asm	/^c01065cc:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01065d3	obj/kernel.asm	/^c01065d3:	e8 02 a8 ff ff       	call   c0100dda <__panic>$/;"	l
c01065d8	obj/kernel.asm	/^c01065d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01065db	obj/kernel.asm	/^c01065db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01065de	obj/kernel.asm	/^c01065de:	e8 bd e8 ff ff       	call   c0104ea0 <page_ref>$/;"	l
c01065e3	obj/kernel.asm	/^c01065e3:	85 c0                	test   %eax,%eax$/;"	l
c01065e5	obj/kernel.asm	/^c01065e5:	74 24                	je     c010660b <check_pgdir+0x5a8>$/;"	l
c01065e7	obj/kernel.asm	/^c01065e7:	c7 44 24 0c fa d5 10 	movl   $0xc010d5fa,0xc(%esp)$/;"	l
c01065ee	obj/kernel.asm	/^c01065ee:	c0 $/;"	l
c01065ef	obj/kernel.asm	/^c01065ef:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01065f6	obj/kernel.asm	/^c01065f6:	c0 $/;"	l
c01065f7	obj/kernel.asm	/^c01065f7:	c7 44 24 04 a4 02 00 	movl   $0x2a4,0x4(%esp)$/;"	l
c01065fe	obj/kernel.asm	/^c01065fe:	00 $/;"	l
c01065ff	obj/kernel.asm	/^c01065ff:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106606	obj/kernel.asm	/^c0106606:	e8 cf a7 ff ff       	call   c0100dda <__panic>$/;"	l
c010660b	obj/kernel.asm	/^c010660b:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106610	obj/kernel.asm	/^c0106610:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0106617	obj/kernel.asm	/^c0106617:	00 $/;"	l
c0106618	obj/kernel.asm	/^c0106618:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010661b	obj/kernel.asm	/^c010661b:	e8 f7 f7 ff ff       	call   c0105e17 <page_remove>$/;"	l
c0106620	obj/kernel.asm	/^c0106620:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106623	obj/kernel.asm	/^c0106623:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106626	obj/kernel.asm	/^c0106626:	e8 75 e8 ff ff       	call   c0104ea0 <page_ref>$/;"	l
c010662b	obj/kernel.asm	/^c010662b:	85 c0                	test   %eax,%eax$/;"	l
c010662d	obj/kernel.asm	/^c010662d:	74 24                	je     c0106653 <check_pgdir+0x5f0>$/;"	l
c010662f	obj/kernel.asm	/^c010662f:	c7 44 24 0c 21 d6 10 	movl   $0xc010d621,0xc(%esp)$/;"	l
c0106636	obj/kernel.asm	/^c0106636:	c0 $/;"	l
c0106637	obj/kernel.asm	/^c0106637:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010663e	obj/kernel.asm	/^c010663e:	c0 $/;"	l
c010663f	obj/kernel.asm	/^c010663f:	c7 44 24 04 a7 02 00 	movl   $0x2a7,0x4(%esp)$/;"	l
c0106646	obj/kernel.asm	/^c0106646:	00 $/;"	l
c0106647	obj/kernel.asm	/^c0106647:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010664e	obj/kernel.asm	/^c010664e:	e8 87 a7 ff ff       	call   c0100dda <__panic>$/;"	l
c0106653	obj/kernel.asm	/^c0106653:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106656	obj/kernel.asm	/^c0106656:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106659	obj/kernel.asm	/^c0106659:	e8 42 e8 ff ff       	call   c0104ea0 <page_ref>$/;"	l
c010665e	obj/kernel.asm	/^c010665e:	85 c0                	test   %eax,%eax$/;"	l
c0106660	obj/kernel.asm	/^c0106660:	74 24                	je     c0106686 <check_pgdir+0x623>$/;"	l
c0106662	obj/kernel.asm	/^c0106662:	c7 44 24 0c fa d5 10 	movl   $0xc010d5fa,0xc(%esp)$/;"	l
c0106669	obj/kernel.asm	/^c0106669:	c0 $/;"	l
c010666a	obj/kernel.asm	/^c010666a:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106671	obj/kernel.asm	/^c0106671:	c0 $/;"	l
c0106672	obj/kernel.asm	/^c0106672:	c7 44 24 04 a8 02 00 	movl   $0x2a8,0x4(%esp)$/;"	l
c0106679	obj/kernel.asm	/^c0106679:	00 $/;"	l
c010667a	obj/kernel.asm	/^c010667a:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106681	obj/kernel.asm	/^c0106681:	e8 54 a7 ff ff       	call   c0100dda <__panic>$/;"	l
c0106686	obj/kernel.asm	/^c0106686:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c010668b	obj/kernel.asm	/^c010668b:	8b 00                	mov    (%eax),%eax$/;"	l
c010668d	obj/kernel.asm	/^c010668d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106690	obj/kernel.asm	/^c0106690:	e8 1c e7 ff ff       	call   c0104db1 <pa2page>$/;"	l
c0106695	obj/kernel.asm	/^c0106695:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106698	obj/kernel.asm	/^c0106698:	e8 03 e8 ff ff       	call   c0104ea0 <page_ref>$/;"	l
c010669d	obj/kernel.asm	/^c010669d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01066a0	obj/kernel.asm	/^c01066a0:	74 24                	je     c01066c6 <check_pgdir+0x663>$/;"	l
c01066a2	obj/kernel.asm	/^c01066a2:	c7 44 24 0c 34 d6 10 	movl   $0xc010d634,0xc(%esp)$/;"	l
c01066a9	obj/kernel.asm	/^c01066a9:	c0 $/;"	l
c01066aa	obj/kernel.asm	/^c01066aa:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01066b1	obj/kernel.asm	/^c01066b1:	c0 $/;"	l
c01066b2	obj/kernel.asm	/^c01066b2:	c7 44 24 04 aa 02 00 	movl   $0x2aa,0x4(%esp)$/;"	l
c01066b9	obj/kernel.asm	/^c01066b9:	00 $/;"	l
c01066ba	obj/kernel.asm	/^c01066ba:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01066c1	obj/kernel.asm	/^c01066c1:	e8 14 a7 ff ff       	call   c0100dda <__panic>$/;"	l
c01066c6	obj/kernel.asm	/^c01066c6:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01066cb	obj/kernel.asm	/^c01066cb:	8b 00                	mov    (%eax),%eax$/;"	l
c01066cd	obj/kernel.asm	/^c01066cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01066d0	obj/kernel.asm	/^c01066d0:	e8 dc e6 ff ff       	call   c0104db1 <pa2page>$/;"	l
c01066d5	obj/kernel.asm	/^c01066d5:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01066dc	obj/kernel.asm	/^c01066dc:	00 $/;"	l
c01066dd	obj/kernel.asm	/^c01066dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01066e0	obj/kernel.asm	/^c01066e0:	e8 2b ea ff ff       	call   c0105110 <free_pages>$/;"	l
c01066e5	obj/kernel.asm	/^c01066e5:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01066ea	obj/kernel.asm	/^c01066ea:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01066f0	obj/kernel.asm	/^c01066f0:	c7 04 24 5a d6 10 c0 	movl   $0xc010d65a,(%esp)$/;"	l
c01066f7	obj/kernel.asm	/^c01066f7:	e8 5c 9c ff ff       	call   c0100358 <cprintf>$/;"	l
c01066fc	obj/kernel.asm	/^c01066fc:	c9                   	leave  $/;"	l
c01066fd	obj/kernel.asm	/^c01066fd:	c3                   	ret    $/;"	l
c01066fe	obj/kernel.asm	/^c01066fe <check_boot_pgdir>:$/;"	l
c01066fe	obj/kernel.asm	/^c01066fe:	55                   	push   %ebp$/;"	l
c01066ff	obj/kernel.asm	/^c01066ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0106701	obj/kernel.asm	/^c0106701:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106704	obj/kernel.asm	/^c0106704:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010670b	obj/kernel.asm	/^c010670b:	e9 ca 00 00 00       	jmp    c01067da <check_boot_pgdir+0xdc>$/;"	l
c0106710	obj/kernel.asm	/^c0106710:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106713	obj/kernel.asm	/^c0106713:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106716	obj/kernel.asm	/^c0106716:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106719	obj/kernel.asm	/^c0106719:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010671c	obj/kernel.asm	/^c010671c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010671f	obj/kernel.asm	/^c010671f:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0106724	obj/kernel.asm	/^c0106724:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0106727	obj/kernel.asm	/^c0106727:	72 23                	jb     c010674c <check_boot_pgdir+0x4e>$/;"	l
c0106729	obj/kernel.asm	/^c0106729:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010672c	obj/kernel.asm	/^c010672c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106730	obj/kernel.asm	/^c0106730:	c7 44 24 08 2c d2 10 	movl   $0xc010d22c,0x8(%esp)$/;"	l
c0106737	obj/kernel.asm	/^c0106737:	c0 $/;"	l
c0106738	obj/kernel.asm	/^c0106738:	c7 44 24 04 b6 02 00 	movl   $0x2b6,0x4(%esp)$/;"	l
c010673f	obj/kernel.asm	/^c010673f:	00 $/;"	l
c0106740	obj/kernel.asm	/^c0106740:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106747	obj/kernel.asm	/^c0106747:	e8 8e a6 ff ff       	call   c0100dda <__panic>$/;"	l
c010674c	obj/kernel.asm	/^c010674c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010674f	obj/kernel.asm	/^c010674f:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106754	obj/kernel.asm	/^c0106754:	89 c2                	mov    %eax,%edx$/;"	l
c0106756	obj/kernel.asm	/^c0106756:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c010675b	obj/kernel.asm	/^c010675b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106762	obj/kernel.asm	/^c0106762:	00 $/;"	l
c0106763	obj/kernel.asm	/^c0106763:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106767	obj/kernel.asm	/^c0106767:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010676a	obj/kernel.asm	/^c010676a:	e8 9d f0 ff ff       	call   c010580c <get_pte>$/;"	l
c010676f	obj/kernel.asm	/^c010676f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106772	obj/kernel.asm	/^c0106772:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0106776	obj/kernel.asm	/^c0106776:	75 24                	jne    c010679c <check_boot_pgdir+0x9e>$/;"	l
c0106778	obj/kernel.asm	/^c0106778:	c7 44 24 0c 74 d6 10 	movl   $0xc010d674,0xc(%esp)$/;"	l
c010677f	obj/kernel.asm	/^c010677f:	c0 $/;"	l
c0106780	obj/kernel.asm	/^c0106780:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106787	obj/kernel.asm	/^c0106787:	c0 $/;"	l
c0106788	obj/kernel.asm	/^c0106788:	c7 44 24 04 b6 02 00 	movl   $0x2b6,0x4(%esp)$/;"	l
c010678f	obj/kernel.asm	/^c010678f:	00 $/;"	l
c0106790	obj/kernel.asm	/^c0106790:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106797	obj/kernel.asm	/^c0106797:	e8 3e a6 ff ff       	call   c0100dda <__panic>$/;"	l
c010679c	obj/kernel.asm	/^c010679c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010679f	obj/kernel.asm	/^c010679f:	8b 00                	mov    (%eax),%eax$/;"	l
c01067a1	obj/kernel.asm	/^c01067a1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01067a6	obj/kernel.asm	/^c01067a6:	89 c2                	mov    %eax,%edx$/;"	l
c01067a8	obj/kernel.asm	/^c01067a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01067ab	obj/kernel.asm	/^c01067ab:	39 c2                	cmp    %eax,%edx$/;"	l
c01067ad	obj/kernel.asm	/^c01067ad:	74 24                	je     c01067d3 <check_boot_pgdir+0xd5>$/;"	l
c01067af	obj/kernel.asm	/^c01067af:	c7 44 24 0c b1 d6 10 	movl   $0xc010d6b1,0xc(%esp)$/;"	l
c01067b6	obj/kernel.asm	/^c01067b6:	c0 $/;"	l
c01067b7	obj/kernel.asm	/^c01067b7:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01067be	obj/kernel.asm	/^c01067be:	c0 $/;"	l
c01067bf	obj/kernel.asm	/^c01067bf:	c7 44 24 04 b7 02 00 	movl   $0x2b7,0x4(%esp)$/;"	l
c01067c6	obj/kernel.asm	/^c01067c6:	00 $/;"	l
c01067c7	obj/kernel.asm	/^c01067c7:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01067ce	obj/kernel.asm	/^c01067ce:	e8 07 a6 ff ff       	call   c0100dda <__panic>$/;"	l
c01067d3	obj/kernel.asm	/^c01067d3:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c01067da	obj/kernel.asm	/^c01067da:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01067dd	obj/kernel.asm	/^c01067dd:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c01067e2	obj/kernel.asm	/^c01067e2:	39 c2                	cmp    %eax,%edx$/;"	l
c01067e4	obj/kernel.asm	/^c01067e4:	0f 82 26 ff ff ff    	jb     c0106710 <check_boot_pgdir+0x12>$/;"	l
c01067ea	obj/kernel.asm	/^c01067ea:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01067ef	obj/kernel.asm	/^c01067ef:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c01067f4	obj/kernel.asm	/^c01067f4:	8b 00                	mov    (%eax),%eax$/;"	l
c01067f6	obj/kernel.asm	/^c01067f6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01067fb	obj/kernel.asm	/^c01067fb:	89 c2                	mov    %eax,%edx$/;"	l
c01067fd	obj/kernel.asm	/^c01067fd:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106802	obj/kernel.asm	/^c0106802:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106805	obj/kernel.asm	/^c0106805:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c010680c	obj/kernel.asm	/^c010680c:	77 23                	ja     c0106831 <check_boot_pgdir+0x133>$/;"	l
c010680e	obj/kernel.asm	/^c010680e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106811	obj/kernel.asm	/^c0106811:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106815	obj/kernel.asm	/^c0106815:	c7 44 24 08 d0 d2 10 	movl   $0xc010d2d0,0x8(%esp)$/;"	l
c010681c	obj/kernel.asm	/^c010681c:	c0 $/;"	l
c010681d	obj/kernel.asm	/^c010681d:	c7 44 24 04 ba 02 00 	movl   $0x2ba,0x4(%esp)$/;"	l
c0106824	obj/kernel.asm	/^c0106824:	00 $/;"	l
c0106825	obj/kernel.asm	/^c0106825:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010682c	obj/kernel.asm	/^c010682c:	e8 a9 a5 ff ff       	call   c0100dda <__panic>$/;"	l
c0106831	obj/kernel.asm	/^c0106831:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106834	obj/kernel.asm	/^c0106834:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0106839	obj/kernel.asm	/^c0106839:	39 c2                	cmp    %eax,%edx$/;"	l
c010683b	obj/kernel.asm	/^c010683b:	74 24                	je     c0106861 <check_boot_pgdir+0x163>$/;"	l
c010683d	obj/kernel.asm	/^c010683d:	c7 44 24 0c c8 d6 10 	movl   $0xc010d6c8,0xc(%esp)$/;"	l
c0106844	obj/kernel.asm	/^c0106844:	c0 $/;"	l
c0106845	obj/kernel.asm	/^c0106845:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010684c	obj/kernel.asm	/^c010684c:	c0 $/;"	l
c010684d	obj/kernel.asm	/^c010684d:	c7 44 24 04 ba 02 00 	movl   $0x2ba,0x4(%esp)$/;"	l
c0106854	obj/kernel.asm	/^c0106854:	00 $/;"	l
c0106855	obj/kernel.asm	/^c0106855:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010685c	obj/kernel.asm	/^c010685c:	e8 79 a5 ff ff       	call   c0100dda <__panic>$/;"	l
c0106861	obj/kernel.asm	/^c0106861:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106866	obj/kernel.asm	/^c0106866:	8b 00                	mov    (%eax),%eax$/;"	l
c0106868	obj/kernel.asm	/^c0106868:	85 c0                	test   %eax,%eax$/;"	l
c010686a	obj/kernel.asm	/^c010686a:	74 24                	je     c0106890 <check_boot_pgdir+0x192>$/;"	l
c010686c	obj/kernel.asm	/^c010686c:	c7 44 24 0c fc d6 10 	movl   $0xc010d6fc,0xc(%esp)$/;"	l
c0106873	obj/kernel.asm	/^c0106873:	c0 $/;"	l
c0106874	obj/kernel.asm	/^c0106874:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010687b	obj/kernel.asm	/^c010687b:	c0 $/;"	l
c010687c	obj/kernel.asm	/^c010687c:	c7 44 24 04 bc 02 00 	movl   $0x2bc,0x4(%esp)$/;"	l
c0106883	obj/kernel.asm	/^c0106883:	00 $/;"	l
c0106884	obj/kernel.asm	/^c0106884:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010688b	obj/kernel.asm	/^c010688b:	e8 4a a5 ff ff       	call   c0100dda <__panic>$/;"	l
c0106890	obj/kernel.asm	/^c0106890:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0106897	obj/kernel.asm	/^c0106897:	e8 09 e8 ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c010689c	obj/kernel.asm	/^c010689c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010689f	obj/kernel.asm	/^c010689f:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c01068a4	obj/kernel.asm	/^c01068a4:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c01068ab	obj/kernel.asm	/^c01068ab:	00 $/;"	l
c01068ac	obj/kernel.asm	/^c01068ac:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c01068b3	obj/kernel.asm	/^c01068b3:	00 $/;"	l
c01068b4	obj/kernel.asm	/^c01068b4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01068b7	obj/kernel.asm	/^c01068b7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01068bb	obj/kernel.asm	/^c01068bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01068be	obj/kernel.asm	/^c01068be:	e8 98 f5 ff ff       	call   c0105e5b <page_insert>$/;"	l
c01068c3	obj/kernel.asm	/^c01068c3:	85 c0                	test   %eax,%eax$/;"	l
c01068c5	obj/kernel.asm	/^c01068c5:	74 24                	je     c01068eb <check_boot_pgdir+0x1ed>$/;"	l
c01068c7	obj/kernel.asm	/^c01068c7:	c7 44 24 0c 10 d7 10 	movl   $0xc010d710,0xc(%esp)$/;"	l
c01068ce	obj/kernel.asm	/^c01068ce:	c0 $/;"	l
c01068cf	obj/kernel.asm	/^c01068cf:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01068d6	obj/kernel.asm	/^c01068d6:	c0 $/;"	l
c01068d7	obj/kernel.asm	/^c01068d7:	c7 44 24 04 c0 02 00 	movl   $0x2c0,0x4(%esp)$/;"	l
c01068de	obj/kernel.asm	/^c01068de:	00 $/;"	l
c01068df	obj/kernel.asm	/^c01068df:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01068e6	obj/kernel.asm	/^c01068e6:	e8 ef a4 ff ff       	call   c0100dda <__panic>$/;"	l
c01068eb	obj/kernel.asm	/^c01068eb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01068ee	obj/kernel.asm	/^c01068ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01068f1	obj/kernel.asm	/^c01068f1:	e8 aa e5 ff ff       	call   c0104ea0 <page_ref>$/;"	l
c01068f6	obj/kernel.asm	/^c01068f6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01068f9	obj/kernel.asm	/^c01068f9:	74 24                	je     c010691f <check_boot_pgdir+0x221>$/;"	l
c01068fb	obj/kernel.asm	/^c01068fb:	c7 44 24 0c 3e d7 10 	movl   $0xc010d73e,0xc(%esp)$/;"	l
c0106902	obj/kernel.asm	/^c0106902:	c0 $/;"	l
c0106903	obj/kernel.asm	/^c0106903:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010690a	obj/kernel.asm	/^c010690a:	c0 $/;"	l
c010690b	obj/kernel.asm	/^c010690b:	c7 44 24 04 c1 02 00 	movl   $0x2c1,0x4(%esp)$/;"	l
c0106912	obj/kernel.asm	/^c0106912:	00 $/;"	l
c0106913	obj/kernel.asm	/^c0106913:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010691a	obj/kernel.asm	/^c010691a:	e8 bb a4 ff ff       	call   c0100dda <__panic>$/;"	l
c010691f	obj/kernel.asm	/^c010691f:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106924	obj/kernel.asm	/^c0106924:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c010692b	obj/kernel.asm	/^c010692b:	00 $/;"	l
c010692c	obj/kernel.asm	/^c010692c:	c7 44 24 08 00 11 00 	movl   $0x1100,0x8(%esp)$/;"	l
c0106933	obj/kernel.asm	/^c0106933:	00 $/;"	l
c0106934	obj/kernel.asm	/^c0106934:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106937	obj/kernel.asm	/^c0106937:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010693b	obj/kernel.asm	/^c010693b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010693e	obj/kernel.asm	/^c010693e:	e8 18 f5 ff ff       	call   c0105e5b <page_insert>$/;"	l
c0106943	obj/kernel.asm	/^c0106943:	85 c0                	test   %eax,%eax$/;"	l
c0106945	obj/kernel.asm	/^c0106945:	74 24                	je     c010696b <check_boot_pgdir+0x26d>$/;"	l
c0106947	obj/kernel.asm	/^c0106947:	c7 44 24 0c 50 d7 10 	movl   $0xc010d750,0xc(%esp)$/;"	l
c010694e	obj/kernel.asm	/^c010694e:	c0 $/;"	l
c010694f	obj/kernel.asm	/^c010694f:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106956	obj/kernel.asm	/^c0106956:	c0 $/;"	l
c0106957	obj/kernel.asm	/^c0106957:	c7 44 24 04 c2 02 00 	movl   $0x2c2,0x4(%esp)$/;"	l
c010695e	obj/kernel.asm	/^c010695e:	00 $/;"	l
c010695f	obj/kernel.asm	/^c010695f:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106966	obj/kernel.asm	/^c0106966:	e8 6f a4 ff ff       	call   c0100dda <__panic>$/;"	l
c010696b	obj/kernel.asm	/^c010696b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010696e	obj/kernel.asm	/^c010696e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106971	obj/kernel.asm	/^c0106971:	e8 2a e5 ff ff       	call   c0104ea0 <page_ref>$/;"	l
c0106976	obj/kernel.asm	/^c0106976:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0106979	obj/kernel.asm	/^c0106979:	74 24                	je     c010699f <check_boot_pgdir+0x2a1>$/;"	l
c010697b	obj/kernel.asm	/^c010697b:	c7 44 24 0c 87 d7 10 	movl   $0xc010d787,0xc(%esp)$/;"	l
c0106982	obj/kernel.asm	/^c0106982:	c0 $/;"	l
c0106983	obj/kernel.asm	/^c0106983:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c010698a	obj/kernel.asm	/^c010698a:	c0 $/;"	l
c010698b	obj/kernel.asm	/^c010698b:	c7 44 24 04 c3 02 00 	movl   $0x2c3,0x4(%esp)$/;"	l
c0106992	obj/kernel.asm	/^c0106992:	00 $/;"	l
c0106993	obj/kernel.asm	/^c0106993:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c010699a	obj/kernel.asm	/^c010699a:	e8 3b a4 ff ff       	call   c0100dda <__panic>$/;"	l
c010699f	obj/kernel.asm	/^c010699f:	c7 45 dc 98 d7 10 c0 	movl   $0xc010d798,-0x24(%ebp)$/;"	l
c01069a6	obj/kernel.asm	/^c01069a6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01069a9	obj/kernel.asm	/^c01069a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01069ad	obj/kernel.asm	/^c01069ad:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c01069b4	obj/kernel.asm	/^c01069b4:	e8 09 56 00 00       	call   c010bfc2 <strcpy>$/;"	l
c01069b9	obj/kernel.asm	/^c01069b9:	c7 44 24 04 00 11 00 	movl   $0x1100,0x4(%esp)$/;"	l
c01069c0	obj/kernel.asm	/^c01069c0:	00 $/;"	l
c01069c1	obj/kernel.asm	/^c01069c1:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c01069c8	obj/kernel.asm	/^c01069c8:	e8 6e 56 00 00       	call   c010c03b <strcmp>$/;"	l
c01069cd	obj/kernel.asm	/^c01069cd:	85 c0                	test   %eax,%eax$/;"	l
c01069cf	obj/kernel.asm	/^c01069cf:	74 24                	je     c01069f5 <check_boot_pgdir+0x2f7>$/;"	l
c01069d1	obj/kernel.asm	/^c01069d1:	c7 44 24 0c b0 d7 10 	movl   $0xc010d7b0,0xc(%esp)$/;"	l
c01069d8	obj/kernel.asm	/^c01069d8:	c0 $/;"	l
c01069d9	obj/kernel.asm	/^c01069d9:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c01069e0	obj/kernel.asm	/^c01069e0:	c0 $/;"	l
c01069e1	obj/kernel.asm	/^c01069e1:	c7 44 24 04 c7 02 00 	movl   $0x2c7,0x4(%esp)$/;"	l
c01069e8	obj/kernel.asm	/^c01069e8:	00 $/;"	l
c01069e9	obj/kernel.asm	/^c01069e9:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c01069f0	obj/kernel.asm	/^c01069f0:	e8 e5 a3 ff ff       	call   c0100dda <__panic>$/;"	l
c01069f5	obj/kernel.asm	/^c01069f5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069f8	obj/kernel.asm	/^c01069f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01069fb	obj/kernel.asm	/^c01069fb:	e8 f6 e3 ff ff       	call   c0104df6 <page2kva>$/;"	l
c0106a00	obj/kernel.asm	/^c0106a00:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0106a05	obj/kernel.asm	/^c0106a05:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0106a08	obj/kernel.asm	/^c0106a08:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106a0f	obj/kernel.asm	/^c0106a0f:	e8 56 55 00 00       	call   c010bf6a <strlen>$/;"	l
c0106a14	obj/kernel.asm	/^c0106a14:	85 c0                	test   %eax,%eax$/;"	l
c0106a16	obj/kernel.asm	/^c0106a16:	74 24                	je     c0106a3c <check_boot_pgdir+0x33e>$/;"	l
c0106a18	obj/kernel.asm	/^c0106a18:	c7 44 24 0c e8 d7 10 	movl   $0xc010d7e8,0xc(%esp)$/;"	l
c0106a1f	obj/kernel.asm	/^c0106a1f:	c0 $/;"	l
c0106a20	obj/kernel.asm	/^c0106a20:	c7 44 24 08 19 d3 10 	movl   $0xc010d319,0x8(%esp)$/;"	l
c0106a27	obj/kernel.asm	/^c0106a27:	c0 $/;"	l
c0106a28	obj/kernel.asm	/^c0106a28:	c7 44 24 04 ca 02 00 	movl   $0x2ca,0x4(%esp)$/;"	l
c0106a2f	obj/kernel.asm	/^c0106a2f:	00 $/;"	l
c0106a30	obj/kernel.asm	/^c0106a30:	c7 04 24 f4 d2 10 c0 	movl   $0xc010d2f4,(%esp)$/;"	l
c0106a37	obj/kernel.asm	/^c0106a37:	e8 9e a3 ff ff       	call   c0100dda <__panic>$/;"	l
c0106a3c	obj/kernel.asm	/^c0106a3c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106a43	obj/kernel.asm	/^c0106a43:	00 $/;"	l
c0106a44	obj/kernel.asm	/^c0106a44:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106a47	obj/kernel.asm	/^c0106a47:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106a4a	obj/kernel.asm	/^c0106a4a:	e8 c1 e6 ff ff       	call   c0105110 <free_pages>$/;"	l
c0106a4f	obj/kernel.asm	/^c0106a4f:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106a54	obj/kernel.asm	/^c0106a54:	8b 00                	mov    (%eax),%eax$/;"	l
c0106a56	obj/kernel.asm	/^c0106a56:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106a5b	obj/kernel.asm	/^c0106a5b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106a5e	obj/kernel.asm	/^c0106a5e:	e8 4e e3 ff ff       	call   c0104db1 <pa2page>$/;"	l
c0106a63	obj/kernel.asm	/^c0106a63:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106a6a	obj/kernel.asm	/^c0106a6a:	00 $/;"	l
c0106a6b	obj/kernel.asm	/^c0106a6b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106a6e	obj/kernel.asm	/^c0106a6e:	e8 9d e6 ff ff       	call   c0105110 <free_pages>$/;"	l
c0106a73	obj/kernel.asm	/^c0106a73:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0106a78	obj/kernel.asm	/^c0106a78:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106a7e	obj/kernel.asm	/^c0106a7e:	c7 04 24 0c d8 10 c0 	movl   $0xc010d80c,(%esp)$/;"	l
c0106a85	obj/kernel.asm	/^c0106a85:	e8 ce 98 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106a8a	obj/kernel.asm	/^c0106a8a:	c9                   	leave  $/;"	l
c0106a8b	obj/kernel.asm	/^c0106a8b:	c3                   	ret    $/;"	l
c0106a8c	obj/kernel.asm	/^c0106a8c <perm2str>:$/;"	l
c0106a8c	obj/kernel.asm	/^c0106a8c:	55                   	push   %ebp$/;"	l
c0106a8d	obj/kernel.asm	/^c0106a8d:	89 e5                	mov    %esp,%ebp$/;"	l
c0106a8f	obj/kernel.asm	/^c0106a8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106a92	obj/kernel.asm	/^c0106a92:	83 e0 04             	and    $0x4,%eax$/;"	l
c0106a95	obj/kernel.asm	/^c0106a95:	85 c0                	test   %eax,%eax$/;"	l
c0106a97	obj/kernel.asm	/^c0106a97:	74 07                	je     c0106aa0 <perm2str+0x14>$/;"	l
c0106a99	obj/kernel.asm	/^c0106a99:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0106a9e	obj/kernel.asm	/^c0106a9e:	eb 05                	jmp    c0106aa5 <perm2str+0x19>$/;"	l
c0106aa0	obj/kernel.asm	/^c0106aa0:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0106aa5	obj/kernel.asm	/^c0106aa5:	a2 08 fe 1a c0       	mov    %al,0xc01afe08$/;"	l
c0106aaa	obj/kernel.asm	/^c0106aaa:	c6 05 09 fe 1a c0 72 	movb   $0x72,0xc01afe09$/;"	l
c0106ab1	obj/kernel.asm	/^c0106ab1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106ab4	obj/kernel.asm	/^c0106ab4:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106ab7	obj/kernel.asm	/^c0106ab7:	85 c0                	test   %eax,%eax$/;"	l
c0106ab9	obj/kernel.asm	/^c0106ab9:	74 07                	je     c0106ac2 <perm2str+0x36>$/;"	l
c0106abb	obj/kernel.asm	/^c0106abb:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c0106ac0	obj/kernel.asm	/^c0106ac0:	eb 05                	jmp    c0106ac7 <perm2str+0x3b>$/;"	l
c0106ac2	obj/kernel.asm	/^c0106ac2:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0106ac7	obj/kernel.asm	/^c0106ac7:	a2 0a fe 1a c0       	mov    %al,0xc01afe0a$/;"	l
c0106acc	obj/kernel.asm	/^c0106acc:	c6 05 0b fe 1a c0 00 	movb   $0x0,0xc01afe0b$/;"	l
c0106ad3	obj/kernel.asm	/^c0106ad3:	b8 08 fe 1a c0       	mov    $0xc01afe08,%eax$/;"	l
c0106ad8	obj/kernel.asm	/^c0106ad8:	5d                   	pop    %ebp$/;"	l
c0106ad9	obj/kernel.asm	/^c0106ad9:	c3                   	ret    $/;"	l
c0106ada	obj/kernel.asm	/^c0106ada <get_pgtable_items>:$/;"	l
c0106ada	obj/kernel.asm	/^c0106ada:	55                   	push   %ebp$/;"	l
c0106adb	obj/kernel.asm	/^c0106adb:	89 e5                	mov    %esp,%ebp$/;"	l
c0106add	obj/kernel.asm	/^c0106add:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0106ae0	obj/kernel.asm	/^c0106ae0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106ae3	obj/kernel.asm	/^c0106ae3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106ae6	obj/kernel.asm	/^c0106ae6:	72 0a                	jb     c0106af2 <get_pgtable_items+0x18>$/;"	l
c0106ae8	obj/kernel.asm	/^c0106ae8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106aed	obj/kernel.asm	/^c0106aed:	e9 9c 00 00 00       	jmp    c0106b8e <get_pgtable_items+0xb4>$/;"	l
c0106af2	obj/kernel.asm	/^c0106af2:	eb 04                	jmp    c0106af8 <get_pgtable_items+0x1e>$/;"	l
c0106af4	obj/kernel.asm	/^c0106af4:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106af8	obj/kernel.asm	/^c0106af8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106afb	obj/kernel.asm	/^c0106afb:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106afe	obj/kernel.asm	/^c0106afe:	73 18                	jae    c0106b18 <get_pgtable_items+0x3e>$/;"	l
c0106b00	obj/kernel.asm	/^c0106b00:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b03	obj/kernel.asm	/^c0106b03:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106b0a	obj/kernel.asm	/^c0106b0a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106b0d	obj/kernel.asm	/^c0106b0d:	01 d0                	add    %edx,%eax$/;"	l
c0106b0f	obj/kernel.asm	/^c0106b0f:	8b 00                	mov    (%eax),%eax$/;"	l
c0106b11	obj/kernel.asm	/^c0106b11:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106b14	obj/kernel.asm	/^c0106b14:	85 c0                	test   %eax,%eax$/;"	l
c0106b16	obj/kernel.asm	/^c0106b16:	74 dc                	je     c0106af4 <get_pgtable_items+0x1a>$/;"	l
c0106b18	obj/kernel.asm	/^c0106b18:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b1b	obj/kernel.asm	/^c0106b1b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106b1e	obj/kernel.asm	/^c0106b1e:	73 69                	jae    c0106b89 <get_pgtable_items+0xaf>$/;"	l
c0106b20	obj/kernel.asm	/^c0106b20:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0106b24	obj/kernel.asm	/^c0106b24:	74 08                	je     c0106b2e <get_pgtable_items+0x54>$/;"	l
c0106b26	obj/kernel.asm	/^c0106b26:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0106b29	obj/kernel.asm	/^c0106b29:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106b2c	obj/kernel.asm	/^c0106b2c:	89 10                	mov    %edx,(%eax)$/;"	l
c0106b2e	obj/kernel.asm	/^c0106b2e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b31	obj/kernel.asm	/^c0106b31:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0106b34	obj/kernel.asm	/^c0106b34:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c0106b37	obj/kernel.asm	/^c0106b37:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106b3e	obj/kernel.asm	/^c0106b3e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106b41	obj/kernel.asm	/^c0106b41:	01 d0                	add    %edx,%eax$/;"	l
c0106b43	obj/kernel.asm	/^c0106b43:	8b 00                	mov    (%eax),%eax$/;"	l
c0106b45	obj/kernel.asm	/^c0106b45:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106b48	obj/kernel.asm	/^c0106b48:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0106b4b	obj/kernel.asm	/^c0106b4b:	eb 04                	jmp    c0106b51 <get_pgtable_items+0x77>$/;"	l
c0106b4d	obj/kernel.asm	/^c0106b4d:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106b51	obj/kernel.asm	/^c0106b51:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b54	obj/kernel.asm	/^c0106b54:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106b57	obj/kernel.asm	/^c0106b57:	73 1d                	jae    c0106b76 <get_pgtable_items+0x9c>$/;"	l
c0106b59	obj/kernel.asm	/^c0106b59:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b5c	obj/kernel.asm	/^c0106b5c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106b63	obj/kernel.asm	/^c0106b63:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106b66	obj/kernel.asm	/^c0106b66:	01 d0                	add    %edx,%eax$/;"	l
c0106b68	obj/kernel.asm	/^c0106b68:	8b 00                	mov    (%eax),%eax$/;"	l
c0106b6a	obj/kernel.asm	/^c0106b6a:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106b6d	obj/kernel.asm	/^c0106b6d:	89 c2                	mov    %eax,%edx$/;"	l
c0106b6f	obj/kernel.asm	/^c0106b6f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106b72	obj/kernel.asm	/^c0106b72:	39 c2                	cmp    %eax,%edx$/;"	l
c0106b74	obj/kernel.asm	/^c0106b74:	74 d7                	je     c0106b4d <get_pgtable_items+0x73>$/;"	l
c0106b76	obj/kernel.asm	/^c0106b76:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0106b7a	obj/kernel.asm	/^c0106b7a:	74 08                	je     c0106b84 <get_pgtable_items+0xaa>$/;"	l
c0106b7c	obj/kernel.asm	/^c0106b7c:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0106b7f	obj/kernel.asm	/^c0106b7f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106b82	obj/kernel.asm	/^c0106b82:	89 10                	mov    %edx,(%eax)$/;"	l
c0106b84	obj/kernel.asm	/^c0106b84:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106b87	obj/kernel.asm	/^c0106b87:	eb 05                	jmp    c0106b8e <get_pgtable_items+0xb4>$/;"	l
c0106b89	obj/kernel.asm	/^c0106b89:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106b8e	obj/kernel.asm	/^c0106b8e:	c9                   	leave  $/;"	l
c0106b8f	obj/kernel.asm	/^c0106b8f:	c3                   	ret    $/;"	l
c0106b90	obj/kernel.asm	/^c0106b90 <print_pgdir>:$/;"	l
c0106b90	obj/kernel.asm	/^c0106b90:	55                   	push   %ebp$/;"	l
c0106b91	obj/kernel.asm	/^c0106b91:	89 e5                	mov    %esp,%ebp$/;"	l
c0106b93	obj/kernel.asm	/^c0106b93:	57                   	push   %edi$/;"	l
c0106b94	obj/kernel.asm	/^c0106b94:	56                   	push   %esi$/;"	l
c0106b95	obj/kernel.asm	/^c0106b95:	53                   	push   %ebx$/;"	l
c0106b96	obj/kernel.asm	/^c0106b96:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
c0106b99	obj/kernel.asm	/^c0106b99:	c7 04 24 2c d8 10 c0 	movl   $0xc010d82c,(%esp)$/;"	l
c0106ba0	obj/kernel.asm	/^c0106ba0:	e8 b3 97 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106ba5	obj/kernel.asm	/^c0106ba5:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106bac	obj/kernel.asm	/^c0106bac:	e9 fa 00 00 00       	jmp    c0106cab <print_pgdir+0x11b>$/;"	l
c0106bb1	obj/kernel.asm	/^c0106bb1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106bb4	obj/kernel.asm	/^c0106bb4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106bb7	obj/kernel.asm	/^c0106bb7:	e8 d0 fe ff ff       	call   c0106a8c <perm2str>$/;"	l
c0106bbc	obj/kernel.asm	/^c0106bbc:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106bbf	obj/kernel.asm	/^c0106bbf:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106bc2	obj/kernel.asm	/^c0106bc2:	29 d1                	sub    %edx,%ecx$/;"	l
c0106bc4	obj/kernel.asm	/^c0106bc4:	89 ca                	mov    %ecx,%edx$/;"	l
c0106bc6	obj/kernel.asm	/^c0106bc6:	89 d6                	mov    %edx,%esi$/;"	l
c0106bc8	obj/kernel.asm	/^c0106bc8:	c1 e6 16             	shl    $0x16,%esi$/;"	l
c0106bcb	obj/kernel.asm	/^c0106bcb:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106bce	obj/kernel.asm	/^c0106bce:	89 d3                	mov    %edx,%ebx$/;"	l
c0106bd0	obj/kernel.asm	/^c0106bd0:	c1 e3 16             	shl    $0x16,%ebx$/;"	l
c0106bd3	obj/kernel.asm	/^c0106bd3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106bd6	obj/kernel.asm	/^c0106bd6:	89 d1                	mov    %edx,%ecx$/;"	l
c0106bd8	obj/kernel.asm	/^c0106bd8:	c1 e1 16             	shl    $0x16,%ecx$/;"	l
c0106bdb	obj/kernel.asm	/^c0106bdb:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
c0106bde	obj/kernel.asm	/^c0106bde:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106be1	obj/kernel.asm	/^c0106be1:	29 d7                	sub    %edx,%edi$/;"	l
c0106be3	obj/kernel.asm	/^c0106be3:	89 fa                	mov    %edi,%edx$/;"	l
c0106be5	obj/kernel.asm	/^c0106be5:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0106be9	obj/kernel.asm	/^c0106be9:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106bed	obj/kernel.asm	/^c0106bed:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106bf1	obj/kernel.asm	/^c0106bf1:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106bf5	obj/kernel.asm	/^c0106bf5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106bf9	obj/kernel.asm	/^c0106bf9:	c7 04 24 5d d8 10 c0 	movl   $0xc010d85d,(%esp)$/;"	l
c0106c00	obj/kernel.asm	/^c0106c00:	e8 53 97 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106c05	obj/kernel.asm	/^c0106c05:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106c08	obj/kernel.asm	/^c0106c08:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c0106c0b	obj/kernel.asm	/^c0106c0b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0106c0e	obj/kernel.asm	/^c0106c0e:	eb 54                	jmp    c0106c64 <print_pgdir+0xd4>$/;"	l
c0106c10	obj/kernel.asm	/^c0106c10:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106c13	obj/kernel.asm	/^c0106c13:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106c16	obj/kernel.asm	/^c0106c16:	e8 71 fe ff ff       	call   c0106a8c <perm2str>$/;"	l
c0106c1b	obj/kernel.asm	/^c0106c1b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c0106c1e	obj/kernel.asm	/^c0106c1e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106c21	obj/kernel.asm	/^c0106c21:	29 d1                	sub    %edx,%ecx$/;"	l
c0106c23	obj/kernel.asm	/^c0106c23:	89 ca                	mov    %ecx,%edx$/;"	l
c0106c25	obj/kernel.asm	/^c0106c25:	89 d6                	mov    %edx,%esi$/;"	l
c0106c27	obj/kernel.asm	/^c0106c27:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
c0106c2a	obj/kernel.asm	/^c0106c2a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0106c2d	obj/kernel.asm	/^c0106c2d:	89 d3                	mov    %edx,%ebx$/;"	l
c0106c2f	obj/kernel.asm	/^c0106c2f:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
c0106c32	obj/kernel.asm	/^c0106c32:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106c35	obj/kernel.asm	/^c0106c35:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0106c38	obj/kernel.asm	/^c0106c38:	89 d1                	mov    %edx,%ecx$/;"	l
c0106c3a	obj/kernel.asm	/^c0106c3a:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
c0106c3d	obj/kernel.asm	/^c0106c3d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106c40	obj/kernel.asm	/^c0106c40:	29 d7                	sub    %edx,%edi$/;"	l
c0106c42	obj/kernel.asm	/^c0106c42:	89 fa                	mov    %edi,%edx$/;"	l
c0106c44	obj/kernel.asm	/^c0106c44:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0106c48	obj/kernel.asm	/^c0106c48:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106c4c	obj/kernel.asm	/^c0106c4c:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106c50	obj/kernel.asm	/^c0106c50:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106c54	obj/kernel.asm	/^c0106c54:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106c58	obj/kernel.asm	/^c0106c58:	c7 04 24 7c d8 10 c0 	movl   $0xc010d87c,(%esp)$/;"	l
c0106c5f	obj/kernel.asm	/^c0106c5f:	e8 f4 96 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106c64	obj/kernel.asm	/^c0106c64:	ba 00 00 c0 fa       	mov    $0xfac00000,%edx$/;"	l
c0106c69	obj/kernel.asm	/^c0106c69:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0106c6c	obj/kernel.asm	/^c0106c6c:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106c6f	obj/kernel.asm	/^c0106c6f:	89 ce                	mov    %ecx,%esi$/;"	l
c0106c71	obj/kernel.asm	/^c0106c71:	c1 e6 0a             	shl    $0xa,%esi$/;"	l
c0106c74	obj/kernel.asm	/^c0106c74:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0106c77	obj/kernel.asm	/^c0106c77:	89 cb                	mov    %ecx,%ebx$/;"	l
c0106c79	obj/kernel.asm	/^c0106c79:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c0106c7c	obj/kernel.asm	/^c0106c7c:	8d 4d d4             	lea    -0x2c(%ebp),%ecx$/;"	l
c0106c7f	obj/kernel.asm	/^c0106c7f:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106c83	obj/kernel.asm	/^c0106c83:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
c0106c86	obj/kernel.asm	/^c0106c86:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106c8a	obj/kernel.asm	/^c0106c8a:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106c8e	obj/kernel.asm	/^c0106c8e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106c92	obj/kernel.asm	/^c0106c92:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0106c96	obj/kernel.asm	/^c0106c96:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0106c99	obj/kernel.asm	/^c0106c99:	e8 3c fe ff ff       	call   c0106ada <get_pgtable_items>$/;"	l
c0106c9e	obj/kernel.asm	/^c0106c9e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106ca1	obj/kernel.asm	/^c0106ca1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106ca5	obj/kernel.asm	/^c0106ca5:	0f 85 65 ff ff ff    	jne    c0106c10 <print_pgdir+0x80>$/;"	l
c0106cab	obj/kernel.asm	/^c0106cab:	ba 00 b0 fe fa       	mov    $0xfafeb000,%edx$/;"	l
c0106cb0	obj/kernel.asm	/^c0106cb0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106cb3	obj/kernel.asm	/^c0106cb3:	8d 4d dc             	lea    -0x24(%ebp),%ecx$/;"	l
c0106cb6	obj/kernel.asm	/^c0106cb6:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106cba	obj/kernel.asm	/^c0106cba:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c0106cbd	obj/kernel.asm	/^c0106cbd:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106cc1	obj/kernel.asm	/^c0106cc1:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106cc5	obj/kernel.asm	/^c0106cc5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106cc9	obj/kernel.asm	/^c0106cc9:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
c0106cd0	obj/kernel.asm	/^c0106cd0:	00 $/;"	l
c0106cd1	obj/kernel.asm	/^c0106cd1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0106cd8	obj/kernel.asm	/^c0106cd8:	e8 fd fd ff ff       	call   c0106ada <get_pgtable_items>$/;"	l
c0106cdd	obj/kernel.asm	/^c0106cdd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106ce0	obj/kernel.asm	/^c0106ce0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106ce4	obj/kernel.asm	/^c0106ce4:	0f 85 c7 fe ff ff    	jne    c0106bb1 <print_pgdir+0x21>$/;"	l
c0106cea	obj/kernel.asm	/^c0106cea:	c7 04 24 a0 d8 10 c0 	movl   $0xc010d8a0,(%esp)$/;"	l
c0106cf1	obj/kernel.asm	/^c0106cf1:	e8 62 96 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106cf6	obj/kernel.asm	/^c0106cf6:	83 c4 4c             	add    $0x4c,%esp$/;"	l
c0106cf9	obj/kernel.asm	/^c0106cf9:	5b                   	pop    %ebx$/;"	l
c0106cfa	obj/kernel.asm	/^c0106cfa:	5e                   	pop    %esi$/;"	l
c0106cfb	obj/kernel.asm	/^c0106cfb:	5f                   	pop    %edi$/;"	l
c0106cfc	obj/kernel.asm	/^c0106cfc:	5d                   	pop    %ebp$/;"	l
c0106cfd	obj/kernel.asm	/^c0106cfd:	c3                   	ret    $/;"	l
c0106cfe	obj/kernel.asm	/^c0106cfe <pa2page>:$/;"	l
c0106cfe	obj/kernel.asm	/^c0106cfe:	55                   	push   %ebp$/;"	l
c0106cff	obj/kernel.asm	/^c0106cff:	89 e5                	mov    %esp,%ebp$/;"	l
c0106d01	obj/kernel.asm	/^c0106d01:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106d04	obj/kernel.asm	/^c0106d04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106d07	obj/kernel.asm	/^c0106d07:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106d0a	obj/kernel.asm	/^c0106d0a:	89 c2                	mov    %eax,%edx$/;"	l
c0106d0c	obj/kernel.asm	/^c0106d0c:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0106d11	obj/kernel.asm	/^c0106d11:	39 c2                	cmp    %eax,%edx$/;"	l
c0106d13	obj/kernel.asm	/^c0106d13:	72 1c                	jb     c0106d31 <pa2page+0x33>$/;"	l
c0106d15	obj/kernel.asm	/^c0106d15:	c7 44 24 08 d4 d8 10 	movl   $0xc010d8d4,0x8(%esp)$/;"	l
c0106d1c	obj/kernel.asm	/^c0106d1c:	c0 $/;"	l
c0106d1d	obj/kernel.asm	/^c0106d1d:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0106d24	obj/kernel.asm	/^c0106d24:	00 $/;"	l
c0106d25	obj/kernel.asm	/^c0106d25:	c7 04 24 f3 d8 10 c0 	movl   $0xc010d8f3,(%esp)$/;"	l
c0106d2c	obj/kernel.asm	/^c0106d2c:	e8 a9 a0 ff ff       	call   c0100dda <__panic>$/;"	l
c0106d31	obj/kernel.asm	/^c0106d31:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c0106d36	obj/kernel.asm	/^c0106d36:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106d39	obj/kernel.asm	/^c0106d39:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106d3c	obj/kernel.asm	/^c0106d3c:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0106d3f	obj/kernel.asm	/^c0106d3f:	01 d0                	add    %edx,%eax$/;"	l
c0106d41	obj/kernel.asm	/^c0106d41:	c9                   	leave  $/;"	l
c0106d42	obj/kernel.asm	/^c0106d42:	c3                   	ret    $/;"	l
c0106d43	obj/kernel.asm	/^c0106d43 <pte2page>:$/;"	l
c0106d43	obj/kernel.asm	/^c0106d43:	55                   	push   %ebp$/;"	l
c0106d44	obj/kernel.asm	/^c0106d44:	89 e5                	mov    %esp,%ebp$/;"	l
c0106d46	obj/kernel.asm	/^c0106d46:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106d49	obj/kernel.asm	/^c0106d49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106d4c	obj/kernel.asm	/^c0106d4c:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106d4f	obj/kernel.asm	/^c0106d4f:	85 c0                	test   %eax,%eax$/;"	l
c0106d51	obj/kernel.asm	/^c0106d51:	75 1c                	jne    c0106d6f <pte2page+0x2c>$/;"	l
c0106d53	obj/kernel.asm	/^c0106d53:	c7 44 24 08 04 d9 10 	movl   $0xc010d904,0x8(%esp)$/;"	l
c0106d5a	obj/kernel.asm	/^c0106d5a:	c0 $/;"	l
c0106d5b	obj/kernel.asm	/^c0106d5b:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0106d62	obj/kernel.asm	/^c0106d62:	00 $/;"	l
c0106d63	obj/kernel.asm	/^c0106d63:	c7 04 24 f3 d8 10 c0 	movl   $0xc010d8f3,(%esp)$/;"	l
c0106d6a	obj/kernel.asm	/^c0106d6a:	e8 6b a0 ff ff       	call   c0100dda <__panic>$/;"	l
c0106d6f	obj/kernel.asm	/^c0106d6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106d72	obj/kernel.asm	/^c0106d72:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106d77	obj/kernel.asm	/^c0106d77:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106d7a	obj/kernel.asm	/^c0106d7a:	e8 7f ff ff ff       	call   c0106cfe <pa2page>$/;"	l
c0106d7f	obj/kernel.asm	/^c0106d7f:	c9                   	leave  $/;"	l
c0106d80	obj/kernel.asm	/^c0106d80:	c3                   	ret    $/;"	l
c0106d81	obj/kernel.asm	/^c0106d81 <swap_init>:$/;"	l
c0106d81	obj/kernel.asm	/^c0106d81:	55                   	push   %ebp$/;"	l
c0106d82	obj/kernel.asm	/^c0106d82:	89 e5                	mov    %esp,%ebp$/;"	l
c0106d84	obj/kernel.asm	/^c0106d84:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106d87	obj/kernel.asm	/^c0106d87:	e8 ce 22 00 00       	call   c010905a <swapfs_init>$/;"	l
c0106d8c	obj/kernel.asm	/^c0106d8c:	a1 3c 1f 1b c0       	mov    0xc01b1f3c,%eax$/;"	l
c0106d91	obj/kernel.asm	/^c0106d91:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c0106d96	obj/kernel.asm	/^c0106d96:	76 0c                	jbe    c0106da4 <swap_init+0x23>$/;"	l
c0106d98	obj/kernel.asm	/^c0106d98:	a1 3c 1f 1b c0       	mov    0xc01b1f3c,%eax$/;"	l
c0106d9d	obj/kernel.asm	/^c0106d9d:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c0106da2	obj/kernel.asm	/^c0106da2:	76 25                	jbe    c0106dc9 <swap_init+0x48>$/;"	l
c0106da4	obj/kernel.asm	/^c0106da4:	a1 3c 1f 1b c0       	mov    0xc01b1f3c,%eax$/;"	l
c0106da9	obj/kernel.asm	/^c0106da9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106dad	obj/kernel.asm	/^c0106dad:	c7 44 24 08 25 d9 10 	movl   $0xc010d925,0x8(%esp)$/;"	l
c0106db4	obj/kernel.asm	/^c0106db4:	c0 $/;"	l
c0106db5	obj/kernel.asm	/^c0106db5:	c7 44 24 04 27 00 00 	movl   $0x27,0x4(%esp)$/;"	l
c0106dbc	obj/kernel.asm	/^c0106dbc:	00 $/;"	l
c0106dbd	obj/kernel.asm	/^c0106dbd:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0106dc4	obj/kernel.asm	/^c0106dc4:	e8 11 a0 ff ff       	call   c0100dda <__panic>$/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	c7 05 14 fe 1a c0 60 	movl   $0xc012da60,0xc01afe14$/;"	l
c0106dd0	obj/kernel.asm	/^c0106dd0:	da 12 c0 $/;"	d
c0106dd3	obj/kernel.asm	/^c0106dd3:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c0106dd8	obj/kernel.asm	/^c0106dd8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106ddb	obj/kernel.asm	/^c0106ddb:	ff d0                	call   *%eax$/;"	l
c0106ddd	obj/kernel.asm	/^c0106ddd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106de0	obj/kernel.asm	/^c0106de0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106de4	obj/kernel.asm	/^c0106de4:	75 26                	jne    c0106e0c <swap_init+0x8b>$/;"	l
c0106de6	obj/kernel.asm	/^c0106de6:	c7 05 0c fe 1a c0 01 	movl   $0x1,0xc01afe0c$/;"	l
c0106ded	obj/kernel.asm	/^c0106ded:	00 00 00 $/;"	l
c0106df0	obj/kernel.asm	/^c0106df0:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c0106df5	obj/kernel.asm	/^c0106df5:	8b 00                	mov    (%eax),%eax$/;"	l
c0106df7	obj/kernel.asm	/^c0106df7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106dfb	obj/kernel.asm	/^c0106dfb:	c7 04 24 4f d9 10 c0 	movl   $0xc010d94f,(%esp)$/;"	l
c0106e02	obj/kernel.asm	/^c0106e02:	e8 51 95 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106e07	obj/kernel.asm	/^c0106e07:	e8 a4 04 00 00       	call   c01072b0 <check_swap>$/;"	l
c0106e0c	obj/kernel.asm	/^c0106e0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106e0f	obj/kernel.asm	/^c0106e0f:	c9                   	leave  $/;"	l
c0106e10	obj/kernel.asm	/^c0106e10:	c3                   	ret    $/;"	l
c0106e11	obj/kernel.asm	/^c0106e11 <swap_init_mm>:$/;"	l
c0106e11	obj/kernel.asm	/^c0106e11:	55                   	push   %ebp$/;"	l
c0106e12	obj/kernel.asm	/^c0106e12:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e14	obj/kernel.asm	/^c0106e14:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e17	obj/kernel.asm	/^c0106e17:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c0106e1c	obj/kernel.asm	/^c0106e1c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106e1f	obj/kernel.asm	/^c0106e1f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106e22	obj/kernel.asm	/^c0106e22:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106e25	obj/kernel.asm	/^c0106e25:	ff d0                	call   *%eax$/;"	l
c0106e27	obj/kernel.asm	/^c0106e27:	c9                   	leave  $/;"	l
c0106e28	obj/kernel.asm	/^c0106e28:	c3                   	ret    $/;"	l
c0106e29	obj/kernel.asm	/^c0106e29 <swap_tick_event>:$/;"	l
c0106e29	obj/kernel.asm	/^c0106e29:	55                   	push   %ebp$/;"	l
c0106e2a	obj/kernel.asm	/^c0106e2a:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e2c	obj/kernel.asm	/^c0106e2c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e2f	obj/kernel.asm	/^c0106e2f:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c0106e34	obj/kernel.asm	/^c0106e34:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106e37	obj/kernel.asm	/^c0106e37:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106e3a	obj/kernel.asm	/^c0106e3a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106e3d	obj/kernel.asm	/^c0106e3d:	ff d0                	call   *%eax$/;"	l
c0106e3f	obj/kernel.asm	/^c0106e3f:	c9                   	leave  $/;"	l
c0106e40	obj/kernel.asm	/^c0106e40:	c3                   	ret    $/;"	l
c0106e41	obj/kernel.asm	/^c0106e41 <swap_map_swappable>:$/;"	l
c0106e41	obj/kernel.asm	/^c0106e41:	55                   	push   %ebp$/;"	l
c0106e42	obj/kernel.asm	/^c0106e42:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e44	obj/kernel.asm	/^c0106e44:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e47	obj/kernel.asm	/^c0106e47:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c0106e4c	obj/kernel.asm	/^c0106e4c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106e4f	obj/kernel.asm	/^c0106e4f:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0106e52	obj/kernel.asm	/^c0106e52:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106e56	obj/kernel.asm	/^c0106e56:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106e59	obj/kernel.asm	/^c0106e59:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106e5d	obj/kernel.asm	/^c0106e5d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106e60	obj/kernel.asm	/^c0106e60:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106e64	obj/kernel.asm	/^c0106e64:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106e67	obj/kernel.asm	/^c0106e67:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106e6a	obj/kernel.asm	/^c0106e6a:	ff d0                	call   *%eax$/;"	l
c0106e6c	obj/kernel.asm	/^c0106e6c:	c9                   	leave  $/;"	l
c0106e6d	obj/kernel.asm	/^c0106e6d:	c3                   	ret    $/;"	l
c0106e6e	obj/kernel.asm	/^c0106e6e <swap_set_unswappable>:$/;"	l
c0106e6e	obj/kernel.asm	/^c0106e6e:	55                   	push   %ebp$/;"	l
c0106e6f	obj/kernel.asm	/^c0106e6f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e71	obj/kernel.asm	/^c0106e71:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e74	obj/kernel.asm	/^c0106e74:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c0106e79	obj/kernel.asm	/^c0106e79:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0106e7c	obj/kernel.asm	/^c0106e7c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106e7f	obj/kernel.asm	/^c0106e7f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106e83	obj/kernel.asm	/^c0106e83:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106e86	obj/kernel.asm	/^c0106e86:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106e89	obj/kernel.asm	/^c0106e89:	ff d0                	call   *%eax$/;"	l
c0106e8b	obj/kernel.asm	/^c0106e8b:	c9                   	leave  $/;"	l
c0106e8c	obj/kernel.asm	/^c0106e8c:	c3                   	ret    $/;"	l
c0106e8d	obj/kernel.asm	/^c0106e8d <swap_out>:$/;"	l
c0106e8d	obj/kernel.asm	/^c0106e8d:	55                   	push   %ebp$/;"	l
c0106e8e	obj/kernel.asm	/^c0106e8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e90	obj/kernel.asm	/^c0106e90:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106e93	obj/kernel.asm	/^c0106e93:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106e9a	obj/kernel.asm	/^c0106e9a:	e9 5a 01 00 00       	jmp    c0106ff9 <swap_out+0x16c>$/;"	l
c0106e9f	obj/kernel.asm	/^c0106e9f:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c0106ea4	obj/kernel.asm	/^c0106ea4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106eaa	obj/kernel.asm	/^c0106eaa:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106eae	obj/kernel.asm	/^c0106eae:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0106eb1	obj/kernel.asm	/^c0106eb1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106eb5	obj/kernel.asm	/^c0106eb5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106eb8	obj/kernel.asm	/^c0106eb8:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106ebb	obj/kernel.asm	/^c0106ebb:	ff d0                	call   *%eax$/;"	l
c0106ebd	obj/kernel.asm	/^c0106ebd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106ec0	obj/kernel.asm	/^c0106ec0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106ec4	obj/kernel.asm	/^c0106ec4:	74 18                	je     c0106ede <swap_out+0x51>$/;"	l
c0106ec6	obj/kernel.asm	/^c0106ec6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ec9	obj/kernel.asm	/^c0106ec9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106ecd	obj/kernel.asm	/^c0106ecd:	c7 04 24 64 d9 10 c0 	movl   $0xc010d964,(%esp)$/;"	l
c0106ed4	obj/kernel.asm	/^c0106ed4:	e8 7f 94 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106ed9	obj/kernel.asm	/^c0106ed9:	e9 27 01 00 00       	jmp    c0107005 <swap_out+0x178>$/;"	l
c0106ede	obj/kernel.asm	/^c0106ede:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106ee1	obj/kernel.asm	/^c0106ee1:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106ee4	obj/kernel.asm	/^c0106ee4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106ee7	obj/kernel.asm	/^c0106ee7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106eea	obj/kernel.asm	/^c0106eea:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106eed	obj/kernel.asm	/^c0106eed:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106ef4	obj/kernel.asm	/^c0106ef4:	00 $/;"	l
c0106ef5	obj/kernel.asm	/^c0106ef5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106ef8	obj/kernel.asm	/^c0106ef8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106efc	obj/kernel.asm	/^c0106efc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106eff	obj/kernel.asm	/^c0106eff:	e8 08 e9 ff ff       	call   c010580c <get_pte>$/;"	l
c0106f04	obj/kernel.asm	/^c0106f04:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106f07	obj/kernel.asm	/^c0106f07:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106f0a	obj/kernel.asm	/^c0106f0a:	8b 00                	mov    (%eax),%eax$/;"	l
c0106f0c	obj/kernel.asm	/^c0106f0c:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106f0f	obj/kernel.asm	/^c0106f0f:	85 c0                	test   %eax,%eax$/;"	l
c0106f11	obj/kernel.asm	/^c0106f11:	75 24                	jne    c0106f37 <swap_out+0xaa>$/;"	l
c0106f13	obj/kernel.asm	/^c0106f13:	c7 44 24 0c 91 d9 10 	movl   $0xc010d991,0xc(%esp)$/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a:	c0 $/;"	l
c0106f1b	obj/kernel.asm	/^c0106f1b:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0106f22	obj/kernel.asm	/^c0106f22:	c0 $/;"	l
c0106f23	obj/kernel.asm	/^c0106f23:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c0106f2a	obj/kernel.asm	/^c0106f2a:	00 $/;"	l
c0106f2b	obj/kernel.asm	/^c0106f2b:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0106f32	obj/kernel.asm	/^c0106f32:	e8 a3 9e ff ff       	call   c0100dda <__panic>$/;"	l
c0106f37	obj/kernel.asm	/^c0106f37:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106f3a	obj/kernel.asm	/^c0106f3a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106f3d	obj/kernel.asm	/^c0106f3d:	8b 52 1c             	mov    0x1c(%edx),%edx$/;"	l
c0106f40	obj/kernel.asm	/^c0106f40:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106f43	obj/kernel.asm	/^c0106f43:	83 c2 01             	add    $0x1,%edx$/;"	l
c0106f46	obj/kernel.asm	/^c0106f46:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c0106f49	obj/kernel.asm	/^c0106f49:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106f4d	obj/kernel.asm	/^c0106f4d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106f50	obj/kernel.asm	/^c0106f50:	e8 bf 21 00 00       	call   c0109114 <swapfs_write>$/;"	l
c0106f55	obj/kernel.asm	/^c0106f55:	85 c0                	test   %eax,%eax$/;"	l
c0106f57	obj/kernel.asm	/^c0106f57:	74 34                	je     c0106f8d <swap_out+0x100>$/;"	l
c0106f59	obj/kernel.asm	/^c0106f59:	c7 04 24 bb d9 10 c0 	movl   $0xc010d9bb,(%esp)$/;"	l
c0106f60	obj/kernel.asm	/^c0106f60:	e8 f3 93 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106f65	obj/kernel.asm	/^c0106f65:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c0106f6a	obj/kernel.asm	/^c0106f6a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106f6d	obj/kernel.asm	/^c0106f6d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106f70	obj/kernel.asm	/^c0106f70:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106f77	obj/kernel.asm	/^c0106f77:	00 $/;"	l
c0106f78	obj/kernel.asm	/^c0106f78:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106f7c	obj/kernel.asm	/^c0106f7c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106f7f	obj/kernel.asm	/^c0106f7f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106f83	obj/kernel.asm	/^c0106f83:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106f86	obj/kernel.asm	/^c0106f86:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106f89	obj/kernel.asm	/^c0106f89:	ff d0                	call   *%eax$/;"	l
c0106f8b	obj/kernel.asm	/^c0106f8b:	eb 68                	jmp    c0106ff5 <swap_out+0x168>$/;"	l
c0106f8d	obj/kernel.asm	/^c0106f8d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106f90	obj/kernel.asm	/^c0106f90:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106f93	obj/kernel.asm	/^c0106f93:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106f96	obj/kernel.asm	/^c0106f96:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106f99	obj/kernel.asm	/^c0106f99:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106f9d	obj/kernel.asm	/^c0106f9d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106fa0	obj/kernel.asm	/^c0106fa0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106fa4	obj/kernel.asm	/^c0106fa4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106fa7	obj/kernel.asm	/^c0106fa7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106fab	obj/kernel.asm	/^c0106fab:	c7 04 24 d4 d9 10 c0 	movl   $0xc010d9d4,(%esp)$/;"	l
c0106fb2	obj/kernel.asm	/^c0106fb2:	e8 a1 93 ff ff       	call   c0100358 <cprintf>$/;"	l
c0106fb7	obj/kernel.asm	/^c0106fb7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106fba	obj/kernel.asm	/^c0106fba:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106fbd	obj/kernel.asm	/^c0106fbd:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106fc0	obj/kernel.asm	/^c0106fc0:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106fc3	obj/kernel.asm	/^c0106fc3:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0106fc6	obj/kernel.asm	/^c0106fc6:	89 c2                	mov    %eax,%edx$/;"	l
c0106fc8	obj/kernel.asm	/^c0106fc8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106fcb	obj/kernel.asm	/^c0106fcb:	89 10                	mov    %edx,(%eax)$/;"	l
c0106fcd	obj/kernel.asm	/^c0106fcd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106fd0	obj/kernel.asm	/^c0106fd0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106fd7	obj/kernel.asm	/^c0106fd7:	00 $/;"	l
c0106fd8	obj/kernel.asm	/^c0106fd8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106fdb	obj/kernel.asm	/^c0106fdb:	e8 30 e1 ff ff       	call   c0105110 <free_pages>$/;"	l
c0106fe0	obj/kernel.asm	/^c0106fe0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fe3	obj/kernel.asm	/^c0106fe3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106fe6	obj/kernel.asm	/^c0106fe6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106fe9	obj/kernel.asm	/^c0106fe9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106fed	obj/kernel.asm	/^c0106fed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106ff0	obj/kernel.asm	/^c0106ff0:	e8 1f ef ff ff       	call   c0105f14 <tlb_invalidate>$/;"	l
c0106ff5	obj/kernel.asm	/^c0106ff5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0106ff9	obj/kernel.asm	/^c0106ff9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ffc	obj/kernel.asm	/^c0106ffc:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106fff	obj/kernel.asm	/^c0106fff:	0f 85 9a fe ff ff    	jne    c0106e9f <swap_out+0x12>$/;"	l
c0107005	obj/kernel.asm	/^c0107005:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107008	obj/kernel.asm	/^c0107008:	c9                   	leave  $/;"	l
c0107009	obj/kernel.asm	/^c0107009:	c3                   	ret    $/;"	l
c010700a	obj/kernel.asm	/^c010700a <swap_in>:$/;"	l
c010700a	obj/kernel.asm	/^c010700a:	55                   	push   %ebp$/;"	l
c010700b	obj/kernel.asm	/^c010700b:	89 e5                	mov    %esp,%ebp$/;"	l
c010700d	obj/kernel.asm	/^c010700d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107010	obj/kernel.asm	/^c0107010:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0107017	obj/kernel.asm	/^c0107017:	e8 89 e0 ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c010701c	obj/kernel.asm	/^c010701c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010701f	obj/kernel.asm	/^c010701f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107023	obj/kernel.asm	/^c0107023:	75 24                	jne    c0107049 <swap_in+0x3f>$/;"	l
c0107025	obj/kernel.asm	/^c0107025:	c7 44 24 0c 14 da 10 	movl   $0xc010da14,0xc(%esp)$/;"	l
c010702c	obj/kernel.asm	/^c010702c:	c0 $/;"	l
c010702d	obj/kernel.asm	/^c010702d:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107034	obj/kernel.asm	/^c0107034:	c0 $/;"	l
c0107035	obj/kernel.asm	/^c0107035:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c010703c	obj/kernel.asm	/^c010703c:	00 $/;"	l
c010703d	obj/kernel.asm	/^c010703d:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107044	obj/kernel.asm	/^c0107044:	e8 91 9d ff ff       	call   c0100dda <__panic>$/;"	l
c0107049	obj/kernel.asm	/^c0107049:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010704c	obj/kernel.asm	/^c010704c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010704f	obj/kernel.asm	/^c010704f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0107056	obj/kernel.asm	/^c0107056:	00 $/;"	l
c0107057	obj/kernel.asm	/^c0107057:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010705a	obj/kernel.asm	/^c010705a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010705e	obj/kernel.asm	/^c010705e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107061	obj/kernel.asm	/^c0107061:	e8 a6 e7 ff ff       	call   c010580c <get_pte>$/;"	l
c0107066	obj/kernel.asm	/^c0107066:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107069	obj/kernel.asm	/^c0107069:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010706c	obj/kernel.asm	/^c010706c:	8b 00                	mov    (%eax),%eax$/;"	l
c010706e	obj/kernel.asm	/^c010706e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0107071	obj/kernel.asm	/^c0107071:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0107075	obj/kernel.asm	/^c0107075:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107078	obj/kernel.asm	/^c0107078:	e8 25 20 00 00       	call   c01090a2 <swapfs_read>$/;"	l
c010707d	obj/kernel.asm	/^c010707d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107080	obj/kernel.asm	/^c0107080:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107084	obj/kernel.asm	/^c0107084:	74 2a                	je     c01070b0 <swap_in+0xa6>$/;"	l
c0107086	obj/kernel.asm	/^c0107086:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010708a	obj/kernel.asm	/^c010708a:	75 24                	jne    c01070b0 <swap_in+0xa6>$/;"	l
c010708c	obj/kernel.asm	/^c010708c:	c7 44 24 0c 21 da 10 	movl   $0xc010da21,0xc(%esp)$/;"	l
c0107093	obj/kernel.asm	/^c0107093:	c0 $/;"	l
c0107094	obj/kernel.asm	/^c0107094:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c010709b	obj/kernel.asm	/^c010709b:	c0 $/;"	l
c010709c	obj/kernel.asm	/^c010709c:	c7 44 24 04 85 00 00 	movl   $0x85,0x4(%esp)$/;"	l
c01070a3	obj/kernel.asm	/^c01070a3:	00 $/;"	l
c01070a4	obj/kernel.asm	/^c01070a4:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01070ab	obj/kernel.asm	/^c01070ab:	e8 2a 9d ff ff       	call   c0100dda <__panic>$/;"	l
c01070b0	obj/kernel.asm	/^c01070b0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070b3	obj/kernel.asm	/^c01070b3:	8b 00                	mov    (%eax),%eax$/;"	l
c01070b5	obj/kernel.asm	/^c01070b5:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c01070b8	obj/kernel.asm	/^c01070b8:	89 c2                	mov    %eax,%edx$/;"	l
c01070ba	obj/kernel.asm	/^c01070ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01070bd	obj/kernel.asm	/^c01070bd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01070c1	obj/kernel.asm	/^c01070c1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01070c5	obj/kernel.asm	/^c01070c5:	c7 04 24 28 da 10 c0 	movl   $0xc010da28,(%esp)$/;"	l
c01070cc	obj/kernel.asm	/^c01070cc:	e8 87 92 ff ff       	call   c0100358 <cprintf>$/;"	l
c01070d1	obj/kernel.asm	/^c01070d1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01070d4	obj/kernel.asm	/^c01070d4:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01070d7	obj/kernel.asm	/^c01070d7:	89 10                	mov    %edx,(%eax)$/;"	l
c01070d9	obj/kernel.asm	/^c01070d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01070de	obj/kernel.asm	/^c01070de:	c9                   	leave  $/;"	l
c01070df	obj/kernel.asm	/^c01070df:	c3                   	ret    $/;"	l
c01070e0	obj/kernel.asm	/^c01070e0 <check_content_set>:$/;"	l
c01070e0	obj/kernel.asm	/^c01070e0:	55                   	push   %ebp$/;"	l
c01070e1	obj/kernel.asm	/^c01070e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01070e3	obj/kernel.asm	/^c01070e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01070e6	obj/kernel.asm	/^c01070e6:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01070eb	obj/kernel.asm	/^c01070eb:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01070ee	obj/kernel.asm	/^c01070ee:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c01070f3	obj/kernel.asm	/^c01070f3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01070f6	obj/kernel.asm	/^c01070f6:	74 24                	je     c010711c <check_content_set+0x3c>$/;"	l
c01070f8	obj/kernel.asm	/^c01070f8:	c7 44 24 0c 66 da 10 	movl   $0xc010da66,0xc(%esp)$/;"	l
c01070ff	obj/kernel.asm	/^c01070ff:	c0 $/;"	l
c0107100	obj/kernel.asm	/^c0107100:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107107	obj/kernel.asm	/^c0107107:	c0 $/;"	l
c0107108	obj/kernel.asm	/^c0107108:	c7 44 24 04 92 00 00 	movl   $0x92,0x4(%esp)$/;"	l
c010710f	obj/kernel.asm	/^c010710f:	00 $/;"	l
c0107110	obj/kernel.asm	/^c0107110:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107117	obj/kernel.asm	/^c0107117:	e8 be 9c ff ff       	call   c0100dda <__panic>$/;"	l
c010711c	obj/kernel.asm	/^c010711c:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c0107121	obj/kernel.asm	/^c0107121:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107124	obj/kernel.asm	/^c0107124:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107129	obj/kernel.asm	/^c0107129:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010712c	obj/kernel.asm	/^c010712c:	74 24                	je     c0107152 <check_content_set+0x72>$/;"	l
c010712e	obj/kernel.asm	/^c010712e:	c7 44 24 0c 66 da 10 	movl   $0xc010da66,0xc(%esp)$/;"	l
c0107135	obj/kernel.asm	/^c0107135:	c0 $/;"	l
c0107136	obj/kernel.asm	/^c0107136:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c010713d	obj/kernel.asm	/^c010713d:	c0 $/;"	l
c010713e	obj/kernel.asm	/^c010713e:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c0107145	obj/kernel.asm	/^c0107145:	00 $/;"	l
c0107146	obj/kernel.asm	/^c0107146:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c010714d	obj/kernel.asm	/^c010714d:	e8 88 9c ff ff       	call   c0100dda <__panic>$/;"	l
c0107152	obj/kernel.asm	/^c0107152:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107157	obj/kernel.asm	/^c0107157:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010715a	obj/kernel.asm	/^c010715a:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c010715f	obj/kernel.asm	/^c010715f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0107162	obj/kernel.asm	/^c0107162:	74 24                	je     c0107188 <check_content_set+0xa8>$/;"	l
c0107164	obj/kernel.asm	/^c0107164:	c7 44 24 0c 75 da 10 	movl   $0xc010da75,0xc(%esp)$/;"	l
c010716b	obj/kernel.asm	/^c010716b:	c0 $/;"	l
c010716c	obj/kernel.asm	/^c010716c:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107173	obj/kernel.asm	/^c0107173:	c0 $/;"	l
c0107174	obj/kernel.asm	/^c0107174:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
c010717b	obj/kernel.asm	/^c010717b:	00 $/;"	l
c010717c	obj/kernel.asm	/^c010717c:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107183	obj/kernel.asm	/^c0107183:	e8 52 9c ff ff       	call   c0100dda <__panic>$/;"	l
c0107188	obj/kernel.asm	/^c0107188:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c010718d	obj/kernel.asm	/^c010718d:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107190	obj/kernel.asm	/^c0107190:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107195	obj/kernel.asm	/^c0107195:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0107198	obj/kernel.asm	/^c0107198:	74 24                	je     c01071be <check_content_set+0xde>$/;"	l
c010719a	obj/kernel.asm	/^c010719a:	c7 44 24 0c 75 da 10 	movl   $0xc010da75,0xc(%esp)$/;"	l
c01071a1	obj/kernel.asm	/^c01071a1:	c0 $/;"	l
c01071a2	obj/kernel.asm	/^c01071a2:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01071a9	obj/kernel.asm	/^c01071a9:	c0 $/;"	l
c01071aa	obj/kernel.asm	/^c01071aa:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
c01071b1	obj/kernel.asm	/^c01071b1:	00 $/;"	l
c01071b2	obj/kernel.asm	/^c01071b2:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01071b9	obj/kernel.asm	/^c01071b9:	e8 1c 9c ff ff       	call   c0100dda <__panic>$/;"	l
c01071be	obj/kernel.asm	/^c01071be:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01071c3	obj/kernel.asm	/^c01071c3:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01071c6	obj/kernel.asm	/^c01071c6:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c01071cb	obj/kernel.asm	/^c01071cb:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01071ce	obj/kernel.asm	/^c01071ce:	74 24                	je     c01071f4 <check_content_set+0x114>$/;"	l
c01071d0	obj/kernel.asm	/^c01071d0:	c7 44 24 0c 84 da 10 	movl   $0xc010da84,0xc(%esp)$/;"	l
c01071d7	obj/kernel.asm	/^c01071d7:	c0 $/;"	l
c01071d8	obj/kernel.asm	/^c01071d8:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01071df	obj/kernel.asm	/^c01071df:	c0 $/;"	l
c01071e0	obj/kernel.asm	/^c01071e0:	c7 44 24 04 9a 00 00 	movl   $0x9a,0x4(%esp)$/;"	l
c01071e7	obj/kernel.asm	/^c01071e7:	00 $/;"	l
c01071e8	obj/kernel.asm	/^c01071e8:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01071ef	obj/kernel.asm	/^c01071ef:	e8 e6 9b ff ff       	call   c0100dda <__panic>$/;"	l
c01071f4	obj/kernel.asm	/^c01071f4:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c01071f9	obj/kernel.asm	/^c01071f9:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01071fc	obj/kernel.asm	/^c01071fc:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107201	obj/kernel.asm	/^c0107201:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0107204	obj/kernel.asm	/^c0107204:	74 24                	je     c010722a <check_content_set+0x14a>$/;"	l
c0107206	obj/kernel.asm	/^c0107206:	c7 44 24 0c 84 da 10 	movl   $0xc010da84,0xc(%esp)$/;"	l
c010720d	obj/kernel.asm	/^c010720d:	c0 $/;"	l
c010720e	obj/kernel.asm	/^c010720e:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107215	obj/kernel.asm	/^c0107215:	c0 $/;"	l
c0107216	obj/kernel.asm	/^c0107216:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)$/;"	l
c010721d	obj/kernel.asm	/^c010721d:	00 $/;"	l
c010721e	obj/kernel.asm	/^c010721e:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107225	obj/kernel.asm	/^c0107225:	e8 b0 9b ff ff       	call   c0100dda <__panic>$/;"	l
c010722a	obj/kernel.asm	/^c010722a:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c010722f	obj/kernel.asm	/^c010722f:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107232	obj/kernel.asm	/^c0107232:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107237	obj/kernel.asm	/^c0107237:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010723a	obj/kernel.asm	/^c010723a:	74 24                	je     c0107260 <check_content_set+0x180>$/;"	l
c010723c	obj/kernel.asm	/^c010723c:	c7 44 24 0c 93 da 10 	movl   $0xc010da93,0xc(%esp)$/;"	l
c0107243	obj/kernel.asm	/^c0107243:	c0 $/;"	l
c0107244	obj/kernel.asm	/^c0107244:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c010724b	obj/kernel.asm	/^c010724b:	c0 $/;"	l
c010724c	obj/kernel.asm	/^c010724c:	c7 44 24 04 9e 00 00 	movl   $0x9e,0x4(%esp)$/;"	l
c0107253	obj/kernel.asm	/^c0107253:	00 $/;"	l
c0107254	obj/kernel.asm	/^c0107254:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c010725b	obj/kernel.asm	/^c010725b:	e8 7a 9b ff ff       	call   c0100dda <__panic>$/;"	l
c0107260	obj/kernel.asm	/^c0107260:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c0107265	obj/kernel.asm	/^c0107265:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107268	obj/kernel.asm	/^c0107268:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c010726d	obj/kernel.asm	/^c010726d:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107270	obj/kernel.asm	/^c0107270:	74 24                	je     c0107296 <check_content_set+0x1b6>$/;"	l
c0107272	obj/kernel.asm	/^c0107272:	c7 44 24 0c 93 da 10 	movl   $0xc010da93,0xc(%esp)$/;"	l
c0107279	obj/kernel.asm	/^c0107279:	c0 $/;"	l
c010727a	obj/kernel.asm	/^c010727a:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107281	obj/kernel.asm	/^c0107281:	c0 $/;"	l
c0107282	obj/kernel.asm	/^c0107282:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c0107289	obj/kernel.asm	/^c0107289:	00 $/;"	l
c010728a	obj/kernel.asm	/^c010728a:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107291	obj/kernel.asm	/^c0107291:	e8 44 9b ff ff       	call   c0100dda <__panic>$/;"	l
c0107296	obj/kernel.asm	/^c0107296:	c9                   	leave  $/;"	l
c0107297	obj/kernel.asm	/^c0107297:	c3                   	ret    $/;"	l
c0107298	obj/kernel.asm	/^c0107298 <check_content_access>:$/;"	l
c0107298	obj/kernel.asm	/^c0107298:	55                   	push   %ebp$/;"	l
c0107299	obj/kernel.asm	/^c0107299:	89 e5                	mov    %esp,%ebp$/;"	l
c010729b	obj/kernel.asm	/^c010729b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010729e	obj/kernel.asm	/^c010729e:	a1 14 fe 1a c0       	mov    0xc01afe14,%eax$/;"	l
c01072a3	obj/kernel.asm	/^c01072a3:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01072a6	obj/kernel.asm	/^c01072a6:	ff d0                	call   *%eax$/;"	l
c01072a8	obj/kernel.asm	/^c01072a8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01072ab	obj/kernel.asm	/^c01072ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072ae	obj/kernel.asm	/^c01072ae:	c9                   	leave  $/;"	l
c01072af	obj/kernel.asm	/^c01072af:	c3                   	ret    $/;"	l
c01072b0	obj/kernel.asm	/^c01072b0 <check_swap>:$/;"	l
c01072b0	obj/kernel.asm	/^c01072b0:	55                   	push   %ebp$/;"	l
c01072b1	obj/kernel.asm	/^c01072b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01072b3	obj/kernel.asm	/^c01072b3:	53                   	push   %ebx$/;"	l
c01072b4	obj/kernel.asm	/^c01072b4:	83 ec 74             	sub    $0x74,%esp$/;"	l
c01072b7	obj/kernel.asm	/^c01072b7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01072be	obj/kernel.asm	/^c01072be:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01072c5	obj/kernel.asm	/^c01072c5:	c7 45 e8 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x18(%ebp)$/;"	l
c01072cc	obj/kernel.asm	/^c01072cc:	eb 6b                	jmp    c0107339 <check_swap+0x89>$/;"	l
c01072ce	obj/kernel.asm	/^c01072ce:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01072d1	obj/kernel.asm	/^c01072d1:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01072d4	obj/kernel.asm	/^c01072d4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01072d7	obj/kernel.asm	/^c01072d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01072da	obj/kernel.asm	/^c01072da:	83 c0 04             	add    $0x4,%eax$/;"	l
c01072dd	obj/kernel.asm	/^c01072dd:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c01072e4	obj/kernel.asm	/^c01072e4:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01072e7	obj/kernel.asm	/^c01072e7:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c01072ea	obj/kernel.asm	/^c01072ea:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c01072ed	obj/kernel.asm	/^c01072ed:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01072f0	obj/kernel.asm	/^c01072f0:	19 c0                	sbb    %eax,%eax$/;"	l
c01072f2	obj/kernel.asm	/^c01072f2:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01072f5	obj/kernel.asm	/^c01072f5:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c01072f9	obj/kernel.asm	/^c01072f9:	0f 95 c0             	setne  %al$/;"	l
c01072fc	obj/kernel.asm	/^c01072fc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01072ff	obj/kernel.asm	/^c01072ff:	85 c0                	test   %eax,%eax$/;"	l
c0107301	obj/kernel.asm	/^c0107301:	75 24                	jne    c0107327 <check_swap+0x77>$/;"	l
c0107303	obj/kernel.asm	/^c0107303:	c7 44 24 0c a2 da 10 	movl   $0xc010daa2,0xc(%esp)$/;"	l
c010730a	obj/kernel.asm	/^c010730a:	c0 $/;"	l
c010730b	obj/kernel.asm	/^c010730b:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107312	obj/kernel.asm	/^c0107312:	c0 $/;"	l
c0107313	obj/kernel.asm	/^c0107313:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)$/;"	l
c010731a	obj/kernel.asm	/^c010731a:	00 $/;"	l
c010731b	obj/kernel.asm	/^c010731b:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107322	obj/kernel.asm	/^c0107322:	e8 b3 9a ff ff       	call   c0100dda <__panic>$/;"	l
c0107327	obj/kernel.asm	/^c0107327:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010732b	obj/kernel.asm	/^c010732b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010732e	obj/kernel.asm	/^c010732e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107331	obj/kernel.asm	/^c0107331:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107334	obj/kernel.asm	/^c0107334:	01 d0                	add    %edx,%eax$/;"	l
c0107336	obj/kernel.asm	/^c0107336:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107339	obj/kernel.asm	/^c0107339:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010733c	obj/kernel.asm	/^c010733c:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010733f	obj/kernel.asm	/^c010733f:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107342	obj/kernel.asm	/^c0107342:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107345	obj/kernel.asm	/^c0107345:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107348	obj/kernel.asm	/^c0107348:	81 7d e8 7c 1e 1b c0 	cmpl   $0xc01b1e7c,-0x18(%ebp)$/;"	l
c010734f	obj/kernel.asm	/^c010734f:	0f 85 79 ff ff ff    	jne    c01072ce <check_swap+0x1e>$/;"	l
c0107355	obj/kernel.asm	/^c0107355:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c0107358	obj/kernel.asm	/^c0107358:	e8 e5 dd ff ff       	call   c0105142 <nr_free_pages>$/;"	l
c010735d	obj/kernel.asm	/^c010735d:	39 c3                	cmp    %eax,%ebx$/;"	l
c010735f	obj/kernel.asm	/^c010735f:	74 24                	je     c0107385 <check_swap+0xd5>$/;"	l
c0107361	obj/kernel.asm	/^c0107361:	c7 44 24 0c b2 da 10 	movl   $0xc010dab2,0xc(%esp)$/;"	l
c0107368	obj/kernel.asm	/^c0107368:	c0 $/;"	l
c0107369	obj/kernel.asm	/^c0107369:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107370	obj/kernel.asm	/^c0107370:	c0 $/;"	l
c0107371	obj/kernel.asm	/^c0107371:	c7 44 24 04 be 00 00 	movl   $0xbe,0x4(%esp)$/;"	l
c0107378	obj/kernel.asm	/^c0107378:	00 $/;"	l
c0107379	obj/kernel.asm	/^c0107379:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107380	obj/kernel.asm	/^c0107380:	e8 55 9a ff ff       	call   c0100dda <__panic>$/;"	l
c0107385	obj/kernel.asm	/^c0107385:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107388	obj/kernel.asm	/^c0107388:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010738c	obj/kernel.asm	/^c010738c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010738f	obj/kernel.asm	/^c010738f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107393	obj/kernel.asm	/^c0107393:	c7 04 24 cc da 10 c0 	movl   $0xc010dacc,(%esp)$/;"	l
c010739a	obj/kernel.asm	/^c010739a:	e8 b9 8f ff ff       	call   c0100358 <cprintf>$/;"	l
c010739f	obj/kernel.asm	/^c010739f:	e8 a8 0a 00 00       	call   c0107e4c <mm_create>$/;"	l
c01073a4	obj/kernel.asm	/^c01073a4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01073a7	obj/kernel.asm	/^c01073a7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01073ab	obj/kernel.asm	/^c01073ab:	75 24                	jne    c01073d1 <check_swap+0x121>$/;"	l
c01073ad	obj/kernel.asm	/^c01073ad:	c7 44 24 0c f2 da 10 	movl   $0xc010daf2,0xc(%esp)$/;"	l
c01073b4	obj/kernel.asm	/^c01073b4:	c0 $/;"	l
c01073b5	obj/kernel.asm	/^c01073b5:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01073bc	obj/kernel.asm	/^c01073bc:	c0 $/;"	l
c01073bd	obj/kernel.asm	/^c01073bd:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)$/;"	l
c01073c4	obj/kernel.asm	/^c01073c4:	00 $/;"	l
c01073c5	obj/kernel.asm	/^c01073c5:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01073cc	obj/kernel.asm	/^c01073cc:	e8 09 9a ff ff       	call   c0100dda <__panic>$/;"	l
c01073d1	obj/kernel.asm	/^c01073d1:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c01073d6	obj/kernel.asm	/^c01073d6:	85 c0                	test   %eax,%eax$/;"	l
c01073d8	obj/kernel.asm	/^c01073d8:	74 24                	je     c01073fe <check_swap+0x14e>$/;"	l
c01073da	obj/kernel.asm	/^c01073da:	c7 44 24 0c fd da 10 	movl   $0xc010dafd,0xc(%esp)$/;"	l
c01073e1	obj/kernel.asm	/^c01073e1:	c0 $/;"	l
c01073e2	obj/kernel.asm	/^c01073e2:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01073e9	obj/kernel.asm	/^c01073e9:	c0 $/;"	l
c01073ea	obj/kernel.asm	/^c01073ea:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c01073f1	obj/kernel.asm	/^c01073f1:	00 $/;"	l
c01073f2	obj/kernel.asm	/^c01073f2:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01073f9	obj/kernel.asm	/^c01073f9:	e8 dc 99 ff ff       	call   c0100dda <__panic>$/;"	l
c01073fe	obj/kernel.asm	/^c01073fe:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107401	obj/kernel.asm	/^c0107401:	a3 6c 1f 1b c0       	mov    %eax,0xc01b1f6c$/;"	l
c0107406	obj/kernel.asm	/^c0107406:	8b 15 84 fd 1a c0    	mov    0xc01afd84,%edx$/;"	l
c010740c	obj/kernel.asm	/^c010740c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010740f	obj/kernel.asm	/^c010740f:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0107412	obj/kernel.asm	/^c0107412:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107415	obj/kernel.asm	/^c0107415:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107418	obj/kernel.asm	/^c0107418:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010741b	obj/kernel.asm	/^c010741b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010741e	obj/kernel.asm	/^c010741e:	8b 00                	mov    (%eax),%eax$/;"	l
c0107420	obj/kernel.asm	/^c0107420:	85 c0                	test   %eax,%eax$/;"	l
c0107422	obj/kernel.asm	/^c0107422:	74 24                	je     c0107448 <check_swap+0x198>$/;"	l
c0107424	obj/kernel.asm	/^c0107424:	c7 44 24 0c 15 db 10 	movl   $0xc010db15,0xc(%esp)$/;"	l
c010742b	obj/kernel.asm	/^c010742b:	c0 $/;"	l
c010742c	obj/kernel.asm	/^c010742c:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107433	obj/kernel.asm	/^c0107433:	c0 $/;"	l
c0107434	obj/kernel.asm	/^c0107434:	c7 44 24 04 cb 00 00 	movl   $0xcb,0x4(%esp)$/;"	l
c010743b	obj/kernel.asm	/^c010743b:	00 $/;"	l
c010743c	obj/kernel.asm	/^c010743c:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107443	obj/kernel.asm	/^c0107443:	e8 92 99 ff ff       	call   c0100dda <__panic>$/;"	l
c0107448	obj/kernel.asm	/^c0107448:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
c010744f	obj/kernel.asm	/^c010744f:	00 $/;"	l
c0107450	obj/kernel.asm	/^c0107450:	c7 44 24 04 00 60 00 	movl   $0x6000,0x4(%esp)$/;"	l
c0107457	obj/kernel.asm	/^c0107457:	00 $/;"	l
c0107458	obj/kernel.asm	/^c0107458:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010745f	obj/kernel.asm	/^c010745f:	e8 81 0a 00 00       	call   c0107ee5 <vma_create>$/;"	l
c0107464	obj/kernel.asm	/^c0107464:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107467	obj/kernel.asm	/^c0107467:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c010746b	obj/kernel.asm	/^c010746b:	75 24                	jne    c0107491 <check_swap+0x1e1>$/;"	l
c010746d	obj/kernel.asm	/^c010746d:	c7 44 24 0c 23 db 10 	movl   $0xc010db23,0xc(%esp)$/;"	l
c0107474	obj/kernel.asm	/^c0107474:	c0 $/;"	l
c0107475	obj/kernel.asm	/^c0107475:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c010747c	obj/kernel.asm	/^c010747c:	c0 $/;"	l
c010747d	obj/kernel.asm	/^c010747d:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
c0107484	obj/kernel.asm	/^c0107484:	00 $/;"	l
c0107485	obj/kernel.asm	/^c0107485:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c010748c	obj/kernel.asm	/^c010748c:	e8 49 99 ff ff       	call   c0100dda <__panic>$/;"	l
c0107491	obj/kernel.asm	/^c0107491:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107494	obj/kernel.asm	/^c0107494:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107498	obj/kernel.asm	/^c0107498:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010749b	obj/kernel.asm	/^c010749b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010749e	obj/kernel.asm	/^c010749e:	e8 d2 0b 00 00       	call   c0108075 <insert_vma_struct>$/;"	l
c01074a3	obj/kernel.asm	/^c01074a3:	c7 04 24 30 db 10 c0 	movl   $0xc010db30,(%esp)$/;"	l
c01074aa	obj/kernel.asm	/^c01074aa:	e8 a9 8e ff ff       	call   c0100358 <cprintf>$/;"	l
c01074af	obj/kernel.asm	/^c01074af:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c01074b6	obj/kernel.asm	/^c01074b6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01074b9	obj/kernel.asm	/^c01074b9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01074bc	obj/kernel.asm	/^c01074bc:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01074c3	obj/kernel.asm	/^c01074c3:	00 $/;"	l
c01074c4	obj/kernel.asm	/^c01074c4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01074cb	obj/kernel.asm	/^c01074cb:	00 $/;"	l
c01074cc	obj/kernel.asm	/^c01074cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01074cf	obj/kernel.asm	/^c01074cf:	e8 38 e3 ff ff       	call   c010580c <get_pte>$/;"	l
c01074d4	obj/kernel.asm	/^c01074d4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01074d7	obj/kernel.asm	/^c01074d7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c01074db	obj/kernel.asm	/^c01074db:	75 24                	jne    c0107501 <check_swap+0x251>$/;"	l
c01074dd	obj/kernel.asm	/^c01074dd:	c7 44 24 0c 64 db 10 	movl   $0xc010db64,0xc(%esp)$/;"	l
c01074e4	obj/kernel.asm	/^c01074e4:	c0 $/;"	l
c01074e5	obj/kernel.asm	/^c01074e5:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01074ec	obj/kernel.asm	/^c01074ec:	c0 $/;"	l
c01074ed	obj/kernel.asm	/^c01074ed:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c01074f4	obj/kernel.asm	/^c01074f4:	00 $/;"	l
c01074f5	obj/kernel.asm	/^c01074f5:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01074fc	obj/kernel.asm	/^c01074fc:	e8 d9 98 ff ff       	call   c0100dda <__panic>$/;"	l
c0107501	obj/kernel.asm	/^c0107501:	c7 04 24 78 db 10 c0 	movl   $0xc010db78,(%esp)$/;"	l
c0107508	obj/kernel.asm	/^c0107508:	e8 4b 8e ff ff       	call   c0100358 <cprintf>$/;"	l
c010750d	obj/kernel.asm	/^c010750d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107514	obj/kernel.asm	/^c0107514:	e9 a3 00 00 00       	jmp    c01075bc <check_swap+0x30c>$/;"	l
c0107519	obj/kernel.asm	/^c0107519:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0107520	obj/kernel.asm	/^c0107520:	e8 80 db ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c0107525	obj/kernel.asm	/^c0107525:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107528	obj/kernel.asm	/^c0107528:	89 04 95 a0 1e 1b c0 	mov    %eax,-0x3fe4e160(,%edx,4)$/;"	l
c010752f	obj/kernel.asm	/^c010752f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107532	obj/kernel.asm	/^c0107532:	8b 04 85 a0 1e 1b c0 	mov    -0x3fe4e160(,%eax,4),%eax$/;"	l
c0107539	obj/kernel.asm	/^c0107539:	85 c0                	test   %eax,%eax$/;"	l
c010753b	obj/kernel.asm	/^c010753b:	75 24                	jne    c0107561 <check_swap+0x2b1>$/;"	l
c010753d	obj/kernel.asm	/^c010753d:	c7 44 24 0c 9c db 10 	movl   $0xc010db9c,0xc(%esp)$/;"	l
c0107544	obj/kernel.asm	/^c0107544:	c0 $/;"	l
c0107545	obj/kernel.asm	/^c0107545:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c010754c	obj/kernel.asm	/^c010754c:	c0 $/;"	l
c010754d	obj/kernel.asm	/^c010754d:	c7 44 24 04 db 00 00 	movl   $0xdb,0x4(%esp)$/;"	l
c0107554	obj/kernel.asm	/^c0107554:	00 $/;"	l
c0107555	obj/kernel.asm	/^c0107555:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c010755c	obj/kernel.asm	/^c010755c:	e8 79 98 ff ff       	call   c0100dda <__panic>$/;"	l
c0107561	obj/kernel.asm	/^c0107561:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107564	obj/kernel.asm	/^c0107564:	8b 04 85 a0 1e 1b c0 	mov    -0x3fe4e160(,%eax,4),%eax$/;"	l
c010756b	obj/kernel.asm	/^c010756b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010756e	obj/kernel.asm	/^c010756e:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c0107575	obj/kernel.asm	/^c0107575:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0107578	obj/kernel.asm	/^c0107578:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010757b	obj/kernel.asm	/^c010757b:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010757e	obj/kernel.asm	/^c010757e:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107581	obj/kernel.asm	/^c0107581:	19 c0                	sbb    %eax,%eax$/;"	l
c0107583	obj/kernel.asm	/^c0107583:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107586	obj/kernel.asm	/^c0107586:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c010758a	obj/kernel.asm	/^c010758a:	0f 95 c0             	setne  %al$/;"	l
c010758d	obj/kernel.asm	/^c010758d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107590	obj/kernel.asm	/^c0107590:	85 c0                	test   %eax,%eax$/;"	l
c0107592	obj/kernel.asm	/^c0107592:	74 24                	je     c01075b8 <check_swap+0x308>$/;"	l
c0107594	obj/kernel.asm	/^c0107594:	c7 44 24 0c b0 db 10 	movl   $0xc010dbb0,0xc(%esp)$/;"	l
c010759b	obj/kernel.asm	/^c010759b:	c0 $/;"	l
c010759c	obj/kernel.asm	/^c010759c:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01075a3	obj/kernel.asm	/^c01075a3:	c0 $/;"	l
c01075a4	obj/kernel.asm	/^c01075a4:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)$/;"	l
c01075ab	obj/kernel.asm	/^c01075ab:	00 $/;"	l
c01075ac	obj/kernel.asm	/^c01075ac:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01075b3	obj/kernel.asm	/^c01075b3:	e8 22 98 ff ff       	call   c0100dda <__panic>$/;"	l
c01075b8	obj/kernel.asm	/^c01075b8:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01075bc	obj/kernel.asm	/^c01075bc:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c01075c0	obj/kernel.asm	/^c01075c0:	0f 8e 53 ff ff ff    	jle    c0107519 <check_swap+0x269>$/;"	l
c01075c6	obj/kernel.asm	/^c01075c6:	a1 7c 1e 1b c0       	mov    0xc01b1e7c,%eax$/;"	l
c01075cb	obj/kernel.asm	/^c01075cb:	8b 15 80 1e 1b c0    	mov    0xc01b1e80,%edx$/;"	l
c01075d1	obj/kernel.asm	/^c01075d1:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c01075d4	obj/kernel.asm	/^c01075d4:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c01075d7	obj/kernel.asm	/^c01075d7:	c7 45 a8 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x58(%ebp)$/;"	l
c01075de	obj/kernel.asm	/^c01075de:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01075e1	obj/kernel.asm	/^c01075e1:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c01075e4	obj/kernel.asm	/^c01075e4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01075e7	obj/kernel.asm	/^c01075e7:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01075ea	obj/kernel.asm	/^c01075ea:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01075ed	obj/kernel.asm	/^c01075ed:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01075f0	obj/kernel.asm	/^c01075f0:	89 10                	mov    %edx,(%eax)$/;"	l
c01075f2	obj/kernel.asm	/^c01075f2:	c7 45 a4 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x5c(%ebp)$/;"	l
c01075f9	obj/kernel.asm	/^c01075f9:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c01075fc	obj/kernel.asm	/^c01075fc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01075ff	obj/kernel.asm	/^c01075ff:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0107602	obj/kernel.asm	/^c0107602:	0f 94 c0             	sete   %al$/;"	l
c0107605	obj/kernel.asm	/^c0107605:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107608	obj/kernel.asm	/^c0107608:	85 c0                	test   %eax,%eax$/;"	l
c010760a	obj/kernel.asm	/^c010760a:	75 24                	jne    c0107630 <check_swap+0x380>$/;"	l
c010760c	obj/kernel.asm	/^c010760c:	c7 44 24 0c cb db 10 	movl   $0xc010dbcb,0xc(%esp)$/;"	l
c0107613	obj/kernel.asm	/^c0107613:	c0 $/;"	l
c0107614	obj/kernel.asm	/^c0107614:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c010761b	obj/kernel.asm	/^c010761b:	c0 $/;"	l
c010761c	obj/kernel.asm	/^c010761c:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
c0107623	obj/kernel.asm	/^c0107623:	00 $/;"	l
c0107624	obj/kernel.asm	/^c0107624:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c010762b	obj/kernel.asm	/^c010762b:	e8 aa 97 ff ff       	call   c0100dda <__panic>$/;"	l
c0107630	obj/kernel.asm	/^c0107630:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c0107635	obj/kernel.asm	/^c0107635:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107638	obj/kernel.asm	/^c0107638:	c7 05 84 1e 1b c0 00 	movl   $0x0,0xc01b1e84$/;"	l
c010763f	obj/kernel.asm	/^c010763f:	00 00 00 $/;"	l
c0107642	obj/kernel.asm	/^c0107642:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107649	obj/kernel.asm	/^c0107649:	eb 1e                	jmp    c0107669 <check_swap+0x3b9>$/;"	l
c010764b	obj/kernel.asm	/^c010764b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010764e	obj/kernel.asm	/^c010764e:	8b 04 85 a0 1e 1b c0 	mov    -0x3fe4e160(,%eax,4),%eax$/;"	l
c0107655	obj/kernel.asm	/^c0107655:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010765c	obj/kernel.asm	/^c010765c:	00 $/;"	l
c010765d	obj/kernel.asm	/^c010765d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107660	obj/kernel.asm	/^c0107660:	e8 ab da ff ff       	call   c0105110 <free_pages>$/;"	l
c0107665	obj/kernel.asm	/^c0107665:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107669	obj/kernel.asm	/^c0107669:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c010766d	obj/kernel.asm	/^c010766d:	7e dc                	jle    c010764b <check_swap+0x39b>$/;"	l
c010766f	obj/kernel.asm	/^c010766f:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c0107674	obj/kernel.asm	/^c0107674:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107677	obj/kernel.asm	/^c0107677:	74 24                	je     c010769d <check_swap+0x3ed>$/;"	l
c0107679	obj/kernel.asm	/^c0107679:	c7 44 24 0c e4 db 10 	movl   $0xc010dbe4,0xc(%esp)$/;"	l
c0107680	obj/kernel.asm	/^c0107680:	c0 $/;"	l
c0107681	obj/kernel.asm	/^c0107681:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107688	obj/kernel.asm	/^c0107688:	c0 $/;"	l
c0107689	obj/kernel.asm	/^c0107689:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c0107690	obj/kernel.asm	/^c0107690:	00 $/;"	l
c0107691	obj/kernel.asm	/^c0107691:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107698	obj/kernel.asm	/^c0107698:	e8 3d 97 ff ff       	call   c0100dda <__panic>$/;"	l
c010769d	obj/kernel.asm	/^c010769d:	c7 04 24 08 dc 10 c0 	movl   $0xc010dc08,(%esp)$/;"	l
c01076a4	obj/kernel.asm	/^c01076a4:	e8 af 8c ff ff       	call   c0100358 <cprintf>$/;"	l
c01076a9	obj/kernel.asm	/^c01076a9:	c7 05 18 fe 1a c0 00 	movl   $0x0,0xc01afe18$/;"	l
c01076b0	obj/kernel.asm	/^c01076b0:	00 00 00 $/;"	l
c01076b3	obj/kernel.asm	/^c01076b3:	e8 28 fa ff ff       	call   c01070e0 <check_content_set>$/;"	l
c01076b8	obj/kernel.asm	/^c01076b8:	a1 84 1e 1b c0       	mov    0xc01b1e84,%eax$/;"	l
c01076bd	obj/kernel.asm	/^c01076bd:	85 c0                	test   %eax,%eax$/;"	l
c01076bf	obj/kernel.asm	/^c01076bf:	74 24                	je     c01076e5 <check_swap+0x435>$/;"	l
c01076c1	obj/kernel.asm	/^c01076c1:	c7 44 24 0c 2f dc 10 	movl   $0xc010dc2f,0xc(%esp)$/;"	l
c01076c8	obj/kernel.asm	/^c01076c8:	c0 $/;"	l
c01076c9	obj/kernel.asm	/^c01076c9:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01076d0	obj/kernel.asm	/^c01076d0:	c0 $/;"	l
c01076d1	obj/kernel.asm	/^c01076d1:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c01076d8	obj/kernel.asm	/^c01076d8:	00 $/;"	l
c01076d9	obj/kernel.asm	/^c01076d9:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01076e0	obj/kernel.asm	/^c01076e0:	e8 f5 96 ff ff       	call   c0100dda <__panic>$/;"	l
c01076e5	obj/kernel.asm	/^c01076e5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01076ec	obj/kernel.asm	/^c01076ec:	eb 26                	jmp    c0107714 <check_swap+0x464>$/;"	l
c01076ee	obj/kernel.asm	/^c01076ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01076f1	obj/kernel.asm	/^c01076f1:	c7 04 85 c0 1e 1b c0 	movl   $0xffffffff,-0x3fe4e140(,%eax,4)$/;"	l
c01076f8	obj/kernel.asm	/^c01076f8:	ff ff ff ff $/;"	l
c01076fc	obj/kernel.asm	/^c01076fc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01076ff	obj/kernel.asm	/^c01076ff:	8b 14 85 c0 1e 1b c0 	mov    -0x3fe4e140(,%eax,4),%edx$/;"	l
c0107706	obj/kernel.asm	/^c0107706:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107709	obj/kernel.asm	/^c0107709:	89 14 85 00 1f 1b c0 	mov    %edx,-0x3fe4e100(,%eax,4)$/;"	l
c0107710	obj/kernel.asm	/^c0107710:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107714	obj/kernel.asm	/^c0107714:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0107718	obj/kernel.asm	/^c0107718:	7e d4                	jle    c01076ee <check_swap+0x43e>$/;"	l
c010771a	obj/kernel.asm	/^c010771a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107721	obj/kernel.asm	/^c0107721:	e9 eb 00 00 00       	jmp    c0107811 <check_swap+0x561>$/;"	l
c0107726	obj/kernel.asm	/^c0107726:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107729	obj/kernel.asm	/^c0107729:	c7 04 85 54 1f 1b c0 	movl   $0x0,-0x3fe4e0ac(,%eax,4)$/;"	l
c0107730	obj/kernel.asm	/^c0107730:	00 00 00 00 $/;"	l
c0107734	obj/kernel.asm	/^c0107734:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107737	obj/kernel.asm	/^c0107737:	83 c0 01             	add    $0x1,%eax$/;"	l
c010773a	obj/kernel.asm	/^c010773a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010773d	obj/kernel.asm	/^c010773d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0107744	obj/kernel.asm	/^c0107744:	00 $/;"	l
c0107745	obj/kernel.asm	/^c0107745:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107749	obj/kernel.asm	/^c0107749:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010774c	obj/kernel.asm	/^c010774c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010774f	obj/kernel.asm	/^c010774f:	e8 b8 e0 ff ff       	call   c010580c <get_pte>$/;"	l
c0107754	obj/kernel.asm	/^c0107754:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107757	obj/kernel.asm	/^c0107757:	89 04 95 54 1f 1b c0 	mov    %eax,-0x3fe4e0ac(,%edx,4)$/;"	l
c010775e	obj/kernel.asm	/^c010775e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107761	obj/kernel.asm	/^c0107761:	8b 04 85 54 1f 1b c0 	mov    -0x3fe4e0ac(,%eax,4),%eax$/;"	l
c0107768	obj/kernel.asm	/^c0107768:	85 c0                	test   %eax,%eax$/;"	l
c010776a	obj/kernel.asm	/^c010776a:	75 24                	jne    c0107790 <check_swap+0x4e0>$/;"	l
c010776c	obj/kernel.asm	/^c010776c:	c7 44 24 0c 3c dc 10 	movl   $0xc010dc3c,0xc(%esp)$/;"	l
c0107773	obj/kernel.asm	/^c0107773:	c0 $/;"	l
c0107774	obj/kernel.asm	/^c0107774:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c010777b	obj/kernel.asm	/^c010777b:	c0 $/;"	l
c010777c	obj/kernel.asm	/^c010777c:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c0107783	obj/kernel.asm	/^c0107783:	00 $/;"	l
c0107784	obj/kernel.asm	/^c0107784:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c010778b	obj/kernel.asm	/^c010778b:	e8 4a 96 ff ff       	call   c0100dda <__panic>$/;"	l
c0107790	obj/kernel.asm	/^c0107790:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107793	obj/kernel.asm	/^c0107793:	8b 04 85 54 1f 1b c0 	mov    -0x3fe4e0ac(,%eax,4),%eax$/;"	l
c010779a	obj/kernel.asm	/^c010779a:	8b 00                	mov    (%eax),%eax$/;"	l
c010779c	obj/kernel.asm	/^c010779c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010779f	obj/kernel.asm	/^c010779f:	e8 9f f5 ff ff       	call   c0106d43 <pte2page>$/;"	l
c01077a4	obj/kernel.asm	/^c01077a4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01077a7	obj/kernel.asm	/^c01077a7:	8b 14 95 a0 1e 1b c0 	mov    -0x3fe4e160(,%edx,4),%edx$/;"	l
c01077ae	obj/kernel.asm	/^c01077ae:	39 d0                	cmp    %edx,%eax$/;"	l
c01077b0	obj/kernel.asm	/^c01077b0:	74 24                	je     c01077d6 <check_swap+0x526>$/;"	l
c01077b2	obj/kernel.asm	/^c01077b2:	c7 44 24 0c 54 dc 10 	movl   $0xc010dc54,0xc(%esp)$/;"	l
c01077b9	obj/kernel.asm	/^c01077b9:	c0 $/;"	l
c01077ba	obj/kernel.asm	/^c01077ba:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01077c1	obj/kernel.asm	/^c01077c1:	c0 $/;"	l
c01077c2	obj/kernel.asm	/^c01077c2:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c01077c9	obj/kernel.asm	/^c01077c9:	00 $/;"	l
c01077ca	obj/kernel.asm	/^c01077ca:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c01077d1	obj/kernel.asm	/^c01077d1:	e8 04 96 ff ff       	call   c0100dda <__panic>$/;"	l
c01077d6	obj/kernel.asm	/^c01077d6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077d9	obj/kernel.asm	/^c01077d9:	8b 04 85 54 1f 1b c0 	mov    -0x3fe4e0ac(,%eax,4),%eax$/;"	l
c01077e0	obj/kernel.asm	/^c01077e0:	8b 00                	mov    (%eax),%eax$/;"	l
c01077e2	obj/kernel.asm	/^c01077e2:	83 e0 01             	and    $0x1,%eax$/;"	l
c01077e5	obj/kernel.asm	/^c01077e5:	85 c0                	test   %eax,%eax$/;"	l
c01077e7	obj/kernel.asm	/^c01077e7:	75 24                	jne    c010780d <check_swap+0x55d>$/;"	l
c01077e9	obj/kernel.asm	/^c01077e9:	c7 44 24 0c 7c dc 10 	movl   $0xc010dc7c,0xc(%esp)$/;"	l
c01077f0	obj/kernel.asm	/^c01077f0:	c0 $/;"	l
c01077f1	obj/kernel.asm	/^c01077f1:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c01077f8	obj/kernel.asm	/^c01077f8:	c0 $/;"	l
c01077f9	obj/kernel.asm	/^c01077f9:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c0107800	obj/kernel.asm	/^c0107800:	00 $/;"	l
c0107801	obj/kernel.asm	/^c0107801:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107808	obj/kernel.asm	/^c0107808:	e8 cd 95 ff ff       	call   c0100dda <__panic>$/;"	l
c010780d	obj/kernel.asm	/^c010780d:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107811	obj/kernel.asm	/^c0107811:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0107815	obj/kernel.asm	/^c0107815:	0f 8e 0b ff ff ff    	jle    c0107726 <check_swap+0x476>$/;"	l
c010781b	obj/kernel.asm	/^c010781b:	c7 04 24 98 dc 10 c0 	movl   $0xc010dc98,(%esp)$/;"	l
c0107822	obj/kernel.asm	/^c0107822:	e8 31 8b ff ff       	call   c0100358 <cprintf>$/;"	l
c0107827	obj/kernel.asm	/^c0107827:	e8 6c fa ff ff       	call   c0107298 <check_content_access>$/;"	l
c010782c	obj/kernel.asm	/^c010782c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010782f	obj/kernel.asm	/^c010782f:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0107833	obj/kernel.asm	/^c0107833:	74 24                	je     c0107859 <check_swap+0x5a9>$/;"	l
c0107835	obj/kernel.asm	/^c0107835:	c7 44 24 0c be dc 10 	movl   $0xc010dcbe,0xc(%esp)$/;"	l
c010783c	obj/kernel.asm	/^c010783c:	c0 $/;"	l
c010783d	obj/kernel.asm	/^c010783d:	c7 44 24 08 a6 d9 10 	movl   $0xc010d9a6,0x8(%esp)$/;"	l
c0107844	obj/kernel.asm	/^c0107844:	c0 $/;"	l
c0107845	obj/kernel.asm	/^c0107845:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c010784c	obj/kernel.asm	/^c010784c:	00 $/;"	l
c010784d	obj/kernel.asm	/^c010784d:	c7 04 24 40 d9 10 c0 	movl   $0xc010d940,(%esp)$/;"	l
c0107854	obj/kernel.asm	/^c0107854:	e8 81 95 ff ff       	call   c0100dda <__panic>$/;"	l
c0107859	obj/kernel.asm	/^c0107859:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107860	obj/kernel.asm	/^c0107860:	eb 1e                	jmp    c0107880 <check_swap+0x5d0>$/;"	l
c0107862	obj/kernel.asm	/^c0107862:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107865	obj/kernel.asm	/^c0107865:	8b 04 85 a0 1e 1b c0 	mov    -0x3fe4e160(,%eax,4),%eax$/;"	l
c010786c	obj/kernel.asm	/^c010786c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0107873	obj/kernel.asm	/^c0107873:	00 $/;"	l
c0107874	obj/kernel.asm	/^c0107874:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107877	obj/kernel.asm	/^c0107877:	e8 94 d8 ff ff       	call   c0105110 <free_pages>$/;"	l
c010787c	obj/kernel.asm	/^c010787c:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107880	obj/kernel.asm	/^c0107880:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0107884	obj/kernel.asm	/^c0107884:	7e dc                	jle    c0107862 <check_swap+0x5b2>$/;"	l
c0107886	obj/kernel.asm	/^c0107886:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107889	obj/kernel.asm	/^c0107889:	8b 00                	mov    (%eax),%eax$/;"	l
c010788b	obj/kernel.asm	/^c010788b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010788e	obj/kernel.asm	/^c010788e:	e8 6b f4 ff ff       	call   c0106cfe <pa2page>$/;"	l
c0107893	obj/kernel.asm	/^c0107893:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010789a	obj/kernel.asm	/^c010789a:	00 $/;"	l
c010789b	obj/kernel.asm	/^c010789b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010789e	obj/kernel.asm	/^c010789e:	e8 6d d8 ff ff       	call   c0105110 <free_pages>$/;"	l
c01078a3	obj/kernel.asm	/^c01078a3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01078a6	obj/kernel.asm	/^c01078a6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01078ac	obj/kernel.asm	/^c01078ac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01078af	obj/kernel.asm	/^c01078af:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c01078b6	obj/kernel.asm	/^c01078b6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01078b9	obj/kernel.asm	/^c01078b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01078bc	obj/kernel.asm	/^c01078bc:	e8 e4 08 00 00       	call   c01081a5 <mm_destroy>$/;"	l
c01078c1	obj/kernel.asm	/^c01078c1:	c7 05 6c 1f 1b c0 00 	movl   $0x0,0xc01b1f6c$/;"	l
c01078c8	obj/kernel.asm	/^c01078c8:	00 00 00 $/;"	l
c01078cb	obj/kernel.asm	/^c01078cb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01078ce	obj/kernel.asm	/^c01078ce:	a3 84 1e 1b c0       	mov    %eax,0xc01b1e84$/;"	l
c01078d3	obj/kernel.asm	/^c01078d3:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c01078d6	obj/kernel.asm	/^c01078d6:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c01078d9	obj/kernel.asm	/^c01078d9:	a3 7c 1e 1b c0       	mov    %eax,0xc01b1e7c$/;"	l
c01078de	obj/kernel.asm	/^c01078de:	89 15 80 1e 1b c0    	mov    %edx,0xc01b1e80$/;"	l
c01078e4	obj/kernel.asm	/^c01078e4:	c7 45 e8 7c 1e 1b c0 	movl   $0xc01b1e7c,-0x18(%ebp)$/;"	l
c01078eb	obj/kernel.asm	/^c01078eb:	eb 1d                	jmp    c010790a <check_swap+0x65a>$/;"	l
c01078ed	obj/kernel.asm	/^c01078ed:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01078f0	obj/kernel.asm	/^c01078f0:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01078f3	obj/kernel.asm	/^c01078f3:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01078f6	obj/kernel.asm	/^c01078f6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01078fa	obj/kernel.asm	/^c01078fa:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01078fd	obj/kernel.asm	/^c01078fd:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107900	obj/kernel.asm	/^c0107900:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107903	obj/kernel.asm	/^c0107903:	29 c2                	sub    %eax,%edx$/;"	l
c0107905	obj/kernel.asm	/^c0107905:	89 d0                	mov    %edx,%eax$/;"	l
c0107907	obj/kernel.asm	/^c0107907:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010790a	obj/kernel.asm	/^c010790a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010790d	obj/kernel.asm	/^c010790d:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0107910	obj/kernel.asm	/^c0107910:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0107913	obj/kernel.asm	/^c0107913:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107916	obj/kernel.asm	/^c0107916:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107919	obj/kernel.asm	/^c0107919:	81 7d e8 7c 1e 1b c0 	cmpl   $0xc01b1e7c,-0x18(%ebp)$/;"	l
c0107920	obj/kernel.asm	/^c0107920:	75 cb                	jne    c01078ed <check_swap+0x63d>$/;"	l
c0107922	obj/kernel.asm	/^c0107922:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107925	obj/kernel.asm	/^c0107925:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107929	obj/kernel.asm	/^c0107929:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010792c	obj/kernel.asm	/^c010792c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107930	obj/kernel.asm	/^c0107930:	c7 04 24 c5 dc 10 c0 	movl   $0xc010dcc5,(%esp)$/;"	l
c0107937	obj/kernel.asm	/^c0107937:	e8 1c 8a ff ff       	call   c0100358 <cprintf>$/;"	l
c010793c	obj/kernel.asm	/^c010793c:	c7 04 24 df dc 10 c0 	movl   $0xc010dcdf,(%esp)$/;"	l
c0107943	obj/kernel.asm	/^c0107943:	e8 10 8a ff ff       	call   c0100358 <cprintf>$/;"	l
c0107948	obj/kernel.asm	/^c0107948:	83 c4 74             	add    $0x74,%esp$/;"	l
c010794b	obj/kernel.asm	/^c010794b:	5b                   	pop    %ebx$/;"	l
c010794c	obj/kernel.asm	/^c010794c:	5d                   	pop    %ebp$/;"	l
c010794d	obj/kernel.asm	/^c010794d:	c3                   	ret    $/;"	l
c010794e	obj/kernel.asm	/^c010794e <_fifo_init_mm>:$/;"	l
c010794e	obj/kernel.asm	/^c010794e:	55                   	push   %ebp$/;"	l
c010794f	obj/kernel.asm	/^c010794f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107951	obj/kernel.asm	/^c0107951:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107954	obj/kernel.asm	/^c0107954:	c7 45 fc 64 1f 1b c0 	movl   $0xc01b1f64,-0x4(%ebp)$/;"	l
c010795b	obj/kernel.asm	/^c010795b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010795e	obj/kernel.asm	/^c010795e:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107961	obj/kernel.asm	/^c0107961:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107964	obj/kernel.asm	/^c0107964:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107967	obj/kernel.asm	/^c0107967:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010796a	obj/kernel.asm	/^c010796a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010796d	obj/kernel.asm	/^c010796d:	89 10                	mov    %edx,(%eax)$/;"	l
c010796f	obj/kernel.asm	/^c010796f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107972	obj/kernel.asm	/^c0107972:	c7 40 14 64 1f 1b c0 	movl   $0xc01b1f64,0x14(%eax)$/;"	l
c0107979	obj/kernel.asm	/^c0107979:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010797e	obj/kernel.asm	/^c010797e:	c9                   	leave  $/;"	l
c010797f	obj/kernel.asm	/^c010797f:	c3                   	ret    $/;"	l
c0107980	obj/kernel.asm	/^c0107980 <_fifo_map_swappable>:$/;"	l
c0107980	obj/kernel.asm	/^c0107980:	55                   	push   %ebp$/;"	l
c0107981	obj/kernel.asm	/^c0107981:	89 e5                	mov    %esp,%ebp$/;"	l
c0107983	obj/kernel.asm	/^c0107983:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0107986	obj/kernel.asm	/^c0107986:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107989	obj/kernel.asm	/^c0107989:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010798c	obj/kernel.asm	/^c010798c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010798f	obj/kernel.asm	/^c010798f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107992	obj/kernel.asm	/^c0107992:	83 c0 14             	add    $0x14,%eax$/;"	l
c0107995	obj/kernel.asm	/^c0107995:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107998	obj/kernel.asm	/^c0107998:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010799c	obj/kernel.asm	/^c010799c:	74 06                	je     c01079a4 <_fifo_map_swappable+0x24>$/;"	l
c010799e	obj/kernel.asm	/^c010799e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01079a2	obj/kernel.asm	/^c01079a2:	75 24                	jne    c01079c8 <_fifo_map_swappable+0x48>$/;"	l
c01079a4	obj/kernel.asm	/^c01079a4:	c7 44 24 0c f8 dc 10 	movl   $0xc010dcf8,0xc(%esp)$/;"	l
c01079ab	obj/kernel.asm	/^c01079ab:	c0 $/;"	l
c01079ac	obj/kernel.asm	/^c01079ac:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c01079b3	obj/kernel.asm	/^c01079b3:	c0 $/;"	l
c01079b4	obj/kernel.asm	/^c01079b4:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
c01079bb	obj/kernel.asm	/^c01079bb:	00 $/;"	l
c01079bc	obj/kernel.asm	/^c01079bc:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c01079c3	obj/kernel.asm	/^c01079c3:	e8 12 94 ff ff       	call   c0100dda <__panic>$/;"	l
c01079c8	obj/kernel.asm	/^c01079c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079cb	obj/kernel.asm	/^c01079cb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01079ce	obj/kernel.asm	/^c01079ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01079d1	obj/kernel.asm	/^c01079d1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01079d4	obj/kernel.asm	/^c01079d4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01079d7	obj/kernel.asm	/^c01079d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01079da	obj/kernel.asm	/^c01079da:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01079dd	obj/kernel.asm	/^c01079dd:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01079e0	obj/kernel.asm	/^c01079e0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01079e3	obj/kernel.asm	/^c01079e3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01079e6	obj/kernel.asm	/^c01079e6:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01079e9	obj/kernel.asm	/^c01079e9:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c01079ec	obj/kernel.asm	/^c01079ec:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01079ef	obj/kernel.asm	/^c01079ef:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c01079f2	obj/kernel.asm	/^c01079f2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01079f5	obj/kernel.asm	/^c01079f5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01079f8	obj/kernel.asm	/^c01079f8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01079fb	obj/kernel.asm	/^c01079fb:	89 10                	mov    %edx,(%eax)$/;"	l
c01079fd	obj/kernel.asm	/^c01079fd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107a00	obj/kernel.asm	/^c0107a00:	8b 10                	mov    (%eax),%edx$/;"	l
c0107a02	obj/kernel.asm	/^c0107a02:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107a05	obj/kernel.asm	/^c0107a05:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a08	obj/kernel.asm	/^c0107a08:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a0b	obj/kernel.asm	/^c0107a0b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107a0e	obj/kernel.asm	/^c0107a0e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a11	obj/kernel.asm	/^c0107a11:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a14	obj/kernel.asm	/^c0107a14:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107a17	obj/kernel.asm	/^c0107a17:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a19	obj/kernel.asm	/^c0107a19:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107a1e	obj/kernel.asm	/^c0107a1e:	c9                   	leave  $/;"	l
c0107a1f	obj/kernel.asm	/^c0107a1f:	c3                   	ret    $/;"	l
c0107a20	obj/kernel.asm	/^c0107a20 <_fifo_swap_out_victim>:$/;"	l
c0107a20	obj/kernel.asm	/^c0107a20:	55                   	push   %ebp$/;"	l
c0107a21	obj/kernel.asm	/^c0107a21:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a23	obj/kernel.asm	/^c0107a23:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107a26	obj/kernel.asm	/^c0107a26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a29	obj/kernel.asm	/^c0107a29:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107a2c	obj/kernel.asm	/^c0107a2c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107a2f	obj/kernel.asm	/^c0107a2f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107a33	obj/kernel.asm	/^c0107a33:	75 24                	jne    c0107a59 <_fifo_swap_out_victim+0x39>$/;"	l
c0107a35	obj/kernel.asm	/^c0107a35:	c7 44 24 0c 3f dd 10 	movl   $0xc010dd3f,0xc(%esp)$/;"	l
c0107a3c	obj/kernel.asm	/^c0107a3c:	c0 $/;"	l
c0107a3d	obj/kernel.asm	/^c0107a3d:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107a44	obj/kernel.asm	/^c0107a44:	c0 $/;"	l
c0107a45	obj/kernel.asm	/^c0107a45:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
c0107a4c	obj/kernel.asm	/^c0107a4c:	00 $/;"	l
c0107a4d	obj/kernel.asm	/^c0107a4d:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107a54	obj/kernel.asm	/^c0107a54:	e8 81 93 ff ff       	call   c0100dda <__panic>$/;"	l
c0107a59	obj/kernel.asm	/^c0107a59:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0107a5d	obj/kernel.asm	/^c0107a5d:	74 24                	je     c0107a83 <_fifo_swap_out_victim+0x63>$/;"	l
c0107a5f	obj/kernel.asm	/^c0107a5f:	c7 44 24 0c 4c dd 10 	movl   $0xc010dd4c,0xc(%esp)$/;"	l
c0107a66	obj/kernel.asm	/^c0107a66:	c0 $/;"	l
c0107a67	obj/kernel.asm	/^c0107a67:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107a6e	obj/kernel.asm	/^c0107a6e:	c0 $/;"	l
c0107a6f	obj/kernel.asm	/^c0107a6f:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c0107a76	obj/kernel.asm	/^c0107a76:	00 $/;"	l
c0107a77	obj/kernel.asm	/^c0107a77:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107a7e	obj/kernel.asm	/^c0107a7e:	e8 57 93 ff ff       	call   c0100dda <__panic>$/;"	l
c0107a83	obj/kernel.asm	/^c0107a83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a86	obj/kernel.asm	/^c0107a86:	8b 00                	mov    (%eax),%eax$/;"	l
c0107a88	obj/kernel.asm	/^c0107a88:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107a8b	obj/kernel.asm	/^c0107a8b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a8e	obj/kernel.asm	/^c0107a8e:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107a91	obj/kernel.asm	/^c0107a91:	75 24                	jne    c0107ab7 <_fifo_swap_out_victim+0x97>$/;"	l
c0107a93	obj/kernel.asm	/^c0107a93:	c7 44 24 0c 57 dd 10 	movl   $0xc010dd57,0xc(%esp)$/;"	l
c0107a9a	obj/kernel.asm	/^c0107a9a:	c0 $/;"	l
c0107a9b	obj/kernel.asm	/^c0107a9b:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107aa2	obj/kernel.asm	/^c0107aa2:	c0 $/;"	l
c0107aa3	obj/kernel.asm	/^c0107aa3:	c7 44 24 04 48 00 00 	movl   $0x48,0x4(%esp)$/;"	l
c0107aaa	obj/kernel.asm	/^c0107aaa:	00 $/;"	l
c0107aab	obj/kernel.asm	/^c0107aab:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107ab2	obj/kernel.asm	/^c0107ab2:	e8 23 93 ff ff       	call   c0100dda <__panic>$/;"	l
c0107ab7	obj/kernel.asm	/^c0107ab7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107aba	obj/kernel.asm	/^c0107aba:	83 e8 14             	sub    $0x14,%eax$/;"	l
c0107abd	obj/kernel.asm	/^c0107abd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107ac0	obj/kernel.asm	/^c0107ac0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107ac3	obj/kernel.asm	/^c0107ac3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107ac6	obj/kernel.asm	/^c0107ac6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107ac9	obj/kernel.asm	/^c0107ac9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107acc	obj/kernel.asm	/^c0107acc:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107acf	obj/kernel.asm	/^c0107acf:	8b 12                	mov    (%edx),%edx$/;"	l
c0107ad1	obj/kernel.asm	/^c0107ad1:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0107ad4	obj/kernel.asm	/^c0107ad4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107ad7	obj/kernel.asm	/^c0107ad7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107ada	obj/kernel.asm	/^c0107ada:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107add	obj/kernel.asm	/^c0107add:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107ae0	obj/kernel.asm	/^c0107ae0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107ae3	obj/kernel.asm	/^c0107ae3:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107ae6	obj/kernel.asm	/^c0107ae6:	89 10                	mov    %edx,(%eax)$/;"	l
c0107ae8	obj/kernel.asm	/^c0107ae8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107aec	obj/kernel.asm	/^c0107aec:	75 24                	jne    c0107b12 <_fifo_swap_out_victim+0xf2>$/;"	l
c0107aee	obj/kernel.asm	/^c0107aee:	c7 44 24 0c 62 dd 10 	movl   $0xc010dd62,0xc(%esp)$/;"	l
c0107af5	obj/kernel.asm	/^c0107af5:	c0 $/;"	l
c0107af6	obj/kernel.asm	/^c0107af6:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107afd	obj/kernel.asm	/^c0107afd:	c0 $/;"	l
c0107afe	obj/kernel.asm	/^c0107afe:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
c0107b05	obj/kernel.asm	/^c0107b05:	00 $/;"	l
c0107b06	obj/kernel.asm	/^c0107b06:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107b0d	obj/kernel.asm	/^c0107b0d:	e8 c8 92 ff ff       	call   c0100dda <__panic>$/;"	l
c0107b12	obj/kernel.asm	/^c0107b12:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107b15	obj/kernel.asm	/^c0107b15:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107b18	obj/kernel.asm	/^c0107b18:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b1a	obj/kernel.asm	/^c0107b1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107b1f	obj/kernel.asm	/^c0107b1f:	c9                   	leave  $/;"	l
c0107b20	obj/kernel.asm	/^c0107b20:	c3                   	ret    $/;"	l
c0107b21	obj/kernel.asm	/^c0107b21 <_fifo_check_swap>:$/;"	l
c0107b21	obj/kernel.asm	/^c0107b21:	55                   	push   %ebp$/;"	l
c0107b22	obj/kernel.asm	/^c0107b22:	89 e5                	mov    %esp,%ebp$/;"	l
c0107b24	obj/kernel.asm	/^c0107b24:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107b27	obj/kernel.asm	/^c0107b27:	c7 04 24 6c dd 10 c0 	movl   $0xc010dd6c,(%esp)$/;"	l
c0107b2e	obj/kernel.asm	/^c0107b2e:	e8 25 88 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107b33	obj/kernel.asm	/^c0107b33:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107b38	obj/kernel.asm	/^c0107b38:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107b3b	obj/kernel.asm	/^c0107b3b:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107b40	obj/kernel.asm	/^c0107b40:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107b43	obj/kernel.asm	/^c0107b43:	74 24                	je     c0107b69 <_fifo_check_swap+0x48>$/;"	l
c0107b45	obj/kernel.asm	/^c0107b45:	c7 44 24 0c 92 dd 10 	movl   $0xc010dd92,0xc(%esp)$/;"	l
c0107b4c	obj/kernel.asm	/^c0107b4c:	c0 $/;"	l
c0107b4d	obj/kernel.asm	/^c0107b4d:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107b54	obj/kernel.asm	/^c0107b54:	c0 $/;"	l
c0107b55	obj/kernel.asm	/^c0107b55:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c0107b5c	obj/kernel.asm	/^c0107b5c:	00 $/;"	l
c0107b5d	obj/kernel.asm	/^c0107b5d:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107b64	obj/kernel.asm	/^c0107b64:	e8 71 92 ff ff       	call   c0100dda <__panic>$/;"	l
c0107b69	obj/kernel.asm	/^c0107b69:	c7 04 24 a4 dd 10 c0 	movl   $0xc010dda4,(%esp)$/;"	l
c0107b70	obj/kernel.asm	/^c0107b70:	e8 e3 87 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107b75	obj/kernel.asm	/^c0107b75:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107b7a	obj/kernel.asm	/^c0107b7a:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107b7d	obj/kernel.asm	/^c0107b7d:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107b82	obj/kernel.asm	/^c0107b82:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107b85	obj/kernel.asm	/^c0107b85:	74 24                	je     c0107bab <_fifo_check_swap+0x8a>$/;"	l
c0107b87	obj/kernel.asm	/^c0107b87:	c7 44 24 0c 92 dd 10 	movl   $0xc010dd92,0xc(%esp)$/;"	l
c0107b8e	obj/kernel.asm	/^c0107b8e:	c0 $/;"	l
c0107b8f	obj/kernel.asm	/^c0107b8f:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107b96	obj/kernel.asm	/^c0107b96:	c0 $/;"	l
c0107b97	obj/kernel.asm	/^c0107b97:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
c0107b9e	obj/kernel.asm	/^c0107b9e:	00 $/;"	l
c0107b9f	obj/kernel.asm	/^c0107b9f:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107ba6	obj/kernel.asm	/^c0107ba6:	e8 2f 92 ff ff       	call   c0100dda <__panic>$/;"	l
c0107bab	obj/kernel.asm	/^c0107bab:	c7 04 24 cc dd 10 c0 	movl   $0xc010ddcc,(%esp)$/;"	l
c0107bb2	obj/kernel.asm	/^c0107bb2:	e8 a1 87 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107bb7	obj/kernel.asm	/^c0107bb7:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107bbc	obj/kernel.asm	/^c0107bbc:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107bbf	obj/kernel.asm	/^c0107bbf:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107bc4	obj/kernel.asm	/^c0107bc4:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107bc7	obj/kernel.asm	/^c0107bc7:	74 24                	je     c0107bed <_fifo_check_swap+0xcc>$/;"	l
c0107bc9	obj/kernel.asm	/^c0107bc9:	c7 44 24 0c 92 dd 10 	movl   $0xc010dd92,0xc(%esp)$/;"	l
c0107bd0	obj/kernel.asm	/^c0107bd0:	c0 $/;"	l
c0107bd1	obj/kernel.asm	/^c0107bd1:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107bd8	obj/kernel.asm	/^c0107bd8:	c0 $/;"	l
c0107bd9	obj/kernel.asm	/^c0107bd9:	c7 44 24 04 5b 00 00 	movl   $0x5b,0x4(%esp)$/;"	l
c0107be0	obj/kernel.asm	/^c0107be0:	00 $/;"	l
c0107be1	obj/kernel.asm	/^c0107be1:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107be8	obj/kernel.asm	/^c0107be8:	e8 ed 91 ff ff       	call   c0100dda <__panic>$/;"	l
c0107bed	obj/kernel.asm	/^c0107bed:	c7 04 24 f4 dd 10 c0 	movl   $0xc010ddf4,(%esp)$/;"	l
c0107bf4	obj/kernel.asm	/^c0107bf4:	e8 5f 87 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107bf9	obj/kernel.asm	/^c0107bf9:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107bfe	obj/kernel.asm	/^c0107bfe:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107c01	obj/kernel.asm	/^c0107c01:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107c06	obj/kernel.asm	/^c0107c06:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107c09	obj/kernel.asm	/^c0107c09:	74 24                	je     c0107c2f <_fifo_check_swap+0x10e>$/;"	l
c0107c0b	obj/kernel.asm	/^c0107c0b:	c7 44 24 0c 92 dd 10 	movl   $0xc010dd92,0xc(%esp)$/;"	l
c0107c12	obj/kernel.asm	/^c0107c12:	c0 $/;"	l
c0107c13	obj/kernel.asm	/^c0107c13:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107c1a	obj/kernel.asm	/^c0107c1a:	c0 $/;"	l
c0107c1b	obj/kernel.asm	/^c0107c1b:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107c22	obj/kernel.asm	/^c0107c22:	00 $/;"	l
c0107c23	obj/kernel.asm	/^c0107c23:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107c2a	obj/kernel.asm	/^c0107c2a:	e8 ab 91 ff ff       	call   c0100dda <__panic>$/;"	l
c0107c2f	obj/kernel.asm	/^c0107c2f:	c7 04 24 1c de 10 c0 	movl   $0xc010de1c,(%esp)$/;"	l
c0107c36	obj/kernel.asm	/^c0107c36:	e8 1d 87 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107c3b	obj/kernel.asm	/^c0107c3b:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c0107c40	obj/kernel.asm	/^c0107c40:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c0107c43	obj/kernel.asm	/^c0107c43:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107c48	obj/kernel.asm	/^c0107c48:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107c4b	obj/kernel.asm	/^c0107c4b:	74 24                	je     c0107c71 <_fifo_check_swap+0x150>$/;"	l
c0107c4d	obj/kernel.asm	/^c0107c4d:	c7 44 24 0c 42 de 10 	movl   $0xc010de42,0xc(%esp)$/;"	l
c0107c54	obj/kernel.asm	/^c0107c54:	c0 $/;"	l
c0107c55	obj/kernel.asm	/^c0107c55:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107c5c	obj/kernel.asm	/^c0107c5c:	c0 $/;"	l
c0107c5d	obj/kernel.asm	/^c0107c5d:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c0107c64	obj/kernel.asm	/^c0107c64:	00 $/;"	l
c0107c65	obj/kernel.asm	/^c0107c65:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107c6c	obj/kernel.asm	/^c0107c6c:	e8 69 91 ff ff       	call   c0100dda <__panic>$/;"	l
c0107c71	obj/kernel.asm	/^c0107c71:	c7 04 24 f4 dd 10 c0 	movl   $0xc010ddf4,(%esp)$/;"	l
c0107c78	obj/kernel.asm	/^c0107c78:	e8 db 86 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107c7d	obj/kernel.asm	/^c0107c7d:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107c82	obj/kernel.asm	/^c0107c82:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107c85	obj/kernel.asm	/^c0107c85:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107c8a	obj/kernel.asm	/^c0107c8a:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107c8d	obj/kernel.asm	/^c0107c8d:	74 24                	je     c0107cb3 <_fifo_check_swap+0x192>$/;"	l
c0107c8f	obj/kernel.asm	/^c0107c8f:	c7 44 24 0c 42 de 10 	movl   $0xc010de42,0xc(%esp)$/;"	l
c0107c96	obj/kernel.asm	/^c0107c96:	c0 $/;"	l
c0107c97	obj/kernel.asm	/^c0107c97:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107c9e	obj/kernel.asm	/^c0107c9e:	c0 $/;"	l
c0107c9f	obj/kernel.asm	/^c0107c9f:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0107ca6	obj/kernel.asm	/^c0107ca6:	00 $/;"	l
c0107ca7	obj/kernel.asm	/^c0107ca7:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107cae	obj/kernel.asm	/^c0107cae:	e8 27 91 ff ff       	call   c0100dda <__panic>$/;"	l
c0107cb3	obj/kernel.asm	/^c0107cb3:	c7 04 24 a4 dd 10 c0 	movl   $0xc010dda4,(%esp)$/;"	l
c0107cba	obj/kernel.asm	/^c0107cba:	e8 99 86 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107cbf	obj/kernel.asm	/^c0107cbf:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107cc4	obj/kernel.asm	/^c0107cc4:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107cc7	obj/kernel.asm	/^c0107cc7:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107ccc	obj/kernel.asm	/^c0107ccc:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c0107ccf	obj/kernel.asm	/^c0107ccf:	74 24                	je     c0107cf5 <_fifo_check_swap+0x1d4>$/;"	l
c0107cd1	obj/kernel.asm	/^c0107cd1:	c7 44 24 0c 51 de 10 	movl   $0xc010de51,0xc(%esp)$/;"	l
c0107cd8	obj/kernel.asm	/^c0107cd8:	c0 $/;"	l
c0107cd9	obj/kernel.asm	/^c0107cd9:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107ce0	obj/kernel.asm	/^c0107ce0:	c0 $/;"	l
c0107ce1	obj/kernel.asm	/^c0107ce1:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c0107ce8	obj/kernel.asm	/^c0107ce8:	00 $/;"	l
c0107ce9	obj/kernel.asm	/^c0107ce9:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107cf0	obj/kernel.asm	/^c0107cf0:	e8 e5 90 ff ff       	call   c0100dda <__panic>$/;"	l
c0107cf5	obj/kernel.asm	/^c0107cf5:	c7 04 24 f4 dd 10 c0 	movl   $0xc010ddf4,(%esp)$/;"	l
c0107cfc	obj/kernel.asm	/^c0107cfc:	e8 57 86 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107d01	obj/kernel.asm	/^c0107d01:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107d06	obj/kernel.asm	/^c0107d06:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107d09	obj/kernel.asm	/^c0107d09:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107d0e	obj/kernel.asm	/^c0107d0e:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0107d11	obj/kernel.asm	/^c0107d11:	74 24                	je     c0107d37 <_fifo_check_swap+0x216>$/;"	l
c0107d13	obj/kernel.asm	/^c0107d13:	c7 44 24 0c 60 de 10 	movl   $0xc010de60,0xc(%esp)$/;"	l
c0107d1a	obj/kernel.asm	/^c0107d1a:	c0 $/;"	l
c0107d1b	obj/kernel.asm	/^c0107d1b:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107d22	obj/kernel.asm	/^c0107d22:	c0 $/;"	l
c0107d23	obj/kernel.asm	/^c0107d23:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0107d2a	obj/kernel.asm	/^c0107d2a:	00 $/;"	l
c0107d2b	obj/kernel.asm	/^c0107d2b:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107d32	obj/kernel.asm	/^c0107d32:	e8 a3 90 ff ff       	call   c0100dda <__panic>$/;"	l
c0107d37	obj/kernel.asm	/^c0107d37:	c7 04 24 6c dd 10 c0 	movl   $0xc010dd6c,(%esp)$/;"	l
c0107d3e	obj/kernel.asm	/^c0107d3e:	e8 15 86 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107d43	obj/kernel.asm	/^c0107d43:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107d48	obj/kernel.asm	/^c0107d48:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107d4b	obj/kernel.asm	/^c0107d4b:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107d50	obj/kernel.asm	/^c0107d50:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0107d53	obj/kernel.asm	/^c0107d53:	74 24                	je     c0107d79 <_fifo_check_swap+0x258>$/;"	l
c0107d55	obj/kernel.asm	/^c0107d55:	c7 44 24 0c 6f de 10 	movl   $0xc010de6f,0xc(%esp)$/;"	l
c0107d5c	obj/kernel.asm	/^c0107d5c:	c0 $/;"	l
c0107d5d	obj/kernel.asm	/^c0107d5d:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107d64	obj/kernel.asm	/^c0107d64:	c0 $/;"	l
c0107d65	obj/kernel.asm	/^c0107d65:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c0107d6c	obj/kernel.asm	/^c0107d6c:	00 $/;"	l
c0107d6d	obj/kernel.asm	/^c0107d6d:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107d74	obj/kernel.asm	/^c0107d74:	e8 61 90 ff ff       	call   c0100dda <__panic>$/;"	l
c0107d79	obj/kernel.asm	/^c0107d79:	c7 04 24 cc dd 10 c0 	movl   $0xc010ddcc,(%esp)$/;"	l
c0107d80	obj/kernel.asm	/^c0107d80:	e8 d3 85 ff ff       	call   c0100358 <cprintf>$/;"	l
c0107d85	obj/kernel.asm	/^c0107d85:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107d8a	obj/kernel.asm	/^c0107d8a:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107d8d	obj/kernel.asm	/^c0107d8d:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0107d92	obj/kernel.asm	/^c0107d92:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c0107d95	obj/kernel.asm	/^c0107d95:	74 24                	je     c0107dbb <_fifo_check_swap+0x29a>$/;"	l
c0107d97	obj/kernel.asm	/^c0107d97:	c7 44 24 0c 7e de 10 	movl   $0xc010de7e,0xc(%esp)$/;"	l
c0107d9e	obj/kernel.asm	/^c0107d9e:	c0 $/;"	l
c0107d9f	obj/kernel.asm	/^c0107d9f:	c7 44 24 08 16 dd 10 	movl   $0xc010dd16,0x8(%esp)$/;"	l
c0107da6	obj/kernel.asm	/^c0107da6:	c0 $/;"	l
c0107da7	obj/kernel.asm	/^c0107da7:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0107dae	obj/kernel.asm	/^c0107dae:	00 $/;"	l
c0107daf	obj/kernel.asm	/^c0107daf:	c7 04 24 2b dd 10 c0 	movl   $0xc010dd2b,(%esp)$/;"	l
c0107db6	obj/kernel.asm	/^c0107db6:	e8 1f 90 ff ff       	call   c0100dda <__panic>$/;"	l
c0107dbb	obj/kernel.asm	/^c0107dbb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107dc0	obj/kernel.asm	/^c0107dc0:	c9                   	leave  $/;"	l
c0107dc1	obj/kernel.asm	/^c0107dc1:	c3                   	ret    $/;"	l
c0107dc2	obj/kernel.asm	/^c0107dc2 <_fifo_init>:$/;"	l
c0107dc2	obj/kernel.asm	/^c0107dc2:	55                   	push   %ebp$/;"	l
c0107dc3	obj/kernel.asm	/^c0107dc3:	89 e5                	mov    %esp,%ebp$/;"	l
c0107dc5	obj/kernel.asm	/^c0107dc5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107dca	obj/kernel.asm	/^c0107dca:	5d                   	pop    %ebp$/;"	l
c0107dcb	obj/kernel.asm	/^c0107dcb:	c3                   	ret    $/;"	l
c0107dcc	obj/kernel.asm	/^c0107dcc <_fifo_set_unswappable>:$/;"	l
c0107dcc	obj/kernel.asm	/^c0107dcc:	55                   	push   %ebp$/;"	l
c0107dcd	obj/kernel.asm	/^c0107dcd:	89 e5                	mov    %esp,%ebp$/;"	l
c0107dcf	obj/kernel.asm	/^c0107dcf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107dd4	obj/kernel.asm	/^c0107dd4:	5d                   	pop    %ebp$/;"	l
c0107dd5	obj/kernel.asm	/^c0107dd5:	c3                   	ret    $/;"	l
c0107dd6	obj/kernel.asm	/^c0107dd6 <_fifo_tick_event>:$/;"	l
c0107dd6	obj/kernel.asm	/^c0107dd6:	55                   	push   %ebp$/;"	l
c0107dd7	obj/kernel.asm	/^c0107dd7:	89 e5                	mov    %esp,%ebp$/;"	l
c0107dd9	obj/kernel.asm	/^c0107dd9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107dde	obj/kernel.asm	/^c0107dde:	5d                   	pop    %ebp$/;"	l
c0107ddf	obj/kernel.asm	/^c0107ddf:	c3                   	ret    $/;"	l
c0107de0	obj/kernel.asm	/^c0107de0 <lock_init>:$/;"	l
c0107de0	obj/kernel.asm	/^c0107de0:	55                   	push   %ebp$/;"	l
c0107de1	obj/kernel.asm	/^c0107de1:	89 e5                	mov    %esp,%ebp$/;"	l
c0107de3	obj/kernel.asm	/^c0107de3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107de6	obj/kernel.asm	/^c0107de6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0107dec	obj/kernel.asm	/^c0107dec:	5d                   	pop    %ebp$/;"	l
c0107ded	obj/kernel.asm	/^c0107ded:	c3                   	ret    $/;"	l
c0107dee	obj/kernel.asm	/^c0107dee <mm_count>:$/;"	l
c0107dee	obj/kernel.asm	/^c0107dee:	55                   	push   %ebp$/;"	l
c0107def	obj/kernel.asm	/^c0107def:	89 e5                	mov    %esp,%ebp$/;"	l
c0107df1	obj/kernel.asm	/^c0107df1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107df4	obj/kernel.asm	/^c0107df4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0107df7	obj/kernel.asm	/^c0107df7:	5d                   	pop    %ebp$/;"	l
c0107df8	obj/kernel.asm	/^c0107df8:	c3                   	ret    $/;"	l
c0107df9	obj/kernel.asm	/^c0107df9 <set_mm_count>:$/;"	l
c0107df9	obj/kernel.asm	/^c0107df9:	55                   	push   %ebp$/;"	l
c0107dfa	obj/kernel.asm	/^c0107dfa:	89 e5                	mov    %esp,%ebp$/;"	l
c0107dfc	obj/kernel.asm	/^c0107dfc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107dff	obj/kernel.asm	/^c0107dff:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107e02	obj/kernel.asm	/^c0107e02:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0107e05	obj/kernel.asm	/^c0107e05:	5d                   	pop    %ebp$/;"	l
c0107e06	obj/kernel.asm	/^c0107e06:	c3                   	ret    $/;"	l
c0107e07	obj/kernel.asm	/^c0107e07 <pa2page>:$/;"	l
c0107e07	obj/kernel.asm	/^c0107e07:	55                   	push   %ebp$/;"	l
c0107e08	obj/kernel.asm	/^c0107e08:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e0a	obj/kernel.asm	/^c0107e0a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107e0d	obj/kernel.asm	/^c0107e0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e10	obj/kernel.asm	/^c0107e10:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107e13	obj/kernel.asm	/^c0107e13:	89 c2                	mov    %eax,%edx$/;"	l
c0107e15	obj/kernel.asm	/^c0107e15:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0107e1a	obj/kernel.asm	/^c0107e1a:	39 c2                	cmp    %eax,%edx$/;"	l
c0107e1c	obj/kernel.asm	/^c0107e1c:	72 1c                	jb     c0107e3a <pa2page+0x33>$/;"	l
c0107e1e	obj/kernel.asm	/^c0107e1e:	c7 44 24 08 a0 de 10 	movl   $0xc010dea0,0x8(%esp)$/;"	l
c0107e25	obj/kernel.asm	/^c0107e25:	c0 $/;"	l
c0107e26	obj/kernel.asm	/^c0107e26:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107e2d	obj/kernel.asm	/^c0107e2d:	00 $/;"	l
c0107e2e	obj/kernel.asm	/^c0107e2e:	c7 04 24 bf de 10 c0 	movl   $0xc010debf,(%esp)$/;"	l
c0107e35	obj/kernel.asm	/^c0107e35:	e8 a0 8f ff ff       	call   c0100dda <__panic>$/;"	l
c0107e3a	obj/kernel.asm	/^c0107e3a:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c0107e3f	obj/kernel.asm	/^c0107e3f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107e42	obj/kernel.asm	/^c0107e42:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0107e45	obj/kernel.asm	/^c0107e45:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0107e48	obj/kernel.asm	/^c0107e48:	01 d0                	add    %edx,%eax$/;"	l
c0107e4a	obj/kernel.asm	/^c0107e4a:	c9                   	leave  $/;"	l
c0107e4b	obj/kernel.asm	/^c0107e4b:	c3                   	ret    $/;"	l
c0107e4c	obj/kernel.asm	/^c0107e4c <mm_create>:$/;"	l
c0107e4c	obj/kernel.asm	/^c0107e4c:	55                   	push   %ebp$/;"	l
c0107e4d	obj/kernel.asm	/^c0107e4d:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e4f	obj/kernel.asm	/^c0107e4f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107e52	obj/kernel.asm	/^c0107e52:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0107e59	obj/kernel.asm	/^c0107e59:	e8 d2 cd ff ff       	call   c0104c30 <kmalloc>$/;"	l
c0107e5e	obj/kernel.asm	/^c0107e5e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107e61	obj/kernel.asm	/^c0107e61:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107e65	obj/kernel.asm	/^c0107e65:	74 79                	je     c0107ee0 <mm_create+0x94>$/;"	l
c0107e67	obj/kernel.asm	/^c0107e67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e6a	obj/kernel.asm	/^c0107e6a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107e6d	obj/kernel.asm	/^c0107e6d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e70	obj/kernel.asm	/^c0107e70:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107e73	obj/kernel.asm	/^c0107e73:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e76	obj/kernel.asm	/^c0107e76:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e79	obj/kernel.asm	/^c0107e79:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107e7c	obj/kernel.asm	/^c0107e7c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e7f	obj/kernel.asm	/^c0107e7f:	89 10                	mov    %edx,(%eax)$/;"	l
c0107e81	obj/kernel.asm	/^c0107e81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e84	obj/kernel.asm	/^c0107e84:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107e8b	obj/kernel.asm	/^c0107e8b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e8e	obj/kernel.asm	/^c0107e8e:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0107e95	obj/kernel.asm	/^c0107e95:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e98	obj/kernel.asm	/^c0107e98:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0107e9f	obj/kernel.asm	/^c0107e9f:	a1 0c fe 1a c0       	mov    0xc01afe0c,%eax$/;"	l
c0107ea4	obj/kernel.asm	/^c0107ea4:	85 c0                	test   %eax,%eax$/;"	l
c0107ea6	obj/kernel.asm	/^c0107ea6:	74 0d                	je     c0107eb5 <mm_create+0x69>$/;"	l
c0107ea8	obj/kernel.asm	/^c0107ea8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107eab	obj/kernel.asm	/^c0107eab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107eae	obj/kernel.asm	/^c0107eae:	e8 5e ef ff ff       	call   c0106e11 <swap_init_mm>$/;"	l
c0107eb3	obj/kernel.asm	/^c0107eb3:	eb 0a                	jmp    c0107ebf <mm_create+0x73>$/;"	l
c0107eb5	obj/kernel.asm	/^c0107eb5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107eb8	obj/kernel.asm	/^c0107eb8:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0107ebf	obj/kernel.asm	/^c0107ebf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0107ec6	obj/kernel.asm	/^c0107ec6:	00 $/;"	l
c0107ec7	obj/kernel.asm	/^c0107ec7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107eca	obj/kernel.asm	/^c0107eca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107ecd	obj/kernel.asm	/^c0107ecd:	e8 27 ff ff ff       	call   c0107df9 <set_mm_count>$/;"	l
c0107ed2	obj/kernel.asm	/^c0107ed2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ed5	obj/kernel.asm	/^c0107ed5:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0107ed8	obj/kernel.asm	/^c0107ed8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107edb	obj/kernel.asm	/^c0107edb:	e8 00 ff ff ff       	call   c0107de0 <lock_init>$/;"	l
c0107ee0	obj/kernel.asm	/^c0107ee0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ee3	obj/kernel.asm	/^c0107ee3:	c9                   	leave  $/;"	l
c0107ee4	obj/kernel.asm	/^c0107ee4:	c3                   	ret    $/;"	l
c0107ee5	obj/kernel.asm	/^c0107ee5 <vma_create>:$/;"	l
c0107ee5	obj/kernel.asm	/^c0107ee5:	55                   	push   %ebp$/;"	l
c0107ee6	obj/kernel.asm	/^c0107ee6:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ee8	obj/kernel.asm	/^c0107ee8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107eeb	obj/kernel.asm	/^c0107eeb:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
c0107ef2	obj/kernel.asm	/^c0107ef2:	e8 39 cd ff ff       	call   c0104c30 <kmalloc>$/;"	l
c0107ef7	obj/kernel.asm	/^c0107ef7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107efa	obj/kernel.asm	/^c0107efa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107efe	obj/kernel.asm	/^c0107efe:	74 1b                	je     c0107f1b <vma_create+0x36>$/;"	l
c0107f00	obj/kernel.asm	/^c0107f00:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f03	obj/kernel.asm	/^c0107f03:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107f06	obj/kernel.asm	/^c0107f06:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f09	obj/kernel.asm	/^c0107f09:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f0c	obj/kernel.asm	/^c0107f0c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107f0f	obj/kernel.asm	/^c0107f0f:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107f12	obj/kernel.asm	/^c0107f12:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f15	obj/kernel.asm	/^c0107f15:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0107f18	obj/kernel.asm	/^c0107f18:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0107f1b	obj/kernel.asm	/^c0107f1b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f1e	obj/kernel.asm	/^c0107f1e:	c9                   	leave  $/;"	l
c0107f1f	obj/kernel.asm	/^c0107f1f:	c3                   	ret    $/;"	l
c0107f20	obj/kernel.asm	/^c0107f20 <find_vma>:$/;"	l
c0107f20	obj/kernel.asm	/^c0107f20:	55                   	push   %ebp$/;"	l
c0107f21	obj/kernel.asm	/^c0107f21:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f23	obj/kernel.asm	/^c0107f23:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0107f26	obj/kernel.asm	/^c0107f26:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0107f2d	obj/kernel.asm	/^c0107f2d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107f31	obj/kernel.asm	/^c0107f31:	0f 84 95 00 00 00    	je     c0107fcc <find_vma+0xac>$/;"	l
c0107f37	obj/kernel.asm	/^c0107f37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f3a	obj/kernel.asm	/^c0107f3a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f3d	obj/kernel.asm	/^c0107f3d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0107f40	obj/kernel.asm	/^c0107f40:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0107f44	obj/kernel.asm	/^c0107f44:	74 16                	je     c0107f5c <find_vma+0x3c>$/;"	l
c0107f46	obj/kernel.asm	/^c0107f46:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107f49	obj/kernel.asm	/^c0107f49:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107f4c	obj/kernel.asm	/^c0107f4c:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107f4f	obj/kernel.asm	/^c0107f4f:	77 0b                	ja     c0107f5c <find_vma+0x3c>$/;"	l
c0107f51	obj/kernel.asm	/^c0107f51:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107f54	obj/kernel.asm	/^c0107f54:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f57	obj/kernel.asm	/^c0107f57:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107f5a	obj/kernel.asm	/^c0107f5a:	77 61                	ja     c0107fbd <find_vma+0x9d>$/;"	l
c0107f5c	obj/kernel.asm	/^c0107f5c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0107f63	obj/kernel.asm	/^c0107f63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f66	obj/kernel.asm	/^c0107f66:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f69	obj/kernel.asm	/^c0107f69:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f6c	obj/kernel.asm	/^c0107f6c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107f6f	obj/kernel.asm	/^c0107f6f:	eb 28                	jmp    c0107f99 <find_vma+0x79>$/;"	l
c0107f71	obj/kernel.asm	/^c0107f71:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f74	obj/kernel.asm	/^c0107f74:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107f77	obj/kernel.asm	/^c0107f77:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0107f7a	obj/kernel.asm	/^c0107f7a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107f7d	obj/kernel.asm	/^c0107f7d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107f80	obj/kernel.asm	/^c0107f80:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107f83	obj/kernel.asm	/^c0107f83:	77 14                	ja     c0107f99 <find_vma+0x79>$/;"	l
c0107f85	obj/kernel.asm	/^c0107f85:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107f88	obj/kernel.asm	/^c0107f88:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f8b	obj/kernel.asm	/^c0107f8b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107f8e	obj/kernel.asm	/^c0107f8e:	76 09                	jbe    c0107f99 <find_vma+0x79>$/;"	l
c0107f90	obj/kernel.asm	/^c0107f90:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c0107f97	obj/kernel.asm	/^c0107f97:	eb 17                	jmp    c0107fb0 <find_vma+0x90>$/;"	l
c0107f99	obj/kernel.asm	/^c0107f99:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f9c	obj/kernel.asm	/^c0107f9c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107f9f	obj/kernel.asm	/^c0107f9f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107fa2	obj/kernel.asm	/^c0107fa2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107fa5	obj/kernel.asm	/^c0107fa5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107fa8	obj/kernel.asm	/^c0107fa8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fab	obj/kernel.asm	/^c0107fab:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107fae	obj/kernel.asm	/^c0107fae:	75 c1                	jne    c0107f71 <find_vma+0x51>$/;"	l
c0107fb0	obj/kernel.asm	/^c0107fb0:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c0107fb4	obj/kernel.asm	/^c0107fb4:	75 07                	jne    c0107fbd <find_vma+0x9d>$/;"	l
c0107fb6	obj/kernel.asm	/^c0107fb6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0107fbd	obj/kernel.asm	/^c0107fbd:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0107fc1	obj/kernel.asm	/^c0107fc1:	74 09                	je     c0107fcc <find_vma+0xac>$/;"	l
c0107fc3	obj/kernel.asm	/^c0107fc3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107fc6	obj/kernel.asm	/^c0107fc6:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107fc9	obj/kernel.asm	/^c0107fc9:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107fcc	obj/kernel.asm	/^c0107fcc:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107fcf	obj/kernel.asm	/^c0107fcf:	c9                   	leave  $/;"	l
c0107fd0	obj/kernel.asm	/^c0107fd0:	c3                   	ret    $/;"	l
c0107fd1	obj/kernel.asm	/^c0107fd1 <check_vma_overlap>:$/;"	l
c0107fd1	obj/kernel.asm	/^c0107fd1:	55                   	push   %ebp$/;"	l
c0107fd2	obj/kernel.asm	/^c0107fd2:	89 e5                	mov    %esp,%ebp$/;"	l
c0107fd4	obj/kernel.asm	/^c0107fd4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107fd7	obj/kernel.asm	/^c0107fd7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107fda	obj/kernel.asm	/^c0107fda:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107fdd	obj/kernel.asm	/^c0107fdd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107fe0	obj/kernel.asm	/^c0107fe0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107fe3	obj/kernel.asm	/^c0107fe3:	39 c2                	cmp    %eax,%edx$/;"	l
c0107fe5	obj/kernel.asm	/^c0107fe5:	72 24                	jb     c010800b <check_vma_overlap+0x3a>$/;"	l
c0107fe7	obj/kernel.asm	/^c0107fe7:	c7 44 24 0c cd de 10 	movl   $0xc010decd,0xc(%esp)$/;"	l
c0107fee	obj/kernel.asm	/^c0107fee:	c0 $/;"	l
c0107fef	obj/kernel.asm	/^c0107fef:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0107ff6	obj/kernel.asm	/^c0107ff6:	c0 $/;"	l
c0107ff7	obj/kernel.asm	/^c0107ff7:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c0107ffe	obj/kernel.asm	/^c0107ffe:	00 $/;"	l
c0107fff	obj/kernel.asm	/^c0107fff:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108006	obj/kernel.asm	/^c0108006:	e8 cf 8d ff ff       	call   c0100dda <__panic>$/;"	l
c010800b	obj/kernel.asm	/^c010800b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010800e	obj/kernel.asm	/^c010800e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108011	obj/kernel.asm	/^c0108011:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108014	obj/kernel.asm	/^c0108014:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108017	obj/kernel.asm	/^c0108017:	39 c2                	cmp    %eax,%edx$/;"	l
c0108019	obj/kernel.asm	/^c0108019:	76 24                	jbe    c010803f <check_vma_overlap+0x6e>$/;"	l
c010801b	obj/kernel.asm	/^c010801b:	c7 44 24 0c 10 df 10 	movl   $0xc010df10,0xc(%esp)$/;"	l
c0108022	obj/kernel.asm	/^c0108022:	c0 $/;"	l
c0108023	obj/kernel.asm	/^c0108023:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c010802a	obj/kernel.asm	/^c010802a:	c0 $/;"	l
c010802b	obj/kernel.asm	/^c010802b:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)$/;"	l
c0108032	obj/kernel.asm	/^c0108032:	00 $/;"	l
c0108033	obj/kernel.asm	/^c0108033:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c010803a	obj/kernel.asm	/^c010803a:	e8 9b 8d ff ff       	call   c0100dda <__panic>$/;"	l
c010803f	obj/kernel.asm	/^c010803f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108042	obj/kernel.asm	/^c0108042:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108045	obj/kernel.asm	/^c0108045:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108048	obj/kernel.asm	/^c0108048:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010804b	obj/kernel.asm	/^c010804b:	39 c2                	cmp    %eax,%edx$/;"	l
c010804d	obj/kernel.asm	/^c010804d:	72 24                	jb     c0108073 <check_vma_overlap+0xa2>$/;"	l
c010804f	obj/kernel.asm	/^c010804f:	c7 44 24 0c 2f df 10 	movl   $0xc010df2f,0xc(%esp)$/;"	l
c0108056	obj/kernel.asm	/^c0108056:	c0 $/;"	l
c0108057	obj/kernel.asm	/^c0108057:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c010805e	obj/kernel.asm	/^c010805e:	c0 $/;"	l
c010805f	obj/kernel.asm	/^c010805f:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c0108066	obj/kernel.asm	/^c0108066:	00 $/;"	l
c0108067	obj/kernel.asm	/^c0108067:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c010806e	obj/kernel.asm	/^c010806e:	e8 67 8d ff ff       	call   c0100dda <__panic>$/;"	l
c0108073	obj/kernel.asm	/^c0108073:	c9                   	leave  $/;"	l
c0108074	obj/kernel.asm	/^c0108074:	c3                   	ret    $/;"	l
c0108075	obj/kernel.asm	/^c0108075 <insert_vma_struct>:$/;"	l
c0108075	obj/kernel.asm	/^c0108075:	55                   	push   %ebp$/;"	l
c0108076	obj/kernel.asm	/^c0108076:	89 e5                	mov    %esp,%ebp$/;"	l
c0108078	obj/kernel.asm	/^c0108078:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010807b	obj/kernel.asm	/^c010807b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010807e	obj/kernel.asm	/^c010807e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108081	obj/kernel.asm	/^c0108081:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108084	obj/kernel.asm	/^c0108084:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108087	obj/kernel.asm	/^c0108087:	39 c2                	cmp    %eax,%edx$/;"	l
c0108089	obj/kernel.asm	/^c0108089:	72 24                	jb     c01080af <insert_vma_struct+0x3a>$/;"	l
c010808b	obj/kernel.asm	/^c010808b:	c7 44 24 0c 4d df 10 	movl   $0xc010df4d,0xc(%esp)$/;"	l
c0108092	obj/kernel.asm	/^c0108092:	c0 $/;"	l
c0108093	obj/kernel.asm	/^c0108093:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c010809a	obj/kernel.asm	/^c010809a:	c0 $/;"	l
c010809b	obj/kernel.asm	/^c010809b:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
c01080a2	obj/kernel.asm	/^c01080a2:	00 $/;"	l
c01080a3	obj/kernel.asm	/^c01080a3:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01080aa	obj/kernel.asm	/^c01080aa:	e8 2b 8d ff ff       	call   c0100dda <__panic>$/;"	l
c01080af	obj/kernel.asm	/^c01080af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01080b2	obj/kernel.asm	/^c01080b2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01080b5	obj/kernel.asm	/^c01080b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01080b8	obj/kernel.asm	/^c01080b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01080bb	obj/kernel.asm	/^c01080bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01080be	obj/kernel.asm	/^c01080be:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01080c1	obj/kernel.asm	/^c01080c1:	eb 21                	jmp    c01080e4 <insert_vma_struct+0x6f>$/;"	l
c01080c3	obj/kernel.asm	/^c01080c3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01080c6	obj/kernel.asm	/^c01080c6:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01080c9	obj/kernel.asm	/^c01080c9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01080cc	obj/kernel.asm	/^c01080cc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01080cf	obj/kernel.asm	/^c01080cf:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01080d2	obj/kernel.asm	/^c01080d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01080d5	obj/kernel.asm	/^c01080d5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01080d8	obj/kernel.asm	/^c01080d8:	39 c2                	cmp    %eax,%edx$/;"	l
c01080da	obj/kernel.asm	/^c01080da:	76 02                	jbe    c01080de <insert_vma_struct+0x69>$/;"	l
c01080dc	obj/kernel.asm	/^c01080dc:	eb 1d                	jmp    c01080fb <insert_vma_struct+0x86>$/;"	l
c01080de	obj/kernel.asm	/^c01080de:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01080e1	obj/kernel.asm	/^c01080e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01080e4	obj/kernel.asm	/^c01080e4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01080e7	obj/kernel.asm	/^c01080e7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01080ea	obj/kernel.asm	/^c01080ea:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01080ed	obj/kernel.asm	/^c01080ed:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01080f0	obj/kernel.asm	/^c01080f0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01080f3	obj/kernel.asm	/^c01080f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01080f6	obj/kernel.asm	/^c01080f6:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01080f9	obj/kernel.asm	/^c01080f9:	75 c8                	jne    c01080c3 <insert_vma_struct+0x4e>$/;"	l
c01080fb	obj/kernel.asm	/^c01080fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01080fe	obj/kernel.asm	/^c01080fe:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108101	obj/kernel.asm	/^c0108101:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108104	obj/kernel.asm	/^c0108104:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108107	obj/kernel.asm	/^c0108107:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010810a	obj/kernel.asm	/^c010810a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010810d	obj/kernel.asm	/^c010810d:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108110	obj/kernel.asm	/^c0108110:	74 15                	je     c0108127 <insert_vma_struct+0xb2>$/;"	l
c0108112	obj/kernel.asm	/^c0108112:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108115	obj/kernel.asm	/^c0108115:	8d 50 f0             	lea    -0x10(%eax),%edx$/;"	l
c0108118	obj/kernel.asm	/^c0108118:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010811b	obj/kernel.asm	/^c010811b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010811f	obj/kernel.asm	/^c010811f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0108122	obj/kernel.asm	/^c0108122:	e8 aa fe ff ff       	call   c0107fd1 <check_vma_overlap>$/;"	l
c0108127	obj/kernel.asm	/^c0108127:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010812a	obj/kernel.asm	/^c010812a:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010812d	obj/kernel.asm	/^c010812d:	74 15                	je     c0108144 <insert_vma_struct+0xcf>$/;"	l
c010812f	obj/kernel.asm	/^c010812f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108132	obj/kernel.asm	/^c0108132:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108135	obj/kernel.asm	/^c0108135:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108139	obj/kernel.asm	/^c0108139:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010813c	obj/kernel.asm	/^c010813c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010813f	obj/kernel.asm	/^c010813f:	e8 8d fe ff ff       	call   c0107fd1 <check_vma_overlap>$/;"	l
c0108144	obj/kernel.asm	/^c0108144:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108147	obj/kernel.asm	/^c0108147:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010814a	obj/kernel.asm	/^c010814a:	89 10                	mov    %edx,(%eax)$/;"	l
c010814c	obj/kernel.asm	/^c010814c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010814f	obj/kernel.asm	/^c010814f:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c0108152	obj/kernel.asm	/^c0108152:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108155	obj/kernel.asm	/^c0108155:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108158	obj/kernel.asm	/^c0108158:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010815b	obj/kernel.asm	/^c010815b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010815e	obj/kernel.asm	/^c010815e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108161	obj/kernel.asm	/^c0108161:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0108164	obj/kernel.asm	/^c0108164:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c0108167	obj/kernel.asm	/^c0108167:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010816a	obj/kernel.asm	/^c010816a:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c010816d	obj/kernel.asm	/^c010816d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0108170	obj/kernel.asm	/^c0108170:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0108173	obj/kernel.asm	/^c0108173:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0108176	obj/kernel.asm	/^c0108176:	89 10                	mov    %edx,(%eax)$/;"	l
c0108178	obj/kernel.asm	/^c0108178:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010817b	obj/kernel.asm	/^c010817b:	8b 10                	mov    (%eax),%edx$/;"	l
c010817d	obj/kernel.asm	/^c010817d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108180	obj/kernel.asm	/^c0108180:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108183	obj/kernel.asm	/^c0108183:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108186	obj/kernel.asm	/^c0108186:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0108189	obj/kernel.asm	/^c0108189:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010818c	obj/kernel.asm	/^c010818c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010818f	obj/kernel.asm	/^c010818f:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0108192	obj/kernel.asm	/^c0108192:	89 10                	mov    %edx,(%eax)$/;"	l
c0108194	obj/kernel.asm	/^c0108194:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108197	obj/kernel.asm	/^c0108197:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010819a	obj/kernel.asm	/^c010819a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010819d	obj/kernel.asm	/^c010819d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01081a0	obj/kernel.asm	/^c01081a0:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01081a3	obj/kernel.asm	/^c01081a3:	c9                   	leave  $/;"	l
c01081a4	obj/kernel.asm	/^c01081a4:	c3                   	ret    $/;"	l
c01081a5	obj/kernel.asm	/^c01081a5 <mm_destroy>:$/;"	l
c01081a5	obj/kernel.asm	/^c01081a5:	55                   	push   %ebp$/;"	l
c01081a6	obj/kernel.asm	/^c01081a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01081a8	obj/kernel.asm	/^c01081a8:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01081ab	obj/kernel.asm	/^c01081ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01081ae	obj/kernel.asm	/^c01081ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01081b1	obj/kernel.asm	/^c01081b1:	e8 38 fc ff ff       	call   c0107dee <mm_count>$/;"	l
c01081b6	obj/kernel.asm	/^c01081b6:	85 c0                	test   %eax,%eax$/;"	l
c01081b8	obj/kernel.asm	/^c01081b8:	74 24                	je     c01081de <mm_destroy+0x39>$/;"	l
c01081ba	obj/kernel.asm	/^c01081ba:	c7 44 24 0c 69 df 10 	movl   $0xc010df69,0xc(%esp)$/;"	l
c01081c1	obj/kernel.asm	/^c01081c1:	c0 $/;"	l
c01081c2	obj/kernel.asm	/^c01081c2:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c01081c9	obj/kernel.asm	/^c01081c9:	c0 $/;"	l
c01081ca	obj/kernel.asm	/^c01081ca:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c01081d1	obj/kernel.asm	/^c01081d1:	00 $/;"	l
c01081d2	obj/kernel.asm	/^c01081d2:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01081d9	obj/kernel.asm	/^c01081d9:	e8 fc 8b ff ff       	call   c0100dda <__panic>$/;"	l
c01081de	obj/kernel.asm	/^c01081de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01081e1	obj/kernel.asm	/^c01081e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01081e4	obj/kernel.asm	/^c01081e4:	eb 36                	jmp    c010821c <mm_destroy+0x77>$/;"	l
c01081e6	obj/kernel.asm	/^c01081e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081e9	obj/kernel.asm	/^c01081e9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01081ec	obj/kernel.asm	/^c01081ec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01081ef	obj/kernel.asm	/^c01081ef:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01081f2	obj/kernel.asm	/^c01081f2:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01081f5	obj/kernel.asm	/^c01081f5:	8b 12                	mov    (%edx),%edx$/;"	l
c01081f7	obj/kernel.asm	/^c01081f7:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01081fa	obj/kernel.asm	/^c01081fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01081fd	obj/kernel.asm	/^c01081fd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108200	obj/kernel.asm	/^c0108200:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108203	obj/kernel.asm	/^c0108203:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108206	obj/kernel.asm	/^c0108206:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108209	obj/kernel.asm	/^c0108209:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010820c	obj/kernel.asm	/^c010820c:	89 10                	mov    %edx,(%eax)$/;"	l
c010820e	obj/kernel.asm	/^c010820e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108211	obj/kernel.asm	/^c0108211:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108214	obj/kernel.asm	/^c0108214:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108217	obj/kernel.asm	/^c0108217:	e8 2f ca ff ff       	call   c0104c4b <kfree>$/;"	l
c010821c	obj/kernel.asm	/^c010821c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010821f	obj/kernel.asm	/^c010821f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108222	obj/kernel.asm	/^c0108222:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108225	obj/kernel.asm	/^c0108225:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108228	obj/kernel.asm	/^c0108228:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010822b	obj/kernel.asm	/^c010822b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010822e	obj/kernel.asm	/^c010822e:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108231	obj/kernel.asm	/^c0108231:	75 b3                	jne    c01081e6 <mm_destroy+0x41>$/;"	l
c0108233	obj/kernel.asm	/^c0108233:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108236	obj/kernel.asm	/^c0108236:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108239	obj/kernel.asm	/^c0108239:	e8 0d ca ff ff       	call   c0104c4b <kfree>$/;"	l
c010823e	obj/kernel.asm	/^c010823e:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c0108245	obj/kernel.asm	/^c0108245:	c9                   	leave  $/;"	l
c0108246	obj/kernel.asm	/^c0108246:	c3                   	ret    $/;"	l
c0108247	obj/kernel.asm	/^c0108247 <mm_map>:$/;"	l
c0108247	obj/kernel.asm	/^c0108247:	55                   	push   %ebp$/;"	l
c0108248	obj/kernel.asm	/^c0108248:	89 e5                	mov    %esp,%ebp$/;"	l
c010824a	obj/kernel.asm	/^c010824a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010824d	obj/kernel.asm	/^c010824d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108250	obj/kernel.asm	/^c0108250:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108253	obj/kernel.asm	/^c0108253:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108256	obj/kernel.asm	/^c0108256:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010825b	obj/kernel.asm	/^c010825b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010825e	obj/kernel.asm	/^c010825e:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c0108265	obj/kernel.asm	/^c0108265:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108268	obj/kernel.asm	/^c0108268:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010826b	obj/kernel.asm	/^c010826b:	01 c2                	add    %eax,%edx$/;"	l
c010826d	obj/kernel.asm	/^c010826d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108270	obj/kernel.asm	/^c0108270:	01 d0                	add    %edx,%eax$/;"	l
c0108272	obj/kernel.asm	/^c0108272:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0108275	obj/kernel.asm	/^c0108275:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108278	obj/kernel.asm	/^c0108278:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010827b	obj/kernel.asm	/^c010827b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0108280	obj/kernel.asm	/^c0108280:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c0108283	obj/kernel.asm	/^c0108283:	89 d0                	mov    %edx,%eax$/;"	l
c0108285	obj/kernel.asm	/^c0108285:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108288	obj/kernel.asm	/^c0108288:	29 c2                	sub    %eax,%edx$/;"	l
c010828a	obj/kernel.asm	/^c010828a:	89 d0                	mov    %edx,%eax$/;"	l
c010828c	obj/kernel.asm	/^c010828c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010828f	obj/kernel.asm	/^c010828f:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c0108296	obj/kernel.asm	/^c0108296:	76 11                	jbe    c01082a9 <mm_map+0x62>$/;"	l
c0108298	obj/kernel.asm	/^c0108298:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010829b	obj/kernel.asm	/^c010829b:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010829e	obj/kernel.asm	/^c010829e:	73 09                	jae    c01082a9 <mm_map+0x62>$/;"	l
c01082a0	obj/kernel.asm	/^c01082a0:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c01082a7	obj/kernel.asm	/^c01082a7:	76 0a                	jbe    c01082b3 <mm_map+0x6c>$/;"	l
c01082a9	obj/kernel.asm	/^c01082a9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01082ae	obj/kernel.asm	/^c01082ae:	e9 ae 00 00 00       	jmp    c0108361 <mm_map+0x11a>$/;"	l
c01082b3	obj/kernel.asm	/^c01082b3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01082b7	obj/kernel.asm	/^c01082b7:	75 24                	jne    c01082dd <mm_map+0x96>$/;"	l
c01082b9	obj/kernel.asm	/^c01082b9:	c7 44 24 0c 7b df 10 	movl   $0xc010df7b,0xc(%esp)$/;"	l
c01082c0	obj/kernel.asm	/^c01082c0:	c0 $/;"	l
c01082c1	obj/kernel.asm	/^c01082c1:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c01082c8	obj/kernel.asm	/^c01082c8:	c0 $/;"	l
c01082c9	obj/kernel.asm	/^c01082c9:	c7 44 24 04 a7 00 00 	movl   $0xa7,0x4(%esp)$/;"	l
c01082d0	obj/kernel.asm	/^c01082d0:	00 $/;"	l
c01082d1	obj/kernel.asm	/^c01082d1:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01082d8	obj/kernel.asm	/^c01082d8:	e8 fd 8a ff ff       	call   c0100dda <__panic>$/;"	l
c01082dd	obj/kernel.asm	/^c01082dd:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c01082e4	obj/kernel.asm	/^c01082e4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01082e7	obj/kernel.asm	/^c01082e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01082eb	obj/kernel.asm	/^c01082eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01082ee	obj/kernel.asm	/^c01082ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01082f1	obj/kernel.asm	/^c01082f1:	e8 2a fc ff ff       	call   c0107f20 <find_vma>$/;"	l
c01082f6	obj/kernel.asm	/^c01082f6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01082f9	obj/kernel.asm	/^c01082f9:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01082fd	obj/kernel.asm	/^c01082fd:	74 0d                	je     c010830c <mm_map+0xc5>$/;"	l
c01082ff	obj/kernel.asm	/^c01082ff:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108302	obj/kernel.asm	/^c0108302:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108305	obj/kernel.asm	/^c0108305:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108308	obj/kernel.asm	/^c0108308:	73 02                	jae    c010830c <mm_map+0xc5>$/;"	l
c010830a	obj/kernel.asm	/^c010830a:	eb 52                	jmp    c010835e <mm_map+0x117>$/;"	l
c010830c	obj/kernel.asm	/^c010830c:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0108313	obj/kernel.asm	/^c0108313:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0108316	obj/kernel.asm	/^c0108316:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010831a	obj/kernel.asm	/^c010831a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010831d	obj/kernel.asm	/^c010831d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108321	obj/kernel.asm	/^c0108321:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108324	obj/kernel.asm	/^c0108324:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108327	obj/kernel.asm	/^c0108327:	e8 b9 fb ff ff       	call   c0107ee5 <vma_create>$/;"	l
c010832c	obj/kernel.asm	/^c010832c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010832f	obj/kernel.asm	/^c010832f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0108333	obj/kernel.asm	/^c0108333:	75 02                	jne    c0108337 <mm_map+0xf0>$/;"	l
c0108335	obj/kernel.asm	/^c0108335:	eb 27                	jmp    c010835e <mm_map+0x117>$/;"	l
c0108337	obj/kernel.asm	/^c0108337:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010833a	obj/kernel.asm	/^c010833a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010833e	obj/kernel.asm	/^c010833e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108341	obj/kernel.asm	/^c0108341:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108344	obj/kernel.asm	/^c0108344:	e8 2c fd ff ff       	call   c0108075 <insert_vma_struct>$/;"	l
c0108349	obj/kernel.asm	/^c0108349:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010834d	obj/kernel.asm	/^c010834d:	74 08                	je     c0108357 <mm_map+0x110>$/;"	l
c010834f	obj/kernel.asm	/^c010834f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0108352	obj/kernel.asm	/^c0108352:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0108355	obj/kernel.asm	/^c0108355:	89 10                	mov    %edx,(%eax)$/;"	l
c0108357	obj/kernel.asm	/^c0108357:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010835e	obj/kernel.asm	/^c010835e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108361	obj/kernel.asm	/^c0108361:	c9                   	leave  $/;"	l
c0108362	obj/kernel.asm	/^c0108362:	c3                   	ret    $/;"	l
c0108363	obj/kernel.asm	/^c0108363 <dup_mmap>:$/;"	l
c0108363	obj/kernel.asm	/^c0108363:	55                   	push   %ebp$/;"	l
c0108364	obj/kernel.asm	/^c0108364:	89 e5                	mov    %esp,%ebp$/;"	l
c0108366	obj/kernel.asm	/^c0108366:	56                   	push   %esi$/;"	l
c0108367	obj/kernel.asm	/^c0108367:	53                   	push   %ebx$/;"	l
c0108368	obj/kernel.asm	/^c0108368:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010836b	obj/kernel.asm	/^c010836b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010836f	obj/kernel.asm	/^c010836f:	74 06                	je     c0108377 <dup_mmap+0x14>$/;"	l
c0108371	obj/kernel.asm	/^c0108371:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0108375	obj/kernel.asm	/^c0108375:	75 24                	jne    c010839b <dup_mmap+0x38>$/;"	l
c0108377	obj/kernel.asm	/^c0108377:	c7 44 24 0c 86 df 10 	movl   $0xc010df86,0xc(%esp)$/;"	l
c010837e	obj/kernel.asm	/^c010837e:	c0 $/;"	l
c010837f	obj/kernel.asm	/^c010837f:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108386	obj/kernel.asm	/^c0108386:	c0 $/;"	l
c0108387	obj/kernel.asm	/^c0108387:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c010838e	obj/kernel.asm	/^c010838e:	00 $/;"	l
c010838f	obj/kernel.asm	/^c010838f:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108396	obj/kernel.asm	/^c0108396:	e8 3f 8a ff ff       	call   c0100dda <__panic>$/;"	l
c010839b	obj/kernel.asm	/^c010839b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010839e	obj/kernel.asm	/^c010839e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01083a1	obj/kernel.asm	/^c01083a1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01083a4	obj/kernel.asm	/^c01083a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01083a7	obj/kernel.asm	/^c01083a7:	e9 92 00 00 00       	jmp    c010843e <dup_mmap+0xdb>$/;"	l
c01083ac	obj/kernel.asm	/^c01083ac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01083af	obj/kernel.asm	/^c01083af:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01083b2	obj/kernel.asm	/^c01083b2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01083b5	obj/kernel.asm	/^c01083b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01083b8	obj/kernel.asm	/^c01083b8:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01083bb	obj/kernel.asm	/^c01083bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01083be	obj/kernel.asm	/^c01083be:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01083c1	obj/kernel.asm	/^c01083c1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01083c4	obj/kernel.asm	/^c01083c4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01083c7	obj/kernel.asm	/^c01083c7:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01083cb	obj/kernel.asm	/^c01083cb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01083cf	obj/kernel.asm	/^c01083cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01083d2	obj/kernel.asm	/^c01083d2:	e8 0e fb ff ff       	call   c0107ee5 <vma_create>$/;"	l
c01083d7	obj/kernel.asm	/^c01083d7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01083da	obj/kernel.asm	/^c01083da:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01083de	obj/kernel.asm	/^c01083de:	75 07                	jne    c01083e7 <dup_mmap+0x84>$/;"	l
c01083e0	obj/kernel.asm	/^c01083e0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01083e5	obj/kernel.asm	/^c01083e5:	eb 76                	jmp    c010845d <dup_mmap+0xfa>$/;"	l
c01083e7	obj/kernel.asm	/^c01083e7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01083ea	obj/kernel.asm	/^c01083ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01083ee	obj/kernel.asm	/^c01083ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01083f1	obj/kernel.asm	/^c01083f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01083f4	obj/kernel.asm	/^c01083f4:	e8 7c fc ff ff       	call   c0108075 <insert_vma_struct>$/;"	l
c01083f9	obj/kernel.asm	/^c01083f9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0108400	obj/kernel.asm	/^c0108400:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108403	obj/kernel.asm	/^c0108403:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0108406	obj/kernel.asm	/^c0108406:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108409	obj/kernel.asm	/^c0108409:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c010840c	obj/kernel.asm	/^c010840c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010840f	obj/kernel.asm	/^c010840f:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0108412	obj/kernel.asm	/^c0108412:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108415	obj/kernel.asm	/^c0108415:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108418	obj/kernel.asm	/^c0108418:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
c010841b	obj/kernel.asm	/^c010841b:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c010841f	obj/kernel.asm	/^c010841f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0108423	obj/kernel.asm	/^c0108423:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0108427	obj/kernel.asm	/^c0108427:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010842b	obj/kernel.asm	/^c010842b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010842e	obj/kernel.asm	/^c010842e:	e8 c6 d7 ff ff       	call   c0105bf9 <copy_range>$/;"	l
c0108433	obj/kernel.asm	/^c0108433:	85 c0                	test   %eax,%eax$/;"	l
c0108435	obj/kernel.asm	/^c0108435:	74 07                	je     c010843e <dup_mmap+0xdb>$/;"	l
c0108437	obj/kernel.asm	/^c0108437:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010843c	obj/kernel.asm	/^c010843c:	eb 1f                	jmp    c010845d <dup_mmap+0xfa>$/;"	l
c010843e	obj/kernel.asm	/^c010843e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108441	obj/kernel.asm	/^c0108441:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108444	obj/kernel.asm	/^c0108444:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108447	obj/kernel.asm	/^c0108447:	8b 00                	mov    (%eax),%eax$/;"	l
c0108449	obj/kernel.asm	/^c0108449:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010844c	obj/kernel.asm	/^c010844c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010844f	obj/kernel.asm	/^c010844f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0108452	obj/kernel.asm	/^c0108452:	0f 85 54 ff ff ff    	jne    c01083ac <dup_mmap+0x49>$/;"	l
c0108458	obj/kernel.asm	/^c0108458:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010845d	obj/kernel.asm	/^c010845d:	83 c4 40             	add    $0x40,%esp$/;"	l
c0108460	obj/kernel.asm	/^c0108460:	5b                   	pop    %ebx$/;"	l
c0108461	obj/kernel.asm	/^c0108461:	5e                   	pop    %esi$/;"	l
c0108462	obj/kernel.asm	/^c0108462:	5d                   	pop    %ebp$/;"	l
c0108463	obj/kernel.asm	/^c0108463:	c3                   	ret    $/;"	l
c0108464	obj/kernel.asm	/^c0108464 <exit_mmap>:$/;"	l
c0108464	obj/kernel.asm	/^c0108464:	55                   	push   %ebp$/;"	l
c0108465	obj/kernel.asm	/^c0108465:	89 e5                	mov    %esp,%ebp$/;"	l
c0108467	obj/kernel.asm	/^c0108467:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010846a	obj/kernel.asm	/^c010846a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010846e	obj/kernel.asm	/^c010846e:	74 0f                	je     c010847f <exit_mmap+0x1b>$/;"	l
c0108470	obj/kernel.asm	/^c0108470:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108473	obj/kernel.asm	/^c0108473:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108476	obj/kernel.asm	/^c0108476:	e8 73 f9 ff ff       	call   c0107dee <mm_count>$/;"	l
c010847b	obj/kernel.asm	/^c010847b:	85 c0                	test   %eax,%eax$/;"	l
c010847d	obj/kernel.asm	/^c010847d:	74 24                	je     c01084a3 <exit_mmap+0x3f>$/;"	l
c010847f	obj/kernel.asm	/^c010847f:	c7 44 24 0c a4 df 10 	movl   $0xc010dfa4,0xc(%esp)$/;"	l
c0108486	obj/kernel.asm	/^c0108486:	c0 $/;"	l
c0108487	obj/kernel.asm	/^c0108487:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c010848e	obj/kernel.asm	/^c010848e:	c0 $/;"	l
c010848f	obj/kernel.asm	/^c010848f:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c0108496	obj/kernel.asm	/^c0108496:	00 $/;"	l
c0108497	obj/kernel.asm	/^c0108497:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c010849e	obj/kernel.asm	/^c010849e:	e8 37 89 ff ff       	call   c0100dda <__panic>$/;"	l
c01084a3	obj/kernel.asm	/^c01084a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01084a6	obj/kernel.asm	/^c01084a6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01084a9	obj/kernel.asm	/^c01084a9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01084ac	obj/kernel.asm	/^c01084ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01084af	obj/kernel.asm	/^c01084af:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01084b2	obj/kernel.asm	/^c01084b2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01084b5	obj/kernel.asm	/^c01084b5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01084b8	obj/kernel.asm	/^c01084b8:	eb 28                	jmp    c01084e2 <exit_mmap+0x7e>$/;"	l
c01084ba	obj/kernel.asm	/^c01084ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01084bd	obj/kernel.asm	/^c01084bd:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01084c0	obj/kernel.asm	/^c01084c0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01084c3	obj/kernel.asm	/^c01084c3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01084c6	obj/kernel.asm	/^c01084c6:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01084c9	obj/kernel.asm	/^c01084c9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01084cc	obj/kernel.asm	/^c01084cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01084cf	obj/kernel.asm	/^c01084cf:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01084d3	obj/kernel.asm	/^c01084d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01084d7	obj/kernel.asm	/^c01084d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01084da	obj/kernel.asm	/^c01084da:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01084dd	obj/kernel.asm	/^c01084dd:	e8 1c d5 ff ff       	call   c01059fe <unmap_range>$/;"	l
c01084e2	obj/kernel.asm	/^c01084e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01084e5	obj/kernel.asm	/^c01084e5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01084e8	obj/kernel.asm	/^c01084e8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01084eb	obj/kernel.asm	/^c01084eb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01084ee	obj/kernel.asm	/^c01084ee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01084f1	obj/kernel.asm	/^c01084f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01084f4	obj/kernel.asm	/^c01084f4:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01084f7	obj/kernel.asm	/^c01084f7:	75 c1                	jne    c01084ba <exit_mmap+0x56>$/;"	l
c01084f9	obj/kernel.asm	/^c01084f9:	eb 28                	jmp    c0108523 <exit_mmap+0xbf>$/;"	l
c01084fb	obj/kernel.asm	/^c01084fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01084fe	obj/kernel.asm	/^c01084fe:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108501	obj/kernel.asm	/^c0108501:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108504	obj/kernel.asm	/^c0108504:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108507	obj/kernel.asm	/^c0108507:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010850a	obj/kernel.asm	/^c010850a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010850d	obj/kernel.asm	/^c010850d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108510	obj/kernel.asm	/^c0108510:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108514	obj/kernel.asm	/^c0108514:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108518	obj/kernel.asm	/^c0108518:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010851b	obj/kernel.asm	/^c010851b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010851e	obj/kernel.asm	/^c010851e:	e8 cf d5 ff ff       	call   c0105af2 <exit_range>$/;"	l
c0108523	obj/kernel.asm	/^c0108523:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108526	obj/kernel.asm	/^c0108526:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108529	obj/kernel.asm	/^c0108529:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010852c	obj/kernel.asm	/^c010852c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010852f	obj/kernel.asm	/^c010852f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108532	obj/kernel.asm	/^c0108532:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108535	obj/kernel.asm	/^c0108535:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108538	obj/kernel.asm	/^c0108538:	75 c1                	jne    c01084fb <exit_mmap+0x97>$/;"	l
c010853a	obj/kernel.asm	/^c010853a:	c9                   	leave  $/;"	l
c010853b	obj/kernel.asm	/^c010853b:	c3                   	ret    $/;"	l
c010853c	obj/kernel.asm	/^c010853c <copy_from_user>:$/;"	l
c010853c	obj/kernel.asm	/^c010853c:	55                   	push   %ebp$/;"	l
c010853d	obj/kernel.asm	/^c010853d:	89 e5                	mov    %esp,%ebp$/;"	l
c010853f	obj/kernel.asm	/^c010853f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108542	obj/kernel.asm	/^c0108542:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108545	obj/kernel.asm	/^c0108545:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0108548	obj/kernel.asm	/^c0108548:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010854c	obj/kernel.asm	/^c010854c:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010854f	obj/kernel.asm	/^c010854f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108553	obj/kernel.asm	/^c0108553:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108557	obj/kernel.asm	/^c0108557:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010855a	obj/kernel.asm	/^c010855a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010855d	obj/kernel.asm	/^c010855d:	e8 57 09 00 00       	call   c0108eb9 <user_mem_check>$/;"	l
c0108562	obj/kernel.asm	/^c0108562:	85 c0                	test   %eax,%eax$/;"	l
c0108564	obj/kernel.asm	/^c0108564:	75 07                	jne    c010856d <copy_from_user+0x31>$/;"	l
c0108566	obj/kernel.asm	/^c0108566:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010856b	obj/kernel.asm	/^c010856b:	eb 1e                	jmp    c010858b <copy_from_user+0x4f>$/;"	l
c010856d	obj/kernel.asm	/^c010856d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0108570	obj/kernel.asm	/^c0108570:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108574	obj/kernel.asm	/^c0108574:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108577	obj/kernel.asm	/^c0108577:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010857b	obj/kernel.asm	/^c010857b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010857e	obj/kernel.asm	/^c010857e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108581	obj/kernel.asm	/^c0108581:	e8 f5 3d 00 00       	call   c010c37b <memcpy>$/;"	l
c0108586	obj/kernel.asm	/^c0108586:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010858b	obj/kernel.asm	/^c010858b:	c9                   	leave  $/;"	l
c010858c	obj/kernel.asm	/^c010858c:	c3                   	ret    $/;"	l
c010858d	obj/kernel.asm	/^c010858d <copy_to_user>:$/;"	l
c010858d	obj/kernel.asm	/^c010858d:	55                   	push   %ebp$/;"	l
c010858e	obj/kernel.asm	/^c010858e:	89 e5                	mov    %esp,%ebp$/;"	l
c0108590	obj/kernel.asm	/^c0108590:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108593	obj/kernel.asm	/^c0108593:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108596	obj/kernel.asm	/^c0108596:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010859d	obj/kernel.asm	/^c010859d:	00 $/;"	l
c010859e	obj/kernel.asm	/^c010859e:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01085a1	obj/kernel.asm	/^c01085a1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01085a5	obj/kernel.asm	/^c01085a5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01085a9	obj/kernel.asm	/^c01085a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01085ac	obj/kernel.asm	/^c01085ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01085af	obj/kernel.asm	/^c01085af:	e8 05 09 00 00       	call   c0108eb9 <user_mem_check>$/;"	l
c01085b4	obj/kernel.asm	/^c01085b4:	85 c0                	test   %eax,%eax$/;"	l
c01085b6	obj/kernel.asm	/^c01085b6:	75 07                	jne    c01085bf <copy_to_user+0x32>$/;"	l
c01085b8	obj/kernel.asm	/^c01085b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01085bd	obj/kernel.asm	/^c01085bd:	eb 1e                	jmp    c01085dd <copy_to_user+0x50>$/;"	l
c01085bf	obj/kernel.asm	/^c01085bf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01085c2	obj/kernel.asm	/^c01085c2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01085c6	obj/kernel.asm	/^c01085c6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01085c9	obj/kernel.asm	/^c01085c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01085cd	obj/kernel.asm	/^c01085cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01085d0	obj/kernel.asm	/^c01085d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01085d3	obj/kernel.asm	/^c01085d3:	e8 a3 3d 00 00       	call   c010c37b <memcpy>$/;"	l
c01085d8	obj/kernel.asm	/^c01085d8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01085dd	obj/kernel.asm	/^c01085dd:	c9                   	leave  $/;"	l
c01085de	obj/kernel.asm	/^c01085de:	c3                   	ret    $/;"	l
c01085df	obj/kernel.asm	/^c01085df <vmm_init>:$/;"	l
c01085df	obj/kernel.asm	/^c01085df:	55                   	push   %ebp$/;"	l
c01085e0	obj/kernel.asm	/^c01085e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01085e2	obj/kernel.asm	/^c01085e2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01085e5	obj/kernel.asm	/^c01085e5:	e8 02 00 00 00       	call   c01085ec <check_vmm>$/;"	l
c01085ea	obj/kernel.asm	/^c01085ea:	c9                   	leave  $/;"	l
c01085eb	obj/kernel.asm	/^c01085eb:	c3                   	ret    $/;"	l
c01085ec	obj/kernel.asm	/^c01085ec <check_vmm>:$/;"	l
c01085ec	obj/kernel.asm	/^c01085ec:	55                   	push   %ebp$/;"	l
c01085ed	obj/kernel.asm	/^c01085ed:	89 e5                	mov    %esp,%ebp$/;"	l
c01085ef	obj/kernel.asm	/^c01085ef:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01085f2	obj/kernel.asm	/^c01085f2:	e8 4b cb ff ff       	call   c0105142 <nr_free_pages>$/;"	l
c01085f7	obj/kernel.asm	/^c01085f7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01085fa	obj/kernel.asm	/^c01085fa:	e8 13 00 00 00       	call   c0108612 <check_vma_struct>$/;"	l
c01085ff	obj/kernel.asm	/^c01085ff:	e8 a7 04 00 00       	call   c0108aab <check_pgfault>$/;"	l
c0108604	obj/kernel.asm	/^c0108604:	c7 04 24 c4 df 10 c0 	movl   $0xc010dfc4,(%esp)$/;"	l
c010860b	obj/kernel.asm	/^c010860b:	e8 48 7d ff ff       	call   c0100358 <cprintf>$/;"	l
c0108610	obj/kernel.asm	/^c0108610:	c9                   	leave  $/;"	l
c0108611	obj/kernel.asm	/^c0108611:	c3                   	ret    $/;"	l
c0108612	obj/kernel.asm	/^c0108612 <check_vma_struct>:$/;"	l
c0108612	obj/kernel.asm	/^c0108612:	55                   	push   %ebp$/;"	l
c0108613	obj/kernel.asm	/^c0108613:	89 e5                	mov    %esp,%ebp$/;"	l
c0108615	obj/kernel.asm	/^c0108615:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0108618	obj/kernel.asm	/^c0108618:	e8 25 cb ff ff       	call   c0105142 <nr_free_pages>$/;"	l
c010861d	obj/kernel.asm	/^c010861d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108620	obj/kernel.asm	/^c0108620:	e8 27 f8 ff ff       	call   c0107e4c <mm_create>$/;"	l
c0108625	obj/kernel.asm	/^c0108625:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108628	obj/kernel.asm	/^c0108628:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010862c	obj/kernel.asm	/^c010862c:	75 24                	jne    c0108652 <check_vma_struct+0x40>$/;"	l
c010862e	obj/kernel.asm	/^c010862e:	c7 44 24 0c 7b df 10 	movl   $0xc010df7b,0xc(%esp)$/;"	l
c0108635	obj/kernel.asm	/^c0108635:	c0 $/;"	l
c0108636	obj/kernel.asm	/^c0108636:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c010863d	obj/kernel.asm	/^c010863d:	c0 $/;"	l
c010863e	obj/kernel.asm	/^c010863e:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
c0108645	obj/kernel.asm	/^c0108645:	00 $/;"	l
c0108646	obj/kernel.asm	/^c0108646:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c010864d	obj/kernel.asm	/^c010864d:	e8 88 87 ff ff       	call   c0100dda <__panic>$/;"	l
c0108652	obj/kernel.asm	/^c0108652:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c0108659	obj/kernel.asm	/^c0108659:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010865c	obj/kernel.asm	/^c010865c:	89 d0                	mov    %edx,%eax$/;"	l
c010865e	obj/kernel.asm	/^c010865e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108661	obj/kernel.asm	/^c0108661:	01 d0                	add    %edx,%eax$/;"	l
c0108663	obj/kernel.asm	/^c0108663:	01 c0                	add    %eax,%eax$/;"	l
c0108665	obj/kernel.asm	/^c0108665:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108668	obj/kernel.asm	/^c0108668:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010866b	obj/kernel.asm	/^c010866b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010866e	obj/kernel.asm	/^c010866e:	eb 70                	jmp    c01086e0 <check_vma_struct+0xce>$/;"	l
c0108670	obj/kernel.asm	/^c0108670:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108673	obj/kernel.asm	/^c0108673:	89 d0                	mov    %edx,%eax$/;"	l
c0108675	obj/kernel.asm	/^c0108675:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108678	obj/kernel.asm	/^c0108678:	01 d0                	add    %edx,%eax$/;"	l
c010867a	obj/kernel.asm	/^c010867a:	83 c0 02             	add    $0x2,%eax$/;"	l
c010867d	obj/kernel.asm	/^c010867d:	89 c1                	mov    %eax,%ecx$/;"	l
c010867f	obj/kernel.asm	/^c010867f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108682	obj/kernel.asm	/^c0108682:	89 d0                	mov    %edx,%eax$/;"	l
c0108684	obj/kernel.asm	/^c0108684:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108687	obj/kernel.asm	/^c0108687:	01 d0                	add    %edx,%eax$/;"	l
c0108689	obj/kernel.asm	/^c0108689:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0108690	obj/kernel.asm	/^c0108690:	00 $/;"	l
c0108691	obj/kernel.asm	/^c0108691:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0108695	obj/kernel.asm	/^c0108695:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108698	obj/kernel.asm	/^c0108698:	e8 48 f8 ff ff       	call   c0107ee5 <vma_create>$/;"	l
c010869d	obj/kernel.asm	/^c010869d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01086a0	obj/kernel.asm	/^c01086a0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01086a4	obj/kernel.asm	/^c01086a4:	75 24                	jne    c01086ca <check_vma_struct+0xb8>$/;"	l
c01086a6	obj/kernel.asm	/^c01086a6:	c7 44 24 0c dc df 10 	movl   $0xc010dfdc,0xc(%esp)$/;"	l
c01086ad	obj/kernel.asm	/^c01086ad:	c0 $/;"	l
c01086ae	obj/kernel.asm	/^c01086ae:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c01086b5	obj/kernel.asm	/^c01086b5:	c0 $/;"	l
c01086b6	obj/kernel.asm	/^c01086b6:	c7 44 24 04 13 01 00 	movl   $0x113,0x4(%esp)$/;"	l
c01086bd	obj/kernel.asm	/^c01086bd:	00 $/;"	l
c01086be	obj/kernel.asm	/^c01086be:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01086c5	obj/kernel.asm	/^c01086c5:	e8 10 87 ff ff       	call   c0100dda <__panic>$/;"	l
c01086ca	obj/kernel.asm	/^c01086ca:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01086cd	obj/kernel.asm	/^c01086cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01086d1	obj/kernel.asm	/^c01086d1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01086d4	obj/kernel.asm	/^c01086d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01086d7	obj/kernel.asm	/^c01086d7:	e8 99 f9 ff ff       	call   c0108075 <insert_vma_struct>$/;"	l
c01086dc	obj/kernel.asm	/^c01086dc:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01086e0	obj/kernel.asm	/^c01086e0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01086e4	obj/kernel.asm	/^c01086e4:	7f 8a                	jg     c0108670 <check_vma_struct+0x5e>$/;"	l
c01086e6	obj/kernel.asm	/^c01086e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086e9	obj/kernel.asm	/^c01086e9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01086ec	obj/kernel.asm	/^c01086ec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01086ef	obj/kernel.asm	/^c01086ef:	eb 70                	jmp    c0108761 <check_vma_struct+0x14f>$/;"	l
c01086f1	obj/kernel.asm	/^c01086f1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01086f4	obj/kernel.asm	/^c01086f4:	89 d0                	mov    %edx,%eax$/;"	l
c01086f6	obj/kernel.asm	/^c01086f6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01086f9	obj/kernel.asm	/^c01086f9:	01 d0                	add    %edx,%eax$/;"	l
c01086fb	obj/kernel.asm	/^c01086fb:	83 c0 02             	add    $0x2,%eax$/;"	l
c01086fe	obj/kernel.asm	/^c01086fe:	89 c1                	mov    %eax,%ecx$/;"	l
c0108700	obj/kernel.asm	/^c0108700:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108703	obj/kernel.asm	/^c0108703:	89 d0                	mov    %edx,%eax$/;"	l
c0108705	obj/kernel.asm	/^c0108705:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108708	obj/kernel.asm	/^c0108708:	01 d0                	add    %edx,%eax$/;"	l
c010870a	obj/kernel.asm	/^c010870a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0108711	obj/kernel.asm	/^c0108711:	00 $/;"	l
c0108712	obj/kernel.asm	/^c0108712:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0108716	obj/kernel.asm	/^c0108716:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108719	obj/kernel.asm	/^c0108719:	e8 c7 f7 ff ff       	call   c0107ee5 <vma_create>$/;"	l
c010871e	obj/kernel.asm	/^c010871e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108721	obj/kernel.asm	/^c0108721:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0108725	obj/kernel.asm	/^c0108725:	75 24                	jne    c010874b <check_vma_struct+0x139>$/;"	l
c0108727	obj/kernel.asm	/^c0108727:	c7 44 24 0c dc df 10 	movl   $0xc010dfdc,0xc(%esp)$/;"	l
c010872e	obj/kernel.asm	/^c010872e:	c0 $/;"	l
c010872f	obj/kernel.asm	/^c010872f:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108736	obj/kernel.asm	/^c0108736:	c0 $/;"	l
c0108737	obj/kernel.asm	/^c0108737:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
c010873e	obj/kernel.asm	/^c010873e:	00 $/;"	l
c010873f	obj/kernel.asm	/^c010873f:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108746	obj/kernel.asm	/^c0108746:	e8 8f 86 ff ff       	call   c0100dda <__panic>$/;"	l
c010874b	obj/kernel.asm	/^c010874b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010874e	obj/kernel.asm	/^c010874e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108752	obj/kernel.asm	/^c0108752:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108755	obj/kernel.asm	/^c0108755:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108758	obj/kernel.asm	/^c0108758:	e8 18 f9 ff ff       	call   c0108075 <insert_vma_struct>$/;"	l
c010875d	obj/kernel.asm	/^c010875d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108761	obj/kernel.asm	/^c0108761:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108764	obj/kernel.asm	/^c0108764:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108767	obj/kernel.asm	/^c0108767:	7e 88                	jle    c01086f1 <check_vma_struct+0xdf>$/;"	l
c0108769	obj/kernel.asm	/^c0108769:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010876c	obj/kernel.asm	/^c010876c:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010876f	obj/kernel.asm	/^c010876f:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0108772	obj/kernel.asm	/^c0108772:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108775	obj/kernel.asm	/^c0108775:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108778	obj/kernel.asm	/^c0108778:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010877f	obj/kernel.asm	/^c010877f:	e9 97 00 00 00       	jmp    c010881b <check_vma_struct+0x209>$/;"	l
c0108784	obj/kernel.asm	/^c0108784:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108787	obj/kernel.asm	/^c0108787:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010878a	obj/kernel.asm	/^c010878a:	75 24                	jne    c01087b0 <check_vma_struct+0x19e>$/;"	l
c010878c	obj/kernel.asm	/^c010878c:	c7 44 24 0c e8 df 10 	movl   $0xc010dfe8,0xc(%esp)$/;"	l
c0108793	obj/kernel.asm	/^c0108793:	c0 $/;"	l
c0108794	obj/kernel.asm	/^c0108794:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c010879b	obj/kernel.asm	/^c010879b:	c0 $/;"	l
c010879c	obj/kernel.asm	/^c010879c:	c7 44 24 04 20 01 00 	movl   $0x120,0x4(%esp)$/;"	l
c01087a3	obj/kernel.asm	/^c01087a3:	00 $/;"	l
c01087a4	obj/kernel.asm	/^c01087a4:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01087ab	obj/kernel.asm	/^c01087ab:	e8 2a 86 ff ff       	call   c0100dda <__panic>$/;"	l
c01087b0	obj/kernel.asm	/^c01087b0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01087b3	obj/kernel.asm	/^c01087b3:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01087b6	obj/kernel.asm	/^c01087b6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01087b9	obj/kernel.asm	/^c01087b9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01087bc	obj/kernel.asm	/^c01087bc:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c01087bf	obj/kernel.asm	/^c01087bf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01087c2	obj/kernel.asm	/^c01087c2:	89 d0                	mov    %edx,%eax$/;"	l
c01087c4	obj/kernel.asm	/^c01087c4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01087c7	obj/kernel.asm	/^c01087c7:	01 d0                	add    %edx,%eax$/;"	l
c01087c9	obj/kernel.asm	/^c01087c9:	39 c1                	cmp    %eax,%ecx$/;"	l
c01087cb	obj/kernel.asm	/^c01087cb:	75 17                	jne    c01087e4 <check_vma_struct+0x1d2>$/;"	l
c01087cd	obj/kernel.asm	/^c01087cd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01087d0	obj/kernel.asm	/^c01087d0:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c01087d3	obj/kernel.asm	/^c01087d3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01087d6	obj/kernel.asm	/^c01087d6:	89 d0                	mov    %edx,%eax$/;"	l
c01087d8	obj/kernel.asm	/^c01087d8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01087db	obj/kernel.asm	/^c01087db:	01 d0                	add    %edx,%eax$/;"	l
c01087dd	obj/kernel.asm	/^c01087dd:	83 c0 02             	add    $0x2,%eax$/;"	l
c01087e0	obj/kernel.asm	/^c01087e0:	39 c1                	cmp    %eax,%ecx$/;"	l
c01087e2	obj/kernel.asm	/^c01087e2:	74 24                	je     c0108808 <check_vma_struct+0x1f6>$/;"	l
c01087e4	obj/kernel.asm	/^c01087e4:	c7 44 24 0c 00 e0 10 	movl   $0xc010e000,0xc(%esp)$/;"	l
c01087eb	obj/kernel.asm	/^c01087eb:	c0 $/;"	l
c01087ec	obj/kernel.asm	/^c01087ec:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c01087f3	obj/kernel.asm	/^c01087f3:	c0 $/;"	l
c01087f4	obj/kernel.asm	/^c01087f4:	c7 44 24 04 22 01 00 	movl   $0x122,0x4(%esp)$/;"	l
c01087fb	obj/kernel.asm	/^c01087fb:	00 $/;"	l
c01087fc	obj/kernel.asm	/^c01087fc:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108803	obj/kernel.asm	/^c0108803:	e8 d2 85 ff ff       	call   c0100dda <__panic>$/;"	l
c0108808	obj/kernel.asm	/^c0108808:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010880b	obj/kernel.asm	/^c010880b:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010880e	obj/kernel.asm	/^c010880e:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108811	obj/kernel.asm	/^c0108811:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108814	obj/kernel.asm	/^c0108814:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108817	obj/kernel.asm	/^c0108817:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010881b	obj/kernel.asm	/^c010881b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010881e	obj/kernel.asm	/^c010881e:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108821	obj/kernel.asm	/^c0108821:	0f 8e 5d ff ff ff    	jle    c0108784 <check_vma_struct+0x172>$/;"	l
c0108827	obj/kernel.asm	/^c0108827:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c010882e	obj/kernel.asm	/^c010882e:	e9 cd 01 00 00       	jmp    c0108a00 <check_vma_struct+0x3ee>$/;"	l
c0108833	obj/kernel.asm	/^c0108833:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108836	obj/kernel.asm	/^c0108836:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010883a	obj/kernel.asm	/^c010883a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010883d	obj/kernel.asm	/^c010883d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108840	obj/kernel.asm	/^c0108840:	e8 db f6 ff ff       	call   c0107f20 <find_vma>$/;"	l
c0108845	obj/kernel.asm	/^c0108845:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0108848	obj/kernel.asm	/^c0108848:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c010884c	obj/kernel.asm	/^c010884c:	75 24                	jne    c0108872 <check_vma_struct+0x260>$/;"	l
c010884e	obj/kernel.asm	/^c010884e:	c7 44 24 0c 35 e0 10 	movl   $0xc010e035,0xc(%esp)$/;"	l
c0108855	obj/kernel.asm	/^c0108855:	c0 $/;"	l
c0108856	obj/kernel.asm	/^c0108856:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c010885d	obj/kernel.asm	/^c010885d:	c0 $/;"	l
c010885e	obj/kernel.asm	/^c010885e:	c7 44 24 04 28 01 00 	movl   $0x128,0x4(%esp)$/;"	l
c0108865	obj/kernel.asm	/^c0108865:	00 $/;"	l
c0108866	obj/kernel.asm	/^c0108866:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c010886d	obj/kernel.asm	/^c010886d:	e8 68 85 ff ff       	call   c0100dda <__panic>$/;"	l
c0108872	obj/kernel.asm	/^c0108872:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108875	obj/kernel.asm	/^c0108875:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108878	obj/kernel.asm	/^c0108878:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010887c	obj/kernel.asm	/^c010887c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010887f	obj/kernel.asm	/^c010887f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108882	obj/kernel.asm	/^c0108882:	e8 99 f6 ff ff       	call   c0107f20 <find_vma>$/;"	l
c0108887	obj/kernel.asm	/^c0108887:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010888a	obj/kernel.asm	/^c010888a:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c010888e	obj/kernel.asm	/^c010888e:	75 24                	jne    c01088b4 <check_vma_struct+0x2a2>$/;"	l
c0108890	obj/kernel.asm	/^c0108890:	c7 44 24 0c 42 e0 10 	movl   $0xc010e042,0xc(%esp)$/;"	l
c0108897	obj/kernel.asm	/^c0108897:	c0 $/;"	l
c0108898	obj/kernel.asm	/^c0108898:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c010889f	obj/kernel.asm	/^c010889f:	c0 $/;"	l
c01088a0	obj/kernel.asm	/^c01088a0:	c7 44 24 04 2a 01 00 	movl   $0x12a,0x4(%esp)$/;"	l
c01088a7	obj/kernel.asm	/^c01088a7:	00 $/;"	l
c01088a8	obj/kernel.asm	/^c01088a8:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01088af	obj/kernel.asm	/^c01088af:	e8 26 85 ff ff       	call   c0100dda <__panic>$/;"	l
c01088b4	obj/kernel.asm	/^c01088b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01088b7	obj/kernel.asm	/^c01088b7:	83 c0 02             	add    $0x2,%eax$/;"	l
c01088ba	obj/kernel.asm	/^c01088ba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01088be	obj/kernel.asm	/^c01088be:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01088c1	obj/kernel.asm	/^c01088c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01088c4	obj/kernel.asm	/^c01088c4:	e8 57 f6 ff ff       	call   c0107f20 <find_vma>$/;"	l
c01088c9	obj/kernel.asm	/^c01088c9:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01088cc	obj/kernel.asm	/^c01088cc:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c01088d0	obj/kernel.asm	/^c01088d0:	74 24                	je     c01088f6 <check_vma_struct+0x2e4>$/;"	l
c01088d2	obj/kernel.asm	/^c01088d2:	c7 44 24 0c 4f e0 10 	movl   $0xc010e04f,0xc(%esp)$/;"	l
c01088d9	obj/kernel.asm	/^c01088d9:	c0 $/;"	l
c01088da	obj/kernel.asm	/^c01088da:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c01088e1	obj/kernel.asm	/^c01088e1:	c0 $/;"	l
c01088e2	obj/kernel.asm	/^c01088e2:	c7 44 24 04 2c 01 00 	movl   $0x12c,0x4(%esp)$/;"	l
c01088e9	obj/kernel.asm	/^c01088e9:	00 $/;"	l
c01088ea	obj/kernel.asm	/^c01088ea:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01088f1	obj/kernel.asm	/^c01088f1:	e8 e4 84 ff ff       	call   c0100dda <__panic>$/;"	l
c01088f6	obj/kernel.asm	/^c01088f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01088f9	obj/kernel.asm	/^c01088f9:	83 c0 03             	add    $0x3,%eax$/;"	l
c01088fc	obj/kernel.asm	/^c01088fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108900	obj/kernel.asm	/^c0108900:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108903	obj/kernel.asm	/^c0108903:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108906	obj/kernel.asm	/^c0108906:	e8 15 f6 ff ff       	call   c0107f20 <find_vma>$/;"	l
c010890b	obj/kernel.asm	/^c010890b:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010890e	obj/kernel.asm	/^c010890e:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c0108912	obj/kernel.asm	/^c0108912:	74 24                	je     c0108938 <check_vma_struct+0x326>$/;"	l
c0108914	obj/kernel.asm	/^c0108914:	c7 44 24 0c 5c e0 10 	movl   $0xc010e05c,0xc(%esp)$/;"	l
c010891b	obj/kernel.asm	/^c010891b:	c0 $/;"	l
c010891c	obj/kernel.asm	/^c010891c:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108923	obj/kernel.asm	/^c0108923:	c0 $/;"	l
c0108924	obj/kernel.asm	/^c0108924:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
c010892b	obj/kernel.asm	/^c010892b:	00 $/;"	l
c010892c	obj/kernel.asm	/^c010892c:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108933	obj/kernel.asm	/^c0108933:	e8 a2 84 ff ff       	call   c0100dda <__panic>$/;"	l
c0108938	obj/kernel.asm	/^c0108938:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010893b	obj/kernel.asm	/^c010893b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010893e	obj/kernel.asm	/^c010893e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108942	obj/kernel.asm	/^c0108942:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108945	obj/kernel.asm	/^c0108945:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108948	obj/kernel.asm	/^c0108948:	e8 d3 f5 ff ff       	call   c0107f20 <find_vma>$/;"	l
c010894d	obj/kernel.asm	/^c010894d:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0108950	obj/kernel.asm	/^c0108950:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c0108954	obj/kernel.asm	/^c0108954:	74 24                	je     c010897a <check_vma_struct+0x368>$/;"	l
c0108956	obj/kernel.asm	/^c0108956:	c7 44 24 0c 69 e0 10 	movl   $0xc010e069,0xc(%esp)$/;"	l
c010895d	obj/kernel.asm	/^c010895d:	c0 $/;"	l
c010895e	obj/kernel.asm	/^c010895e:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108965	obj/kernel.asm	/^c0108965:	c0 $/;"	l
c0108966	obj/kernel.asm	/^c0108966:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
c010896d	obj/kernel.asm	/^c010896d:	00 $/;"	l
c010896e	obj/kernel.asm	/^c010896e:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108975	obj/kernel.asm	/^c0108975:	e8 60 84 ff ff       	call   c0100dda <__panic>$/;"	l
c010897a	obj/kernel.asm	/^c010897a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010897d	obj/kernel.asm	/^c010897d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108980	obj/kernel.asm	/^c0108980:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108983	obj/kernel.asm	/^c0108983:	39 c2                	cmp    %eax,%edx$/;"	l
c0108985	obj/kernel.asm	/^c0108985:	75 10                	jne    c0108997 <check_vma_struct+0x385>$/;"	l
c0108987	obj/kernel.asm	/^c0108987:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010898a	obj/kernel.asm	/^c010898a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010898d	obj/kernel.asm	/^c010898d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108990	obj/kernel.asm	/^c0108990:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108993	obj/kernel.asm	/^c0108993:	39 c2                	cmp    %eax,%edx$/;"	l
c0108995	obj/kernel.asm	/^c0108995:	74 24                	je     c01089bb <check_vma_struct+0x3a9>$/;"	l
c0108997	obj/kernel.asm	/^c0108997:	c7 44 24 0c 78 e0 10 	movl   $0xc010e078,0xc(%esp)$/;"	l
c010899e	obj/kernel.asm	/^c010899e:	c0 $/;"	l
c010899f	obj/kernel.asm	/^c010899f:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c01089a6	obj/kernel.asm	/^c01089a6:	c0 $/;"	l
c01089a7	obj/kernel.asm	/^c01089a7:	c7 44 24 04 32 01 00 	movl   $0x132,0x4(%esp)$/;"	l
c01089ae	obj/kernel.asm	/^c01089ae:	00 $/;"	l
c01089af	obj/kernel.asm	/^c01089af:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01089b6	obj/kernel.asm	/^c01089b6:	e8 1f 84 ff ff       	call   c0100dda <__panic>$/;"	l
c01089bb	obj/kernel.asm	/^c01089bb:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01089be	obj/kernel.asm	/^c01089be:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01089c1	obj/kernel.asm	/^c01089c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01089c4	obj/kernel.asm	/^c01089c4:	39 c2                	cmp    %eax,%edx$/;"	l
c01089c6	obj/kernel.asm	/^c01089c6:	75 10                	jne    c01089d8 <check_vma_struct+0x3c6>$/;"	l
c01089c8	obj/kernel.asm	/^c01089c8:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01089cb	obj/kernel.asm	/^c01089cb:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01089ce	obj/kernel.asm	/^c01089ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01089d1	obj/kernel.asm	/^c01089d1:	83 c0 02             	add    $0x2,%eax$/;"	l
c01089d4	obj/kernel.asm	/^c01089d4:	39 c2                	cmp    %eax,%edx$/;"	l
c01089d6	obj/kernel.asm	/^c01089d6:	74 24                	je     c01089fc <check_vma_struct+0x3ea>$/;"	l
c01089d8	obj/kernel.asm	/^c01089d8:	c7 44 24 0c a8 e0 10 	movl   $0xc010e0a8,0xc(%esp)$/;"	l
c01089df	obj/kernel.asm	/^c01089df:	c0 $/;"	l
c01089e0	obj/kernel.asm	/^c01089e0:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c01089e7	obj/kernel.asm	/^c01089e7:	c0 $/;"	l
c01089e8	obj/kernel.asm	/^c01089e8:	c7 44 24 04 33 01 00 	movl   $0x133,0x4(%esp)$/;"	l
c01089ef	obj/kernel.asm	/^c01089ef:	00 $/;"	l
c01089f0	obj/kernel.asm	/^c01089f0:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c01089f7	obj/kernel.asm	/^c01089f7:	e8 de 83 ff ff       	call   c0100dda <__panic>$/;"	l
c01089fc	obj/kernel.asm	/^c01089fc:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0108a00	obj/kernel.asm	/^c0108a00:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108a03	obj/kernel.asm	/^c0108a03:	89 d0                	mov    %edx,%eax$/;"	l
c0108a05	obj/kernel.asm	/^c0108a05:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108a08	obj/kernel.asm	/^c0108a08:	01 d0                	add    %edx,%eax$/;"	l
c0108a0a	obj/kernel.asm	/^c0108a0a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108a0d	obj/kernel.asm	/^c0108a0d:	0f 8d 20 fe ff ff    	jge    c0108833 <check_vma_struct+0x221>$/;"	l
c0108a13	obj/kernel.asm	/^c0108a13:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0108a1a	obj/kernel.asm	/^c0108a1a:	eb 70                	jmp    c0108a8c <check_vma_struct+0x47a>$/;"	l
c0108a1c	obj/kernel.asm	/^c0108a1c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a1f	obj/kernel.asm	/^c0108a1f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108a23	obj/kernel.asm	/^c0108a23:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108a26	obj/kernel.asm	/^c0108a26:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108a29	obj/kernel.asm	/^c0108a29:	e8 f2 f4 ff ff       	call   c0107f20 <find_vma>$/;"	l
c0108a2e	obj/kernel.asm	/^c0108a2e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0108a31	obj/kernel.asm	/^c0108a31:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0108a35	obj/kernel.asm	/^c0108a35:	74 27                	je     c0108a5e <check_vma_struct+0x44c>$/;"	l
c0108a37	obj/kernel.asm	/^c0108a37:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108a3a	obj/kernel.asm	/^c0108a3a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108a3d	obj/kernel.asm	/^c0108a3d:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108a40	obj/kernel.asm	/^c0108a40:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108a43	obj/kernel.asm	/^c0108a43:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0108a47	obj/kernel.asm	/^c0108a47:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108a4b	obj/kernel.asm	/^c0108a4b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a4e	obj/kernel.asm	/^c0108a4e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108a52	obj/kernel.asm	/^c0108a52:	c7 04 24 d8 e0 10 c0 	movl   $0xc010e0d8,(%esp)$/;"	l
c0108a59	obj/kernel.asm	/^c0108a59:	e8 fa 78 ff ff       	call   c0100358 <cprintf>$/;"	l
c0108a5e	obj/kernel.asm	/^c0108a5e:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0108a62	obj/kernel.asm	/^c0108a62:	74 24                	je     c0108a88 <check_vma_struct+0x476>$/;"	l
c0108a64	obj/kernel.asm	/^c0108a64:	c7 44 24 0c fd e0 10 	movl   $0xc010e0fd,0xc(%esp)$/;"	l
c0108a6b	obj/kernel.asm	/^c0108a6b:	c0 $/;"	l
c0108a6c	obj/kernel.asm	/^c0108a6c:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108a73	obj/kernel.asm	/^c0108a73:	c0 $/;"	l
c0108a74	obj/kernel.asm	/^c0108a74:	c7 44 24 04 3b 01 00 	movl   $0x13b,0x4(%esp)$/;"	l
c0108a7b	obj/kernel.asm	/^c0108a7b:	00 $/;"	l
c0108a7c	obj/kernel.asm	/^c0108a7c:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108a83	obj/kernel.asm	/^c0108a83:	e8 52 83 ff ff       	call   c0100dda <__panic>$/;"	l
c0108a88	obj/kernel.asm	/^c0108a88:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0108a8c	obj/kernel.asm	/^c0108a8c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108a90	obj/kernel.asm	/^c0108a90:	79 8a                	jns    c0108a1c <check_vma_struct+0x40a>$/;"	l
c0108a92	obj/kernel.asm	/^c0108a92:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108a95	obj/kernel.asm	/^c0108a95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108a98	obj/kernel.asm	/^c0108a98:	e8 08 f7 ff ff       	call   c01081a5 <mm_destroy>$/;"	l
c0108a9d	obj/kernel.asm	/^c0108a9d:	c7 04 24 14 e1 10 c0 	movl   $0xc010e114,(%esp)$/;"	l
c0108aa4	obj/kernel.asm	/^c0108aa4:	e8 af 78 ff ff       	call   c0100358 <cprintf>$/;"	l
c0108aa9	obj/kernel.asm	/^c0108aa9:	c9                   	leave  $/;"	l
c0108aaa	obj/kernel.asm	/^c0108aaa:	c3                   	ret    $/;"	l
c0108aab	obj/kernel.asm	/^c0108aab <check_pgfault>:$/;"	l
c0108aab	obj/kernel.asm	/^c0108aab:	55                   	push   %ebp$/;"	l
c0108aac	obj/kernel.asm	/^c0108aac:	89 e5                	mov    %esp,%ebp$/;"	l
c0108aae	obj/kernel.asm	/^c0108aae:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108ab1	obj/kernel.asm	/^c0108ab1:	e8 8c c6 ff ff       	call   c0105142 <nr_free_pages>$/;"	l
c0108ab6	obj/kernel.asm	/^c0108ab6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108ab9	obj/kernel.asm	/^c0108ab9:	e8 8e f3 ff ff       	call   c0107e4c <mm_create>$/;"	l
c0108abe	obj/kernel.asm	/^c0108abe:	a3 6c 1f 1b c0       	mov    %eax,0xc01b1f6c$/;"	l
c0108ac3	obj/kernel.asm	/^c0108ac3:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c0108ac8	obj/kernel.asm	/^c0108ac8:	85 c0                	test   %eax,%eax$/;"	l
c0108aca	obj/kernel.asm	/^c0108aca:	75 24                	jne    c0108af0 <check_pgfault+0x45>$/;"	l
c0108acc	obj/kernel.asm	/^c0108acc:	c7 44 24 0c 33 e1 10 	movl   $0xc010e133,0xc(%esp)$/;"	l
c0108ad3	obj/kernel.asm	/^c0108ad3:	c0 $/;"	l
c0108ad4	obj/kernel.asm	/^c0108ad4:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108adb	obj/kernel.asm	/^c0108adb:	c0 $/;"	l
c0108adc	obj/kernel.asm	/^c0108adc:	c7 44 24 04 4b 01 00 	movl   $0x14b,0x4(%esp)$/;"	l
c0108ae3	obj/kernel.asm	/^c0108ae3:	00 $/;"	l
c0108ae4	obj/kernel.asm	/^c0108ae4:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108aeb	obj/kernel.asm	/^c0108aeb:	e8 ea 82 ff ff       	call   c0100dda <__panic>$/;"	l
c0108af0	obj/kernel.asm	/^c0108af0:	a1 6c 1f 1b c0       	mov    0xc01b1f6c,%eax$/;"	l
c0108af5	obj/kernel.asm	/^c0108af5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108af8	obj/kernel.asm	/^c0108af8:	8b 15 84 fd 1a c0    	mov    0xc01afd84,%edx$/;"	l
c0108afe	obj/kernel.asm	/^c0108afe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108b01	obj/kernel.asm	/^c0108b01:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0108b04	obj/kernel.asm	/^c0108b04:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108b07	obj/kernel.asm	/^c0108b07:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108b0a	obj/kernel.asm	/^c0108b0a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108b0d	obj/kernel.asm	/^c0108b0d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108b10	obj/kernel.asm	/^c0108b10:	8b 00                	mov    (%eax),%eax$/;"	l
c0108b12	obj/kernel.asm	/^c0108b12:	85 c0                	test   %eax,%eax$/;"	l
c0108b14	obj/kernel.asm	/^c0108b14:	74 24                	je     c0108b3a <check_pgfault+0x8f>$/;"	l
c0108b16	obj/kernel.asm	/^c0108b16:	c7 44 24 0c 4b e1 10 	movl   $0xc010e14b,0xc(%esp)$/;"	l
c0108b1d	obj/kernel.asm	/^c0108b1d:	c0 $/;"	l
c0108b1e	obj/kernel.asm	/^c0108b1e:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108b25	obj/kernel.asm	/^c0108b25:	c0 $/;"	l
c0108b26	obj/kernel.asm	/^c0108b26:	c7 44 24 04 4f 01 00 	movl   $0x14f,0x4(%esp)$/;"	l
c0108b2d	obj/kernel.asm	/^c0108b2d:	00 $/;"	l
c0108b2e	obj/kernel.asm	/^c0108b2e:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108b35	obj/kernel.asm	/^c0108b35:	e8 a0 82 ff ff       	call   c0100dda <__panic>$/;"	l
c0108b3a	obj/kernel.asm	/^c0108b3a:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c0108b41	obj/kernel.asm	/^c0108b41:	00 $/;"	l
c0108b42	obj/kernel.asm	/^c0108b42:	c7 44 24 04 00 00 40 	movl   $0x400000,0x4(%esp)$/;"	l
c0108b49	obj/kernel.asm	/^c0108b49:	00 $/;"	l
c0108b4a	obj/kernel.asm	/^c0108b4a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0108b51	obj/kernel.asm	/^c0108b51:	e8 8f f3 ff ff       	call   c0107ee5 <vma_create>$/;"	l
c0108b56	obj/kernel.asm	/^c0108b56:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108b59	obj/kernel.asm	/^c0108b59:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0108b5d	obj/kernel.asm	/^c0108b5d:	75 24                	jne    c0108b83 <check_pgfault+0xd8>$/;"	l
c0108b5f	obj/kernel.asm	/^c0108b5f:	c7 44 24 0c dc df 10 	movl   $0xc010dfdc,0xc(%esp)$/;"	l
c0108b66	obj/kernel.asm	/^c0108b66:	c0 $/;"	l
c0108b67	obj/kernel.asm	/^c0108b67:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108b6e	obj/kernel.asm	/^c0108b6e:	c0 $/;"	l
c0108b6f	obj/kernel.asm	/^c0108b6f:	c7 44 24 04 52 01 00 	movl   $0x152,0x4(%esp)$/;"	l
c0108b76	obj/kernel.asm	/^c0108b76:	00 $/;"	l
c0108b77	obj/kernel.asm	/^c0108b77:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108b7e	obj/kernel.asm	/^c0108b7e:	e8 57 82 ff ff       	call   c0100dda <__panic>$/;"	l
c0108b83	obj/kernel.asm	/^c0108b83:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108b86	obj/kernel.asm	/^c0108b86:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108b8a	obj/kernel.asm	/^c0108b8a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108b8d	obj/kernel.asm	/^c0108b8d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108b90	obj/kernel.asm	/^c0108b90:	e8 e0 f4 ff ff       	call   c0108075 <insert_vma_struct>$/;"	l
c0108b95	obj/kernel.asm	/^c0108b95:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0108b9c	obj/kernel.asm	/^c0108b9c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108b9f	obj/kernel.asm	/^c0108b9f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108ba3	obj/kernel.asm	/^c0108ba3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108ba6	obj/kernel.asm	/^c0108ba6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ba9	obj/kernel.asm	/^c0108ba9:	e8 72 f3 ff ff       	call   c0107f20 <find_vma>$/;"	l
c0108bae	obj/kernel.asm	/^c0108bae:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108bb1	obj/kernel.asm	/^c0108bb1:	74 24                	je     c0108bd7 <check_pgfault+0x12c>$/;"	l
c0108bb3	obj/kernel.asm	/^c0108bb3:	c7 44 24 0c 59 e1 10 	movl   $0xc010e159,0xc(%esp)$/;"	l
c0108bba	obj/kernel.asm	/^c0108bba:	c0 $/;"	l
c0108bbb	obj/kernel.asm	/^c0108bbb:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108bc2	obj/kernel.asm	/^c0108bc2:	c0 $/;"	l
c0108bc3	obj/kernel.asm	/^c0108bc3:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
c0108bca	obj/kernel.asm	/^c0108bca:	00 $/;"	l
c0108bcb	obj/kernel.asm	/^c0108bcb:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108bd2	obj/kernel.asm	/^c0108bd2:	e8 03 82 ff ff       	call   c0100dda <__panic>$/;"	l
c0108bd7	obj/kernel.asm	/^c0108bd7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0108bde	obj/kernel.asm	/^c0108bde:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108be5	obj/kernel.asm	/^c0108be5:	eb 17                	jmp    c0108bfe <check_pgfault+0x153>$/;"	l
c0108be7	obj/kernel.asm	/^c0108be7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108bea	obj/kernel.asm	/^c0108bea:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108bed	obj/kernel.asm	/^c0108bed:	01 d0                	add    %edx,%eax$/;"	l
c0108bef	obj/kernel.asm	/^c0108bef:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108bf2	obj/kernel.asm	/^c0108bf2:	88 10                	mov    %dl,(%eax)$/;"	l
c0108bf4	obj/kernel.asm	/^c0108bf4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108bf7	obj/kernel.asm	/^c0108bf7:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0108bfa	obj/kernel.asm	/^c0108bfa:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108bfe	obj/kernel.asm	/^c0108bfe:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0108c02	obj/kernel.asm	/^c0108c02:	7e e3                	jle    c0108be7 <check_pgfault+0x13c>$/;"	l
c0108c04	obj/kernel.asm	/^c0108c04:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108c0b	obj/kernel.asm	/^c0108c0b:	eb 15                	jmp    c0108c22 <check_pgfault+0x177>$/;"	l
c0108c0d	obj/kernel.asm	/^c0108c0d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108c10	obj/kernel.asm	/^c0108c10:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108c13	obj/kernel.asm	/^c0108c13:	01 d0                	add    %edx,%eax$/;"	l
c0108c15	obj/kernel.asm	/^c0108c15:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0108c18	obj/kernel.asm	/^c0108c18:	0f be c0             	movsbl %al,%eax$/;"	l
c0108c1b	obj/kernel.asm	/^c0108c1b:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0108c1e	obj/kernel.asm	/^c0108c1e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108c22	obj/kernel.asm	/^c0108c22:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0108c26	obj/kernel.asm	/^c0108c26:	7e e5                	jle    c0108c0d <check_pgfault+0x162>$/;"	l
c0108c28	obj/kernel.asm	/^c0108c28:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108c2c	obj/kernel.asm	/^c0108c2c:	74 24                	je     c0108c52 <check_pgfault+0x1a7>$/;"	l
c0108c2e	obj/kernel.asm	/^c0108c2e:	c7 44 24 0c 73 e1 10 	movl   $0xc010e173,0xc(%esp)$/;"	l
c0108c35	obj/kernel.asm	/^c0108c35:	c0 $/;"	l
c0108c36	obj/kernel.asm	/^c0108c36:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108c3d	obj/kernel.asm	/^c0108c3d:	c0 $/;"	l
c0108c3e	obj/kernel.asm	/^c0108c3e:	c7 44 24 04 61 01 00 	movl   $0x161,0x4(%esp)$/;"	l
c0108c45	obj/kernel.asm	/^c0108c45:	00 $/;"	l
c0108c46	obj/kernel.asm	/^c0108c46:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108c4d	obj/kernel.asm	/^c0108c4d:	e8 88 81 ff ff       	call   c0100dda <__panic>$/;"	l
c0108c52	obj/kernel.asm	/^c0108c52:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108c55	obj/kernel.asm	/^c0108c55:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108c58	obj/kernel.asm	/^c0108c58:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108c5b	obj/kernel.asm	/^c0108c5b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0108c60	obj/kernel.asm	/^c0108c60:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108c64	obj/kernel.asm	/^c0108c64:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108c67	obj/kernel.asm	/^c0108c67:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108c6a	obj/kernel.asm	/^c0108c6a:	e8 a8 d1 ff ff       	call   c0105e17 <page_remove>$/;"	l
c0108c6f	obj/kernel.asm	/^c0108c6f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108c72	obj/kernel.asm	/^c0108c72:	8b 00                	mov    (%eax),%eax$/;"	l
c0108c74	obj/kernel.asm	/^c0108c74:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108c77	obj/kernel.asm	/^c0108c77:	e8 8b f1 ff ff       	call   c0107e07 <pa2page>$/;"	l
c0108c7c	obj/kernel.asm	/^c0108c7c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0108c83	obj/kernel.asm	/^c0108c83:	00 $/;"	l
c0108c84	obj/kernel.asm	/^c0108c84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108c87	obj/kernel.asm	/^c0108c87:	e8 84 c4 ff ff       	call   c0105110 <free_pages>$/;"	l
c0108c8c	obj/kernel.asm	/^c0108c8c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108c8f	obj/kernel.asm	/^c0108c8f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0108c95	obj/kernel.asm	/^c0108c95:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108c98	obj/kernel.asm	/^c0108c98:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0108c9f	obj/kernel.asm	/^c0108c9f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108ca2	obj/kernel.asm	/^c0108ca2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ca5	obj/kernel.asm	/^c0108ca5:	e8 fb f4 ff ff       	call   c01081a5 <mm_destroy>$/;"	l
c0108caa	obj/kernel.asm	/^c0108caa:	c7 05 6c 1f 1b c0 00 	movl   $0x0,0xc01b1f6c$/;"	l
c0108cb1	obj/kernel.asm	/^c0108cb1:	00 00 00 $/;"	l
c0108cb4	obj/kernel.asm	/^c0108cb4:	e8 89 c4 ff ff       	call   c0105142 <nr_free_pages>$/;"	l
c0108cb9	obj/kernel.asm	/^c0108cb9:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108cbc	obj/kernel.asm	/^c0108cbc:	74 24                	je     c0108ce2 <check_pgfault+0x237>$/;"	l
c0108cbe	obj/kernel.asm	/^c0108cbe:	c7 44 24 0c 7c e1 10 	movl   $0xc010e17c,0xc(%esp)$/;"	l
c0108cc5	obj/kernel.asm	/^c0108cc5:	c0 $/;"	l
c0108cc6	obj/kernel.asm	/^c0108cc6:	c7 44 24 08 eb de 10 	movl   $0xc010deeb,0x8(%esp)$/;"	l
c0108ccd	obj/kernel.asm	/^c0108ccd:	c0 $/;"	l
c0108cce	obj/kernel.asm	/^c0108cce:	c7 44 24 04 6b 01 00 	movl   $0x16b,0x4(%esp)$/;"	l
c0108cd5	obj/kernel.asm	/^c0108cd5:	00 $/;"	l
c0108cd6	obj/kernel.asm	/^c0108cd6:	c7 04 24 00 df 10 c0 	movl   $0xc010df00,(%esp)$/;"	l
c0108cdd	obj/kernel.asm	/^c0108cdd:	e8 f8 80 ff ff       	call   c0100dda <__panic>$/;"	l
c0108ce2	obj/kernel.asm	/^c0108ce2:	c7 04 24 a3 e1 10 c0 	movl   $0xc010e1a3,(%esp)$/;"	l
c0108ce9	obj/kernel.asm	/^c0108ce9:	e8 6a 76 ff ff       	call   c0100358 <cprintf>$/;"	l
c0108cee	obj/kernel.asm	/^c0108cee:	c9                   	leave  $/;"	l
c0108cef	obj/kernel.asm	/^c0108cef:	c3                   	ret    $/;"	l
c0108cf0	obj/kernel.asm	/^c0108cf0 <do_pgfault>:$/;"	l
c0108cf0	obj/kernel.asm	/^c0108cf0:	55                   	push   %ebp$/;"	l
c0108cf1	obj/kernel.asm	/^c0108cf1:	89 e5                	mov    %esp,%ebp$/;"	l
c0108cf3	obj/kernel.asm	/^c0108cf3:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108cf6	obj/kernel.asm	/^c0108cf6:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0108cfd	obj/kernel.asm	/^c0108cfd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108d00	obj/kernel.asm	/^c0108d00:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108d04	obj/kernel.asm	/^c0108d04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d07	obj/kernel.asm	/^c0108d07:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d0a	obj/kernel.asm	/^c0108d0a:	e8 11 f2 ff ff       	call   c0107f20 <find_vma>$/;"	l
c0108d0f	obj/kernel.asm	/^c0108d0f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108d12	obj/kernel.asm	/^c0108d12:	a1 18 fe 1a c0       	mov    0xc01afe18,%eax$/;"	l
c0108d17	obj/kernel.asm	/^c0108d17:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108d1a	obj/kernel.asm	/^c0108d1a:	a3 18 fe 1a c0       	mov    %eax,0xc01afe18$/;"	l
c0108d1f	obj/kernel.asm	/^c0108d1f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108d23	obj/kernel.asm	/^c0108d23:	74 0b                	je     c0108d30 <do_pgfault+0x40>$/;"	l
c0108d25	obj/kernel.asm	/^c0108d25:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d28	obj/kernel.asm	/^c0108d28:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108d2b	obj/kernel.asm	/^c0108d2b:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0108d2e	obj/kernel.asm	/^c0108d2e:	76 18                	jbe    c0108d48 <do_pgfault+0x58>$/;"	l
c0108d30	obj/kernel.asm	/^c0108d30:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108d33	obj/kernel.asm	/^c0108d33:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108d37	obj/kernel.asm	/^c0108d37:	c7 04 24 c0 e1 10 c0 	movl   $0xc010e1c0,(%esp)$/;"	l
c0108d3e	obj/kernel.asm	/^c0108d3e:	e8 15 76 ff ff       	call   c0100358 <cprintf>$/;"	l
c0108d43	obj/kernel.asm	/^c0108d43:	e9 6c 01 00 00       	jmp    c0108eb4 <do_pgfault+0x1c4>$/;"	l
c0108d48	obj/kernel.asm	/^c0108d48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108d4b	obj/kernel.asm	/^c0108d4b:	83 e0 03             	and    $0x3,%eax$/;"	l
c0108d4e	obj/kernel.asm	/^c0108d4e:	85 c0                	test   %eax,%eax$/;"	l
c0108d50	obj/kernel.asm	/^c0108d50:	74 36                	je     c0108d88 <do_pgfault+0x98>$/;"	l
c0108d52	obj/kernel.asm	/^c0108d52:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108d55	obj/kernel.asm	/^c0108d55:	74 20                	je     c0108d77 <do_pgfault+0x87>$/;"	l
c0108d57	obj/kernel.asm	/^c0108d57:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d5a	obj/kernel.asm	/^c0108d5a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108d5d	obj/kernel.asm	/^c0108d5d:	83 e0 02             	and    $0x2,%eax$/;"	l
c0108d60	obj/kernel.asm	/^c0108d60:	85 c0                	test   %eax,%eax$/;"	l
c0108d62	obj/kernel.asm	/^c0108d62:	75 11                	jne    c0108d75 <do_pgfault+0x85>$/;"	l
c0108d64	obj/kernel.asm	/^c0108d64:	c7 04 24 f0 e1 10 c0 	movl   $0xc010e1f0,(%esp)$/;"	l
c0108d6b	obj/kernel.asm	/^c0108d6b:	e8 e8 75 ff ff       	call   c0100358 <cprintf>$/;"	l
c0108d70	obj/kernel.asm	/^c0108d70:	e9 3f 01 00 00       	jmp    c0108eb4 <do_pgfault+0x1c4>$/;"	l
c0108d75	obj/kernel.asm	/^c0108d75:	eb 2f                	jmp    c0108da6 <do_pgfault+0xb6>$/;"	l
c0108d77	obj/kernel.asm	/^c0108d77:	c7 04 24 50 e2 10 c0 	movl   $0xc010e250,(%esp)$/;"	l
c0108d7e	obj/kernel.asm	/^c0108d7e:	e8 d5 75 ff ff       	call   c0100358 <cprintf>$/;"	l
c0108d83	obj/kernel.asm	/^c0108d83:	e9 2c 01 00 00       	jmp    c0108eb4 <do_pgfault+0x1c4>$/;"	l
c0108d88	obj/kernel.asm	/^c0108d88:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d8b	obj/kernel.asm	/^c0108d8b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108d8e	obj/kernel.asm	/^c0108d8e:	83 e0 05             	and    $0x5,%eax$/;"	l
c0108d91	obj/kernel.asm	/^c0108d91:	85 c0                	test   %eax,%eax$/;"	l
c0108d93	obj/kernel.asm	/^c0108d93:	75 11                	jne    c0108da6 <do_pgfault+0xb6>$/;"	l
c0108d95	obj/kernel.asm	/^c0108d95:	c7 04 24 88 e2 10 c0 	movl   $0xc010e288,(%esp)$/;"	l
c0108d9c	obj/kernel.asm	/^c0108d9c:	e8 b7 75 ff ff       	call   c0100358 <cprintf>$/;"	l
c0108da1	obj/kernel.asm	/^c0108da1:	e9 0e 01 00 00       	jmp    c0108eb4 <do_pgfault+0x1c4>$/;"	l
c0108da6	obj/kernel.asm	/^c0108da6:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c0108dad	obj/kernel.asm	/^c0108dad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108db0	obj/kernel.asm	/^c0108db0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108db3	obj/kernel.asm	/^c0108db3:	83 e0 02             	and    $0x2,%eax$/;"	l
c0108db6	obj/kernel.asm	/^c0108db6:	85 c0                	test   %eax,%eax$/;"	l
c0108db8	obj/kernel.asm	/^c0108db8:	74 04                	je     c0108dbe <do_pgfault+0xce>$/;"	l
c0108dba	obj/kernel.asm	/^c0108dba:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c0108dbe	obj/kernel.asm	/^c0108dbe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108dc1	obj/kernel.asm	/^c0108dc1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108dc4	obj/kernel.asm	/^c0108dc4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108dc7	obj/kernel.asm	/^c0108dc7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0108dcc	obj/kernel.asm	/^c0108dcc:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0108dcf	obj/kernel.asm	/^c0108dcf:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0108dd6	obj/kernel.asm	/^c0108dd6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0108ddd	obj/kernel.asm	/^c0108ddd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108de0	obj/kernel.asm	/^c0108de0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108de3	obj/kernel.asm	/^c0108de3:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0108dea	obj/kernel.asm	/^c0108dea:	00 $/;"	l
c0108deb	obj/kernel.asm	/^c0108deb:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108dee	obj/kernel.asm	/^c0108dee:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108df2	obj/kernel.asm	/^c0108df2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108df5	obj/kernel.asm	/^c0108df5:	e8 12 ca ff ff       	call   c010580c <get_pte>$/;"	l
c0108dfa	obj/kernel.asm	/^c0108dfa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108dfd	obj/kernel.asm	/^c0108dfd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108e00	obj/kernel.asm	/^c0108e00:	8b 00                	mov    (%eax),%eax$/;"	l
c0108e02	obj/kernel.asm	/^c0108e02:	85 c0                	test   %eax,%eax$/;"	l
c0108e04	obj/kernel.asm	/^c0108e04:	75 21                	jne    c0108e27 <do_pgfault+0x137>$/;"	l
c0108e06	obj/kernel.asm	/^c0108e06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e09	obj/kernel.asm	/^c0108e09:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108e0c	obj/kernel.asm	/^c0108e0c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108e0f	obj/kernel.asm	/^c0108e0f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108e13	obj/kernel.asm	/^c0108e13:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108e16	obj/kernel.asm	/^c0108e16:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108e1a	obj/kernel.asm	/^c0108e1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108e1d	obj/kernel.asm	/^c0108e1d:	e8 4f d1 ff ff       	call   c0105f71 <pgdir_alloc_page>$/;"	l
c0108e22	obj/kernel.asm	/^c0108e22:	e9 86 00 00 00       	jmp    c0108ead <do_pgfault+0x1bd>$/;"	l
c0108e27	obj/kernel.asm	/^c0108e27:	a1 0c fe 1a c0       	mov    0xc01afe0c,%eax$/;"	l
c0108e2c	obj/kernel.asm	/^c0108e2c:	85 c0                	test   %eax,%eax$/;"	l
c0108e2e	obj/kernel.asm	/^c0108e2e:	74 66                	je     c0108e96 <do_pgfault+0x1a6>$/;"	l
c0108e30	obj/kernel.asm	/^c0108e30:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0108e37	obj/kernel.asm	/^c0108e37:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c0108e3a	obj/kernel.asm	/^c0108e3a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108e3e	obj/kernel.asm	/^c0108e3e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108e41	obj/kernel.asm	/^c0108e41:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108e45	obj/kernel.asm	/^c0108e45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e48	obj/kernel.asm	/^c0108e48:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108e4b	obj/kernel.asm	/^c0108e4b:	e8 ba e1 ff ff       	call   c010700a <swap_in>$/;"	l
c0108e50	obj/kernel.asm	/^c0108e50:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108e53	obj/kernel.asm	/^c0108e53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e56	obj/kernel.asm	/^c0108e56:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108e59	obj/kernel.asm	/^c0108e59:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c0108e5c	obj/kernel.asm	/^c0108e5c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0108e60	obj/kernel.asm	/^c0108e60:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0108e63	obj/kernel.asm	/^c0108e63:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0108e67	obj/kernel.asm	/^c0108e67:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108e6b	obj/kernel.asm	/^c0108e6b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108e6e	obj/kernel.asm	/^c0108e6e:	e8 e8 cf ff ff       	call   c0105e5b <page_insert>$/;"	l
c0108e73	obj/kernel.asm	/^c0108e73:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108e76	obj/kernel.asm	/^c0108e76:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0108e7d	obj/kernel.asm	/^c0108e7d:	00 $/;"	l
c0108e7e	obj/kernel.asm	/^c0108e7e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108e82	obj/kernel.asm	/^c0108e82:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108e85	obj/kernel.asm	/^c0108e85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108e89	obj/kernel.asm	/^c0108e89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e8c	obj/kernel.asm	/^c0108e8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108e8f	obj/kernel.asm	/^c0108e8f:	e8 ad df ff ff       	call   c0106e41 <swap_map_swappable>$/;"	l
c0108e94	obj/kernel.asm	/^c0108e94:	eb 17                	jmp    c0108ead <do_pgfault+0x1bd>$/;"	l
c0108e96	obj/kernel.asm	/^c0108e96:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108e99	obj/kernel.asm	/^c0108e99:	8b 00                	mov    (%eax),%eax$/;"	l
c0108e9b	obj/kernel.asm	/^c0108e9b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108e9f	obj/kernel.asm	/^c0108e9f:	c7 04 24 ec e2 10 c0 	movl   $0xc010e2ec,(%esp)$/;"	l
c0108ea6	obj/kernel.asm	/^c0108ea6:	e8 ad 74 ff ff       	call   c0100358 <cprintf>$/;"	l
c0108eab	obj/kernel.asm	/^c0108eab:	eb 07                	jmp    c0108eb4 <do_pgfault+0x1c4>$/;"	l
c0108ead	obj/kernel.asm	/^c0108ead:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108eb4	obj/kernel.asm	/^c0108eb4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108eb7	obj/kernel.asm	/^c0108eb7:	c9                   	leave  $/;"	l
c0108eb8	obj/kernel.asm	/^c0108eb8:	c3                   	ret    $/;"	l
c0108eb9	obj/kernel.asm	/^c0108eb9 <user_mem_check>:$/;"	l
c0108eb9	obj/kernel.asm	/^c0108eb9:	55                   	push   %ebp$/;"	l
c0108eba	obj/kernel.asm	/^c0108eba:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ebc	obj/kernel.asm	/^c0108ebc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108ebf	obj/kernel.asm	/^c0108ebf:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108ec3	obj/kernel.asm	/^c0108ec3:	0f 84 e0 00 00 00    	je     c0108fa9 <user_mem_check+0xf0>$/;"	l
c0108ec9	obj/kernel.asm	/^c0108ec9:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0108ed0	obj/kernel.asm	/^c0108ed0:	76 1c                	jbe    c0108eee <user_mem_check+0x35>$/;"	l
c0108ed2	obj/kernel.asm	/^c0108ed2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108ed5	obj/kernel.asm	/^c0108ed5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108ed8	obj/kernel.asm	/^c0108ed8:	01 d0                	add    %edx,%eax$/;"	l
c0108eda	obj/kernel.asm	/^c0108eda:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108edd	obj/kernel.asm	/^c0108edd:	76 0f                	jbe    c0108eee <user_mem_check+0x35>$/;"	l
c0108edf	obj/kernel.asm	/^c0108edf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108ee2	obj/kernel.asm	/^c0108ee2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108ee5	obj/kernel.asm	/^c0108ee5:	01 d0                	add    %edx,%eax$/;"	l
c0108ee7	obj/kernel.asm	/^c0108ee7:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0108eec	obj/kernel.asm	/^c0108eec:	76 0a                	jbe    c0108ef8 <user_mem_check+0x3f>$/;"	l
c0108eee	obj/kernel.asm	/^c0108eee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108ef3	obj/kernel.asm	/^c0108ef3:	e9 e2 00 00 00       	jmp    c0108fda <user_mem_check+0x121>$/;"	l
c0108ef8	obj/kernel.asm	/^c0108ef8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108efb	obj/kernel.asm	/^c0108efb:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108efe	obj/kernel.asm	/^c0108efe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108f01	obj/kernel.asm	/^c0108f01:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108f04	obj/kernel.asm	/^c0108f04:	01 d0                	add    %edx,%eax$/;"	l
c0108f06	obj/kernel.asm	/^c0108f06:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0108f09	obj/kernel.asm	/^c0108f09:	e9 88 00 00 00       	jmp    c0108f96 <user_mem_check+0xdd>$/;"	l
c0108f0e	obj/kernel.asm	/^c0108f0e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f11	obj/kernel.asm	/^c0108f11:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108f15	obj/kernel.asm	/^c0108f15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f18	obj/kernel.asm	/^c0108f18:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108f1b	obj/kernel.asm	/^c0108f1b:	e8 00 f0 ff ff       	call   c0107f20 <find_vma>$/;"	l
c0108f20	obj/kernel.asm	/^c0108f20:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108f23	obj/kernel.asm	/^c0108f23:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108f27	obj/kernel.asm	/^c0108f27:	74 0b                	je     c0108f34 <user_mem_check+0x7b>$/;"	l
c0108f29	obj/kernel.asm	/^c0108f29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f2c	obj/kernel.asm	/^c0108f2c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108f2f	obj/kernel.asm	/^c0108f2f:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0108f32	obj/kernel.asm	/^c0108f32:	76 0a                	jbe    c0108f3e <user_mem_check+0x85>$/;"	l
c0108f34	obj/kernel.asm	/^c0108f34:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108f39	obj/kernel.asm	/^c0108f39:	e9 9c 00 00 00       	jmp    c0108fda <user_mem_check+0x121>$/;"	l
c0108f3e	obj/kernel.asm	/^c0108f3e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f41	obj/kernel.asm	/^c0108f41:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0108f44	obj/kernel.asm	/^c0108f44:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0108f48	obj/kernel.asm	/^c0108f48:	74 07                	je     c0108f51 <user_mem_check+0x98>$/;"	l
c0108f4a	obj/kernel.asm	/^c0108f4a:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
c0108f4f	obj/kernel.asm	/^c0108f4f:	eb 05                	jmp    c0108f56 <user_mem_check+0x9d>$/;"	l
c0108f51	obj/kernel.asm	/^c0108f51:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108f56	obj/kernel.asm	/^c0108f56:	21 d0                	and    %edx,%eax$/;"	l
c0108f58	obj/kernel.asm	/^c0108f58:	85 c0                	test   %eax,%eax$/;"	l
c0108f5a	obj/kernel.asm	/^c0108f5a:	75 07                	jne    c0108f63 <user_mem_check+0xaa>$/;"	l
c0108f5c	obj/kernel.asm	/^c0108f5c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108f61	obj/kernel.asm	/^c0108f61:	eb 77                	jmp    c0108fda <user_mem_check+0x121>$/;"	l
c0108f63	obj/kernel.asm	/^c0108f63:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0108f67	obj/kernel.asm	/^c0108f67:	74 24                	je     c0108f8d <user_mem_check+0xd4>$/;"	l
c0108f69	obj/kernel.asm	/^c0108f69:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f6c	obj/kernel.asm	/^c0108f6c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108f6f	obj/kernel.asm	/^c0108f6f:	83 e0 08             	and    $0x8,%eax$/;"	l
c0108f72	obj/kernel.asm	/^c0108f72:	85 c0                	test   %eax,%eax$/;"	l
c0108f74	obj/kernel.asm	/^c0108f74:	74 17                	je     c0108f8d <user_mem_check+0xd4>$/;"	l
c0108f76	obj/kernel.asm	/^c0108f76:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f79	obj/kernel.asm	/^c0108f79:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108f7c	obj/kernel.asm	/^c0108f7c:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0108f81	obj/kernel.asm	/^c0108f81:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0108f84	obj/kernel.asm	/^c0108f84:	76 07                	jbe    c0108f8d <user_mem_check+0xd4>$/;"	l
c0108f86	obj/kernel.asm	/^c0108f86:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108f8b	obj/kernel.asm	/^c0108f8b:	eb 4d                	jmp    c0108fda <user_mem_check+0x121>$/;"	l
c0108f8d	obj/kernel.asm	/^c0108f8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f90	obj/kernel.asm	/^c0108f90:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108f93	obj/kernel.asm	/^c0108f93:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108f96	obj/kernel.asm	/^c0108f96:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f99	obj/kernel.asm	/^c0108f99:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0108f9c	obj/kernel.asm	/^c0108f9c:	0f 82 6c ff ff ff    	jb     c0108f0e <user_mem_check+0x55>$/;"	l
c0108fa2	obj/kernel.asm	/^c0108fa2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108fa7	obj/kernel.asm	/^c0108fa7:	eb 31                	jmp    c0108fda <user_mem_check+0x121>$/;"	l
c0108fa9	obj/kernel.asm	/^c0108fa9:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c0108fb0	obj/kernel.asm	/^c0108fb0:	76 23                	jbe    c0108fd5 <user_mem_check+0x11c>$/;"	l
c0108fb2	obj/kernel.asm	/^c0108fb2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108fb5	obj/kernel.asm	/^c0108fb5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108fb8	obj/kernel.asm	/^c0108fb8:	01 d0                	add    %edx,%eax$/;"	l
c0108fba	obj/kernel.asm	/^c0108fba:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108fbd	obj/kernel.asm	/^c0108fbd:	76 16                	jbe    c0108fd5 <user_mem_check+0x11c>$/;"	l
c0108fbf	obj/kernel.asm	/^c0108fbf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108fc2	obj/kernel.asm	/^c0108fc2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108fc5	obj/kernel.asm	/^c0108fc5:	01 d0                	add    %edx,%eax$/;"	l
c0108fc7	obj/kernel.asm	/^c0108fc7:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c0108fcc	obj/kernel.asm	/^c0108fcc:	77 07                	ja     c0108fd5 <user_mem_check+0x11c>$/;"	l
c0108fce	obj/kernel.asm	/^c0108fce:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108fd3	obj/kernel.asm	/^c0108fd3:	eb 05                	jmp    c0108fda <user_mem_check+0x121>$/;"	l
c0108fd5	obj/kernel.asm	/^c0108fd5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108fda	obj/kernel.asm	/^c0108fda:	c9                   	leave  $/;"	l
c0108fdb	obj/kernel.asm	/^c0108fdb:	c3                   	ret    $/;"	l
c0108fdc	obj/kernel.asm	/^c0108fdc <page2ppn>:$/;"	l
c0108fdc	obj/kernel.asm	/^c0108fdc:	55                   	push   %ebp$/;"	l
c0108fdd	obj/kernel.asm	/^c0108fdd:	89 e5                	mov    %esp,%ebp$/;"	l
c0108fdf	obj/kernel.asm	/^c0108fdf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108fe2	obj/kernel.asm	/^c0108fe2:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c0108fe7	obj/kernel.asm	/^c0108fe7:	29 c2                	sub    %eax,%edx$/;"	l
c0108fe9	obj/kernel.asm	/^c0108fe9:	89 d0                	mov    %edx,%eax$/;"	l
c0108feb	obj/kernel.asm	/^c0108feb:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0108fee	obj/kernel.asm	/^c0108fee:	5d                   	pop    %ebp$/;"	l
c0108fef	obj/kernel.asm	/^c0108fef:	c3                   	ret    $/;"	l
c0108ff0	obj/kernel.asm	/^c0108ff0 <page2pa>:$/;"	l
c0108ff0	obj/kernel.asm	/^c0108ff0:	55                   	push   %ebp$/;"	l
c0108ff1	obj/kernel.asm	/^c0108ff1:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ff3	obj/kernel.asm	/^c0108ff3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108ff6	obj/kernel.asm	/^c0108ff6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ff9	obj/kernel.asm	/^c0108ff9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ffc	obj/kernel.asm	/^c0108ffc:	e8 db ff ff ff       	call   c0108fdc <page2ppn>$/;"	l
c0109001	obj/kernel.asm	/^c0109001:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0109004	obj/kernel.asm	/^c0109004:	c9                   	leave  $/;"	l
c0109005	obj/kernel.asm	/^c0109005:	c3                   	ret    $/;"	l
c0109006	obj/kernel.asm	/^c0109006 <page2kva>:$/;"	l
c0109006	obj/kernel.asm	/^c0109006:	55                   	push   %ebp$/;"	l
c0109007	obj/kernel.asm	/^c0109007:	89 e5                	mov    %esp,%ebp$/;"	l
c0109009	obj/kernel.asm	/^c0109009:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010900c	obj/kernel.asm	/^c010900c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010900f	obj/kernel.asm	/^c010900f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109012	obj/kernel.asm	/^c0109012:	e8 d9 ff ff ff       	call   c0108ff0 <page2pa>$/;"	l
c0109017	obj/kernel.asm	/^c0109017:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010901a	obj/kernel.asm	/^c010901a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010901d	obj/kernel.asm	/^c010901d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0109020	obj/kernel.asm	/^c0109020:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109023	obj/kernel.asm	/^c0109023:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0109028	obj/kernel.asm	/^c0109028:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010902b	obj/kernel.asm	/^c010902b:	72 23                	jb     c0109050 <page2kva+0x4a>$/;"	l
c010902d	obj/kernel.asm	/^c010902d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109030	obj/kernel.asm	/^c0109030:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109034	obj/kernel.asm	/^c0109034:	c7 44 24 08 14 e3 10 	movl   $0xc010e314,0x8(%esp)$/;"	l
c010903b	obj/kernel.asm	/^c010903b:	c0 $/;"	l
c010903c	obj/kernel.asm	/^c010903c:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0109043	obj/kernel.asm	/^c0109043:	00 $/;"	l
c0109044	obj/kernel.asm	/^c0109044:	c7 04 24 37 e3 10 c0 	movl   $0xc010e337,(%esp)$/;"	l
c010904b	obj/kernel.asm	/^c010904b:	e8 8a 7d ff ff       	call   c0100dda <__panic>$/;"	l
c0109050	obj/kernel.asm	/^c0109050:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109053	obj/kernel.asm	/^c0109053:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0109058	obj/kernel.asm	/^c0109058:	c9                   	leave  $/;"	l
c0109059	obj/kernel.asm	/^c0109059:	c3                   	ret    $/;"	l
c010905a	obj/kernel.asm	/^c010905a <swapfs_init>:$/;"	l
c010905a	obj/kernel.asm	/^c010905a:	55                   	push   %ebp$/;"	l
c010905b	obj/kernel.asm	/^c010905b:	89 e5                	mov    %esp,%ebp$/;"	l
c010905d	obj/kernel.asm	/^c010905d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109060	obj/kernel.asm	/^c0109060:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109067	obj/kernel.asm	/^c0109067:	e8 be 8a ff ff       	call   c0101b2a <ide_device_valid>$/;"	l
c010906c	obj/kernel.asm	/^c010906c:	85 c0                	test   %eax,%eax$/;"	l
c010906e	obj/kernel.asm	/^c010906e:	75 1c                	jne    c010908c <swapfs_init+0x32>$/;"	l
c0109070	obj/kernel.asm	/^c0109070:	c7 44 24 08 45 e3 10 	movl   $0xc010e345,0x8(%esp)$/;"	l
c0109077	obj/kernel.asm	/^c0109077:	c0 $/;"	l
c0109078	obj/kernel.asm	/^c0109078:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)$/;"	l
c010907f	obj/kernel.asm	/^c010907f:	00 $/;"	l
c0109080	obj/kernel.asm	/^c0109080:	c7 04 24 5f e3 10 c0 	movl   $0xc010e35f,(%esp)$/;"	l
c0109087	obj/kernel.asm	/^c0109087:	e8 4e 7d ff ff       	call   c0100dda <__panic>$/;"	l
c010908c	obj/kernel.asm	/^c010908c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109093	obj/kernel.asm	/^c0109093:	e8 d1 8a ff ff       	call   c0101b69 <ide_device_size>$/;"	l
c0109098	obj/kernel.asm	/^c0109098:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010909b	obj/kernel.asm	/^c010909b:	a3 3c 1f 1b c0       	mov    %eax,0xc01b1f3c$/;"	l
c01090a0	obj/kernel.asm	/^c01090a0:	c9                   	leave  $/;"	l
c01090a1	obj/kernel.asm	/^c01090a1:	c3                   	ret    $/;"	l
c01090a2	obj/kernel.asm	/^c01090a2 <swapfs_read>:$/;"	l
c01090a2	obj/kernel.asm	/^c01090a2:	55                   	push   %ebp$/;"	l
c01090a3	obj/kernel.asm	/^c01090a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01090a5	obj/kernel.asm	/^c01090a5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01090a8	obj/kernel.asm	/^c01090a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01090ab	obj/kernel.asm	/^c01090ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01090ae	obj/kernel.asm	/^c01090ae:	e8 53 ff ff ff       	call   c0109006 <page2kva>$/;"	l
c01090b3	obj/kernel.asm	/^c01090b3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01090b6	obj/kernel.asm	/^c01090b6:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c01090b9	obj/kernel.asm	/^c01090b9:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01090bc	obj/kernel.asm	/^c01090bc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01090c0	obj/kernel.asm	/^c01090c0:	74 0b                	je     c01090cd <swapfs_read+0x2b>$/;"	l
c01090c2	obj/kernel.asm	/^c01090c2:	8b 15 3c 1f 1b c0    	mov    0xc01b1f3c,%edx$/;"	l
c01090c8	obj/kernel.asm	/^c01090c8:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c01090cb	obj/kernel.asm	/^c01090cb:	72 23                	jb     c01090f0 <swapfs_read+0x4e>$/;"	l
c01090cd	obj/kernel.asm	/^c01090cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090d0	obj/kernel.asm	/^c01090d0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01090d4	obj/kernel.asm	/^c01090d4:	c7 44 24 08 70 e3 10 	movl   $0xc010e370,0x8(%esp)$/;"	l
c01090db	obj/kernel.asm	/^c01090db:	c0 $/;"	l
c01090dc	obj/kernel.asm	/^c01090dc:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
c01090e3	obj/kernel.asm	/^c01090e3:	00 $/;"	l
c01090e4	obj/kernel.asm	/^c01090e4:	c7 04 24 5f e3 10 c0 	movl   $0xc010e35f,(%esp)$/;"	l
c01090eb	obj/kernel.asm	/^c01090eb:	e8 ea 7c ff ff       	call   c0100dda <__panic>$/;"	l
c01090f0	obj/kernel.asm	/^c01090f0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01090f3	obj/kernel.asm	/^c01090f3:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c01090f6	obj/kernel.asm	/^c01090f6:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c01090fd	obj/kernel.asm	/^c01090fd:	00 $/;"	l
c01090fe	obj/kernel.asm	/^c01090fe:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109102	obj/kernel.asm	/^c0109102:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0109106	obj/kernel.asm	/^c0109106:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010910d	obj/kernel.asm	/^c010910d:	e8 96 8a ff ff       	call   c0101ba8 <ide_read_secs>$/;"	l
c0109112	obj/kernel.asm	/^c0109112:	c9                   	leave  $/;"	l
c0109113	obj/kernel.asm	/^c0109113:	c3                   	ret    $/;"	l
c0109114	obj/kernel.asm	/^c0109114 <swapfs_write>:$/;"	l
c0109114	obj/kernel.asm	/^c0109114:	55                   	push   %ebp$/;"	l
c0109115	obj/kernel.asm	/^c0109115:	89 e5                	mov    %esp,%ebp$/;"	l
c0109117	obj/kernel.asm	/^c0109117:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010911a	obj/kernel.asm	/^c010911a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010911d	obj/kernel.asm	/^c010911d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109120	obj/kernel.asm	/^c0109120:	e8 e1 fe ff ff       	call   c0109006 <page2kva>$/;"	l
c0109125	obj/kernel.asm	/^c0109125:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109128	obj/kernel.asm	/^c0109128:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c010912b	obj/kernel.asm	/^c010912b:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010912e	obj/kernel.asm	/^c010912e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109132	obj/kernel.asm	/^c0109132:	74 0b                	je     c010913f <swapfs_write+0x2b>$/;"	l
c0109134	obj/kernel.asm	/^c0109134:	8b 15 3c 1f 1b c0    	mov    0xc01b1f3c,%edx$/;"	l
c010913a	obj/kernel.asm	/^c010913a:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010913d	obj/kernel.asm	/^c010913d:	72 23                	jb     c0109162 <swapfs_write+0x4e>$/;"	l
c010913f	obj/kernel.asm	/^c010913f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109142	obj/kernel.asm	/^c0109142:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109146	obj/kernel.asm	/^c0109146:	c7 44 24 08 70 e3 10 	movl   $0xc010e370,0x8(%esp)$/;"	l
c010914d	obj/kernel.asm	/^c010914d:	c0 $/;"	l
c010914e	obj/kernel.asm	/^c010914e:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
c0109155	obj/kernel.asm	/^c0109155:	00 $/;"	l
c0109156	obj/kernel.asm	/^c0109156:	c7 04 24 5f e3 10 c0 	movl   $0xc010e35f,(%esp)$/;"	l
c010915d	obj/kernel.asm	/^c010915d:	e8 78 7c ff ff       	call   c0100dda <__panic>$/;"	l
c0109162	obj/kernel.asm	/^c0109162:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109165	obj/kernel.asm	/^c0109165:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c0109168	obj/kernel.asm	/^c0109168:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c010916f	obj/kernel.asm	/^c010916f:	00 $/;"	l
c0109170	obj/kernel.asm	/^c0109170:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109174	obj/kernel.asm	/^c0109174:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0109178	obj/kernel.asm	/^c0109178:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010917f	obj/kernel.asm	/^c010917f:	e8 66 8c ff ff       	call   c0101dea <ide_write_secs>$/;"	l
c0109184	obj/kernel.asm	/^c0109184:	c9                   	leave  $/;"	l
c0109185	obj/kernel.asm	/^c0109185:	c3                   	ret    $/;"	l
c0109186	obj/kernel.asm	/^c0109186 <kernel_thread_entry>:$/;"	l
c0109186	obj/kernel.asm	/^c0109186:	52                   	push   %edx$/;"	l
c0109187	obj/kernel.asm	/^c0109187:	ff d3                	call   *%ebx$/;"	l
c0109189	obj/kernel.asm	/^c0109189:	50                   	push   %eax$/;"	l
c010918a	obj/kernel.asm	/^c010918a:	e8 a4 0c 00 00       	call   c0109e33 <do_exit>$/;"	l
c010918f	obj/kernel.asm	/^c010918f <test_and_set_bit>:$/;"	l
c010918f	obj/kernel.asm	/^c010918f:	55                   	push   %ebp$/;"	l
c0109190	obj/kernel.asm	/^c0109190:	89 e5                	mov    %esp,%ebp$/;"	l
c0109192	obj/kernel.asm	/^c0109192:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109195	obj/kernel.asm	/^c0109195:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109198	obj/kernel.asm	/^c0109198:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010919b	obj/kernel.asm	/^c010919b:	0f ab 02             	bts    %eax,(%edx)$/;"	l
c010919e	obj/kernel.asm	/^c010919e:	19 c0                	sbb    %eax,%eax$/;"	l
c01091a0	obj/kernel.asm	/^c01091a0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01091a3	obj/kernel.asm	/^c01091a3:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01091a7	obj/kernel.asm	/^c01091a7:	0f 95 c0             	setne  %al$/;"	l
c01091aa	obj/kernel.asm	/^c01091aa:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01091ad	obj/kernel.asm	/^c01091ad:	c9                   	leave  $/;"	l
c01091ae	obj/kernel.asm	/^c01091ae:	c3                   	ret    $/;"	l
c01091af	obj/kernel.asm	/^c01091af <test_and_clear_bit>:$/;"	l
c01091af	obj/kernel.asm	/^c01091af:	55                   	push   %ebp$/;"	l
c01091b0	obj/kernel.asm	/^c01091b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01091b2	obj/kernel.asm	/^c01091b2:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01091b5	obj/kernel.asm	/^c01091b5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01091b8	obj/kernel.asm	/^c01091b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091bb	obj/kernel.asm	/^c01091bb:	0f b3 02             	btr    %eax,(%edx)$/;"	l
c01091be	obj/kernel.asm	/^c01091be:	19 c0                	sbb    %eax,%eax$/;"	l
c01091c0	obj/kernel.asm	/^c01091c0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01091c3	obj/kernel.asm	/^c01091c3:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01091c7	obj/kernel.asm	/^c01091c7:	0f 95 c0             	setne  %al$/;"	l
c01091ca	obj/kernel.asm	/^c01091ca:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01091cd	obj/kernel.asm	/^c01091cd:	c9                   	leave  $/;"	l
c01091ce	obj/kernel.asm	/^c01091ce:	c3                   	ret    $/;"	l
c01091cf	obj/kernel.asm	/^c01091cf <__intr_save>:$/;"	l
c01091cf	obj/kernel.asm	/^c01091cf:	55                   	push   %ebp$/;"	l
c01091d0	obj/kernel.asm	/^c01091d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01091d2	obj/kernel.asm	/^c01091d2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01091d5	obj/kernel.asm	/^c01091d5:	9c                   	pushf  $/;"	l
c01091d6	obj/kernel.asm	/^c01091d6:	58                   	pop    %eax$/;"	l
c01091d7	obj/kernel.asm	/^c01091d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01091da	obj/kernel.asm	/^c01091da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01091dd	obj/kernel.asm	/^c01091dd:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01091e2	obj/kernel.asm	/^c01091e2:	85 c0                	test   %eax,%eax$/;"	l
c01091e4	obj/kernel.asm	/^c01091e4:	74 0c                	je     c01091f2 <__intr_save+0x23>$/;"	l
c01091e6	obj/kernel.asm	/^c01091e6:	e8 47 8e ff ff       	call   c0102032 <intr_disable>$/;"	l
c01091eb	obj/kernel.asm	/^c01091eb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01091f0	obj/kernel.asm	/^c01091f0:	eb 05                	jmp    c01091f7 <__intr_save+0x28>$/;"	l
c01091f2	obj/kernel.asm	/^c01091f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01091f7	obj/kernel.asm	/^c01091f7:	c9                   	leave  $/;"	l
c01091f8	obj/kernel.asm	/^c01091f8:	c3                   	ret    $/;"	l
c01091f9	obj/kernel.asm	/^c01091f9 <__intr_restore>:$/;"	l
c01091f9	obj/kernel.asm	/^c01091f9:	55                   	push   %ebp$/;"	l
c01091fa	obj/kernel.asm	/^c01091fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01091fc	obj/kernel.asm	/^c01091fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01091ff	obj/kernel.asm	/^c01091ff:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109203	obj/kernel.asm	/^c0109203:	74 05                	je     c010920a <__intr_restore+0x11>$/;"	l
c0109205	obj/kernel.asm	/^c0109205:	e8 22 8e ff ff       	call   c010202c <intr_enable>$/;"	l
c010920a	obj/kernel.asm	/^c010920a:	c9                   	leave  $/;"	l
c010920b	obj/kernel.asm	/^c010920b:	c3                   	ret    $/;"	l
c010920c	obj/kernel.asm	/^c010920c <try_lock>:$/;"	l
c010920c	obj/kernel.asm	/^c010920c:	55                   	push   %ebp$/;"	l
c010920d	obj/kernel.asm	/^c010920d:	89 e5                	mov    %esp,%ebp$/;"	l
c010920f	obj/kernel.asm	/^c010920f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109212	obj/kernel.asm	/^c0109212:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109215	obj/kernel.asm	/^c0109215:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109219	obj/kernel.asm	/^c0109219:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0109220	obj/kernel.asm	/^c0109220:	e8 6a ff ff ff       	call   c010918f <test_and_set_bit>$/;"	l
c0109225	obj/kernel.asm	/^c0109225:	85 c0                	test   %eax,%eax$/;"	l
c0109227	obj/kernel.asm	/^c0109227:	0f 94 c0             	sete   %al$/;"	l
c010922a	obj/kernel.asm	/^c010922a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010922d	obj/kernel.asm	/^c010922d:	c9                   	leave  $/;"	l
c010922e	obj/kernel.asm	/^c010922e:	c3                   	ret    $/;"	l
c010922f	obj/kernel.asm	/^c010922f <lock>:$/;"	l
c010922f	obj/kernel.asm	/^c010922f:	55                   	push   %ebp$/;"	l
c0109230	obj/kernel.asm	/^c0109230:	89 e5                	mov    %esp,%ebp$/;"	l
c0109232	obj/kernel.asm	/^c0109232:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109235	obj/kernel.asm	/^c0109235:	eb 05                	jmp    c010923c <lock+0xd>$/;"	l
c0109237	obj/kernel.asm	/^c0109237:	e8 c5 1f 00 00       	call   c010b201 <schedule>$/;"	l
c010923c	obj/kernel.asm	/^c010923c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010923f	obj/kernel.asm	/^c010923f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109242	obj/kernel.asm	/^c0109242:	e8 c5 ff ff ff       	call   c010920c <try_lock>$/;"	l
c0109247	obj/kernel.asm	/^c0109247:	85 c0                	test   %eax,%eax$/;"	l
c0109249	obj/kernel.asm	/^c0109249:	74 ec                	je     c0109237 <lock+0x8>$/;"	l
c010924b	obj/kernel.asm	/^c010924b:	c9                   	leave  $/;"	l
c010924c	obj/kernel.asm	/^c010924c:	c3                   	ret    $/;"	l
c010924d	obj/kernel.asm	/^c010924d <unlock>:$/;"	l
c010924d	obj/kernel.asm	/^c010924d:	55                   	push   %ebp$/;"	l
c010924e	obj/kernel.asm	/^c010924e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109250	obj/kernel.asm	/^c0109250:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109253	obj/kernel.asm	/^c0109253:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109256	obj/kernel.asm	/^c0109256:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010925a	obj/kernel.asm	/^c010925a:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0109261	obj/kernel.asm	/^c0109261:	e8 49 ff ff ff       	call   c01091af <test_and_clear_bit>$/;"	l
c0109266	obj/kernel.asm	/^c0109266:	85 c0                	test   %eax,%eax$/;"	l
c0109268	obj/kernel.asm	/^c0109268:	75 1c                	jne    c0109286 <unlock+0x39>$/;"	l
c010926a	obj/kernel.asm	/^c010926a:	c7 44 24 08 90 e3 10 	movl   $0xc010e390,0x8(%esp)$/;"	l
c0109271	obj/kernel.asm	/^c0109271:	c0 $/;"	l
c0109272	obj/kernel.asm	/^c0109272:	c7 44 24 04 34 00 00 	movl   $0x34,0x4(%esp)$/;"	l
c0109279	obj/kernel.asm	/^c0109279:	00 $/;"	l
c010927a	obj/kernel.asm	/^c010927a:	c7 04 24 a0 e3 10 c0 	movl   $0xc010e3a0,(%esp)$/;"	l
c0109281	obj/kernel.asm	/^c0109281:	e8 54 7b ff ff       	call   c0100dda <__panic>$/;"	l
c0109286	obj/kernel.asm	/^c0109286:	c9                   	leave  $/;"	l
c0109287	obj/kernel.asm	/^c0109287:	c3                   	ret    $/;"	l
c0109288	obj/kernel.asm	/^c0109288 <page2ppn>:$/;"	l
c0109288	obj/kernel.asm	/^c0109288:	55                   	push   %ebp$/;"	l
c0109289	obj/kernel.asm	/^c0109289:	89 e5                	mov    %esp,%ebp$/;"	l
c010928b	obj/kernel.asm	/^c010928b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010928e	obj/kernel.asm	/^c010928e:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c0109293	obj/kernel.asm	/^c0109293:	29 c2                	sub    %eax,%edx$/;"	l
c0109295	obj/kernel.asm	/^c0109295:	89 d0                	mov    %edx,%eax$/;"	l
c0109297	obj/kernel.asm	/^c0109297:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010929a	obj/kernel.asm	/^c010929a:	5d                   	pop    %ebp$/;"	l
c010929b	obj/kernel.asm	/^c010929b:	c3                   	ret    $/;"	l
c010929c	obj/kernel.asm	/^c010929c <page2pa>:$/;"	l
c010929c	obj/kernel.asm	/^c010929c:	55                   	push   %ebp$/;"	l
c010929d	obj/kernel.asm	/^c010929d:	89 e5                	mov    %esp,%ebp$/;"	l
c010929f	obj/kernel.asm	/^c010929f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01092a2	obj/kernel.asm	/^c01092a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092a5	obj/kernel.asm	/^c01092a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01092a8	obj/kernel.asm	/^c01092a8:	e8 db ff ff ff       	call   c0109288 <page2ppn>$/;"	l
c01092ad	obj/kernel.asm	/^c01092ad:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01092b0	obj/kernel.asm	/^c01092b0:	c9                   	leave  $/;"	l
c01092b1	obj/kernel.asm	/^c01092b1:	c3                   	ret    $/;"	l
c01092b2	obj/kernel.asm	/^c01092b2 <pa2page>:$/;"	l
c01092b2	obj/kernel.asm	/^c01092b2:	55                   	push   %ebp$/;"	l
c01092b3	obj/kernel.asm	/^c01092b3:	89 e5                	mov    %esp,%ebp$/;"	l
c01092b5	obj/kernel.asm	/^c01092b5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01092b8	obj/kernel.asm	/^c01092b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092bb	obj/kernel.asm	/^c01092bb:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01092be	obj/kernel.asm	/^c01092be:	89 c2                	mov    %eax,%edx$/;"	l
c01092c0	obj/kernel.asm	/^c01092c0:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c01092c5	obj/kernel.asm	/^c01092c5:	39 c2                	cmp    %eax,%edx$/;"	l
c01092c7	obj/kernel.asm	/^c01092c7:	72 1c                	jb     c01092e5 <pa2page+0x33>$/;"	l
c01092c9	obj/kernel.asm	/^c01092c9:	c7 44 24 08 b4 e3 10 	movl   $0xc010e3b4,0x8(%esp)$/;"	l
c01092d0	obj/kernel.asm	/^c01092d0:	c0 $/;"	l
c01092d1	obj/kernel.asm	/^c01092d1:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c01092d8	obj/kernel.asm	/^c01092d8:	00 $/;"	l
c01092d9	obj/kernel.asm	/^c01092d9:	c7 04 24 d3 e3 10 c0 	movl   $0xc010e3d3,(%esp)$/;"	l
c01092e0	obj/kernel.asm	/^c01092e0:	e8 f5 7a ff ff       	call   c0100dda <__panic>$/;"	l
c01092e5	obj/kernel.asm	/^c01092e5:	a1 90 1e 1b c0       	mov    0xc01b1e90,%eax$/;"	l
c01092ea	obj/kernel.asm	/^c01092ea:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01092ed	obj/kernel.asm	/^c01092ed:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01092f0	obj/kernel.asm	/^c01092f0:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01092f3	obj/kernel.asm	/^c01092f3:	01 d0                	add    %edx,%eax$/;"	l
c01092f5	obj/kernel.asm	/^c01092f5:	c9                   	leave  $/;"	l
c01092f6	obj/kernel.asm	/^c01092f6:	c3                   	ret    $/;"	l
c01092f7	obj/kernel.asm	/^c01092f7 <page2kva>:$/;"	l
c01092f7	obj/kernel.asm	/^c01092f7:	55                   	push   %ebp$/;"	l
c01092f8	obj/kernel.asm	/^c01092f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01092fa	obj/kernel.asm	/^c01092fa:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01092fd	obj/kernel.asm	/^c01092fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109300	obj/kernel.asm	/^c0109300:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109303	obj/kernel.asm	/^c0109303:	e8 94 ff ff ff       	call   c010929c <page2pa>$/;"	l
c0109308	obj/kernel.asm	/^c0109308:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010930b	obj/kernel.asm	/^c010930b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010930e	obj/kernel.asm	/^c010930e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0109311	obj/kernel.asm	/^c0109311:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109314	obj/kernel.asm	/^c0109314:	a1 80 fd 1a c0       	mov    0xc01afd80,%eax$/;"	l
c0109319	obj/kernel.asm	/^c0109319:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010931c	obj/kernel.asm	/^c010931c:	72 23                	jb     c0109341 <page2kva+0x4a>$/;"	l
c010931e	obj/kernel.asm	/^c010931e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109321	obj/kernel.asm	/^c0109321:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109325	obj/kernel.asm	/^c0109325:	c7 44 24 08 e4 e3 10 	movl   $0xc010e3e4,0x8(%esp)$/;"	l
c010932c	obj/kernel.asm	/^c010932c:	c0 $/;"	l
c010932d	obj/kernel.asm	/^c010932d:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0109334	obj/kernel.asm	/^c0109334:	00 $/;"	l
c0109335	obj/kernel.asm	/^c0109335:	c7 04 24 d3 e3 10 c0 	movl   $0xc010e3d3,(%esp)$/;"	l
c010933c	obj/kernel.asm	/^c010933c:	e8 99 7a ff ff       	call   c0100dda <__panic>$/;"	l
c0109341	obj/kernel.asm	/^c0109341:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109344	obj/kernel.asm	/^c0109344:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0109349	obj/kernel.asm	/^c0109349:	c9                   	leave  $/;"	l
c010934a	obj/kernel.asm	/^c010934a:	c3                   	ret    $/;"	l
c010934b	obj/kernel.asm	/^c010934b <kva2page>:$/;"	l
c010934b	obj/kernel.asm	/^c010934b:	55                   	push   %ebp$/;"	l
c010934c	obj/kernel.asm	/^c010934c:	89 e5                	mov    %esp,%ebp$/;"	l
c010934e	obj/kernel.asm	/^c010934e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109351	obj/kernel.asm	/^c0109351:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109354	obj/kernel.asm	/^c0109354:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109357	obj/kernel.asm	/^c0109357:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010935e	obj/kernel.asm	/^c010935e:	77 23                	ja     c0109383 <kva2page+0x38>$/;"	l
c0109360	obj/kernel.asm	/^c0109360:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109363	obj/kernel.asm	/^c0109363:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109367	obj/kernel.asm	/^c0109367:	c7 44 24 08 08 e4 10 	movl   $0xc010e408,0x8(%esp)$/;"	l
c010936e	obj/kernel.asm	/^c010936e:	c0 $/;"	l
c010936f	obj/kernel.asm	/^c010936f:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0109376	obj/kernel.asm	/^c0109376:	00 $/;"	l
c0109377	obj/kernel.asm	/^c0109377:	c7 04 24 d3 e3 10 c0 	movl   $0xc010e3d3,(%esp)$/;"	l
c010937e	obj/kernel.asm	/^c010937e:	e8 57 7a ff ff       	call   c0100dda <__panic>$/;"	l
c0109383	obj/kernel.asm	/^c0109383:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109386	obj/kernel.asm	/^c0109386:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010938b	obj/kernel.asm	/^c010938b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010938e	obj/kernel.asm	/^c010938e:	e8 1f ff ff ff       	call   c01092b2 <pa2page>$/;"	l
c0109393	obj/kernel.asm	/^c0109393:	c9                   	leave  $/;"	l
c0109394	obj/kernel.asm	/^c0109394:	c3                   	ret    $/;"	l
c0109395	obj/kernel.asm	/^c0109395 <mm_count_inc>:$/;"	l
c0109395	obj/kernel.asm	/^c0109395:	55                   	push   %ebp$/;"	l
c0109396	obj/kernel.asm	/^c0109396:	89 e5                	mov    %esp,%ebp$/;"	l
c0109398	obj/kernel.asm	/^c0109398:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010939b	obj/kernel.asm	/^c010939b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010939e	obj/kernel.asm	/^c010939e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01093a1	obj/kernel.asm	/^c01093a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093a4	obj/kernel.asm	/^c01093a4:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c01093a7	obj/kernel.asm	/^c01093a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093aa	obj/kernel.asm	/^c01093aa:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01093ad	obj/kernel.asm	/^c01093ad:	5d                   	pop    %ebp$/;"	l
c01093ae	obj/kernel.asm	/^c01093ae:	c3                   	ret    $/;"	l
c01093af	obj/kernel.asm	/^c01093af <mm_count_dec>:$/;"	l
c01093af	obj/kernel.asm	/^c01093af:	55                   	push   %ebp$/;"	l
c01093b0	obj/kernel.asm	/^c01093b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01093b2	obj/kernel.asm	/^c01093b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093b5	obj/kernel.asm	/^c01093b5:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01093b8	obj/kernel.asm	/^c01093b8:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01093bb	obj/kernel.asm	/^c01093bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093be	obj/kernel.asm	/^c01093be:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c01093c1	obj/kernel.asm	/^c01093c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093c4	obj/kernel.asm	/^c01093c4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01093c7	obj/kernel.asm	/^c01093c7:	5d                   	pop    %ebp$/;"	l
c01093c8	obj/kernel.asm	/^c01093c8:	c3                   	ret    $/;"	l
c01093c9	obj/kernel.asm	/^c01093c9 <lock_mm>:$/;"	l
c01093c9	obj/kernel.asm	/^c01093c9:	55                   	push   %ebp$/;"	l
c01093ca	obj/kernel.asm	/^c01093ca:	89 e5                	mov    %esp,%ebp$/;"	l
c01093cc	obj/kernel.asm	/^c01093cc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01093cf	obj/kernel.asm	/^c01093cf:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01093d3	obj/kernel.asm	/^c01093d3:	74 0e                	je     c01093e3 <lock_mm+0x1a>$/;"	l
c01093d5	obj/kernel.asm	/^c01093d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093d8	obj/kernel.asm	/^c01093d8:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01093db	obj/kernel.asm	/^c01093db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01093de	obj/kernel.asm	/^c01093de:	e8 4c fe ff ff       	call   c010922f <lock>$/;"	l
c01093e3	obj/kernel.asm	/^c01093e3:	c9                   	leave  $/;"	l
c01093e4	obj/kernel.asm	/^c01093e4:	c3                   	ret    $/;"	l
c01093e5	obj/kernel.asm	/^c01093e5 <unlock_mm>:$/;"	l
c01093e5	obj/kernel.asm	/^c01093e5:	55                   	push   %ebp$/;"	l
c01093e6	obj/kernel.asm	/^c01093e6:	89 e5                	mov    %esp,%ebp$/;"	l
c01093e8	obj/kernel.asm	/^c01093e8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01093eb	obj/kernel.asm	/^c01093eb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01093ef	obj/kernel.asm	/^c01093ef:	74 0e                	je     c01093ff <unlock_mm+0x1a>$/;"	l
c01093f1	obj/kernel.asm	/^c01093f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093f4	obj/kernel.asm	/^c01093f4:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01093f7	obj/kernel.asm	/^c01093f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01093fa	obj/kernel.asm	/^c01093fa:	e8 4e fe ff ff       	call   c010924d <unlock>$/;"	l
c01093ff	obj/kernel.asm	/^c01093ff:	c9                   	leave  $/;"	l
c0109400	obj/kernel.asm	/^c0109400:	c3                   	ret    $/;"	l
c0109401	obj/kernel.asm	/^c0109401 <alloc_proc>:$/;"	l
c0109401	obj/kernel.asm	/^c0109401:	55                   	push   %ebp$/;"	l
c0109402	obj/kernel.asm	/^c0109402:	89 e5                	mov    %esp,%ebp$/;"	l
c0109404	obj/kernel.asm	/^c0109404:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109407	obj/kernel.asm	/^c0109407:	c7 04 24 a0 00 00 00 	movl   $0xa0,(%esp)$/;"	l
c010940e	obj/kernel.asm	/^c010940e:	e8 1d b8 ff ff       	call   c0104c30 <kmalloc>$/;"	l
c0109413	obj/kernel.asm	/^c0109413:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109416	obj/kernel.asm	/^c0109416:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010941a	obj/kernel.asm	/^c010941a:	0f 84 05 01 00 00    	je     c0109525 <alloc_proc+0x124>$/;"	l
c0109420	obj/kernel.asm	/^c0109420:	c7 44 24 08 a0 00 00 	movl   $0xa0,0x8(%esp)$/;"	l
c0109427	obj/kernel.asm	/^c0109427:	00 $/;"	l
c0109428	obj/kernel.asm	/^c0109428:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010942f	obj/kernel.asm	/^c010942f:	00 $/;"	l
c0109430	obj/kernel.asm	/^c0109430:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109433	obj/kernel.asm	/^c0109433:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109436	obj/kernel.asm	/^c0109436:	e8 5e 2e 00 00       	call   c010c299 <memset>$/;"	l
c010943b	obj/kernel.asm	/^c010943b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010943e	obj/kernel.asm	/^c010943e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0109444	obj/kernel.asm	/^c0109444:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109447	obj/kernel.asm	/^c0109447:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c010944e	obj/kernel.asm	/^c010944e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109451	obj/kernel.asm	/^c0109451:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0109458	obj/kernel.asm	/^c0109458:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010945b	obj/kernel.asm	/^c010945b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0109462	obj/kernel.asm	/^c0109462:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109465	obj/kernel.asm	/^c0109465:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010946c	obj/kernel.asm	/^c010946c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010946f	obj/kernel.asm	/^c010946f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0109476	obj/kernel.asm	/^c0109476:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109479	obj/kernel.asm	/^c0109479:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0109480	obj/kernel.asm	/^c0109480:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109483	obj/kernel.asm	/^c0109483:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0109486	obj/kernel.asm	/^c0109486:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)$/;"	l
c010948d	obj/kernel.asm	/^c010948d:	00 $/;"	l
c010948e	obj/kernel.asm	/^c010948e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109495	obj/kernel.asm	/^c0109495:	00 $/;"	l
c0109496	obj/kernel.asm	/^c0109496:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109499	obj/kernel.asm	/^c0109499:	e8 fb 2d 00 00       	call   c010c299 <memset>$/;"	l
c010949e	obj/kernel.asm	/^c010949e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094a1	obj/kernel.asm	/^c01094a1:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c01094a8	obj/kernel.asm	/^c01094a8:	8b 15 8c 1e 1b c0    	mov    0xc01b1e8c,%edx$/;"	l
c01094ae	obj/kernel.asm	/^c01094ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094b1	obj/kernel.asm	/^c01094b1:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c01094b4	obj/kernel.asm	/^c01094b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094b7	obj/kernel.asm	/^c01094b7:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c01094be	obj/kernel.asm	/^c01094be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094c1	obj/kernel.asm	/^c01094c1:	83 c0 48             	add    $0x48,%eax$/;"	l
c01094c4	obj/kernel.asm	/^c01094c4:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)$/;"	l
c01094cb	obj/kernel.asm	/^c01094cb:	00 $/;"	l
c01094cc	obj/kernel.asm	/^c01094cc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01094d3	obj/kernel.asm	/^c01094d3:	00 $/;"	l
c01094d4	obj/kernel.asm	/^c01094d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01094d7	obj/kernel.asm	/^c01094d7:	e8 bd 2d 00 00       	call   c010c299 <memset>$/;"	l
c01094dc	obj/kernel.asm	/^c01094dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094df	obj/kernel.asm	/^c01094df:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)$/;"	l
c01094e6	obj/kernel.asm	/^c01094e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094e9	obj/kernel.asm	/^c01094e9:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
c01094f0	obj/kernel.asm	/^c01094f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094f3	obj/kernel.asm	/^c01094f3:	8b 50 78             	mov    0x78(%eax),%edx$/;"	l
c01094f6	obj/kernel.asm	/^c01094f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094f9	obj/kernel.asm	/^c01094f9:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c01094fc	obj/kernel.asm	/^c01094fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094ff	obj/kernel.asm	/^c01094ff:	8b 50 74             	mov    0x74(%eax),%edx$/;"	l
c0109502	obj/kernel.asm	/^c0109502:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109505	obj/kernel.asm	/^c0109505:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109508	obj/kernel.asm	/^c0109508:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010950b	obj/kernel.asm	/^c010950b:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c010950e	obj/kernel.asm	/^c010950e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109511	obj/kernel.asm	/^c0109511:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109514	obj/kernel.asm	/^c0109514:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0109517	obj/kernel.asm	/^c0109517:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010951a	obj/kernel.asm	/^c010951a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010951d	obj/kernel.asm	/^c010951d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109520	obj/kernel.asm	/^c0109520:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109523	obj/kernel.asm	/^c0109523:	89 10                	mov    %edx,(%eax)$/;"	l
c0109525	obj/kernel.asm	/^c0109525:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109528	obj/kernel.asm	/^c0109528:	c9                   	leave  $/;"	l
c0109529	obj/kernel.asm	/^c0109529:	c3                   	ret    $/;"	l
c010952a	obj/kernel.asm	/^c010952a <set_proc_name>:$/;"	l
c010952a	obj/kernel.asm	/^c010952a:	55                   	push   %ebp$/;"	l
c010952b	obj/kernel.asm	/^c010952b:	89 e5                	mov    %esp,%ebp$/;"	l
c010952d	obj/kernel.asm	/^c010952d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109530	obj/kernel.asm	/^c0109530:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109533	obj/kernel.asm	/^c0109533:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109536	obj/kernel.asm	/^c0109536:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c010953d	obj/kernel.asm	/^c010953d:	00 $/;"	l
c010953e	obj/kernel.asm	/^c010953e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109545	obj/kernel.asm	/^c0109545:	00 $/;"	l
c0109546	obj/kernel.asm	/^c0109546:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109549	obj/kernel.asm	/^c0109549:	e8 4b 2d 00 00       	call   c010c299 <memset>$/;"	l
c010954e	obj/kernel.asm	/^c010954e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109551	obj/kernel.asm	/^c0109551:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c0109554	obj/kernel.asm	/^c0109554:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)$/;"	l
c010955b	obj/kernel.asm	/^c010955b:	00 $/;"	l
c010955c	obj/kernel.asm	/^c010955c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010955f	obj/kernel.asm	/^c010955f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109563	obj/kernel.asm	/^c0109563:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109566	obj/kernel.asm	/^c0109566:	e8 10 2e 00 00       	call   c010c37b <memcpy>$/;"	l
c010956b	obj/kernel.asm	/^c010956b:	c9                   	leave  $/;"	l
c010956c	obj/kernel.asm	/^c010956c:	c3                   	ret    $/;"	l
c010956d	obj/kernel.asm	/^c010956d <get_proc_name>:$/;"	l
c010956d	obj/kernel.asm	/^c010956d:	55                   	push   %ebp$/;"	l
c010956e	obj/kernel.asm	/^c010956e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109570	obj/kernel.asm	/^c0109570:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109573	obj/kernel.asm	/^c0109573:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c010957a	obj/kernel.asm	/^c010957a:	00 $/;"	l
c010957b	obj/kernel.asm	/^c010957b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109582	obj/kernel.asm	/^c0109582:	00 $/;"	l
c0109583	obj/kernel.asm	/^c0109583:	c7 04 24 44 1e 1b c0 	movl   $0xc01b1e44,(%esp)$/;"	l
c010958a	obj/kernel.asm	/^c010958a:	e8 0a 2d 00 00       	call   c010c299 <memset>$/;"	l
c010958f	obj/kernel.asm	/^c010958f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109592	obj/kernel.asm	/^c0109592:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109595	obj/kernel.asm	/^c0109595:	c7 44 24 08 0f 00 00 	movl   $0xf,0x8(%esp)$/;"	l
c010959c	obj/kernel.asm	/^c010959c:	00 $/;"	l
c010959d	obj/kernel.asm	/^c010959d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01095a1	obj/kernel.asm	/^c01095a1:	c7 04 24 44 1e 1b c0 	movl   $0xc01b1e44,(%esp)$/;"	l
c01095a8	obj/kernel.asm	/^c01095a8:	e8 ce 2d 00 00       	call   c010c37b <memcpy>$/;"	l
c01095ad	obj/kernel.asm	/^c01095ad:	c9                   	leave  $/;"	l
c01095ae	obj/kernel.asm	/^c01095ae:	c3                   	ret    $/;"	l
c01095af	obj/kernel.asm	/^c01095af <set_links>:$/;"	l
c01095af	obj/kernel.asm	/^c01095af:	55                   	push   %ebp$/;"	l
c01095b0	obj/kernel.asm	/^c01095b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01095b2	obj/kernel.asm	/^c01095b2:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01095b5	obj/kernel.asm	/^c01095b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095b8	obj/kernel.asm	/^c01095b8:	83 c0 58             	add    $0x58,%eax$/;"	l
c01095bb	obj/kernel.asm	/^c01095bb:	c7 45 fc 70 1f 1b c0 	movl   $0xc01b1f70,-0x4(%ebp)$/;"	l
c01095c2	obj/kernel.asm	/^c01095c2:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01095c5	obj/kernel.asm	/^c01095c5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01095c8	obj/kernel.asm	/^c01095c8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01095cb	obj/kernel.asm	/^c01095cb:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01095ce	obj/kernel.asm	/^c01095ce:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01095d1	obj/kernel.asm	/^c01095d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01095d4	obj/kernel.asm	/^c01095d4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01095d7	obj/kernel.asm	/^c01095d7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01095da	obj/kernel.asm	/^c01095da:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01095dd	obj/kernel.asm	/^c01095dd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01095e0	obj/kernel.asm	/^c01095e0:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01095e3	obj/kernel.asm	/^c01095e3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01095e6	obj/kernel.asm	/^c01095e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01095e9	obj/kernel.asm	/^c01095e9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01095ec	obj/kernel.asm	/^c01095ec:	89 10                	mov    %edx,(%eax)$/;"	l
c01095ee	obj/kernel.asm	/^c01095ee:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01095f1	obj/kernel.asm	/^c01095f1:	8b 10                	mov    (%eax),%edx$/;"	l
c01095f3	obj/kernel.asm	/^c01095f3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01095f6	obj/kernel.asm	/^c01095f6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01095f9	obj/kernel.asm	/^c01095f9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01095fc	obj/kernel.asm	/^c01095fc:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01095ff	obj/kernel.asm	/^c01095ff:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109602	obj/kernel.asm	/^c0109602:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109605	obj/kernel.asm	/^c0109605:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0109608	obj/kernel.asm	/^c0109608:	89 10                	mov    %edx,(%eax)$/;"	l
c010960a	obj/kernel.asm	/^c010960a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010960d	obj/kernel.asm	/^c010960d:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
c0109614	obj/kernel.asm	/^c0109614:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109617	obj/kernel.asm	/^c0109617:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010961a	obj/kernel.asm	/^c010961a:	8b 50 70             	mov    0x70(%eax),%edx$/;"	l
c010961d	obj/kernel.asm	/^c010961d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109620	obj/kernel.asm	/^c0109620:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c0109623	obj/kernel.asm	/^c0109623:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109626	obj/kernel.asm	/^c0109626:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0109629	obj/kernel.asm	/^c0109629:	85 c0                	test   %eax,%eax$/;"	l
c010962b	obj/kernel.asm	/^c010962b:	74 0c                	je     c0109639 <set_links+0x8a>$/;"	l
c010962d	obj/kernel.asm	/^c010962d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109630	obj/kernel.asm	/^c0109630:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0109633	obj/kernel.asm	/^c0109633:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109636	obj/kernel.asm	/^c0109636:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0109639	obj/kernel.asm	/^c0109639:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010963c	obj/kernel.asm	/^c010963c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010963f	obj/kernel.asm	/^c010963f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109642	obj/kernel.asm	/^c0109642:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109645	obj/kernel.asm	/^c0109645:	a1 40 1e 1b c0       	mov    0xc01b1e40,%eax$/;"	l
c010964a	obj/kernel.asm	/^c010964a:	83 c0 01             	add    $0x1,%eax$/;"	l
c010964d	obj/kernel.asm	/^c010964d:	a3 40 1e 1b c0       	mov    %eax,0xc01b1e40$/;"	l
c0109652	obj/kernel.asm	/^c0109652:	c9                   	leave  $/;"	l
c0109653	obj/kernel.asm	/^c0109653:	c3                   	ret    $/;"	l
c0109654	obj/kernel.asm	/^c0109654 <remove_links>:$/;"	l
c0109654	obj/kernel.asm	/^c0109654:	55                   	push   %ebp$/;"	l
c0109655	obj/kernel.asm	/^c0109655:	89 e5                	mov    %esp,%ebp$/;"	l
c0109657	obj/kernel.asm	/^c0109657:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010965a	obj/kernel.asm	/^c010965a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010965d	obj/kernel.asm	/^c010965d:	83 c0 58             	add    $0x58,%eax$/;"	l
c0109660	obj/kernel.asm	/^c0109660:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109663	obj/kernel.asm	/^c0109663:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109666	obj/kernel.asm	/^c0109666:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109669	obj/kernel.asm	/^c0109669:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010966c	obj/kernel.asm	/^c010966c:	8b 12                	mov    (%edx),%edx$/;"	l
c010966e	obj/kernel.asm	/^c010966e:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c0109671	obj/kernel.asm	/^c0109671:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109674	obj/kernel.asm	/^c0109674:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109677	obj/kernel.asm	/^c0109677:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010967a	obj/kernel.asm	/^c010967a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010967d	obj/kernel.asm	/^c010967d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109680	obj/kernel.asm	/^c0109680:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0109683	obj/kernel.asm	/^c0109683:	89 10                	mov    %edx,(%eax)$/;"	l
c0109685	obj/kernel.asm	/^c0109685:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109688	obj/kernel.asm	/^c0109688:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010968b	obj/kernel.asm	/^c010968b:	85 c0                	test   %eax,%eax$/;"	l
c010968d	obj/kernel.asm	/^c010968d:	74 0f                	je     c010969e <remove_links+0x4a>$/;"	l
c010968f	obj/kernel.asm	/^c010968f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109692	obj/kernel.asm	/^c0109692:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0109695	obj/kernel.asm	/^c0109695:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109698	obj/kernel.asm	/^c0109698:	8b 52 74             	mov    0x74(%edx),%edx$/;"	l
c010969b	obj/kernel.asm	/^c010969b:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c010969e	obj/kernel.asm	/^c010969e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096a1	obj/kernel.asm	/^c01096a1:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c01096a4	obj/kernel.asm	/^c01096a4:	85 c0                	test   %eax,%eax$/;"	l
c01096a6	obj/kernel.asm	/^c01096a6:	74 11                	je     c01096b9 <remove_links+0x65>$/;"	l
c01096a8	obj/kernel.asm	/^c01096a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096ab	obj/kernel.asm	/^c01096ab:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c01096ae	obj/kernel.asm	/^c01096ae:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01096b1	obj/kernel.asm	/^c01096b1:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c01096b4	obj/kernel.asm	/^c01096b4:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c01096b7	obj/kernel.asm	/^c01096b7:	eb 0f                	jmp    c01096c8 <remove_links+0x74>$/;"	l
c01096b9	obj/kernel.asm	/^c01096b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096bc	obj/kernel.asm	/^c01096bc:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01096bf	obj/kernel.asm	/^c01096bf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01096c2	obj/kernel.asm	/^c01096c2:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c01096c5	obj/kernel.asm	/^c01096c5:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c01096c8	obj/kernel.asm	/^c01096c8:	a1 40 1e 1b c0       	mov    0xc01b1e40,%eax$/;"	l
c01096cd	obj/kernel.asm	/^c01096cd:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01096d0	obj/kernel.asm	/^c01096d0:	a3 40 1e 1b c0       	mov    %eax,0xc01b1e40$/;"	l
c01096d5	obj/kernel.asm	/^c01096d5:	c9                   	leave  $/;"	l
c01096d6	obj/kernel.asm	/^c01096d6:	c3                   	ret    $/;"	l
c01096d7	obj/kernel.asm	/^c01096d7 <get_pid>:$/;"	l
c01096d7	obj/kernel.asm	/^c01096d7:	55                   	push   %ebp$/;"	l
c01096d8	obj/kernel.asm	/^c01096d8:	89 e5                	mov    %esp,%ebp$/;"	l
c01096da	obj/kernel.asm	/^c01096da:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01096dd	obj/kernel.asm	/^c01096dd:	c7 45 f8 70 1f 1b c0 	movl   $0xc01b1f70,-0x8(%ebp)$/;"	l
c01096e4	obj/kernel.asm	/^c01096e4:	a1 80 da 12 c0       	mov    0xc012da80,%eax$/;"	l
c01096e9	obj/kernel.asm	/^c01096e9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01096ec	obj/kernel.asm	/^c01096ec:	a3 80 da 12 c0       	mov    %eax,0xc012da80$/;"	l
c01096f1	obj/kernel.asm	/^c01096f1:	a1 80 da 12 c0       	mov    0xc012da80,%eax$/;"	l
c01096f6	obj/kernel.asm	/^c01096f6:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c01096fb	obj/kernel.asm	/^c01096fb:	7e 0c                	jle    c0109709 <get_pid+0x32>$/;"	l
c01096fd	obj/kernel.asm	/^c01096fd:	c7 05 80 da 12 c0 01 	movl   $0x1,0xc012da80$/;"	l
c0109704	obj/kernel.asm	/^c0109704:	00 00 00 $/;"	l
c0109707	obj/kernel.asm	/^c0109707:	eb 13                	jmp    c010971c <get_pid+0x45>$/;"	l
c0109709	obj/kernel.asm	/^c0109709:	8b 15 80 da 12 c0    	mov    0xc012da80,%edx$/;"	l
c010970f	obj/kernel.asm	/^c010970f:	a1 84 da 12 c0       	mov    0xc012da84,%eax$/;"	l
c0109714	obj/kernel.asm	/^c0109714:	39 c2                	cmp    %eax,%edx$/;"	l
c0109716	obj/kernel.asm	/^c0109716:	0f 8c ac 00 00 00    	jl     c01097c8 <get_pid+0xf1>$/;"	l
c010971c	obj/kernel.asm	/^c010971c:	c7 05 84 da 12 c0 00 	movl   $0x2000,0xc012da84$/;"	l
c0109723	obj/kernel.asm	/^c0109723:	20 00 00 $/;"	l
c0109726	obj/kernel.asm	/^c0109726:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109729	obj/kernel.asm	/^c0109729:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010972c	obj/kernel.asm	/^c010972c:	eb 7f                	jmp    c01097ad <get_pid+0xd6>$/;"	l
c010972e	obj/kernel.asm	/^c010972e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109731	obj/kernel.asm	/^c0109731:	83 e8 58             	sub    $0x58,%eax$/;"	l
c0109734	obj/kernel.asm	/^c0109734:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109737	obj/kernel.asm	/^c0109737:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010973a	obj/kernel.asm	/^c010973a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010973d	obj/kernel.asm	/^c010973d:	a1 80 da 12 c0       	mov    0xc012da80,%eax$/;"	l
c0109742	obj/kernel.asm	/^c0109742:	39 c2                	cmp    %eax,%edx$/;"	l
c0109744	obj/kernel.asm	/^c0109744:	75 3e                	jne    c0109784 <get_pid+0xad>$/;"	l
c0109746	obj/kernel.asm	/^c0109746:	a1 80 da 12 c0       	mov    0xc012da80,%eax$/;"	l
c010974b	obj/kernel.asm	/^c010974b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010974e	obj/kernel.asm	/^c010974e:	a3 80 da 12 c0       	mov    %eax,0xc012da80$/;"	l
c0109753	obj/kernel.asm	/^c0109753:	8b 15 80 da 12 c0    	mov    0xc012da80,%edx$/;"	l
c0109759	obj/kernel.asm	/^c0109759:	a1 84 da 12 c0       	mov    0xc012da84,%eax$/;"	l
c010975e	obj/kernel.asm	/^c010975e:	39 c2                	cmp    %eax,%edx$/;"	l
c0109760	obj/kernel.asm	/^c0109760:	7c 4b                	jl     c01097ad <get_pid+0xd6>$/;"	l
c0109762	obj/kernel.asm	/^c0109762:	a1 80 da 12 c0       	mov    0xc012da80,%eax$/;"	l
c0109767	obj/kernel.asm	/^c0109767:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010976c	obj/kernel.asm	/^c010976c:	7e 0a                	jle    c0109778 <get_pid+0xa1>$/;"	l
c010976e	obj/kernel.asm	/^c010976e:	c7 05 80 da 12 c0 01 	movl   $0x1,0xc012da80$/;"	l
c0109775	obj/kernel.asm	/^c0109775:	00 00 00 $/;"	l
c0109778	obj/kernel.asm	/^c0109778:	c7 05 84 da 12 c0 00 	movl   $0x2000,0xc012da84$/;"	l
c010977f	obj/kernel.asm	/^c010977f:	20 00 00 $/;"	l
c0109782	obj/kernel.asm	/^c0109782:	eb a2                	jmp    c0109726 <get_pid+0x4f>$/;"	l
c0109784	obj/kernel.asm	/^c0109784:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109787	obj/kernel.asm	/^c0109787:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010978a	obj/kernel.asm	/^c010978a:	a1 80 da 12 c0       	mov    0xc012da80,%eax$/;"	l
c010978f	obj/kernel.asm	/^c010978f:	39 c2                	cmp    %eax,%edx$/;"	l
c0109791	obj/kernel.asm	/^c0109791:	7e 1a                	jle    c01097ad <get_pid+0xd6>$/;"	l
c0109793	obj/kernel.asm	/^c0109793:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109796	obj/kernel.asm	/^c0109796:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109799	obj/kernel.asm	/^c0109799:	a1 84 da 12 c0       	mov    0xc012da84,%eax$/;"	l
c010979e	obj/kernel.asm	/^c010979e:	39 c2                	cmp    %eax,%edx$/;"	l
c01097a0	obj/kernel.asm	/^c01097a0:	7d 0b                	jge    c01097ad <get_pid+0xd6>$/;"	l
c01097a2	obj/kernel.asm	/^c01097a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01097a5	obj/kernel.asm	/^c01097a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01097a8	obj/kernel.asm	/^c01097a8:	a3 84 da 12 c0       	mov    %eax,0xc012da84$/;"	l
c01097ad	obj/kernel.asm	/^c01097ad:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01097b0	obj/kernel.asm	/^c01097b0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01097b3	obj/kernel.asm	/^c01097b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01097b6	obj/kernel.asm	/^c01097b6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01097b9	obj/kernel.asm	/^c01097b9:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01097bc	obj/kernel.asm	/^c01097bc:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01097bf	obj/kernel.asm	/^c01097bf:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01097c2	obj/kernel.asm	/^c01097c2:	0f 85 66 ff ff ff    	jne    c010972e <get_pid+0x57>$/;"	l
c01097c8	obj/kernel.asm	/^c01097c8:	a1 80 da 12 c0       	mov    0xc012da80,%eax$/;"	l
c01097cd	obj/kernel.asm	/^c01097cd:	c9                   	leave  $/;"	l
c01097ce	obj/kernel.asm	/^c01097ce:	c3                   	ret    $/;"	l
c01097cf	obj/kernel.asm	/^c01097cf <proc_run>:$/;"	l
c01097cf	obj/kernel.asm	/^c01097cf:	55                   	push   %ebp$/;"	l
c01097d0	obj/kernel.asm	/^c01097d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01097d2	obj/kernel.asm	/^c01097d2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01097d5	obj/kernel.asm	/^c01097d5:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c01097da	obj/kernel.asm	/^c01097da:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c01097dd	obj/kernel.asm	/^c01097dd:	74 63                	je     c0109842 <proc_run+0x73>$/;"	l
c01097df	obj/kernel.asm	/^c01097df:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c01097e4	obj/kernel.asm	/^c01097e4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01097e7	obj/kernel.asm	/^c01097e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097ea	obj/kernel.asm	/^c01097ea:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01097ed	obj/kernel.asm	/^c01097ed:	e8 dd f9 ff ff       	call   c01091cf <__intr_save>$/;"	l
c01097f2	obj/kernel.asm	/^c01097f2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01097f5	obj/kernel.asm	/^c01097f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097f8	obj/kernel.asm	/^c01097f8:	a3 28 fe 1a c0       	mov    %eax,0xc01afe28$/;"	l
c01097fd	obj/kernel.asm	/^c01097fd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109800	obj/kernel.asm	/^c0109800:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109803	obj/kernel.asm	/^c0109803:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c0109808	obj/kernel.asm	/^c0109808:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010980b	obj/kernel.asm	/^c010980b:	e8 47 b7 ff ff       	call   c0104f57 <load_esp0>$/;"	l
c0109810	obj/kernel.asm	/^c0109810:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109813	obj/kernel.asm	/^c0109813:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0109816	obj/kernel.asm	/^c0109816:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109819	obj/kernel.asm	/^c0109819:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010981c	obj/kernel.asm	/^c010981c:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010981f	obj/kernel.asm	/^c010981f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109822	obj/kernel.asm	/^c0109822:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c0109825	obj/kernel.asm	/^c0109825:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109828	obj/kernel.asm	/^c0109828:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010982b	obj/kernel.asm	/^c010982b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010982f	obj/kernel.asm	/^c010982f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109832	obj/kernel.asm	/^c0109832:	e8 93 15 00 00       	call   c010adca <switch_to>$/;"	l
c0109837	obj/kernel.asm	/^c0109837:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010983a	obj/kernel.asm	/^c010983a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010983d	obj/kernel.asm	/^c010983d:	e8 b7 f9 ff ff       	call   c01091f9 <__intr_restore>$/;"	l
c0109842	obj/kernel.asm	/^c0109842:	c9                   	leave  $/;"	l
c0109843	obj/kernel.asm	/^c0109843:	c3                   	ret    $/;"	l
c0109844	obj/kernel.asm	/^c0109844 <forkret>:$/;"	l
c0109844	obj/kernel.asm	/^c0109844:	55                   	push   %ebp$/;"	l
c0109845	obj/kernel.asm	/^c0109845:	89 e5                	mov    %esp,%ebp$/;"	l
c0109847	obj/kernel.asm	/^c0109847:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010984a	obj/kernel.asm	/^c010984a:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010984f	obj/kernel.asm	/^c010984f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109852	obj/kernel.asm	/^c0109852:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109855	obj/kernel.asm	/^c0109855:	e8 5d 92 ff ff       	call   c0102ab7 <forkrets>$/;"	l
c010985a	obj/kernel.asm	/^c010985a:	c9                   	leave  $/;"	l
c010985b	obj/kernel.asm	/^c010985b:	c3                   	ret    $/;"	l
c010985c	obj/kernel.asm	/^c010985c <hash_proc>:$/;"	l
c010985c	obj/kernel.asm	/^c010985c:	55                   	push   %ebp$/;"	l
c010985d	obj/kernel.asm	/^c010985d:	89 e5                	mov    %esp,%ebp$/;"	l
c010985f	obj/kernel.asm	/^c010985f:	53                   	push   %ebx$/;"	l
c0109860	obj/kernel.asm	/^c0109860:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0109863	obj/kernel.asm	/^c0109863:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109866	obj/kernel.asm	/^c0109866:	8d 58 60             	lea    0x60(%eax),%ebx$/;"	l
c0109869	obj/kernel.asm	/^c0109869:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010986c	obj/kernel.asm	/^c010986c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010986f	obj/kernel.asm	/^c010986f:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c0109876	obj/kernel.asm	/^c0109876:	00 $/;"	l
c0109877	obj/kernel.asm	/^c0109877:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010987a	obj/kernel.asm	/^c010987a:	e8 6d 1f 00 00       	call   c010b7ec <hash32>$/;"	l
c010987f	obj/kernel.asm	/^c010987f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109882	obj/kernel.asm	/^c0109882:	05 40 fe 1a c0       	add    $0xc01afe40,%eax$/;"	l
c0109887	obj/kernel.asm	/^c0109887:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010988a	obj/kernel.asm	/^c010988a:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c010988d	obj/kernel.asm	/^c010988d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109893	obj/kernel.asm	/^c0109893:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109896	obj/kernel.asm	/^c0109896:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109899	obj/kernel.asm	/^c0109899:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010989c	obj/kernel.asm	/^c010989c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010989f	obj/kernel.asm	/^c010989f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01098a2	obj/kernel.asm	/^c01098a2:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01098a5	obj/kernel.asm	/^c01098a5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01098a8	obj/kernel.asm	/^c01098a8:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c01098ab	obj/kernel.asm	/^c01098ab:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01098ae	obj/kernel.asm	/^c01098ae:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01098b1	obj/kernel.asm	/^c01098b1:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01098b4	obj/kernel.asm	/^c01098b4:	89 10                	mov    %edx,(%eax)$/;"	l
c01098b6	obj/kernel.asm	/^c01098b6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01098b9	obj/kernel.asm	/^c01098b9:	8b 10                	mov    (%eax),%edx$/;"	l
c01098bb	obj/kernel.asm	/^c01098bb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01098be	obj/kernel.asm	/^c01098be:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01098c1	obj/kernel.asm	/^c01098c1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01098c4	obj/kernel.asm	/^c01098c4:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01098c7	obj/kernel.asm	/^c01098c7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01098ca	obj/kernel.asm	/^c01098ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01098cd	obj/kernel.asm	/^c01098cd:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01098d0	obj/kernel.asm	/^c01098d0:	89 10                	mov    %edx,(%eax)$/;"	l
c01098d2	obj/kernel.asm	/^c01098d2:	83 c4 34             	add    $0x34,%esp$/;"	l
c01098d5	obj/kernel.asm	/^c01098d5:	5b                   	pop    %ebx$/;"	l
c01098d6	obj/kernel.asm	/^c01098d6:	5d                   	pop    %ebp$/;"	l
c01098d7	obj/kernel.asm	/^c01098d7:	c3                   	ret    $/;"	l
c01098d8	obj/kernel.asm	/^c01098d8 <unhash_proc>:$/;"	l
c01098d8	obj/kernel.asm	/^c01098d8:	55                   	push   %ebp$/;"	l
c01098d9	obj/kernel.asm	/^c01098d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01098db	obj/kernel.asm	/^c01098db:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01098de	obj/kernel.asm	/^c01098de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098e1	obj/kernel.asm	/^c01098e1:	83 c0 60             	add    $0x60,%eax$/;"	l
c01098e4	obj/kernel.asm	/^c01098e4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01098e7	obj/kernel.asm	/^c01098e7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01098ea	obj/kernel.asm	/^c01098ea:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01098ed	obj/kernel.asm	/^c01098ed:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01098f0	obj/kernel.asm	/^c01098f0:	8b 12                	mov    (%edx),%edx$/;"	l
c01098f2	obj/kernel.asm	/^c01098f2:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01098f5	obj/kernel.asm	/^c01098f5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01098f8	obj/kernel.asm	/^c01098f8:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01098fb	obj/kernel.asm	/^c01098fb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01098fe	obj/kernel.asm	/^c01098fe:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109901	obj/kernel.asm	/^c0109901:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109904	obj/kernel.asm	/^c0109904:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0109907	obj/kernel.asm	/^c0109907:	89 10                	mov    %edx,(%eax)$/;"	l
c0109909	obj/kernel.asm	/^c0109909:	c9                   	leave  $/;"	l
c010990a	obj/kernel.asm	/^c010990a:	c3                   	ret    $/;"	l
c010990b	obj/kernel.asm	/^c010990b <find_proc>:$/;"	l
c010990b	obj/kernel.asm	/^c010990b:	55                   	push   %ebp$/;"	l
c010990c	obj/kernel.asm	/^c010990c:	89 e5                	mov    %esp,%ebp$/;"	l
c010990e	obj/kernel.asm	/^c010990e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109911	obj/kernel.asm	/^c0109911:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109915	obj/kernel.asm	/^c0109915:	7e 5f                	jle    c0109976 <find_proc+0x6b>$/;"	l
c0109917	obj/kernel.asm	/^c0109917:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c010991e	obj/kernel.asm	/^c010991e:	7f 56                	jg     c0109976 <find_proc+0x6b>$/;"	l
c0109920	obj/kernel.asm	/^c0109920:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109923	obj/kernel.asm	/^c0109923:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c010992a	obj/kernel.asm	/^c010992a:	00 $/;"	l
c010992b	obj/kernel.asm	/^c010992b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010992e	obj/kernel.asm	/^c010992e:	e8 b9 1e 00 00       	call   c010b7ec <hash32>$/;"	l
c0109933	obj/kernel.asm	/^c0109933:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109936	obj/kernel.asm	/^c0109936:	05 40 fe 1a c0       	add    $0xc01afe40,%eax$/;"	l
c010993b	obj/kernel.asm	/^c010993b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010993e	obj/kernel.asm	/^c010993e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109941	obj/kernel.asm	/^c0109941:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109944	obj/kernel.asm	/^c0109944:	eb 19                	jmp    c010995f <find_proc+0x54>$/;"	l
c0109946	obj/kernel.asm	/^c0109946:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109949	obj/kernel.asm	/^c0109949:	83 e8 60             	sub    $0x60,%eax$/;"	l
c010994c	obj/kernel.asm	/^c010994c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010994f	obj/kernel.asm	/^c010994f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109952	obj/kernel.asm	/^c0109952:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109955	obj/kernel.asm	/^c0109955:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109958	obj/kernel.asm	/^c0109958:	75 05                	jne    c010995f <find_proc+0x54>$/;"	l
c010995a	obj/kernel.asm	/^c010995a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010995d	obj/kernel.asm	/^c010995d:	eb 1c                	jmp    c010997b <find_proc+0x70>$/;"	l
c010995f	obj/kernel.asm	/^c010995f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109962	obj/kernel.asm	/^c0109962:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109965	obj/kernel.asm	/^c0109965:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109968	obj/kernel.asm	/^c0109968:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010996b	obj/kernel.asm	/^c010996b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010996e	obj/kernel.asm	/^c010996e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109971	obj/kernel.asm	/^c0109971:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0109974	obj/kernel.asm	/^c0109974:	75 d0                	jne    c0109946 <find_proc+0x3b>$/;"	l
c0109976	obj/kernel.asm	/^c0109976:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010997b	obj/kernel.asm	/^c010997b:	c9                   	leave  $/;"	l
c010997c	obj/kernel.asm	/^c010997c:	c3                   	ret    $/;"	l
c010997d	obj/kernel.asm	/^c010997d <kernel_thread>:$/;"	l
c010997d	obj/kernel.asm	/^c010997d:	55                   	push   %ebp$/;"	l
c010997e	obj/kernel.asm	/^c010997e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109980	obj/kernel.asm	/^c0109980:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0109983	obj/kernel.asm	/^c0109983:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010998a	obj/kernel.asm	/^c010998a:	00 $/;"	l
c010998b	obj/kernel.asm	/^c010998b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109992	obj/kernel.asm	/^c0109992:	00 $/;"	l
c0109993	obj/kernel.asm	/^c0109993:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c0109996	obj/kernel.asm	/^c0109996:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109999	obj/kernel.asm	/^c0109999:	e8 fb 28 00 00       	call   c010c299 <memset>$/;"	l
c010999e	obj/kernel.asm	/^c010999e:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c01099a4	obj/kernel.asm	/^c01099a4:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c01099aa	obj/kernel.asm	/^c01099aa:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c01099ae	obj/kernel.asm	/^c01099ae:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c01099b2	obj/kernel.asm	/^c01099b2:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c01099b6	obj/kernel.asm	/^c01099b6:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c01099ba	obj/kernel.asm	/^c01099ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099bd	obj/kernel.asm	/^c01099bd:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01099c0	obj/kernel.asm	/^c01099c0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01099c3	obj/kernel.asm	/^c01099c3:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01099c6	obj/kernel.asm	/^c01099c6:	b8 86 91 10 c0       	mov    $0xc0109186,%eax$/;"	l
c01099cb	obj/kernel.asm	/^c01099cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01099ce	obj/kernel.asm	/^c01099ce:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01099d1	obj/kernel.asm	/^c01099d1:	80 cc 01             	or     $0x1,%ah$/;"	l
c01099d4	obj/kernel.asm	/^c01099d4:	89 c2                	mov    %eax,%edx$/;"	l
c01099d6	obj/kernel.asm	/^c01099d6:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c01099d9	obj/kernel.asm	/^c01099d9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01099dd	obj/kernel.asm	/^c01099dd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01099e4	obj/kernel.asm	/^c01099e4:	00 $/;"	l
c01099e5	obj/kernel.asm	/^c01099e5:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01099e8	obj/kernel.asm	/^c01099e8:	e8 25 03 00 00       	call   c0109d12 <do_fork>$/;"	l
c01099ed	obj/kernel.asm	/^c01099ed:	c9                   	leave  $/;"	l
c01099ee	obj/kernel.asm	/^c01099ee:	c3                   	ret    $/;"	l
c01099ef	obj/kernel.asm	/^c01099ef <setup_kstack>:$/;"	l
c01099ef	obj/kernel.asm	/^c01099ef:	55                   	push   %ebp$/;"	l
c01099f0	obj/kernel.asm	/^c01099f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01099f2	obj/kernel.asm	/^c01099f2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01099f5	obj/kernel.asm	/^c01099f5:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c01099fc	obj/kernel.asm	/^c01099fc:	e8 a4 b6 ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c0109a01	obj/kernel.asm	/^c0109a01:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109a04	obj/kernel.asm	/^c0109a04:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109a08	obj/kernel.asm	/^c0109a08:	74 1a                	je     c0109a24 <setup_kstack+0x35>$/;"	l
c0109a0a	obj/kernel.asm	/^c0109a0a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a0d	obj/kernel.asm	/^c0109a0d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a10	obj/kernel.asm	/^c0109a10:	e8 e2 f8 ff ff       	call   c01092f7 <page2kva>$/;"	l
c0109a15	obj/kernel.asm	/^c0109a15:	89 c2                	mov    %eax,%edx$/;"	l
c0109a17	obj/kernel.asm	/^c0109a17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a1a	obj/kernel.asm	/^c0109a1a:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0109a1d	obj/kernel.asm	/^c0109a1d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109a22	obj/kernel.asm	/^c0109a22:	eb 05                	jmp    c0109a29 <setup_kstack+0x3a>$/;"	l
c0109a24	obj/kernel.asm	/^c0109a24:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109a29	obj/kernel.asm	/^c0109a29:	c9                   	leave  $/;"	l
c0109a2a	obj/kernel.asm	/^c0109a2a:	c3                   	ret    $/;"	l
c0109a2b	obj/kernel.asm	/^c0109a2b <put_kstack>:$/;"	l
c0109a2b	obj/kernel.asm	/^c0109a2b:	55                   	push   %ebp$/;"	l
c0109a2c	obj/kernel.asm	/^c0109a2c:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a2e	obj/kernel.asm	/^c0109a2e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109a31	obj/kernel.asm	/^c0109a31:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a34	obj/kernel.asm	/^c0109a34:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109a37	obj/kernel.asm	/^c0109a37:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a3a	obj/kernel.asm	/^c0109a3a:	e8 0c f9 ff ff       	call   c010934b <kva2page>$/;"	l
c0109a3f	obj/kernel.asm	/^c0109a3f:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c0109a46	obj/kernel.asm	/^c0109a46:	00 $/;"	l
c0109a47	obj/kernel.asm	/^c0109a47:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a4a	obj/kernel.asm	/^c0109a4a:	e8 c1 b6 ff ff       	call   c0105110 <free_pages>$/;"	l
c0109a4f	obj/kernel.asm	/^c0109a4f:	c9                   	leave  $/;"	l
c0109a50	obj/kernel.asm	/^c0109a50:	c3                   	ret    $/;"	l
c0109a51	obj/kernel.asm	/^c0109a51 <setup_pgdir>:$/;"	l
c0109a51	obj/kernel.asm	/^c0109a51:	55                   	push   %ebp$/;"	l
c0109a52	obj/kernel.asm	/^c0109a52:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a54	obj/kernel.asm	/^c0109a54:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109a57	obj/kernel.asm	/^c0109a57:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109a5e	obj/kernel.asm	/^c0109a5e:	e8 42 b6 ff ff       	call   c01050a5 <alloc_pages>$/;"	l
c0109a63	obj/kernel.asm	/^c0109a63:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109a66	obj/kernel.asm	/^c0109a66:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109a6a	obj/kernel.asm	/^c0109a6a:	75 0a                	jne    c0109a76 <setup_pgdir+0x25>$/;"	l
c0109a6c	obj/kernel.asm	/^c0109a6c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109a71	obj/kernel.asm	/^c0109a71:	e9 80 00 00 00       	jmp    c0109af6 <setup_pgdir+0xa5>$/;"	l
c0109a76	obj/kernel.asm	/^c0109a76:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a79	obj/kernel.asm	/^c0109a79:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a7c	obj/kernel.asm	/^c0109a7c:	e8 76 f8 ff ff       	call   c01092f7 <page2kva>$/;"	l
c0109a81	obj/kernel.asm	/^c0109a81:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109a84	obj/kernel.asm	/^c0109a84:	a1 84 fd 1a c0       	mov    0xc01afd84,%eax$/;"	l
c0109a89	obj/kernel.asm	/^c0109a89:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0109a90	obj/kernel.asm	/^c0109a90:	00 $/;"	l
c0109a91	obj/kernel.asm	/^c0109a91:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109a95	obj/kernel.asm	/^c0109a95:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109a98	obj/kernel.asm	/^c0109a98:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a9b	obj/kernel.asm	/^c0109a9b:	e8 db 28 00 00       	call   c010c37b <memcpy>$/;"	l
c0109aa0	obj/kernel.asm	/^c0109aa0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109aa3	obj/kernel.asm	/^c0109aa3:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0109aa9	obj/kernel.asm	/^c0109aa9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109aac	obj/kernel.asm	/^c0109aac:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109aaf	obj/kernel.asm	/^c0109aaf:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c0109ab6	obj/kernel.asm	/^c0109ab6:	77 23                	ja     c0109adb <setup_pgdir+0x8a>$/;"	l
c0109ab8	obj/kernel.asm	/^c0109ab8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109abb	obj/kernel.asm	/^c0109abb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109abf	obj/kernel.asm	/^c0109abf:	c7 44 24 08 08 e4 10 	movl   $0xc010e408,0x8(%esp)$/;"	l
c0109ac6	obj/kernel.asm	/^c0109ac6:	c0 $/;"	l
c0109ac7	obj/kernel.asm	/^c0109ac7:	c7 44 24 04 3a 01 00 	movl   $0x13a,0x4(%esp)$/;"	l
c0109ace	obj/kernel.asm	/^c0109ace:	00 $/;"	l
c0109acf	obj/kernel.asm	/^c0109acf:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c0109ad6	obj/kernel.asm	/^c0109ad6:	e8 ff 72 ff ff       	call   c0100dda <__panic>$/;"	l
c0109adb	obj/kernel.asm	/^c0109adb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109ade	obj/kernel.asm	/^c0109ade:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0109ae3	obj/kernel.asm	/^c0109ae3:	83 c8 03             	or     $0x3,%eax$/;"	l
c0109ae6	obj/kernel.asm	/^c0109ae6:	89 02                	mov    %eax,(%edx)$/;"	l
c0109ae8	obj/kernel.asm	/^c0109ae8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109aeb	obj/kernel.asm	/^c0109aeb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0109aee	obj/kernel.asm	/^c0109aee:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0109af1	obj/kernel.asm	/^c0109af1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109af6	obj/kernel.asm	/^c0109af6:	c9                   	leave  $/;"	l
c0109af7	obj/kernel.asm	/^c0109af7:	c3                   	ret    $/;"	l
c0109af8	obj/kernel.asm	/^c0109af8 <put_pgdir>:$/;"	l
c0109af8	obj/kernel.asm	/^c0109af8:	55                   	push   %ebp$/;"	l
c0109af9	obj/kernel.asm	/^c0109af9:	89 e5                	mov    %esp,%ebp$/;"	l
c0109afb	obj/kernel.asm	/^c0109afb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109afe	obj/kernel.asm	/^c0109afe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b01	obj/kernel.asm	/^c0109b01:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109b04	obj/kernel.asm	/^c0109b04:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b07	obj/kernel.asm	/^c0109b07:	e8 3f f8 ff ff       	call   c010934b <kva2page>$/;"	l
c0109b0c	obj/kernel.asm	/^c0109b0c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109b13	obj/kernel.asm	/^c0109b13:	00 $/;"	l
c0109b14	obj/kernel.asm	/^c0109b14:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b17	obj/kernel.asm	/^c0109b17:	e8 f4 b5 ff ff       	call   c0105110 <free_pages>$/;"	l
c0109b1c	obj/kernel.asm	/^c0109b1c:	c9                   	leave  $/;"	l
c0109b1d	obj/kernel.asm	/^c0109b1d:	c3                   	ret    $/;"	l
c0109b1e	obj/kernel.asm	/^c0109b1e <copy_mm>:$/;"	l
c0109b1e	obj/kernel.asm	/^c0109b1e:	55                   	push   %ebp$/;"	l
c0109b1f	obj/kernel.asm	/^c0109b1f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109b21	obj/kernel.asm	/^c0109b21:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109b24	obj/kernel.asm	/^c0109b24:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109b29	obj/kernel.asm	/^c0109b29:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109b2c	obj/kernel.asm	/^c0109b2c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109b2f	obj/kernel.asm	/^c0109b2f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0109b33	obj/kernel.asm	/^c0109b33:	75 0a                	jne    c0109b3f <copy_mm+0x21>$/;"	l
c0109b35	obj/kernel.asm	/^c0109b35:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109b3a	obj/kernel.asm	/^c0109b3a:	e9 f9 00 00 00       	jmp    c0109c38 <copy_mm+0x11a>$/;"	l
c0109b3f	obj/kernel.asm	/^c0109b3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b42	obj/kernel.asm	/^c0109b42:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c0109b47	obj/kernel.asm	/^c0109b47:	85 c0                	test   %eax,%eax$/;"	l
c0109b49	obj/kernel.asm	/^c0109b49:	74 08                	je     c0109b53 <copy_mm+0x35>$/;"	l
c0109b4b	obj/kernel.asm	/^c0109b4b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109b4e	obj/kernel.asm	/^c0109b4e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b51	obj/kernel.asm	/^c0109b51:	eb 78                	jmp    c0109bcb <copy_mm+0xad>$/;"	l
c0109b53	obj/kernel.asm	/^c0109b53:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c0109b5a	obj/kernel.asm	/^c0109b5a:	e8 ed e2 ff ff       	call   c0107e4c <mm_create>$/;"	l
c0109b5f	obj/kernel.asm	/^c0109b5f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b62	obj/kernel.asm	/^c0109b62:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109b66	obj/kernel.asm	/^c0109b66:	75 05                	jne    c0109b6d <copy_mm+0x4f>$/;"	l
c0109b68	obj/kernel.asm	/^c0109b68:	e9 c8 00 00 00       	jmp    c0109c35 <copy_mm+0x117>$/;"	l
c0109b6d	obj/kernel.asm	/^c0109b6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b70	obj/kernel.asm	/^c0109b70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b73	obj/kernel.asm	/^c0109b73:	e8 d9 fe ff ff       	call   c0109a51 <setup_pgdir>$/;"	l
c0109b78	obj/kernel.asm	/^c0109b78:	85 c0                	test   %eax,%eax$/;"	l
c0109b7a	obj/kernel.asm	/^c0109b7a:	74 05                	je     c0109b81 <copy_mm+0x63>$/;"	l
c0109b7c	obj/kernel.asm	/^c0109b7c:	e9 a9 00 00 00       	jmp    c0109c2a <copy_mm+0x10c>$/;"	l
c0109b81	obj/kernel.asm	/^c0109b81:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109b84	obj/kernel.asm	/^c0109b84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b87	obj/kernel.asm	/^c0109b87:	e8 3d f8 ff ff       	call   c01093c9 <lock_mm>$/;"	l
c0109b8c	obj/kernel.asm	/^c0109b8c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109b8f	obj/kernel.asm	/^c0109b8f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109b93	obj/kernel.asm	/^c0109b93:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b96	obj/kernel.asm	/^c0109b96:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b99	obj/kernel.asm	/^c0109b99:	e8 c5 e7 ff ff       	call   c0108363 <dup_mmap>$/;"	l
c0109b9e	obj/kernel.asm	/^c0109b9e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109ba1	obj/kernel.asm	/^c0109ba1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109ba4	obj/kernel.asm	/^c0109ba4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ba7	obj/kernel.asm	/^c0109ba7:	e8 39 f8 ff ff       	call   c01093e5 <unlock_mm>$/;"	l
c0109bac	obj/kernel.asm	/^c0109bac:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109bb0	obj/kernel.asm	/^c0109bb0:	74 19                	je     c0109bcb <copy_mm+0xad>$/;"	l
c0109bb2	obj/kernel.asm	/^c0109bb2:	90                   	nop$/;"	l
c0109bb3	obj/kernel.asm	/^c0109bb3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bb6	obj/kernel.asm	/^c0109bb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109bb9	obj/kernel.asm	/^c0109bb9:	e8 a6 e8 ff ff       	call   c0108464 <exit_mmap>$/;"	l
c0109bbe	obj/kernel.asm	/^c0109bbe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bc1	obj/kernel.asm	/^c0109bc1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109bc4	obj/kernel.asm	/^c0109bc4:	e8 2f ff ff ff       	call   c0109af8 <put_pgdir>$/;"	l
c0109bc9	obj/kernel.asm	/^c0109bc9:	eb 5f                	jmp    c0109c2a <copy_mm+0x10c>$/;"	l
c0109bcb	obj/kernel.asm	/^c0109bcb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bce	obj/kernel.asm	/^c0109bce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109bd1	obj/kernel.asm	/^c0109bd1:	e8 bf f7 ff ff       	call   c0109395 <mm_count_inc>$/;"	l
c0109bd6	obj/kernel.asm	/^c0109bd6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109bd9	obj/kernel.asm	/^c0109bd9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109bdc	obj/kernel.asm	/^c0109bdc:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109bdf	obj/kernel.asm	/^c0109bdf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109be2	obj/kernel.asm	/^c0109be2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109be5	obj/kernel.asm	/^c0109be5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109be8	obj/kernel.asm	/^c0109be8:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c0109bef	obj/kernel.asm	/^c0109bef:	77 23                	ja     c0109c14 <copy_mm+0xf6>$/;"	l
c0109bf1	obj/kernel.asm	/^c0109bf1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109bf4	obj/kernel.asm	/^c0109bf4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109bf8	obj/kernel.asm	/^c0109bf8:	c7 44 24 08 08 e4 10 	movl   $0xc010e408,0x8(%esp)$/;"	l
c0109bff	obj/kernel.asm	/^c0109bff:	c0 $/;"	l
c0109c00	obj/kernel.asm	/^c0109c00:	c7 44 24 04 69 01 00 	movl   $0x169,0x4(%esp)$/;"	l
c0109c07	obj/kernel.asm	/^c0109c07:	00 $/;"	l
c0109c08	obj/kernel.asm	/^c0109c08:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c0109c0f	obj/kernel.asm	/^c0109c0f:	e8 c6 71 ff ff       	call   c0100dda <__panic>$/;"	l
c0109c14	obj/kernel.asm	/^c0109c14:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109c17	obj/kernel.asm	/^c0109c17:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c0109c1d	obj/kernel.asm	/^c0109c1d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109c20	obj/kernel.asm	/^c0109c20:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109c23	obj/kernel.asm	/^c0109c23:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109c28	obj/kernel.asm	/^c0109c28:	eb 0e                	jmp    c0109c38 <copy_mm+0x11a>$/;"	l
c0109c2a	obj/kernel.asm	/^c0109c2a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c2d	obj/kernel.asm	/^c0109c2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c30	obj/kernel.asm	/^c0109c30:	e8 70 e5 ff ff       	call   c01081a5 <mm_destroy>$/;"	l
c0109c35	obj/kernel.asm	/^c0109c35:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c38	obj/kernel.asm	/^c0109c38:	c9                   	leave  $/;"	l
c0109c39	obj/kernel.asm	/^c0109c39:	c3                   	ret    $/;"	l
c0109c3a	obj/kernel.asm	/^c0109c3a <copy_thread>:$/;"	l
c0109c3a	obj/kernel.asm	/^c0109c3a:	55                   	push   %ebp$/;"	l
c0109c3b	obj/kernel.asm	/^c0109c3b:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c3d	obj/kernel.asm	/^c0109c3d:	57                   	push   %edi$/;"	l
c0109c3e	obj/kernel.asm	/^c0109c3e:	56                   	push   %esi$/;"	l
c0109c3f	obj/kernel.asm	/^c0109c3f:	53                   	push   %ebx$/;"	l
c0109c40	obj/kernel.asm	/^c0109c40:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c43	obj/kernel.asm	/^c0109c43:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109c46	obj/kernel.asm	/^c0109c46:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c0109c4b	obj/kernel.asm	/^c0109c4b:	89 c2                	mov    %eax,%edx$/;"	l
c0109c4d	obj/kernel.asm	/^c0109c4d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c50	obj/kernel.asm	/^c0109c50:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0109c53	obj/kernel.asm	/^c0109c53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c56	obj/kernel.asm	/^c0109c56:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109c59	obj/kernel.asm	/^c0109c59:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0109c5c	obj/kernel.asm	/^c0109c5c:	bb 4c 00 00 00       	mov    $0x4c,%ebx$/;"	l
c0109c61	obj/kernel.asm	/^c0109c61:	89 c1                	mov    %eax,%ecx$/;"	l
c0109c63	obj/kernel.asm	/^c0109c63:	83 e1 01             	and    $0x1,%ecx$/;"	l
c0109c66	obj/kernel.asm	/^c0109c66:	85 c9                	test   %ecx,%ecx$/;"	l
c0109c68	obj/kernel.asm	/^c0109c68:	74 0e                	je     c0109c78 <copy_thread+0x3e>$/;"	l
c0109c6a	obj/kernel.asm	/^c0109c6a:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
c0109c6d	obj/kernel.asm	/^c0109c6d:	88 08                	mov    %cl,(%eax)$/;"	l
c0109c6f	obj/kernel.asm	/^c0109c6f:	83 c0 01             	add    $0x1,%eax$/;"	l
c0109c72	obj/kernel.asm	/^c0109c72:	83 c2 01             	add    $0x1,%edx$/;"	l
c0109c75	obj/kernel.asm	/^c0109c75:	83 eb 01             	sub    $0x1,%ebx$/;"	l
c0109c78	obj/kernel.asm	/^c0109c78:	89 c1                	mov    %eax,%ecx$/;"	l
c0109c7a	obj/kernel.asm	/^c0109c7a:	83 e1 02             	and    $0x2,%ecx$/;"	l
c0109c7d	obj/kernel.asm	/^c0109c7d:	85 c9                	test   %ecx,%ecx$/;"	l
c0109c7f	obj/kernel.asm	/^c0109c7f:	74 0f                	je     c0109c90 <copy_thread+0x56>$/;"	l
c0109c81	obj/kernel.asm	/^c0109c81:	0f b7 0a             	movzwl (%edx),%ecx$/;"	l
c0109c84	obj/kernel.asm	/^c0109c84:	66 89 08             	mov    %cx,(%eax)$/;"	l
c0109c87	obj/kernel.asm	/^c0109c87:	83 c0 02             	add    $0x2,%eax$/;"	l
c0109c8a	obj/kernel.asm	/^c0109c8a:	83 c2 02             	add    $0x2,%edx$/;"	l
c0109c8d	obj/kernel.asm	/^c0109c8d:	83 eb 02             	sub    $0x2,%ebx$/;"	l
c0109c90	obj/kernel.asm	/^c0109c90:	89 d9                	mov    %ebx,%ecx$/;"	l
c0109c92	obj/kernel.asm	/^c0109c92:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
c0109c95	obj/kernel.asm	/^c0109c95:	89 c7                	mov    %eax,%edi$/;"	l
c0109c97	obj/kernel.asm	/^c0109c97:	89 d6                	mov    %edx,%esi$/;"	l
c0109c99	obj/kernel.asm	/^c0109c99:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0109c9b	obj/kernel.asm	/^c0109c9b:	89 f2                	mov    %esi,%edx$/;"	l
c0109c9d	obj/kernel.asm	/^c0109c9d:	89 f8                	mov    %edi,%eax$/;"	l
c0109c9f	obj/kernel.asm	/^c0109c9f:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
c0109ca4	obj/kernel.asm	/^c0109ca4:	89 de                	mov    %ebx,%esi$/;"	l
c0109ca6	obj/kernel.asm	/^c0109ca6:	83 e6 02             	and    $0x2,%esi$/;"	l
c0109ca9	obj/kernel.asm	/^c0109ca9:	85 f6                	test   %esi,%esi$/;"	l
c0109cab	obj/kernel.asm	/^c0109cab:	74 0b                	je     c0109cb8 <copy_thread+0x7e>$/;"	l
c0109cad	obj/kernel.asm	/^c0109cad:	0f b7 34 0a          	movzwl (%edx,%ecx,1),%esi$/;"	l
c0109cb1	obj/kernel.asm	/^c0109cb1:	66 89 34 08          	mov    %si,(%eax,%ecx,1)$/;"	l
c0109cb5	obj/kernel.asm	/^c0109cb5:	83 c1 02             	add    $0x2,%ecx$/;"	l
c0109cb8	obj/kernel.asm	/^c0109cb8:	83 e3 01             	and    $0x1,%ebx$/;"	l
c0109cbb	obj/kernel.asm	/^c0109cbb:	85 db                	test   %ebx,%ebx$/;"	l
c0109cbd	obj/kernel.asm	/^c0109cbd:	74 07                	je     c0109cc6 <copy_thread+0x8c>$/;"	l
c0109cbf	obj/kernel.asm	/^c0109cbf:	0f b6 14 0a          	movzbl (%edx,%ecx,1),%edx$/;"	l
c0109cc3	obj/kernel.asm	/^c0109cc3:	88 14 08             	mov    %dl,(%eax,%ecx,1)$/;"	l
c0109cc6	obj/kernel.asm	/^c0109cc6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109cc9	obj/kernel.asm	/^c0109cc9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109ccc	obj/kernel.asm	/^c0109ccc:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c0109cd3	obj/kernel.asm	/^c0109cd3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109cd6	obj/kernel.asm	/^c0109cd6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109cd9	obj/kernel.asm	/^c0109cd9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109cdc	obj/kernel.asm	/^c0109cdc:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c0109cdf	obj/kernel.asm	/^c0109cdf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ce2	obj/kernel.asm	/^c0109ce2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109ce5	obj/kernel.asm	/^c0109ce5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109ce8	obj/kernel.asm	/^c0109ce8:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c0109ceb	obj/kernel.asm	/^c0109ceb:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c0109cee	obj/kernel.asm	/^c0109cee:	80 ce 02             	or     $0x2,%dh$/;"	l
c0109cf1	obj/kernel.asm	/^c0109cf1:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109cf4	obj/kernel.asm	/^c0109cf4:	ba 44 98 10 c0       	mov    $0xc0109844,%edx$/;"	l
c0109cf9	obj/kernel.asm	/^c0109cf9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109cfc	obj/kernel.asm	/^c0109cfc:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0109cff	obj/kernel.asm	/^c0109cff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d02	obj/kernel.asm	/^c0109d02:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109d05	obj/kernel.asm	/^c0109d05:	89 c2                	mov    %eax,%edx$/;"	l
c0109d07	obj/kernel.asm	/^c0109d07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d0a	obj/kernel.asm	/^c0109d0a:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c0109d0d	obj/kernel.asm	/^c0109d0d:	5b                   	pop    %ebx$/;"	l
c0109d0e	obj/kernel.asm	/^c0109d0e:	5e                   	pop    %esi$/;"	l
c0109d0f	obj/kernel.asm	/^c0109d0f:	5f                   	pop    %edi$/;"	l
c0109d10	obj/kernel.asm	/^c0109d10:	5d                   	pop    %ebp$/;"	l
c0109d11	obj/kernel.asm	/^c0109d11:	c3                   	ret    $/;"	l
c0109d12	obj/kernel.asm	/^c0109d12 <do_fork>:$/;"	l
c0109d12	obj/kernel.asm	/^c0109d12:	55                   	push   %ebp$/;"	l
c0109d13	obj/kernel.asm	/^c0109d13:	89 e5                	mov    %esp,%ebp$/;"	l
c0109d15	obj/kernel.asm	/^c0109d15:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109d18	obj/kernel.asm	/^c0109d18:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c0109d1f	obj/kernel.asm	/^c0109d1f:	a1 40 1e 1b c0       	mov    0xc01b1e40,%eax$/;"	l
c0109d24	obj/kernel.asm	/^c0109d24:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0109d29	obj/kernel.asm	/^c0109d29:	7e 05                	jle    c0109d30 <do_fork+0x1e>$/;"	l
c0109d2b	obj/kernel.asm	/^c0109d2b:	e9 ef 00 00 00       	jmp    c0109e1f <do_fork+0x10d>$/;"	l
c0109d30	obj/kernel.asm	/^c0109d30:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0109d37	obj/kernel.asm	/^c0109d37:	e8 c5 f6 ff ff       	call   c0109401 <alloc_proc>$/;"	l
c0109d3c	obj/kernel.asm	/^c0109d3c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109d3f	obj/kernel.asm	/^c0109d3f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109d43	obj/kernel.asm	/^c0109d43:	75 05                	jne    c0109d4a <do_fork+0x38>$/;"	l
c0109d45	obj/kernel.asm	/^c0109d45:	e9 d5 00 00 00       	jmp    c0109e1f <do_fork+0x10d>$/;"	l
c0109d4a	obj/kernel.asm	/^c0109d4a:	8b 15 28 fe 1a c0    	mov    0xc01afe28,%edx$/;"	l
c0109d50	obj/kernel.asm	/^c0109d50:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d53	obj/kernel.asm	/^c0109d53:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0109d56	obj/kernel.asm	/^c0109d56:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109d5b	obj/kernel.asm	/^c0109d5b:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0109d5e	obj/kernel.asm	/^c0109d5e:	85 c0                	test   %eax,%eax$/;"	l
c0109d60	obj/kernel.asm	/^c0109d60:	74 24                	je     c0109d86 <do_fork+0x74>$/;"	l
c0109d62	obj/kernel.asm	/^c0109d62:	c7 44 24 0c 40 e4 10 	movl   $0xc010e440,0xc(%esp)$/;"	l
c0109d69	obj/kernel.asm	/^c0109d69:	c0 $/;"	l
c0109d6a	obj/kernel.asm	/^c0109d6a:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c0109d71	obj/kernel.asm	/^c0109d71:	c0 $/;"	l
c0109d72	obj/kernel.asm	/^c0109d72:	c7 44 24 04 ad 01 00 	movl   $0x1ad,0x4(%esp)$/;"	l
c0109d79	obj/kernel.asm	/^c0109d79:	00 $/;"	l
c0109d7a	obj/kernel.asm	/^c0109d7a:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c0109d81	obj/kernel.asm	/^c0109d81:	e8 54 70 ff ff       	call   c0100dda <__panic>$/;"	l
c0109d86	obj/kernel.asm	/^c0109d86:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d89	obj/kernel.asm	/^c0109d89:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109d8c	obj/kernel.asm	/^c0109d8c:	e8 5e fc ff ff       	call   c01099ef <setup_kstack>$/;"	l
c0109d91	obj/kernel.asm	/^c0109d91:	85 c0                	test   %eax,%eax$/;"	l
c0109d93	obj/kernel.asm	/^c0109d93:	74 05                	je     c0109d9a <do_fork+0x88>$/;"	l
c0109d95	obj/kernel.asm	/^c0109d95:	e9 8a 00 00 00       	jmp    c0109e24 <do_fork+0x112>$/;"	l
c0109d9a	obj/kernel.asm	/^c0109d9a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d9d	obj/kernel.asm	/^c0109d9d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109da1	obj/kernel.asm	/^c0109da1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109da4	obj/kernel.asm	/^c0109da4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109da7	obj/kernel.asm	/^c0109da7:	e8 72 fd ff ff       	call   c0109b1e <copy_mm>$/;"	l
c0109dac	obj/kernel.asm	/^c0109dac:	85 c0                	test   %eax,%eax$/;"	l
c0109dae	obj/kernel.asm	/^c0109dae:	74 0e                	je     c0109dbe <do_fork+0xac>$/;"	l
c0109db0	obj/kernel.asm	/^c0109db0:	90                   	nop$/;"	l
c0109db1	obj/kernel.asm	/^c0109db1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109db4	obj/kernel.asm	/^c0109db4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109db7	obj/kernel.asm	/^c0109db7:	e8 6f fc ff ff       	call   c0109a2b <put_kstack>$/;"	l
c0109dbc	obj/kernel.asm	/^c0109dbc:	eb 66                	jmp    c0109e24 <do_fork+0x112>$/;"	l
c0109dbe	obj/kernel.asm	/^c0109dbe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109dc1	obj/kernel.asm	/^c0109dc1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109dc5	obj/kernel.asm	/^c0109dc5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109dc8	obj/kernel.asm	/^c0109dc8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109dcc	obj/kernel.asm	/^c0109dcc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109dcf	obj/kernel.asm	/^c0109dcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109dd2	obj/kernel.asm	/^c0109dd2:	e8 63 fe ff ff       	call   c0109c3a <copy_thread>$/;"	l
c0109dd7	obj/kernel.asm	/^c0109dd7:	e8 f3 f3 ff ff       	call   c01091cf <__intr_save>$/;"	l
c0109ddc	obj/kernel.asm	/^c0109ddc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109ddf	obj/kernel.asm	/^c0109ddf:	e8 f3 f8 ff ff       	call   c01096d7 <get_pid>$/;"	l
c0109de4	obj/kernel.asm	/^c0109de4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0109de7	obj/kernel.asm	/^c0109de7:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0109dea	obj/kernel.asm	/^c0109dea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109ded	obj/kernel.asm	/^c0109ded:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109df0	obj/kernel.asm	/^c0109df0:	e8 67 fa ff ff       	call   c010985c <hash_proc>$/;"	l
c0109df5	obj/kernel.asm	/^c0109df5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109df8	obj/kernel.asm	/^c0109df8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109dfb	obj/kernel.asm	/^c0109dfb:	e8 af f7 ff ff       	call   c01095af <set_links>$/;"	l
c0109e00	obj/kernel.asm	/^c0109e00:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109e03	obj/kernel.asm	/^c0109e03:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109e06	obj/kernel.asm	/^c0109e06:	e8 ee f3 ff ff       	call   c01091f9 <__intr_restore>$/;"	l
c0109e0b	obj/kernel.asm	/^c0109e0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e0e	obj/kernel.asm	/^c0109e0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109e11	obj/kernel.asm	/^c0109e11:	e8 52 13 00 00       	call   c010b168 <wakeup_proc>$/;"	l
c0109e16	obj/kernel.asm	/^c0109e16:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e19	obj/kernel.asm	/^c0109e19:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109e1c	obj/kernel.asm	/^c0109e1c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e1f	obj/kernel.asm	/^c0109e1f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e22	obj/kernel.asm	/^c0109e22:	eb 0d                	jmp    c0109e31 <do_fork+0x11f>$/;"	l
c0109e24	obj/kernel.asm	/^c0109e24:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e27	obj/kernel.asm	/^c0109e27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109e2a	obj/kernel.asm	/^c0109e2a:	e8 1c ae ff ff       	call   c0104c4b <kfree>$/;"	l
c0109e2f	obj/kernel.asm	/^c0109e2f:	eb ee                	jmp    c0109e1f <do_fork+0x10d>$/;"	l
c0109e31	obj/kernel.asm	/^c0109e31:	c9                   	leave  $/;"	l
c0109e32	obj/kernel.asm	/^c0109e32:	c3                   	ret    $/;"	l
c0109e33	obj/kernel.asm	/^c0109e33 <do_exit>:$/;"	l
c0109e33	obj/kernel.asm	/^c0109e33:	55                   	push   %ebp$/;"	l
c0109e34	obj/kernel.asm	/^c0109e34:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e36	obj/kernel.asm	/^c0109e36:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109e39	obj/kernel.asm	/^c0109e39:	8b 15 28 fe 1a c0    	mov    0xc01afe28,%edx$/;"	l
c0109e3f	obj/kernel.asm	/^c0109e3f:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c0109e44	obj/kernel.asm	/^c0109e44:	39 c2                	cmp    %eax,%edx$/;"	l
c0109e46	obj/kernel.asm	/^c0109e46:	75 1c                	jne    c0109e64 <do_exit+0x31>$/;"	l
c0109e48	obj/kernel.asm	/^c0109e48:	c7 44 24 08 6e e4 10 	movl   $0xc010e46e,0x8(%esp)$/;"	l
c0109e4f	obj/kernel.asm	/^c0109e4f:	c0 $/;"	l
c0109e50	obj/kernel.asm	/^c0109e50:	c7 44 24 04 de 01 00 	movl   $0x1de,0x4(%esp)$/;"	l
c0109e57	obj/kernel.asm	/^c0109e57:	00 $/;"	l
c0109e58	obj/kernel.asm	/^c0109e58:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c0109e5f	obj/kernel.asm	/^c0109e5f:	e8 76 6f ff ff       	call   c0100dda <__panic>$/;"	l
c0109e64	obj/kernel.asm	/^c0109e64:	8b 15 28 fe 1a c0    	mov    0xc01afe28,%edx$/;"	l
c0109e6a	obj/kernel.asm	/^c0109e6a:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c0109e6f	obj/kernel.asm	/^c0109e6f:	39 c2                	cmp    %eax,%edx$/;"	l
c0109e71	obj/kernel.asm	/^c0109e71:	75 1c                	jne    c0109e8f <do_exit+0x5c>$/;"	l
c0109e73	obj/kernel.asm	/^c0109e73:	c7 44 24 08 7e e4 10 	movl   $0xc010e47e,0x8(%esp)$/;"	l
c0109e7a	obj/kernel.asm	/^c0109e7a:	c0 $/;"	l
c0109e7b	obj/kernel.asm	/^c0109e7b:	c7 44 24 04 e1 01 00 	movl   $0x1e1,0x4(%esp)$/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	00 $/;"	l
c0109e83	obj/kernel.asm	/^c0109e83:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c0109e8a	obj/kernel.asm	/^c0109e8a:	e8 4b 6f ff ff       	call   c0100dda <__panic>$/;"	l
c0109e8f	obj/kernel.asm	/^c0109e8f:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109e94	obj/kernel.asm	/^c0109e94:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109e97	obj/kernel.asm	/^c0109e97:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e9a	obj/kernel.asm	/^c0109e9a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109e9e	obj/kernel.asm	/^c0109e9e:	74 4a                	je     c0109eea <do_exit+0xb7>$/;"	l
c0109ea0	obj/kernel.asm	/^c0109ea0:	a1 8c 1e 1b c0       	mov    0xc01b1e8c,%eax$/;"	l
c0109ea5	obj/kernel.asm	/^c0109ea5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109ea8	obj/kernel.asm	/^c0109ea8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109eae	obj/kernel.asm	/^c0109eae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109eb1	obj/kernel.asm	/^c0109eb1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109eb4	obj/kernel.asm	/^c0109eb4:	e8 f6 f4 ff ff       	call   c01093af <mm_count_dec>$/;"	l
c0109eb9	obj/kernel.asm	/^c0109eb9:	85 c0                	test   %eax,%eax$/;"	l
c0109ebb	obj/kernel.asm	/^c0109ebb:	75 21                	jne    c0109ede <do_exit+0xab>$/;"	l
c0109ebd	obj/kernel.asm	/^c0109ebd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ec0	obj/kernel.asm	/^c0109ec0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ec3	obj/kernel.asm	/^c0109ec3:	e8 9c e5 ff ff       	call   c0108464 <exit_mmap>$/;"	l
c0109ec8	obj/kernel.asm	/^c0109ec8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ecb	obj/kernel.asm	/^c0109ecb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ece	obj/kernel.asm	/^c0109ece:	e8 25 fc ff ff       	call   c0109af8 <put_pgdir>$/;"	l
c0109ed3	obj/kernel.asm	/^c0109ed3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ed6	obj/kernel.asm	/^c0109ed6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ed9	obj/kernel.asm	/^c0109ed9:	e8 c7 e2 ff ff       	call   c01081a5 <mm_destroy>$/;"	l
c0109ede	obj/kernel.asm	/^c0109ede:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109ee3	obj/kernel.asm	/^c0109ee3:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0109eea	obj/kernel.asm	/^c0109eea:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109eef	obj/kernel.asm	/^c0109eef:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c0109ef5	obj/kernel.asm	/^c0109ef5:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109efa	obj/kernel.asm	/^c0109efa:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109efd	obj/kernel.asm	/^c0109efd:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c0109f00	obj/kernel.asm	/^c0109f00:	e8 ca f2 ff ff       	call   c01091cf <__intr_save>$/;"	l
c0109f05	obj/kernel.asm	/^c0109f05:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109f08	obj/kernel.asm	/^c0109f08:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109f0d	obj/kernel.asm	/^c0109f0d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109f10	obj/kernel.asm	/^c0109f10:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109f13	obj/kernel.asm	/^c0109f13:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f16	obj/kernel.asm	/^c0109f16:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0109f19	obj/kernel.asm	/^c0109f19:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c0109f1e	obj/kernel.asm	/^c0109f1e:	75 10                	jne    c0109f30 <do_exit+0xfd>$/;"	l
c0109f20	obj/kernel.asm	/^c0109f20:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f23	obj/kernel.asm	/^c0109f23:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109f26	obj/kernel.asm	/^c0109f26:	e8 3d 12 00 00       	call   c010b168 <wakeup_proc>$/;"	l
c0109f2b	obj/kernel.asm	/^c0109f2b:	e9 8b 00 00 00       	jmp    c0109fbb <do_exit+0x188>$/;"	l
c0109f30	obj/kernel.asm	/^c0109f30:	e9 86 00 00 00       	jmp    c0109fbb <do_exit+0x188>$/;"	l
c0109f35	obj/kernel.asm	/^c0109f35:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109f3a	obj/kernel.asm	/^c0109f3a:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0109f3d	obj/kernel.asm	/^c0109f3d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109f40	obj/kernel.asm	/^c0109f40:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109f45	obj/kernel.asm	/^c0109f45:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109f48	obj/kernel.asm	/^c0109f48:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c0109f4b	obj/kernel.asm	/^c0109f4b:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109f4e	obj/kernel.asm	/^c0109f4e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f51	obj/kernel.asm	/^c0109f51:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
c0109f58	obj/kernel.asm	/^c0109f58:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c0109f5d	obj/kernel.asm	/^c0109f5d:	8b 50 70             	mov    0x70(%eax),%edx$/;"	l
c0109f60	obj/kernel.asm	/^c0109f60:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f63	obj/kernel.asm	/^c0109f63:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c0109f66	obj/kernel.asm	/^c0109f66:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f69	obj/kernel.asm	/^c0109f69:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0109f6c	obj/kernel.asm	/^c0109f6c:	85 c0                	test   %eax,%eax$/;"	l
c0109f6e	obj/kernel.asm	/^c0109f6e:	74 0e                	je     c0109f7e <do_exit+0x14b>$/;"	l
c0109f70	obj/kernel.asm	/^c0109f70:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c0109f75	obj/kernel.asm	/^c0109f75:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0109f78	obj/kernel.asm	/^c0109f78:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109f7b	obj/kernel.asm	/^c0109f7b:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0109f7e	obj/kernel.asm	/^c0109f7e:	8b 15 24 fe 1a c0    	mov    0xc01afe24,%edx$/;"	l
c0109f84	obj/kernel.asm	/^c0109f84:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f87	obj/kernel.asm	/^c0109f87:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0109f8a	obj/kernel.asm	/^c0109f8a:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c0109f8f	obj/kernel.asm	/^c0109f8f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109f92	obj/kernel.asm	/^c0109f92:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109f95	obj/kernel.asm	/^c0109f95:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f98	obj/kernel.asm	/^c0109f98:	8b 00                	mov    (%eax),%eax$/;"	l
c0109f9a	obj/kernel.asm	/^c0109f9a:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109f9d	obj/kernel.asm	/^c0109f9d:	75 1c                	jne    c0109fbb <do_exit+0x188>$/;"	l
c0109f9f	obj/kernel.asm	/^c0109f9f:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c0109fa4	obj/kernel.asm	/^c0109fa4:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0109fa7	obj/kernel.asm	/^c0109fa7:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c0109fac	obj/kernel.asm	/^c0109fac:	75 0d                	jne    c0109fbb <do_exit+0x188>$/;"	l
c0109fae	obj/kernel.asm	/^c0109fae:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c0109fb3	obj/kernel.asm	/^c0109fb3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109fb6	obj/kernel.asm	/^c0109fb6:	e8 ad 11 00 00       	call   c010b168 <wakeup_proc>$/;"	l
c0109fbb	obj/kernel.asm	/^c0109fbb:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109fc0	obj/kernel.asm	/^c0109fc0:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0109fc3	obj/kernel.asm	/^c0109fc3:	85 c0                	test   %eax,%eax$/;"	l
c0109fc5	obj/kernel.asm	/^c0109fc5:	0f 85 6a ff ff ff    	jne    c0109f35 <do_exit+0x102>$/;"	l
c0109fcb	obj/kernel.asm	/^c0109fcb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109fce	obj/kernel.asm	/^c0109fce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109fd1	obj/kernel.asm	/^c0109fd1:	e8 23 f2 ff ff       	call   c01091f9 <__intr_restore>$/;"	l
c0109fd6	obj/kernel.asm	/^c0109fd6:	e8 26 12 00 00       	call   c010b201 <schedule>$/;"	l
c0109fdb	obj/kernel.asm	/^c0109fdb:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c0109fe0	obj/kernel.asm	/^c0109fe0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109fe3	obj/kernel.asm	/^c0109fe3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0109fe7	obj/kernel.asm	/^c0109fe7:	c7 44 24 08 90 e4 10 	movl   $0xc010e490,0x8(%esp)$/;"	l
c0109fee	obj/kernel.asm	/^c0109fee:	c0 $/;"	l
c0109fef	obj/kernel.asm	/^c0109fef:	c7 44 24 04 0d 02 00 	movl   $0x20d,0x4(%esp)$/;"	l
c0109ff6	obj/kernel.asm	/^c0109ff6:	00 $/;"	l
c0109ff7	obj/kernel.asm	/^c0109ff7:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c0109ffe	obj/kernel.asm	/^c0109ffe:	e8 d7 6d ff ff       	call   c0100dda <__panic>$/;"	l
c010a003	obj/kernel.asm	/^c010a003 <load_icode>:$/;"	l
c010a003	obj/kernel.asm	/^c010a003:	55                   	push   %ebp$/;"	l
c010a004	obj/kernel.asm	/^c010a004:	89 e5                	mov    %esp,%ebp$/;"	l
c010a006	obj/kernel.asm	/^c010a006:	83 ec 78             	sub    $0x78,%esp$/;"	l
c010a009	obj/kernel.asm	/^c010a009:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a00e	obj/kernel.asm	/^c010a00e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a011	obj/kernel.asm	/^c010a011:	85 c0                	test   %eax,%eax$/;"	l
c010a013	obj/kernel.asm	/^c010a013:	74 1c                	je     c010a031 <load_icode+0x2e>$/;"	l
c010a015	obj/kernel.asm	/^c010a015:	c7 44 24 08 b0 e4 10 	movl   $0xc010e4b0,0x8(%esp)$/;"	l
c010a01c	obj/kernel.asm	/^c010a01c:	c0 $/;"	l
c010a01d	obj/kernel.asm	/^c010a01d:	c7 44 24 04 17 02 00 	movl   $0x217,0x4(%esp)$/;"	l
c010a024	obj/kernel.asm	/^c010a024:	00 $/;"	l
c010a025	obj/kernel.asm	/^c010a025:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a02c	obj/kernel.asm	/^c010a02c:	e8 a9 6d ff ff       	call   c0100dda <__panic>$/;"	l
c010a031	obj/kernel.asm	/^c010a031:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010a038	obj/kernel.asm	/^c010a038:	e8 0f de ff ff       	call   c0107e4c <mm_create>$/;"	l
c010a03d	obj/kernel.asm	/^c010a03d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010a040	obj/kernel.asm	/^c010a040:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c010a044	obj/kernel.asm	/^c010a044:	75 06                	jne    c010a04c <load_icode+0x49>$/;"	l
c010a046	obj/kernel.asm	/^c010a046:	90                   	nop$/;"	l
c010a047	obj/kernel.asm	/^c010a047:	e9 ef 05 00 00       	jmp    c010a63b <load_icode+0x638>$/;"	l
c010a04c	obj/kernel.asm	/^c010a04c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a04f	obj/kernel.asm	/^c010a04f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a052	obj/kernel.asm	/^c010a052:	e8 fa f9 ff ff       	call   c0109a51 <setup_pgdir>$/;"	l
c010a057	obj/kernel.asm	/^c010a057:	85 c0                	test   %eax,%eax$/;"	l
c010a059	obj/kernel.asm	/^c010a059:	74 05                	je     c010a060 <load_icode+0x5d>$/;"	l
c010a05b	obj/kernel.asm	/^c010a05b:	e9 f6 05 00 00       	jmp    c010a656 <load_icode+0x653>$/;"	l
c010a060	obj/kernel.asm	/^c010a060:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a063	obj/kernel.asm	/^c010a063:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010a066	obj/kernel.asm	/^c010a066:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a069	obj/kernel.asm	/^c010a069:	8b 50 1c             	mov    0x1c(%eax),%edx$/;"	l
c010a06c	obj/kernel.asm	/^c010a06c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a06f	obj/kernel.asm	/^c010a06f:	01 d0                	add    %edx,%eax$/;"	l
c010a071	obj/kernel.asm	/^c010a071:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a074	obj/kernel.asm	/^c010a074:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a077	obj/kernel.asm	/^c010a077:	8b 00                	mov    (%eax),%eax$/;"	l
c010a079	obj/kernel.asm	/^c010a079:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c010a07e	obj/kernel.asm	/^c010a07e:	74 0c                	je     c010a08c <load_icode+0x89>$/;"	l
c010a080	obj/kernel.asm	/^c010a080:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010a087	obj/kernel.asm	/^c010a087:	e9 bf 05 00 00       	jmp    c010a64b <load_icode+0x648>$/;"	l
c010a08c	obj/kernel.asm	/^c010a08c:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a08f	obj/kernel.asm	/^c010a08f:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010a093	obj/kernel.asm	/^c010a093:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010a096	obj/kernel.asm	/^c010a096:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c010a099	obj/kernel.asm	/^c010a099:	89 c2                	mov    %eax,%edx$/;"	l
c010a09b	obj/kernel.asm	/^c010a09b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a09e	obj/kernel.asm	/^c010a09e:	01 d0                	add    %edx,%eax$/;"	l
c010a0a0	obj/kernel.asm	/^c010a0a0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010a0a3	obj/kernel.asm	/^c010a0a3:	e9 13 03 00 00       	jmp    c010a3bb <load_icode+0x3b8>$/;"	l
c010a0a8	obj/kernel.asm	/^c010a0a8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0ab	obj/kernel.asm	/^c010a0ab:	8b 00                	mov    (%eax),%eax$/;"	l
c010a0ad	obj/kernel.asm	/^c010a0ad:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a0b0	obj/kernel.asm	/^c010a0b0:	74 05                	je     c010a0b7 <load_icode+0xb4>$/;"	l
c010a0b2	obj/kernel.asm	/^c010a0b2:	e9 00 03 00 00       	jmp    c010a3b7 <load_icode+0x3b4>$/;"	l
c010a0b7	obj/kernel.asm	/^c010a0b7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0ba	obj/kernel.asm	/^c010a0ba:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010a0bd	obj/kernel.asm	/^c010a0bd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0c0	obj/kernel.asm	/^c010a0c0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a0c3	obj/kernel.asm	/^c010a0c3:	39 c2                	cmp    %eax,%edx$/;"	l
c010a0c5	obj/kernel.asm	/^c010a0c5:	76 0c                	jbe    c010a0d3 <load_icode+0xd0>$/;"	l
c010a0c7	obj/kernel.asm	/^c010a0c7:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010a0ce	obj/kernel.asm	/^c010a0ce:	e9 6d 05 00 00       	jmp    c010a640 <load_icode+0x63d>$/;"	l
c010a0d3	obj/kernel.asm	/^c010a0d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0d6	obj/kernel.asm	/^c010a0d6:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a0d9	obj/kernel.asm	/^c010a0d9:	85 c0                	test   %eax,%eax$/;"	l
c010a0db	obj/kernel.asm	/^c010a0db:	75 05                	jne    c010a0e2 <load_icode+0xdf>$/;"	l
c010a0dd	obj/kernel.asm	/^c010a0dd:	e9 d5 02 00 00       	jmp    c010a3b7 <load_icode+0x3b4>$/;"	l
c010a0e2	obj/kernel.asm	/^c010a0e2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010a0e9	obj/kernel.asm	/^c010a0e9:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)$/;"	l
c010a0f0	obj/kernel.asm	/^c010a0f0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0f3	obj/kernel.asm	/^c010a0f3:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a0f6	obj/kernel.asm	/^c010a0f6:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a0f9	obj/kernel.asm	/^c010a0f9:	85 c0                	test   %eax,%eax$/;"	l
c010a0fb	obj/kernel.asm	/^c010a0fb:	74 04                	je     c010a101 <load_icode+0xfe>$/;"	l
c010a0fd	obj/kernel.asm	/^c010a0fd:	83 4d e8 04          	orl    $0x4,-0x18(%ebp)$/;"	l
c010a101	obj/kernel.asm	/^c010a101:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a104	obj/kernel.asm	/^c010a104:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a107	obj/kernel.asm	/^c010a107:	83 e0 02             	and    $0x2,%eax$/;"	l
c010a10a	obj/kernel.asm	/^c010a10a:	85 c0                	test   %eax,%eax$/;"	l
c010a10c	obj/kernel.asm	/^c010a10c:	74 04                	je     c010a112 <load_icode+0x10f>$/;"	l
c010a10e	obj/kernel.asm	/^c010a10e:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c010a112	obj/kernel.asm	/^c010a112:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a115	obj/kernel.asm	/^c010a115:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a118	obj/kernel.asm	/^c010a118:	83 e0 04             	and    $0x4,%eax$/;"	l
c010a11b	obj/kernel.asm	/^c010a11b:	85 c0                	test   %eax,%eax$/;"	l
c010a11d	obj/kernel.asm	/^c010a11d:	74 04                	je     c010a123 <load_icode+0x120>$/;"	l
c010a11f	obj/kernel.asm	/^c010a11f:	83 4d e8 01          	orl    $0x1,-0x18(%ebp)$/;"	l
c010a123	obj/kernel.asm	/^c010a123:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a126	obj/kernel.asm	/^c010a126:	83 e0 02             	and    $0x2,%eax$/;"	l
c010a129	obj/kernel.asm	/^c010a129:	85 c0                	test   %eax,%eax$/;"	l
c010a12b	obj/kernel.asm	/^c010a12b:	74 04                	je     c010a131 <load_icode+0x12e>$/;"	l
c010a12d	obj/kernel.asm	/^c010a12d:	83 4d e4 02          	orl    $0x2,-0x1c(%ebp)$/;"	l
c010a131	obj/kernel.asm	/^c010a131:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a134	obj/kernel.asm	/^c010a134:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010a137	obj/kernel.asm	/^c010a137:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a13a	obj/kernel.asm	/^c010a13a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a13d	obj/kernel.asm	/^c010a13d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010a144	obj/kernel.asm	/^c010a144:	00 $/;"	l
c010a145	obj/kernel.asm	/^c010a145:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c010a148	obj/kernel.asm	/^c010a148:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c010a14c	obj/kernel.asm	/^c010a14c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010a150	obj/kernel.asm	/^c010a150:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a154	obj/kernel.asm	/^c010a154:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a157	obj/kernel.asm	/^c010a157:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a15a	obj/kernel.asm	/^c010a15a:	e8 e8 e0 ff ff       	call   c0108247 <mm_map>$/;"	l
c010a15f	obj/kernel.asm	/^c010a15f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a162	obj/kernel.asm	/^c010a162:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a166	obj/kernel.asm	/^c010a166:	74 05                	je     c010a16d <load_icode+0x16a>$/;"	l
c010a168	obj/kernel.asm	/^c010a168:	e9 d3 04 00 00       	jmp    c010a640 <load_icode+0x63d>$/;"	l
c010a16d	obj/kernel.asm	/^c010a16d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a170	obj/kernel.asm	/^c010a170:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a173	obj/kernel.asm	/^c010a173:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a176	obj/kernel.asm	/^c010a176:	01 d0                	add    %edx,%eax$/;"	l
c010a178	obj/kernel.asm	/^c010a178:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a17b	obj/kernel.asm	/^c010a17b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a17e	obj/kernel.asm	/^c010a17e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a181	obj/kernel.asm	/^c010a181:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010a184	obj/kernel.asm	/^c010a184:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a187	obj/kernel.asm	/^c010a187:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010a18a	obj/kernel.asm	/^c010a18a:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010a18d	obj/kernel.asm	/^c010a18d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010a192	obj/kernel.asm	/^c010a192:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010a195	obj/kernel.asm	/^c010a195:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010a19c	obj/kernel.asm	/^c010a19c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a19f	obj/kernel.asm	/^c010a19f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a1a2	obj/kernel.asm	/^c010a1a2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a1a5	obj/kernel.asm	/^c010a1a5:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a1a8	obj/kernel.asm	/^c010a1a8:	01 d0                	add    %edx,%eax$/;"	l
c010a1aa	obj/kernel.asm	/^c010a1aa:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010a1ad	obj/kernel.asm	/^c010a1ad:	e9 90 00 00 00       	jmp    c010a242 <load_icode+0x23f>$/;"	l
c010a1b2	obj/kernel.asm	/^c010a1b2:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a1b5	obj/kernel.asm	/^c010a1b5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a1b8	obj/kernel.asm	/^c010a1b8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a1bb	obj/kernel.asm	/^c010a1bb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010a1bf	obj/kernel.asm	/^c010a1bf:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010a1c2	obj/kernel.asm	/^c010a1c2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010a1c6	obj/kernel.asm	/^c010a1c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a1c9	obj/kernel.asm	/^c010a1c9:	e8 a3 bd ff ff       	call   c0105f71 <pgdir_alloc_page>$/;"	l
c010a1ce	obj/kernel.asm	/^c010a1ce:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a1d1	obj/kernel.asm	/^c010a1d1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a1d5	obj/kernel.asm	/^c010a1d5:	75 05                	jne    c010a1dc <load_icode+0x1d9>$/;"	l
c010a1d7	obj/kernel.asm	/^c010a1d7:	e9 64 04 00 00       	jmp    c010a640 <load_icode+0x63d>$/;"	l
c010a1dc	obj/kernel.asm	/^c010a1dc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a1df	obj/kernel.asm	/^c010a1df:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010a1e2	obj/kernel.asm	/^c010a1e2:	29 c2                	sub    %eax,%edx$/;"	l
c010a1e4	obj/kernel.asm	/^c010a1e4:	89 d0                	mov    %edx,%eax$/;"	l
c010a1e6	obj/kernel.asm	/^c010a1e6:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a1e9	obj/kernel.asm	/^c010a1e9:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010a1ee	obj/kernel.asm	/^c010a1ee:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010a1f1	obj/kernel.asm	/^c010a1f1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a1f4	obj/kernel.asm	/^c010a1f4:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010a1fb	obj/kernel.asm	/^c010a1fb:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a1fe	obj/kernel.asm	/^c010a1fe:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a201	obj/kernel.asm	/^c010a201:	73 0d                	jae    c010a210 <load_icode+0x20d>$/;"	l
c010a203	obj/kernel.asm	/^c010a203:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a206	obj/kernel.asm	/^c010a206:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010a209	obj/kernel.asm	/^c010a209:	29 c2                	sub    %eax,%edx$/;"	l
c010a20b	obj/kernel.asm	/^c010a20b:	89 d0                	mov    %edx,%eax$/;"	l
c010a20d	obj/kernel.asm	/^c010a20d:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010a210	obj/kernel.asm	/^c010a210:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a213	obj/kernel.asm	/^c010a213:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a216	obj/kernel.asm	/^c010a216:	e8 dc f0 ff ff       	call   c01092f7 <page2kva>$/;"	l
c010a21b	obj/kernel.asm	/^c010a21b:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c010a21e	obj/kernel.asm	/^c010a21e:	01 c2                	add    %eax,%edx$/;"	l
c010a220	obj/kernel.asm	/^c010a220:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a223	obj/kernel.asm	/^c010a223:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a227	obj/kernel.asm	/^c010a227:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a22a	obj/kernel.asm	/^c010a22a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a22e	obj/kernel.asm	/^c010a22e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a231	obj/kernel.asm	/^c010a231:	e8 45 21 00 00       	call   c010c37b <memcpy>$/;"	l
c010a236	obj/kernel.asm	/^c010a236:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a239	obj/kernel.asm	/^c010a239:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010a23c	obj/kernel.asm	/^c010a23c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a23f	obj/kernel.asm	/^c010a23f:	01 45 e0             	add    %eax,-0x20(%ebp)$/;"	l
c010a242	obj/kernel.asm	/^c010a242:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a245	obj/kernel.asm	/^c010a245:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a248	obj/kernel.asm	/^c010a248:	0f 82 64 ff ff ff    	jb     c010a1b2 <load_icode+0x1af>$/;"	l
c010a24e	obj/kernel.asm	/^c010a24e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a251	obj/kernel.asm	/^c010a251:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a254	obj/kernel.asm	/^c010a254:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a257	obj/kernel.asm	/^c010a257:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a25a	obj/kernel.asm	/^c010a25a:	01 d0                	add    %edx,%eax$/;"	l
c010a25c	obj/kernel.asm	/^c010a25c:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010a25f	obj/kernel.asm	/^c010a25f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a262	obj/kernel.asm	/^c010a262:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a265	obj/kernel.asm	/^c010a265:	0f 83 b0 00 00 00    	jae    c010a31b <load_icode+0x318>$/;"	l
c010a26b	obj/kernel.asm	/^c010a26b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a26e	obj/kernel.asm	/^c010a26e:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a271	obj/kernel.asm	/^c010a271:	75 05                	jne    c010a278 <load_icode+0x275>$/;"	l
c010a273	obj/kernel.asm	/^c010a273:	e9 3f 01 00 00       	jmp    c010a3b7 <load_icode+0x3b4>$/;"	l
c010a278	obj/kernel.asm	/^c010a278:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a27b	obj/kernel.asm	/^c010a27b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010a27e	obj/kernel.asm	/^c010a27e:	29 c2                	sub    %eax,%edx$/;"	l
c010a280	obj/kernel.asm	/^c010a280:	89 d0                	mov    %edx,%eax$/;"	l
c010a282	obj/kernel.asm	/^c010a282:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010a287	obj/kernel.asm	/^c010a287:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a28a	obj/kernel.asm	/^c010a28a:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010a28f	obj/kernel.asm	/^c010a28f:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010a292	obj/kernel.asm	/^c010a292:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a295	obj/kernel.asm	/^c010a295:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a298	obj/kernel.asm	/^c010a298:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a29b	obj/kernel.asm	/^c010a29b:	73 0d                	jae    c010a2aa <load_icode+0x2a7>$/;"	l
c010a29d	obj/kernel.asm	/^c010a29d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a2a0	obj/kernel.asm	/^c010a2a0:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010a2a3	obj/kernel.asm	/^c010a2a3:	29 c2                	sub    %eax,%edx$/;"	l
c010a2a5	obj/kernel.asm	/^c010a2a5:	89 d0                	mov    %edx,%eax$/;"	l
c010a2a7	obj/kernel.asm	/^c010a2a7:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010a2aa	obj/kernel.asm	/^c010a2aa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a2ad	obj/kernel.asm	/^c010a2ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a2b0	obj/kernel.asm	/^c010a2b0:	e8 42 f0 ff ff       	call   c01092f7 <page2kva>$/;"	l
c010a2b5	obj/kernel.asm	/^c010a2b5:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c010a2b8	obj/kernel.asm	/^c010a2b8:	01 c2                	add    %eax,%edx$/;"	l
c010a2ba	obj/kernel.asm	/^c010a2ba:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a2bd	obj/kernel.asm	/^c010a2bd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a2c1	obj/kernel.asm	/^c010a2c1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a2c8	obj/kernel.asm	/^c010a2c8:	00 $/;"	l
c010a2c9	obj/kernel.asm	/^c010a2c9:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a2cc	obj/kernel.asm	/^c010a2cc:	e8 c8 1f 00 00       	call   c010c299 <memset>$/;"	l
c010a2d1	obj/kernel.asm	/^c010a2d1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a2d4	obj/kernel.asm	/^c010a2d4:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010a2d7	obj/kernel.asm	/^c010a2d7:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a2da	obj/kernel.asm	/^c010a2da:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a2dd	obj/kernel.asm	/^c010a2dd:	73 08                	jae    c010a2e7 <load_icode+0x2e4>$/;"	l
c010a2df	obj/kernel.asm	/^c010a2df:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a2e2	obj/kernel.asm	/^c010a2e2:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a2e5	obj/kernel.asm	/^c010a2e5:	74 34                	je     c010a31b <load_icode+0x318>$/;"	l
c010a2e7	obj/kernel.asm	/^c010a2e7:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a2ea	obj/kernel.asm	/^c010a2ea:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a2ed	obj/kernel.asm	/^c010a2ed:	72 08                	jb     c010a2f7 <load_icode+0x2f4>$/;"	l
c010a2ef	obj/kernel.asm	/^c010a2ef:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a2f2	obj/kernel.asm	/^c010a2f2:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a2f5	obj/kernel.asm	/^c010a2f5:	74 24                	je     c010a31b <load_icode+0x318>$/;"	l
c010a2f7	obj/kernel.asm	/^c010a2f7:	c7 44 24 0c d8 e4 10 	movl   $0xc010e4d8,0xc(%esp)$/;"	l
c010a2fe	obj/kernel.asm	/^c010a2fe:	c0 $/;"	l
c010a2ff	obj/kernel.asm	/^c010a2ff:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010a306	obj/kernel.asm	/^c010a306:	c0 $/;"	l
c010a307	obj/kernel.asm	/^c010a307:	c7 44 24 04 69 02 00 	movl   $0x269,0x4(%esp)$/;"	l
c010a30e	obj/kernel.asm	/^c010a30e:	00 $/;"	l
c010a30f	obj/kernel.asm	/^c010a30f:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a316	obj/kernel.asm	/^c010a316:	e8 bf 6a ff ff       	call   c0100dda <__panic>$/;"	l
c010a31b	obj/kernel.asm	/^c010a31b:	e9 8b 00 00 00       	jmp    c010a3ab <load_icode+0x3a8>$/;"	l
c010a320	obj/kernel.asm	/^c010a320:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a323	obj/kernel.asm	/^c010a323:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a326	obj/kernel.asm	/^c010a326:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a329	obj/kernel.asm	/^c010a329:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010a32d	obj/kernel.asm	/^c010a32d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010a330	obj/kernel.asm	/^c010a330:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010a334	obj/kernel.asm	/^c010a334:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a337	obj/kernel.asm	/^c010a337:	e8 35 bc ff ff       	call   c0105f71 <pgdir_alloc_page>$/;"	l
c010a33c	obj/kernel.asm	/^c010a33c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a33f	obj/kernel.asm	/^c010a33f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a343	obj/kernel.asm	/^c010a343:	75 05                	jne    c010a34a <load_icode+0x347>$/;"	l
c010a345	obj/kernel.asm	/^c010a345:	e9 f6 02 00 00       	jmp    c010a640 <load_icode+0x63d>$/;"	l
c010a34a	obj/kernel.asm	/^c010a34a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a34d	obj/kernel.asm	/^c010a34d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010a350	obj/kernel.asm	/^c010a350:	29 c2                	sub    %eax,%edx$/;"	l
c010a352	obj/kernel.asm	/^c010a352:	89 d0                	mov    %edx,%eax$/;"	l
c010a354	obj/kernel.asm	/^c010a354:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a357	obj/kernel.asm	/^c010a357:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010a35c	obj/kernel.asm	/^c010a35c:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010a35f	obj/kernel.asm	/^c010a35f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a362	obj/kernel.asm	/^c010a362:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010a369	obj/kernel.asm	/^c010a369:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a36c	obj/kernel.asm	/^c010a36c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a36f	obj/kernel.asm	/^c010a36f:	73 0d                	jae    c010a37e <load_icode+0x37b>$/;"	l
c010a371	obj/kernel.asm	/^c010a371:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a374	obj/kernel.asm	/^c010a374:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010a377	obj/kernel.asm	/^c010a377:	29 c2                	sub    %eax,%edx$/;"	l
c010a379	obj/kernel.asm	/^c010a379:	89 d0                	mov    %edx,%eax$/;"	l
c010a37b	obj/kernel.asm	/^c010a37b:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010a37e	obj/kernel.asm	/^c010a37e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a381	obj/kernel.asm	/^c010a381:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a384	obj/kernel.asm	/^c010a384:	e8 6e ef ff ff       	call   c01092f7 <page2kva>$/;"	l
c010a389	obj/kernel.asm	/^c010a389:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c010a38c	obj/kernel.asm	/^c010a38c:	01 c2                	add    %eax,%edx$/;"	l
c010a38e	obj/kernel.asm	/^c010a38e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a391	obj/kernel.asm	/^c010a391:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a395	obj/kernel.asm	/^c010a395:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a39c	obj/kernel.asm	/^c010a39c:	00 $/;"	l
c010a39d	obj/kernel.asm	/^c010a39d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a3a0	obj/kernel.asm	/^c010a3a0:	e8 f4 1e 00 00       	call   c010c299 <memset>$/;"	l
c010a3a5	obj/kernel.asm	/^c010a3a5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a3a8	obj/kernel.asm	/^c010a3a8:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010a3ab	obj/kernel.asm	/^c010a3ab:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a3ae	obj/kernel.asm	/^c010a3ae:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a3b1	obj/kernel.asm	/^c010a3b1:	0f 82 69 ff ff ff    	jb     c010a320 <load_icode+0x31d>$/;"	l
c010a3b7	obj/kernel.asm	/^c010a3b7:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c010a3bb	obj/kernel.asm	/^c010a3bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a3be	obj/kernel.asm	/^c010a3be:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c010a3c1	obj/kernel.asm	/^c010a3c1:	0f 82 e1 fc ff ff    	jb     c010a0a8 <load_icode+0xa5>$/;"	l
c010a3c7	obj/kernel.asm	/^c010a3c7:	c7 45 e8 0b 00 00 00 	movl   $0xb,-0x18(%ebp)$/;"	l
c010a3ce	obj/kernel.asm	/^c010a3ce:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010a3d5	obj/kernel.asm	/^c010a3d5:	00 $/;"	l
c010a3d6	obj/kernel.asm	/^c010a3d6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a3d9	obj/kernel.asm	/^c010a3d9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a3dd	obj/kernel.asm	/^c010a3dd:	c7 44 24 08 00 00 10 	movl   $0x100000,0x8(%esp)$/;"	l
c010a3e4	obj/kernel.asm	/^c010a3e4:	00 $/;"	l
c010a3e5	obj/kernel.asm	/^c010a3e5:	c7 44 24 04 00 00 f0 	movl   $0xaff00000,0x4(%esp)$/;"	l
c010a3ec	obj/kernel.asm	/^c010a3ec:	af $/;"	l
c010a3ed	obj/kernel.asm	/^c010a3ed:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a3f0	obj/kernel.asm	/^c010a3f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a3f3	obj/kernel.asm	/^c010a3f3:	e8 4f de ff ff       	call   c0108247 <mm_map>$/;"	l
c010a3f8	obj/kernel.asm	/^c010a3f8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a3fb	obj/kernel.asm	/^c010a3fb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a3ff	obj/kernel.asm	/^c010a3ff:	74 05                	je     c010a406 <load_icode+0x403>$/;"	l
c010a401	obj/kernel.asm	/^c010a401:	e9 3a 02 00 00       	jmp    c010a640 <load_icode+0x63d>$/;"	l
c010a406	obj/kernel.asm	/^c010a406:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a409	obj/kernel.asm	/^c010a409:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a40c	obj/kernel.asm	/^c010a40c:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010a413	obj/kernel.asm	/^c010a413:	00 $/;"	l
c010a414	obj/kernel.asm	/^c010a414:	c7 44 24 04 00 f0 ff 	movl   $0xaffff000,0x4(%esp)$/;"	l
c010a41b	obj/kernel.asm	/^c010a41b:	af $/;"	l
c010a41c	obj/kernel.asm	/^c010a41c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a41f	obj/kernel.asm	/^c010a41f:	e8 4d bb ff ff       	call   c0105f71 <pgdir_alloc_page>$/;"	l
c010a424	obj/kernel.asm	/^c010a424:	85 c0                	test   %eax,%eax$/;"	l
c010a426	obj/kernel.asm	/^c010a426:	75 24                	jne    c010a44c <load_icode+0x449>$/;"	l
c010a428	obj/kernel.asm	/^c010a428:	c7 44 24 0c 14 e5 10 	movl   $0xc010e514,0xc(%esp)$/;"	l
c010a42f	obj/kernel.asm	/^c010a42f:	c0 $/;"	l
c010a430	obj/kernel.asm	/^c010a430:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010a437	obj/kernel.asm	/^c010a437:	c0 $/;"	l
c010a438	obj/kernel.asm	/^c010a438:	c7 44 24 04 7c 02 00 	movl   $0x27c,0x4(%esp)$/;"	l
c010a43f	obj/kernel.asm	/^c010a43f:	00 $/;"	l
c010a440	obj/kernel.asm	/^c010a440:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a447	obj/kernel.asm	/^c010a447:	e8 8e 69 ff ff       	call   c0100dda <__panic>$/;"	l
c010a44c	obj/kernel.asm	/^c010a44c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a44f	obj/kernel.asm	/^c010a44f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a452	obj/kernel.asm	/^c010a452:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010a459	obj/kernel.asm	/^c010a459:	00 $/;"	l
c010a45a	obj/kernel.asm	/^c010a45a:	c7 44 24 04 00 e0 ff 	movl   $0xafffe000,0x4(%esp)$/;"	l
c010a461	obj/kernel.asm	/^c010a461:	af $/;"	l
c010a462	obj/kernel.asm	/^c010a462:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a465	obj/kernel.asm	/^c010a465:	e8 07 bb ff ff       	call   c0105f71 <pgdir_alloc_page>$/;"	l
c010a46a	obj/kernel.asm	/^c010a46a:	85 c0                	test   %eax,%eax$/;"	l
c010a46c	obj/kernel.asm	/^c010a46c:	75 24                	jne    c010a492 <load_icode+0x48f>$/;"	l
c010a46e	obj/kernel.asm	/^c010a46e:	c7 44 24 0c 58 e5 10 	movl   $0xc010e558,0xc(%esp)$/;"	l
c010a475	obj/kernel.asm	/^c010a475:	c0 $/;"	l
c010a476	obj/kernel.asm	/^c010a476:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010a47d	obj/kernel.asm	/^c010a47d:	c0 $/;"	l
c010a47e	obj/kernel.asm	/^c010a47e:	c7 44 24 04 7d 02 00 	movl   $0x27d,0x4(%esp)$/;"	l
c010a485	obj/kernel.asm	/^c010a485:	00 $/;"	l
c010a486	obj/kernel.asm	/^c010a486:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a48d	obj/kernel.asm	/^c010a48d:	e8 48 69 ff ff       	call   c0100dda <__panic>$/;"	l
c010a492	obj/kernel.asm	/^c010a492:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a495	obj/kernel.asm	/^c010a495:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a498	obj/kernel.asm	/^c010a498:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010a49f	obj/kernel.asm	/^c010a49f:	00 $/;"	l
c010a4a0	obj/kernel.asm	/^c010a4a0:	c7 44 24 04 00 d0 ff 	movl   $0xafffd000,0x4(%esp)$/;"	l
c010a4a7	obj/kernel.asm	/^c010a4a7:	af $/;"	l
c010a4a8	obj/kernel.asm	/^c010a4a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a4ab	obj/kernel.asm	/^c010a4ab:	e8 c1 ba ff ff       	call   c0105f71 <pgdir_alloc_page>$/;"	l
c010a4b0	obj/kernel.asm	/^c010a4b0:	85 c0                	test   %eax,%eax$/;"	l
c010a4b2	obj/kernel.asm	/^c010a4b2:	75 24                	jne    c010a4d8 <load_icode+0x4d5>$/;"	l
c010a4b4	obj/kernel.asm	/^c010a4b4:	c7 44 24 0c 9c e5 10 	movl   $0xc010e59c,0xc(%esp)$/;"	l
c010a4bb	obj/kernel.asm	/^c010a4bb:	c0 $/;"	l
c010a4bc	obj/kernel.asm	/^c010a4bc:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010a4c3	obj/kernel.asm	/^c010a4c3:	c0 $/;"	l
c010a4c4	obj/kernel.asm	/^c010a4c4:	c7 44 24 04 7e 02 00 	movl   $0x27e,0x4(%esp)$/;"	l
c010a4cb	obj/kernel.asm	/^c010a4cb:	00 $/;"	l
c010a4cc	obj/kernel.asm	/^c010a4cc:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a4d3	obj/kernel.asm	/^c010a4d3:	e8 02 69 ff ff       	call   c0100dda <__panic>$/;"	l
c010a4d8	obj/kernel.asm	/^c010a4d8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a4db	obj/kernel.asm	/^c010a4db:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a4de	obj/kernel.asm	/^c010a4de:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010a4e5	obj/kernel.asm	/^c010a4e5:	00 $/;"	l
c010a4e6	obj/kernel.asm	/^c010a4e6:	c7 44 24 04 00 c0 ff 	movl   $0xafffc000,0x4(%esp)$/;"	l
c010a4ed	obj/kernel.asm	/^c010a4ed:	af $/;"	l
c010a4ee	obj/kernel.asm	/^c010a4ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a4f1	obj/kernel.asm	/^c010a4f1:	e8 7b ba ff ff       	call   c0105f71 <pgdir_alloc_page>$/;"	l
c010a4f6	obj/kernel.asm	/^c010a4f6:	85 c0                	test   %eax,%eax$/;"	l
c010a4f8	obj/kernel.asm	/^c010a4f8:	75 24                	jne    c010a51e <load_icode+0x51b>$/;"	l
c010a4fa	obj/kernel.asm	/^c010a4fa:	c7 44 24 0c e0 e5 10 	movl   $0xc010e5e0,0xc(%esp)$/;"	l
c010a501	obj/kernel.asm	/^c010a501:	c0 $/;"	l
c010a502	obj/kernel.asm	/^c010a502:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010a509	obj/kernel.asm	/^c010a509:	c0 $/;"	l
c010a50a	obj/kernel.asm	/^c010a50a:	c7 44 24 04 7f 02 00 	movl   $0x27f,0x4(%esp)$/;"	l
c010a511	obj/kernel.asm	/^c010a511:	00 $/;"	l
c010a512	obj/kernel.asm	/^c010a512:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a519	obj/kernel.asm	/^c010a519:	e8 bc 68 ff ff       	call   c0100dda <__panic>$/;"	l
c010a51e	obj/kernel.asm	/^c010a51e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a521	obj/kernel.asm	/^c010a521:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a524	obj/kernel.asm	/^c010a524:	e8 6c ee ff ff       	call   c0109395 <mm_count_inc>$/;"	l
c010a529	obj/kernel.asm	/^c010a529:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a52e	obj/kernel.asm	/^c010a52e:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010a531	obj/kernel.asm	/^c010a531:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a534	obj/kernel.asm	/^c010a534:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a539	obj/kernel.asm	/^c010a539:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010a53c	obj/kernel.asm	/^c010a53c:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010a53f	obj/kernel.asm	/^c010a53f:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c010a542	obj/kernel.asm	/^c010a542:	81 7d b8 ff ff ff bf 	cmpl   $0xbfffffff,-0x48(%ebp)$/;"	l
c010a549	obj/kernel.asm	/^c010a549:	77 23                	ja     c010a56e <load_icode+0x56b>$/;"	l
c010a54b	obj/kernel.asm	/^c010a54b:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010a54e	obj/kernel.asm	/^c010a54e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a552	obj/kernel.asm	/^c010a552:	c7 44 24 08 08 e4 10 	movl   $0xc010e408,0x8(%esp)$/;"	l
c010a559	obj/kernel.asm	/^c010a559:	c0 $/;"	l
c010a55a	obj/kernel.asm	/^c010a55a:	c7 44 24 04 84 02 00 	movl   $0x284,0x4(%esp)$/;"	l
c010a561	obj/kernel.asm	/^c010a561:	00 $/;"	l
c010a562	obj/kernel.asm	/^c010a562:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a569	obj/kernel.asm	/^c010a569:	e8 6c 68 ff ff       	call   c0100dda <__panic>$/;"	l
c010a56e	obj/kernel.asm	/^c010a56e:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c010a571	obj/kernel.asm	/^c010a571:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c010a577	obj/kernel.asm	/^c010a577:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010a57a	obj/kernel.asm	/^c010a57a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a57d	obj/kernel.asm	/^c010a57d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a580	obj/kernel.asm	/^c010a580:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010a583	obj/kernel.asm	/^c010a583:	81 7d b4 ff ff ff bf 	cmpl   $0xbfffffff,-0x4c(%ebp)$/;"	l
c010a58a	obj/kernel.asm	/^c010a58a:	77 23                	ja     c010a5af <load_icode+0x5ac>$/;"	l
c010a58c	obj/kernel.asm	/^c010a58c:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010a58f	obj/kernel.asm	/^c010a58f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a593	obj/kernel.asm	/^c010a593:	c7 44 24 08 08 e4 10 	movl   $0xc010e408,0x8(%esp)$/;"	l
c010a59a	obj/kernel.asm	/^c010a59a:	c0 $/;"	l
c010a59b	obj/kernel.asm	/^c010a59b:	c7 44 24 04 85 02 00 	movl   $0x285,0x4(%esp)$/;"	l
c010a5a2	obj/kernel.asm	/^c010a5a2:	00 $/;"	l
c010a5a3	obj/kernel.asm	/^c010a5a3:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a5aa	obj/kernel.asm	/^c010a5aa:	e8 2b 68 ff ff       	call   c0100dda <__panic>$/;"	l
c010a5af	obj/kernel.asm	/^c010a5af:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010a5b2	obj/kernel.asm	/^c010a5b2:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010a5b7	obj/kernel.asm	/^c010a5b7:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c010a5ba	obj/kernel.asm	/^c010a5ba:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c010a5bd	obj/kernel.asm	/^c010a5bd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010a5c0	obj/kernel.asm	/^c010a5c0:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a5c5	obj/kernel.asm	/^c010a5c5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a5c8	obj/kernel.asm	/^c010a5c8:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010a5cb	obj/kernel.asm	/^c010a5cb:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010a5d2	obj/kernel.asm	/^c010a5d2:	00 $/;"	l
c010a5d3	obj/kernel.asm	/^c010a5d3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a5da	obj/kernel.asm	/^c010a5da:	00 $/;"	l
c010a5db	obj/kernel.asm	/^c010a5db:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a5de	obj/kernel.asm	/^c010a5de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5e1	obj/kernel.asm	/^c010a5e1:	e8 b3 1c 00 00       	call   c010c299 <memset>$/;"	l
c010a5e6	obj/kernel.asm	/^c010a5e6:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a5e9	obj/kernel.asm	/^c010a5e9:	66 c7 40 3c 1b 00    	movw   $0x1b,0x3c(%eax)$/;"	l
c010a5ef	obj/kernel.asm	/^c010a5ef:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a5f2	obj/kernel.asm	/^c010a5f2:	66 c7 40 48 23 00    	movw   $0x23,0x48(%eax)$/;"	l
c010a5f8	obj/kernel.asm	/^c010a5f8:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a5fb	obj/kernel.asm	/^c010a5fb:	0f b7 50 48          	movzwl 0x48(%eax),%edx$/;"	l
c010a5ff	obj/kernel.asm	/^c010a5ff:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a602	obj/kernel.asm	/^c010a602:	66 89 50 28          	mov    %dx,0x28(%eax)$/;"	l
c010a606	obj/kernel.asm	/^c010a606:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a609	obj/kernel.asm	/^c010a609:	0f b7 50 28          	movzwl 0x28(%eax),%edx$/;"	l
c010a60d	obj/kernel.asm	/^c010a60d:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a610	obj/kernel.asm	/^c010a610:	66 89 50 2c          	mov    %dx,0x2c(%eax)$/;"	l
c010a614	obj/kernel.asm	/^c010a614:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a617	obj/kernel.asm	/^c010a617:	c7 40 44 00 00 00 b0 	movl   $0xb0000000,0x44(%eax)$/;"	l
c010a61e	obj/kernel.asm	/^c010a61e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a621	obj/kernel.asm	/^c010a621:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010a624	obj/kernel.asm	/^c010a624:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a627	obj/kernel.asm	/^c010a627:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010a62a	obj/kernel.asm	/^c010a62a:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010a62d	obj/kernel.asm	/^c010a62d:	c7 40 40 00 02 00 00 	movl   $0x200,0x40(%eax)$/;"	l
c010a634	obj/kernel.asm	/^c010a634:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a63b	obj/kernel.asm	/^c010a63b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a63e	obj/kernel.asm	/^c010a63e:	eb 23                	jmp    c010a663 <load_icode+0x660>$/;"	l
c010a640	obj/kernel.asm	/^c010a640:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a643	obj/kernel.asm	/^c010a643:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a646	obj/kernel.asm	/^c010a646:	e8 19 de ff ff       	call   c0108464 <exit_mmap>$/;"	l
c010a64b	obj/kernel.asm	/^c010a64b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a64e	obj/kernel.asm	/^c010a64e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a651	obj/kernel.asm	/^c010a651:	e8 a2 f4 ff ff       	call   c0109af8 <put_pgdir>$/;"	l
c010a656	obj/kernel.asm	/^c010a656:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a659	obj/kernel.asm	/^c010a659:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a65c	obj/kernel.asm	/^c010a65c:	e8 44 db ff ff       	call   c01081a5 <mm_destroy>$/;"	l
c010a661	obj/kernel.asm	/^c010a661:	eb d8                	jmp    c010a63b <load_icode+0x638>$/;"	l
c010a663	obj/kernel.asm	/^c010a663:	c9                   	leave  $/;"	l
c010a664	obj/kernel.asm	/^c010a664:	c3                   	ret    $/;"	l
c010a665	obj/kernel.asm	/^c010a665 <do_execve>:$/;"	l
c010a665	obj/kernel.asm	/^c010a665:	55                   	push   %ebp$/;"	l
c010a666	obj/kernel.asm	/^c010a666:	89 e5                	mov    %esp,%ebp$/;"	l
c010a668	obj/kernel.asm	/^c010a668:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a66b	obj/kernel.asm	/^c010a66b:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a670	obj/kernel.asm	/^c010a670:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a673	obj/kernel.asm	/^c010a673:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a676	obj/kernel.asm	/^c010a676:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a679	obj/kernel.asm	/^c010a679:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010a680	obj/kernel.asm	/^c010a680:	00 $/;"	l
c010a681	obj/kernel.asm	/^c010a681:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010a684	obj/kernel.asm	/^c010a684:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010a688	obj/kernel.asm	/^c010a688:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a68c	obj/kernel.asm	/^c010a68c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a68f	obj/kernel.asm	/^c010a68f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a692	obj/kernel.asm	/^c010a692:	e8 22 e8 ff ff       	call   c0108eb9 <user_mem_check>$/;"	l
c010a697	obj/kernel.asm	/^c010a697:	85 c0                	test   %eax,%eax$/;"	l
c010a699	obj/kernel.asm	/^c010a699:	75 0a                	jne    c010a6a5 <do_execve+0x40>$/;"	l
c010a69b	obj/kernel.asm	/^c010a69b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a6a0	obj/kernel.asm	/^c010a6a0:	e9 f4 00 00 00       	jmp    c010a799 <do_execve+0x134>$/;"	l
c010a6a5	obj/kernel.asm	/^c010a6a5:	83 7d 0c 0f          	cmpl   $0xf,0xc(%ebp)$/;"	l
c010a6a9	obj/kernel.asm	/^c010a6a9:	76 07                	jbe    c010a6b2 <do_execve+0x4d>$/;"	l
c010a6ab	obj/kernel.asm	/^c010a6ab:	c7 45 0c 0f 00 00 00 	movl   $0xf,0xc(%ebp)$/;"	l
c010a6b2	obj/kernel.asm	/^c010a6b2:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c010a6b9	obj/kernel.asm	/^c010a6b9:	00 $/;"	l
c010a6ba	obj/kernel.asm	/^c010a6ba:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a6c1	obj/kernel.asm	/^c010a6c1:	00 $/;"	l
c010a6c2	obj/kernel.asm	/^c010a6c2:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a6c5	obj/kernel.asm	/^c010a6c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a6c8	obj/kernel.asm	/^c010a6c8:	e8 cc 1b 00 00       	call   c010c299 <memset>$/;"	l
c010a6cd	obj/kernel.asm	/^c010a6cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a6d0	obj/kernel.asm	/^c010a6d0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a6d4	obj/kernel.asm	/^c010a6d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6d7	obj/kernel.asm	/^c010a6d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a6db	obj/kernel.asm	/^c010a6db:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a6de	obj/kernel.asm	/^c010a6de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a6e1	obj/kernel.asm	/^c010a6e1:	e8 95 1c 00 00       	call   c010c37b <memcpy>$/;"	l
c010a6e6	obj/kernel.asm	/^c010a6e6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a6ea	obj/kernel.asm	/^c010a6ea:	74 4a                	je     c010a736 <do_execve+0xd1>$/;"	l
c010a6ec	obj/kernel.asm	/^c010a6ec:	a1 8c 1e 1b c0       	mov    0xc01b1e8c,%eax$/;"	l
c010a6f1	obj/kernel.asm	/^c010a6f1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a6f4	obj/kernel.asm	/^c010a6f4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6f7	obj/kernel.asm	/^c010a6f7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010a6fa	obj/kernel.asm	/^c010a6fa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a6fd	obj/kernel.asm	/^c010a6fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a700	obj/kernel.asm	/^c010a700:	e8 aa ec ff ff       	call   c01093af <mm_count_dec>$/;"	l
c010a705	obj/kernel.asm	/^c010a705:	85 c0                	test   %eax,%eax$/;"	l
c010a707	obj/kernel.asm	/^c010a707:	75 21                	jne    c010a72a <do_execve+0xc5>$/;"	l
c010a709	obj/kernel.asm	/^c010a709:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a70c	obj/kernel.asm	/^c010a70c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a70f	obj/kernel.asm	/^c010a70f:	e8 50 dd ff ff       	call   c0108464 <exit_mmap>$/;"	l
c010a714	obj/kernel.asm	/^c010a714:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a717	obj/kernel.asm	/^c010a717:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a71a	obj/kernel.asm	/^c010a71a:	e8 d9 f3 ff ff       	call   c0109af8 <put_pgdir>$/;"	l
c010a71f	obj/kernel.asm	/^c010a71f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a722	obj/kernel.asm	/^c010a722:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a725	obj/kernel.asm	/^c010a725:	e8 7b da ff ff       	call   c01081a5 <mm_destroy>$/;"	l
c010a72a	obj/kernel.asm	/^c010a72a:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a72f	obj/kernel.asm	/^c010a72f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010a736	obj/kernel.asm	/^c010a736:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a739	obj/kernel.asm	/^c010a739:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a73d	obj/kernel.asm	/^c010a73d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a740	obj/kernel.asm	/^c010a740:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a743	obj/kernel.asm	/^c010a743:	e8 bb f8 ff ff       	call   c010a003 <load_icode>$/;"	l
c010a748	obj/kernel.asm	/^c010a748:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a74b	obj/kernel.asm	/^c010a74b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a74f	obj/kernel.asm	/^c010a74f:	74 2f                	je     c010a780 <do_execve+0x11b>$/;"	l
c010a751	obj/kernel.asm	/^c010a751:	90                   	nop$/;"	l
c010a752	obj/kernel.asm	/^c010a752:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a755	obj/kernel.asm	/^c010a755:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a758	obj/kernel.asm	/^c010a758:	e8 d6 f6 ff ff       	call   c0109e33 <do_exit>$/;"	l
c010a75d	obj/kernel.asm	/^c010a75d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a760	obj/kernel.asm	/^c010a760:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a764	obj/kernel.asm	/^c010a764:	c7 44 24 08 23 e6 10 	movl   $0xc010e623,0x8(%esp)$/;"	l
c010a76b	obj/kernel.asm	/^c010a76b:	c0 $/;"	l
c010a76c	obj/kernel.asm	/^c010a76c:	c7 44 24 04 c7 02 00 	movl   $0x2c7,0x4(%esp)$/;"	l
c010a773	obj/kernel.asm	/^c010a773:	00 $/;"	l
c010a774	obj/kernel.asm	/^c010a774:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a77b	obj/kernel.asm	/^c010a77b:	e8 5a 66 ff ff       	call   c0100dda <__panic>$/;"	l
c010a780	obj/kernel.asm	/^c010a780:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a785	obj/kernel.asm	/^c010a785:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010a788	obj/kernel.asm	/^c010a788:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010a78c	obj/kernel.asm	/^c010a78c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a78f	obj/kernel.asm	/^c010a78f:	e8 96 ed ff ff       	call   c010952a <set_proc_name>$/;"	l
c010a794	obj/kernel.asm	/^c010a794:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a799	obj/kernel.asm	/^c010a799:	c9                   	leave  $/;"	l
c010a79a	obj/kernel.asm	/^c010a79a:	c3                   	ret    $/;"	l
c010a79b	obj/kernel.asm	/^c010a79b <do_yield>:$/;"	l
c010a79b	obj/kernel.asm	/^c010a79b:	55                   	push   %ebp$/;"	l
c010a79c	obj/kernel.asm	/^c010a79c:	89 e5                	mov    %esp,%ebp$/;"	l
c010a79e	obj/kernel.asm	/^c010a79e:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a7a3	obj/kernel.asm	/^c010a7a3:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010a7aa	obj/kernel.asm	/^c010a7aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a7af	obj/kernel.asm	/^c010a7af:	5d                   	pop    %ebp$/;"	l
c010a7b0	obj/kernel.asm	/^c010a7b0:	c3                   	ret    $/;"	l
c010a7b1	obj/kernel.asm	/^c010a7b1 <do_wait>:$/;"	l
c010a7b1	obj/kernel.asm	/^c010a7b1:	55                   	push   %ebp$/;"	l
c010a7b2	obj/kernel.asm	/^c010a7b2:	89 e5                	mov    %esp,%ebp$/;"	l
c010a7b4	obj/kernel.asm	/^c010a7b4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a7b7	obj/kernel.asm	/^c010a7b7:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a7bc	obj/kernel.asm	/^c010a7bc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a7bf	obj/kernel.asm	/^c010a7bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a7c2	obj/kernel.asm	/^c010a7c2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a7c6	obj/kernel.asm	/^c010a7c6:	74 30                	je     c010a7f8 <do_wait+0x47>$/;"	l
c010a7c8	obj/kernel.asm	/^c010a7c8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a7cb	obj/kernel.asm	/^c010a7cb:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010a7d2	obj/kernel.asm	/^c010a7d2:	00 $/;"	l
c010a7d3	obj/kernel.asm	/^c010a7d3:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c010a7da	obj/kernel.asm	/^c010a7da:	00 $/;"	l
c010a7db	obj/kernel.asm	/^c010a7db:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a7df	obj/kernel.asm	/^c010a7df:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a7e2	obj/kernel.asm	/^c010a7e2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a7e5	obj/kernel.asm	/^c010a7e5:	e8 cf e6 ff ff       	call   c0108eb9 <user_mem_check>$/;"	l
c010a7ea	obj/kernel.asm	/^c010a7ea:	85 c0                	test   %eax,%eax$/;"	l
c010a7ec	obj/kernel.asm	/^c010a7ec:	75 0a                	jne    c010a7f8 <do_wait+0x47>$/;"	l
c010a7ee	obj/kernel.asm	/^c010a7ee:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a7f3	obj/kernel.asm	/^c010a7f3:	e9 4b 01 00 00       	jmp    c010a943 <do_wait+0x192>$/;"	l
c010a7f8	obj/kernel.asm	/^c010a7f8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010a7ff	obj/kernel.asm	/^c010a7ff:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a803	obj/kernel.asm	/^c010a803:	74 39                	je     c010a83e <do_wait+0x8d>$/;"	l
c010a805	obj/kernel.asm	/^c010a805:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a808	obj/kernel.asm	/^c010a808:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a80b	obj/kernel.asm	/^c010a80b:	e8 fb f0 ff ff       	call   c010990b <find_proc>$/;"	l
c010a810	obj/kernel.asm	/^c010a810:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a813	obj/kernel.asm	/^c010a813:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a817	obj/kernel.asm	/^c010a817:	74 54                	je     c010a86d <do_wait+0xbc>$/;"	l
c010a819	obj/kernel.asm	/^c010a819:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a81c	obj/kernel.asm	/^c010a81c:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010a81f	obj/kernel.asm	/^c010a81f:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a824	obj/kernel.asm	/^c010a824:	39 c2                	cmp    %eax,%edx$/;"	l
c010a826	obj/kernel.asm	/^c010a826:	75 45                	jne    c010a86d <do_wait+0xbc>$/;"	l
c010a828	obj/kernel.asm	/^c010a828:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a82f	obj/kernel.asm	/^c010a82f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a832	obj/kernel.asm	/^c010a832:	8b 00                	mov    (%eax),%eax$/;"	l
c010a834	obj/kernel.asm	/^c010a834:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a837	obj/kernel.asm	/^c010a837:	75 34                	jne    c010a86d <do_wait+0xbc>$/;"	l
c010a839	obj/kernel.asm	/^c010a839:	e9 80 00 00 00       	jmp    c010a8be <do_wait+0x10d>$/;"	l
c010a83e	obj/kernel.asm	/^c010a83e:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a843	obj/kernel.asm	/^c010a843:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010a846	obj/kernel.asm	/^c010a846:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a849	obj/kernel.asm	/^c010a849:	eb 1c                	jmp    c010a867 <do_wait+0xb6>$/;"	l
c010a84b	obj/kernel.asm	/^c010a84b:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a852	obj/kernel.asm	/^c010a852:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a855	obj/kernel.asm	/^c010a855:	8b 00                	mov    (%eax),%eax$/;"	l
c010a857	obj/kernel.asm	/^c010a857:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a85a	obj/kernel.asm	/^c010a85a:	75 02                	jne    c010a85e <do_wait+0xad>$/;"	l
c010a85c	obj/kernel.asm	/^c010a85c:	eb 60                	jmp    c010a8be <do_wait+0x10d>$/;"	l
c010a85e	obj/kernel.asm	/^c010a85e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a861	obj/kernel.asm	/^c010a861:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010a864	obj/kernel.asm	/^c010a864:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a867	obj/kernel.asm	/^c010a867:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a86b	obj/kernel.asm	/^c010a86b:	75 de                	jne    c010a84b <do_wait+0x9a>$/;"	l
c010a86d	obj/kernel.asm	/^c010a86d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a871	obj/kernel.asm	/^c010a871:	74 41                	je     c010a8b4 <do_wait+0x103>$/;"	l
c010a873	obj/kernel.asm	/^c010a873:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a878	obj/kernel.asm	/^c010a878:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a87e	obj/kernel.asm	/^c010a87e:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a883	obj/kernel.asm	/^c010a883:	c7 40 6c 01 00 00 80 	movl   $0x80000001,0x6c(%eax)$/;"	l
c010a88a	obj/kernel.asm	/^c010a88a:	e8 72 09 00 00       	call   c010b201 <schedule>$/;"	l
c010a88f	obj/kernel.asm	/^c010a88f:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a894	obj/kernel.asm	/^c010a894:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a897	obj/kernel.asm	/^c010a897:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a89a	obj/kernel.asm	/^c010a89a:	85 c0                	test   %eax,%eax$/;"	l
c010a89c	obj/kernel.asm	/^c010a89c:	74 11                	je     c010a8af <do_wait+0xfe>$/;"	l
c010a89e	obj/kernel.asm	/^c010a89e:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c010a8a5	obj/kernel.asm	/^c010a8a5:	e8 89 f5 ff ff       	call   c0109e33 <do_exit>$/;"	l
c010a8aa	obj/kernel.asm	/^c010a8aa:	e9 49 ff ff ff       	jmp    c010a7f8 <do_wait+0x47>$/;"	l
c010a8af	obj/kernel.asm	/^c010a8af:	e9 44 ff ff ff       	jmp    c010a7f8 <do_wait+0x47>$/;"	l
c010a8b4	obj/kernel.asm	/^c010a8b4:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010a8b9	obj/kernel.asm	/^c010a8b9:	e9 85 00 00 00       	jmp    c010a943 <do_wait+0x192>$/;"	l
c010a8be	obj/kernel.asm	/^c010a8be:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010a8c3	obj/kernel.asm	/^c010a8c3:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a8c6	obj/kernel.asm	/^c010a8c6:	74 0a                	je     c010a8d2 <do_wait+0x121>$/;"	l
c010a8c8	obj/kernel.asm	/^c010a8c8:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c010a8cd	obj/kernel.asm	/^c010a8cd:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a8d0	obj/kernel.asm	/^c010a8d0:	75 1c                	jne    c010a8ee <do_wait+0x13d>$/;"	l
c010a8d2	obj/kernel.asm	/^c010a8d2:	c7 44 24 08 36 e6 10 	movl   $0xc010e636,0x8(%esp)$/;"	l
c010a8d9	obj/kernel.asm	/^c010a8d9:	c0 $/;"	l
c010a8da	obj/kernel.asm	/^c010a8da:	c7 44 24 04 00 03 00 	movl   $0x300,0x4(%esp)$/;"	l
c010a8e1	obj/kernel.asm	/^c010a8e1:	00 $/;"	l
c010a8e2	obj/kernel.asm	/^c010a8e2:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010a8e9	obj/kernel.asm	/^c010a8e9:	e8 ec 64 ff ff       	call   c0100dda <__panic>$/;"	l
c010a8ee	obj/kernel.asm	/^c010a8ee:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a8f2	obj/kernel.asm	/^c010a8f2:	74 0b                	je     c010a8ff <do_wait+0x14e>$/;"	l
c010a8f4	obj/kernel.asm	/^c010a8f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a8f7	obj/kernel.asm	/^c010a8f7:	8b 50 68             	mov    0x68(%eax),%edx$/;"	l
c010a8fa	obj/kernel.asm	/^c010a8fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a8fd	obj/kernel.asm	/^c010a8fd:	89 10                	mov    %edx,(%eax)$/;"	l
c010a8ff	obj/kernel.asm	/^c010a8ff:	e8 cb e8 ff ff       	call   c01091cf <__intr_save>$/;"	l
c010a904	obj/kernel.asm	/^c010a904:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a907	obj/kernel.asm	/^c010a907:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a90a	obj/kernel.asm	/^c010a90a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a90d	obj/kernel.asm	/^c010a90d:	e8 c6 ef ff ff       	call   c01098d8 <unhash_proc>$/;"	l
c010a912	obj/kernel.asm	/^c010a912:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a915	obj/kernel.asm	/^c010a915:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a918	obj/kernel.asm	/^c010a918:	e8 37 ed ff ff       	call   c0109654 <remove_links>$/;"	l
c010a91d	obj/kernel.asm	/^c010a91d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a920	obj/kernel.asm	/^c010a920:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a923	obj/kernel.asm	/^c010a923:	e8 d1 e8 ff ff       	call   c01091f9 <__intr_restore>$/;"	l
c010a928	obj/kernel.asm	/^c010a928:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a92b	obj/kernel.asm	/^c010a92b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a92e	obj/kernel.asm	/^c010a92e:	e8 f8 f0 ff ff       	call   c0109a2b <put_kstack>$/;"	l
c010a933	obj/kernel.asm	/^c010a933:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a936	obj/kernel.asm	/^c010a936:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a939	obj/kernel.asm	/^c010a939:	e8 0d a3 ff ff       	call   c0104c4b <kfree>$/;"	l
c010a93e	obj/kernel.asm	/^c010a93e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a943	obj/kernel.asm	/^c010a943:	c9                   	leave  $/;"	l
c010a944	obj/kernel.asm	/^c010a944:	c3                   	ret    $/;"	l
c010a945	obj/kernel.asm	/^c010a945 <do_kill>:$/;"	l
c010a945	obj/kernel.asm	/^c010a945:	55                   	push   %ebp$/;"	l
c010a946	obj/kernel.asm	/^c010a946:	89 e5                	mov    %esp,%ebp$/;"	l
c010a948	obj/kernel.asm	/^c010a948:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a94b	obj/kernel.asm	/^c010a94b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a94e	obj/kernel.asm	/^c010a94e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a951	obj/kernel.asm	/^c010a951:	e8 b5 ef ff ff       	call   c010990b <find_proc>$/;"	l
c010a956	obj/kernel.asm	/^c010a956:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a959	obj/kernel.asm	/^c010a959:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a95d	obj/kernel.asm	/^c010a95d:	74 41                	je     c010a9a0 <do_kill+0x5b>$/;"	l
c010a95f	obj/kernel.asm	/^c010a95f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a962	obj/kernel.asm	/^c010a962:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a965	obj/kernel.asm	/^c010a965:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a968	obj/kernel.asm	/^c010a968:	85 c0                	test   %eax,%eax$/;"	l
c010a96a	obj/kernel.asm	/^c010a96a:	75 2d                	jne    c010a999 <do_kill+0x54>$/;"	l
c010a96c	obj/kernel.asm	/^c010a96c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a96f	obj/kernel.asm	/^c010a96f:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a972	obj/kernel.asm	/^c010a972:	83 c8 01             	or     $0x1,%eax$/;"	l
c010a975	obj/kernel.asm	/^c010a975:	89 c2                	mov    %eax,%edx$/;"	l
c010a977	obj/kernel.asm	/^c010a977:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a97a	obj/kernel.asm	/^c010a97a:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010a97d	obj/kernel.asm	/^c010a97d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a980	obj/kernel.asm	/^c010a980:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010a983	obj/kernel.asm	/^c010a983:	85 c0                	test   %eax,%eax$/;"	l
c010a985	obj/kernel.asm	/^c010a985:	79 0b                	jns    c010a992 <do_kill+0x4d>$/;"	l
c010a987	obj/kernel.asm	/^c010a987:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a98a	obj/kernel.asm	/^c010a98a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a98d	obj/kernel.asm	/^c010a98d:	e8 d6 07 00 00       	call   c010b168 <wakeup_proc>$/;"	l
c010a992	obj/kernel.asm	/^c010a992:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a997	obj/kernel.asm	/^c010a997:	eb 0c                	jmp    c010a9a5 <do_kill+0x60>$/;"	l
c010a999	obj/kernel.asm	/^c010a999:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010a99e	obj/kernel.asm	/^c010a99e:	eb 05                	jmp    c010a9a5 <do_kill+0x60>$/;"	l
c010a9a0	obj/kernel.asm	/^c010a9a0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a9a5	obj/kernel.asm	/^c010a9a5:	c9                   	leave  $/;"	l
c010a9a6	obj/kernel.asm	/^c010a9a6:	c3                   	ret    $/;"	l
c010a9a7	obj/kernel.asm	/^c010a9a7 <kernel_execve>:$/;"	l
c010a9a7	obj/kernel.asm	/^c010a9a7:	55                   	push   %ebp$/;"	l
c010a9a8	obj/kernel.asm	/^c010a9a8:	89 e5                	mov    %esp,%ebp$/;"	l
c010a9aa	obj/kernel.asm	/^c010a9aa:	57                   	push   %edi$/;"	l
c010a9ab	obj/kernel.asm	/^c010a9ab:	56                   	push   %esi$/;"	l
c010a9ac	obj/kernel.asm	/^c010a9ac:	53                   	push   %ebx$/;"	l
c010a9ad	obj/kernel.asm	/^c010a9ad:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c010a9b0	obj/kernel.asm	/^c010a9b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9b3	obj/kernel.asm	/^c010a9b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a9b6	obj/kernel.asm	/^c010a9b6:	e8 af 15 00 00       	call   c010bf6a <strlen>$/;"	l
c010a9bb	obj/kernel.asm	/^c010a9bb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a9be	obj/kernel.asm	/^c010a9be:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010a9c3	obj/kernel.asm	/^c010a9c3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a9c6	obj/kernel.asm	/^c010a9c6:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
c010a9c9	obj/kernel.asm	/^c010a9c9:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010a9cc	obj/kernel.asm	/^c010a9cc:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
c010a9cf	obj/kernel.asm	/^c010a9cf:	89 f7                	mov    %esi,%edi$/;"	l
c010a9d1	obj/kernel.asm	/^c010a9d1:	cd 80                	int    $0x80$/;"	l
c010a9d3	obj/kernel.asm	/^c010a9d3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a9d6	obj/kernel.asm	/^c010a9d6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a9d9	obj/kernel.asm	/^c010a9d9:	83 c4 2c             	add    $0x2c,%esp$/;"	l
c010a9dc	obj/kernel.asm	/^c010a9dc:	5b                   	pop    %ebx$/;"	l
c010a9dd	obj/kernel.asm	/^c010a9dd:	5e                   	pop    %esi$/;"	l
c010a9de	obj/kernel.asm	/^c010a9de:	5f                   	pop    %edi$/;"	l
c010a9df	obj/kernel.asm	/^c010a9df:	5d                   	pop    %ebp$/;"	l
c010a9e0	obj/kernel.asm	/^c010a9e0:	c3                   	ret    $/;"	l
c010a9e1	obj/kernel.asm	/^c010a9e1 <user_main>:$/;"	l
c010a9e1	obj/kernel.asm	/^c010a9e1:	55                   	push   %ebp$/;"	l
c010a9e2	obj/kernel.asm	/^c010a9e2:	89 e5                	mov    %esp,%ebp$/;"	l
c010a9e4	obj/kernel.asm	/^c010a9e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a9e7	obj/kernel.asm	/^c010a9e7:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010a9ec	obj/kernel.asm	/^c010a9ec:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a9ef	obj/kernel.asm	/^c010a9ef:	c7 44 24 08 52 e6 10 	movl   $0xc010e652,0x8(%esp)$/;"	l
c010a9f6	obj/kernel.asm	/^c010a9f6:	c0 $/;"	l
c010a9f7	obj/kernel.asm	/^c010a9f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a9fb	obj/kernel.asm	/^c010a9fb:	c7 04 24 5c e6 10 c0 	movl   $0xc010e65c,(%esp)$/;"	l
c010aa02	obj/kernel.asm	/^c010aa02:	e8 51 59 ff ff       	call   c0100358 <cprintf>$/;"	l
c010aa07	obj/kernel.asm	/^c010aa07:	b8 c7 79 00 00       	mov    $0x79c7,%eax$/;"	l
c010aa0c	obj/kernel.asm	/^c010aa0c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010aa10	obj/kernel.asm	/^c010aa10:	c7 44 24 04 11 15 18 	movl   $0xc0181511,0x4(%esp)$/;"	l
c010aa17	obj/kernel.asm	/^c010aa17:	c0 $/;"	l
c010aa18	obj/kernel.asm	/^c010aa18:	c7 04 24 52 e6 10 c0 	movl   $0xc010e652,(%esp)$/;"	l
c010aa1f	obj/kernel.asm	/^c010aa1f:	e8 83 ff ff ff       	call   c010a9a7 <kernel_execve>$/;"	l
c010aa24	obj/kernel.asm	/^c010aa24:	c7 44 24 08 83 e6 10 	movl   $0xc010e683,0x8(%esp)$/;"	l
c010aa2b	obj/kernel.asm	/^c010aa2b:	c0 $/;"	l
c010aa2c	obj/kernel.asm	/^c010aa2c:	c7 44 24 04 49 03 00 	movl   $0x349,0x4(%esp)$/;"	l
c010aa33	obj/kernel.asm	/^c010aa33:	00 $/;"	l
c010aa34	obj/kernel.asm	/^c010aa34:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010aa3b	obj/kernel.asm	/^c010aa3b:	e8 9a 63 ff ff       	call   c0100dda <__panic>$/;"	l
c010aa40	obj/kernel.asm	/^c010aa40 <init_main>:$/;"	l
c010aa40	obj/kernel.asm	/^c010aa40:	55                   	push   %ebp$/;"	l
c010aa41	obj/kernel.asm	/^c010aa41:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa43	obj/kernel.asm	/^c010aa43:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010aa46	obj/kernel.asm	/^c010aa46:	e8 f7 a6 ff ff       	call   c0105142 <nr_free_pages>$/;"	l
c010aa4b	obj/kernel.asm	/^c010aa4b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aa4e	obj/kernel.asm	/^c010aa4e:	e8 c0 a0 ff ff       	call   c0104b13 <kallocated>$/;"	l
c010aa53	obj/kernel.asm	/^c010aa53:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aa56	obj/kernel.asm	/^c010aa56:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010aa5d	obj/kernel.asm	/^c010aa5d:	00 $/;"	l
c010aa5e	obj/kernel.asm	/^c010aa5e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010aa65	obj/kernel.asm	/^c010aa65:	00 $/;"	l
c010aa66	obj/kernel.asm	/^c010aa66:	c7 04 24 e1 a9 10 c0 	movl   $0xc010a9e1,(%esp)$/;"	l
c010aa6d	obj/kernel.asm	/^c010aa6d:	e8 0b ef ff ff       	call   c010997d <kernel_thread>$/;"	l
c010aa72	obj/kernel.asm	/^c010aa72:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010aa75	obj/kernel.asm	/^c010aa75:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010aa79	obj/kernel.asm	/^c010aa79:	7f 1c                	jg     c010aa97 <init_main+0x57>$/;"	l
c010aa7b	obj/kernel.asm	/^c010aa7b:	c7 44 24 08 9d e6 10 	movl   $0xc010e69d,0x8(%esp)$/;"	l
c010aa82	obj/kernel.asm	/^c010aa82:	c0 $/;"	l
c010aa83	obj/kernel.asm	/^c010aa83:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
c010aa8a	obj/kernel.asm	/^c010aa8a:	00 $/;"	l
c010aa8b	obj/kernel.asm	/^c010aa8b:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010aa92	obj/kernel.asm	/^c010aa92:	e8 43 63 ff ff       	call   c0100dda <__panic>$/;"	l
c010aa97	obj/kernel.asm	/^c010aa97:	eb 05                	jmp    c010aa9e <init_main+0x5e>$/;"	l
c010aa99	obj/kernel.asm	/^c010aa99:	e8 63 07 00 00       	call   c010b201 <schedule>$/;"	l
c010aa9e	obj/kernel.asm	/^c010aa9e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010aaa5	obj/kernel.asm	/^c010aaa5:	00 $/;"	l
c010aaa6	obj/kernel.asm	/^c010aaa6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010aaad	obj/kernel.asm	/^c010aaad:	e8 ff fc ff ff       	call   c010a7b1 <do_wait>$/;"	l
c010aab2	obj/kernel.asm	/^c010aab2:	85 c0                	test   %eax,%eax$/;"	l
c010aab4	obj/kernel.asm	/^c010aab4:	74 e3                	je     c010aa99 <init_main+0x59>$/;"	l
c010aab6	obj/kernel.asm	/^c010aab6:	c7 04 24 b8 e6 10 c0 	movl   $0xc010e6b8,(%esp)$/;"	l
c010aabd	obj/kernel.asm	/^c010aabd:	e8 96 58 ff ff       	call   c0100358 <cprintf>$/;"	l
c010aac2	obj/kernel.asm	/^c010aac2:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c010aac7	obj/kernel.asm	/^c010aac7:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010aaca	obj/kernel.asm	/^c010aaca:	85 c0                	test   %eax,%eax$/;"	l
c010aacc	obj/kernel.asm	/^c010aacc:	75 18                	jne    c010aae6 <init_main+0xa6>$/;"	l
c010aace	obj/kernel.asm	/^c010aace:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c010aad3	obj/kernel.asm	/^c010aad3:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010aad6	obj/kernel.asm	/^c010aad6:	85 c0                	test   %eax,%eax$/;"	l
c010aad8	obj/kernel.asm	/^c010aad8:	75 0c                	jne    c010aae6 <init_main+0xa6>$/;"	l
c010aada	obj/kernel.asm	/^c010aada:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c010aadf	obj/kernel.asm	/^c010aadf:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010aae2	obj/kernel.asm	/^c010aae2:	85 c0                	test   %eax,%eax$/;"	l
c010aae4	obj/kernel.asm	/^c010aae4:	74 24                	je     c010ab0a <init_main+0xca>$/;"	l
c010aae6	obj/kernel.asm	/^c010aae6:	c7 44 24 0c dc e6 10 	movl   $0xc010e6dc,0xc(%esp)$/;"	l
c010aaed	obj/kernel.asm	/^c010aaed:	c0 $/;"	l
c010aaee	obj/kernel.asm	/^c010aaee:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010aaf5	obj/kernel.asm	/^c010aaf5:	c0 $/;"	l
c010aaf6	obj/kernel.asm	/^c010aaf6:	c7 44 24 04 5c 03 00 	movl   $0x35c,0x4(%esp)$/;"	l
c010aafd	obj/kernel.asm	/^c010aafd:	00 $/;"	l
c010aafe	obj/kernel.asm	/^c010aafe:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010ab05	obj/kernel.asm	/^c010ab05:	e8 d0 62 ff ff       	call   c0100dda <__panic>$/;"	l
c010ab0a	obj/kernel.asm	/^c010ab0a:	a1 40 1e 1b c0       	mov    0xc01b1e40,%eax$/;"	l
c010ab0f	obj/kernel.asm	/^c010ab0f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ab12	obj/kernel.asm	/^c010ab12:	74 24                	je     c010ab38 <init_main+0xf8>$/;"	l
c010ab14	obj/kernel.asm	/^c010ab14:	c7 44 24 0c 27 e7 10 	movl   $0xc010e727,0xc(%esp)$/;"	l
c010ab1b	obj/kernel.asm	/^c010ab1b:	c0 $/;"	l
c010ab1c	obj/kernel.asm	/^c010ab1c:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010ab23	obj/kernel.asm	/^c010ab23:	c0 $/;"	l
c010ab24	obj/kernel.asm	/^c010ab24:	c7 44 24 04 5d 03 00 	movl   $0x35d,0x4(%esp)$/;"	l
c010ab2b	obj/kernel.asm	/^c010ab2b:	00 $/;"	l
c010ab2c	obj/kernel.asm	/^c010ab2c:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010ab33	obj/kernel.asm	/^c010ab33:	e8 a2 62 ff ff       	call   c0100dda <__panic>$/;"	l
c010ab38	obj/kernel.asm	/^c010ab38:	c7 45 e8 70 1f 1b c0 	movl   $0xc01b1f70,-0x18(%ebp)$/;"	l
c010ab3f	obj/kernel.asm	/^c010ab3f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ab42	obj/kernel.asm	/^c010ab42:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ab45	obj/kernel.asm	/^c010ab45:	8b 15 24 fe 1a c0    	mov    0xc01afe24,%edx$/;"	l
c010ab4b	obj/kernel.asm	/^c010ab4b:	83 c2 58             	add    $0x58,%edx$/;"	l
c010ab4e	obj/kernel.asm	/^c010ab4e:	39 d0                	cmp    %edx,%eax$/;"	l
c010ab50	obj/kernel.asm	/^c010ab50:	74 24                	je     c010ab76 <init_main+0x136>$/;"	l
c010ab52	obj/kernel.asm	/^c010ab52:	c7 44 24 0c 38 e7 10 	movl   $0xc010e738,0xc(%esp)$/;"	l
c010ab59	obj/kernel.asm	/^c010ab59:	c0 $/;"	l
c010ab5a	obj/kernel.asm	/^c010ab5a:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010ab61	obj/kernel.asm	/^c010ab61:	c0 $/;"	l
c010ab62	obj/kernel.asm	/^c010ab62:	c7 44 24 04 5e 03 00 	movl   $0x35e,0x4(%esp)$/;"	l
c010ab69	obj/kernel.asm	/^c010ab69:	00 $/;"	l
c010ab6a	obj/kernel.asm	/^c010ab6a:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010ab71	obj/kernel.asm	/^c010ab71:	e8 64 62 ff ff       	call   c0100dda <__panic>$/;"	l
c010ab76	obj/kernel.asm	/^c010ab76:	c7 45 e4 70 1f 1b c0 	movl   $0xc01b1f70,-0x1c(%ebp)$/;"	l
c010ab7d	obj/kernel.asm	/^c010ab7d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ab80	obj/kernel.asm	/^c010ab80:	8b 00                	mov    (%eax),%eax$/;"	l
c010ab82	obj/kernel.asm	/^c010ab82:	8b 15 24 fe 1a c0    	mov    0xc01afe24,%edx$/;"	l
c010ab88	obj/kernel.asm	/^c010ab88:	83 c2 58             	add    $0x58,%edx$/;"	l
c010ab8b	obj/kernel.asm	/^c010ab8b:	39 d0                	cmp    %edx,%eax$/;"	l
c010ab8d	obj/kernel.asm	/^c010ab8d:	74 24                	je     c010abb3 <init_main+0x173>$/;"	l
c010ab8f	obj/kernel.asm	/^c010ab8f:	c7 44 24 0c 68 e7 10 	movl   $0xc010e768,0xc(%esp)$/;"	l
c010ab96	obj/kernel.asm	/^c010ab96:	c0 $/;"	l
c010ab97	obj/kernel.asm	/^c010ab97:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010ab9e	obj/kernel.asm	/^c010ab9e:	c0 $/;"	l
c010ab9f	obj/kernel.asm	/^c010ab9f:	c7 44 24 04 5f 03 00 	movl   $0x35f,0x4(%esp)$/;"	l
c010aba6	obj/kernel.asm	/^c010aba6:	00 $/;"	l
c010aba7	obj/kernel.asm	/^c010aba7:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010abae	obj/kernel.asm	/^c010abae:	e8 27 62 ff ff       	call   c0100dda <__panic>$/;"	l
c010abb3	obj/kernel.asm	/^c010abb3:	c7 04 24 98 e7 10 c0 	movl   $0xc010e798,(%esp)$/;"	l
c010abba	obj/kernel.asm	/^c010abba:	e8 99 57 ff ff       	call   c0100358 <cprintf>$/;"	l
c010abbf	obj/kernel.asm	/^c010abbf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010abc4	obj/kernel.asm	/^c010abc4:	c9                   	leave  $/;"	l
c010abc5	obj/kernel.asm	/^c010abc5:	c3                   	ret    $/;"	l
c010abc6	obj/kernel.asm	/^c010abc6 <proc_init>:$/;"	l
c010abc6	obj/kernel.asm	/^c010abc6:	55                   	push   %ebp$/;"	l
c010abc7	obj/kernel.asm	/^c010abc7:	89 e5                	mov    %esp,%ebp$/;"	l
c010abc9	obj/kernel.asm	/^c010abc9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010abcc	obj/kernel.asm	/^c010abcc:	c7 45 ec 70 1f 1b c0 	movl   $0xc01b1f70,-0x14(%ebp)$/;"	l
c010abd3	obj/kernel.asm	/^c010abd3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010abd6	obj/kernel.asm	/^c010abd6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010abd9	obj/kernel.asm	/^c010abd9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010abdc	obj/kernel.asm	/^c010abdc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010abdf	obj/kernel.asm	/^c010abdf:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010abe2	obj/kernel.asm	/^c010abe2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010abe5	obj/kernel.asm	/^c010abe5:	89 10                	mov    %edx,(%eax)$/;"	l
c010abe7	obj/kernel.asm	/^c010abe7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010abee	obj/kernel.asm	/^c010abee:	eb 26                	jmp    c010ac16 <proc_init+0x50>$/;"	l
c010abf0	obj/kernel.asm	/^c010abf0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010abf3	obj/kernel.asm	/^c010abf3:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010abf6	obj/kernel.asm	/^c010abf6:	05 40 fe 1a c0       	add    $0xc01afe40,%eax$/;"	l
c010abfb	obj/kernel.asm	/^c010abfb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010abfe	obj/kernel.asm	/^c010abfe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac01	obj/kernel.asm	/^c010ac01:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010ac04	obj/kernel.asm	/^c010ac04:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ac07	obj/kernel.asm	/^c010ac07:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac0a	obj/kernel.asm	/^c010ac0a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010ac0d	obj/kernel.asm	/^c010ac0d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac10	obj/kernel.asm	/^c010ac10:	89 10                	mov    %edx,(%eax)$/;"	l
c010ac12	obj/kernel.asm	/^c010ac12:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010ac16	obj/kernel.asm	/^c010ac16:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010ac1d	obj/kernel.asm	/^c010ac1d:	7e d1                	jle    c010abf0 <proc_init+0x2a>$/;"	l
c010ac1f	obj/kernel.asm	/^c010ac1f:	e8 dd e7 ff ff       	call   c0109401 <alloc_proc>$/;"	l
c010ac24	obj/kernel.asm	/^c010ac24:	a3 20 fe 1a c0       	mov    %eax,0xc01afe20$/;"	l
c010ac29	obj/kernel.asm	/^c010ac29:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010ac2e	obj/kernel.asm	/^c010ac2e:	85 c0                	test   %eax,%eax$/;"	l
c010ac30	obj/kernel.asm	/^c010ac30:	75 1c                	jne    c010ac4e <proc_init+0x88>$/;"	l
c010ac32	obj/kernel.asm	/^c010ac32:	c7 44 24 08 b1 e7 10 	movl   $0xc010e7b1,0x8(%esp)$/;"	l
c010ac39	obj/kernel.asm	/^c010ac39:	c0 $/;"	l
c010ac3a	obj/kernel.asm	/^c010ac3a:	c7 44 24 04 71 03 00 	movl   $0x371,0x4(%esp)$/;"	l
c010ac41	obj/kernel.asm	/^c010ac41:	00 $/;"	l
c010ac42	obj/kernel.asm	/^c010ac42:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010ac49	obj/kernel.asm	/^c010ac49:	e8 8c 61 ff ff       	call   c0100dda <__panic>$/;"	l
c010ac4e	obj/kernel.asm	/^c010ac4e:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010ac53	obj/kernel.asm	/^c010ac53:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010ac5a	obj/kernel.asm	/^c010ac5a:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010ac5f	obj/kernel.asm	/^c010ac5f:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010ac65	obj/kernel.asm	/^c010ac65:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010ac6a	obj/kernel.asm	/^c010ac6a:	ba 00 b0 12 c0       	mov    $0xc012b000,%edx$/;"	l
c010ac6f	obj/kernel.asm	/^c010ac6f:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010ac72	obj/kernel.asm	/^c010ac72:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010ac77	obj/kernel.asm	/^c010ac77:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010ac7e	obj/kernel.asm	/^c010ac7e:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010ac83	obj/kernel.asm	/^c010ac83:	c7 44 24 04 c9 e7 10 	movl   $0xc010e7c9,0x4(%esp)$/;"	l
c010ac8a	obj/kernel.asm	/^c010ac8a:	c0 $/;"	l
c010ac8b	obj/kernel.asm	/^c010ac8b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ac8e	obj/kernel.asm	/^c010ac8e:	e8 97 e8 ff ff       	call   c010952a <set_proc_name>$/;"	l
c010ac93	obj/kernel.asm	/^c010ac93:	a1 40 1e 1b c0       	mov    0xc01b1e40,%eax$/;"	l
c010ac98	obj/kernel.asm	/^c010ac98:	83 c0 01             	add    $0x1,%eax$/;"	l
c010ac9b	obj/kernel.asm	/^c010ac9b:	a3 40 1e 1b c0       	mov    %eax,0xc01b1e40$/;"	l
c010aca0	obj/kernel.asm	/^c010aca0:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010aca5	obj/kernel.asm	/^c010aca5:	a3 28 fe 1a c0       	mov    %eax,0xc01afe28$/;"	l
c010acaa	obj/kernel.asm	/^c010acaa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010acb1	obj/kernel.asm	/^c010acb1:	00 $/;"	l
c010acb2	obj/kernel.asm	/^c010acb2:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010acb9	obj/kernel.asm	/^c010acb9:	00 $/;"	l
c010acba	obj/kernel.asm	/^c010acba:	c7 04 24 40 aa 10 c0 	movl   $0xc010aa40,(%esp)$/;"	l
c010acc1	obj/kernel.asm	/^c010acc1:	e8 b7 ec ff ff       	call   c010997d <kernel_thread>$/;"	l
c010acc6	obj/kernel.asm	/^c010acc6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010acc9	obj/kernel.asm	/^c010acc9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010accd	obj/kernel.asm	/^c010accd:	7f 1c                	jg     c010aceb <proc_init+0x125>$/;"	l
c010accf	obj/kernel.asm	/^c010accf:	c7 44 24 08 ce e7 10 	movl   $0xc010e7ce,0x8(%esp)$/;"	l
c010acd6	obj/kernel.asm	/^c010acd6:	c0 $/;"	l
c010acd7	obj/kernel.asm	/^c010acd7:	c7 44 24 04 7f 03 00 	movl   $0x37f,0x4(%esp)$/;"	l
c010acde	obj/kernel.asm	/^c010acde:	00 $/;"	l
c010acdf	obj/kernel.asm	/^c010acdf:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010ace6	obj/kernel.asm	/^c010ace6:	e8 ef 60 ff ff       	call   c0100dda <__panic>$/;"	l
c010aceb	obj/kernel.asm	/^c010aceb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acee	obj/kernel.asm	/^c010acee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010acf1	obj/kernel.asm	/^c010acf1:	e8 15 ec ff ff       	call   c010990b <find_proc>$/;"	l
c010acf6	obj/kernel.asm	/^c010acf6:	a3 24 fe 1a c0       	mov    %eax,0xc01afe24$/;"	l
c010acfb	obj/kernel.asm	/^c010acfb:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c010ad00	obj/kernel.asm	/^c010ad00:	c7 44 24 04 e8 e7 10 	movl   $0xc010e7e8,0x4(%esp)$/;"	l
c010ad07	obj/kernel.asm	/^c010ad07:	c0 $/;"	l
c010ad08	obj/kernel.asm	/^c010ad08:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad0b	obj/kernel.asm	/^c010ad0b:	e8 1a e8 ff ff       	call   c010952a <set_proc_name>$/;"	l
c010ad10	obj/kernel.asm	/^c010ad10:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010ad15	obj/kernel.asm	/^c010ad15:	85 c0                	test   %eax,%eax$/;"	l
c010ad17	obj/kernel.asm	/^c010ad17:	74 0c                	je     c010ad25 <proc_init+0x15f>$/;"	l
c010ad19	obj/kernel.asm	/^c010ad19:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010ad1e	obj/kernel.asm	/^c010ad1e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ad21	obj/kernel.asm	/^c010ad21:	85 c0                	test   %eax,%eax$/;"	l
c010ad23	obj/kernel.asm	/^c010ad23:	74 24                	je     c010ad49 <proc_init+0x183>$/;"	l
c010ad25	obj/kernel.asm	/^c010ad25:	c7 44 24 0c f0 e7 10 	movl   $0xc010e7f0,0xc(%esp)$/;"	l
c010ad2c	obj/kernel.asm	/^c010ad2c:	c0 $/;"	l
c010ad2d	obj/kernel.asm	/^c010ad2d:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010ad34	obj/kernel.asm	/^c010ad34:	c0 $/;"	l
c010ad35	obj/kernel.asm	/^c010ad35:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
c010ad3c	obj/kernel.asm	/^c010ad3c:	00 $/;"	l
c010ad3d	obj/kernel.asm	/^c010ad3d:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010ad44	obj/kernel.asm	/^c010ad44:	e8 91 60 ff ff       	call   c0100dda <__panic>$/;"	l
c010ad49	obj/kernel.asm	/^c010ad49:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c010ad4e	obj/kernel.asm	/^c010ad4e:	85 c0                	test   %eax,%eax$/;"	l
c010ad50	obj/kernel.asm	/^c010ad50:	74 0d                	je     c010ad5f <proc_init+0x199>$/;"	l
c010ad52	obj/kernel.asm	/^c010ad52:	a1 24 fe 1a c0       	mov    0xc01afe24,%eax$/;"	l
c010ad57	obj/kernel.asm	/^c010ad57:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ad5a	obj/kernel.asm	/^c010ad5a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010ad5d	obj/kernel.asm	/^c010ad5d:	74 24                	je     c010ad83 <proc_init+0x1bd>$/;"	l
c010ad5f	obj/kernel.asm	/^c010ad5f:	c7 44 24 0c 18 e8 10 	movl   $0xc010e818,0xc(%esp)$/;"	l
c010ad66	obj/kernel.asm	/^c010ad66:	c0 $/;"	l
c010ad67	obj/kernel.asm	/^c010ad67:	c7 44 24 08 59 e4 10 	movl   $0xc010e459,0x8(%esp)$/;"	l
c010ad6e	obj/kernel.asm	/^c010ad6e:	c0 $/;"	l
c010ad6f	obj/kernel.asm	/^c010ad6f:	c7 44 24 04 86 03 00 	movl   $0x386,0x4(%esp)$/;"	l
c010ad76	obj/kernel.asm	/^c010ad76:	00 $/;"	l
c010ad77	obj/kernel.asm	/^c010ad77:	c7 04 24 2c e4 10 c0 	movl   $0xc010e42c,(%esp)$/;"	l
c010ad7e	obj/kernel.asm	/^c010ad7e:	e8 57 60 ff ff       	call   c0100dda <__panic>$/;"	l
c010ad83	obj/kernel.asm	/^c010ad83:	c9                   	leave  $/;"	l
c010ad84	obj/kernel.asm	/^c010ad84:	c3                   	ret    $/;"	l
c010ad85	obj/kernel.asm	/^c010ad85 <cpu_idle>:$/;"	l
c010ad85	obj/kernel.asm	/^c010ad85:	55                   	push   %ebp$/;"	l
c010ad86	obj/kernel.asm	/^c010ad86:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad88	obj/kernel.asm	/^c010ad88:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ad8b	obj/kernel.asm	/^c010ad8b:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010ad90	obj/kernel.asm	/^c010ad90:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ad93	obj/kernel.asm	/^c010ad93:	85 c0                	test   %eax,%eax$/;"	l
c010ad95	obj/kernel.asm	/^c010ad95:	74 07                	je     c010ad9e <cpu_idle+0x19>$/;"	l
c010ad97	obj/kernel.asm	/^c010ad97:	e8 65 04 00 00       	call   c010b201 <schedule>$/;"	l
c010ad9c	obj/kernel.asm	/^c010ad9c:	eb ed                	jmp    c010ad8b <cpu_idle+0x6>$/;"	l
c010ad9e	obj/kernel.asm	/^c010ad9e:	eb eb                	jmp    c010ad8b <cpu_idle+0x6>$/;"	l
c010ada0	obj/kernel.asm	/^c010ada0 <lab6_set_priority>:$/;"	l
c010ada0	obj/kernel.asm	/^c010ada0:	55                   	push   %ebp$/;"	l
c010ada1	obj/kernel.asm	/^c010ada1:	89 e5                	mov    %esp,%ebp$/;"	l
c010ada3	obj/kernel.asm	/^c010ada3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ada7	obj/kernel.asm	/^c010ada7:	75 11                	jne    c010adba <lab6_set_priority+0x1a>$/;"	l
c010ada9	obj/kernel.asm	/^c010ada9:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010adae	obj/kernel.asm	/^c010adae:	c7 80 9c 00 00 00 01 	movl   $0x1,0x9c(%eax)$/;"	l
c010adb5	obj/kernel.asm	/^c010adb5:	00 00 00 $/;"	l
c010adb8	obj/kernel.asm	/^c010adb8:	eb 0e                	jmp    c010adc8 <lab6_set_priority+0x28>$/;"	l
c010adba	obj/kernel.asm	/^c010adba:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010adbf	obj/kernel.asm	/^c010adbf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010adc2	obj/kernel.asm	/^c010adc2:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010adc8	obj/kernel.asm	/^c010adc8:	5d                   	pop    %ebp$/;"	l
c010adc9	obj/kernel.asm	/^c010adc9:	c3                   	ret    $/;"	l
c010adca	obj/kernel.asm	/^c010adca <switch_to>:$/;"	l
c010adca	obj/kernel.asm	/^c010adca:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010adce	obj/kernel.asm	/^c010adce:	8f 00                	popl   (%eax)$/;"	l
c010add0	obj/kernel.asm	/^c010add0:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c010add3	obj/kernel.asm	/^c010add3:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c010add6	obj/kernel.asm	/^c010add6:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c010add9	obj/kernel.asm	/^c010add9:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010addc	obj/kernel.asm	/^c010addc:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c010addf	obj/kernel.asm	/^c010addf:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c010ade2	obj/kernel.asm	/^c010ade2:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c010ade5	obj/kernel.asm	/^c010ade5:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010ade9	obj/kernel.asm	/^c010ade9:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c010adec	obj/kernel.asm	/^c010adec:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c010adef	obj/kernel.asm	/^c010adef:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c010adf2	obj/kernel.asm	/^c010adf2:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010adf5	obj/kernel.asm	/^c010adf5:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010adf8	obj/kernel.asm	/^c010adf8:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c010adfb	obj/kernel.asm	/^c010adfb:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c010adfe	obj/kernel.asm	/^c010adfe:	ff 30                	pushl  (%eax)$/;"	l
c010ae00	obj/kernel.asm	/^c010ae00:	c3                   	ret    $/;"	l
c010ae01	obj/kernel.asm	/^c010ae01 <RR_init>:$/;"	l
c010ae01	obj/kernel.asm	/^c010ae01:	55                   	push   %ebp$/;"	l
c010ae02	obj/kernel.asm	/^c010ae02:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae04	obj/kernel.asm	/^c010ae04:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010ae07	obj/kernel.asm	/^c010ae07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae0a	obj/kernel.asm	/^c010ae0a:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010ae0d	obj/kernel.asm	/^c010ae0d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ae10	obj/kernel.asm	/^c010ae10:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010ae13	obj/kernel.asm	/^c010ae13:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ae16	obj/kernel.asm	/^c010ae16:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ae19	obj/kernel.asm	/^c010ae19:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010ae1c	obj/kernel.asm	/^c010ae1c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ae1f	obj/kernel.asm	/^c010ae1f:	89 10                	mov    %edx,(%eax)$/;"	l
c010ae21	obj/kernel.asm	/^c010ae21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae24	obj/kernel.asm	/^c010ae24:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010ae2b	obj/kernel.asm	/^c010ae2b:	c9                   	leave  $/;"	l
c010ae2c	obj/kernel.asm	/^c010ae2c:	c3                   	ret    $/;"	l
c010ae2d	obj/kernel.asm	/^c010ae2d <RR_enqueue>:$/;"	l
c010ae2d	obj/kernel.asm	/^c010ae2d:	55                   	push   %ebp$/;"	l
c010ae2e	obj/kernel.asm	/^c010ae2e:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae30	obj/kernel.asm	/^c010ae30:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010ae33	obj/kernel.asm	/^c010ae33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ae36	obj/kernel.asm	/^c010ae36:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c010ae39	obj/kernel.asm	/^c010ae39:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae3c	obj/kernel.asm	/^c010ae3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae3f	obj/kernel.asm	/^c010ae3f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ae42	obj/kernel.asm	/^c010ae42:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010ae45	obj/kernel.asm	/^c010ae45:	0f 94 c0             	sete   %al$/;"	l
c010ae48	obj/kernel.asm	/^c010ae48:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010ae4b	obj/kernel.asm	/^c010ae4b:	85 c0                	test   %eax,%eax$/;"	l
c010ae4d	obj/kernel.asm	/^c010ae4d:	75 24                	jne    c010ae73 <RR_enqueue+0x46>$/;"	l
c010ae4f	obj/kernel.asm	/^c010ae4f:	c7 44 24 0c 40 e8 10 	movl   $0xc010e840,0xc(%esp)$/;"	l
c010ae56	obj/kernel.asm	/^c010ae56:	c0 $/;"	l
c010ae57	obj/kernel.asm	/^c010ae57:	c7 44 24 08 5e e8 10 	movl   $0xc010e85e,0x8(%esp)$/;"	l
c010ae5e	obj/kernel.asm	/^c010ae5e:	c0 $/;"	l
c010ae5f	obj/kernel.asm	/^c010ae5f:	c7 44 24 04 0f 00 00 	movl   $0xf,0x4(%esp)$/;"	l
c010ae66	obj/kernel.asm	/^c010ae66:	00 $/;"	l
c010ae67	obj/kernel.asm	/^c010ae67:	c7 04 24 73 e8 10 c0 	movl   $0xc010e873,(%esp)$/;"	l
c010ae6e	obj/kernel.asm	/^c010ae6e:	e8 67 5f ff ff       	call   c0100dda <__panic>$/;"	l
c010ae73	obj/kernel.asm	/^c010ae73:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ae76	obj/kernel.asm	/^c010ae76:	8d 90 80 00 00 00    	lea    0x80(%eax),%edx$/;"	l
c010ae7c	obj/kernel.asm	/^c010ae7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae7f	obj/kernel.asm	/^c010ae7f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ae82	obj/kernel.asm	/^c010ae82:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010ae85	obj/kernel.asm	/^c010ae85:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae88	obj/kernel.asm	/^c010ae88:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae8a	obj/kernel.asm	/^c010ae8a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ae8d	obj/kernel.asm	/^c010ae8d:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010ae90	obj/kernel.asm	/^c010ae90:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ae93	obj/kernel.asm	/^c010ae93:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae96	obj/kernel.asm	/^c010ae96:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ae99	obj/kernel.asm	/^c010ae99:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ae9c	obj/kernel.asm	/^c010ae9c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010ae9f	obj/kernel.asm	/^c010ae9f:	89 10                	mov    %edx,(%eax)$/;"	l
c010aea1	obj/kernel.asm	/^c010aea1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010aea4	obj/kernel.asm	/^c010aea4:	8b 10                	mov    (%eax),%edx$/;"	l
c010aea6	obj/kernel.asm	/^c010aea6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aea9	obj/kernel.asm	/^c010aea9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010aeac	obj/kernel.asm	/^c010aeac:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aeaf	obj/kernel.asm	/^c010aeaf:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010aeb2	obj/kernel.asm	/^c010aeb2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010aeb5	obj/kernel.asm	/^c010aeb5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aeb8	obj/kernel.asm	/^c010aeb8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010aebb	obj/kernel.asm	/^c010aebb:	89 10                	mov    %edx,(%eax)$/;"	l
c010aebd	obj/kernel.asm	/^c010aebd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aec0	obj/kernel.asm	/^c010aec0:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax$/;"	l
c010aec6	obj/kernel.asm	/^c010aec6:	85 c0                	test   %eax,%eax$/;"	l
c010aec8	obj/kernel.asm	/^c010aec8:	74 13                	je     c010aedd <RR_enqueue+0xb0>$/;"	l
c010aeca	obj/kernel.asm	/^c010aeca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aecd	obj/kernel.asm	/^c010aecd:	8b 90 88 00 00 00    	mov    0x88(%eax),%edx$/;"	l
c010aed3	obj/kernel.asm	/^c010aed3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aed6	obj/kernel.asm	/^c010aed6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aed9	obj/kernel.asm	/^c010aed9:	39 c2                	cmp    %eax,%edx$/;"	l
c010aedb	obj/kernel.asm	/^c010aedb:	7e 0f                	jle    c010aeec <RR_enqueue+0xbf>$/;"	l
c010aedd	obj/kernel.asm	/^c010aedd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aee0	obj/kernel.asm	/^c010aee0:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010aee3	obj/kernel.asm	/^c010aee3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aee6	obj/kernel.asm	/^c010aee6:	89 90 88 00 00 00    	mov    %edx,0x88(%eax)$/;"	l
c010aeec	obj/kernel.asm	/^c010aeec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aeef	obj/kernel.asm	/^c010aeef:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010aef2	obj/kernel.asm	/^c010aef2:	89 50 7c             	mov    %edx,0x7c(%eax)$/;"	l
c010aef5	obj/kernel.asm	/^c010aef5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aef8	obj/kernel.asm	/^c010aef8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010aefb	obj/kernel.asm	/^c010aefb:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010aefe	obj/kernel.asm	/^c010aefe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af01	obj/kernel.asm	/^c010af01:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010af04	obj/kernel.asm	/^c010af04:	c9                   	leave  $/;"	l
c010af05	obj/kernel.asm	/^c010af05:	c3                   	ret    $/;"	l
c010af06	obj/kernel.asm	/^c010af06 <RR_dequeue>:$/;"	l
c010af06	obj/kernel.asm	/^c010af06:	55                   	push   %ebp$/;"	l
c010af07	obj/kernel.asm	/^c010af07:	89 e5                	mov    %esp,%ebp$/;"	l
c010af09	obj/kernel.asm	/^c010af09:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010af0c	obj/kernel.asm	/^c010af0c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010af0f	obj/kernel.asm	/^c010af0f:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c010af12	obj/kernel.asm	/^c010af12:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af15	obj/kernel.asm	/^c010af15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af18	obj/kernel.asm	/^c010af18:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010af1b	obj/kernel.asm	/^c010af1b:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010af1e	obj/kernel.asm	/^c010af1e:	0f 94 c0             	sete   %al$/;"	l
c010af21	obj/kernel.asm	/^c010af21:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010af24	obj/kernel.asm	/^c010af24:	85 c0                	test   %eax,%eax$/;"	l
c010af26	obj/kernel.asm	/^c010af26:	75 0b                	jne    c010af33 <RR_dequeue+0x2d>$/;"	l
c010af28	obj/kernel.asm	/^c010af28:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010af2b	obj/kernel.asm	/^c010af2b:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
c010af2e	obj/kernel.asm	/^c010af2e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010af31	obj/kernel.asm	/^c010af31:	74 24                	je     c010af57 <RR_dequeue+0x51>$/;"	l
c010af33	obj/kernel.asm	/^c010af33:	c7 44 24 0c 94 e8 10 	movl   $0xc010e894,0xc(%esp)$/;"	l
c010af3a	obj/kernel.asm	/^c010af3a:	c0 $/;"	l
c010af3b	obj/kernel.asm	/^c010af3b:	c7 44 24 08 5e e8 10 	movl   $0xc010e85e,0x8(%esp)$/;"	l
c010af42	obj/kernel.asm	/^c010af42:	c0 $/;"	l
c010af43	obj/kernel.asm	/^c010af43:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
c010af4a	obj/kernel.asm	/^c010af4a:	00 $/;"	l
c010af4b	obj/kernel.asm	/^c010af4b:	c7 04 24 73 e8 10 c0 	movl   $0xc010e873,(%esp)$/;"	l
c010af52	obj/kernel.asm	/^c010af52:	e8 83 5e ff ff       	call   c0100dda <__panic>$/;"	l
c010af57	obj/kernel.asm	/^c010af57:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010af5a	obj/kernel.asm	/^c010af5a:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c010af5d	obj/kernel.asm	/^c010af5d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010af60	obj/kernel.asm	/^c010af60:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010af63	obj/kernel.asm	/^c010af63:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010af66	obj/kernel.asm	/^c010af66:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af69	obj/kernel.asm	/^c010af69:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010af6c	obj/kernel.asm	/^c010af6c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010af6f	obj/kernel.asm	/^c010af6f:	8b 12                	mov    (%edx),%edx$/;"	l
c010af71	obj/kernel.asm	/^c010af71:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010af74	obj/kernel.asm	/^c010af74:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010af77	obj/kernel.asm	/^c010af77:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010af7a	obj/kernel.asm	/^c010af7a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010af7d	obj/kernel.asm	/^c010af7d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010af80	obj/kernel.asm	/^c010af80:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010af83	obj/kernel.asm	/^c010af83:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010af86	obj/kernel.asm	/^c010af86:	89 10                	mov    %edx,(%eax)$/;"	l
c010af88	obj/kernel.asm	/^c010af88:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010af8b	obj/kernel.asm	/^c010af8b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010af8e	obj/kernel.asm	/^c010af8e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010af91	obj/kernel.asm	/^c010af91:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010af94	obj/kernel.asm	/^c010af94:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010af97	obj/kernel.asm	/^c010af97:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010af9a	obj/kernel.asm	/^c010af9a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010af9d	obj/kernel.asm	/^c010af9d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010afa0	obj/kernel.asm	/^c010afa0:	89 10                	mov    %edx,(%eax)$/;"	l
c010afa2	obj/kernel.asm	/^c010afa2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afa5	obj/kernel.asm	/^c010afa5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010afa8	obj/kernel.asm	/^c010afa8:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010afab	obj/kernel.asm	/^c010afab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afae	obj/kernel.asm	/^c010afae:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010afb1	obj/kernel.asm	/^c010afb1:	c9                   	leave  $/;"	l
c010afb2	obj/kernel.asm	/^c010afb2:	c3                   	ret    $/;"	l
c010afb3	obj/kernel.asm	/^c010afb3 <RR_pick_next>:$/;"	l
c010afb3	obj/kernel.asm	/^c010afb3:	55                   	push   %ebp$/;"	l
c010afb4	obj/kernel.asm	/^c010afb4:	89 e5                	mov    %esp,%ebp$/;"	l
c010afb6	obj/kernel.asm	/^c010afb6:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010afb9	obj/kernel.asm	/^c010afb9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afbc	obj/kernel.asm	/^c010afbc:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010afbf	obj/kernel.asm	/^c010afbf:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010afc2	obj/kernel.asm	/^c010afc2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010afc5	obj/kernel.asm	/^c010afc5:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010afc8	obj/kernel.asm	/^c010afc8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afcb	obj/kernel.asm	/^c010afcb:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010afce	obj/kernel.asm	/^c010afce:	74 08                	je     c010afd8 <RR_pick_next+0x25>$/;"	l
c010afd0	obj/kernel.asm	/^c010afd0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010afd3	obj/kernel.asm	/^c010afd3:	83 c0 80             	add    $0xffffff80,%eax$/;"	l
c010afd6	obj/kernel.asm	/^c010afd6:	eb 05                	jmp    c010afdd <RR_pick_next+0x2a>$/;"	l
c010afd8	obj/kernel.asm	/^c010afd8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010afdd	obj/kernel.asm	/^c010afdd:	c9                   	leave  $/;"	l
c010afde	obj/kernel.asm	/^c010afde:	c3                   	ret    $/;"	l
c010afdf	obj/kernel.asm	/^c010afdf <RR_proc_tick>:$/;"	l
c010afdf	obj/kernel.asm	/^c010afdf:	55                   	push   %ebp$/;"	l
c010afe0	obj/kernel.asm	/^c010afe0:	89 e5                	mov    %esp,%ebp$/;"	l
c010afe2	obj/kernel.asm	/^c010afe2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010afe5	obj/kernel.asm	/^c010afe5:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax$/;"	l
c010afeb	obj/kernel.asm	/^c010afeb:	85 c0                	test   %eax,%eax$/;"	l
c010afed	obj/kernel.asm	/^c010afed:	7e 15                	jle    c010b004 <RR_proc_tick+0x25>$/;"	l
c010afef	obj/kernel.asm	/^c010afef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aff2	obj/kernel.asm	/^c010aff2:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax$/;"	l
c010aff8	obj/kernel.asm	/^c010aff8:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010affb	obj/kernel.asm	/^c010affb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010affe	obj/kernel.asm	/^c010affe:	89 90 88 00 00 00    	mov    %edx,0x88(%eax)$/;"	l
c010b004	obj/kernel.asm	/^c010b004:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b007	obj/kernel.asm	/^c010b007:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax$/;"	l
c010b00d	obj/kernel.asm	/^c010b00d:	85 c0                	test   %eax,%eax$/;"	l
c010b00f	obj/kernel.asm	/^c010b00f:	75 0a                	jne    c010b01b <RR_proc_tick+0x3c>$/;"	l
c010b011	obj/kernel.asm	/^c010b011:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b014	obj/kernel.asm	/^c010b014:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010b01b	obj/kernel.asm	/^c010b01b:	5d                   	pop    %ebp$/;"	l
c010b01c	obj/kernel.asm	/^c010b01c:	c3                   	ret    $/;"	l
c010b01d	obj/kernel.asm	/^c010b01d <__intr_save>:$/;"	l
c010b01d	obj/kernel.asm	/^c010b01d:	55                   	push   %ebp$/;"	l
c010b01e	obj/kernel.asm	/^c010b01e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b020	obj/kernel.asm	/^c010b020:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b023	obj/kernel.asm	/^c010b023:	9c                   	pushf  $/;"	l
c010b024	obj/kernel.asm	/^c010b024:	58                   	pop    %eax$/;"	l
c010b025	obj/kernel.asm	/^c010b025:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b028	obj/kernel.asm	/^c010b028:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b02b	obj/kernel.asm	/^c010b02b:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010b030	obj/kernel.asm	/^c010b030:	85 c0                	test   %eax,%eax$/;"	l
c010b032	obj/kernel.asm	/^c010b032:	74 0c                	je     c010b040 <__intr_save+0x23>$/;"	l
c010b034	obj/kernel.asm	/^c010b034:	e8 f9 6f ff ff       	call   c0102032 <intr_disable>$/;"	l
c010b039	obj/kernel.asm	/^c010b039:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010b03e	obj/kernel.asm	/^c010b03e:	eb 05                	jmp    c010b045 <__intr_save+0x28>$/;"	l
c010b040	obj/kernel.asm	/^c010b040:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b045	obj/kernel.asm	/^c010b045:	c9                   	leave  $/;"	l
c010b046	obj/kernel.asm	/^c010b046:	c3                   	ret    $/;"	l
c010b047	obj/kernel.asm	/^c010b047 <__intr_restore>:$/;"	l
c010b047	obj/kernel.asm	/^c010b047:	55                   	push   %ebp$/;"	l
c010b048	obj/kernel.asm	/^c010b048:	89 e5                	mov    %esp,%ebp$/;"	l
c010b04a	obj/kernel.asm	/^c010b04a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b04d	obj/kernel.asm	/^c010b04d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b051	obj/kernel.asm	/^c010b051:	74 05                	je     c010b058 <__intr_restore+0x11>$/;"	l
c010b053	obj/kernel.asm	/^c010b053:	e8 d4 6f ff ff       	call   c010202c <intr_enable>$/;"	l
c010b058	obj/kernel.asm	/^c010b058:	c9                   	leave  $/;"	l
c010b059	obj/kernel.asm	/^c010b059:	c3                   	ret    $/;"	l
c010b05a	obj/kernel.asm	/^c010b05a <sched_class_enqueue>:$/;"	l
c010b05a	obj/kernel.asm	/^c010b05a:	55                   	push   %ebp$/;"	l
c010b05b	obj/kernel.asm	/^c010b05b:	89 e5                	mov    %esp,%ebp$/;"	l
c010b05d	obj/kernel.asm	/^c010b05d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b060	obj/kernel.asm	/^c010b060:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010b065	obj/kernel.asm	/^c010b065:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010b068	obj/kernel.asm	/^c010b068:	74 1a                	je     c010b084 <sched_class_enqueue+0x2a>$/;"	l
c010b06a	obj/kernel.asm	/^c010b06a:	a1 5c 1e 1b c0       	mov    0xc01b1e5c,%eax$/;"	l
c010b06f	obj/kernel.asm	/^c010b06f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b072	obj/kernel.asm	/^c010b072:	8b 15 60 1e 1b c0    	mov    0xc01b1e60,%edx$/;"	l
c010b078	obj/kernel.asm	/^c010b078:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010b07b	obj/kernel.asm	/^c010b07b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010b07f	obj/kernel.asm	/^c010b07f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010b082	obj/kernel.asm	/^c010b082:	ff d0                	call   *%eax$/;"	l
c010b084	obj/kernel.asm	/^c010b084:	c9                   	leave  $/;"	l
c010b085	obj/kernel.asm	/^c010b085:	c3                   	ret    $/;"	l
c010b086	obj/kernel.asm	/^c010b086 <sched_class_dequeue>:$/;"	l
c010b086	obj/kernel.asm	/^c010b086:	55                   	push   %ebp$/;"	l
c010b087	obj/kernel.asm	/^c010b087:	89 e5                	mov    %esp,%ebp$/;"	l
c010b089	obj/kernel.asm	/^c010b089:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b08c	obj/kernel.asm	/^c010b08c:	a1 5c 1e 1b c0       	mov    0xc01b1e5c,%eax$/;"	l
c010b091	obj/kernel.asm	/^c010b091:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b094	obj/kernel.asm	/^c010b094:	8b 15 60 1e 1b c0    	mov    0xc01b1e60,%edx$/;"	l
c010b09a	obj/kernel.asm	/^c010b09a:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010b09d	obj/kernel.asm	/^c010b09d:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010b0a1	obj/kernel.asm	/^c010b0a1:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010b0a4	obj/kernel.asm	/^c010b0a4:	ff d0                	call   *%eax$/;"	l
c010b0a6	obj/kernel.asm	/^c010b0a6:	c9                   	leave  $/;"	l
c010b0a7	obj/kernel.asm	/^c010b0a7:	c3                   	ret    $/;"	l
c010b0a8	obj/kernel.asm	/^c010b0a8 <sched_class_pick_next>:$/;"	l
c010b0a8	obj/kernel.asm	/^c010b0a8:	55                   	push   %ebp$/;"	l
c010b0a9	obj/kernel.asm	/^c010b0a9:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0ab	obj/kernel.asm	/^c010b0ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b0ae	obj/kernel.asm	/^c010b0ae:	a1 5c 1e 1b c0       	mov    0xc01b1e5c,%eax$/;"	l
c010b0b3	obj/kernel.asm	/^c010b0b3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010b0b6	obj/kernel.asm	/^c010b0b6:	8b 15 60 1e 1b c0    	mov    0xc01b1e60,%edx$/;"	l
c010b0bc	obj/kernel.asm	/^c010b0bc:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010b0bf	obj/kernel.asm	/^c010b0bf:	ff d0                	call   *%eax$/;"	l
c010b0c1	obj/kernel.asm	/^c010b0c1:	c9                   	leave  $/;"	l
c010b0c2	obj/kernel.asm	/^c010b0c2:	c3                   	ret    $/;"	l
c010b0c3	obj/kernel.asm	/^c010b0c3 <sched_class_proc_tick>:$/;"	l
c010b0c3	obj/kernel.asm	/^c010b0c3:	55                   	push   %ebp$/;"	l
c010b0c4	obj/kernel.asm	/^c010b0c4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0c6	obj/kernel.asm	/^c010b0c6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b0c9	obj/kernel.asm	/^c010b0c9:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010b0ce	obj/kernel.asm	/^c010b0ce:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010b0d1	obj/kernel.asm	/^c010b0d1:	74 1c                	je     c010b0ef <sched_class_proc_tick+0x2c>$/;"	l
c010b0d3	obj/kernel.asm	/^c010b0d3:	a1 5c 1e 1b c0       	mov    0xc01b1e5c,%eax$/;"	l
c010b0d8	obj/kernel.asm	/^c010b0d8:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b0db	obj/kernel.asm	/^c010b0db:	8b 15 60 1e 1b c0    	mov    0xc01b1e60,%edx$/;"	l
c010b0e1	obj/kernel.asm	/^c010b0e1:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010b0e4	obj/kernel.asm	/^c010b0e4:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010b0e8	obj/kernel.asm	/^c010b0e8:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010b0eb	obj/kernel.asm	/^c010b0eb:	ff d0                	call   *%eax$/;"	l
c010b0ed	obj/kernel.asm	/^c010b0ed:	eb 0a                	jmp    c010b0f9 <sched_class_proc_tick+0x36>$/;"	l
c010b0ef	obj/kernel.asm	/^c010b0ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0f2	obj/kernel.asm	/^c010b0f2:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010b0f9	obj/kernel.asm	/^c010b0f9:	c9                   	leave  $/;"	l
c010b0fa	obj/kernel.asm	/^c010b0fa:	c3                   	ret    $/;"	l
c010b0fb	obj/kernel.asm	/^c010b0fb <sched_init>:$/;"	l
c010b0fb	obj/kernel.asm	/^c010b0fb:	55                   	push   %ebp$/;"	l
c010b0fc	obj/kernel.asm	/^c010b0fc:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0fe	obj/kernel.asm	/^c010b0fe:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b101	obj/kernel.asm	/^c010b101:	c7 45 f4 54 1e 1b c0 	movl   $0xc01b1e54,-0xc(%ebp)$/;"	l
c010b108	obj/kernel.asm	/^c010b108:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b10b	obj/kernel.asm	/^c010b10b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b10e	obj/kernel.asm	/^c010b10e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b111	obj/kernel.asm	/^c010b111:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b114	obj/kernel.asm	/^c010b114:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b117	obj/kernel.asm	/^c010b117:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b11a	obj/kernel.asm	/^c010b11a:	89 10                	mov    %edx,(%eax)$/;"	l
c010b11c	obj/kernel.asm	/^c010b11c:	c7 05 5c 1e 1b c0 88 	movl   $0xc012da88,0xc01b1e5c$/;"	l
c010b123	obj/kernel.asm	/^c010b123:	da 12 c0 $/;"	d
c010b126	obj/kernel.asm	/^c010b126:	c7 05 60 1e 1b c0 64 	movl   $0xc01b1e64,0xc01b1e60$/;"	l
c010b12d	obj/kernel.asm	/^c010b12d:	1e 1b c0 $/;"	l
c010b130	obj/kernel.asm	/^c010b130:	a1 60 1e 1b c0       	mov    0xc01b1e60,%eax$/;"	l
c010b135	obj/kernel.asm	/^c010b135:	c7 40 0c 14 00 00 00 	movl   $0x14,0xc(%eax)$/;"	l
c010b13c	obj/kernel.asm	/^c010b13c:	a1 5c 1e 1b c0       	mov    0xc01b1e5c,%eax$/;"	l
c010b141	obj/kernel.asm	/^c010b141:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b144	obj/kernel.asm	/^c010b144:	8b 15 60 1e 1b c0    	mov    0xc01b1e60,%edx$/;"	l
c010b14a	obj/kernel.asm	/^c010b14a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010b14d	obj/kernel.asm	/^c010b14d:	ff d0                	call   *%eax$/;"	l
c010b14f	obj/kernel.asm	/^c010b14f:	a1 5c 1e 1b c0       	mov    0xc01b1e5c,%eax$/;"	l
c010b154	obj/kernel.asm	/^c010b154:	8b 00                	mov    (%eax),%eax$/;"	l
c010b156	obj/kernel.asm	/^c010b156:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b15a	obj/kernel.asm	/^c010b15a:	c7 04 24 d4 e8 10 c0 	movl   $0xc010e8d4,(%esp)$/;"	l
c010b161	obj/kernel.asm	/^c010b161:	e8 f2 51 ff ff       	call   c0100358 <cprintf>$/;"	l
c010b166	obj/kernel.asm	/^c010b166:	c9                   	leave  $/;"	l
c010b167	obj/kernel.asm	/^c010b167:	c3                   	ret    $/;"	l
c010b168	obj/kernel.asm	/^c010b168 <wakeup_proc>:$/;"	l
c010b168	obj/kernel.asm	/^c010b168:	55                   	push   %ebp$/;"	l
c010b169	obj/kernel.asm	/^c010b169:	89 e5                	mov    %esp,%ebp$/;"	l
c010b16b	obj/kernel.asm	/^c010b16b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b16e	obj/kernel.asm	/^c010b16e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b171	obj/kernel.asm	/^c010b171:	8b 00                	mov    (%eax),%eax$/;"	l
c010b173	obj/kernel.asm	/^c010b173:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010b176	obj/kernel.asm	/^c010b176:	75 24                	jne    c010b19c <wakeup_proc+0x34>$/;"	l
c010b178	obj/kernel.asm	/^c010b178:	c7 44 24 0c e5 e8 10 	movl   $0xc010e8e5,0xc(%esp)$/;"	l
c010b17f	obj/kernel.asm	/^c010b17f:	c0 $/;"	l
c010b180	obj/kernel.asm	/^c010b180:	c7 44 24 08 00 e9 10 	movl   $0xc010e900,0x8(%esp)$/;"	l
c010b187	obj/kernel.asm	/^c010b187:	c0 $/;"	l
c010b188	obj/kernel.asm	/^c010b188:	c7 44 24 04 3c 00 00 	movl   $0x3c,0x4(%esp)$/;"	l
c010b18f	obj/kernel.asm	/^c010b18f:	00 $/;"	l
c010b190	obj/kernel.asm	/^c010b190:	c7 04 24 15 e9 10 c0 	movl   $0xc010e915,(%esp)$/;"	l
c010b197	obj/kernel.asm	/^c010b197:	e8 3e 5c ff ff       	call   c0100dda <__panic>$/;"	l
c010b19c	obj/kernel.asm	/^c010b19c:	e8 7c fe ff ff       	call   c010b01d <__intr_save>$/;"	l
c010b1a1	obj/kernel.asm	/^c010b1a1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b1a4	obj/kernel.asm	/^c010b1a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1a7	obj/kernel.asm	/^c010b1a7:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1a9	obj/kernel.asm	/^c010b1a9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b1ac	obj/kernel.asm	/^c010b1ac:	74 2a                	je     c010b1d8 <wakeup_proc+0x70>$/;"	l
c010b1ae	obj/kernel.asm	/^c010b1ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1b1	obj/kernel.asm	/^c010b1b1:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010b1b7	obj/kernel.asm	/^c010b1b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1ba	obj/kernel.asm	/^c010b1ba:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)$/;"	l
c010b1c1	obj/kernel.asm	/^c010b1c1:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b1c6	obj/kernel.asm	/^c010b1c6:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010b1c9	obj/kernel.asm	/^c010b1c9:	74 29                	je     c010b1f4 <wakeup_proc+0x8c>$/;"	l
c010b1cb	obj/kernel.asm	/^c010b1cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1ce	obj/kernel.asm	/^c010b1ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b1d1	obj/kernel.asm	/^c010b1d1:	e8 84 fe ff ff       	call   c010b05a <sched_class_enqueue>$/;"	l
c010b1d6	obj/kernel.asm	/^c010b1d6:	eb 1c                	jmp    c010b1f4 <wakeup_proc+0x8c>$/;"	l
c010b1d8	obj/kernel.asm	/^c010b1d8:	c7 44 24 08 2b e9 10 	movl   $0xc010e92b,0x8(%esp)$/;"	l
c010b1df	obj/kernel.asm	/^c010b1df:	c0 $/;"	l
c010b1e0	obj/kernel.asm	/^c010b1e0:	c7 44 24 04 48 00 00 	movl   $0x48,0x4(%esp)$/;"	l
c010b1e7	obj/kernel.asm	/^c010b1e7:	00 $/;"	l
c010b1e8	obj/kernel.asm	/^c010b1e8:	c7 04 24 15 e9 10 c0 	movl   $0xc010e915,(%esp)$/;"	l
c010b1ef	obj/kernel.asm	/^c010b1ef:	e8 52 5c ff ff       	call   c0100e46 <__warn>$/;"	l
c010b1f4	obj/kernel.asm	/^c010b1f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b1f7	obj/kernel.asm	/^c010b1f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b1fa	obj/kernel.asm	/^c010b1fa:	e8 48 fe ff ff       	call   c010b047 <__intr_restore>$/;"	l
c010b1ff	obj/kernel.asm	/^c010b1ff:	c9                   	leave  $/;"	l
c010b200	obj/kernel.asm	/^c010b200:	c3                   	ret    $/;"	l
c010b201	obj/kernel.asm	/^c010b201 <schedule>:$/;"	l
c010b201	obj/kernel.asm	/^c010b201:	55                   	push   %ebp$/;"	l
c010b202	obj/kernel.asm	/^c010b202:	89 e5                	mov    %esp,%ebp$/;"	l
c010b204	obj/kernel.asm	/^c010b204:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b207	obj/kernel.asm	/^c010b207:	e8 11 fe ff ff       	call   c010b01d <__intr_save>$/;"	l
c010b20c	obj/kernel.asm	/^c010b20c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b20f	obj/kernel.asm	/^c010b20f:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b214	obj/kernel.asm	/^c010b214:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010b21b	obj/kernel.asm	/^c010b21b:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b220	obj/kernel.asm	/^c010b220:	8b 00                	mov    (%eax),%eax$/;"	l
c010b222	obj/kernel.asm	/^c010b222:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b225	obj/kernel.asm	/^c010b225:	75 0d                	jne    c010b234 <schedule+0x33>$/;"	l
c010b227	obj/kernel.asm	/^c010b227:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b22c	obj/kernel.asm	/^c010b22c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b22f	obj/kernel.asm	/^c010b22f:	e8 26 fe ff ff       	call   c010b05a <sched_class_enqueue>$/;"	l
c010b234	obj/kernel.asm	/^c010b234:	e8 6f fe ff ff       	call   c010b0a8 <sched_class_pick_next>$/;"	l
c010b239	obj/kernel.asm	/^c010b239:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b23c	obj/kernel.asm	/^c010b23c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b240	obj/kernel.asm	/^c010b240:	74 0b                	je     c010b24d <schedule+0x4c>$/;"	l
c010b242	obj/kernel.asm	/^c010b242:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b245	obj/kernel.asm	/^c010b245:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b248	obj/kernel.asm	/^c010b248:	e8 39 fe ff ff       	call   c010b086 <sched_class_dequeue>$/;"	l
c010b24d	obj/kernel.asm	/^c010b24d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b251	obj/kernel.asm	/^c010b251:	75 08                	jne    c010b25b <schedule+0x5a>$/;"	l
c010b253	obj/kernel.asm	/^c010b253:	a1 20 fe 1a c0       	mov    0xc01afe20,%eax$/;"	l
c010b258	obj/kernel.asm	/^c010b258:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b25b	obj/kernel.asm	/^c010b25b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b25e	obj/kernel.asm	/^c010b25e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b261	obj/kernel.asm	/^c010b261:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b264	obj/kernel.asm	/^c010b264:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b267	obj/kernel.asm	/^c010b267:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b26a	obj/kernel.asm	/^c010b26a:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b26f	obj/kernel.asm	/^c010b26f:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010b272	obj/kernel.asm	/^c010b272:	74 0b                	je     c010b27f <schedule+0x7e>$/;"	l
c010b274	obj/kernel.asm	/^c010b274:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b277	obj/kernel.asm	/^c010b277:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b27a	obj/kernel.asm	/^c010b27a:	e8 50 e5 ff ff       	call   c01097cf <proc_run>$/;"	l
c010b27f	obj/kernel.asm	/^c010b27f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b282	obj/kernel.asm	/^c010b282:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b285	obj/kernel.asm	/^c010b285:	e8 bd fd ff ff       	call   c010b047 <__intr_restore>$/;"	l
c010b28a	obj/kernel.asm	/^c010b28a:	c9                   	leave  $/;"	l
c010b28b	obj/kernel.asm	/^c010b28b:	c3                   	ret    $/;"	l
c010b28c	obj/kernel.asm	/^c010b28c <add_timer>:$/;"	l
c010b28c	obj/kernel.asm	/^c010b28c:	55                   	push   %ebp$/;"	l
c010b28d	obj/kernel.asm	/^c010b28d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b28f	obj/kernel.asm	/^c010b28f:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010b292	obj/kernel.asm	/^c010b292:	e8 86 fd ff ff       	call   c010b01d <__intr_save>$/;"	l
c010b297	obj/kernel.asm	/^c010b297:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b29a	obj/kernel.asm	/^c010b29a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b29d	obj/kernel.asm	/^c010b29d:	8b 00                	mov    (%eax),%eax$/;"	l
c010b29f	obj/kernel.asm	/^c010b29f:	85 c0                	test   %eax,%eax$/;"	l
c010b2a1	obj/kernel.asm	/^c010b2a1:	74 0a                	je     c010b2ad <add_timer+0x21>$/;"	l
c010b2a3	obj/kernel.asm	/^c010b2a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2a6	obj/kernel.asm	/^c010b2a6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b2a9	obj/kernel.asm	/^c010b2a9:	85 c0                	test   %eax,%eax$/;"	l
c010b2ab	obj/kernel.asm	/^c010b2ab:	75 24                	jne    c010b2d1 <add_timer+0x45>$/;"	l
c010b2ad	obj/kernel.asm	/^c010b2ad:	c7 44 24 0c 48 e9 10 	movl   $0xc010e948,0xc(%esp)$/;"	l
c010b2b4	obj/kernel.asm	/^c010b2b4:	c0 $/;"	l
c010b2b5	obj/kernel.asm	/^c010b2b5:	c7 44 24 08 00 e9 10 	movl   $0xc010e900,0x8(%esp)$/;"	l
c010b2bc	obj/kernel.asm	/^c010b2bc:	c0 $/;"	l
c010b2bd	obj/kernel.asm	/^c010b2bd:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)$/;"	l
c010b2c4	obj/kernel.asm	/^c010b2c4:	00 $/;"	l
c010b2c5	obj/kernel.asm	/^c010b2c5:	c7 04 24 15 e9 10 c0 	movl   $0xc010e915,(%esp)$/;"	l
c010b2cc	obj/kernel.asm	/^c010b2cc:	e8 09 5b ff ff       	call   c0100dda <__panic>$/;"	l
c010b2d1	obj/kernel.asm	/^c010b2d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2d4	obj/kernel.asm	/^c010b2d4:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b2d7	obj/kernel.asm	/^c010b2d7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b2da	obj/kernel.asm	/^c010b2da:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b2dd	obj/kernel.asm	/^c010b2dd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b2e0	obj/kernel.asm	/^c010b2e0:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010b2e3	obj/kernel.asm	/^c010b2e3:	0f 94 c0             	sete   %al$/;"	l
c010b2e6	obj/kernel.asm	/^c010b2e6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010b2e9	obj/kernel.asm	/^c010b2e9:	85 c0                	test   %eax,%eax$/;"	l
c010b2eb	obj/kernel.asm	/^c010b2eb:	75 24                	jne    c010b311 <add_timer+0x85>$/;"	l
c010b2ed	obj/kernel.asm	/^c010b2ed:	c7 44 24 0c 74 e9 10 	movl   $0xc010e974,0xc(%esp)$/;"	l
c010b2f4	obj/kernel.asm	/^c010b2f4:	c0 $/;"	l
c010b2f5	obj/kernel.asm	/^c010b2f5:	c7 44 24 08 00 e9 10 	movl   $0xc010e900,0x8(%esp)$/;"	l
c010b2fc	obj/kernel.asm	/^c010b2fc:	c0 $/;"	l
c010b2fd	obj/kernel.asm	/^c010b2fd:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c010b304	obj/kernel.asm	/^c010b304:	00 $/;"	l
c010b305	obj/kernel.asm	/^c010b305:	c7 04 24 15 e9 10 c0 	movl   $0xc010e915,(%esp)$/;"	l
c010b30c	obj/kernel.asm	/^c010b30c:	e8 c9 5a ff ff       	call   c0100dda <__panic>$/;"	l
c010b311	obj/kernel.asm	/^c010b311:	c7 45 e4 54 1e 1b c0 	movl   $0xc01b1e54,-0x1c(%ebp)$/;"	l
c010b318	obj/kernel.asm	/^c010b318:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b31b	obj/kernel.asm	/^c010b31b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b31e	obj/kernel.asm	/^c010b31e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b321	obj/kernel.asm	/^c010b321:	eb 4a                	jmp    c010b36d <add_timer+0xe1>$/;"	l
c010b323	obj/kernel.asm	/^c010b323:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b326	obj/kernel.asm	/^c010b326:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010b329	obj/kernel.asm	/^c010b329:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b32c	obj/kernel.asm	/^c010b32c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b32f	obj/kernel.asm	/^c010b32f:	8b 10                	mov    (%eax),%edx$/;"	l
c010b331	obj/kernel.asm	/^c010b331:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b334	obj/kernel.asm	/^c010b334:	8b 00                	mov    (%eax),%eax$/;"	l
c010b336	obj/kernel.asm	/^c010b336:	39 c2                	cmp    %eax,%edx$/;"	l
c010b338	obj/kernel.asm	/^c010b338:	73 13                	jae    c010b34d <add_timer+0xc1>$/;"	l
c010b33a	obj/kernel.asm	/^c010b33a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b33d	obj/kernel.asm	/^c010b33d:	8b 10                	mov    (%eax),%edx$/;"	l
c010b33f	obj/kernel.asm	/^c010b33f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b342	obj/kernel.asm	/^c010b342:	8b 00                	mov    (%eax),%eax$/;"	l
c010b344	obj/kernel.asm	/^c010b344:	29 c2                	sub    %eax,%edx$/;"	l
c010b346	obj/kernel.asm	/^c010b346:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b349	obj/kernel.asm	/^c010b349:	89 10                	mov    %edx,(%eax)$/;"	l
c010b34b	obj/kernel.asm	/^c010b34b:	eb 29                	jmp    c010b376 <add_timer+0xea>$/;"	l
c010b34d	obj/kernel.asm	/^c010b34d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b350	obj/kernel.asm	/^c010b350:	8b 10                	mov    (%eax),%edx$/;"	l
c010b352	obj/kernel.asm	/^c010b352:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b355	obj/kernel.asm	/^c010b355:	8b 00                	mov    (%eax),%eax$/;"	l
c010b357	obj/kernel.asm	/^c010b357:	29 c2                	sub    %eax,%edx$/;"	l
c010b359	obj/kernel.asm	/^c010b359:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b35c	obj/kernel.asm	/^c010b35c:	89 10                	mov    %edx,(%eax)$/;"	l
c010b35e	obj/kernel.asm	/^c010b35e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b361	obj/kernel.asm	/^c010b361:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b364	obj/kernel.asm	/^c010b364:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b367	obj/kernel.asm	/^c010b367:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b36a	obj/kernel.asm	/^c010b36a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b36d	obj/kernel.asm	/^c010b36d:	81 7d f4 54 1e 1b c0 	cmpl   $0xc01b1e54,-0xc(%ebp)$/;"	l
c010b374	obj/kernel.asm	/^c010b374:	75 ad                	jne    c010b323 <add_timer+0x97>$/;"	l
c010b376	obj/kernel.asm	/^c010b376:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b379	obj/kernel.asm	/^c010b379:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010b37c	obj/kernel.asm	/^c010b37c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b37f	obj/kernel.asm	/^c010b37f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010b382	obj/kernel.asm	/^c010b382:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010b385	obj/kernel.asm	/^c010b385:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b388	obj/kernel.asm	/^c010b388:	8b 00                	mov    (%eax),%eax$/;"	l
c010b38a	obj/kernel.asm	/^c010b38a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010b38d	obj/kernel.asm	/^c010b38d:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010b390	obj/kernel.asm	/^c010b390:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010b393	obj/kernel.asm	/^c010b393:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b396	obj/kernel.asm	/^c010b396:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010b399	obj/kernel.asm	/^c010b399:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010b39c	obj/kernel.asm	/^c010b39c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010b39f	obj/kernel.asm	/^c010b39f:	89 10                	mov    %edx,(%eax)$/;"	l
c010b3a1	obj/kernel.asm	/^c010b3a1:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010b3a4	obj/kernel.asm	/^c010b3a4:	8b 10                	mov    (%eax),%edx$/;"	l
c010b3a6	obj/kernel.asm	/^c010b3a6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b3a9	obj/kernel.asm	/^c010b3a9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b3ac	obj/kernel.asm	/^c010b3ac:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010b3af	obj/kernel.asm	/^c010b3af:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010b3b2	obj/kernel.asm	/^c010b3b2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b3b5	obj/kernel.asm	/^c010b3b5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010b3b8	obj/kernel.asm	/^c010b3b8:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010b3bb	obj/kernel.asm	/^c010b3bb:	89 10                	mov    %edx,(%eax)$/;"	l
c010b3bd	obj/kernel.asm	/^c010b3bd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b3c0	obj/kernel.asm	/^c010b3c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b3c3	obj/kernel.asm	/^c010b3c3:	e8 7f fc ff ff       	call   c010b047 <__intr_restore>$/;"	l
c010b3c8	obj/kernel.asm	/^c010b3c8:	c9                   	leave  $/;"	l
c010b3c9	obj/kernel.asm	/^c010b3c9:	c3                   	ret    $/;"	l
c010b3ca	obj/kernel.asm	/^c010b3ca <del_timer>:$/;"	l
c010b3ca	obj/kernel.asm	/^c010b3ca:	55                   	push   %ebp$/;"	l
c010b3cb	obj/kernel.asm	/^c010b3cb:	89 e5                	mov    %esp,%ebp$/;"	l
c010b3cd	obj/kernel.asm	/^c010b3cd:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010b3d0	obj/kernel.asm	/^c010b3d0:	e8 48 fc ff ff       	call   c010b01d <__intr_save>$/;"	l
c010b3d5	obj/kernel.asm	/^c010b3d5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b3d8	obj/kernel.asm	/^c010b3d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3db	obj/kernel.asm	/^c010b3db:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b3de	obj/kernel.asm	/^c010b3de:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b3e1	obj/kernel.asm	/^c010b3e1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b3e4	obj/kernel.asm	/^c010b3e4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b3e7	obj/kernel.asm	/^c010b3e7:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010b3ea	obj/kernel.asm	/^c010b3ea:	0f 94 c0             	sete   %al$/;"	l
c010b3ed	obj/kernel.asm	/^c010b3ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010b3f0	obj/kernel.asm	/^c010b3f0:	85 c0                	test   %eax,%eax$/;"	l
c010b3f2	obj/kernel.asm	/^c010b3f2:	0f 85 89 00 00 00    	jne    c010b481 <del_timer+0xb7>$/;"	l
c010b3f8	obj/kernel.asm	/^c010b3f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3fb	obj/kernel.asm	/^c010b3fb:	8b 00                	mov    (%eax),%eax$/;"	l
c010b3fd	obj/kernel.asm	/^c010b3fd:	85 c0                	test   %eax,%eax$/;"	l
c010b3ff	obj/kernel.asm	/^c010b3ff:	74 35                	je     c010b436 <del_timer+0x6c>$/;"	l
c010b401	obj/kernel.asm	/^c010b401:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b404	obj/kernel.asm	/^c010b404:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b407	obj/kernel.asm	/^c010b407:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b40a	obj/kernel.asm	/^c010b40a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b40d	obj/kernel.asm	/^c010b40d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b410	obj/kernel.asm	/^c010b410:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b413	obj/kernel.asm	/^c010b413:	81 7d f0 54 1e 1b c0 	cmpl   $0xc01b1e54,-0x10(%ebp)$/;"	l
c010b41a	obj/kernel.asm	/^c010b41a:	74 1a                	je     c010b436 <del_timer+0x6c>$/;"	l
c010b41c	obj/kernel.asm	/^c010b41c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b41f	obj/kernel.asm	/^c010b41f:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010b422	obj/kernel.asm	/^c010b422:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b425	obj/kernel.asm	/^c010b425:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b428	obj/kernel.asm	/^c010b428:	8b 10                	mov    (%eax),%edx$/;"	l
c010b42a	obj/kernel.asm	/^c010b42a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b42d	obj/kernel.asm	/^c010b42d:	8b 00                	mov    (%eax),%eax$/;"	l
c010b42f	obj/kernel.asm	/^c010b42f:	01 c2                	add    %eax,%edx$/;"	l
c010b431	obj/kernel.asm	/^c010b431:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b434	obj/kernel.asm	/^c010b434:	89 10                	mov    %edx,(%eax)$/;"	l
c010b436	obj/kernel.asm	/^c010b436:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b439	obj/kernel.asm	/^c010b439:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b43c	obj/kernel.asm	/^c010b43c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b43f	obj/kernel.asm	/^c010b43f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b442	obj/kernel.asm	/^c010b442:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010b445	obj/kernel.asm	/^c010b445:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b448	obj/kernel.asm	/^c010b448:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b44b	obj/kernel.asm	/^c010b44b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010b44e	obj/kernel.asm	/^c010b44e:	8b 12                	mov    (%edx),%edx$/;"	l
c010b450	obj/kernel.asm	/^c010b450:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010b453	obj/kernel.asm	/^c010b453:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010b456	obj/kernel.asm	/^c010b456:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b459	obj/kernel.asm	/^c010b459:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010b45c	obj/kernel.asm	/^c010b45c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b45f	obj/kernel.asm	/^c010b45f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010b462	obj/kernel.asm	/^c010b462:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010b465	obj/kernel.asm	/^c010b465:	89 10                	mov    %edx,(%eax)$/;"	l
c010b467	obj/kernel.asm	/^c010b467:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b46a	obj/kernel.asm	/^c010b46a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010b46d	obj/kernel.asm	/^c010b46d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b470	obj/kernel.asm	/^c010b470:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010b473	obj/kernel.asm	/^c010b473:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b476	obj/kernel.asm	/^c010b476:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b479	obj/kernel.asm	/^c010b479:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b47c	obj/kernel.asm	/^c010b47c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b47f	obj/kernel.asm	/^c010b47f:	89 10                	mov    %edx,(%eax)$/;"	l
c010b481	obj/kernel.asm	/^c010b481:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b484	obj/kernel.asm	/^c010b484:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b487	obj/kernel.asm	/^c010b487:	e8 bb fb ff ff       	call   c010b047 <__intr_restore>$/;"	l
c010b48c	obj/kernel.asm	/^c010b48c:	c9                   	leave  $/;"	l
c010b48d	obj/kernel.asm	/^c010b48d:	c3                   	ret    $/;"	l
c010b48e	obj/kernel.asm	/^c010b48e <run_timer_list>:$/;"	l
c010b48e	obj/kernel.asm	/^c010b48e:	55                   	push   %ebp$/;"	l
c010b48f	obj/kernel.asm	/^c010b48f:	89 e5                	mov    %esp,%ebp$/;"	l
c010b491	obj/kernel.asm	/^c010b491:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b494	obj/kernel.asm	/^c010b494:	e8 84 fb ff ff       	call   c010b01d <__intr_save>$/;"	l
c010b499	obj/kernel.asm	/^c010b499:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b49c	obj/kernel.asm	/^c010b49c:	c7 45 e4 54 1e 1b c0 	movl   $0xc01b1e54,-0x1c(%ebp)$/;"	l
c010b4a3	obj/kernel.asm	/^c010b4a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b4a6	obj/kernel.asm	/^c010b4a6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b4a9	obj/kernel.asm	/^c010b4a9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b4ac	obj/kernel.asm	/^c010b4ac:	81 7d f4 54 1e 1b c0 	cmpl   $0xc01b1e54,-0xc(%ebp)$/;"	l
c010b4b3	obj/kernel.asm	/^c010b4b3:	0f 84 f5 00 00 00    	je     c010b5ae <run_timer_list+0x120>$/;"	l
c010b4b9	obj/kernel.asm	/^c010b4b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4bc	obj/kernel.asm	/^c010b4bc:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010b4bf	obj/kernel.asm	/^c010b4bf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b4c2	obj/kernel.asm	/^c010b4c2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b4c5	obj/kernel.asm	/^c010b4c5:	8b 00                	mov    (%eax),%eax$/;"	l
c010b4c7	obj/kernel.asm	/^c010b4c7:	85 c0                	test   %eax,%eax$/;"	l
c010b4c9	obj/kernel.asm	/^c010b4c9:	75 24                	jne    c010b4ef <run_timer_list+0x61>$/;"	l
c010b4cb	obj/kernel.asm	/^c010b4cb:	c7 44 24 0c 95 e9 10 	movl   $0xc010e995,0xc(%esp)$/;"	l
c010b4d2	obj/kernel.asm	/^c010b4d2:	c0 $/;"	l
c010b4d3	obj/kernel.asm	/^c010b4d3:	c7 44 24 08 00 e9 10 	movl   $0xc010e900,0x8(%esp)$/;"	l
c010b4da	obj/kernel.asm	/^c010b4da:	c0 $/;"	l
c010b4db	obj/kernel.asm	/^c010b4db:	c7 44 24 04 9a 00 00 	movl   $0x9a,0x4(%esp)$/;"	l
c010b4e2	obj/kernel.asm	/^c010b4e2:	00 $/;"	l
c010b4e3	obj/kernel.asm	/^c010b4e3:	c7 04 24 15 e9 10 c0 	movl   $0xc010e915,(%esp)$/;"	l
c010b4ea	obj/kernel.asm	/^c010b4ea:	e8 eb 58 ff ff       	call   c0100dda <__panic>$/;"	l
c010b4ef	obj/kernel.asm	/^c010b4ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b4f2	obj/kernel.asm	/^c010b4f2:	8b 00                	mov    (%eax),%eax$/;"	l
c010b4f4	obj/kernel.asm	/^c010b4f4:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b4f7	obj/kernel.asm	/^c010b4f7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b4fa	obj/kernel.asm	/^c010b4fa:	89 10                	mov    %edx,(%eax)$/;"	l
c010b4fc	obj/kernel.asm	/^c010b4fc:	e9 a0 00 00 00       	jmp    c010b5a1 <run_timer_list+0x113>$/;"	l
c010b501	obj/kernel.asm	/^c010b501:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b504	obj/kernel.asm	/^c010b504:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b507	obj/kernel.asm	/^c010b507:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b50a	obj/kernel.asm	/^c010b50a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b50d	obj/kernel.asm	/^c010b50d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b510	obj/kernel.asm	/^c010b510:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b513	obj/kernel.asm	/^c010b513:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b516	obj/kernel.asm	/^c010b516:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b519	obj/kernel.asm	/^c010b519:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b51c	obj/kernel.asm	/^c010b51c:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010b51f	obj/kernel.asm	/^c010b51f:	85 c0                	test   %eax,%eax$/;"	l
c010b521	obj/kernel.asm	/^c010b521:	74 2e                	je     c010b551 <run_timer_list+0xc3>$/;"	l
c010b523	obj/kernel.asm	/^c010b523:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b526	obj/kernel.asm	/^c010b526:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010b529	obj/kernel.asm	/^c010b529:	85 c0                	test   %eax,%eax$/;"	l
c010b52b	obj/kernel.asm	/^c010b52b:	78 4a                	js     c010b577 <run_timer_list+0xe9>$/;"	l
c010b52d	obj/kernel.asm	/^c010b52d:	c7 44 24 0c ac e9 10 	movl   $0xc010e9ac,0xc(%esp)$/;"	l
c010b534	obj/kernel.asm	/^c010b534:	c0 $/;"	l
c010b535	obj/kernel.asm	/^c010b535:	c7 44 24 08 00 e9 10 	movl   $0xc010e900,0x8(%esp)$/;"	l
c010b53c	obj/kernel.asm	/^c010b53c:	c0 $/;"	l
c010b53d	obj/kernel.asm	/^c010b53d:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c010b544	obj/kernel.asm	/^c010b544:	00 $/;"	l
c010b545	obj/kernel.asm	/^c010b545:	c7 04 24 15 e9 10 c0 	movl   $0xc010e915,(%esp)$/;"	l
c010b54c	obj/kernel.asm	/^c010b54c:	e8 89 58 ff ff       	call   c0100dda <__panic>$/;"	l
c010b551	obj/kernel.asm	/^c010b551:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b554	obj/kernel.asm	/^c010b554:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b557	obj/kernel.asm	/^c010b557:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b55b	obj/kernel.asm	/^c010b55b:	c7 44 24 08 d0 e9 10 	movl   $0xc010e9d0,0x8(%esp)$/;"	l
c010b562	obj/kernel.asm	/^c010b562:	c0 $/;"	l
c010b563	obj/kernel.asm	/^c010b563:	c7 44 24 04 a3 00 00 	movl   $0xa3,0x4(%esp)$/;"	l
c010b56a	obj/kernel.asm	/^c010b56a:	00 $/;"	l
c010b56b	obj/kernel.asm	/^c010b56b:	c7 04 24 15 e9 10 c0 	movl   $0xc010e915,(%esp)$/;"	l
c010b572	obj/kernel.asm	/^c010b572:	e8 cf 58 ff ff       	call   c0100e46 <__warn>$/;"	l
c010b577	obj/kernel.asm	/^c010b577:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b57a	obj/kernel.asm	/^c010b57a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b57d	obj/kernel.asm	/^c010b57d:	e8 e6 fb ff ff       	call   c010b168 <wakeup_proc>$/;"	l
c010b582	obj/kernel.asm	/^c010b582:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b585	obj/kernel.asm	/^c010b585:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b588	obj/kernel.asm	/^c010b588:	e8 3d fe ff ff       	call   c010b3ca <del_timer>$/;"	l
c010b58d	obj/kernel.asm	/^c010b58d:	81 7d f4 54 1e 1b c0 	cmpl   $0xc01b1e54,-0xc(%ebp)$/;"	l
c010b594	obj/kernel.asm	/^c010b594:	75 02                	jne    c010b598 <run_timer_list+0x10a>$/;"	l
c010b596	obj/kernel.asm	/^c010b596:	eb 16                	jmp    c010b5ae <run_timer_list+0x120>$/;"	l
c010b598	obj/kernel.asm	/^c010b598:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b59b	obj/kernel.asm	/^c010b59b:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010b59e	obj/kernel.asm	/^c010b59e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b5a1	obj/kernel.asm	/^c010b5a1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b5a4	obj/kernel.asm	/^c010b5a4:	8b 00                	mov    (%eax),%eax$/;"	l
c010b5a6	obj/kernel.asm	/^c010b5a6:	85 c0                	test   %eax,%eax$/;"	l
c010b5a8	obj/kernel.asm	/^c010b5a8:	0f 84 53 ff ff ff    	je     c010b501 <run_timer_list+0x73>$/;"	l
c010b5ae	obj/kernel.asm	/^c010b5ae:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b5b3	obj/kernel.asm	/^c010b5b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5b6	obj/kernel.asm	/^c010b5b6:	e8 08 fb ff ff       	call   c010b0c3 <sched_class_proc_tick>$/;"	l
c010b5bb	obj/kernel.asm	/^c010b5bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b5be	obj/kernel.asm	/^c010b5be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5c1	obj/kernel.asm	/^c010b5c1:	e8 81 fa ff ff       	call   c010b047 <__intr_restore>$/;"	l
c010b5c6	obj/kernel.asm	/^c010b5c6:	c9                   	leave  $/;"	l
c010b5c7	obj/kernel.asm	/^c010b5c7:	c3                   	ret    $/;"	l
c010b5c8	obj/kernel.asm	/^c010b5c8 <sys_exit>:$/;"	l
c010b5c8	obj/kernel.asm	/^c010b5c8:	55                   	push   %ebp$/;"	l
c010b5c9	obj/kernel.asm	/^c010b5c9:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5cb	obj/kernel.asm	/^c010b5cb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b5ce	obj/kernel.asm	/^c010b5ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5d1	obj/kernel.asm	/^c010b5d1:	8b 00                	mov    (%eax),%eax$/;"	l
c010b5d3	obj/kernel.asm	/^c010b5d3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b5d6	obj/kernel.asm	/^c010b5d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5d9	obj/kernel.asm	/^c010b5d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5dc	obj/kernel.asm	/^c010b5dc:	e8 52 e8 ff ff       	call   c0109e33 <do_exit>$/;"	l
c010b5e1	obj/kernel.asm	/^c010b5e1:	c9                   	leave  $/;"	l
c010b5e2	obj/kernel.asm	/^c010b5e2:	c3                   	ret    $/;"	l
c010b5e3	obj/kernel.asm	/^c010b5e3 <sys_fork>:$/;"	l
c010b5e3	obj/kernel.asm	/^c010b5e3:	55                   	push   %ebp$/;"	l
c010b5e4	obj/kernel.asm	/^c010b5e4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5e6	obj/kernel.asm	/^c010b5e6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b5e9	obj/kernel.asm	/^c010b5e9:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b5ee	obj/kernel.asm	/^c010b5ee:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010b5f1	obj/kernel.asm	/^c010b5f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b5f4	obj/kernel.asm	/^c010b5f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5f7	obj/kernel.asm	/^c010b5f7:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010b5fa	obj/kernel.asm	/^c010b5fa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b5fd	obj/kernel.asm	/^c010b5fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b600	obj/kernel.asm	/^c010b600:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b604	obj/kernel.asm	/^c010b604:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b607	obj/kernel.asm	/^c010b607:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b60b	obj/kernel.asm	/^c010b60b:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010b612	obj/kernel.asm	/^c010b612:	e8 fb e6 ff ff       	call   c0109d12 <do_fork>$/;"	l
c010b617	obj/kernel.asm	/^c010b617:	c9                   	leave  $/;"	l
c010b618	obj/kernel.asm	/^c010b618:	c3                   	ret    $/;"	l
c010b619	obj/kernel.asm	/^c010b619 <sys_wait>:$/;"	l
c010b619	obj/kernel.asm	/^c010b619:	55                   	push   %ebp$/;"	l
c010b61a	obj/kernel.asm	/^c010b61a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b61c	obj/kernel.asm	/^c010b61c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b61f	obj/kernel.asm	/^c010b61f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b622	obj/kernel.asm	/^c010b622:	8b 00                	mov    (%eax),%eax$/;"	l
c010b624	obj/kernel.asm	/^c010b624:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b627	obj/kernel.asm	/^c010b627:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b62a	obj/kernel.asm	/^c010b62a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010b62d	obj/kernel.asm	/^c010b62d:	8b 00                	mov    (%eax),%eax$/;"	l
c010b62f	obj/kernel.asm	/^c010b62f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b632	obj/kernel.asm	/^c010b632:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b635	obj/kernel.asm	/^c010b635:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b639	obj/kernel.asm	/^c010b639:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b63c	obj/kernel.asm	/^c010b63c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b63f	obj/kernel.asm	/^c010b63f:	e8 6d f1 ff ff       	call   c010a7b1 <do_wait>$/;"	l
c010b644	obj/kernel.asm	/^c010b644:	c9                   	leave  $/;"	l
c010b645	obj/kernel.asm	/^c010b645:	c3                   	ret    $/;"	l
c010b646	obj/kernel.asm	/^c010b646 <sys_exec>:$/;"	l
c010b646	obj/kernel.asm	/^c010b646:	55                   	push   %ebp$/;"	l
c010b647	obj/kernel.asm	/^c010b647:	89 e5                	mov    %esp,%ebp$/;"	l
c010b649	obj/kernel.asm	/^c010b649:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b64c	obj/kernel.asm	/^c010b64c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b64f	obj/kernel.asm	/^c010b64f:	8b 00                	mov    (%eax),%eax$/;"	l
c010b651	obj/kernel.asm	/^c010b651:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b654	obj/kernel.asm	/^c010b654:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b657	obj/kernel.asm	/^c010b657:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b65a	obj/kernel.asm	/^c010b65a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b65d	obj/kernel.asm	/^c010b65d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b660	obj/kernel.asm	/^c010b660:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b663	obj/kernel.asm	/^c010b663:	8b 00                	mov    (%eax),%eax$/;"	l
c010b665	obj/kernel.asm	/^c010b665:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b668	obj/kernel.asm	/^c010b668:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b66b	obj/kernel.asm	/^c010b66b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b66e	obj/kernel.asm	/^c010b66e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b671	obj/kernel.asm	/^c010b671:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b674	obj/kernel.asm	/^c010b674:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b678	obj/kernel.asm	/^c010b678:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b67b	obj/kernel.asm	/^c010b67b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b67f	obj/kernel.asm	/^c010b67f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b682	obj/kernel.asm	/^c010b682:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b686	obj/kernel.asm	/^c010b686:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b689	obj/kernel.asm	/^c010b689:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b68c	obj/kernel.asm	/^c010b68c:	e8 d4 ef ff ff       	call   c010a665 <do_execve>$/;"	l
c010b691	obj/kernel.asm	/^c010b691:	c9                   	leave  $/;"	l
c010b692	obj/kernel.asm	/^c010b692:	c3                   	ret    $/;"	l
c010b693	obj/kernel.asm	/^c010b693 <sys_yield>:$/;"	l
c010b693	obj/kernel.asm	/^c010b693:	55                   	push   %ebp$/;"	l
c010b694	obj/kernel.asm	/^c010b694:	89 e5                	mov    %esp,%ebp$/;"	l
c010b696	obj/kernel.asm	/^c010b696:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b699	obj/kernel.asm	/^c010b699:	e8 fd f0 ff ff       	call   c010a79b <do_yield>$/;"	l
c010b69e	obj/kernel.asm	/^c010b69e:	c9                   	leave  $/;"	l
c010b69f	obj/kernel.asm	/^c010b69f:	c3                   	ret    $/;"	l
c010b6a0	obj/kernel.asm	/^c010b6a0 <sys_kill>:$/;"	l
c010b6a0	obj/kernel.asm	/^c010b6a0:	55                   	push   %ebp$/;"	l
c010b6a1	obj/kernel.asm	/^c010b6a1:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6a3	obj/kernel.asm	/^c010b6a3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b6a6	obj/kernel.asm	/^c010b6a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6a9	obj/kernel.asm	/^c010b6a9:	8b 00                	mov    (%eax),%eax$/;"	l
c010b6ab	obj/kernel.asm	/^c010b6ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b6ae	obj/kernel.asm	/^c010b6ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6b1	obj/kernel.asm	/^c010b6b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6b4	obj/kernel.asm	/^c010b6b4:	e8 8c f2 ff ff       	call   c010a945 <do_kill>$/;"	l
c010b6b9	obj/kernel.asm	/^c010b6b9:	c9                   	leave  $/;"	l
c010b6ba	obj/kernel.asm	/^c010b6ba:	c3                   	ret    $/;"	l
c010b6bb	obj/kernel.asm	/^c010b6bb <sys_getpid>:$/;"	l
c010b6bb	obj/kernel.asm	/^c010b6bb:	55                   	push   %ebp$/;"	l
c010b6bc	obj/kernel.asm	/^c010b6bc:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6be	obj/kernel.asm	/^c010b6be:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b6c3	obj/kernel.asm	/^c010b6c3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b6c6	obj/kernel.asm	/^c010b6c6:	5d                   	pop    %ebp$/;"	l
c010b6c7	obj/kernel.asm	/^c010b6c7:	c3                   	ret    $/;"	l
c010b6c8	obj/kernel.asm	/^c010b6c8 <sys_putc>:$/;"	l
c010b6c8	obj/kernel.asm	/^c010b6c8:	55                   	push   %ebp$/;"	l
c010b6c9	obj/kernel.asm	/^c010b6c9:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6cb	obj/kernel.asm	/^c010b6cb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b6ce	obj/kernel.asm	/^c010b6ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6d1	obj/kernel.asm	/^c010b6d1:	8b 00                	mov    (%eax),%eax$/;"	l
c010b6d3	obj/kernel.asm	/^c010b6d3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b6d6	obj/kernel.asm	/^c010b6d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6d9	obj/kernel.asm	/^c010b6d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6dc	obj/kernel.asm	/^c010b6dc:	e8 9d 4c ff ff       	call   c010037e <cputchar>$/;"	l
c010b6e1	obj/kernel.asm	/^c010b6e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b6e6	obj/kernel.asm	/^c010b6e6:	c9                   	leave  $/;"	l
c010b6e7	obj/kernel.asm	/^c010b6e7:	c3                   	ret    $/;"	l
c010b6e8	obj/kernel.asm	/^c010b6e8 <sys_pgdir>:$/;"	l
c010b6e8	obj/kernel.asm	/^c010b6e8:	55                   	push   %ebp$/;"	l
c010b6e9	obj/kernel.asm	/^c010b6e9:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6eb	obj/kernel.asm	/^c010b6eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b6ee	obj/kernel.asm	/^c010b6ee:	e8 9d b4 ff ff       	call   c0106b90 <print_pgdir>$/;"	l
c010b6f3	obj/kernel.asm	/^c010b6f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b6f8	obj/kernel.asm	/^c010b6f8:	c9                   	leave  $/;"	l
c010b6f9	obj/kernel.asm	/^c010b6f9:	c3                   	ret    $/;"	l
c010b6fa	obj/kernel.asm	/^c010b6fa <sys_gettime>:$/;"	l
c010b6fa	obj/kernel.asm	/^c010b6fa:	55                   	push   %ebp$/;"	l
c010b6fb	obj/kernel.asm	/^c010b6fb:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6fd	obj/kernel.asm	/^c010b6fd:	a1 78 1e 1b c0       	mov    0xc01b1e78,%eax$/;"	l
c010b702	obj/kernel.asm	/^c010b702:	5d                   	pop    %ebp$/;"	l
c010b703	obj/kernel.asm	/^c010b703:	c3                   	ret    $/;"	l
c010b704	obj/kernel.asm	/^c010b704 <sys_lab6_set_priority>:$/;"	l
c010b704	obj/kernel.asm	/^c010b704:	55                   	push   %ebp$/;"	l
c010b705	obj/kernel.asm	/^c010b705:	89 e5                	mov    %esp,%ebp$/;"	l
c010b707	obj/kernel.asm	/^c010b707:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b70a	obj/kernel.asm	/^c010b70a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b70d	obj/kernel.asm	/^c010b70d:	8b 00                	mov    (%eax),%eax$/;"	l
c010b70f	obj/kernel.asm	/^c010b70f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b712	obj/kernel.asm	/^c010b712:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b715	obj/kernel.asm	/^c010b715:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b718	obj/kernel.asm	/^c010b718:	e8 83 f6 ff ff       	call   c010ada0 <lab6_set_priority>$/;"	l
c010b71d	obj/kernel.asm	/^c010b71d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b722	obj/kernel.asm	/^c010b722:	c9                   	leave  $/;"	l
c010b723	obj/kernel.asm	/^c010b723:	c3                   	ret    $/;"	l
c010b724	obj/kernel.asm	/^c010b724 <syscall>:$/;"	l
c010b724	obj/kernel.asm	/^c010b724:	55                   	push   %ebp$/;"	l
c010b725	obj/kernel.asm	/^c010b725:	89 e5                	mov    %esp,%ebp$/;"	l
c010b727	obj/kernel.asm	/^c010b727:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010b72a	obj/kernel.asm	/^c010b72a:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b72f	obj/kernel.asm	/^c010b72f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010b732	obj/kernel.asm	/^c010b732:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b735	obj/kernel.asm	/^c010b735:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b738	obj/kernel.asm	/^c010b738:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010b73b	obj/kernel.asm	/^c010b73b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b73e	obj/kernel.asm	/^c010b73e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b742	obj/kernel.asm	/^c010b742:	78 60                	js     c010b7a4 <syscall+0x80>$/;"	l
c010b744	obj/kernel.asm	/^c010b744:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b747	obj/kernel.asm	/^c010b747:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c010b74c	obj/kernel.asm	/^c010b74c:	77 56                	ja     c010b7a4 <syscall+0x80>$/;"	l
c010b74e	obj/kernel.asm	/^c010b74e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b751	obj/kernel.asm	/^c010b751:	8b 04 85 a0 da 12 c0 	mov    -0x3fed2560(,%eax,4),%eax$/;"	l
c010b758	obj/kernel.asm	/^c010b758:	85 c0                	test   %eax,%eax$/;"	l
c010b75a	obj/kernel.asm	/^c010b75a:	74 48                	je     c010b7a4 <syscall+0x80>$/;"	l
c010b75c	obj/kernel.asm	/^c010b75c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b75f	obj/kernel.asm	/^c010b75f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b762	obj/kernel.asm	/^c010b762:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010b765	obj/kernel.asm	/^c010b765:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b768	obj/kernel.asm	/^c010b768:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b76b	obj/kernel.asm	/^c010b76b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b76e	obj/kernel.asm	/^c010b76e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b771	obj/kernel.asm	/^c010b771:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010b774	obj/kernel.asm	/^c010b774:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b777	obj/kernel.asm	/^c010b777:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b77a	obj/kernel.asm	/^c010b77a:	8b 00                	mov    (%eax),%eax$/;"	l
c010b77c	obj/kernel.asm	/^c010b77c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b77f	obj/kernel.asm	/^c010b77f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b782	obj/kernel.asm	/^c010b782:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b785	obj/kernel.asm	/^c010b785:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b788	obj/kernel.asm	/^c010b788:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b78b	obj/kernel.asm	/^c010b78b:	8b 04 85 a0 da 12 c0 	mov    -0x3fed2560(,%eax,4),%eax$/;"	l
c010b792	obj/kernel.asm	/^c010b792:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010b795	obj/kernel.asm	/^c010b795:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010b798	obj/kernel.asm	/^c010b798:	ff d0                	call   *%eax$/;"	l
c010b79a	obj/kernel.asm	/^c010b79a:	89 c2                	mov    %eax,%edx$/;"	l
c010b79c	obj/kernel.asm	/^c010b79c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b79f	obj/kernel.asm	/^c010b79f:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010b7a2	obj/kernel.asm	/^c010b7a2:	eb 46                	jmp    c010b7ea <syscall+0xc6>$/;"	l
c010b7a4	obj/kernel.asm	/^c010b7a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b7a7	obj/kernel.asm	/^c010b7a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b7aa	obj/kernel.asm	/^c010b7aa:	e8 41 6c ff ff       	call   c01023f0 <print_trapframe>$/;"	l
c010b7af	obj/kernel.asm	/^c010b7af:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b7b4	obj/kernel.asm	/^c010b7b4:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010b7b7	obj/kernel.asm	/^c010b7b7:	a1 28 fe 1a c0       	mov    0xc01afe28,%eax$/;"	l
c010b7bc	obj/kernel.asm	/^c010b7bc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b7bf	obj/kernel.asm	/^c010b7bf:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010b7c3	obj/kernel.asm	/^c010b7c3:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010b7c7	obj/kernel.asm	/^c010b7c7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b7ca	obj/kernel.asm	/^c010b7ca:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b7ce	obj/kernel.asm	/^c010b7ce:	c7 44 24 08 f0 e9 10 	movl   $0xc010e9f0,0x8(%esp)$/;"	l
c010b7d5	obj/kernel.asm	/^c010b7d5:	c0 $/;"	l
c010b7d6	obj/kernel.asm	/^c010b7d6:	c7 44 24 04 72 00 00 	movl   $0x72,0x4(%esp)$/;"	l
c010b7dd	obj/kernel.asm	/^c010b7dd:	00 $/;"	l
c010b7de	obj/kernel.asm	/^c010b7de:	c7 04 24 1c ea 10 c0 	movl   $0xc010ea1c,(%esp)$/;"	l
c010b7e5	obj/kernel.asm	/^c010b7e5:	e8 f0 55 ff ff       	call   c0100dda <__panic>$/;"	l
c010b7ea	obj/kernel.asm	/^c010b7ea:	c9                   	leave  $/;"	l
c010b7eb	obj/kernel.asm	/^c010b7eb:	c3                   	ret    $/;"	l
c010b7ec	obj/kernel.asm	/^c010b7ec <hash32>:$/;"	l
c010b7ec	obj/kernel.asm	/^c010b7ec:	55                   	push   %ebp$/;"	l
c010b7ed	obj/kernel.asm	/^c010b7ed:	89 e5                	mov    %esp,%ebp$/;"	l
c010b7ef	obj/kernel.asm	/^c010b7ef:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b7f2	obj/kernel.asm	/^c010b7f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7f5	obj/kernel.asm	/^c010b7f5:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c010b7fb	obj/kernel.asm	/^c010b7fb:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b7fe	obj/kernel.asm	/^c010b7fe:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c010b803	obj/kernel.asm	/^c010b803:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010b806	obj/kernel.asm	/^c010b806:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010b809	obj/kernel.asm	/^c010b809:	89 c1                	mov    %eax,%ecx$/;"	l
c010b80b	obj/kernel.asm	/^c010b80b:	d3 ea                	shr    %cl,%edx$/;"	d
c010b80d	obj/kernel.asm	/^c010b80d:	89 d0                	mov    %edx,%eax$/;"	l
c010b80f	obj/kernel.asm	/^c010b80f:	c9                   	leave  $/;"	l
c010b810	obj/kernel.asm	/^c010b810:	c3                   	ret    $/;"	l
c010b811	obj/kernel.asm	/^c010b811 <printnum>:$/;"	l
c010b811	obj/kernel.asm	/^c010b811:	55                   	push   %ebp$/;"	l
c010b812	obj/kernel.asm	/^c010b812:	89 e5                	mov    %esp,%ebp$/;"	l
c010b814	obj/kernel.asm	/^c010b814:	83 ec 58             	sub    $0x58,%esp$/;"	l
c010b817	obj/kernel.asm	/^c010b817:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b81a	obj/kernel.asm	/^c010b81a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010b81d	obj/kernel.asm	/^c010b81d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b820	obj/kernel.asm	/^c010b820:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010b823	obj/kernel.asm	/^c010b823:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b826	obj/kernel.asm	/^c010b826:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010b829	obj/kernel.asm	/^c010b829:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b82c	obj/kernel.asm	/^c010b82c:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b82f	obj/kernel.asm	/^c010b82f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b832	obj/kernel.asm	/^c010b832:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b835	obj/kernel.asm	/^c010b835:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b838	obj/kernel.asm	/^c010b838:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b83b	obj/kernel.asm	/^c010b83b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b83e	obj/kernel.asm	/^c010b83e:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010b841	obj/kernel.asm	/^c010b841:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b844	obj/kernel.asm	/^c010b844:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b847	obj/kernel.asm	/^c010b847:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b84b	obj/kernel.asm	/^c010b84b:	74 1c                	je     c010b869 <printnum+0x58>$/;"	l
c010b84d	obj/kernel.asm	/^c010b84d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b850	obj/kernel.asm	/^c010b850:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b855	obj/kernel.asm	/^c010b855:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b858	obj/kernel.asm	/^c010b858:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b85b	obj/kernel.asm	/^c010b85b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b85e	obj/kernel.asm	/^c010b85e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b863	obj/kernel.asm	/^c010b863:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b866	obj/kernel.asm	/^c010b866:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b869	obj/kernel.asm	/^c010b869:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b86c	obj/kernel.asm	/^c010b86c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b86f	obj/kernel.asm	/^c010b86f:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b872	obj/kernel.asm	/^c010b872:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b875	obj/kernel.asm	/^c010b875:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c010b878	obj/kernel.asm	/^c010b878:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b87b	obj/kernel.asm	/^c010b87b:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b87e	obj/kernel.asm	/^c010b87e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b881	obj/kernel.asm	/^c010b881:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b884	obj/kernel.asm	/^c010b884:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b887	obj/kernel.asm	/^c010b887:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010b88a	obj/kernel.asm	/^c010b88a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b88d	obj/kernel.asm	/^c010b88d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b892	obj/kernel.asm	/^c010b892:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010b895	obj/kernel.asm	/^c010b895:	77 56                	ja     c010b8ed <printnum+0xdc>$/;"	l
c010b897	obj/kernel.asm	/^c010b897:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010b89a	obj/kernel.asm	/^c010b89a:	72 05                	jb     c010b8a1 <printnum+0x90>$/;"	l
c010b89c	obj/kernel.asm	/^c010b89c:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c010b89f	obj/kernel.asm	/^c010b89f:	77 4c                	ja     c010b8ed <printnum+0xdc>$/;"	l
c010b8a1	obj/kernel.asm	/^c010b8a1:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c010b8a4	obj/kernel.asm	/^c010b8a4:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b8a7	obj/kernel.asm	/^c010b8a7:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c010b8aa	obj/kernel.asm	/^c010b8aa:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
c010b8ae	obj/kernel.asm	/^c010b8ae:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010b8b2	obj/kernel.asm	/^c010b8b2:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b8b5	obj/kernel.asm	/^c010b8b5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010b8b9	obj/kernel.asm	/^c010b8b9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b8bc	obj/kernel.asm	/^c010b8bc:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b8bf	obj/kernel.asm	/^c010b8bf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b8c3	obj/kernel.asm	/^c010b8c3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b8c7	obj/kernel.asm	/^c010b8c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b8ca	obj/kernel.asm	/^c010b8ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b8ce	obj/kernel.asm	/^c010b8ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8d1	obj/kernel.asm	/^c010b8d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b8d4	obj/kernel.asm	/^c010b8d4:	e8 38 ff ff ff       	call   c010b811 <printnum>$/;"	l
c010b8d9	obj/kernel.asm	/^c010b8d9:	eb 1c                	jmp    c010b8f7 <printnum+0xe6>$/;"	l
c010b8db	obj/kernel.asm	/^c010b8db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b8de	obj/kernel.asm	/^c010b8de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b8e2	obj/kernel.asm	/^c010b8e2:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c010b8e5	obj/kernel.asm	/^c010b8e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b8e8	obj/kernel.asm	/^c010b8e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8eb	obj/kernel.asm	/^c010b8eb:	ff d0                	call   *%eax$/;"	l
c010b8ed	obj/kernel.asm	/^c010b8ed:	83 6d 1c 01          	subl   $0x1,0x1c(%ebp)$/;"	l
c010b8f1	obj/kernel.asm	/^c010b8f1:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c010b8f5	obj/kernel.asm	/^c010b8f5:	7f e4                	jg     c010b8db <printnum+0xca>$/;"	l
c010b8f7	obj/kernel.asm	/^c010b8f7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b8fa	obj/kernel.asm	/^c010b8fa:	05 44 eb 10 c0       	add    $0xc010eb44,%eax$/;"	l
c010b8ff	obj/kernel.asm	/^c010b8ff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b902	obj/kernel.asm	/^c010b902:	0f be c0             	movsbl %al,%eax$/;"	l
c010b905	obj/kernel.asm	/^c010b905:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b908	obj/kernel.asm	/^c010b908:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b90c	obj/kernel.asm	/^c010b90c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b90f	obj/kernel.asm	/^c010b90f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b912	obj/kernel.asm	/^c010b912:	ff d0                	call   *%eax$/;"	l
c010b914	obj/kernel.asm	/^c010b914:	c9                   	leave  $/;"	l
c010b915	obj/kernel.asm	/^c010b915:	c3                   	ret    $/;"	l
c010b916	obj/kernel.asm	/^c010b916 <getuint>:$/;"	l
c010b916	obj/kernel.asm	/^c010b916:	55                   	push   %ebp$/;"	l
c010b917	obj/kernel.asm	/^c010b917:	89 e5                	mov    %esp,%ebp$/;"	l
c010b919	obj/kernel.asm	/^c010b919:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010b91d	obj/kernel.asm	/^c010b91d:	7e 14                	jle    c010b933 <getuint+0x1d>$/;"	l
c010b91f	obj/kernel.asm	/^c010b91f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b922	obj/kernel.asm	/^c010b922:	8b 00                	mov    (%eax),%eax$/;"	l
c010b924	obj/kernel.asm	/^c010b924:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010b927	obj/kernel.asm	/^c010b927:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b92a	obj/kernel.asm	/^c010b92a:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b92c	obj/kernel.asm	/^c010b92c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b92f	obj/kernel.asm	/^c010b92f:	8b 00                	mov    (%eax),%eax$/;"	l
c010b931	obj/kernel.asm	/^c010b931:	eb 30                	jmp    c010b963 <getuint+0x4d>$/;"	l
c010b933	obj/kernel.asm	/^c010b933:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b937	obj/kernel.asm	/^c010b937:	74 16                	je     c010b94f <getuint+0x39>$/;"	l
c010b939	obj/kernel.asm	/^c010b939:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b93c	obj/kernel.asm	/^c010b93c:	8b 00                	mov    (%eax),%eax$/;"	l
c010b93e	obj/kernel.asm	/^c010b93e:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b941	obj/kernel.asm	/^c010b941:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b944	obj/kernel.asm	/^c010b944:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b946	obj/kernel.asm	/^c010b946:	8b 00                	mov    (%eax),%eax$/;"	l
c010b948	obj/kernel.asm	/^c010b948:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b94d	obj/kernel.asm	/^c010b94d:	eb 14                	jmp    c010b963 <getuint+0x4d>$/;"	l
c010b94f	obj/kernel.asm	/^c010b94f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b952	obj/kernel.asm	/^c010b952:	8b 00                	mov    (%eax),%eax$/;"	l
c010b954	obj/kernel.asm	/^c010b954:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b957	obj/kernel.asm	/^c010b957:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b95a	obj/kernel.asm	/^c010b95a:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b95c	obj/kernel.asm	/^c010b95c:	8b 00                	mov    (%eax),%eax$/;"	l
c010b95e	obj/kernel.asm	/^c010b95e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b963	obj/kernel.asm	/^c010b963:	5d                   	pop    %ebp$/;"	l
c010b964	obj/kernel.asm	/^c010b964:	c3                   	ret    $/;"	l
c010b965	obj/kernel.asm	/^c010b965 <getint>:$/;"	l
c010b965	obj/kernel.asm	/^c010b965:	55                   	push   %ebp$/;"	l
c010b966	obj/kernel.asm	/^c010b966:	89 e5                	mov    %esp,%ebp$/;"	l
c010b968	obj/kernel.asm	/^c010b968:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010b96c	obj/kernel.asm	/^c010b96c:	7e 14                	jle    c010b982 <getint+0x1d>$/;"	l
c010b96e	obj/kernel.asm	/^c010b96e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b971	obj/kernel.asm	/^c010b971:	8b 00                	mov    (%eax),%eax$/;"	l
c010b973	obj/kernel.asm	/^c010b973:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010b976	obj/kernel.asm	/^c010b976:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b979	obj/kernel.asm	/^c010b979:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b97b	obj/kernel.asm	/^c010b97b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b97e	obj/kernel.asm	/^c010b97e:	8b 00                	mov    (%eax),%eax$/;"	l
c010b980	obj/kernel.asm	/^c010b980:	eb 28                	jmp    c010b9aa <getint+0x45>$/;"	l
c010b982	obj/kernel.asm	/^c010b982:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b986	obj/kernel.asm	/^c010b986:	74 12                	je     c010b99a <getint+0x35>$/;"	l
c010b988	obj/kernel.asm	/^c010b988:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b98b	obj/kernel.asm	/^c010b98b:	8b 00                	mov    (%eax),%eax$/;"	l
c010b98d	obj/kernel.asm	/^c010b98d:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b990	obj/kernel.asm	/^c010b990:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b993	obj/kernel.asm	/^c010b993:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b995	obj/kernel.asm	/^c010b995:	8b 00                	mov    (%eax),%eax$/;"	l
c010b997	obj/kernel.asm	/^c010b997:	99                   	cltd   $/;"	l
c010b998	obj/kernel.asm	/^c010b998:	eb 10                	jmp    c010b9aa <getint+0x45>$/;"	l
c010b99a	obj/kernel.asm	/^c010b99a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b99d	obj/kernel.asm	/^c010b99d:	8b 00                	mov    (%eax),%eax$/;"	l
c010b99f	obj/kernel.asm	/^c010b99f:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b9a2	obj/kernel.asm	/^c010b9a2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b9a5	obj/kernel.asm	/^c010b9a5:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b9a7	obj/kernel.asm	/^c010b9a7:	8b 00                	mov    (%eax),%eax$/;"	l
c010b9a9	obj/kernel.asm	/^c010b9a9:	99                   	cltd   $/;"	l
c010b9aa	obj/kernel.asm	/^c010b9aa:	5d                   	pop    %ebp$/;"	l
c010b9ab	obj/kernel.asm	/^c010b9ab:	c3                   	ret    $/;"	l
c010b9ac	obj/kernel.asm	/^c010b9ac <printfmt>:$/;"	l
c010b9ac	obj/kernel.asm	/^c010b9ac:	55                   	push   %ebp$/;"	l
c010b9ad	obj/kernel.asm	/^c010b9ad:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9af	obj/kernel.asm	/^c010b9af:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b9b2	obj/kernel.asm	/^c010b9b2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b9b5	obj/kernel.asm	/^c010b9b5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b9b8	obj/kernel.asm	/^c010b9b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9bb	obj/kernel.asm	/^c010b9bb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b9bf	obj/kernel.asm	/^c010b9bf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b9c2	obj/kernel.asm	/^c010b9c2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b9c6	obj/kernel.asm	/^c010b9c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b9c9	obj/kernel.asm	/^c010b9c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b9cd	obj/kernel.asm	/^c010b9cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9d0	obj/kernel.asm	/^c010b9d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b9d3	obj/kernel.asm	/^c010b9d3:	e8 02 00 00 00       	call   c010b9da <vprintfmt>$/;"	l
c010b9d8	obj/kernel.asm	/^c010b9d8:	c9                   	leave  $/;"	l
c010b9d9	obj/kernel.asm	/^c010b9d9:	c3                   	ret    $/;"	l
c010b9da	obj/kernel.asm	/^c010b9da <vprintfmt>:$/;"	l
c010b9da	obj/kernel.asm	/^c010b9da:	55                   	push   %ebp$/;"	l
c010b9db	obj/kernel.asm	/^c010b9db:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9dd	obj/kernel.asm	/^c010b9dd:	56                   	push   %esi$/;"	l
c010b9de	obj/kernel.asm	/^c010b9de:	53                   	push   %ebx$/;"	l
c010b9df	obj/kernel.asm	/^c010b9df:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010b9e2	obj/kernel.asm	/^c010b9e2:	eb 18                	jmp    c010b9fc <vprintfmt+0x22>$/;"	l
c010b9e4	obj/kernel.asm	/^c010b9e4:	85 db                	test   %ebx,%ebx$/;"	l
c010b9e6	obj/kernel.asm	/^c010b9e6:	75 05                	jne    c010b9ed <vprintfmt+0x13>$/;"	l
c010b9e8	obj/kernel.asm	/^c010b9e8:	e9 d1 03 00 00       	jmp    c010bdbe <vprintfmt+0x3e4>$/;"	l
c010b9ed	obj/kernel.asm	/^c010b9ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b9f0	obj/kernel.asm	/^c010b9f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b9f4	obj/kernel.asm	/^c010b9f4:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c010b9f7	obj/kernel.asm	/^c010b9f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9fa	obj/kernel.asm	/^c010b9fa:	ff d0                	call   *%eax$/;"	l
c010b9fc	obj/kernel.asm	/^c010b9fc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b9ff	obj/kernel.asm	/^c010b9ff:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010ba02	obj/kernel.asm	/^c010ba02:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010ba05	obj/kernel.asm	/^c010ba05:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba08	obj/kernel.asm	/^c010ba08:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010ba0b	obj/kernel.asm	/^c010ba0b:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c010ba0e	obj/kernel.asm	/^c010ba0e:	75 d4                	jne    c010b9e4 <vprintfmt+0xa>$/;"	l
c010ba10	obj/kernel.asm	/^c010ba10:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c010ba14	obj/kernel.asm	/^c010ba14:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010ba1b	obj/kernel.asm	/^c010ba1b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ba1e	obj/kernel.asm	/^c010ba1e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ba21	obj/kernel.asm	/^c010ba21:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010ba28	obj/kernel.asm	/^c010ba28:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ba2b	obj/kernel.asm	/^c010ba2b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ba2e	obj/kernel.asm	/^c010ba2e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ba31	obj/kernel.asm	/^c010ba31:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010ba34	obj/kernel.asm	/^c010ba34:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010ba37	obj/kernel.asm	/^c010ba37:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba3a	obj/kernel.asm	/^c010ba3a:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010ba3d	obj/kernel.asm	/^c010ba3d:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c010ba40	obj/kernel.asm	/^c010ba40:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c010ba43	obj/kernel.asm	/^c010ba43:	0f 87 44 03 00 00    	ja     c010bd8d <vprintfmt+0x3b3>$/;"	l
c010ba49	obj/kernel.asm	/^c010ba49:	8b 04 85 68 eb 10 c0 	mov    -0x3fef1498(,%eax,4),%eax$/;"	l
c010ba50	obj/kernel.asm	/^c010ba50:	ff e0                	jmp    *%eax$/;"	l
c010ba52	obj/kernel.asm	/^c010ba52:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c010ba56	obj/kernel.asm	/^c010ba56:	eb d6                	jmp    c010ba2e <vprintfmt+0x54>$/;"	l
c010ba58	obj/kernel.asm	/^c010ba58:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c010ba5c	obj/kernel.asm	/^c010ba5c:	eb d0                	jmp    c010ba2e <vprintfmt+0x54>$/;"	l
c010ba5e	obj/kernel.asm	/^c010ba5e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010ba65	obj/kernel.asm	/^c010ba65:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010ba68	obj/kernel.asm	/^c010ba68:	89 d0                	mov    %edx,%eax$/;"	l
c010ba6a	obj/kernel.asm	/^c010ba6a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010ba6d	obj/kernel.asm	/^c010ba6d:	01 d0                	add    %edx,%eax$/;"	l
c010ba6f	obj/kernel.asm	/^c010ba6f:	01 c0                	add    %eax,%eax$/;"	l
c010ba71	obj/kernel.asm	/^c010ba71:	01 d8                	add    %ebx,%eax$/;"	l
c010ba73	obj/kernel.asm	/^c010ba73:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010ba76	obj/kernel.asm	/^c010ba76:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ba79	obj/kernel.asm	/^c010ba79:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ba7c	obj/kernel.asm	/^c010ba7c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ba7f	obj/kernel.asm	/^c010ba7f:	0f be d8             	movsbl %al,%ebx$/;"	l
c010ba82	obj/kernel.asm	/^c010ba82:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c010ba85	obj/kernel.asm	/^c010ba85:	7e 0b                	jle    c010ba92 <vprintfmt+0xb8>$/;"	l
c010ba87	obj/kernel.asm	/^c010ba87:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c010ba8a	obj/kernel.asm	/^c010ba8a:	7f 06                	jg     c010ba92 <vprintfmt+0xb8>$/;"	l
c010ba8c	obj/kernel.asm	/^c010ba8c:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c010ba90	obj/kernel.asm	/^c010ba90:	eb d3                	jmp    c010ba65 <vprintfmt+0x8b>$/;"	l
c010ba92	obj/kernel.asm	/^c010ba92:	eb 33                	jmp    c010bac7 <vprintfmt+0xed>$/;"	l
c010ba94	obj/kernel.asm	/^c010ba94:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010ba97	obj/kernel.asm	/^c010ba97:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010ba9a	obj/kernel.asm	/^c010ba9a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010ba9d	obj/kernel.asm	/^c010ba9d:	8b 00                	mov    (%eax),%eax$/;"	l
c010ba9f	obj/kernel.asm	/^c010ba9f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010baa2	obj/kernel.asm	/^c010baa2:	eb 23                	jmp    c010bac7 <vprintfmt+0xed>$/;"	l
c010baa4	obj/kernel.asm	/^c010baa4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010baa8	obj/kernel.asm	/^c010baa8:	79 0c                	jns    c010bab6 <vprintfmt+0xdc>$/;"	l
c010baaa	obj/kernel.asm	/^c010baaa:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010bab1	obj/kernel.asm	/^c010bab1:	e9 78 ff ff ff       	jmp    c010ba2e <vprintfmt+0x54>$/;"	l
c010bab6	obj/kernel.asm	/^c010bab6:	e9 73 ff ff ff       	jmp    c010ba2e <vprintfmt+0x54>$/;"	l
c010babb	obj/kernel.asm	/^c010babb:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c010bac2	obj/kernel.asm	/^c010bac2:	e9 67 ff ff ff       	jmp    c010ba2e <vprintfmt+0x54>$/;"	l
c010bac7	obj/kernel.asm	/^c010bac7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010bacb	obj/kernel.asm	/^c010bacb:	79 12                	jns    c010badf <vprintfmt+0x105>$/;"	l
c010bacd	obj/kernel.asm	/^c010bacd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bad0	obj/kernel.asm	/^c010bad0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bad3	obj/kernel.asm	/^c010bad3:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010bada	obj/kernel.asm	/^c010bada:	e9 4f ff ff ff       	jmp    c010ba2e <vprintfmt+0x54>$/;"	l
c010badf	obj/kernel.asm	/^c010badf:	e9 4a ff ff ff       	jmp    c010ba2e <vprintfmt+0x54>$/;"	l
c010bae4	obj/kernel.asm	/^c010bae4:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c010bae8	obj/kernel.asm	/^c010bae8:	e9 41 ff ff ff       	jmp    c010ba2e <vprintfmt+0x54>$/;"	l
c010baed	obj/kernel.asm	/^c010baed:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010baf0	obj/kernel.asm	/^c010baf0:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010baf3	obj/kernel.asm	/^c010baf3:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010baf6	obj/kernel.asm	/^c010baf6:	8b 00                	mov    (%eax),%eax$/;"	l
c010baf8	obj/kernel.asm	/^c010baf8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bafb	obj/kernel.asm	/^c010bafb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010baff	obj/kernel.asm	/^c010baff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb02	obj/kernel.asm	/^c010bb02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb05	obj/kernel.asm	/^c010bb05:	ff d0                	call   *%eax$/;"	l
c010bb07	obj/kernel.asm	/^c010bb07:	e9 ac 02 00 00       	jmp    c010bdb8 <vprintfmt+0x3de>$/;"	l
c010bb0c	obj/kernel.asm	/^c010bb0c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010bb0f	obj/kernel.asm	/^c010bb0f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010bb12	obj/kernel.asm	/^c010bb12:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010bb15	obj/kernel.asm	/^c010bb15:	8b 18                	mov    (%eax),%ebx$/;"	l
c010bb17	obj/kernel.asm	/^c010bb17:	85 db                	test   %ebx,%ebx$/;"	l
c010bb19	obj/kernel.asm	/^c010bb19:	79 02                	jns    c010bb1d <vprintfmt+0x143>$/;"	l
c010bb1b	obj/kernel.asm	/^c010bb1b:	f7 db                	neg    %ebx$/;"	l
c010bb1d	obj/kernel.asm	/^c010bb1d:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c010bb20	obj/kernel.asm	/^c010bb20:	7f 0b                	jg     c010bb2d <vprintfmt+0x153>$/;"	l
c010bb22	obj/kernel.asm	/^c010bb22:	8b 34 9d e0 ea 10 c0 	mov    -0x3fef1520(,%ebx,4),%esi$/;"	l
c010bb29	obj/kernel.asm	/^c010bb29:	85 f6                	test   %esi,%esi$/;"	l
c010bb2b	obj/kernel.asm	/^c010bb2b:	75 23                	jne    c010bb50 <vprintfmt+0x176>$/;"	l
c010bb2d	obj/kernel.asm	/^c010bb2d:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c010bb31	obj/kernel.asm	/^c010bb31:	c7 44 24 08 55 eb 10 	movl   $0xc010eb55,0x8(%esp)$/;"	l
c010bb38	obj/kernel.asm	/^c010bb38:	c0 $/;"	l
c010bb39	obj/kernel.asm	/^c010bb39:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bb3c	obj/kernel.asm	/^c010bb3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bb40	obj/kernel.asm	/^c010bb40:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb43	obj/kernel.asm	/^c010bb43:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb46	obj/kernel.asm	/^c010bb46:	e8 61 fe ff ff       	call   c010b9ac <printfmt>$/;"	l
c010bb4b	obj/kernel.asm	/^c010bb4b:	e9 68 02 00 00       	jmp    c010bdb8 <vprintfmt+0x3de>$/;"	l
c010bb50	obj/kernel.asm	/^c010bb50:	89 74 24 0c          	mov    %esi,0xc(%esp)$/;"	l
c010bb54	obj/kernel.asm	/^c010bb54:	c7 44 24 08 5e eb 10 	movl   $0xc010eb5e,0x8(%esp)$/;"	l
c010bb5b	obj/kernel.asm	/^c010bb5b:	c0 $/;"	l
c010bb5c	obj/kernel.asm	/^c010bb5c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bb5f	obj/kernel.asm	/^c010bb5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bb63	obj/kernel.asm	/^c010bb63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb66	obj/kernel.asm	/^c010bb66:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb69	obj/kernel.asm	/^c010bb69:	e8 3e fe ff ff       	call   c010b9ac <printfmt>$/;"	l
c010bb6e	obj/kernel.asm	/^c010bb6e:	e9 45 02 00 00       	jmp    c010bdb8 <vprintfmt+0x3de>$/;"	l
c010bb73	obj/kernel.asm	/^c010bb73:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010bb76	obj/kernel.asm	/^c010bb76:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010bb79	obj/kernel.asm	/^c010bb79:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010bb7c	obj/kernel.asm	/^c010bb7c:	8b 30                	mov    (%eax),%esi$/;"	l
c010bb7e	obj/kernel.asm	/^c010bb7e:	85 f6                	test   %esi,%esi$/;"	l
c010bb80	obj/kernel.asm	/^c010bb80:	75 05                	jne    c010bb87 <vprintfmt+0x1ad>$/;"	l
c010bb82	obj/kernel.asm	/^c010bb82:	be 61 eb 10 c0       	mov    $0xc010eb61,%esi$/;"	l
c010bb87	obj/kernel.asm	/^c010bb87:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010bb8b	obj/kernel.asm	/^c010bb8b:	7e 3e                	jle    c010bbcb <vprintfmt+0x1f1>$/;"	l
c010bb8d	obj/kernel.asm	/^c010bb8d:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c010bb91	obj/kernel.asm	/^c010bb91:	74 38                	je     c010bbcb <vprintfmt+0x1f1>$/;"	l
c010bb93	obj/kernel.asm	/^c010bb93:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
c010bb96	obj/kernel.asm	/^c010bb96:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bb99	obj/kernel.asm	/^c010bb99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bb9d	obj/kernel.asm	/^c010bb9d:	89 34 24             	mov    %esi,(%esp)$/;"	l
c010bba0	obj/kernel.asm	/^c010bba0:	e8 ed 03 00 00       	call   c010bf92 <strnlen>$/;"	l
c010bba5	obj/kernel.asm	/^c010bba5:	29 c3                	sub    %eax,%ebx$/;"	l
c010bba7	obj/kernel.asm	/^c010bba7:	89 d8                	mov    %ebx,%eax$/;"	l
c010bba9	obj/kernel.asm	/^c010bba9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bbac	obj/kernel.asm	/^c010bbac:	eb 17                	jmp    c010bbc5 <vprintfmt+0x1eb>$/;"	l
c010bbae	obj/kernel.asm	/^c010bbae:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c010bbb2	obj/kernel.asm	/^c010bbb2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bbb5	obj/kernel.asm	/^c010bbb5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010bbb9	obj/kernel.asm	/^c010bbb9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbbc	obj/kernel.asm	/^c010bbbc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbbf	obj/kernel.asm	/^c010bbbf:	ff d0                	call   *%eax$/;"	l
c010bbc1	obj/kernel.asm	/^c010bbc1:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010bbc5	obj/kernel.asm	/^c010bbc5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010bbc9	obj/kernel.asm	/^c010bbc9:	7f e3                	jg     c010bbae <vprintfmt+0x1d4>$/;"	l
c010bbcb	obj/kernel.asm	/^c010bbcb:	eb 38                	jmp    c010bc05 <vprintfmt+0x22b>$/;"	l
c010bbcd	obj/kernel.asm	/^c010bbcd:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010bbd1	obj/kernel.asm	/^c010bbd1:	74 1f                	je     c010bbf2 <vprintfmt+0x218>$/;"	l
c010bbd3	obj/kernel.asm	/^c010bbd3:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c010bbd6	obj/kernel.asm	/^c010bbd6:	7e 05                	jle    c010bbdd <vprintfmt+0x203>$/;"	l
c010bbd8	obj/kernel.asm	/^c010bbd8:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c010bbdb	obj/kernel.asm	/^c010bbdb:	7e 15                	jle    c010bbf2 <vprintfmt+0x218>$/;"	l
c010bbdd	obj/kernel.asm	/^c010bbdd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bbe0	obj/kernel.asm	/^c010bbe0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bbe4	obj/kernel.asm	/^c010bbe4:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
c010bbeb	obj/kernel.asm	/^c010bbeb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbee	obj/kernel.asm	/^c010bbee:	ff d0                	call   *%eax$/;"	l
c010bbf0	obj/kernel.asm	/^c010bbf0:	eb 0f                	jmp    c010bc01 <vprintfmt+0x227>$/;"	l
c010bbf2	obj/kernel.asm	/^c010bbf2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bbf5	obj/kernel.asm	/^c010bbf5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bbf9	obj/kernel.asm	/^c010bbf9:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c010bbfc	obj/kernel.asm	/^c010bbfc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbff	obj/kernel.asm	/^c010bbff:	ff d0                	call   *%eax$/;"	l
c010bc01	obj/kernel.asm	/^c010bc01:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010bc05	obj/kernel.asm	/^c010bc05:	89 f0                	mov    %esi,%eax$/;"	l
c010bc07	obj/kernel.asm	/^c010bc07:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c010bc0a	obj/kernel.asm	/^c010bc0a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010bc0d	obj/kernel.asm	/^c010bc0d:	0f be d8             	movsbl %al,%ebx$/;"	l
c010bc10	obj/kernel.asm	/^c010bc10:	85 db                	test   %ebx,%ebx$/;"	l
c010bc12	obj/kernel.asm	/^c010bc12:	74 10                	je     c010bc24 <vprintfmt+0x24a>$/;"	l
c010bc14	obj/kernel.asm	/^c010bc14:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010bc18	obj/kernel.asm	/^c010bc18:	78 b3                	js     c010bbcd <vprintfmt+0x1f3>$/;"	l
c010bc1a	obj/kernel.asm	/^c010bc1a:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c010bc1e	obj/kernel.asm	/^c010bc1e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010bc22	obj/kernel.asm	/^c010bc22:	79 a9                	jns    c010bbcd <vprintfmt+0x1f3>$/;"	l
c010bc24	obj/kernel.asm	/^c010bc24:	eb 17                	jmp    c010bc3d <vprintfmt+0x263>$/;"	l
c010bc26	obj/kernel.asm	/^c010bc26:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc29	obj/kernel.asm	/^c010bc29:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bc2d	obj/kernel.asm	/^c010bc2d:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c010bc34	obj/kernel.asm	/^c010bc34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc37	obj/kernel.asm	/^c010bc37:	ff d0                	call   *%eax$/;"	l
c010bc39	obj/kernel.asm	/^c010bc39:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010bc3d	obj/kernel.asm	/^c010bc3d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010bc41	obj/kernel.asm	/^c010bc41:	7f e3                	jg     c010bc26 <vprintfmt+0x24c>$/;"	l
c010bc43	obj/kernel.asm	/^c010bc43:	e9 70 01 00 00       	jmp    c010bdb8 <vprintfmt+0x3de>$/;"	l
c010bc48	obj/kernel.asm	/^c010bc48:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bc4b	obj/kernel.asm	/^c010bc4b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bc4f	obj/kernel.asm	/^c010bc4f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010bc52	obj/kernel.asm	/^c010bc52:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bc55	obj/kernel.asm	/^c010bc55:	e8 0b fd ff ff       	call   c010b965 <getint>$/;"	l
c010bc5a	obj/kernel.asm	/^c010bc5a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bc5d	obj/kernel.asm	/^c010bc5d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010bc60	obj/kernel.asm	/^c010bc60:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bc63	obj/kernel.asm	/^c010bc63:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bc66	obj/kernel.asm	/^c010bc66:	85 d2                	test   %edx,%edx$/;"	l
c010bc68	obj/kernel.asm	/^c010bc68:	79 26                	jns    c010bc90 <vprintfmt+0x2b6>$/;"	l
c010bc6a	obj/kernel.asm	/^c010bc6a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc6d	obj/kernel.asm	/^c010bc6d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bc71	obj/kernel.asm	/^c010bc71:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
c010bc78	obj/kernel.asm	/^c010bc78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc7b	obj/kernel.asm	/^c010bc7b:	ff d0                	call   *%eax$/;"	l
c010bc7d	obj/kernel.asm	/^c010bc7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bc80	obj/kernel.asm	/^c010bc80:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bc83	obj/kernel.asm	/^c010bc83:	f7 d8                	neg    %eax$/;"	l
c010bc85	obj/kernel.asm	/^c010bc85:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010bc88	obj/kernel.asm	/^c010bc88:	f7 da                	neg    %edx$/;"	l
c010bc8a	obj/kernel.asm	/^c010bc8a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bc8d	obj/kernel.asm	/^c010bc8d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010bc90	obj/kernel.asm	/^c010bc90:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010bc97	obj/kernel.asm	/^c010bc97:	e9 a8 00 00 00       	jmp    c010bd44 <vprintfmt+0x36a>$/;"	l
c010bc9c	obj/kernel.asm	/^c010bc9c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bc9f	obj/kernel.asm	/^c010bc9f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bca3	obj/kernel.asm	/^c010bca3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010bca6	obj/kernel.asm	/^c010bca6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bca9	obj/kernel.asm	/^c010bca9:	e8 68 fc ff ff       	call   c010b916 <getuint>$/;"	l
c010bcae	obj/kernel.asm	/^c010bcae:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bcb1	obj/kernel.asm	/^c010bcb1:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010bcb4	obj/kernel.asm	/^c010bcb4:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010bcbb	obj/kernel.asm	/^c010bcbb:	e9 84 00 00 00       	jmp    c010bd44 <vprintfmt+0x36a>$/;"	l
c010bcc0	obj/kernel.asm	/^c010bcc0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bcc3	obj/kernel.asm	/^c010bcc3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bcc7	obj/kernel.asm	/^c010bcc7:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010bcca	obj/kernel.asm	/^c010bcca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bccd	obj/kernel.asm	/^c010bccd:	e8 44 fc ff ff       	call   c010b916 <getuint>$/;"	l
c010bcd2	obj/kernel.asm	/^c010bcd2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bcd5	obj/kernel.asm	/^c010bcd5:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010bcd8	obj/kernel.asm	/^c010bcd8:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c010bcdf	obj/kernel.asm	/^c010bcdf:	eb 63                	jmp    c010bd44 <vprintfmt+0x36a>$/;"	l
c010bce1	obj/kernel.asm	/^c010bce1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bce4	obj/kernel.asm	/^c010bce4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bce8	obj/kernel.asm	/^c010bce8:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
c010bcef	obj/kernel.asm	/^c010bcef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bcf2	obj/kernel.asm	/^c010bcf2:	ff d0                	call   *%eax$/;"	l
c010bcf4	obj/kernel.asm	/^c010bcf4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bcf7	obj/kernel.asm	/^c010bcf7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bcfb	obj/kernel.asm	/^c010bcfb:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
c010bd02	obj/kernel.asm	/^c010bd02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd05	obj/kernel.asm	/^c010bd05:	ff d0                	call   *%eax$/;"	l
c010bd07	obj/kernel.asm	/^c010bd07:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010bd0a	obj/kernel.asm	/^c010bd0a:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010bd0d	obj/kernel.asm	/^c010bd0d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010bd10	obj/kernel.asm	/^c010bd10:	8b 00                	mov    (%eax),%eax$/;"	l
c010bd12	obj/kernel.asm	/^c010bd12:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bd15	obj/kernel.asm	/^c010bd15:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010bd1c	obj/kernel.asm	/^c010bd1c:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010bd23	obj/kernel.asm	/^c010bd23:	eb 1f                	jmp    c010bd44 <vprintfmt+0x36a>$/;"	l
c010bd25	obj/kernel.asm	/^c010bd25:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bd28	obj/kernel.asm	/^c010bd28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bd2c	obj/kernel.asm	/^c010bd2c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010bd2f	obj/kernel.asm	/^c010bd2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bd32	obj/kernel.asm	/^c010bd32:	e8 df fb ff ff       	call   c010b916 <getuint>$/;"	l
c010bd37	obj/kernel.asm	/^c010bd37:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bd3a	obj/kernel.asm	/^c010bd3a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010bd3d	obj/kernel.asm	/^c010bd3d:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010bd44	obj/kernel.asm	/^c010bd44:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c010bd48	obj/kernel.asm	/^c010bd48:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bd4b	obj/kernel.asm	/^c010bd4b:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
c010bd4f	obj/kernel.asm	/^c010bd4f:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010bd52	obj/kernel.asm	/^c010bd52:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010bd56	obj/kernel.asm	/^c010bd56:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010bd5a	obj/kernel.asm	/^c010bd5a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bd5d	obj/kernel.asm	/^c010bd5d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bd60	obj/kernel.asm	/^c010bd60:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010bd64	obj/kernel.asm	/^c010bd64:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010bd68	obj/kernel.asm	/^c010bd68:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd6b	obj/kernel.asm	/^c010bd6b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bd6f	obj/kernel.asm	/^c010bd6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd72	obj/kernel.asm	/^c010bd72:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bd75	obj/kernel.asm	/^c010bd75:	e8 97 fa ff ff       	call   c010b811 <printnum>$/;"	l
c010bd7a	obj/kernel.asm	/^c010bd7a:	eb 3c                	jmp    c010bdb8 <vprintfmt+0x3de>$/;"	l
c010bd7c	obj/kernel.asm	/^c010bd7c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd7f	obj/kernel.asm	/^c010bd7f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bd83	obj/kernel.asm	/^c010bd83:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c010bd86	obj/kernel.asm	/^c010bd86:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd89	obj/kernel.asm	/^c010bd89:	ff d0                	call   *%eax$/;"	l
c010bd8b	obj/kernel.asm	/^c010bd8b:	eb 2b                	jmp    c010bdb8 <vprintfmt+0x3de>$/;"	l
c010bd8d	obj/kernel.asm	/^c010bd8d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd90	obj/kernel.asm	/^c010bd90:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bd94	obj/kernel.asm	/^c010bd94:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
c010bd9b	obj/kernel.asm	/^c010bd9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd9e	obj/kernel.asm	/^c010bd9e:	ff d0                	call   *%eax$/;"	l
c010bda0	obj/kernel.asm	/^c010bda0:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010bda4	obj/kernel.asm	/^c010bda4:	eb 04                	jmp    c010bdaa <vprintfmt+0x3d0>$/;"	l
c010bda6	obj/kernel.asm	/^c010bda6:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010bdaa	obj/kernel.asm	/^c010bdaa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010bdad	obj/kernel.asm	/^c010bdad:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010bdb0	obj/kernel.asm	/^c010bdb0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010bdb3	obj/kernel.asm	/^c010bdb3:	3c 25                	cmp    $0x25,%al$/;"	l
c010bdb5	obj/kernel.asm	/^c010bdb5:	75 ef                	jne    c010bda6 <vprintfmt+0x3cc>$/;"	l
c010bdb7	obj/kernel.asm	/^c010bdb7:	90                   	nop$/;"	l
c010bdb8	obj/kernel.asm	/^c010bdb8:	90                   	nop$/;"	l
c010bdb9	obj/kernel.asm	/^c010bdb9:	e9 3e fc ff ff       	jmp    c010b9fc <vprintfmt+0x22>$/;"	l
c010bdbe	obj/kernel.asm	/^c010bdbe:	83 c4 40             	add    $0x40,%esp$/;"	l
c010bdc1	obj/kernel.asm	/^c010bdc1:	5b                   	pop    %ebx$/;"	l
c010bdc2	obj/kernel.asm	/^c010bdc2:	5e                   	pop    %esi$/;"	l
c010bdc3	obj/kernel.asm	/^c010bdc3:	5d                   	pop    %ebp$/;"	l
c010bdc4	obj/kernel.asm	/^c010bdc4:	c3                   	ret    $/;"	l
c010bdc5	obj/kernel.asm	/^c010bdc5 <sprintputch>:$/;"	l
c010bdc5	obj/kernel.asm	/^c010bdc5:	55                   	push   %ebp$/;"	l
c010bdc6	obj/kernel.asm	/^c010bdc6:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdc8	obj/kernel.asm	/^c010bdc8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bdcb	obj/kernel.asm	/^c010bdcb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010bdce	obj/kernel.asm	/^c010bdce:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010bdd1	obj/kernel.asm	/^c010bdd1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bdd4	obj/kernel.asm	/^c010bdd4:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bdd7	obj/kernel.asm	/^c010bdd7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bdda	obj/kernel.asm	/^c010bdda:	8b 10                	mov    (%eax),%edx$/;"	l
c010bddc	obj/kernel.asm	/^c010bddc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bddf	obj/kernel.asm	/^c010bddf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bde2	obj/kernel.asm	/^c010bde2:	39 c2                	cmp    %eax,%edx$/;"	l
c010bde4	obj/kernel.asm	/^c010bde4:	73 12                	jae    c010bdf8 <sprintputch+0x33>$/;"	l
c010bde6	obj/kernel.asm	/^c010bde6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bde9	obj/kernel.asm	/^c010bde9:	8b 00                	mov    (%eax),%eax$/;"	l
c010bdeb	obj/kernel.asm	/^c010bdeb:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010bdee	obj/kernel.asm	/^c010bdee:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bdf1	obj/kernel.asm	/^c010bdf1:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010bdf3	obj/kernel.asm	/^c010bdf3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bdf6	obj/kernel.asm	/^c010bdf6:	88 10                	mov    %dl,(%eax)$/;"	l
c010bdf8	obj/kernel.asm	/^c010bdf8:	5d                   	pop    %ebp$/;"	l
c010bdf9	obj/kernel.asm	/^c010bdf9:	c3                   	ret    $/;"	l
c010bdfa	obj/kernel.asm	/^c010bdfa <snprintf>:$/;"	l
c010bdfa	obj/kernel.asm	/^c010bdfa:	55                   	push   %ebp$/;"	l
c010bdfb	obj/kernel.asm	/^c010bdfb:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdfd	obj/kernel.asm	/^c010bdfd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010be00	obj/kernel.asm	/^c010be00:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010be03	obj/kernel.asm	/^c010be03:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010be06	obj/kernel.asm	/^c010be06:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010be09	obj/kernel.asm	/^c010be09:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010be0d	obj/kernel.asm	/^c010be0d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010be10	obj/kernel.asm	/^c010be10:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010be14	obj/kernel.asm	/^c010be14:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010be17	obj/kernel.asm	/^c010be17:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010be1b	obj/kernel.asm	/^c010be1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be1e	obj/kernel.asm	/^c010be1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010be21	obj/kernel.asm	/^c010be21:	e8 08 00 00 00       	call   c010be2e <vsnprintf>$/;"	l
c010be26	obj/kernel.asm	/^c010be26:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be29	obj/kernel.asm	/^c010be29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010be2c	obj/kernel.asm	/^c010be2c:	c9                   	leave  $/;"	l
c010be2d	obj/kernel.asm	/^c010be2d:	c3                   	ret    $/;"	l
c010be2e	obj/kernel.asm	/^c010be2e <vsnprintf>:$/;"	l
c010be2e	obj/kernel.asm	/^c010be2e:	55                   	push   %ebp$/;"	l
c010be2f	obj/kernel.asm	/^c010be2f:	89 e5                	mov    %esp,%ebp$/;"	l
c010be31	obj/kernel.asm	/^c010be31:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010be34	obj/kernel.asm	/^c010be34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be37	obj/kernel.asm	/^c010be37:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010be3a	obj/kernel.asm	/^c010be3a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010be3d	obj/kernel.asm	/^c010be3d:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010be40	obj/kernel.asm	/^c010be40:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be43	obj/kernel.asm	/^c010be43:	01 d0                	add    %edx,%eax$/;"	l
c010be45	obj/kernel.asm	/^c010be45:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010be48	obj/kernel.asm	/^c010be48:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010be4f	obj/kernel.asm	/^c010be4f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010be53	obj/kernel.asm	/^c010be53:	74 0a                	je     c010be5f <vsnprintf+0x31>$/;"	l
c010be55	obj/kernel.asm	/^c010be55:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010be58	obj/kernel.asm	/^c010be58:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010be5b	obj/kernel.asm	/^c010be5b:	39 c2                	cmp    %eax,%edx$/;"	l
c010be5d	obj/kernel.asm	/^c010be5d:	76 07                	jbe    c010be66 <vsnprintf+0x38>$/;"	l
c010be5f	obj/kernel.asm	/^c010be5f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010be64	obj/kernel.asm	/^c010be64:	eb 2a                	jmp    c010be90 <vsnprintf+0x62>$/;"	l
c010be66	obj/kernel.asm	/^c010be66:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010be69	obj/kernel.asm	/^c010be69:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010be6d	obj/kernel.asm	/^c010be6d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010be70	obj/kernel.asm	/^c010be70:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010be74	obj/kernel.asm	/^c010be74:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010be77	obj/kernel.asm	/^c010be77:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010be7b	obj/kernel.asm	/^c010be7b:	c7 04 24 c5 bd 10 c0 	movl   $0xc010bdc5,(%esp)$/;"	l
c010be82	obj/kernel.asm	/^c010be82:	e8 53 fb ff ff       	call   c010b9da <vprintfmt>$/;"	l
c010be87	obj/kernel.asm	/^c010be87:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010be8a	obj/kernel.asm	/^c010be8a:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010be8d	obj/kernel.asm	/^c010be8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010be90	obj/kernel.asm	/^c010be90:	c9                   	leave  $/;"	l
c010be91	obj/kernel.asm	/^c010be91:	c3                   	ret    $/;"	l
c010be92	obj/kernel.asm	/^c010be92 <rand>:$/;"	l
c010be92	obj/kernel.asm	/^c010be92:	55                   	push   %ebp$/;"	l
c010be93	obj/kernel.asm	/^c010be93:	89 e5                	mov    %esp,%ebp$/;"	l
c010be95	obj/kernel.asm	/^c010be95:	57                   	push   %edi$/;"	l
c010be96	obj/kernel.asm	/^c010be96:	56                   	push   %esi$/;"	l
c010be97	obj/kernel.asm	/^c010be97:	53                   	push   %ebx$/;"	l
c010be98	obj/kernel.asm	/^c010be98:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010be9b	obj/kernel.asm	/^c010be9b:	a1 a0 de 12 c0       	mov    0xc012dea0,%eax$/;"	l
c010bea0	obj/kernel.asm	/^c010bea0:	8b 15 a4 de 12 c0    	mov    0xc012dea4,%edx$/;"	l
c010bea6	obj/kernel.asm	/^c010bea6:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c010beac	obj/kernel.asm	/^c010beac:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c010beaf	obj/kernel.asm	/^c010beaf:	01 f7                	add    %esi,%edi$/;"	l
c010beb1	obj/kernel.asm	/^c010beb1:	be 6d e6 ec de       	mov    $0xdeece66d,%esi$/;"	l
c010beb6	obj/kernel.asm	/^c010beb6:	f7 e6                	mul    %esi$/;"	l
c010beb8	obj/kernel.asm	/^c010beb8:	8d 34 17             	lea    (%edi,%edx,1),%esi$/;"	l
c010bebb	obj/kernel.asm	/^c010bebb:	89 f2                	mov    %esi,%edx$/;"	l
c010bebd	obj/kernel.asm	/^c010bebd:	83 c0 0b             	add    $0xb,%eax$/;"	l
c010bec0	obj/kernel.asm	/^c010bec0:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010bec3	obj/kernel.asm	/^c010bec3:	89 c7                	mov    %eax,%edi$/;"	l
c010bec5	obj/kernel.asm	/^c010bec5:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c010bec8	obj/kernel.asm	/^c010bec8:	89 f9                	mov    %edi,%ecx$/;"	l
c010beca	obj/kernel.asm	/^c010beca:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c010becd	obj/kernel.asm	/^c010becd:	89 0d a0 de 12 c0    	mov    %ecx,0xc012dea0$/;"	l
c010bed3	obj/kernel.asm	/^c010bed3:	89 1d a4 de 12 c0    	mov    %ebx,0xc012dea4$/;"	l
c010bed9	obj/kernel.asm	/^c010bed9:	a1 a0 de 12 c0       	mov    0xc012dea0,%eax$/;"	l
c010bede	obj/kernel.asm	/^c010bede:	8b 15 a4 de 12 c0    	mov    0xc012dea4,%edx$/;"	l
c010bee4	obj/kernel.asm	/^c010bee4:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c010bee8	obj/kernel.asm	/^c010bee8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010beeb	obj/kernel.asm	/^c010beeb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010beee	obj/kernel.asm	/^c010beee:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010bef1	obj/kernel.asm	/^c010bef1:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c010bef8	obj/kernel.asm	/^c010bef8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010befb	obj/kernel.asm	/^c010befb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010befe	obj/kernel.asm	/^c010befe:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010bf01	obj/kernel.asm	/^c010bf01:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010bf04	obj/kernel.asm	/^c010bf04:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bf07	obj/kernel.asm	/^c010bf07:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bf0a	obj/kernel.asm	/^c010bf0a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010bf0e	obj/kernel.asm	/^c010bf0e:	74 1c                	je     c010bf2c <rand+0x9a>$/;"	l
c010bf10	obj/kernel.asm	/^c010bf10:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bf13	obj/kernel.asm	/^c010bf13:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010bf18	obj/kernel.asm	/^c010bf18:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010bf1b	obj/kernel.asm	/^c010bf1b:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010bf1e	obj/kernel.asm	/^c010bf1e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bf21	obj/kernel.asm	/^c010bf21:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010bf26	obj/kernel.asm	/^c010bf26:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010bf29	obj/kernel.asm	/^c010bf29:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bf2c	obj/kernel.asm	/^c010bf2c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010bf2f	obj/kernel.asm	/^c010bf2f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010bf32	obj/kernel.asm	/^c010bf32:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010bf35	obj/kernel.asm	/^c010bf35:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010bf38	obj/kernel.asm	/^c010bf38:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010bf3b	obj/kernel.asm	/^c010bf3b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010bf3e	obj/kernel.asm	/^c010bf3e:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010bf41	obj/kernel.asm	/^c010bf41:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010bf44	obj/kernel.asm	/^c010bf44:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010bf47	obj/kernel.asm	/^c010bf47:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010bf4a	obj/kernel.asm	/^c010bf4a:	83 c4 24             	add    $0x24,%esp$/;"	l
c010bf4d	obj/kernel.asm	/^c010bf4d:	5b                   	pop    %ebx$/;"	l
c010bf4e	obj/kernel.asm	/^c010bf4e:	5e                   	pop    %esi$/;"	l
c010bf4f	obj/kernel.asm	/^c010bf4f:	5f                   	pop    %edi$/;"	l
c010bf50	obj/kernel.asm	/^c010bf50:	5d                   	pop    %ebp$/;"	l
c010bf51	obj/kernel.asm	/^c010bf51:	c3                   	ret    $/;"	l
c010bf52	obj/kernel.asm	/^c010bf52 <srand>:$/;"	l
c010bf52	obj/kernel.asm	/^c010bf52:	55                   	push   %ebp$/;"	l
c010bf53	obj/kernel.asm	/^c010bf53:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf55	obj/kernel.asm	/^c010bf55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf58	obj/kernel.asm	/^c010bf58:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010bf5d	obj/kernel.asm	/^c010bf5d:	a3 a0 de 12 c0       	mov    %eax,0xc012dea0$/;"	l
c010bf62	obj/kernel.asm	/^c010bf62:	89 15 a4 de 12 c0    	mov    %edx,0xc012dea4$/;"	l
c010bf68	obj/kernel.asm	/^c010bf68:	5d                   	pop    %ebp$/;"	l
c010bf69	obj/kernel.asm	/^c010bf69:	c3                   	ret    $/;"	l
c010bf6a	obj/kernel.asm	/^c010bf6a <strlen>:$/;"	l
c010bf6a	obj/kernel.asm	/^c010bf6a:	55                   	push   %ebp$/;"	l
c010bf6b	obj/kernel.asm	/^c010bf6b:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf6d	obj/kernel.asm	/^c010bf6d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bf70	obj/kernel.asm	/^c010bf70:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010bf77	obj/kernel.asm	/^c010bf77:	eb 04                	jmp    c010bf7d <strlen+0x13>$/;"	l
c010bf79	obj/kernel.asm	/^c010bf79:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010bf7d	obj/kernel.asm	/^c010bf7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf80	obj/kernel.asm	/^c010bf80:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010bf83	obj/kernel.asm	/^c010bf83:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010bf86	obj/kernel.asm	/^c010bf86:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010bf89	obj/kernel.asm	/^c010bf89:	84 c0                	test   %al,%al$/;"	l
c010bf8b	obj/kernel.asm	/^c010bf8b:	75 ec                	jne    c010bf79 <strlen+0xf>$/;"	l
c010bf8d	obj/kernel.asm	/^c010bf8d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bf90	obj/kernel.asm	/^c010bf90:	c9                   	leave  $/;"	l
c010bf91	obj/kernel.asm	/^c010bf91:	c3                   	ret    $/;"	l
c010bf92	obj/kernel.asm	/^c010bf92 <strnlen>:$/;"	l
c010bf92	obj/kernel.asm	/^c010bf92:	55                   	push   %ebp$/;"	l
c010bf93	obj/kernel.asm	/^c010bf93:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf95	obj/kernel.asm	/^c010bf95:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bf98	obj/kernel.asm	/^c010bf98:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010bf9f	obj/kernel.asm	/^c010bf9f:	eb 04                	jmp    c010bfa5 <strnlen+0x13>$/;"	l
c010bfa1	obj/kernel.asm	/^c010bfa1:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010bfa5	obj/kernel.asm	/^c010bfa5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bfa8	obj/kernel.asm	/^c010bfa8:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010bfab	obj/kernel.asm	/^c010bfab:	73 10                	jae    c010bfbd <strnlen+0x2b>$/;"	l
c010bfad	obj/kernel.asm	/^c010bfad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bfb0	obj/kernel.asm	/^c010bfb0:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010bfb3	obj/kernel.asm	/^c010bfb3:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010bfb6	obj/kernel.asm	/^c010bfb6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010bfb9	obj/kernel.asm	/^c010bfb9:	84 c0                	test   %al,%al$/;"	l
c010bfbb	obj/kernel.asm	/^c010bfbb:	75 e4                	jne    c010bfa1 <strnlen+0xf>$/;"	l
c010bfbd	obj/kernel.asm	/^c010bfbd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bfc0	obj/kernel.asm	/^c010bfc0:	c9                   	leave  $/;"	l
c010bfc1	obj/kernel.asm	/^c010bfc1:	c3                   	ret    $/;"	l
c010bfc2	obj/kernel.asm	/^c010bfc2 <strcpy>:$/;"	l
c010bfc2	obj/kernel.asm	/^c010bfc2:	55                   	push   %ebp$/;"	l
c010bfc3	obj/kernel.asm	/^c010bfc3:	89 e5                	mov    %esp,%ebp$/;"	l
c010bfc5	obj/kernel.asm	/^c010bfc5:	57                   	push   %edi$/;"	l
c010bfc6	obj/kernel.asm	/^c010bfc6:	56                   	push   %esi$/;"	l
c010bfc7	obj/kernel.asm	/^c010bfc7:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010bfca	obj/kernel.asm	/^c010bfca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bfcd	obj/kernel.asm	/^c010bfcd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bfd0	obj/kernel.asm	/^c010bfd0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bfd3	obj/kernel.asm	/^c010bfd3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bfd6	obj/kernel.asm	/^c010bfd6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010bfd9	obj/kernel.asm	/^c010bfd9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfdc	obj/kernel.asm	/^c010bfdc:	89 d1                	mov    %edx,%ecx$/;"	l
c010bfde	obj/kernel.asm	/^c010bfde:	89 c2                	mov    %eax,%edx$/;"	l
c010bfe0	obj/kernel.asm	/^c010bfe0:	89 ce                	mov    %ecx,%esi$/;"	l
c010bfe2	obj/kernel.asm	/^c010bfe2:	89 d7                	mov    %edx,%edi$/;"	l
c010bfe4	obj/kernel.asm	/^c010bfe4:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010bfe5	obj/kernel.asm	/^c010bfe5:	aa                   	stos   %al,%es:(%edi)$/;"	l
c010bfe6	obj/kernel.asm	/^c010bfe6:	84 c0                	test   %al,%al$/;"	l
c010bfe8	obj/kernel.asm	/^c010bfe8:	75 fa                	jne    c010bfe4 <strcpy+0x22>$/;"	l
c010bfea	obj/kernel.asm	/^c010bfea:	89 fa                	mov    %edi,%edx$/;"	l
c010bfec	obj/kernel.asm	/^c010bfec:	89 f1                	mov    %esi,%ecx$/;"	l
c010bfee	obj/kernel.asm	/^c010bfee:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010bff1	obj/kernel.asm	/^c010bff1:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010bff4	obj/kernel.asm	/^c010bff4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010bff7	obj/kernel.asm	/^c010bff7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bffa	obj/kernel.asm	/^c010bffa:	83 c4 20             	add    $0x20,%esp$/;"	l
c010bffd	obj/kernel.asm	/^c010bffd:	5e                   	pop    %esi$/;"	l
c010bffe	obj/kernel.asm	/^c010bffe:	5f                   	pop    %edi$/;"	l
c010bfff	obj/kernel.asm	/^c010bfff:	5d                   	pop    %ebp$/;"	l
c010c000	obj/kernel.asm	/^c010c000:	c3                   	ret    $/;"	l
c010c001	obj/kernel.asm	/^c010c001 <strncpy>:$/;"	l
c010c001	obj/kernel.asm	/^c010c001:	55                   	push   %ebp$/;"	l
c010c002	obj/kernel.asm	/^c010c002:	89 e5                	mov    %esp,%ebp$/;"	l
c010c004	obj/kernel.asm	/^c010c004:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c007	obj/kernel.asm	/^c010c007:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c00a	obj/kernel.asm	/^c010c00a:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c00d	obj/kernel.asm	/^c010c00d:	eb 21                	jmp    c010c030 <strncpy+0x2f>$/;"	l
c010c00f	obj/kernel.asm	/^c010c00f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c012	obj/kernel.asm	/^c010c012:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010c015	obj/kernel.asm	/^c010c015:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c018	obj/kernel.asm	/^c010c018:	88 10                	mov    %dl,(%eax)$/;"	l
c010c01a	obj/kernel.asm	/^c010c01a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c01d	obj/kernel.asm	/^c010c01d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c020	obj/kernel.asm	/^c010c020:	84 c0                	test   %al,%al$/;"	l
c010c022	obj/kernel.asm	/^c010c022:	74 04                	je     c010c028 <strncpy+0x27>$/;"	l
c010c024	obj/kernel.asm	/^c010c024:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010c028	obj/kernel.asm	/^c010c028:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010c02c	obj/kernel.asm	/^c010c02c:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010c030	obj/kernel.asm	/^c010c030:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c034	obj/kernel.asm	/^c010c034:	75 d9                	jne    c010c00f <strncpy+0xe>$/;"	l
c010c036	obj/kernel.asm	/^c010c036:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c039	obj/kernel.asm	/^c010c039:	c9                   	leave  $/;"	l
c010c03a	obj/kernel.asm	/^c010c03a:	c3                   	ret    $/;"	l
c010c03b	obj/kernel.asm	/^c010c03b <strcmp>:$/;"	l
c010c03b	obj/kernel.asm	/^c010c03b:	55                   	push   %ebp$/;"	l
c010c03c	obj/kernel.asm	/^c010c03c:	89 e5                	mov    %esp,%ebp$/;"	l
c010c03e	obj/kernel.asm	/^c010c03e:	57                   	push   %edi$/;"	l
c010c03f	obj/kernel.asm	/^c010c03f:	56                   	push   %esi$/;"	l
c010c040	obj/kernel.asm	/^c010c040:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010c043	obj/kernel.asm	/^c010c043:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c046	obj/kernel.asm	/^c010c046:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c049	obj/kernel.asm	/^c010c049:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c04c	obj/kernel.asm	/^c010c04c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c04f	obj/kernel.asm	/^c010c04f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c052	obj/kernel.asm	/^c010c052:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c055	obj/kernel.asm	/^c010c055:	89 d1                	mov    %edx,%ecx$/;"	l
c010c057	obj/kernel.asm	/^c010c057:	89 c2                	mov    %eax,%edx$/;"	l
c010c059	obj/kernel.asm	/^c010c059:	89 ce                	mov    %ecx,%esi$/;"	l
c010c05b	obj/kernel.asm	/^c010c05b:	89 d7                	mov    %edx,%edi$/;"	l
c010c05d	obj/kernel.asm	/^c010c05d:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010c05e	obj/kernel.asm	/^c010c05e:	ae                   	scas   %es:(%edi),%al$/;"	l
c010c05f	obj/kernel.asm	/^c010c05f:	75 08                	jne    c010c069 <strcmp+0x2e>$/;"	l
c010c061	obj/kernel.asm	/^c010c061:	84 c0                	test   %al,%al$/;"	l
c010c063	obj/kernel.asm	/^c010c063:	75 f8                	jne    c010c05d <strcmp+0x22>$/;"	l
c010c065	obj/kernel.asm	/^c010c065:	31 c0                	xor    %eax,%eax$/;"	l
c010c067	obj/kernel.asm	/^c010c067:	eb 04                	jmp    c010c06d <strcmp+0x32>$/;"	l
c010c069	obj/kernel.asm	/^c010c069:	19 c0                	sbb    %eax,%eax$/;"	l
c010c06b	obj/kernel.asm	/^c010c06b:	0c 01                	or     $0x1,%al$/;"	l
c010c06d	obj/kernel.asm	/^c010c06d:	89 fa                	mov    %edi,%edx$/;"	l
c010c06f	obj/kernel.asm	/^c010c06f:	89 f1                	mov    %esi,%ecx$/;"	l
c010c071	obj/kernel.asm	/^c010c071:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c074	obj/kernel.asm	/^c010c074:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010c077	obj/kernel.asm	/^c010c077:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010c07a	obj/kernel.asm	/^c010c07a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c07d	obj/kernel.asm	/^c010c07d:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c080	obj/kernel.asm	/^c010c080:	5e                   	pop    %esi$/;"	l
c010c081	obj/kernel.asm	/^c010c081:	5f                   	pop    %edi$/;"	l
c010c082	obj/kernel.asm	/^c010c082:	5d                   	pop    %ebp$/;"	l
c010c083	obj/kernel.asm	/^c010c083:	c3                   	ret    $/;"	l
c010c084	obj/kernel.asm	/^c010c084 <strncmp>:$/;"	l
c010c084	obj/kernel.asm	/^c010c084:	55                   	push   %ebp$/;"	l
c010c085	obj/kernel.asm	/^c010c085:	89 e5                	mov    %esp,%ebp$/;"	l
c010c087	obj/kernel.asm	/^c010c087:	eb 0c                	jmp    c010c095 <strncmp+0x11>$/;"	l
c010c089	obj/kernel.asm	/^c010c089:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010c08d	obj/kernel.asm	/^c010c08d:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c091	obj/kernel.asm	/^c010c091:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010c095	obj/kernel.asm	/^c010c095:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c099	obj/kernel.asm	/^c010c099:	74 1a                	je     c010c0b5 <strncmp+0x31>$/;"	l
c010c09b	obj/kernel.asm	/^c010c09b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c09e	obj/kernel.asm	/^c010c09e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c0a1	obj/kernel.asm	/^c010c0a1:	84 c0                	test   %al,%al$/;"	l
c010c0a3	obj/kernel.asm	/^c010c0a3:	74 10                	je     c010c0b5 <strncmp+0x31>$/;"	l
c010c0a5	obj/kernel.asm	/^c010c0a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c0a8	obj/kernel.asm	/^c010c0a8:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010c0ab	obj/kernel.asm	/^c010c0ab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c0ae	obj/kernel.asm	/^c010c0ae:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c0b1	obj/kernel.asm	/^c010c0b1:	38 c2                	cmp    %al,%dl$/;"	l
c010c0b3	obj/kernel.asm	/^c010c0b3:	74 d4                	je     c010c089 <strncmp+0x5>$/;"	l
c010c0b5	obj/kernel.asm	/^c010c0b5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c0b9	obj/kernel.asm	/^c010c0b9:	74 18                	je     c010c0d3 <strncmp+0x4f>$/;"	l
c010c0bb	obj/kernel.asm	/^c010c0bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c0be	obj/kernel.asm	/^c010c0be:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c0c1	obj/kernel.asm	/^c010c0c1:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010c0c4	obj/kernel.asm	/^c010c0c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c0c7	obj/kernel.asm	/^c010c0c7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c0ca	obj/kernel.asm	/^c010c0ca:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010c0cd	obj/kernel.asm	/^c010c0cd:	29 c2                	sub    %eax,%edx$/;"	l
c010c0cf	obj/kernel.asm	/^c010c0cf:	89 d0                	mov    %edx,%eax$/;"	l
c010c0d1	obj/kernel.asm	/^c010c0d1:	eb 05                	jmp    c010c0d8 <strncmp+0x54>$/;"	l
c010c0d3	obj/kernel.asm	/^c010c0d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c0d8	obj/kernel.asm	/^c010c0d8:	5d                   	pop    %ebp$/;"	l
c010c0d9	obj/kernel.asm	/^c010c0d9:	c3                   	ret    $/;"	l
c010c0da	obj/kernel.asm	/^c010c0da <strchr>:$/;"	l
c010c0da	obj/kernel.asm	/^c010c0da:	55                   	push   %ebp$/;"	l
c010c0db	obj/kernel.asm	/^c010c0db:	89 e5                	mov    %esp,%ebp$/;"	l
c010c0dd	obj/kernel.asm	/^c010c0dd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c0e0	obj/kernel.asm	/^c010c0e0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c0e3	obj/kernel.asm	/^c010c0e3:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010c0e6	obj/kernel.asm	/^c010c0e6:	eb 14                	jmp    c010c0fc <strchr+0x22>$/;"	l
c010c0e8	obj/kernel.asm	/^c010c0e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c0eb	obj/kernel.asm	/^c010c0eb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c0ee	obj/kernel.asm	/^c010c0ee:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010c0f1	obj/kernel.asm	/^c010c0f1:	75 05                	jne    c010c0f8 <strchr+0x1e>$/;"	l
c010c0f3	obj/kernel.asm	/^c010c0f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c0f6	obj/kernel.asm	/^c010c0f6:	eb 13                	jmp    c010c10b <strchr+0x31>$/;"	l
c010c0f8	obj/kernel.asm	/^c010c0f8:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c0fc	obj/kernel.asm	/^c010c0fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c0ff	obj/kernel.asm	/^c010c0ff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c102	obj/kernel.asm	/^c010c102:	84 c0                	test   %al,%al$/;"	l
c010c104	obj/kernel.asm	/^c010c104:	75 e2                	jne    c010c0e8 <strchr+0xe>$/;"	l
c010c106	obj/kernel.asm	/^c010c106:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c10b	obj/kernel.asm	/^c010c10b:	c9                   	leave  $/;"	l
c010c10c	obj/kernel.asm	/^c010c10c:	c3                   	ret    $/;"	l
c010c10d	obj/kernel.asm	/^c010c10d <strfind>:$/;"	l
c010c10d	obj/kernel.asm	/^c010c10d:	55                   	push   %ebp$/;"	l
c010c10e	obj/kernel.asm	/^c010c10e:	89 e5                	mov    %esp,%ebp$/;"	l
c010c110	obj/kernel.asm	/^c010c110:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c113	obj/kernel.asm	/^c010c113:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c116	obj/kernel.asm	/^c010c116:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010c119	obj/kernel.asm	/^c010c119:	eb 11                	jmp    c010c12c <strfind+0x1f>$/;"	l
c010c11b	obj/kernel.asm	/^c010c11b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c11e	obj/kernel.asm	/^c010c11e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c121	obj/kernel.asm	/^c010c121:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010c124	obj/kernel.asm	/^c010c124:	75 02                	jne    c010c128 <strfind+0x1b>$/;"	l
c010c126	obj/kernel.asm	/^c010c126:	eb 0e                	jmp    c010c136 <strfind+0x29>$/;"	l
c010c128	obj/kernel.asm	/^c010c128:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c12c	obj/kernel.asm	/^c010c12c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c12f	obj/kernel.asm	/^c010c12f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c132	obj/kernel.asm	/^c010c132:	84 c0                	test   %al,%al$/;"	l
c010c134	obj/kernel.asm	/^c010c134:	75 e5                	jne    c010c11b <strfind+0xe>$/;"	l
c010c136	obj/kernel.asm	/^c010c136:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c139	obj/kernel.asm	/^c010c139:	c9                   	leave  $/;"	l
c010c13a	obj/kernel.asm	/^c010c13a:	c3                   	ret    $/;"	l
c010c13b	obj/kernel.asm	/^c010c13b <strtol>:$/;"	l
c010c13b	obj/kernel.asm	/^c010c13b:	55                   	push   %ebp$/;"	l
c010c13c	obj/kernel.asm	/^c010c13c:	89 e5                	mov    %esp,%ebp$/;"	l
c010c13e	obj/kernel.asm	/^c010c13e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c141	obj/kernel.asm	/^c010c141:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010c148	obj/kernel.asm	/^c010c148:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010c14f	obj/kernel.asm	/^c010c14f:	eb 04                	jmp    c010c155 <strtol+0x1a>$/;"	l
c010c151	obj/kernel.asm	/^c010c151:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c155	obj/kernel.asm	/^c010c155:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c158	obj/kernel.asm	/^c010c158:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c15b	obj/kernel.asm	/^c010c15b:	3c 20                	cmp    $0x20,%al$/;"	l
c010c15d	obj/kernel.asm	/^c010c15d:	74 f2                	je     c010c151 <strtol+0x16>$/;"	l
c010c15f	obj/kernel.asm	/^c010c15f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c162	obj/kernel.asm	/^c010c162:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c165	obj/kernel.asm	/^c010c165:	3c 09                	cmp    $0x9,%al$/;"	l
c010c167	obj/kernel.asm	/^c010c167:	74 e8                	je     c010c151 <strtol+0x16>$/;"	l
c010c169	obj/kernel.asm	/^c010c169:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c16c	obj/kernel.asm	/^c010c16c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c16f	obj/kernel.asm	/^c010c16f:	3c 2b                	cmp    $0x2b,%al$/;"	l
c010c171	obj/kernel.asm	/^c010c171:	75 06                	jne    c010c179 <strtol+0x3e>$/;"	l
c010c173	obj/kernel.asm	/^c010c173:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c177	obj/kernel.asm	/^c010c177:	eb 15                	jmp    c010c18e <strtol+0x53>$/;"	l
c010c179	obj/kernel.asm	/^c010c179:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c17c	obj/kernel.asm	/^c010c17c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c17f	obj/kernel.asm	/^c010c17f:	3c 2d                	cmp    $0x2d,%al$/;"	l
c010c181	obj/kernel.asm	/^c010c181:	75 0b                	jne    c010c18e <strtol+0x53>$/;"	l
c010c183	obj/kernel.asm	/^c010c183:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c187	obj/kernel.asm	/^c010c187:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c010c18e	obj/kernel.asm	/^c010c18e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c192	obj/kernel.asm	/^c010c192:	74 06                	je     c010c19a <strtol+0x5f>$/;"	l
c010c194	obj/kernel.asm	/^c010c194:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c010c198	obj/kernel.asm	/^c010c198:	75 24                	jne    c010c1be <strtol+0x83>$/;"	l
c010c19a	obj/kernel.asm	/^c010c19a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c19d	obj/kernel.asm	/^c010c19d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1a0	obj/kernel.asm	/^c010c1a0:	3c 30                	cmp    $0x30,%al$/;"	l
c010c1a2	obj/kernel.asm	/^c010c1a2:	75 1a                	jne    c010c1be <strtol+0x83>$/;"	l
c010c1a4	obj/kernel.asm	/^c010c1a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1a7	obj/kernel.asm	/^c010c1a7:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c1aa	obj/kernel.asm	/^c010c1aa:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1ad	obj/kernel.asm	/^c010c1ad:	3c 78                	cmp    $0x78,%al$/;"	l
c010c1af	obj/kernel.asm	/^c010c1af:	75 0d                	jne    c010c1be <strtol+0x83>$/;"	l
c010c1b1	obj/kernel.asm	/^c010c1b1:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c010c1b5	obj/kernel.asm	/^c010c1b5:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c010c1bc	obj/kernel.asm	/^c010c1bc:	eb 2a                	jmp    c010c1e8 <strtol+0xad>$/;"	l
c010c1be	obj/kernel.asm	/^c010c1be:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c1c2	obj/kernel.asm	/^c010c1c2:	75 17                	jne    c010c1db <strtol+0xa0>$/;"	l
c010c1c4	obj/kernel.asm	/^c010c1c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1c7	obj/kernel.asm	/^c010c1c7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1ca	obj/kernel.asm	/^c010c1ca:	3c 30                	cmp    $0x30,%al$/;"	l
c010c1cc	obj/kernel.asm	/^c010c1cc:	75 0d                	jne    c010c1db <strtol+0xa0>$/;"	l
c010c1ce	obj/kernel.asm	/^c010c1ce:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c1d2	obj/kernel.asm	/^c010c1d2:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c010c1d9	obj/kernel.asm	/^c010c1d9:	eb 0d                	jmp    c010c1e8 <strtol+0xad>$/;"	l
c010c1db	obj/kernel.asm	/^c010c1db:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c1df	obj/kernel.asm	/^c010c1df:	75 07                	jne    c010c1e8 <strtol+0xad>$/;"	l
c010c1e1	obj/kernel.asm	/^c010c1e1:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c010c1e8	obj/kernel.asm	/^c010c1e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1eb	obj/kernel.asm	/^c010c1eb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1ee	obj/kernel.asm	/^c010c1ee:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010c1f0	obj/kernel.asm	/^c010c1f0:	7e 1b                	jle    c010c20d <strtol+0xd2>$/;"	l
c010c1f2	obj/kernel.asm	/^c010c1f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1f5	obj/kernel.asm	/^c010c1f5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1f8	obj/kernel.asm	/^c010c1f8:	3c 39                	cmp    $0x39,%al$/;"	l
c010c1fa	obj/kernel.asm	/^c010c1fa:	7f 11                	jg     c010c20d <strtol+0xd2>$/;"	l
c010c1fc	obj/kernel.asm	/^c010c1fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1ff	obj/kernel.asm	/^c010c1ff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c202	obj/kernel.asm	/^c010c202:	0f be c0             	movsbl %al,%eax$/;"	l
c010c205	obj/kernel.asm	/^c010c205:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010c208	obj/kernel.asm	/^c010c208:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c20b	obj/kernel.asm	/^c010c20b:	eb 48                	jmp    c010c255 <strtol+0x11a>$/;"	l
c010c20d	obj/kernel.asm	/^c010c20d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c210	obj/kernel.asm	/^c010c210:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c213	obj/kernel.asm	/^c010c213:	3c 60                	cmp    $0x60,%al$/;"	l
c010c215	obj/kernel.asm	/^c010c215:	7e 1b                	jle    c010c232 <strtol+0xf7>$/;"	l
c010c217	obj/kernel.asm	/^c010c217:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c21a	obj/kernel.asm	/^c010c21a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c21d	obj/kernel.asm	/^c010c21d:	3c 7a                	cmp    $0x7a,%al$/;"	l
c010c21f	obj/kernel.asm	/^c010c21f:	7f 11                	jg     c010c232 <strtol+0xf7>$/;"	l
c010c221	obj/kernel.asm	/^c010c221:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c224	obj/kernel.asm	/^c010c224:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c227	obj/kernel.asm	/^c010c227:	0f be c0             	movsbl %al,%eax$/;"	l
c010c22a	obj/kernel.asm	/^c010c22a:	83 e8 57             	sub    $0x57,%eax$/;"	l
c010c22d	obj/kernel.asm	/^c010c22d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c230	obj/kernel.asm	/^c010c230:	eb 23                	jmp    c010c255 <strtol+0x11a>$/;"	l
c010c232	obj/kernel.asm	/^c010c232:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c235	obj/kernel.asm	/^c010c235:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c238	obj/kernel.asm	/^c010c238:	3c 40                	cmp    $0x40,%al$/;"	l
c010c23a	obj/kernel.asm	/^c010c23a:	7e 3d                	jle    c010c279 <strtol+0x13e>$/;"	l
c010c23c	obj/kernel.asm	/^c010c23c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c23f	obj/kernel.asm	/^c010c23f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c242	obj/kernel.asm	/^c010c242:	3c 5a                	cmp    $0x5a,%al$/;"	l
c010c244	obj/kernel.asm	/^c010c244:	7f 33                	jg     c010c279 <strtol+0x13e>$/;"	l
c010c246	obj/kernel.asm	/^c010c246:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c249	obj/kernel.asm	/^c010c249:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c24c	obj/kernel.asm	/^c010c24c:	0f be c0             	movsbl %al,%eax$/;"	l
c010c24f	obj/kernel.asm	/^c010c24f:	83 e8 37             	sub    $0x37,%eax$/;"	l
c010c252	obj/kernel.asm	/^c010c252:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c255	obj/kernel.asm	/^c010c255:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c258	obj/kernel.asm	/^c010c258:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010c25b	obj/kernel.asm	/^c010c25b:	7c 02                	jl     c010c25f <strtol+0x124>$/;"	l
c010c25d	obj/kernel.asm	/^c010c25d:	eb 1a                	jmp    c010c279 <strtol+0x13e>$/;"	l
c010c25f	obj/kernel.asm	/^c010c25f:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c263	obj/kernel.asm	/^c010c263:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c266	obj/kernel.asm	/^c010c266:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c010c26a	obj/kernel.asm	/^c010c26a:	89 c2                	mov    %eax,%edx$/;"	l
c010c26c	obj/kernel.asm	/^c010c26c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c26f	obj/kernel.asm	/^c010c26f:	01 d0                	add    %edx,%eax$/;"	l
c010c271	obj/kernel.asm	/^c010c271:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010c274	obj/kernel.asm	/^c010c274:	e9 6f ff ff ff       	jmp    c010c1e8 <strtol+0xad>$/;"	l
c010c279	obj/kernel.asm	/^c010c279:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c27d	obj/kernel.asm	/^c010c27d:	74 08                	je     c010c287 <strtol+0x14c>$/;"	l
c010c27f	obj/kernel.asm	/^c010c27f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c282	obj/kernel.asm	/^c010c282:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c285	obj/kernel.asm	/^c010c285:	89 10                	mov    %edx,(%eax)$/;"	l
c010c287	obj/kernel.asm	/^c010c287:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c010c28b	obj/kernel.asm	/^c010c28b:	74 07                	je     c010c294 <strtol+0x159>$/;"	l
c010c28d	obj/kernel.asm	/^c010c28d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c290	obj/kernel.asm	/^c010c290:	f7 d8                	neg    %eax$/;"	l
c010c292	obj/kernel.asm	/^c010c292:	eb 03                	jmp    c010c297 <strtol+0x15c>$/;"	l
c010c294	obj/kernel.asm	/^c010c294:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c297	obj/kernel.asm	/^c010c297:	c9                   	leave  $/;"	l
c010c298	obj/kernel.asm	/^c010c298:	c3                   	ret    $/;"	l
c010c299	obj/kernel.asm	/^c010c299 <memset>:$/;"	l
c010c299	obj/kernel.asm	/^c010c299:	55                   	push   %ebp$/;"	l
c010c29a	obj/kernel.asm	/^c010c29a:	89 e5                	mov    %esp,%ebp$/;"	l
c010c29c	obj/kernel.asm	/^c010c29c:	57                   	push   %edi$/;"	l
c010c29d	obj/kernel.asm	/^c010c29d:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010c2a0	obj/kernel.asm	/^c010c2a0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c2a3	obj/kernel.asm	/^c010c2a3:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c010c2a6	obj/kernel.asm	/^c010c2a6:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c010c2aa	obj/kernel.asm	/^c010c2aa:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c2ad	obj/kernel.asm	/^c010c2ad:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010c2b0	obj/kernel.asm	/^c010c2b0:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c010c2b3	obj/kernel.asm	/^c010c2b3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c2b6	obj/kernel.asm	/^c010c2b6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c2b9	obj/kernel.asm	/^c010c2b9:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010c2bc	obj/kernel.asm	/^c010c2bc:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c010c2c0	obj/kernel.asm	/^c010c2c0:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010c2c3	obj/kernel.asm	/^c010c2c3:	89 d7                	mov    %edx,%edi$/;"	l
c010c2c5	obj/kernel.asm	/^c010c2c5:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c010c2c7	obj/kernel.asm	/^c010c2c7:	89 fa                	mov    %edi,%edx$/;"	l
c010c2c9	obj/kernel.asm	/^c010c2c9:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010c2cc	obj/kernel.asm	/^c010c2cc:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010c2cf	obj/kernel.asm	/^c010c2cf:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c2d2	obj/kernel.asm	/^c010c2d2:	83 c4 24             	add    $0x24,%esp$/;"	l
c010c2d5	obj/kernel.asm	/^c010c2d5:	5f                   	pop    %edi$/;"	l
c010c2d6	obj/kernel.asm	/^c010c2d6:	5d                   	pop    %ebp$/;"	l
c010c2d7	obj/kernel.asm	/^c010c2d7:	c3                   	ret    $/;"	l
c010c2d8	obj/kernel.asm	/^c010c2d8 <memmove>:$/;"	l
c010c2d8	obj/kernel.asm	/^c010c2d8:	55                   	push   %ebp$/;"	l
c010c2d9	obj/kernel.asm	/^c010c2d9:	89 e5                	mov    %esp,%ebp$/;"	l
c010c2db	obj/kernel.asm	/^c010c2db:	57                   	push   %edi$/;"	l
c010c2dc	obj/kernel.asm	/^c010c2dc:	56                   	push   %esi$/;"	l
c010c2dd	obj/kernel.asm	/^c010c2dd:	53                   	push   %ebx$/;"	l
c010c2de	obj/kernel.asm	/^c010c2de:	83 ec 30             	sub    $0x30,%esp$/;"	l
c010c2e1	obj/kernel.asm	/^c010c2e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c2e4	obj/kernel.asm	/^c010c2e4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c2e7	obj/kernel.asm	/^c010c2e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c2ea	obj/kernel.asm	/^c010c2ea:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c2ed	obj/kernel.asm	/^c010c2ed:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c2f0	obj/kernel.asm	/^c010c2f0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c2f3	obj/kernel.asm	/^c010c2f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c2f6	obj/kernel.asm	/^c010c2f6:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010c2f9	obj/kernel.asm	/^c010c2f9:	73 42                	jae    c010c33d <memmove+0x65>$/;"	l
c010c2fb	obj/kernel.asm	/^c010c2fb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c2fe	obj/kernel.asm	/^c010c2fe:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c301	obj/kernel.asm	/^c010c301:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c304	obj/kernel.asm	/^c010c304:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c307	obj/kernel.asm	/^c010c307:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c30a	obj/kernel.asm	/^c010c30a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010c30d	obj/kernel.asm	/^c010c30d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c310	obj/kernel.asm	/^c010c310:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010c313	obj/kernel.asm	/^c010c313:	89 c1                	mov    %eax,%ecx$/;"	l
c010c315	obj/kernel.asm	/^c010c315:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c318	obj/kernel.asm	/^c010c318:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010c31b	obj/kernel.asm	/^c010c31b:	89 d7                	mov    %edx,%edi$/;"	l
c010c31d	obj/kernel.asm	/^c010c31d:	89 c6                	mov    %eax,%esi$/;"	l
c010c31f	obj/kernel.asm	/^c010c31f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010c321	obj/kernel.asm	/^c010c321:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c010c324	obj/kernel.asm	/^c010c324:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010c327	obj/kernel.asm	/^c010c327:	74 02                	je     c010c32b <memmove+0x53>$/;"	l
c010c329	obj/kernel.asm	/^c010c329:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010c32b	obj/kernel.asm	/^c010c32b:	89 f0                	mov    %esi,%eax$/;"	l
c010c32d	obj/kernel.asm	/^c010c32d:	89 fa                	mov    %edi,%edx$/;"	l
c010c32f	obj/kernel.asm	/^c010c32f:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c010c332	obj/kernel.asm	/^c010c332:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010c335	obj/kernel.asm	/^c010c335:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010c338	obj/kernel.asm	/^c010c338:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c33b	obj/kernel.asm	/^c010c33b:	eb 36                	jmp    c010c373 <memmove+0x9b>$/;"	l
c010c33d	obj/kernel.asm	/^c010c33d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c340	obj/kernel.asm	/^c010c340:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010c343	obj/kernel.asm	/^c010c343:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c346	obj/kernel.asm	/^c010c346:	01 c2                	add    %eax,%edx$/;"	l
c010c348	obj/kernel.asm	/^c010c348:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c34b	obj/kernel.asm	/^c010c34b:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c010c34e	obj/kernel.asm	/^c010c34e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c351	obj/kernel.asm	/^c010c351:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c010c354	obj/kernel.asm	/^c010c354:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c357	obj/kernel.asm	/^c010c357:	89 c1                	mov    %eax,%ecx$/;"	l
c010c359	obj/kernel.asm	/^c010c359:	89 d8                	mov    %ebx,%eax$/;"	l
c010c35b	obj/kernel.asm	/^c010c35b:	89 d6                	mov    %edx,%esi$/;"	l
c010c35d	obj/kernel.asm	/^c010c35d:	89 c7                	mov    %eax,%edi$/;"	l
c010c35f	obj/kernel.asm	/^c010c35f:	fd                   	std    $/;"	l
c010c360	obj/kernel.asm	/^c010c360:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010c362	obj/kernel.asm	/^c010c362:	fc                   	cld    $/;"	l
c010c363	obj/kernel.asm	/^c010c363:	89 f8                	mov    %edi,%eax$/;"	l
c010c365	obj/kernel.asm	/^c010c365:	89 f2                	mov    %esi,%edx$/;"	l
c010c367	obj/kernel.asm	/^c010c367:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c010c36a	obj/kernel.asm	/^c010c36a:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c010c36d	obj/kernel.asm	/^c010c36d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010c370	obj/kernel.asm	/^c010c370:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c373	obj/kernel.asm	/^c010c373:	83 c4 30             	add    $0x30,%esp$/;"	l
c010c376	obj/kernel.asm	/^c010c376:	5b                   	pop    %ebx$/;"	l
c010c377	obj/kernel.asm	/^c010c377:	5e                   	pop    %esi$/;"	l
c010c378	obj/kernel.asm	/^c010c378:	5f                   	pop    %edi$/;"	l
c010c379	obj/kernel.asm	/^c010c379:	5d                   	pop    %ebp$/;"	l
c010c37a	obj/kernel.asm	/^c010c37a:	c3                   	ret    $/;"	l
c010c37b	obj/kernel.asm	/^c010c37b <memcpy>:$/;"	l
c010c37b	obj/kernel.asm	/^c010c37b:	55                   	push   %ebp$/;"	l
c010c37c	obj/kernel.asm	/^c010c37c:	89 e5                	mov    %esp,%ebp$/;"	l
c010c37e	obj/kernel.asm	/^c010c37e:	57                   	push   %edi$/;"	l
c010c37f	obj/kernel.asm	/^c010c37f:	56                   	push   %esi$/;"	l
c010c380	obj/kernel.asm	/^c010c380:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010c383	obj/kernel.asm	/^c010c383:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c386	obj/kernel.asm	/^c010c386:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c389	obj/kernel.asm	/^c010c389:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c38c	obj/kernel.asm	/^c010c38c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c38f	obj/kernel.asm	/^c010c38f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c392	obj/kernel.asm	/^c010c392:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c395	obj/kernel.asm	/^c010c395:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c398	obj/kernel.asm	/^c010c398:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010c39b	obj/kernel.asm	/^c010c39b:	89 c1                	mov    %eax,%ecx$/;"	l
c010c39d	obj/kernel.asm	/^c010c39d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c3a0	obj/kernel.asm	/^c010c3a0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c3a3	obj/kernel.asm	/^c010c3a3:	89 d7                	mov    %edx,%edi$/;"	l
c010c3a5	obj/kernel.asm	/^c010c3a5:	89 c6                	mov    %eax,%esi$/;"	l
c010c3a7	obj/kernel.asm	/^c010c3a7:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010c3a9	obj/kernel.asm	/^c010c3a9:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010c3ac	obj/kernel.asm	/^c010c3ac:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010c3af	obj/kernel.asm	/^c010c3af:	74 02                	je     c010c3b3 <memcpy+0x38>$/;"	l
c010c3b1	obj/kernel.asm	/^c010c3b1:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010c3b3	obj/kernel.asm	/^c010c3b3:	89 f0                	mov    %esi,%eax$/;"	l
c010c3b5	obj/kernel.asm	/^c010c3b5:	89 fa                	mov    %edi,%edx$/;"	l
c010c3b7	obj/kernel.asm	/^c010c3b7:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010c3ba	obj/kernel.asm	/^c010c3ba:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010c3bd	obj/kernel.asm	/^c010c3bd:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c3c0	obj/kernel.asm	/^c010c3c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c3c3	obj/kernel.asm	/^c010c3c3:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c3c6	obj/kernel.asm	/^c010c3c6:	5e                   	pop    %esi$/;"	l
c010c3c7	obj/kernel.asm	/^c010c3c7:	5f                   	pop    %edi$/;"	l
c010c3c8	obj/kernel.asm	/^c010c3c8:	5d                   	pop    %ebp$/;"	l
c010c3c9	obj/kernel.asm	/^c010c3c9:	c3                   	ret    $/;"	l
c010c3ca	obj/kernel.asm	/^c010c3ca <memcmp>:$/;"	l
c010c3ca	obj/kernel.asm	/^c010c3ca:	55                   	push   %ebp$/;"	l
c010c3cb	obj/kernel.asm	/^c010c3cb:	89 e5                	mov    %esp,%ebp$/;"	l
c010c3cd	obj/kernel.asm	/^c010c3cd:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c3d0	obj/kernel.asm	/^c010c3d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c3d3	obj/kernel.asm	/^c010c3d3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c3d6	obj/kernel.asm	/^c010c3d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c3d9	obj/kernel.asm	/^c010c3d9:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010c3dc	obj/kernel.asm	/^c010c3dc:	eb 30                	jmp    c010c40e <memcmp+0x44>$/;"	l
c010c3de	obj/kernel.asm	/^c010c3de:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c3e1	obj/kernel.asm	/^c010c3e1:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010c3e4	obj/kernel.asm	/^c010c3e4:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c3e7	obj/kernel.asm	/^c010c3e7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c3ea	obj/kernel.asm	/^c010c3ea:	38 c2                	cmp    %al,%dl$/;"	l
c010c3ec	obj/kernel.asm	/^c010c3ec:	74 18                	je     c010c406 <memcmp+0x3c>$/;"	l
c010c3ee	obj/kernel.asm	/^c010c3ee:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c3f1	obj/kernel.asm	/^c010c3f1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c3f4	obj/kernel.asm	/^c010c3f4:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010c3f7	obj/kernel.asm	/^c010c3f7:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c3fa	obj/kernel.asm	/^c010c3fa:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c3fd	obj/kernel.asm	/^c010c3fd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010c400	obj/kernel.asm	/^c010c400:	29 c2                	sub    %eax,%edx$/;"	l
c010c402	obj/kernel.asm	/^c010c402:	89 d0                	mov    %edx,%eax$/;"	l
c010c404	obj/kernel.asm	/^c010c404:	eb 1a                	jmp    c010c420 <memcmp+0x56>$/;"	l
c010c406	obj/kernel.asm	/^c010c406:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010c40a	obj/kernel.asm	/^c010c40a:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010c40e	obj/kernel.asm	/^c010c40e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c411	obj/kernel.asm	/^c010c411:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010c414	obj/kernel.asm	/^c010c414:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010c417	obj/kernel.asm	/^c010c417:	85 c0                	test   %eax,%eax$/;"	l
c010c419	obj/kernel.asm	/^c010c419:	75 c3                	jne    c010c3de <memcmp+0x14>$/;"	l
c010c41b	obj/kernel.asm	/^c010c41b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c420	obj/kernel.asm	/^c010c420:	c9                   	leave  $/;"	l
c010c421	obj/kernel.asm	/^c010c421:	c3                   	ret    $/;"	l
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/matrix.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/priority.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon1	file:
char	obj/kernel.asm	/^char *$/;"	l
char	obj/user/badarg.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/exit.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/forktest.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/matrix.asm	/^char *$/;"	l
char	obj/user/pgdir.asm	/^char *$/;"	l
char	obj/user/priority.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/waitkill.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/matrix.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/priority.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
compare_f	libs/skew_heap.h	/^typedef int(*compare_f)(void *a, void *b);$/;"	t
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon2	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
const	obj/user/matrix.asm	/^const int total = 21;$/;"	l
cont	boot/bootasm.S	/^cont:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon1	file:
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
default	obj/user/badarg.asm	/^        default:$/;"	l
default	obj/user/badsegment.asm	/^        default:$/;"	l
default	obj/user/divzero.asm	/^        default:$/;"	l
default	obj/user/exit.asm	/^        default:$/;"	l
default	obj/user/faultread.asm	/^        default:$/;"	l
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
default	obj/user/forktree.asm	/^        default:$/;"	l
default	obj/user/hello.asm	/^        default:$/;"	l
default	obj/user/matrix.asm	/^        default:$/;"	l
default	obj/user/pgdir.asm	/^        default:$/;"	l
default	obj/user/priority.asm	/^        default:$/;"	l
default	obj/user/softint.asm	/^        default:$/;"	l
default	obj/user/spin.asm	/^        default:$/;"	l
default	obj/user/testbss.asm	/^        default:$/;"	l
default	obj/user/waitkill.asm	/^        default:$/;"	l
default	obj/user/yield.asm	/^        default:$/;"	l
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_check	tools/grade.sh	/^default_check() {$/;"	f
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
default_sched_class	kern/schedule/default_sched.c	/^struct sched_class default_sched_class = {$/;"	v	typeref:struct:sched_class
del_timer	kern/schedule/sched.c	/^del_timer(timer_t *timer) {$/;"	f
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
dequeue	kern/schedule/sched.h	/^    void (*dequeue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_div	libs/x86.h	6;"	d
do_execve	kern/process/proc.c	/^do_execve(const char *name, size_t len, unsigned char *binary, size_t size) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebp	obj/kernel.asm	/^        ebp = *((uint32_t*)ebp);$/;"	d
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
eip	obj/kernel.asm	/^        eip = *(((uint32_t*)ebp)+4);$/;"	d
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
enqueue	kern/schedule/sched.h	/^    void (*enqueue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/matrix.asm	/^                err = -err;$/;"	d
err	obj/user/matrix.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/priority.asm	/^                err = -err;$/;"	d
err	obj/user/priority.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
expires	kern/schedule/sched.h	/^    unsigned int expires;       \/\/the expire time$/;"	m	struct:__anon5
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
fail	tools/grade.sh	/^fail() {$/;"	f
failed	obj/kernel.asm	/^failed:$/;"	l
failed	obj/user/matrix.asm	/^failed:$/;"	l
failed	obj/user/priority.asm	/^failed:$/;"	l
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon4
free_list	kern/mm/default_pmm.c	59;"	d	file:
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon4
free_list	kern/mm/swap.c	176;"	d	file:
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
gettime_msec	user/libs/ulib.c	/^gettime_msec(void) {$/;"	f
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init	kern/schedule/sched.h	/^    void (*init)(struct run_queue *rq);$/;"	m	struct:sched_class
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
inside	obj/kernel.asm	/^    inside:$/;"	l
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int$/;"	l
int	obj/user/badarg.asm	/^int main(void);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int main(void);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int main(void);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(void);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int main(void);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(void);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/forktest.asm	/^int main(void);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int main(void);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int main(void);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/matrix.asm	/^int main(void);$/;"	l
int	obj/user/matrix.asm	/^int$/;"	l
int	obj/user/pgdir.asm	/^int main(void);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
int	obj/user/priority.asm	/^int main(void);$/;"	l
int	obj/user/priority.asm	/^int pids[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int status[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int main(void);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int main(void);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int main(void);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/waitkill.asm	/^int main(void);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int main(void);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
j	obj/user/priority.asm	/^          j = !j;$/;"	d
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, unsigned char *binary, size_t size) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
lab6_priority	kern/process/proc.h	/^    uint32_t lab6_priority;                     \/\/ FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)$/;"	m	struct:proc_struct
lab6_run_pool	kern/process/proc.h	/^    skew_heap_entry_t lab6_run_pool;            \/\/ FOR LAB6 ONLY: the entry in the run pool$/;"	m	struct:proc_struct
lab6_run_pool	kern/schedule/sched.h	/^    skew_heap_entry_t *lab6_run_pool;$/;"	m	struct:run_queue
lab6_set_priority	kern/process/proc.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_set_priority	user/libs/ulib.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_stride	kern/process/proc.h	/^    uint32_t lab6_stride;                       \/\/ FOR LAB6 ONLY: the current stride of the process $/;"	m	struct:proc_struct
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
le	obj/kernel.asm	/^                le = list_next(le);$/;"	d
le	obj/kernel.asm	/^            le = list_next(le);$/;"	d
le	obj/kernel.asm	/^          le = len;$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list_prev(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = list_prev(&(base->page_link));$/;"	d
le2page	kern/mm/memlayout.h	150;"	d
le2proc	kern/process/proc.h	75;"	d
le2timer	kern/schedule/sched.h	18;"	d
le2vma	kern/mm/vmm.h	22;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
left	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
len	obj/kernel.asm	/^          len = list_next(le);$/;"	d
len	obj/kernel.asm	/^        len = PROC_NAME_LEN;$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/matrix.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/priority.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list $/;"	m	struct:proc_struct
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
load_icode	kern/process/proc.c	/^load_icode(unsigned char *binary, size_t size) {$/;"	f	file:
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_restore	obj/kernel.asm	/^#define local_intr_restore(x)   __intr_restore(x);$/;"	d
local_intr_save	kern/sync/sync.h	27;"	d
lock	kern/sync/sync.h	/^lock(lock_t *lock) {$/;"	f
lock_init	kern/sync/sync.h	/^lock_init(lock_t *lock) {$/;"	f
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
lock_t	kern/sync/sync.h	/^typedef volatile bool lock_t;$/;"	t
long	obj/kernel.asm	/^long$/;"	l
long	obj/user/badarg.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/exit.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/forktest.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/matrix.asm	/^long$/;"	l
long	obj/user/pgdir.asm	/^long$/;"	l
long	obj/user/priority.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/waitkill.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop	user/waitkill.c	/^loop(void) {$/;"	f
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
main	user/matrix.c	/^main(void) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
main	user/priority.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
main	user/testbss.c	/^main(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon3
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
mata	user/matrix.c	/^static int mata[MATSIZE][MATSIZE];$/;"	v	file:
matb	user/matrix.c	/^static int matb[MATSIZE][MATSIZE];$/;"	v	file:
matc	user/matrix.c	/^static int matc[MATSIZE][MATSIZE];$/;"	v	file:
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
max_time_slice	kern/schedule/sched.h	/^    int max_time_slice;$/;"	m	struct:run_queue
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_lock	kern/mm/vmm.h	/^    lock_t mm_lock;                \/\/ mutex for using dup_mmap fun to duplicat the mm$/;"	m	struct:mm_struct
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
name	kern/schedule/sched.h	/^    const char *name;$/;"	m	struct:sched_class
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
next	obj/user/matrix.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/matrix.asm	/^    next = seed;$/;"	d
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
next	obj/user/priority.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/priority.asm	/^    next = seed;$/;"	d
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	kern/mm/default_pmm.c	60;"	d	file:
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon4
nr_free	kern/mm/swap.c	177;"	d	file:
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/matrix.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/matrix.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/priority.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/priority.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
number	obj/user/badarg.asm	/^        number:$/;"	l
number	obj/user/badsegment.asm	/^        number:$/;"	l
number	obj/user/divzero.asm	/^        number:$/;"	l
number	obj/user/exit.asm	/^        number:$/;"	l
number	obj/user/faultread.asm	/^        number:$/;"	l
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
number	obj/user/forktest.asm	/^        number:$/;"	l
number	obj/user/forktree.asm	/^        number:$/;"	l
number	obj/user/hello.asm	/^        number:$/;"	l
number	obj/user/matrix.asm	/^        number:$/;"	l
number	obj/user/pgdir.asm	/^        number:$/;"	l
number	obj/user/priority.asm	/^        number:$/;"	l
number	obj/user/softint.asm	/^        number:$/;"	l
number	obj/user/spin.asm	/^        number:$/;"	l
number	obj/user/testbss.asm	/^        number:$/;"	l
number	obj/user/waitkill.asm	/^        number:$/;"	l
number	obj/user/yield.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
offsetof	libs/defs.h	55;"	d
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
out	obj/kernel.asm	/^out:$/;"	l
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^        p = le2page(le,page_link);$/;"	d
p	obj/kernel.asm	/^      p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p	obj/kernel.asm	/^    p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = le2page(le,page_link) ;$/;"	d
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
p	obj/user/matrix.asm	/^                p = "(null)";$/;"	d
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
p	obj/user/priority.asm	/^                p = "(null)";$/;"	d
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '-';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '0';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
padc	obj/user/priority.asm	/^            padc = '-';$/;"	d
padc	obj/user/priority.asm	/^            padc = '0';$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic	kern/debug/assert.h	12;"	d
panic	user/libs/ulib.h	12;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
parent	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::skew_heap_entry
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
pass	tools/grade.sh	/^pass() {$/;"	f
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
pick_next	kern/schedule/sched.h	/^    struct proc_struct *(*pick_next)(struct run_queue *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid_hashfn	kern/process/proc.c	67;"	d	file:
pids	user/priority.c	/^int pids[TOTAL];$/;"	v
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/matrix.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/matrix.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/priority.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/priority.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
proc	kern/schedule/sched.h	/^    struct proc_struct *proc;   \/\/the proc wait in this timer. If the expire time is end, then this proc will be scheduled$/;"	m	struct:__anon5	typeref:struct:__anon5::proc_struct
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_num	kern/schedule/sched.h	/^    unsigned int proc_num;$/;"	m	struct:run_queue
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_stride_comp_f	kern/schedule/default_sched.c	/^proc_stride_comp_f(void *a, void *b)$/;"	f	file:
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
proc_tick	kern/schedule/sched.h	/^    void (*proc_tick)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
process_precision	obj/user/matrix.asm	/^        process_precision:$/;"	l
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
process_precision	obj/user/priority.asm	/^        process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ the num of free block, used in first fit pm manager$/;"	m	struct:Page
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptep	obj/kernel.asm	/^    ptep = get_pte(mm->pgdir, addr, 1);              \/\/(1) try to find a pte, if pte's PT(Page Table) isn't existed, then create a PT.$/;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
rand	libs/rand.c	/^rand(void) {$/;"	f
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
relocated	kern/init/entry.S	/^relocated:$/;"	l
relocated	obj/kernel.asm	/^relocated:$/;"	l
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
reswitch	obj/user/matrix.asm	/^    reswitch:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
reswitch	obj/user/priority.asm	/^    reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = page_insert(to, npage, start, perm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
right	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon2	file:
rq	kern/process/proc.h	/^    struct run_queue *rq;                       \/\/ running queue contains Process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::run_queue
rq	kern/schedule/sched.c	/^static struct run_queue *rq;$/;"	v	typeref:struct:run_queue	file:
rq	obj/kernel.asm	/^    rq = &__rq;$/;"	d
run_link	kern/process/proc.h	/^    list_entry_t run_link;                      \/\/ the entry linked in run queue$/;"	m	struct:proc_struct
run_list	kern/schedule/sched.h	/^    list_entry_t run_list;$/;"	m	struct:run_queue
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_queue	kern/schedule/sched.h	/^struct run_queue {$/;"	s
run_test	tools/grade.sh	/^run_test() {$/;"	f
run_timer_list	kern/schedule/sched.c	/^run_timer_list(void) {$/;"	f
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
sched_class	kern/schedule/sched.c	/^static struct sched_class *sched_class;$/;"	v	typeref:struct:sched_class	file:
sched_class	kern/schedule/sched.h	/^struct sched_class {$/;"	s
sched_class	obj/kernel.asm	/^    sched_class = &default_sched_class;$/;"	d
sched_class_dequeue	kern/schedule/sched.c	/^sched_class_dequeue(struct proc_struct *proc) {$/;"	f	file:
sched_class_enqueue	kern/schedule/sched.c	/^sched_class_enqueue(struct proc_struct *proc) {$/;"	f	file:
sched_class_pick_next	kern/schedule/sched.c	/^sched_class_pick_next(void) {$/;"	f	file:
sched_class_proc_tick	kern/schedule/sched.c	/^sched_class_proc_tick(struct proc_struct *proc) {$/;"	f	file:
sched_init	kern/schedule/sched.c	/^sched_init(void) {$/;"	f
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon3
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
size_t	obj/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badarg.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/exit.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/forktest.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/matrix.asm	/^size_t$/;"	l
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
size_t	obj/user/priority.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skew_heap_entry	libs/skew_heap.h	/^struct skew_heap_entry {$/;"	s
skew_heap_entry_t	libs/skew_heap.h	/^typedef struct skew_heap_entry skew_heap_entry_t;$/;"	t	typeref:struct:skew_heap_entry
skew_heap_init	libs/skew_heap.h	/^skew_heap_init(skew_heap_entry_t *a)$/;"	f
skew_heap_insert	libs/skew_heap.h	/^skew_heap_insert(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_merge	libs/skew_heap.h	/^skew_heap_merge(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_remove	libs/skew_heap.h	/^skew_heap_remove(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_allocated	kern/mm/kmalloc.c	/^slob_allocated(void) {$/;"	f
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_init	kern/mm/kmalloc.c	/^slob_init(void) {$/;"	f
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
spin	boot/bootasm.S	/^spin:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
spin	obj/kernel.asm	/^spin:$/;"	l
spin_delay	user/priority.c	/^spin_delay(void)$/;"	f	file:
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
stab	kern/debug/stab.h	/^struct stab {$/;"	s
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
start	boot/bootasm.S	/^start:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline struct proc_struct *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static struct run_queue *rq;$/;"	t
static	obj/kernel.asm	/^static struct run_queue __rq;$/;"	t
static	obj/kernel.asm	/^static struct sched_class *sched_class;$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/matrix.asm	/^static inline char *$/;"	l
static	obj/user/matrix.asm	/^static inline int$/;"	l
static	obj/user/matrix.asm	/^static inline void *$/;"	l
static	obj/user/matrix.asm	/^static int mata[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matb[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matc[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static long long$/;"	l
static	obj/user/matrix.asm	/^static unsigned long long$/;"	l
static	obj/user/matrix.asm	/^static void$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
static	obj/user/priority.asm	/^static inline char *$/;"	l
static	obj/user/priority.asm	/^static inline int$/;"	l
static	obj/user/priority.asm	/^static inline void *$/;"	l
static	obj/user/priority.asm	/^static long long$/;"	l
static	obj/user/priority.asm	/^static unsigned long long$/;"	l
static	obj/user/priority.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	kern/debug/assert.h	23;"	d
static_assert	user/libs/ulib.h	23;"	d
status	user/priority.c	/^int status[TOTAL];$/;"	v
sti	libs/x86.h	/^sti(void) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
stride_dequeue	kern/schedule/default_sched.c	/^stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_enqueue	kern/schedule/default_sched.c	/^stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_init	kern/schedule/default_sched.c	/^stride_init(struct run_queue *rq) {$/;"	f	file:
stride_pick_next	kern/schedule/default_sched.c	/^stride_pick_next(struct run_queue *rq) {$/;"	f	file:
stride_proc_tick	kern/schedule/default_sched.c	/^stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_offset	kern/mm/swap.h	25;"	d
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
swapfs_init	kern/fs/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_gettime	kern/syscall/syscall.c	/^sys_gettime(uint32_t arg[]) {$/;"	f	file:
sys_gettime	user/libs/syscall.c	/^sys_gettime(void) {$/;"	f
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_lab6_set_priority	kern/syscall/syscall.c	/^sys_lab6_set_priority(uint32_t arg[])$/;"	f	file:
sys_lab6_set_priority	user/libs/syscall.c	/^sys_lab6_set_priority(uint32_t priority)$/;"	f
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
time_slice	kern/process/proc.h	/^    int time_slice;                             \/\/ time slice for occupying the CPU$/;"	m	struct:proc_struct
timer	obj/kernel.asm	/^                timer = le2timer(le, timer_link);$/;"	d
timer_init	kern/schedule/sched.h	/^timer_init(timer_t *timer, struct proc_struct *proc, int expires) {$/;"	f
timer_link	kern/schedule/sched.h	/^    list_entry_t timer_link;    \/\/the timer list$/;"	m	struct:__anon5
timer_list	kern/schedule/sched.c	/^static list_entry_t timer_list;$/;"	v	file:
timer_t	kern/schedule/sched.h	/^} timer_t;$/;"	t	typeref:struct:__anon5
times	obj/user/matrix.asm	/^            times = (times * times + 10) * 100;$/;"	d
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
to_struct	libs/defs.h	64;"	d
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
total	user/matrix.c	/^const int total = 21;$/;"	v
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
try_lock	kern/sync/sync.h	/^try_lock(lock_t *lock) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon3
typedef	obj/kernel.asm	/^typedef volatile bool lock_t;$/;"	l
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
uint32_t	obj/user/matrix.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
uint32_t	obj/user/priority.asm	/^uint32_t$/;"	l
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/libs/umain.c	/^umain(void) {$/;"	f
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
unlock	kern/sync/sync.h	/^unlock(lock_t *lock) {$/;"	f
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
unsigned	obj/user/badarg.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/exit.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktest.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/matrix.asm	/^unsigned int$/;"	l
unsigned	obj/user/pgdir.asm	/^unsigned int$/;"	l
unsigned	obj/user/priority.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/waitkill.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
update_score	tools/grade.sh	/^update_score() {$/;"	f
uprog_ld	Makefile	/^define uprog_ld$/;"	m
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma, not include the vm_end itself$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/ start addr of vma      $/;"	m	struct:vma_struct
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
void	obj/bootblock.asm	/^void$/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void grade_backtrace(void);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/matrix.asm	/^void *$/;"	l
void	obj/user/matrix.asm	/^void$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
void	obj/user/priority.asm	/^void *$/;"	l
void	obj/user/priority.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap) {$/;"	f
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
warn	kern/debug/assert.h	9;"	d
warn	user/libs/ulib.h	9;"	d
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
width	obj/user/matrix.asm	/^                width = 0;$/;"	d
width	obj/user/matrix.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/matrix.asm	/^        width = precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
width	obj/user/priority.asm	/^                width = 0;$/;"	d
width	obj/user/priority.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/priority.asm	/^        width = precision = -1;$/;"	d
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
work	user/matrix.c	/^work(unsigned int times) {$/;"	f
work	user/waitkill.c	/^work(void) {$/;"	f
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon2	file:
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
zero	user/divzero.c	/^int zero;$/;"	v
