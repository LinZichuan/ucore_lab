!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
AWK	Makefile	/^AWK		:= awk$/;"	m
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
CC	Makefile	/^CC		:= $(GCCPREFIX)gcc$/;"	m
CC	Makefile	/^CC		:= clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
COPY	Makefile	/^COPY	:= cp$/;"	m
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
EMPTY	Makefile	/^EMPTY	:=$/;"	m
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= proj$(PROJ)-handin.tar.gz$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= clang$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2$/;"	m
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MV	Makefile	/^MV		:= mv$/;"	m
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
PROJ	Makefile	/^PROJ	:= 8$/;"	m
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback -drive file=$(SFSIMG),media=disk,cache=writeback $/;"	m
RM	Makefile	/^RM		:= rm -f$/;"	m
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SED	Makefile	/^SED		:= sed$/;"	m
SFSBINS	Makefile	/^SFSBINS		:=$/;"	m
SFSIMG	Makefile	/^SFSIMG		:= $(call totarget,sfs.img)$/;"	m
SFSROOT	Makefile	/^SFSROOT		:= disk0$/;"	m
SH	Makefile	/^SH		:= sh$/;"	m
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
V	Makefile	/^V       := @$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
fscopy	Makefile	/^define fscopy$/;"	m
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uprog_ld	Makefile	/^define uprog_ld$/;"	m
SEG_ASM	boot/asm.h	11;"	d
SEG_NULLASM	boot/asm.h	7;"	d
STA_A	boot/asm.h	23;"	d
STA_C	boot/asm.h	20;"	d
STA_E	boot/asm.h	19;"	d
STA_R	boot/asm.h	22;"	d
STA_W	boot/asm.h	21;"	d
STA_X	boot/asm.h	18;"	d
__BOOT_ASM_H__	boot/asm.h	2;"	d
cont	boot/bootasm.S	/^cont:$/;"	l
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
spin	boot/bootasm.S	/^spin:$/;"	l
start	boot/bootasm.S	/^start:$/;"	l
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
ELFHDR	boot/bootmain.c	34;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
assert	kern/debug/assert.h	15;"	d
panic	kern/debug/assert.h	12;"	d
static_assert	kern/debug/assert.h	23;"	d
warn	kern/debug/assert.h	9;"	d
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
stab	kern/debug/stab.h	/^struct stab {$/;"	s
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
SYSTEM_READ_TIMER	kern/driver/clock.c	/^long SYSTEM_READ_TIMER( void ){$/;"	f
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
ALT	kern/driver/console.c	260;"	d	file:
C	kern/driver/console.c	323;"	d	file:
CAPSLOCK	kern/driver/console.c	262;"	d	file:
CGA_BASE	kern/driver/console.c	45;"	d	file:
CGA_BUF	kern/driver/console.c	46;"	d	file:
COM1	kern/driver/console.c	21;"	d	file:
COM_DLL	kern/driver/console.c	25;"	d	file:
COM_DLM	kern/driver/console.c	26;"	d	file:
COM_FCR	kern/driver/console.c	30;"	d	file:
COM_IER	kern/driver/console.c	27;"	d	file:
COM_IER_RDI	kern/driver/console.c	28;"	d	file:
COM_IIR	kern/driver/console.c	29;"	d	file:
COM_LCR	kern/driver/console.c	31;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	32;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	33;"	d	file:
COM_LSR	kern/driver/console.c	38;"	d	file:
COM_LSR_DATA	kern/driver/console.c	39;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	41;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	40;"	d	file:
COM_MCR	kern/driver/console.c	34;"	d	file:
COM_MCR_DTR	kern/driver/console.c	36;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	37;"	d	file:
COM_MCR_RTS	kern/driver/console.c	35;"	d	file:
COM_RX	kern/driver/console.c	23;"	d	file:
COM_TX	kern/driver/console.c	24;"	d	file:
CONSBUFSIZE	kern/driver/console.c	208;"	d	file:
CRT_COLS	kern/driver/console.c	48;"	d	file:
CRT_ROWS	kern/driver/console.c	47;"	d	file:
CRT_SIZE	kern/driver/console.c	49;"	d	file:
CTL	kern/driver/console.c	259;"	d	file:
E0ESC	kern/driver/console.c	266;"	d	file:
LPTPORT	kern/driver/console.c	51;"	d	file:
MONO_BASE	kern/driver/console.c	43;"	d	file:
MONO_BUF	kern/driver/console.c	44;"	d	file:
NO	kern/driver/console.c	256;"	d	file:
NUMLOCK	kern/driver/console.c	263;"	d	file:
SCROLLLOCK	kern/driver/console.c	264;"	d	file:
SHIFT	kern/driver/console.c	258;"	d	file:
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9	file:
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon9	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon9	file:
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon9	file:
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
VALID_IDE	kern/driver/ide.c	47;"	d	file:
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon8	file:
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon8	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon8	file:
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
BS_OCMD	kern/driver/kbdreg.h	23;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
dev_close	kern/fs/devs/dev.c	/^dev_close(struct inode *node) {$/;"	f	file:
dev_create_inode	kern/fs/devs/dev.c	/^dev_create_inode(void) {$/;"	f
dev_fstat	kern/fs/devs/dev.c	/^dev_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
dev_gettype	kern/fs/devs/dev.c	/^dev_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
dev_init	kern/fs/devs/dev.c	/^dev_init(void) {$/;"	f
dev_ioctl	kern/fs/devs/dev.c	/^dev_ioctl(struct inode *node, int op, void *data) {$/;"	f	file:
dev_lookup	kern/fs/devs/dev.c	/^dev_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
dev_node_ops	kern/fs/devs/dev.c	/^static const struct inode_ops dev_node_ops = {$/;"	v	typeref:struct:inode_ops	file:
dev_open	kern/fs/devs/dev.c	/^dev_open(struct inode *node, uint32_t open_flags) {$/;"	f	file:
dev_read	kern/fs/devs/dev.c	/^dev_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
dev_tryseek	kern/fs/devs/dev.c	/^dev_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
dev_write	kern/fs/devs/dev.c	/^dev_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
init_device	kern/fs/devs/dev.c	144;"	d	file:
__KERN_FS_DEVS_DEV_H__	kern/fs/devs/dev.h	2;"	d
d_blocks	kern/fs/devs/dev.h	/^    size_t d_blocks;$/;"	m	struct:device
d_blocksize	kern/fs/devs/dev.h	/^    size_t d_blocksize;$/;"	m	struct:device
d_close	kern/fs/devs/dev.h	/^    int (*d_close)(struct device *dev);$/;"	m	struct:device
d_io	kern/fs/devs/dev.h	/^    int (*d_io)(struct device *dev, struct iobuf *iob, bool write);$/;"	m	struct:device
d_ioctl	kern/fs/devs/dev.h	/^    int (*d_ioctl)(struct device *dev, int op, void *data);$/;"	m	struct:device
d_open	kern/fs/devs/dev.h	/^    int (*d_open)(struct device *dev, uint32_t open_flags);$/;"	m	struct:device
device	kern/fs/devs/dev.h	/^struct device {$/;"	s
dop_close	kern/fs/devs/dev.h	23;"	d
dop_io	kern/fs/devs/dev.h	24;"	d
dop_ioctl	kern/fs/devs/dev.h	25;"	d
dop_open	kern/fs/devs/dev.h	22;"	d
DISK0_BLKSIZE	kern/fs/devs/dev_disk0.c	13;"	d	file:
DISK0_BLK_NSECT	kern/fs/devs/dev_disk0.c	15;"	d	file:
DISK0_BUFSIZE	kern/fs/devs/dev_disk0.c	14;"	d	file:
dev_init_disk0	kern/fs/devs/dev_disk0.c	/^dev_init_disk0(void) {$/;"	f
disk0_buffer	kern/fs/devs/dev_disk0.c	/^static char *disk0_buffer;$/;"	v	file:
disk0_close	kern/fs/devs/dev_disk0.c	/^disk0_close(struct device *dev) {$/;"	f	file:
disk0_device_init	kern/fs/devs/dev_disk0.c	/^disk0_device_init(struct device *dev) {$/;"	f	file:
disk0_io	kern/fs/devs/dev_disk0.c	/^disk0_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
disk0_ioctl	kern/fs/devs/dev_disk0.c	/^disk0_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
disk0_open	kern/fs/devs/dev_disk0.c	/^disk0_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
disk0_read_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
disk0_sem	kern/fs/devs/dev_disk0.c	/^static semaphore_t disk0_sem;$/;"	v	file:
disk0_write_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
lock_disk0	kern/fs/devs/dev_disk0.c	/^lock_disk0(void) {$/;"	f	file:
unlock_disk0	kern/fs/devs/dev_disk0.c	/^unlock_disk0(void) {$/;"	f	file:
STDIN_BUFSIZE	kern/fs/devs/dev_stdin.c	15;"	d	file:
__wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
dev_init_stdin	kern/fs/devs/dev_stdin.c	/^dev_init_stdin(void) {$/;"	f
dev_stdin_read	kern/fs/devs/dev_stdin.c	/^dev_stdin_read(char *buf, size_t len) {$/;"	f	file:
dev_stdin_write	kern/fs/devs/dev_stdin.c	/^dev_stdin_write(char c) {$/;"	f
p_rpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
p_wpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
stdin_buffer	kern/fs/devs/dev_stdin.c	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	v	file:
stdin_close	kern/fs/devs/dev_stdin.c	/^stdin_close(struct device *dev) {$/;"	f	file:
stdin_device_init	kern/fs/devs/dev_stdin.c	/^stdin_device_init(struct device *dev) {$/;"	f	file:
stdin_io	kern/fs/devs/dev_stdin.c	/^stdin_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdin_ioctl	kern/fs/devs/dev_stdin.c	/^stdin_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdin_open	kern/fs/devs/dev_stdin.c	/^stdin_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
dev_init_stdout	kern/fs/devs/dev_stdout.c	/^dev_init_stdout(void) {$/;"	f
stdout_close	kern/fs/devs/dev_stdout.c	/^stdout_close(struct device *dev) {$/;"	f	file:
stdout_device_init	kern/fs/devs/dev_stdout.c	/^stdout_device_init(struct device *dev) {$/;"	f	file:
stdout_io	kern/fs/devs/dev_stdout.c	/^stdout_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdout_ioctl	kern/fs/devs/dev_stdout.c	/^stdout_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdout_open	kern/fs/devs/dev_stdout.c	/^stdout_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
fd2file	kern/fs/file.c	/^fd2file(int fd, struct file **file_store) {$/;"	f	file:
fd_array_acquire	kern/fs/file.c	/^fd_array_acquire(struct file *file) {$/;"	f	file:
fd_array_alloc	kern/fs/file.c	/^fd_array_alloc(int fd, struct file **file_store) {$/;"	f	file:
fd_array_close	kern/fs/file.c	/^fd_array_close(struct file *file) {$/;"	f
fd_array_dup	kern/fs/file.c	/^fd_array_dup(struct file *to, struct file *from) {$/;"	f
fd_array_free	kern/fs/file.c	/^fd_array_free(struct file *file) {$/;"	f	file:
fd_array_init	kern/fs/file.c	/^fd_array_init(struct file *fd_array) {$/;"	f
fd_array_open	kern/fs/file.c	/^fd_array_open(struct file *file) {$/;"	f
fd_array_release	kern/fs/file.c	/^fd_array_release(struct file *file) {$/;"	f	file:
file_close	kern/fs/file.c	/^file_close(int fd) {$/;"	f
file_dup	kern/fs/file.c	/^file_dup(int fd1, int fd2) {$/;"	f
file_fstat	kern/fs/file.c	/^file_fstat(int fd, struct stat *stat) {$/;"	f
file_fsync	kern/fs/file.c	/^file_fsync(int fd) {$/;"	f
file_getdirentry	kern/fs/file.c	/^file_getdirentry(int fd, struct dirent *direntp) {$/;"	f
file_open	kern/fs/file.c	/^file_open(char *path, uint32_t open_flags) {$/;"	f
file_read	kern/fs/file.c	/^file_read(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
file_seek	kern/fs/file.c	/^file_seek(int fd, off_t pos, int whence) {$/;"	f
file_testfd	kern/fs/file.c	/^file_testfd(int fd, bool readable, bool writable) {$/;"	f
file_write	kern/fs/file.c	/^file_write(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
get_fd_array	kern/fs/file.c	/^get_fd_array(void) {$/;"	f	file:
testfd	kern/fs/file.c	14;"	d	file:
FD_CLOSED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon7
FD_INIT	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon7
FD_NONE	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon7
FD_OPENED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon7
__KERN_FS_FILE_H__	kern/fs/file.h	2;"	d
fd	kern/fs/file.h	/^    int fd;$/;"	m	struct:file
file	kern/fs/file.h	/^struct file {$/;"	s
fopen_count	kern/fs/file.h	/^fopen_count(struct file *file) {$/;"	f
fopen_count_dec	kern/fs/file.h	/^fopen_count_dec(struct file *file) {$/;"	f
fopen_count_inc	kern/fs/file.h	/^fopen_count_inc(struct file *file) {$/;"	f
node	kern/fs/file.h	/^    struct inode *node;$/;"	m	struct:file	typeref:struct:file::inode
open_count	kern/fs/file.h	/^    int open_count;$/;"	m	struct:file
pos	kern/fs/file.h	/^    off_t pos;$/;"	m	struct:file
readable	kern/fs/file.h	/^    bool readable;$/;"	m	struct:file
status	kern/fs/file.h	/^    } status;$/;"	m	struct:file	typeref:enum:file::__anon7
writable	kern/fs/file.h	/^    bool writable;$/;"	m	struct:file
dup_files	kern/fs/fs.c	/^dup_files(struct files_struct *to, struct files_struct *from) {$/;"	f
files_closeall	kern/fs/fs.c	/^files_closeall(struct files_struct *filesp) {$/;"	f
files_create	kern/fs/fs.c	/^files_create(void) {$/;"	f
files_destroy	kern/fs/fs.c	/^files_destroy(struct files_struct *filesp) {$/;"	f
fs_cleanup	kern/fs/fs.c	/^fs_cleanup(void) {$/;"	f
fs_init	kern/fs/fs.c	/^fs_init(void) {$/;"	f
lock_files	kern/fs/fs.c	/^lock_files(struct files_struct *filesp) {$/;"	f
unlock_files	kern/fs/fs.c	/^unlock_files(struct files_struct *filesp) {$/;"	f
DISK0_DEV_NO	kern/fs/fs.h	13;"	d
DISK1_DEV_NO	kern/fs/fs.h	14;"	d
FILES_STRUCT_BUFSIZE	kern/fs/fs.h	32;"	d
FILES_STRUCT_NENTRY	kern/fs/fs.h	33;"	d
PAGE_NSECT	kern/fs/fs.h	10;"	d
SECTSIZE	kern/fs/fs.h	9;"	d
SWAP_DEV_NO	kern/fs/fs.h	12;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
fd_array	kern/fs/fs.h	/^    struct file *fd_array;  \/\/ opened files array$/;"	m	struct:files_struct	typeref:struct:files_struct::file
files_count	kern/fs/fs.h	/^    int files_count;        \/\/ the number of opened files$/;"	m	struct:files_struct
files_count	kern/fs/fs.h	/^files_count(struct files_struct *filesp) {$/;"	f
files_count_dec	kern/fs/fs.h	/^files_count_dec(struct files_struct *filesp) {$/;"	f
files_count_inc	kern/fs/fs.h	/^files_count_inc(struct files_struct *filesp) {$/;"	f
files_sem	kern/fs/fs.h	/^    semaphore_t files_sem;  \/\/ lock protect sem$/;"	m	struct:files_struct
files_struct	kern/fs/fs.h	/^struct files_struct {$/;"	s
pwd	kern/fs/fs.h	/^    struct inode *pwd;      \/\/ inode of present working directory$/;"	m	struct:files_struct	typeref:struct:files_struct::inode
iobuf_init	kern/fs/iobuf.c	/^iobuf_init(struct iobuf *iob, void *base, size_t len, off_t offset) {$/;"	f
iobuf_move	kern/fs/iobuf.c	/^iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b, size_t *copiedp) {$/;"	f
iobuf_move_zeros	kern/fs/iobuf.c	/^iobuf_move_zeros(struct iobuf *iob, size_t len, size_t *copiedp) {$/;"	f
iobuf_skip	kern/fs/iobuf.c	/^iobuf_skip(struct iobuf *iob, size_t n) {$/;"	f
__KERN_FS_IOBUF_H__	kern/fs/iobuf.h	2;"	d
io_base	kern/fs/iobuf.h	/^    void *io_base;     \/\/ the base addr of buffer (used for Rd\/Wr)$/;"	m	struct:iobuf
io_len	kern/fs/iobuf.h	/^    size_t io_len;     \/\/ the length of buffer  (used for Rd\/Wr)$/;"	m	struct:iobuf
io_offset	kern/fs/iobuf.h	/^    off_t io_offset;   \/\/ current Rd\/Wr position in buffer, will have been incremented by the amount transferred$/;"	m	struct:iobuf
io_resid	kern/fs/iobuf.h	/^    size_t io_resid;   \/\/ current resident length need to Rd\/Wr, will have been decremented by the amount transferred.$/;"	m	struct:iobuf
iobuf	kern/fs/iobuf.h	/^struct iobuf {$/;"	s
iobuf_used	kern/fs/iobuf.h	16;"	d
WORD_BITS	kern/fs/sfs/bitmap.c	9;"	d	file:
WORD_TYPE	kern/fs/sfs/bitmap.c	8;"	d	file:
bitmap	kern/fs/sfs/bitmap.c	/^struct bitmap {$/;"	s	file:
bitmap_alloc	kern/fs/sfs/bitmap.c	/^bitmap_alloc(struct bitmap *bitmap, uint32_t *index_store) {$/;"	f
bitmap_create	kern/fs/sfs/bitmap.c	/^bitmap_create(uint32_t nbits) {$/;"	f
bitmap_destroy	kern/fs/sfs/bitmap.c	/^bitmap_destroy(struct bitmap *bitmap) {$/;"	f
bitmap_free	kern/fs/sfs/bitmap.c	/^bitmap_free(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_getdata	kern/fs/sfs/bitmap.c	/^bitmap_getdata(struct bitmap *bitmap, size_t *len_store) {$/;"	f
bitmap_test	kern/fs/sfs/bitmap.c	/^bitmap_test(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_translate	kern/fs/sfs/bitmap.c	/^bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE **word, WORD_TYPE *mask) {$/;"	f	file:
map	kern/fs/sfs/bitmap.c	/^    WORD_TYPE *map;$/;"	m	struct:bitmap	file:
nbits	kern/fs/sfs/bitmap.c	/^    uint32_t nbits;$/;"	m	struct:bitmap	file:
nwords	kern/fs/sfs/bitmap.c	/^    uint32_t nwords;$/;"	m	struct:bitmap	file:
__KERN_FS_SFS_BITMAP_H__	kern/fs/sfs/bitmap.h	2;"	d
sfs_init	kern/fs/sfs/sfs.c	/^sfs_init(void) {$/;"	f
SFS_BLKBITS	kern/fs/sfs/sfs.h	26;"	d
SFS_BLKN_FREEMAP	kern/fs/sfs/sfs.h	23;"	d
SFS_BLKN_ROOT	kern/fs/sfs/sfs.h	22;"	d
SFS_BLKN_SUPER	kern/fs/sfs/sfs.h	21;"	d
SFS_BLKSIZE	kern/fs/sfs/sfs.h	16;"	d
SFS_BLK_NENTRY	kern/fs/sfs/sfs.h	29;"	d
SFS_HLIST_SHIFT	kern/fs/sfs/sfs.h	97;"	d
SFS_HLIST_SIZE	kern/fs/sfs/sfs.h	98;"	d
SFS_MAGIC	kern/fs/sfs/sfs.h	15;"	d
SFS_MAX_FILE_SIZE	kern/fs/sfs/sfs.h	20;"	d
SFS_MAX_FNAME_LEN	kern/fs/sfs/sfs.h	19;"	d
SFS_MAX_INFO_LEN	kern/fs/sfs/sfs.h	18;"	d
SFS_NDIRECT	kern/fs/sfs/sfs.h	17;"	d
SFS_TYPE_DIR	kern/fs/sfs/sfs.h	34;"	d
SFS_TYPE_FILE	kern/fs/sfs/sfs.h	33;"	d
SFS_TYPE_INVAL	kern/fs/sfs/sfs.h	32;"	d
SFS_TYPE_LINK	kern/fs/sfs/sfs.h	35;"	d
__KERN_FS_SFS_SFS_H__	kern/fs/sfs/sfs.h	2;"	d
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks *\/$/;"	m	struct:sfs_disk_inode
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks in fs *\/$/;"	m	struct:sfs_super
dev	kern/fs/sfs/sfs.h	/^    struct device *dev;                             \/* device mounted on *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::device
din	kern/fs/sfs/sfs.h	/^    struct sfs_disk_inode *din;                     \/* on-disk inode *\/$/;"	m	struct:sfs_inode	typeref:struct:sfs_inode::sfs_disk_inode
direct	kern/fs/sfs/sfs.h	/^    uint32_t direct[SFS_NDIRECT];                   \/* direct blocks *\/$/;"	m	struct:sfs_disk_inode
dirty	kern/fs/sfs/sfs.h	/^    bool dirty;                                     \/* true if inode modified *\/$/;"	m	struct:sfs_inode
freemap	kern/fs/sfs/sfs.h	/^    struct bitmap *freemap;                         \/* blocks in use are mared 0 *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::bitmap
fs_sem	kern/fs/sfs/sfs.h	/^    semaphore_t fs_sem;                             \/* semaphore for fs *\/$/;"	m	struct:sfs_fs
hash_link	kern/fs/sfs/sfs.h	/^    list_entry_t hash_link;                         \/* entry for hash linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
hash_list	kern/fs/sfs/sfs.h	/^    list_entry_t *hash_list;                        \/* inode hash linked-list *\/$/;"	m	struct:sfs_fs
indirect	kern/fs/sfs/sfs.h	/^    uint32_t indirect;                              \/* indirect blocks *\/$/;"	m	struct:sfs_disk_inode
info	kern/fs/sfs/sfs.h	/^    char info[SFS_MAX_INFO_LEN + 1];                \/* infomation for sfs  *\/$/;"	m	struct:sfs_super
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_disk_entry
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_inode
inode_link	kern/fs/sfs/sfs.h	/^    list_entry_t inode_link;                        \/* entry for linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
inode_list	kern/fs/sfs/sfs.h	/^    list_entry_t inode_list;                        \/* inode linked-list *\/$/;"	m	struct:sfs_fs
io_sem	kern/fs/sfs/sfs.h	/^    semaphore_t io_sem;                             \/* semaphore for io *\/$/;"	m	struct:sfs_fs
le2sin	kern/fs/sfs/sfs.h	79;"	d
magic	kern/fs/sfs/sfs.h	/^    uint32_t magic;                                 \/* magic number, should be SFS_MAGIC *\/$/;"	m	struct:sfs_super
mutex_sem	kern/fs/sfs/sfs.h	/^    semaphore_t mutex_sem;                          \/* semaphore for link\/unlink and rename *\/$/;"	m	struct:sfs_fs
name	kern/fs/sfs/sfs.h	/^    char name[SFS_MAX_FNAME_LEN + 1];               \/* file name *\/$/;"	m	struct:sfs_disk_entry
nlinks	kern/fs/sfs/sfs.h	/^    uint16_t nlinks;                                \/* # of hard links to this file *\/$/;"	m	struct:sfs_disk_inode
reclaim_count	kern/fs/sfs/sfs.h	/^    int reclaim_count;                              \/* kill inode if it hits zero *\/$/;"	m	struct:sfs_inode
sem	kern/fs/sfs/sfs.h	/^    semaphore_t sem;                                \/* semaphore for din *\/$/;"	m	struct:sfs_inode
sfs_buffer	kern/fs/sfs/sfs.h	/^    void *sfs_buffer;                               \/* buffer for non-block aligned io *\/$/;"	m	struct:sfs_fs
sfs_dentry_size	kern/fs/sfs/sfs.h	65;"	d
sfs_disk_entry	kern/fs/sfs/sfs.h	/^struct sfs_disk_entry {$/;"	s
sfs_disk_inode	kern/fs/sfs/sfs.h	/^struct sfs_disk_inode {$/;"	s
sfs_freemap_bits	kern/fs/sfs/sfs.h	102;"	d
sfs_freemap_blocks	kern/fs/sfs/sfs.h	105;"	d
sfs_fs	kern/fs/sfs/sfs.h	/^struct sfs_fs {$/;"	s
sfs_inode	kern/fs/sfs/sfs.h	/^struct sfs_inode {$/;"	s
sfs_super	kern/fs/sfs/sfs.h	/^struct sfs_super {$/;"	s
sin_hashfn	kern/fs/sfs/sfs.h	99;"	d
size	kern/fs/sfs/sfs.h	/^    uint32_t size;                                  \/* size of the file (in bytes) *\/$/;"	m	struct:sfs_disk_inode
super	kern/fs/sfs/sfs.h	/^    struct sfs_super super;                         \/* on-disk superblock *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::sfs_super
super_dirty	kern/fs/sfs/sfs.h	/^    bool super_dirty;                               \/* true if super\/freemap modified *\/$/;"	m	struct:sfs_fs
type	kern/fs/sfs/sfs.h	/^    uint16_t type;                                  \/* one of SYS_TYPE_* above *\/$/;"	m	struct:sfs_disk_inode
unused_blocks	kern/fs/sfs/sfs.h	/^    uint32_t unused_blocks;                         \/* # of unused blocks in fs *\/$/;"	m	struct:sfs_super
sfs_cleanup	kern/fs/sfs/sfs_fs.c	/^sfs_cleanup(struct fs *fs) {$/;"	f	file:
sfs_do_mount	kern/fs/sfs/sfs_fs.c	/^sfs_do_mount(struct device *dev, struct fs **fs_store) {$/;"	f	file:
sfs_get_root	kern/fs/sfs/sfs_fs.c	/^sfs_get_root(struct fs *fs) {$/;"	f	file:
sfs_init_freemap	kern/fs/sfs/sfs_fs.c	/^sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno, uint32_t nblks, void *blk_buffer) {$/;"	f	file:
sfs_init_read	kern/fs/sfs/sfs_fs.c	/^sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer) {$/;"	f	file:
sfs_mount	kern/fs/sfs/sfs_fs.c	/^sfs_mount(const char *devname) {$/;"	f
sfs_sync	kern/fs/sfs/sfs_fs.c	/^sfs_sync(struct fs *fs) {$/;"	f	file:
sfs_unmount	kern/fs/sfs/sfs_fs.c	/^sfs_unmount(struct fs *fs) {$/;"	f	file:
lock_sin	kern/fs/sfs/sfs_inode.c	/^lock_sin(struct sfs_inode *sin) {$/;"	f	file:
lookup_sfs_nolock	kern/fs/sfs/sfs_inode.c	/^lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
set_pvalue	kern/fs/sfs/sfs_inode.c	448;"	d	file:
set_pvalue	kern/fs/sfs/sfs_inode.c	465;"	d	file:
sfs_block_alloc	kern/fs/sfs/sfs_inode.c	/^sfs_block_alloc(struct sfs_fs *sfs, uint32_t *ino_store) {$/;"	f	file:
sfs_block_free	kern/fs/sfs/sfs_inode.c	/^sfs_block_free(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_block_inuse	kern/fs/sfs/sfs_inode.c	/^sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_bmap_free_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index) {$/;"	f	file:
sfs_bmap_free_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index) {$/;"	f	file:
sfs_bmap_get_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_get_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t *entp, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_load_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_truncate_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_close	kern/fs/sfs/sfs_inode.c	/^sfs_close(struct inode *node) {$/;"	f	file:
sfs_create_inode	kern/fs/sfs/sfs_inode.c	/^sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino, struct inode **node_store) {$/;"	f	file:
sfs_dirent_findino_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t ino, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_link_nolock_check	kern/fs/sfs/sfs_inode.c	414;"	d	file:
sfs_dirent_read_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_search_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, uint32_t *ino_store, int *slot, int *empty_slot) {$/;"	f	file:
sfs_dirent_unlink_nolock_check	kern/fs/sfs/sfs_inode.c	422;"	d	file:
sfs_fstat	kern/fs/sfs/sfs_inode.c	/^sfs_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
sfs_fsync	kern/fs/sfs/sfs_inode.c	/^sfs_fsync(struct inode *node) {$/;"	f	file:
sfs_get_ops	kern/fs/sfs/sfs_inode.c	/^sfs_get_ops(uint16_t type) {$/;"	f	file:
sfs_getdirentry	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_getdirentry_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_gettype	kern/fs/sfs/sfs_inode.c	/^sfs_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
sfs_hash_list	kern/fs/sfs/sfs_inode.c	/^sfs_hash_list(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_io	kern/fs/sfs/sfs_inode.c	/^sfs_io(struct inode *node, struct iobuf *iob, bool write) {$/;"	f	file:
sfs_io_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf, off_t offset, size_t *alenp, bool write) {$/;"	f	file:
sfs_load_inode	kern/fs/sfs/sfs_inode.c	/^sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino) {$/;"	f
sfs_lookup	kern/fs/sfs/sfs_inode.c	/^sfs_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
sfs_lookup_once	kern/fs/sfs/sfs_inode.c	/^sfs_lookup_once(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, struct inode **node_store, int *slot) {$/;"	f	file:
sfs_namefile	kern/fs/sfs/sfs_inode.c	/^sfs_namefile(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops;  \/\/ dir operations$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops; \/\/ file operations$/;"	v	typeref:struct:inode_ops	file:
sfs_opendir	kern/fs/sfs/sfs_inode.c	/^sfs_opendir(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_openfile	kern/fs/sfs/sfs_inode.c	/^sfs_openfile(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_read	kern/fs/sfs/sfs_inode.c	/^sfs_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_reclaim	kern/fs/sfs/sfs_inode.c	/^sfs_reclaim(struct inode *node) {$/;"	f	file:
sfs_remove_links	kern/fs/sfs/sfs_inode.c	/^sfs_remove_links(struct sfs_inode *sin) {$/;"	f	file:
sfs_set_links	kern/fs/sfs/sfs_inode.c	/^sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_truncfile	kern/fs/sfs/sfs_inode.c	/^sfs_truncfile(struct inode *node, off_t len) {$/;"	f	file:
sfs_tryseek	kern/fs/sfs/sfs_inode.c	/^sfs_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
sfs_write	kern/fs/sfs/sfs_inode.c	/^sfs_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
unlock_sin	kern/fs/sfs/sfs_inode.c	/^unlock_sin(struct sfs_inode *sin) {$/;"	f	file:
sfs_clear_block	kern/fs/sfs/sfs_io.c	/^sfs_clear_block(struct sfs_fs *sfs, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_rblock	kern/fs/sfs/sfs_io.c	/^sfs_rblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_rbuf	kern/fs/sfs/sfs_io.c	/^sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
sfs_rwblock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks, bool write) {$/;"	f	file:
sfs_rwblock_nolock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write, bool check) {$/;"	f	file:
sfs_sync_freemap	kern/fs/sfs/sfs_io.c	/^sfs_sync_freemap(struct sfs_fs *sfs) {$/;"	f
sfs_sync_super	kern/fs/sfs/sfs_io.c	/^sfs_sync_super(struct sfs_fs *sfs) {$/;"	f
sfs_wblock	kern/fs/sfs/sfs_io.c	/^sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_wbuf	kern/fs/sfs/sfs_io.c	/^sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
lock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^lock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
lock_sfs_io	kern/fs/sfs/sfs_lock.c	/^lock_sfs_io(struct sfs_fs *sfs) {$/;"	f
unlock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
unlock_sfs_io	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_io(struct sfs_fs *sfs) {$/;"	f
swapfs_init	kern/fs/swap/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swap/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swap/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
__KERN_FS_SWAP_SWAPFS_H__	kern/fs/swap/swapfs.h	2;"	d
IOBUF_SIZE	kern/fs/sysfile.c	16;"	d	file:
copy_path	kern/fs/sysfile.c	/^copy_path(char **to, const char *from) {$/;"	f	file:
sysfile_chdir	kern/fs/sysfile.c	/^sysfile_chdir(const char *__path) {$/;"	f
sysfile_close	kern/fs/sysfile.c	/^sysfile_close(int fd) {$/;"	f
sysfile_dup	kern/fs/sysfile.c	/^sysfile_dup(int fd1, int fd2) {$/;"	f
sysfile_fstat	kern/fs/sysfile.c	/^sysfile_fstat(int fd, struct stat *__stat) {$/;"	f
sysfile_fsync	kern/fs/sysfile.c	/^sysfile_fsync(int fd) {$/;"	f
sysfile_getcwd	kern/fs/sysfile.c	/^sysfile_getcwd(char *buf, size_t len) {$/;"	f
sysfile_getdirentry	kern/fs/sysfile.c	/^sysfile_getdirentry(int fd, struct dirent *__direntp) {$/;"	f
sysfile_link	kern/fs/sysfile.c	/^sysfile_link(const char *__path1, const char *__path2) {$/;"	f
sysfile_mkfifo	kern/fs/sysfile.c	/^sysfile_mkfifo(const char *__name, uint32_t open_flags) {$/;"	f
sysfile_open	kern/fs/sysfile.c	/^sysfile_open(const char *__path, uint32_t open_flags) {$/;"	f
sysfile_pipe	kern/fs/sysfile.c	/^sysfile_pipe(int *fd_store) {$/;"	f
sysfile_read	kern/fs/sysfile.c	/^sysfile_read(int fd, void *base, size_t len) {$/;"	f
sysfile_rename	kern/fs/sysfile.c	/^sysfile_rename(const char *__path1, const char *__path2) {$/;"	f
sysfile_seek	kern/fs/sysfile.c	/^sysfile_seek(int fd, off_t pos, int whence) {$/;"	f
sysfile_unlink	kern/fs/sysfile.c	/^sysfile_unlink(const char *__path) {$/;"	f
sysfile_write	kern/fs/sysfile.c	/^sysfile_write(int fd, void *base, size_t len) {$/;"	f
__KERN_FS_SYSFILE_H__	kern/fs/sysfile.h	2;"	d
__alloc_inode	kern/fs/vfs/inode.c	/^__alloc_inode(int type) {$/;"	f
inode_check	kern/fs/vfs/inode.c	/^inode_check(struct inode *node, const char *opstr) {$/;"	f
inode_init	kern/fs/vfs/inode.c	/^inode_init(struct inode *node, const struct inode_ops *ops, struct fs *fs) {$/;"	f
inode_kill	kern/fs/vfs/inode.c	/^inode_kill(struct inode *node) {$/;"	f
inode_open_dec	kern/fs/vfs/inode.c	/^inode_open_dec(struct inode *node) {$/;"	f
inode_open_inc	kern/fs/vfs/inode.c	/^inode_open_inc(struct inode *node) {$/;"	f
inode_ref_dec	kern/fs/vfs/inode.c	/^inode_ref_dec(struct inode *node) {$/;"	f
inode_ref_inc	kern/fs/vfs/inode.c	/^inode_ref_inc(struct inode *node) {$/;"	f
MAX_INODE_COUNT	kern/fs/vfs/inode.h	64;"	d
VOP_MAGIC	kern/fs/vfs/inode.h	74;"	d
__KERN_FS_VFS_INODE_H__	kern/fs/vfs/inode.h	2;"	d
__device_info	kern/fs/vfs/inode.h	/^        struct device __device_info;$/;"	m	union:inode::__anon5	typeref:struct:inode::__anon5::device
__in_type	kern/fs/vfs/inode.h	44;"	d
__sfs_inode_info	kern/fs/vfs/inode.h	/^        struct sfs_inode __sfs_inode_info;$/;"	m	union:inode::__anon5	typeref:struct:inode::__anon5::sfs_inode
__vop_info	kern/fs/vfs/inode.h	48;"	d
__vop_op	kern/fs/vfs/inode.h	193;"	d
alloc_inode	kern/fs/vfs/inode.h	62;"	d
check_inode_type	kern/fs/vfs/inode.h	46;"	d
in_fs	kern/fs/vfs/inode.h	/^    struct fs *in_fs;$/;"	m	struct:inode	typeref:struct:inode::fs
in_info	kern/fs/vfs/inode.h	/^    } in_info;$/;"	m	struct:inode	typeref:union:inode::__anon5
in_ops	kern/fs/vfs/inode.h	/^    const struct inode_ops *in_ops;$/;"	m	struct:inode	typeref:struct:inode::inode_ops
in_type	kern/fs/vfs/inode.h	/^    } in_type;$/;"	m	struct:inode	typeref:enum:inode::__anon6
info2node	kern/fs/vfs/inode.h	57;"	d
inode	kern/fs/vfs/inode.h	/^struct inode {$/;"	s
inode_open_count	kern/fs/vfs/inode.h	/^inode_open_count(struct inode *node) {$/;"	f
inode_ops	kern/fs/vfs/inode.h	/^struct inode_ops {$/;"	s
inode_ref_count	kern/fs/vfs/inode.h	/^inode_ref_count(struct inode *node) {$/;"	f
inode_type_device_info	kern/fs/vfs/inode.h	/^        inode_type_device_info = 0x1234,$/;"	e	enum:inode::__anon6
inode_type_sfs_inode_info	kern/fs/vfs/inode.h	/^        inode_type_sfs_inode_info,$/;"	e	enum:inode::__anon6
open_count	kern/fs/vfs/inode.h	/^    int open_count;$/;"	m	struct:inode
ref_count	kern/fs/vfs/inode.h	/^    int ref_count;$/;"	m	struct:inode
vop_close	kern/fs/vfs/inode.h	/^    int (*vop_close)(struct inode *node);$/;"	m	struct:inode_ops
vop_close	kern/fs/vfs/inode.h	202;"	d
vop_create	kern/fs/vfs/inode.h	/^    int (*vop_create)(struct inode *node, const char *name, bool excl, struct inode **node_store);$/;"	m	struct:inode_ops
vop_create	kern/fs/vfs/inode.h	214;"	d
vop_fs	kern/fs/vfs/inode.h	218;"	d
vop_fstat	kern/fs/vfs/inode.h	/^    int (*vop_fstat)(struct inode *node, struct stat *stat);$/;"	m	struct:inode_ops
vop_fstat	kern/fs/vfs/inode.h	205;"	d
vop_fsync	kern/fs/vfs/inode.h	/^    int (*vop_fsync)(struct inode *node);$/;"	m	struct:inode_ops
vop_fsync	kern/fs/vfs/inode.h	206;"	d
vop_getdirentry	kern/fs/vfs/inode.h	/^    int (*vop_getdirentry)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_getdirentry	kern/fs/vfs/inode.h	208;"	d
vop_gettype	kern/fs/vfs/inode.h	/^    int (*vop_gettype)(struct inode *node, uint32_t *type_store);$/;"	m	struct:inode_ops
vop_gettype	kern/fs/vfs/inode.h	211;"	d
vop_info	kern/fs/vfs/inode.h	55;"	d
vop_init	kern/fs/vfs/inode.h	219;"	d
vop_ioctl	kern/fs/vfs/inode.h	/^    int (*vop_ioctl)(struct inode *node, int op, void *data);$/;"	m	struct:inode_ops
vop_ioctl	kern/fs/vfs/inode.h	210;"	d
vop_kill	kern/fs/vfs/inode.h	220;"	d
vop_lookup	kern/fs/vfs/inode.h	/^    int (*vop_lookup)(struct inode *node, char *path, struct inode **node_store);$/;"	m	struct:inode_ops
vop_lookup	kern/fs/vfs/inode.h	215;"	d
vop_magic	kern/fs/vfs/inode.h	/^    unsigned long vop_magic;$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	/^    int (*vop_namefile)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	207;"	d
vop_open	kern/fs/vfs/inode.h	/^    int (*vop_open)(struct inode *node, uint32_t open_flags);$/;"	m	struct:inode_ops
vop_open	kern/fs/vfs/inode.h	201;"	d
vop_open_dec	kern/fs/vfs/inode.h	234;"	d
vop_open_inc	kern/fs/vfs/inode.h	233;"	d
vop_read	kern/fs/vfs/inode.h	/^    int (*vop_read)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_read	kern/fs/vfs/inode.h	203;"	d
vop_reclaim	kern/fs/vfs/inode.h	/^    int (*vop_reclaim)(struct inode *node);$/;"	m	struct:inode_ops
vop_reclaim	kern/fs/vfs/inode.h	209;"	d
vop_ref_dec	kern/fs/vfs/inode.h	226;"	d
vop_ref_inc	kern/fs/vfs/inode.h	225;"	d
vop_truncate	kern/fs/vfs/inode.h	/^    int (*vop_truncate)(struct inode *node, off_t len);$/;"	m	struct:inode_ops
vop_truncate	kern/fs/vfs/inode.h	213;"	d
vop_tryseek	kern/fs/vfs/inode.h	/^    int (*vop_tryseek)(struct inode *node, off_t pos);$/;"	m	struct:inode_ops
vop_tryseek	kern/fs/vfs/inode.h	212;"	d
vop_write	kern/fs/vfs/inode.h	/^    int (*vop_write)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_write	kern/fs/vfs/inode.h	204;"	d
__alloc_fs	kern/fs/vfs/vfs.c	/^__alloc_fs(int type) {$/;"	f
bootfs_node	kern/fs/vfs/vfs.c	/^static struct inode *bootfs_node = NULL;$/;"	v	typeref:struct:inode	file:
bootfs_sem	kern/fs/vfs/vfs.c	/^static semaphore_t bootfs_sem;$/;"	v	file:
change_bootfs	kern/fs/vfs/vfs.c	/^change_bootfs(struct inode *node) {$/;"	f	file:
lock_bootfs	kern/fs/vfs/vfs.c	/^lock_bootfs(void) {$/;"	f	file:
unlock_bootfs	kern/fs/vfs/vfs.c	/^unlock_bootfs(void) {$/;"	f	file:
vfs_get_bootfs	kern/fs/vfs/vfs.c	/^vfs_get_bootfs(struct inode **node_store) {$/;"	f
vfs_init	kern/fs/vfs/vfs.c	/^vfs_init(void) {$/;"	f
vfs_set_bootfs	kern/fs/vfs/vfs.c	/^vfs_set_bootfs(char *fsname) {$/;"	f
__KERN_FS_VFS_VFS_H__	kern/fs/vfs/vfs.h	2;"	d
__fs_type	kern/fs/vfs/vfs.h	48;"	d
__fsop_info	kern/fs/vfs/vfs.h	52;"	d
__sfs_info	kern/fs/vfs/vfs.h	/^        struct sfs_fs __sfs_info;                   $/;"	m	union:fs::__anon2	typeref:struct:fs::__anon2::sfs_fs
alloc_fs	kern/fs/vfs/vfs.h	65;"	d
check_fs_type	kern/fs/vfs/vfs.h	50;"	d
fs	kern/fs/vfs/vfs.h	/^struct fs {$/;"	s
fs_cleanup	kern/fs/vfs/vfs.h	/^    void (*fs_cleanup)(struct fs *fs);             \/\/ Cleanup of filesystem.???$/;"	m	struct:fs
fs_get_root	kern/fs/vfs/vfs.h	/^    struct inode *(*fs_get_root)(struct fs *fs);   \/\/ Return root inode of filesystem.$/;"	m	struct:fs	typeref:struct:fs::fs_get_root
fs_info	kern/fs/vfs/vfs.h	/^    } fs_info;                                     \/\/ filesystem-specific data $/;"	m	struct:fs	typeref:union:fs::__anon2
fs_sync	kern/fs/vfs/vfs.h	/^    int (*fs_sync)(struct fs *fs);                 \/\/ Flush all dirty buffers to disk $/;"	m	struct:fs
fs_type	kern/fs/vfs/vfs.h	/^    } fs_type;                                     \/\/ filesystem type $/;"	m	struct:fs	typeref:enum:fs::__anon3
fs_type_sfs_info	kern/fs/vfs/vfs.h	/^        fs_type_sfs_info,$/;"	e	enum:fs::__anon3
fs_unmount	kern/fs/vfs/vfs.h	/^    int (*fs_unmount)(struct fs *fs);              \/\/ Attempt unmount of filesystem.$/;"	m	struct:fs
fsop_cleanup	kern/fs/vfs/vfs.h	71;"	d
fsop_get_root	kern/fs/vfs/vfs.h	69;"	d
fsop_info	kern/fs/vfs/vfs.h	58;"	d
fsop_sync	kern/fs/vfs/vfs.h	68;"	d
fsop_unmount	kern/fs/vfs/vfs.h	70;"	d
info2fs	kern/fs/vfs/vfs.h	60;"	d
check_devname_conflict	kern/fs/vfs/vfsdev.c	/^check_devname_conflict(const char *devname) {$/;"	f	file:
devname	kern/fs/vfs/vfsdev.c	/^    const char *devname;$/;"	m	struct:__anon4	file:
devnode	kern/fs/vfs/vfsdev.c	/^    struct inode *devnode;$/;"	m	struct:__anon4	typeref:struct:__anon4::inode	file:
find_mount	kern/fs/vfs/vfsdev.c	/^find_mount(const char *devname, vfs_dev_t **vdev_store) {$/;"	f	file:
fs	kern/fs/vfs/vfsdev.c	/^    struct fs *fs;$/;"	m	struct:__anon4	typeref:struct:__anon4::fs	file:
le2vdev	kern/fs/vfs/vfsdev.c	23;"	d	file:
lock_vdev_list	kern/fs/vfs/vfsdev.c	/^lock_vdev_list(void) {$/;"	f	file:
mountable	kern/fs/vfs/vfsdev.c	/^    bool mountable;$/;"	m	struct:__anon4	file:
unlock_vdev_list	kern/fs/vfs/vfsdev.c	/^unlock_vdev_list(void) {$/;"	f	file:
vdev_link	kern/fs/vfs/vfsdev.c	/^    list_entry_t vdev_link;$/;"	m	struct:__anon4	file:
vdev_list	kern/fs/vfs/vfsdev.c	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	v	file:
vdev_list_sem	kern/fs/vfs/vfsdev.c	/^static semaphore_t vdev_list_sem;$/;"	v	file:
vfs_add_dev	kern/fs/vfs/vfsdev.c	/^vfs_add_dev(const char *devname, struct inode *devnode, bool mountable) {$/;"	f
vfs_add_fs	kern/fs/vfs/vfsdev.c	/^vfs_add_fs(const char *devname, struct fs *fs) {$/;"	f
vfs_cleanup	kern/fs/vfs/vfsdev.c	/^vfs_cleanup(void) {$/;"	f
vfs_dev_t	kern/fs/vfs/vfsdev.c	/^} vfs_dev_t;$/;"	t	typeref:struct:__anon4	file:
vfs_devlist_init	kern/fs/vfs/vfsdev.c	/^vfs_devlist_init(void) {$/;"	f
vfs_do_add	kern/fs/vfs/vfsdev.c	/^vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs, bool mountable) {$/;"	f	file:
vfs_get_devname	kern/fs/vfs/vfsdev.c	/^vfs_get_devname(struct fs *fs) {$/;"	f
vfs_get_root	kern/fs/vfs/vfsdev.c	/^vfs_get_root(const char *devname, struct inode **node_store) {$/;"	f
vfs_mount	kern/fs/vfs/vfsdev.c	/^vfs_mount(const char *devname, int (*mountfunc)(struct device *dev, struct fs **fs_store)) {$/;"	f
vfs_unmount	kern/fs/vfs/vfsdev.c	/^vfs_unmount(const char *devname) {$/;"	f
vfs_unmount_all	kern/fs/vfs/vfsdev.c	/^vfs_unmount_all(void) {$/;"	f
vfs_close	kern/fs/vfs/vfsfile.c	/^vfs_close(struct inode *node) {$/;"	f
vfs_link	kern/fs/vfs/vfsfile.c	/^vfs_link(char *old_path, char *new_path) {$/;"	f
vfs_mkdir	kern/fs/vfs/vfsfile.c	/^vfs_mkdir(char *path){$/;"	f
vfs_open	kern/fs/vfs/vfsfile.c	/^vfs_open(char *path, uint32_t open_flags, struct inode **node_store) {$/;"	f
vfs_readlink	kern/fs/vfs/vfsfile.c	/^vfs_readlink(char *path, struct iobuf *iob) {$/;"	f
vfs_rename	kern/fs/vfs/vfsfile.c	/^vfs_rename(char *old_path, char *new_path) {$/;"	f
vfs_symlink	kern/fs/vfs/vfsfile.c	/^vfs_symlink(char *old_path, char *new_path) {$/;"	f
vfs_unlink	kern/fs/vfs/vfsfile.c	/^vfs_unlink(char *path) {$/;"	f
get_device	kern/fs/vfs/vfslookup.c	/^get_device(char *path, char **subpath, struct inode **node_store) {$/;"	f	file:
vfs_lookup	kern/fs/vfs/vfslookup.c	/^vfs_lookup(char *path, struct inode **node_store) {$/;"	f
vfs_lookup_parent	kern/fs/vfs/vfslookup.c	/^vfs_lookup_parent(char *path, struct inode **node_store, char **endp){$/;"	f
get_cwd_nolock	kern/fs/vfs/vfspath.c	/^get_cwd_nolock(void) {$/;"	f	file:
lock_cfs	kern/fs/vfs/vfspath.c	/^lock_cfs(void) {$/;"	f	file:
set_cwd_nolock	kern/fs/vfs/vfspath.c	/^set_cwd_nolock(struct inode *pwd) {$/;"	f	file:
unlock_cfs	kern/fs/vfs/vfspath.c	/^unlock_cfs(void) {$/;"	f	file:
vfs_chdir	kern/fs/vfs/vfspath.c	/^vfs_chdir(char *path) {$/;"	f
vfs_get_curdir	kern/fs/vfs/vfspath.c	/^vfs_get_curdir(struct inode **dir_store) {$/;"	f
vfs_getcwd	kern/fs/vfs/vfspath.c	/^vfs_getcwd(struct iobuf *iob) {$/;"	f
vfs_set_curdir	kern/fs/vfs/vfspath.c	/^vfs_set_curdir(struct inode *dir) {$/;"	f
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
relocated	kern/init/entry.S	/^relocated:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
BUFSIZE	kern/libs/readline.c	3;"	d	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
stradd	kern/libs/string.c	/^stradd(const char *src1, const char *src2) {$/;"	f
strdup	kern/libs/string.c	/^strdup(const char *src) {$/;"	f
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_list	kern/mm/default_pmm.c	59;"	d	file:
nr_free	kern/mm/default_pmm.c	60;"	d	file:
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_allocated	kern/mm/kmalloc.c	/^slob_allocated(void) {$/;"	f
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_init	kern/mm/kmalloc.c	/^slob_init(void) {$/;"	f
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
__KERN_MM_KMALLOC_H__	kern/mm/kmalloc.h	2;"	d
ClearPageProperty	kern/mm/memlayout.h	146;"	d
ClearPageReserved	kern/mm/memlayout.h	143;"	d
DPL_KERNEL	kern/mm/memlayout.h	20;"	d
DPL_USER	kern/mm/memlayout.h	21;"	d
E820MAX	kern/mm/memlayout.h	111;"	d
E820_ARM	kern/mm/memlayout.h	112;"	d
E820_ARR	kern/mm/memlayout.h	113;"	d
GD_KDATA	kern/mm/memlayout.h	15;"	d
GD_KTEXT	kern/mm/memlayout.h	14;"	d
GD_TSS	kern/mm/memlayout.h	18;"	d
GD_UDATA	kern/mm/memlayout.h	17;"	d
GD_UTEXT	kern/mm/memlayout.h	16;"	d
KERNBASE	kern/mm/memlayout.h	70;"	d
KERNEL_CS	kern/mm/memlayout.h	23;"	d
KERNEL_DS	kern/mm/memlayout.h	24;"	d
KERNTOP	kern/mm/memlayout.h	72;"	d
KERN_ACCESS	kern/mm/memlayout.h	97;"	d
KMEMSIZE	kern/mm/memlayout.h	71;"	d
KSTACKPAGE	kern/mm/memlayout.h	82;"	d
KSTACKSIZE	kern/mm/memlayout.h	83;"	d
PG_property	kern/mm/memlayout.h	140;"	d
PG_reserved	kern/mm/memlayout.h	139;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	147;"	d
PageReserved	kern/mm/memlayout.h	144;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SetPageProperty	kern/mm/memlayout.h	145;"	d
SetPageReserved	kern/mm/memlayout.h	142;"	d
USERBASE	kern/mm/memlayout.h	90;"	d
USERTOP	kern/mm/memlayout.h	85;"	d
USER_ACCESS	kern/mm/memlayout.h	94;"	d
USER_CS	kern/mm/memlayout.h	25;"	d
USER_DS	kern/mm/memlayout.h	26;"	d
USTAB	kern/mm/memlayout.h	92;"	d
USTACKPAGE	kern/mm/memlayout.h	87;"	d
USTACKSIZE	kern/mm/memlayout.h	88;"	d
USTACKTOP	kern/mm/memlayout.h	86;"	d
UTEXT	kern/mm/memlayout.h	91;"	d
VPT	kern/mm/memlayout.h	80;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon10
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon11
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon11
le2page	kern/mm/memlayout.h	150;"	d
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon10
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon11
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ the num of free block, used in first fit pm manager$/;"	m	struct:Page
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon10
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon10
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PPN	kern/mm/mmu.h	210;"	d
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	kern/mm/mmu.h	28;"	d
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
KADDR	kern/mm/pmm.h	69;"	d
PADDR	kern/mm/pmm.h	57;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
free_list	kern/mm/swap.c	176;"	d	file:
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
nr_free	kern/mm/swap.c	177;"	d	file:
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_offset	kern/mm/swap.h	25;"	d
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_string	kern/mm/vmm.c	/^copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn) {$/;"	f
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
VM_EXEC	kern/mm/vmm.h	29;"	d
VM_READ	kern/mm/vmm.h	27;"	d
VM_STACK	kern/mm/vmm.h	30;"	d
VM_WRITE	kern/mm/vmm.h	28;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
le2vma	kern/mm/vmm.h	24;"	d
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
locked_by	kern/mm/vmm.h	/^    int locked_by;                 \/\/ the lock owner process's pid$/;"	m	struct:mm_struct
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_sem	kern/mm/vmm.h	/^    semaphore_t mm_sem;            \/\/ mutex for using dup_mmap fun to duplicat the mm $/;"	m	struct:mm_struct
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma, not include the vm_end itself$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/ start addr of vma      $/;"	m	struct:vma_struct
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
HASH_LIST_SIZE	kern/process/proc.c	69;"	d	file:
HASH_SHIFT	kern/process/proc.c	68;"	d	file:
KERNEL_EXECVE	kern/process/proc.c	993;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	995;"	d	file:
KERNEL_EXECVE3	kern/process/proc.c	999;"	d	file:
__KERNEL_EXECVE	kern/process/proc.c	986;"	d	file:
__KERNEL_EXECVE3	kern/process/proc.c	997;"	d	file:
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
copy_files	kern/process/proc.c	/^copy_files(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_kargv	kern/process/proc.c	/^copy_kargv(struct mm_struct *mm, int argc, char **kargv, const char **argv) {$/;"	f	file:
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
do_execve	kern/process/proc.c	/^do_execve(const char *name, int argc, const char **argv) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_sleep	kern/process/proc.c	/^do_sleep(unsigned int time) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, const char **argv) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
lab6_set_priority	kern/process/proc.c	/^lab6_set_priority(uint32_t priority)$/;"	f
load_icode	kern/process/proc.c	/^load_icode(int fd, int argc, char **kargv) {$/;"	f	file:
load_icode_read	kern/process/proc.c	/^load_icode_read(int fd, void *buf, size_t len, off_t offset) {$/;"	f	file:
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
pid_hashfn	kern/process/proc.c	70;"	d	file:
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
put_files	kern/process/proc.c	/^put_files(struct proc_struct *proc) {$/;"	f	file:
put_kargv	kern/process/proc.c	/^put_kargv(int argc, char **kargv) {$/;"	f	file:
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
MAX_PID	kern/process/proc.h	39;"	d
MAX_PROCESS	kern/process/proc.h	38;"	d
PF_EXITING	kern/process/proc.h	72;"	d
PROC_NAME_LEN	kern/process/proc.h	37;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
WT_CHILD	kern/process/proc.h	75;"	d
WT_INTERRUPTED	kern/process/proc.h	74;"	d
WT_KBD	kern/process/proc.h	78;"	d
WT_KSEM	kern/process/proc.h	76;"	d
WT_TIMER	kern/process/proc.h	77;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
filesp	kern/process/proc.h	/^    struct files_struct *filesp;                \/\/ the file related info(pwd, files_count, files_array, fs_semaphore) of process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::files_struct
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
lab6_priority	kern/process/proc.h	/^    uint32_t lab6_priority;                     \/\/ FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)$/;"	m	struct:proc_struct
lab6_run_pool	kern/process/proc.h	/^    skew_heap_entry_t lab6_run_pool;            \/\/ FOR LAB6 ONLY: the entry in the run pool$/;"	m	struct:proc_struct
lab6_stride	kern/process/proc.h	/^    uint32_t lab6_stride;                       \/\/ FOR LAB6 ONLY: the current stride of the process$/;"	m	struct:proc_struct
le2proc	kern/process/proc.h	80;"	d
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list$/;"	m	struct:proc_struct
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
rq	kern/process/proc.h	/^    struct run_queue *rq;                       \/\/ running queue contains Process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::run_queue
run_link	kern/process/proc.h	/^    list_entry_t run_link;                      \/\/ the entry linked in run queue$/;"	m	struct:proc_struct
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
time_slice	kern/process/proc.h	/^    int time_slice;                             \/\/ time slice for occupying the CPU$/;"	m	struct:proc_struct
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
BIG_STRIDE	kern/schedule/default_sched.c	11;"	d	file:
USE_SKEW_HEAP	kern/schedule/default_sched.c	7;"	d	file:
default_sched_class	kern/schedule/default_sched.c	/^struct sched_class default_sched_class = {$/;"	v	typeref:struct:sched_class
proc_stride_comp_f	kern/schedule/default_sched.c	/^proc_stride_comp_f(void *a, void *b)$/;"	f	file:
stride_dequeue	kern/schedule/default_sched.c	/^stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_enqueue	kern/schedule/default_sched.c	/^stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_init	kern/schedule/default_sched.c	/^stride_init(struct run_queue *rq) {$/;"	f	file:
stride_pick_next	kern/schedule/default_sched.c	/^stride_pick_next(struct run_queue *rq) {$/;"	f	file:
stride_proc_tick	kern/schedule/default_sched.c	/^stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
__KERN_SCHEDULE_SCHED_RR_H__	kern/schedule/default_sched.h	2;"	d
__rq	kern/schedule/sched.c	/^static struct run_queue __rq;$/;"	v	typeref:struct:run_queue	file:
add_timer	kern/schedule/sched.c	/^add_timer(timer_t *timer) {$/;"	f
del_timer	kern/schedule/sched.c	/^del_timer(timer_t *timer) {$/;"	f
rq	kern/schedule/sched.c	/^static struct run_queue *rq;$/;"	v	typeref:struct:run_queue	file:
run_timer_list	kern/schedule/sched.c	/^run_timer_list(void) {$/;"	f
sched_class	kern/schedule/sched.c	/^static struct sched_class *sched_class;$/;"	v	typeref:struct:sched_class	file:
sched_class_dequeue	kern/schedule/sched.c	/^sched_class_dequeue(struct proc_struct *proc) {$/;"	f	file:
sched_class_enqueue	kern/schedule/sched.c	/^sched_class_enqueue(struct proc_struct *proc) {$/;"	f	file:
sched_class_pick_next	kern/schedule/sched.c	/^sched_class_pick_next(void) {$/;"	f	file:
sched_class_proc_tick	kern/schedule/sched.c	/^sched_class_proc_tick(struct proc_struct *proc) {$/;"	f	file:
sched_init	kern/schedule/sched.c	/^sched_init(void) {$/;"	f
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
timer_list	kern/schedule/sched.c	/^static list_entry_t timer_list;$/;"	v	file:
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
MAX_TIME_SLICE	kern/schedule/sched.h	8;"	d
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
dequeue	kern/schedule/sched.h	/^    void (*dequeue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
enqueue	kern/schedule/sched.h	/^    void (*enqueue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
expires	kern/schedule/sched.h	/^    unsigned int expires;       \/\/the expire time$/;"	m	struct:__anon12
init	kern/schedule/sched.h	/^    void (*init)(struct run_queue *rq);$/;"	m	struct:sched_class
lab6_run_pool	kern/schedule/sched.h	/^    skew_heap_entry_t *lab6_run_pool;$/;"	m	struct:run_queue
le2timer	kern/schedule/sched.h	18;"	d
max_time_slice	kern/schedule/sched.h	/^    int max_time_slice;$/;"	m	struct:run_queue
name	kern/schedule/sched.h	/^    const char *name;$/;"	m	struct:sched_class
pick_next	kern/schedule/sched.h	/^    struct proc_struct *(*pick_next)(struct run_queue *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next
proc	kern/schedule/sched.h	/^    struct proc_struct *proc;   \/\/the proc wait in this timer. If the expire time is end, then this proc will be scheduled$/;"	m	struct:__anon12	typeref:struct:__anon12::proc_struct
proc_num	kern/schedule/sched.h	/^    unsigned int proc_num;$/;"	m	struct:run_queue
proc_tick	kern/schedule/sched.h	/^    void (*proc_tick)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
run_list	kern/schedule/sched.h	/^    list_entry_t run_list;$/;"	m	struct:run_queue
run_queue	kern/schedule/sched.h	/^struct run_queue {$/;"	s
sched_class	kern/schedule/sched.h	/^struct sched_class {$/;"	s
timer_init	kern/schedule/sched.h	/^timer_init(timer_t *timer, struct proc_struct *proc, int expires) {$/;"	f
timer_link	kern/schedule/sched.h	/^    list_entry_t timer_link;    \/\/the timer list$/;"	m	struct:__anon12
timer_t	kern/schedule/sched.h	/^} timer_t;$/;"	t	typeref:struct:__anon12
EATING	kern/sync/check_sync.c	12;"	d	file:
HUNGRY	kern/sync/check_sync.c	11;"	d	file:
LEFT	kern/sync/check_sync.c	8;"	d	file:
N	kern/sync/check_sync.c	7;"	d	file:
RIGHT	kern/sync/check_sync.c	9;"	d	file:
SLEEP_TIME	kern/sync/check_sync.c	14;"	d	file:
THINKING	kern/sync/check_sync.c	10;"	d	file:
TIMES	kern/sync/check_sync.c	13;"	d	file:
check_sync	kern/sync/check_sync.c	/^void check_sync(void){$/;"	f
mt	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	v
mtp	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	v
mutex	kern/sync/check_sync.c	/^semaphore_t mutex; \/* 临界区互斥 *\/$/;"	v
phi_put_forks_condvar	kern/sync/check_sync.c	/^void phi_put_forks_condvar(int i) {$/;"	f
phi_put_forks_sema	kern/sync/check_sync.c	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_take_forks_condvar	kern/sync/check_sync.c	/^void phi_take_forks_condvar(int i) {$/;"	f
phi_take_forks_sema	kern/sync/check_sync.c	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_test_condvar	kern/sync/check_sync.c	/^void phi_test_condvar (i) { $/;"	f
phi_test_sema	kern/sync/check_sync.c	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
philosopher_proc_condvar	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_condvar[N]; \/\/ N philosopher$/;"	v	typeref:struct:proc_struct
philosopher_proc_sema	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_sema[N];$/;"	v	typeref:struct:proc_struct
philosopher_using_condvar	kern/sync/check_sync.c	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	f
philosopher_using_semaphore	kern/sync/check_sync.c	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	f
s	kern/sync/check_sync.c	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	v
state_condvar	kern/sync/check_sync.c	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	v
state_sema	kern/sync/check_sync.c	/^int state_sema[N]; \/* 记录每个人状态的数组 *\/$/;"	v
cond_signal	kern/sync/monitor.c	/^cond_signal (condvar_t *cvp) {$/;"	f
cond_wait	kern/sync/monitor.c	/^cond_wait (condvar_t *cvp) {$/;"	f
monitor_init	kern/sync/monitor.c	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	f
__KERN_SYNC_MOINTOR_CONDVAR_H__	kern/sync/monitor.h	2;"	d
condvar	kern/sync/monitor.h	/^typedef struct condvar{$/;"	s
condvar_t	kern/sync/monitor.h	/^} condvar_t;$/;"	t	typeref:struct:condvar
count	kern/sync/monitor.h	/^    int count;              \/\/ the number of waiters on condvar$/;"	m	struct:condvar
cv	kern/sync/monitor.h	/^    condvar_t *cv;          \/\/ the condvars in monitor$/;"	m	struct:monitor
monitor	kern/sync/monitor.h	/^typedef struct monitor{$/;"	s
monitor_t	kern/sync/monitor.h	/^typedef struct monitor monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	kern/sync/monitor.h	/^} monitor_t;$/;"	t	typeref:struct:monitor
mutex	kern/sync/monitor.h	/^    semaphore_t mutex;      \/\/ the mutex lock for going into the routines in monitor, should be initialized to 1$/;"	m	struct:monitor
next	kern/sync/monitor.h	/^    semaphore_t next;       \/\/ the next semaphore is used to down the signaling proc itself, and the other OR wakeuped waiting proc should wake up the sleeped signaling proc.$/;"	m	struct:monitor
next_count	kern/sync/monitor.h	/^    int next_count;         \/\/ the number of of sleeped signaling proc$/;"	m	struct:monitor
owner	kern/sync/monitor.h	/^    monitor_t * owner;      \/\/ the owner(monitor) of this condvar$/;"	m	struct:condvar
sem	kern/sync/monitor.h	/^    semaphore_t sem;        \/\/ the sem semaphore  is used to down the waiting proc, and the signaling proc should up the waiting proc$/;"	m	struct:condvar
__down	kern/sync/sem.c	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__up	kern/sync/sem.c	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
down	kern/sync/sem.c	/^down(semaphore_t *sem) {$/;"	f
sem_init	kern/sync/sem.c	/^sem_init(semaphore_t *sem, int value) {$/;"	f
try_down	kern/sync/sem.c	/^try_down(semaphore_t *sem) {$/;"	f
up	kern/sync/sem.c	/^up(semaphore_t *sem) {$/;"	f
__KERN_SYNC_SEM_H__	kern/sync/sem.h	2;"	d
semaphore_t	kern/sync/sem.h	/^} semaphore_t;$/;"	t	typeref:struct:__anon13
value	kern/sync/sem.h	/^    int value;$/;"	m	struct:__anon13
wait_queue	kern/sync/sem.h	/^    wait_queue_t wait_queue;$/;"	m	struct:__anon13
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_save	kern/sync/sync.h	27;"	d
wait_current_set	kern/sync/wait.c	/^wait_current_set(wait_queue_t *queue, wait_t *wait, uint32_t wait_state) {$/;"	f
wait_in_queue	kern/sync/wait.c	/^wait_in_queue(wait_t *wait) {$/;"	f
wait_init	kern/sync/wait.c	/^wait_init(wait_t *wait, struct proc_struct *proc) {$/;"	f
wait_queue_add	kern/sync/wait.c	/^wait_queue_add(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_del	kern/sync/wait.c	/^wait_queue_del(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_empty	kern/sync/wait.c	/^wait_queue_empty(wait_queue_t *queue) {$/;"	f
wait_queue_first	kern/sync/wait.c	/^wait_queue_first(wait_queue_t *queue) {$/;"	f
wait_queue_init	kern/sync/wait.c	/^wait_queue_init(wait_queue_t *queue) {$/;"	f
wait_queue_last	kern/sync/wait.c	/^wait_queue_last(wait_queue_t *queue) {$/;"	f
wait_queue_next	kern/sync/wait.c	/^wait_queue_next(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_prev	kern/sync/wait.c	/^wait_queue_prev(wait_queue_t *queue, wait_t *wait) {$/;"	f
wakeup_first	kern/sync/wait.c	/^wakeup_first(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_queue	kern/sync/wait.c	/^wakeup_queue(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_wait	kern/sync/wait.c	/^wakeup_wait(wait_queue_t *queue, wait_t *wait, uint32_t wakeup_flags, bool del) {$/;"	f
__KERN_SYNC_WAIT_H__	kern/sync/wait.h	2;"	d
le2wait	kern/sync/wait.h	19;"	d
proc	kern/sync/wait.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon15	typeref:struct:__anon15::proc_struct
wait_current_del	kern/sync/wait.h	40;"	d
wait_head	kern/sync/wait.h	/^    list_entry_t wait_head;$/;"	m	struct:__anon14
wait_link	kern/sync/wait.h	/^    list_entry_t wait_link;$/;"	m	struct:__anon15
wait_queue	kern/sync/wait.h	/^    wait_queue_t *wait_queue;$/;"	m	struct:__anon15
wait_queue_t	kern/sync/wait.h	/^} wait_queue_t;$/;"	t	typeref:struct:__anon14
wait_t	kern/sync/wait.h	/^} wait_t;$/;"	t	typeref:struct:__anon15
wakeup_flags	kern/sync/wait.h	/^    uint32_t wakeup_flags;$/;"	m	struct:__anon15
NUM_SYSCALLS	kern/syscall/syscall.c	185;"	d	file:
sys_close	kern/syscall/syscall.c	/^sys_close(uint32_t arg[]) {$/;"	f	file:
sys_dup	kern/syscall/syscall.c	/^sys_dup(uint32_t arg[]) {$/;"	f	file:
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fstat	kern/syscall/syscall.c	/^sys_fstat(uint32_t arg[]) {$/;"	f	file:
sys_fsync	kern/syscall/syscall.c	/^sys_fsync(uint32_t arg[]) {$/;"	f	file:
sys_getcwd	kern/syscall/syscall.c	/^sys_getcwd(uint32_t arg[]) {$/;"	f	file:
sys_getdirentry	kern/syscall/syscall.c	/^sys_getdirentry(uint32_t arg[]) {$/;"	f	file:
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_gettime	kern/syscall/syscall.c	/^sys_gettime(uint32_t arg[]) {$/;"	f	file:
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_lab6_set_priority	kern/syscall/syscall.c	/^sys_lab6_set_priority(uint32_t arg[])$/;"	f	file:
sys_open	kern/syscall/syscall.c	/^sys_open(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_read	kern/syscall/syscall.c	/^sys_read(uint32_t arg[]) {$/;"	f	file:
sys_seek	kern/syscall/syscall.c	/^sys_seek(uint32_t arg[]) {$/;"	f	file:
sys_sleep	kern/syscall/syscall.c	/^sys_sleep(uint32_t arg[]) {$/;"	f	file:
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_write	kern/syscall/syscall.c	/^sys_write(uint32_t arg[]) {$/;"	f	file:
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
TICK_NUM	kern/trap/trap.c	20;"	d	file:
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_TSS	kern/trap/trap.h	19;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
CHAR_BIT	libs/defs.h	12;"	d
NULL	libs/defs.h	5;"	d
ROUNDDOWN	libs/defs.h	48;"	d
ROUNDUP	libs/defs.h	54;"	d
ROUNDUP_DIV	libs/defs.h	60;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__always_inline	libs/defs.h	8;"	d
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
off_t	libs/defs.h	/^typedef intptr_t off_t;$/;"	t
offsetof	libs/defs.h	66;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
to_struct	libs/defs.h	75;"	d
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
__LIBS_DIRENT_H__	libs/dirent.h	2;"	d
dirent	libs/dirent.h	/^struct dirent {$/;"	s
name	libs/dirent.h	/^    char name[FS_MAX_FNAME_LEN + 1];$/;"	m	struct:dirent
offset	libs/dirent.h	/^    off_t offset;$/;"	m	struct:dirent
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
MAXERROR	libs/error.h	30;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
__LIBS_LIST_H__	libs/list.h	2;"	d
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*, int), int fd, void *putdat,$/;"	f	file:
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, va_list ap) {$/;"	f
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
rand	libs/rand.c	/^rand(void) {$/;"	f
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
__LIBS_SKEW_HEAP_H__	libs/skew_heap.h	2;"	d
compare_f	libs/skew_heap.h	/^typedef int(*compare_f)(void *a, void *b);$/;"	t
left	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
parent	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::skew_heap_entry
right	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
skew_heap_entry	libs/skew_heap.h	/^struct skew_heap_entry {$/;"	s
skew_heap_entry_t	libs/skew_heap.h	/^typedef struct skew_heap_entry skew_heap_entry_t;$/;"	t	typeref:struct:skew_heap_entry
skew_heap_init	libs/skew_heap.h	/^skew_heap_init(skew_heap_entry_t *a)$/;"	f
skew_heap_insert	libs/skew_heap.h	/^skew_heap_insert(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_merge	libs/skew_heap.h	/^skew_heap_merge(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_remove	libs/skew_heap.h	/^skew_heap_remove(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
S_IFBLK	libs/stat.h	18;"	d
S_IFCHR	libs/stat.h	17;"	d
S_IFDIR	libs/stat.h	15;"	d
S_IFLNK	libs/stat.h	16;"	d
S_IFMT	libs/stat.h	13;"	d
S_IFREG	libs/stat.h	14;"	d
S_ISBLK	libs/stat.h	24;"	d
S_ISCHR	libs/stat.h	23;"	d
S_ISDIR	libs/stat.h	21;"	d
S_ISLNK	libs/stat.h	22;"	d
S_ISREG	libs/stat.h	20;"	d
__LIBS_STAT_H__	libs/stat.h	2;"	d
st_blocks	libs/stat.h	/^    size_t st_blocks;                   \/\/ number of blocks file is using$/;"	m	struct:stat
st_mode	libs/stat.h	/^    uint32_t st_mode;                   \/\/ protection mode and file type$/;"	m	struct:stat
st_nlinks	libs/stat.h	/^    size_t st_nlinks;                   \/\/ number of hard links$/;"	m	struct:stat
st_size	libs/stat.h	/^    size_t st_size;                     \/\/ file size (bytes)$/;"	m	struct:stat
stat	libs/stat.h	/^struct stat {$/;"	s
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
RAND_MAX	libs/stdlib.h	7;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
strcat	libs/string.c	/^strcat(char *dst, const char *src) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
__LIBS_STRING_H__	libs/string.h	2;"	d
CLONE_FS	libs/unistd.h	38;"	d
CLONE_THREAD	libs/unistd.h	37;"	d
CLONE_VM	libs/unistd.h	36;"	d
EXEC_MAX_ARG_LEN	libs/unistd.h	65;"	d
EXEC_MAX_ARG_NUM	libs/unistd.h	64;"	d
FS_MAX_DNAME_LEN	libs/unistd.h	60;"	d
FS_MAX_FNAME_LEN	libs/unistd.h	61;"	d
FS_MAX_FPATH_LEN	libs/unistd.h	62;"	d
LSEEK_CUR	libs/unistd.h	57;"	d
LSEEK_END	libs/unistd.h	58;"	d
LSEEK_SET	libs/unistd.h	56;"	d
NO_FD	libs/unistd.h	53;"	d
O_ACCMODE	libs/unistd.h	51;"	d
O_APPEND	libs/unistd.h	49;"	d
O_CREAT	libs/unistd.h	46;"	d
O_EXCL	libs/unistd.h	47;"	d
O_RDONLY	libs/unistd.h	42;"	d
O_RDWR	libs/unistd.h	44;"	d
O_TRUNC	libs/unistd.h	48;"	d
O_WRONLY	libs/unistd.h	43;"	d
SYS_clone	libs/unistd.h	11;"	d
SYS_close	libs/unistd.h	23;"	d
SYS_dup	libs/unistd.h	31;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_fstat	libs/unistd.h	27;"	d
SYS_fsync	libs/unistd.h	28;"	d
SYS_getcwd	libs/unistd.h	29;"	d
SYS_getdirentry	libs/unistd.h	30;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_lab6_set_priority	libs/unistd.h	33;"	d
SYS_mmap	libs/unistd.h	17;"	d
SYS_munmap	libs/unistd.h	18;"	d
SYS_open	libs/unistd.h	22;"	d
SYS_pgdir	libs/unistd.h	21;"	d
SYS_putc	libs/unistd.h	20;"	d
SYS_read	libs/unistd.h	24;"	d
SYS_seek	libs/unistd.h	26;"	d
SYS_shmem	libs/unistd.h	19;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_write	libs/unistd.h	25;"	d
SYS_yield	libs/unistd.h	12;"	d
T_SYSCALL	libs/unistd.h	4;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	291;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	272;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	258;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	218;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	242;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
barrier	libs/x86.h	21;"	d
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
do_div	libs/x86.h	6;"	d
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
inw	libs/x86.h	/^inw(uint16_t port) {$/;"	f
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
sti	libs/x86.h	/^sti(void) {$/;"	f
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
cont	obj/bootblock.asm	/^cont:$/;"	l
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
void	obj/bootblock.asm	/^void$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
IOBUF_SIZE	obj/kernel.asm	/^#define IOBUF_SIZE                          4096$/;"	d
KERNEL_EXECVE3	obj/kernel.asm	/^#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)$/;"	d
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TIMER_16BIT	obj/kernel.asm	/^#define TIMER_16BIT     0x30                    \/\/ r\/w counter 16 bits, LSB first$/;"	d
TIMER_RATEGEN	obj/kernel.asm	/^#define TIMER_RATEGEN   0x04                    \/\/ mode 2, rate generator$/;"	d
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
alen	obj/kernel.asm	/^                alen = resid;$/;"	d
alen	obj/kernel.asm	/^            alen = len;$/;"	d
alen	obj/kernel.asm	/^        alen = len;$/;"	d
alen	obj/kernel.asm	/^    alen = iob->io_resid - resid - 2;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
argv_size	obj/kernel.asm	/^    argv_size = 0;$/;"	d
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_fs	obj/kernel.asm	/^bad_dup_cleanup_fs:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_files_struct	obj/kernel.asm	/^bad_files_struct:$/;"	l
bad_fork_cleanup_fs	obj/kernel.asm	/^bad_fork_cleanup_fs:  \/\/for LAB8$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 e0 14 00 	lgdtl  0x14e018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 e0 14 c0       	mov    $0xc014e000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba 04 32 15 c0       	mov    $0xc0153204,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 d0 ee 14 c0       	mov    $0xc014eed0,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	00 $/;"	l
c010004a	obj/kernel.asm	/^c010004a:	c7 04 24 d0 ee 14 c0 	movl   $0xc014eed0,(%esp)$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 c3 53 01 00       	call   c0115419 <memset>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	e8 7d 17 00 00       	call   c01017d8 <cons_init>$/;"	l
c010005b	obj/kernel.asm	/^c010005b:	c7 45 f4 c0 55 11 c0 	movl   $0xc01155c0,-0xc(%ebp)$/;"	l
c0100062	obj/kernel.asm	/^c0100062:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100065	obj/kernel.asm	/^c0100065:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100069	obj/kernel.asm	/^c0100069:	c7 04 24 dc 55 11 c0 	movl   $0xc01155dc,(%esp)$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 f0 02 00 00       	call   c0100365 <cprintf>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 f8 09 00 00       	call   c0100a72 <print_kerninfo>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 a7 00 00 00       	call   c0100126 <grade_backtrace>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 bf 56 00 00       	call   c0105743 <pmm_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 2d 21 00 00       	call   c01021b6 <pic_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 7f 22 00 00       	call   c010230d <idt_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 e0 85 00 00       	call   c0108673 <vmm_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 b3 e3 00 00       	call   c010e44b <sched_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 52 dc 00 00       	call   c010dcef <proc_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 67 18 00 00       	call   c0101909 <ide_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 58 6d 00 00       	call   c0106dff <swap_init>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 aa ae 00 00       	call   c010af56 <fs_init>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	e8 dd 0e 00 00       	call   c0100f8e <clock_init>$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1:	e8 6e 20 00 00       	call   c0102124 <intr_enable>$/;"	l
c01000b6	obj/kernel.asm	/^c01000b6:	e8 42 de 00 00       	call   c010defd <cpu_idle>$/;"	l
c01000bb	obj/kernel.asm	/^c01000bb <grade_backtrace2>:$/;"	l
c01000bb	obj/kernel.asm	/^c01000bb:	55                   	push   %ebp$/;"	l
c01000bc	obj/kernel.asm	/^c01000bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01000be	obj/kernel.asm	/^c01000be:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01000c1	obj/kernel.asm	/^c01000c1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01000c8	obj/kernel.asm	/^c01000c8:	00 $/;"	l
c01000c9	obj/kernel.asm	/^c01000c9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01000d0	obj/kernel.asm	/^c01000d0:	00 $/;"	l
c01000d1	obj/kernel.asm	/^c01000d1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c01000d8	obj/kernel.asm	/^c01000d8:	e8 d9 0d 00 00       	call   c0100eb6 <mon_backtrace>$/;"	l
c01000dd	obj/kernel.asm	/^c01000dd:	c9                   	leave  $/;"	l
c01000de	obj/kernel.asm	/^c01000de:	c3                   	ret    $/;"	l
c01000df	obj/kernel.asm	/^c01000df <grade_backtrace1>:$/;"	l
c01000df	obj/kernel.asm	/^c01000df:	55                   	push   %ebp$/;"	l
c01000e0	obj/kernel.asm	/^c01000e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01000e2	obj/kernel.asm	/^c01000e2:	53                   	push   %ebx$/;"	l
c01000e3	obj/kernel.asm	/^c01000e3:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01000e6	obj/kernel.asm	/^c01000e6:	8d 5d 0c             	lea    0xc(%ebp),%ebx$/;"	l
c01000e9	obj/kernel.asm	/^c01000e9:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c01000ec	obj/kernel.asm	/^c01000ec:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c01000ef	obj/kernel.asm	/^c01000ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000f2	obj/kernel.asm	/^c01000f2:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c01000f6	obj/kernel.asm	/^c01000f6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01000fa	obj/kernel.asm	/^c01000fa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01000fe	obj/kernel.asm	/^c01000fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100101	obj/kernel.asm	/^c0100101:	e8 b5 ff ff ff       	call   c01000bb <grade_backtrace2>$/;"	l
c0100106	obj/kernel.asm	/^c0100106:	83 c4 14             	add    $0x14,%esp$/;"	l
c0100109	obj/kernel.asm	/^c0100109:	5b                   	pop    %ebx$/;"	l
c010010a	obj/kernel.asm	/^c010010a:	5d                   	pop    %ebp$/;"	l
c010010b	obj/kernel.asm	/^c010010b:	c3                   	ret    $/;"	l
c010010c	obj/kernel.asm	/^c010010c <grade_backtrace0>:$/;"	l
c010010c	obj/kernel.asm	/^c010010c:	55                   	push   %ebp$/;"	l
c010010d	obj/kernel.asm	/^c010010d:	89 e5                	mov    %esp,%ebp$/;"	l
c010010f	obj/kernel.asm	/^c010010f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100112	obj/kernel.asm	/^c0100112:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100115	obj/kernel.asm	/^c0100115:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100119	obj/kernel.asm	/^c0100119:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010011c	obj/kernel.asm	/^c010011c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010011f	obj/kernel.asm	/^c010011f:	e8 bb ff ff ff       	call   c01000df <grade_backtrace1>$/;"	l
c0100124	obj/kernel.asm	/^c0100124:	c9                   	leave  $/;"	l
c0100125	obj/kernel.asm	/^c0100125:	c3                   	ret    $/;"	l
c0100126	obj/kernel.asm	/^c0100126 <grade_backtrace>:$/;"	l
c0100126	obj/kernel.asm	/^c0100126:	55                   	push   %ebp$/;"	l
c0100127	obj/kernel.asm	/^c0100127:	89 e5                	mov    %esp,%ebp$/;"	l
c0100129	obj/kernel.asm	/^c0100129:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010012c	obj/kernel.asm	/^c010012c:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100131	obj/kernel.asm	/^c0100131:	c7 44 24 08 00 00 ff 	movl   $0xffff0000,0x8(%esp)$/;"	l
c0100138	obj/kernel.asm	/^c0100138:	ff $/;"	l
c0100139	obj/kernel.asm	/^c0100139:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010013d	obj/kernel.asm	/^c010013d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100144	obj/kernel.asm	/^c0100144:	e8 c3 ff ff ff       	call   c010010c <grade_backtrace0>$/;"	l
c0100149	obj/kernel.asm	/^c0100149:	c9                   	leave  $/;"	l
c010014a	obj/kernel.asm	/^c010014a:	c3                   	ret    $/;"	l
c010014b	obj/kernel.asm	/^c010014b <lab1_print_cur_status>:$/;"	l
c010014b	obj/kernel.asm	/^c010014b:	55                   	push   %ebp$/;"	l
c010014c	obj/kernel.asm	/^c010014c:	89 e5                	mov    %esp,%ebp$/;"	l
c010014e	obj/kernel.asm	/^c010014e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100151	obj/kernel.asm	/^c0100151:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c0100154	obj/kernel.asm	/^c0100154:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c0100157	obj/kernel.asm	/^c0100157:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c010015a	obj/kernel.asm	/^c010015a:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c010015d	obj/kernel.asm	/^c010015d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100161	obj/kernel.asm	/^c0100161:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100164	obj/kernel.asm	/^c0100164:	83 e0 03             	and    $0x3,%eax$/;"	l
c0100167	obj/kernel.asm	/^c0100167:	89 c2                	mov    %eax,%edx$/;"	l
c0100169	obj/kernel.asm	/^c0100169:	a1 e0 ee 14 c0       	mov    0xc014eee0,%eax$/;"	l
c010016e	obj/kernel.asm	/^c010016e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100172	obj/kernel.asm	/^c0100172:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100176	obj/kernel.asm	/^c0100176:	c7 04 24 e1 55 11 c0 	movl   $0xc01155e1,(%esp)$/;"	l
c010017d	obj/kernel.asm	/^c010017d:	e8 e3 01 00 00       	call   c0100365 <cprintf>$/;"	l
c0100182	obj/kernel.asm	/^c0100182:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100186	obj/kernel.asm	/^c0100186:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100189	obj/kernel.asm	/^c0100189:	a1 e0 ee 14 c0       	mov    0xc014eee0,%eax$/;"	l
c010018e	obj/kernel.asm	/^c010018e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100192	obj/kernel.asm	/^c0100192:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100196	obj/kernel.asm	/^c0100196:	c7 04 24 ef 55 11 c0 	movl   $0xc01155ef,(%esp)$/;"	l
c010019d	obj/kernel.asm	/^c010019d:	e8 c3 01 00 00       	call   c0100365 <cprintf>$/;"	l
c01001a2	obj/kernel.asm	/^c01001a2:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c01001a6	obj/kernel.asm	/^c01001a6:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001a9	obj/kernel.asm	/^c01001a9:	a1 e0 ee 14 c0       	mov    0xc014eee0,%eax$/;"	l
c01001ae	obj/kernel.asm	/^c01001ae:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001b2	obj/kernel.asm	/^c01001b2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001b6	obj/kernel.asm	/^c01001b6:	c7 04 24 fd 55 11 c0 	movl   $0xc01155fd,(%esp)$/;"	l
c01001bd	obj/kernel.asm	/^c01001bd:	e8 a3 01 00 00       	call   c0100365 <cprintf>$/;"	l
c01001c2	obj/kernel.asm	/^c01001c2:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01001c6	obj/kernel.asm	/^c01001c6:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001c9	obj/kernel.asm	/^c01001c9:	a1 e0 ee 14 c0       	mov    0xc014eee0,%eax$/;"	l
c01001ce	obj/kernel.asm	/^c01001ce:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001d2	obj/kernel.asm	/^c01001d2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001d6	obj/kernel.asm	/^c01001d6:	c7 04 24 0b 56 11 c0 	movl   $0xc011560b,(%esp)$/;"	l
c01001dd	obj/kernel.asm	/^c01001dd:	e8 83 01 00 00       	call   c0100365 <cprintf>$/;"	l
c01001e2	obj/kernel.asm	/^c01001e2:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001e6	obj/kernel.asm	/^c01001e6:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001e9	obj/kernel.asm	/^c01001e9:	a1 e0 ee 14 c0       	mov    0xc014eee0,%eax$/;"	l
c01001ee	obj/kernel.asm	/^c01001ee:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01001f2	obj/kernel.asm	/^c01001f2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001f6	obj/kernel.asm	/^c01001f6:	c7 04 24 19 56 11 c0 	movl   $0xc0115619,(%esp)$/;"	l
c01001fd	obj/kernel.asm	/^c01001fd:	e8 63 01 00 00       	call   c0100365 <cprintf>$/;"	l
c0100202	obj/kernel.asm	/^c0100202:	a1 e0 ee 14 c0       	mov    0xc014eee0,%eax$/;"	l
c0100207	obj/kernel.asm	/^c0100207:	83 c0 01             	add    $0x1,%eax$/;"	l
c010020a	obj/kernel.asm	/^c010020a:	a3 e0 ee 14 c0       	mov    %eax,0xc014eee0$/;"	l
c010020f	obj/kernel.asm	/^c010020f:	c9                   	leave  $/;"	l
c0100210	obj/kernel.asm	/^c0100210:	c3                   	ret    $/;"	l
c0100211	obj/kernel.asm	/^c0100211 <lab1_switch_to_user>:$/;"	l
c0100211	obj/kernel.asm	/^c0100211:	55                   	push   %ebp$/;"	l
c0100212	obj/kernel.asm	/^c0100212:	89 e5                	mov    %esp,%ebp$/;"	l
c0100214	obj/kernel.asm	/^c0100214:	5d                   	pop    %ebp$/;"	l
c0100215	obj/kernel.asm	/^c0100215:	c3                   	ret    $/;"	l
c0100216	obj/kernel.asm	/^c0100216 <lab1_switch_to_kernel>:$/;"	l
c0100216	obj/kernel.asm	/^c0100216:	55                   	push   %ebp$/;"	l
c0100217	obj/kernel.asm	/^c0100217:	89 e5                	mov    %esp,%ebp$/;"	l
c0100219	obj/kernel.asm	/^c0100219:	5d                   	pop    %ebp$/;"	l
c010021a	obj/kernel.asm	/^c010021a:	c3                   	ret    $/;"	l
c010021b	obj/kernel.asm	/^c010021b <lab1_switch_test>:$/;"	l
c010021b	obj/kernel.asm	/^c010021b:	55                   	push   %ebp$/;"	l
c010021c	obj/kernel.asm	/^c010021c:	89 e5                	mov    %esp,%ebp$/;"	l
c010021e	obj/kernel.asm	/^c010021e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100221	obj/kernel.asm	/^c0100221:	e8 25 ff ff ff       	call   c010014b <lab1_print_cur_status>$/;"	l
c0100226	obj/kernel.asm	/^c0100226:	c7 04 24 28 56 11 c0 	movl   $0xc0115628,(%esp)$/;"	l
c010022d	obj/kernel.asm	/^c010022d:	e8 33 01 00 00       	call   c0100365 <cprintf>$/;"	l
c0100232	obj/kernel.asm	/^c0100232:	e8 da ff ff ff       	call   c0100211 <lab1_switch_to_user>$/;"	l
c0100237	obj/kernel.asm	/^c0100237:	e8 0f ff ff ff       	call   c010014b <lab1_print_cur_status>$/;"	l
c010023c	obj/kernel.asm	/^c010023c:	c7 04 24 48 56 11 c0 	movl   $0xc0115648,(%esp)$/;"	l
c0100243	obj/kernel.asm	/^c0100243:	e8 1d 01 00 00       	call   c0100365 <cprintf>$/;"	l
c0100248	obj/kernel.asm	/^c0100248:	e8 c9 ff ff ff       	call   c0100216 <lab1_switch_to_kernel>$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	e8 f9 fe ff ff       	call   c010014b <lab1_print_cur_status>$/;"	l
c0100252	obj/kernel.asm	/^c0100252:	c9                   	leave  $/;"	l
c0100253	obj/kernel.asm	/^c0100253:	c3                   	ret    $/;"	l
c0100254	obj/kernel.asm	/^c0100254 <readline>:$/;"	l
c0100254	obj/kernel.asm	/^c0100254:	55                   	push   %ebp$/;"	l
c0100255	obj/kernel.asm	/^c0100255:	89 e5                	mov    %esp,%ebp$/;"	l
c0100257	obj/kernel.asm	/^c0100257:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010025a	obj/kernel.asm	/^c010025a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010025e	obj/kernel.asm	/^c010025e:	74 13                	je     c0100273 <readline+0x1f>$/;"	l
c0100260	obj/kernel.asm	/^c0100260:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100263	obj/kernel.asm	/^c0100263:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100267	obj/kernel.asm	/^c0100267:	c7 04 24 67 56 11 c0 	movl   $0xc0115667,(%esp)$/;"	l
c010026e	obj/kernel.asm	/^c010026e:	e8 f2 00 00 00       	call   c0100365 <cprintf>$/;"	l
c0100273	obj/kernel.asm	/^c0100273:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010027a	obj/kernel.asm	/^c010027a:	e8 6e 01 00 00       	call   c01003ed <getchar>$/;"	l
c010027f	obj/kernel.asm	/^c010027f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100282	obj/kernel.asm	/^c0100282:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100286	obj/kernel.asm	/^c0100286:	79 07                	jns    c010028f <readline+0x3b>$/;"	l
c0100288	obj/kernel.asm	/^c0100288:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010028d	obj/kernel.asm	/^c010028d:	eb 79                	jmp    c0100308 <readline+0xb4>$/;"	l
c010028f	obj/kernel.asm	/^c010028f:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c0100293	obj/kernel.asm	/^c0100293:	7e 28                	jle    c01002bd <readline+0x69>$/;"	l
c0100295	obj/kernel.asm	/^c0100295:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c010029c	obj/kernel.asm	/^c010029c:	7f 1f                	jg     c01002bd <readline+0x69>$/;"	l
c010029e	obj/kernel.asm	/^c010029e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002a1	obj/kernel.asm	/^c01002a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002a4	obj/kernel.asm	/^c01002a4:	e8 e2 00 00 00       	call   c010038b <cputchar>$/;"	l
c01002a9	obj/kernel.asm	/^c01002a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002ac	obj/kernel.asm	/^c01002ac:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01002af	obj/kernel.asm	/^c01002af:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01002b2	obj/kernel.asm	/^c01002b2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01002b5	obj/kernel.asm	/^c01002b5:	88 90 00 ef 14 c0    	mov    %dl,-0x3feb1100(%eax)$/;"	l
c01002bb	obj/kernel.asm	/^c01002bb:	eb 46                	jmp    c0100303 <readline+0xaf>$/;"	l
c01002bd	obj/kernel.asm	/^c01002bd:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c01002c1	obj/kernel.asm	/^c01002c1:	75 17                	jne    c01002da <readline+0x86>$/;"	l
c01002c3	obj/kernel.asm	/^c01002c3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01002c7	obj/kernel.asm	/^c01002c7:	7e 11                	jle    c01002da <readline+0x86>$/;"	l
c01002c9	obj/kernel.asm	/^c01002c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002cc	obj/kernel.asm	/^c01002cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002cf	obj/kernel.asm	/^c01002cf:	e8 b7 00 00 00       	call   c010038b <cputchar>$/;"	l
c01002d4	obj/kernel.asm	/^c01002d4:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01002d8	obj/kernel.asm	/^c01002d8:	eb 29                	jmp    c0100303 <readline+0xaf>$/;"	l
c01002da	obj/kernel.asm	/^c01002da:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01002de	obj/kernel.asm	/^c01002de:	74 06                	je     c01002e6 <readline+0x92>$/;"	l
c01002e0	obj/kernel.asm	/^c01002e0:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01002e4	obj/kernel.asm	/^c01002e4:	75 1d                	jne    c0100303 <readline+0xaf>$/;"	l
c01002e6	obj/kernel.asm	/^c01002e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002e9	obj/kernel.asm	/^c01002e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01002ec	obj/kernel.asm	/^c01002ec:	e8 9a 00 00 00       	call   c010038b <cputchar>$/;"	l
c01002f1	obj/kernel.asm	/^c01002f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002f4	obj/kernel.asm	/^c01002f4:	05 00 ef 14 c0       	add    $0xc014ef00,%eax$/;"	l
c01002f9	obj/kernel.asm	/^c01002f9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01002fc	obj/kernel.asm	/^c01002fc:	b8 00 ef 14 c0       	mov    $0xc014ef00,%eax$/;"	l
c0100301	obj/kernel.asm	/^c0100301:	eb 05                	jmp    c0100308 <readline+0xb4>$/;"	l
c0100303	obj/kernel.asm	/^c0100303:	e9 72 ff ff ff       	jmp    c010027a <readline+0x26>$/;"	l
c0100308	obj/kernel.asm	/^c0100308:	c9                   	leave  $/;"	l
c0100309	obj/kernel.asm	/^c0100309:	c3                   	ret    $/;"	l
c010030a	obj/kernel.asm	/^c010030a <cputch>:$/;"	l
c010030a	obj/kernel.asm	/^c010030a:	55                   	push   %ebp$/;"	l
c010030b	obj/kernel.asm	/^c010030b:	89 e5                	mov    %esp,%ebp$/;"	l
c010030d	obj/kernel.asm	/^c010030d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100310	obj/kernel.asm	/^c0100310:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100313	obj/kernel.asm	/^c0100313:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	e8 e9 14 00 00       	call   c0101804 <cons_putc>$/;"	l
c010031b	obj/kernel.asm	/^c010031b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010031e	obj/kernel.asm	/^c010031e:	8b 00                	mov    (%eax),%eax$/;"	l
c0100320	obj/kernel.asm	/^c0100320:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100323	obj/kernel.asm	/^c0100323:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100326	obj/kernel.asm	/^c0100326:	89 10                	mov    %edx,(%eax)$/;"	l
c0100328	obj/kernel.asm	/^c0100328:	c9                   	leave  $/;"	l
c0100329	obj/kernel.asm	/^c0100329:	c3                   	ret    $/;"	l
c010032a	obj/kernel.asm	/^c010032a <vcprintf>:$/;"	l
c010032a	obj/kernel.asm	/^c010032a:	55                   	push   %ebp$/;"	l
c010032b	obj/kernel.asm	/^c010032b:	89 e5                	mov    %esp,%ebp$/;"	l
c010032d	obj/kernel.asm	/^c010032d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100330	obj/kernel.asm	/^c0100330:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100337	obj/kernel.asm	/^c0100337:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010033a	obj/kernel.asm	/^c010033a:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010033e	obj/kernel.asm	/^c010033e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100341	obj/kernel.asm	/^c0100341:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0100345	obj/kernel.asm	/^c0100345:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100348	obj/kernel.asm	/^c0100348:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010034c	obj/kernel.asm	/^c010034c:	c7 44 24 04 d9 6a ff 	movl   $0xffff6ad9,0x4(%esp)$/;"	l
c0100353	obj/kernel.asm	/^c0100353:	ff $/;"	l
c0100354	obj/kernel.asm	/^c0100354:	c7 04 24 0a 03 10 c0 	movl   $0xc010030a,(%esp)$/;"	l
c010035b	obj/kernel.asm	/^c010035b:	e8 69 47 01 00       	call   c0114ac9 <vprintfmt>$/;"	l
c0100360	obj/kernel.asm	/^c0100360:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100363	obj/kernel.asm	/^c0100363:	c9                   	leave  $/;"	l
c0100364	obj/kernel.asm	/^c0100364:	c3                   	ret    $/;"	l
c0100365	obj/kernel.asm	/^c0100365 <cprintf>:$/;"	l
c0100365	obj/kernel.asm	/^c0100365:	55                   	push   %ebp$/;"	l
c0100366	obj/kernel.asm	/^c0100366:	89 e5                	mov    %esp,%ebp$/;"	l
c0100368	obj/kernel.asm	/^c0100368:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010036b	obj/kernel.asm	/^c010036b:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c010036e	obj/kernel.asm	/^c010036e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100371	obj/kernel.asm	/^c0100371:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100374	obj/kernel.asm	/^c0100374:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100378	obj/kernel.asm	/^c0100378:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010037b	obj/kernel.asm	/^c010037b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010037e	obj/kernel.asm	/^c010037e:	e8 a7 ff ff ff       	call   c010032a <vcprintf>$/;"	l
c0100383	obj/kernel.asm	/^c0100383:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100386	obj/kernel.asm	/^c0100386:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100389	obj/kernel.asm	/^c0100389:	c9                   	leave  $/;"	l
c010038a	obj/kernel.asm	/^c010038a:	c3                   	ret    $/;"	l
c010038b	obj/kernel.asm	/^c010038b <cputchar>:$/;"	l
c010038b	obj/kernel.asm	/^c010038b:	55                   	push   %ebp$/;"	l
c010038c	obj/kernel.asm	/^c010038c:	89 e5                	mov    %esp,%ebp$/;"	l
c010038e	obj/kernel.asm	/^c010038e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100391	obj/kernel.asm	/^c0100391:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100394	obj/kernel.asm	/^c0100394:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100397	obj/kernel.asm	/^c0100397:	e8 68 14 00 00       	call   c0101804 <cons_putc>$/;"	l
c010039c	obj/kernel.asm	/^c010039c:	c9                   	leave  $/;"	l
c010039d	obj/kernel.asm	/^c010039d:	c3                   	ret    $/;"	l
c010039e	obj/kernel.asm	/^c010039e <cputs>:$/;"	l
c010039e	obj/kernel.asm	/^c010039e:	55                   	push   %ebp$/;"	l
c010039f	obj/kernel.asm	/^c010039f:	89 e5                	mov    %esp,%ebp$/;"	l
c01003a1	obj/kernel.asm	/^c01003a1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01003a4	obj/kernel.asm	/^c01003a4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01003ab	obj/kernel.asm	/^c01003ab:	eb 13                	jmp    c01003c0 <cputs+0x22>$/;"	l
c01003ad	obj/kernel.asm	/^c01003ad:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c01003b1	obj/kernel.asm	/^c01003b1:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01003b4	obj/kernel.asm	/^c01003b4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01003b8	obj/kernel.asm	/^c01003b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01003bb	obj/kernel.asm	/^c01003bb:	e8 4a ff ff ff       	call   c010030a <cputch>$/;"	l
c01003c0	obj/kernel.asm	/^c01003c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01003c3	obj/kernel.asm	/^c01003c3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01003c6	obj/kernel.asm	/^c01003c6:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01003c9	obj/kernel.asm	/^c01003c9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01003cc	obj/kernel.asm	/^c01003cc:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01003cf	obj/kernel.asm	/^c01003cf:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01003d3	obj/kernel.asm	/^c01003d3:	75 d8                	jne    c01003ad <cputs+0xf>$/;"	l
c01003d5	obj/kernel.asm	/^c01003d5:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01003d8	obj/kernel.asm	/^c01003d8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01003dc	obj/kernel.asm	/^c01003dc:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c01003e3	obj/kernel.asm	/^c01003e3:	e8 22 ff ff ff       	call   c010030a <cputch>$/;"	l
c01003e8	obj/kernel.asm	/^c01003e8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01003eb	obj/kernel.asm	/^c01003eb:	c9                   	leave  $/;"	l
c01003ec	obj/kernel.asm	/^c01003ec:	c3                   	ret    $/;"	l
c01003ed	obj/kernel.asm	/^c01003ed <getchar>:$/;"	l
c01003ed	obj/kernel.asm	/^c01003ed:	55                   	push   %ebp$/;"	l
c01003ee	obj/kernel.asm	/^c01003ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01003f0	obj/kernel.asm	/^c01003f0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003f3	obj/kernel.asm	/^c01003f3:	e8 48 14 00 00       	call   c0101840 <cons_getc>$/;"	l
c01003f8	obj/kernel.asm	/^c01003f8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01003fb	obj/kernel.asm	/^c01003fb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01003ff	obj/kernel.asm	/^c01003ff:	74 f2                	je     c01003f3 <getchar+0x6>$/;"	l
c0100401	obj/kernel.asm	/^c0100401:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100404	obj/kernel.asm	/^c0100404:	c9                   	leave  $/;"	l
c0100405	obj/kernel.asm	/^c0100405:	c3                   	ret    $/;"	l
c0100406	obj/kernel.asm	/^c0100406 <strdup>:$/;"	l
c0100406	obj/kernel.asm	/^c0100406:	55                   	push   %ebp$/;"	l
c0100407	obj/kernel.asm	/^c0100407:	89 e5                	mov    %esp,%ebp$/;"	l
c0100409	obj/kernel.asm	/^c0100409:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010040c	obj/kernel.asm	/^c010040c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010040f	obj/kernel.asm	/^c010040f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100412	obj/kernel.asm	/^c0100412:	e8 ac 4c 01 00       	call   c01150c3 <strlen>$/;"	l
c0100417	obj/kernel.asm	/^c0100417:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010041a	obj/kernel.asm	/^c010041a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010041d	obj/kernel.asm	/^c010041d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100420	obj/kernel.asm	/^c0100420:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100423	obj/kernel.asm	/^c0100423:	e8 73 48 00 00       	call   c0104c9b <kmalloc>$/;"	l
c0100428	obj/kernel.asm	/^c0100428:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010042b	obj/kernel.asm	/^c010042b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010042f	obj/kernel.asm	/^c010042f:	74 24                	je     c0100455 <strdup+0x4f>$/;"	l
c0100431	obj/kernel.asm	/^c0100431:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100434	obj/kernel.asm	/^c0100434:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100438	obj/kernel.asm	/^c0100438:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010043b	obj/kernel.asm	/^c010043b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010043f	obj/kernel.asm	/^c010043f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100442	obj/kernel.asm	/^c0100442:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100445	obj/kernel.asm	/^c0100445:	e8 b1 50 01 00       	call   c01154fb <memcpy>$/;"	l
c010044a	obj/kernel.asm	/^c010044a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010044d	obj/kernel.asm	/^c010044d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100450	obj/kernel.asm	/^c0100450:	01 d0                	add    %edx,%eax$/;"	l
c0100452	obj/kernel.asm	/^c0100452:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100455	obj/kernel.asm	/^c0100455:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100458	obj/kernel.asm	/^c0100458:	c9                   	leave  $/;"	l
c0100459	obj/kernel.asm	/^c0100459:	c3                   	ret    $/;"	l
c010045a	obj/kernel.asm	/^c010045a <stradd>:$/;"	l
c010045a	obj/kernel.asm	/^c010045a:	55                   	push   %ebp$/;"	l
c010045b	obj/kernel.asm	/^c010045b:	89 e5                	mov    %esp,%ebp$/;"	l
c010045d	obj/kernel.asm	/^c010045d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100460	obj/kernel.asm	/^c0100460:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100463	obj/kernel.asm	/^c0100463:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100466	obj/kernel.asm	/^c0100466:	e8 58 4c 01 00       	call   c01150c3 <strlen>$/;"	l
c010046b	obj/kernel.asm	/^c010046b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010046e	obj/kernel.asm	/^c010046e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100471	obj/kernel.asm	/^c0100471:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100474	obj/kernel.asm	/^c0100474:	e8 4a 4c 01 00       	call   c01150c3 <strlen>$/;"	l
c0100479	obj/kernel.asm	/^c0100479:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010047c	obj/kernel.asm	/^c010047c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010047f	obj/kernel.asm	/^c010047f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100482	obj/kernel.asm	/^c0100482:	01 d0                	add    %edx,%eax$/;"	l
c0100484	obj/kernel.asm	/^c0100484:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100487	obj/kernel.asm	/^c0100487:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010048a	obj/kernel.asm	/^c010048a:	e8 0c 48 00 00       	call   c0104c9b <kmalloc>$/;"	l
c010048f	obj/kernel.asm	/^c010048f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100492	obj/kernel.asm	/^c0100492:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100495	obj/kernel.asm	/^c0100495:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100498	obj/kernel.asm	/^c0100498:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010049c	obj/kernel.asm	/^c010049c:	74 44                	je     c01004e2 <stradd+0x88>$/;"	l
c010049e	obj/kernel.asm	/^c010049e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004a1	obj/kernel.asm	/^c01004a1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01004a5	obj/kernel.asm	/^c01004a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01004a8	obj/kernel.asm	/^c01004a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01004ac	obj/kernel.asm	/^c01004ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004af	obj/kernel.asm	/^c01004af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01004b2	obj/kernel.asm	/^c01004b2:	e8 44 50 01 00       	call   c01154fb <memcpy>$/;"	l
c01004b7	obj/kernel.asm	/^c01004b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004ba	obj/kernel.asm	/^c01004ba:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c01004bd	obj/kernel.asm	/^c01004bd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004c0	obj/kernel.asm	/^c01004c0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01004c4	obj/kernel.asm	/^c01004c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004c7	obj/kernel.asm	/^c01004c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01004cb	obj/kernel.asm	/^c01004cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004ce	obj/kernel.asm	/^c01004ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01004d1	obj/kernel.asm	/^c01004d1:	e8 25 50 01 00       	call   c01154fb <memcpy>$/;"	l
c01004d6	obj/kernel.asm	/^c01004d6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004d9	obj/kernel.asm	/^c01004d9:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c01004dc	obj/kernel.asm	/^c01004dc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004df	obj/kernel.asm	/^c01004df:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01004e2	obj/kernel.asm	/^c01004e2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01004e5	obj/kernel.asm	/^c01004e5:	c9                   	leave  $/;"	l
c01004e6	obj/kernel.asm	/^c01004e6:	c3                   	ret    $/;"	l
c01004e7	obj/kernel.asm	/^c01004e7 <stab_binsearch>:$/;"	l
c01004e7	obj/kernel.asm	/^c01004e7:	55                   	push   %ebp$/;"	l
c01004e8	obj/kernel.asm	/^c01004e8:	89 e5                	mov    %esp,%ebp$/;"	l
c01004ea	obj/kernel.asm	/^c01004ea:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004f0	obj/kernel.asm	/^c01004f0:	8b 00                	mov    (%eax),%eax$/;"	l
c01004f2	obj/kernel.asm	/^c01004f2:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004f5	obj/kernel.asm	/^c01004f5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01004f8	obj/kernel.asm	/^c01004f8:	8b 00                	mov    (%eax),%eax$/;"	l
c01004fa	obj/kernel.asm	/^c01004fa:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01004fd	obj/kernel.asm	/^c01004fd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100504	obj/kernel.asm	/^c0100504:	e9 d2 00 00 00       	jmp    c01005db <stab_binsearch+0xf4>$/;"	l
c0100509	obj/kernel.asm	/^c0100509:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010050c	obj/kernel.asm	/^c010050c:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010050f	obj/kernel.asm	/^c010050f:	01 d0                	add    %edx,%eax$/;"	l
c0100511	obj/kernel.asm	/^c0100511:	89 c2                	mov    %eax,%edx$/;"	l
c0100513	obj/kernel.asm	/^c0100513:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c0100516	obj/kernel.asm	/^c0100516:	01 d0                	add    %edx,%eax$/;"	l
c0100518	obj/kernel.asm	/^c0100518:	d1 f8                	sar    %eax$/;"	d
c010051a	obj/kernel.asm	/^c010051a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010051d	obj/kernel.asm	/^c010051d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100520	obj/kernel.asm	/^c0100520:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100523	obj/kernel.asm	/^c0100523:	eb 04                	jmp    c0100529 <stab_binsearch+0x42>$/;"	l
c0100525	obj/kernel.asm	/^c0100525:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c0100529	obj/kernel.asm	/^c0100529:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010052c	obj/kernel.asm	/^c010052c:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010052f	obj/kernel.asm	/^c010052f:	7c 1f                	jl     c0100550 <stab_binsearch+0x69>$/;"	l
c0100531	obj/kernel.asm	/^c0100531:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100534	obj/kernel.asm	/^c0100534:	89 d0                	mov    %edx,%eax$/;"	l
c0100536	obj/kernel.asm	/^c0100536:	01 c0                	add    %eax,%eax$/;"	l
c0100538	obj/kernel.asm	/^c0100538:	01 d0                	add    %edx,%eax$/;"	l
c010053a	obj/kernel.asm	/^c010053a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010053d	obj/kernel.asm	/^c010053d:	89 c2                	mov    %eax,%edx$/;"	l
c010053f	obj/kernel.asm	/^c010053f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100542	obj/kernel.asm	/^c0100542:	01 d0                	add    %edx,%eax$/;"	l
c0100544	obj/kernel.asm	/^c0100544:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010054e	obj/kernel.asm	/^c010054e:	75 d5                	jne    c0100525 <stab_binsearch+0x3e>$/;"	l
c0100550	obj/kernel.asm	/^c0100550:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100553	obj/kernel.asm	/^c0100553:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100556	obj/kernel.asm	/^c0100556:	7d 0b                	jge    c0100563 <stab_binsearch+0x7c>$/;"	l
c0100558	obj/kernel.asm	/^c0100558:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010055b	obj/kernel.asm	/^c010055b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100561	obj/kernel.asm	/^c0100561:	eb 78                	jmp    c01005db <stab_binsearch+0xf4>$/;"	l
c0100563	obj/kernel.asm	/^c0100563:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010056a	obj/kernel.asm	/^c010056a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010056d	obj/kernel.asm	/^c010056d:	89 d0                	mov    %edx,%eax$/;"	l
c010056f	obj/kernel.asm	/^c010056f:	01 c0                	add    %eax,%eax$/;"	l
c0100571	obj/kernel.asm	/^c0100571:	01 d0                	add    %edx,%eax$/;"	l
c0100573	obj/kernel.asm	/^c0100573:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100576	obj/kernel.asm	/^c0100576:	89 c2                	mov    %eax,%edx$/;"	l
c0100578	obj/kernel.asm	/^c0100578:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010057b	obj/kernel.asm	/^c010057b:	01 d0                	add    %edx,%eax$/;"	l
c010057d	obj/kernel.asm	/^c010057d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100580	obj/kernel.asm	/^c0100580:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100583	obj/kernel.asm	/^c0100583:	73 13                	jae    c0100598 <stab_binsearch+0xb1>$/;"	l
c0100585	obj/kernel.asm	/^c0100585:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100588	obj/kernel.asm	/^c0100588:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010058b	obj/kernel.asm	/^c010058b:	89 10                	mov    %edx,(%eax)$/;"	l
c010058d	obj/kernel.asm	/^c010058d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100590	obj/kernel.asm	/^c0100590:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100593	obj/kernel.asm	/^c0100593:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100596	obj/kernel.asm	/^c0100596:	eb 43                	jmp    c01005db <stab_binsearch+0xf4>$/;"	l
c0100598	obj/kernel.asm	/^c0100598:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010059b	obj/kernel.asm	/^c010059b:	89 d0                	mov    %edx,%eax$/;"	l
c010059d	obj/kernel.asm	/^c010059d:	01 c0                	add    %eax,%eax$/;"	l
c010059f	obj/kernel.asm	/^c010059f:	01 d0                	add    %edx,%eax$/;"	l
c01005a1	obj/kernel.asm	/^c01005a1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005a4	obj/kernel.asm	/^c01005a4:	89 c2                	mov    %eax,%edx$/;"	l
c01005a6	obj/kernel.asm	/^c01005a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01005a9	obj/kernel.asm	/^c01005a9:	01 d0                	add    %edx,%eax$/;"	l
c01005ab	obj/kernel.asm	/^c01005ab:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01005ae	obj/kernel.asm	/^c01005ae:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c01005b1	obj/kernel.asm	/^c01005b1:	76 16                	jbe    c01005c9 <stab_binsearch+0xe2>$/;"	l
c01005b3	obj/kernel.asm	/^c01005b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005b6	obj/kernel.asm	/^c01005b6:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01005b9	obj/kernel.asm	/^c01005b9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005bc	obj/kernel.asm	/^c01005bc:	89 10                	mov    %edx,(%eax)$/;"	l
c01005be	obj/kernel.asm	/^c01005be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005c1	obj/kernel.asm	/^c01005c1:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01005c4	obj/kernel.asm	/^c01005c4:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01005c7	obj/kernel.asm	/^c01005c7:	eb 12                	jmp    c01005db <stab_binsearch+0xf4>$/;"	l
c01005c9	obj/kernel.asm	/^c01005c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005cc	obj/kernel.asm	/^c01005cc:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01005cf	obj/kernel.asm	/^c01005cf:	89 10                	mov    %edx,(%eax)$/;"	l
c01005d1	obj/kernel.asm	/^c01005d1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005d4	obj/kernel.asm	/^c01005d4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01005d7	obj/kernel.asm	/^c01005d7:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c01005db	obj/kernel.asm	/^c01005db:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01005de	obj/kernel.asm	/^c01005de:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01005e1	obj/kernel.asm	/^c01005e1:	0f 8e 22 ff ff ff    	jle    c0100509 <stab_binsearch+0x22>$/;"	l
c01005e7	obj/kernel.asm	/^c01005e7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01005eb	obj/kernel.asm	/^c01005eb:	75 0f                	jne    c01005fc <stab_binsearch+0x115>$/;"	l
c01005ed	obj/kernel.asm	/^c01005ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005f0	obj/kernel.asm	/^c01005f0:	8b 00                	mov    (%eax),%eax$/;"	l
c01005f2	obj/kernel.asm	/^c01005f2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01005f5	obj/kernel.asm	/^c01005f5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005f8	obj/kernel.asm	/^c01005f8:	89 10                	mov    %edx,(%eax)$/;"	l
c01005fa	obj/kernel.asm	/^c01005fa:	eb 3f                	jmp    c010063b <stab_binsearch+0x154>$/;"	l
c01005fc	obj/kernel.asm	/^c01005fc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005ff	obj/kernel.asm	/^c01005ff:	8b 00                	mov    (%eax),%eax$/;"	l
c0100601	obj/kernel.asm	/^c0100601:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100604	obj/kernel.asm	/^c0100604:	eb 04                	jmp    c010060a <stab_binsearch+0x123>$/;"	l
c0100606	obj/kernel.asm	/^c0100606:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c010060a	obj/kernel.asm	/^c010060a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010060d	obj/kernel.asm	/^c010060d:	8b 00                	mov    (%eax),%eax$/;"	l
c010060f	obj/kernel.asm	/^c010060f:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100612	obj/kernel.asm	/^c0100612:	7d 1f                	jge    c0100633 <stab_binsearch+0x14c>$/;"	l
c0100614	obj/kernel.asm	/^c0100614:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100617	obj/kernel.asm	/^c0100617:	89 d0                	mov    %edx,%eax$/;"	l
c0100619	obj/kernel.asm	/^c0100619:	01 c0                	add    %eax,%eax$/;"	l
c010061b	obj/kernel.asm	/^c010061b:	01 d0                	add    %edx,%eax$/;"	l
c010061d	obj/kernel.asm	/^c010061d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100620	obj/kernel.asm	/^c0100620:	89 c2                	mov    %eax,%edx$/;"	l
c0100622	obj/kernel.asm	/^c0100622:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100625	obj/kernel.asm	/^c0100625:	01 d0                	add    %edx,%eax$/;"	l
c0100627	obj/kernel.asm	/^c0100627:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010062b	obj/kernel.asm	/^c010062b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010062e	obj/kernel.asm	/^c010062e:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0100631	obj/kernel.asm	/^c0100631:	75 d3                	jne    c0100606 <stab_binsearch+0x11f>$/;"	l
c0100633	obj/kernel.asm	/^c0100633:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100636	obj/kernel.asm	/^c0100636:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100639	obj/kernel.asm	/^c0100639:	89 10                	mov    %edx,(%eax)$/;"	l
c010063b	obj/kernel.asm	/^c010063b:	c9                   	leave  $/;"	l
c010063c	obj/kernel.asm	/^c010063c:	c3                   	ret    $/;"	l
c010063d	obj/kernel.asm	/^c010063d <debuginfo_eip>:$/;"	l
c010063d	obj/kernel.asm	/^c010063d:	55                   	push   %ebp$/;"	l
c010063e	obj/kernel.asm	/^c010063e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100640	obj/kernel.asm	/^c0100640:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100643	obj/kernel.asm	/^c0100643:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100646	obj/kernel.asm	/^c0100646:	c7 00 6c 56 11 c0    	movl   $0xc011566c,(%eax)$/;"	l
c010064c	obj/kernel.asm	/^c010064c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010064f	obj/kernel.asm	/^c010064f:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0100656	obj/kernel.asm	/^c0100656:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100659	obj/kernel.asm	/^c0100659:	c7 40 08 6c 56 11 c0 	movl   $0xc011566c,0x8(%eax)$/;"	l
c0100660	obj/kernel.asm	/^c0100660:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100663	obj/kernel.asm	/^c0100663:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c010066a	obj/kernel.asm	/^c010066a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010066d	obj/kernel.asm	/^c010066d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100670	obj/kernel.asm	/^c0100670:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100673	obj/kernel.asm	/^c0100673:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100676	obj/kernel.asm	/^c0100676:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010067d	obj/kernel.asm	/^c010067d:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100684	obj/kernel.asm	/^c0100684:	76 21                	jbe    c01006a7 <debuginfo_eip+0x6a>$/;"	l
c0100686	obj/kernel.asm	/^c0100686:	c7 45 f4 a0 9b 11 c0 	movl   $0xc0119ba0,-0xc(%ebp)$/;"	l
c010068d	obj/kernel.asm	/^c010068d:	c7 45 f0 dc f3 13 c0 	movl   $0xc013f3dc,-0x10(%ebp)$/;"	l
c0100694	obj/kernel.asm	/^c0100694:	c7 45 ec dd f3 13 c0 	movl   $0xc013f3dd,-0x14(%ebp)$/;"	l
c010069b	obj/kernel.asm	/^c010069b:	c7 45 e8 ed bc 14 c0 	movl   $0xc014bced,-0x18(%ebp)$/;"	l
c01006a2	obj/kernel.asm	/^c01006a2:	e9 ea 00 00 00       	jmp    c0100791 <debuginfo_eip+0x154>$/;"	l
c01006a7	obj/kernel.asm	/^c01006a7:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c01006ae	obj/kernel.asm	/^c01006ae:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c01006b3	obj/kernel.asm	/^c01006b3:	85 c0                	test   %eax,%eax$/;"	l
c01006b5	obj/kernel.asm	/^c01006b5:	74 11                	je     c01006c8 <debuginfo_eip+0x8b>$/;"	l
c01006b7	obj/kernel.asm	/^c01006b7:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c01006bc	obj/kernel.asm	/^c01006bc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01006bf	obj/kernel.asm	/^c01006bf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01006c2	obj/kernel.asm	/^c01006c2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01006c6	obj/kernel.asm	/^c01006c6:	75 0a                	jne    c01006d2 <debuginfo_eip+0x95>$/;"	l
c01006c8	obj/kernel.asm	/^c01006c8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006cd	obj/kernel.asm	/^c01006cd:	e9 9e 03 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c01006d2	obj/kernel.asm	/^c01006d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006d5	obj/kernel.asm	/^c01006d5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01006dc	obj/kernel.asm	/^c01006dc:	00 $/;"	l
c01006dd	obj/kernel.asm	/^c01006dd:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c01006e4	obj/kernel.asm	/^c01006e4:	00 $/;"	l
c01006e5	obj/kernel.asm	/^c01006e5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01006e9	obj/kernel.asm	/^c01006e9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01006ec	obj/kernel.asm	/^c01006ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01006ef	obj/kernel.asm	/^c01006ef:	e8 59 88 00 00       	call   c0108f4d <user_mem_check>$/;"	l
c01006f4	obj/kernel.asm	/^c01006f4:	85 c0                	test   %eax,%eax$/;"	l
c01006f6	obj/kernel.asm	/^c01006f6:	75 0a                	jne    c0100702 <debuginfo_eip+0xc5>$/;"	l
c01006f8	obj/kernel.asm	/^c01006f8:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006fd	obj/kernel.asm	/^c01006fd:	e9 6e 03 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c0100702	obj/kernel.asm	/^c0100702:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100705	obj/kernel.asm	/^c0100705:	8b 00                	mov    (%eax),%eax$/;"	l
c0100707	obj/kernel.asm	/^c0100707:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010070a	obj/kernel.asm	/^c010070a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010070d	obj/kernel.asm	/^c010070d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0100710	obj/kernel.asm	/^c0100710:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100713	obj/kernel.asm	/^c0100713:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100716	obj/kernel.asm	/^c0100716:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100719	obj/kernel.asm	/^c0100719:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010071c	obj/kernel.asm	/^c010071c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010071f	obj/kernel.asm	/^c010071f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0100722	obj/kernel.asm	/^c0100722:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100725	obj/kernel.asm	/^c0100725:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100728	obj/kernel.asm	/^c0100728:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010072b	obj/kernel.asm	/^c010072b:	29 c2                	sub    %eax,%edx$/;"	l
c010072d	obj/kernel.asm	/^c010072d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100730	obj/kernel.asm	/^c0100730:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0100737	obj/kernel.asm	/^c0100737:	00 $/;"	l
c0100738	obj/kernel.asm	/^c0100738:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010073c	obj/kernel.asm	/^c010073c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100740	obj/kernel.asm	/^c0100740:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100743	obj/kernel.asm	/^c0100743:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100746	obj/kernel.asm	/^c0100746:	e8 02 88 00 00       	call   c0108f4d <user_mem_check>$/;"	l
c010074b	obj/kernel.asm	/^c010074b:	85 c0                	test   %eax,%eax$/;"	l
c010074d	obj/kernel.asm	/^c010074d:	75 0a                	jne    c0100759 <debuginfo_eip+0x11c>$/;"	l
c010074f	obj/kernel.asm	/^c010074f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100754	obj/kernel.asm	/^c0100754:	e9 17 03 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c0100759	obj/kernel.asm	/^c0100759:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010075c	obj/kernel.asm	/^c010075c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010075f	obj/kernel.asm	/^c010075f:	29 c2                	sub    %eax,%edx$/;"	l
c0100761	obj/kernel.asm	/^c0100761:	89 d0                	mov    %edx,%eax$/;"	l
c0100763	obj/kernel.asm	/^c0100763:	89 c2                	mov    %eax,%edx$/;"	l
c0100765	obj/kernel.asm	/^c0100765:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100768	obj/kernel.asm	/^c0100768:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010076f	obj/kernel.asm	/^c010076f:	00 $/;"	l
c0100770	obj/kernel.asm	/^c0100770:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100774	obj/kernel.asm	/^c0100774:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100778	obj/kernel.asm	/^c0100778:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010077b	obj/kernel.asm	/^c010077b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010077e	obj/kernel.asm	/^c010077e:	e8 ca 87 00 00       	call   c0108f4d <user_mem_check>$/;"	l
c0100783	obj/kernel.asm	/^c0100783:	85 c0                	test   %eax,%eax$/;"	l
c0100785	obj/kernel.asm	/^c0100785:	75 0a                	jne    c0100791 <debuginfo_eip+0x154>$/;"	l
c0100787	obj/kernel.asm	/^c0100787:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010078c	obj/kernel.asm	/^c010078c:	e9 df 02 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c0100791	obj/kernel.asm	/^c0100791:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100794	obj/kernel.asm	/^c0100794:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100797	obj/kernel.asm	/^c0100797:	76 0d                	jbe    c01007a6 <debuginfo_eip+0x169>$/;"	l
c0100799	obj/kernel.asm	/^c0100799:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010079c	obj/kernel.asm	/^c010079c:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010079f	obj/kernel.asm	/^c010079f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01007a2	obj/kernel.asm	/^c01007a2:	84 c0                	test   %al,%al$/;"	l
c01007a4	obj/kernel.asm	/^c01007a4:	74 0a                	je     c01007b0 <debuginfo_eip+0x173>$/;"	l
c01007a6	obj/kernel.asm	/^c01007a6:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01007ab	obj/kernel.asm	/^c01007ab:	e9 c0 02 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c01007b0	obj/kernel.asm	/^c01007b0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01007b7	obj/kernel.asm	/^c01007b7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01007ba	obj/kernel.asm	/^c01007ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007bd	obj/kernel.asm	/^c01007bd:	29 c2                	sub    %eax,%edx$/;"	l
c01007bf	obj/kernel.asm	/^c01007bf:	89 d0                	mov    %edx,%eax$/;"	l
c01007c1	obj/kernel.asm	/^c01007c1:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c01007c4	obj/kernel.asm	/^c01007c4:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c01007ca	obj/kernel.asm	/^c01007ca:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01007cd	obj/kernel.asm	/^c01007cd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01007d0	obj/kernel.asm	/^c01007d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01007d3	obj/kernel.asm	/^c01007d3:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c01007d7	obj/kernel.asm	/^c01007d7:	c7 44 24 0c 64 00 00 	movl   $0x64,0xc(%esp)$/;"	l
c01007de	obj/kernel.asm	/^c01007de:	00 $/;"	l
c01007df	obj/kernel.asm	/^c01007df:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c01007e2	obj/kernel.asm	/^c01007e2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01007e6	obj/kernel.asm	/^c01007e6:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c01007e9	obj/kernel.asm	/^c01007e9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01007ed	obj/kernel.asm	/^c01007ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007f0	obj/kernel.asm	/^c01007f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01007f3	obj/kernel.asm	/^c01007f3:	e8 ef fc ff ff       	call   c01004e7 <stab_binsearch>$/;"	l
c01007f8	obj/kernel.asm	/^c01007f8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01007fb	obj/kernel.asm	/^c01007fb:	85 c0                	test   %eax,%eax$/;"	l
c01007fd	obj/kernel.asm	/^c01007fd:	75 0a                	jne    c0100809 <debuginfo_eip+0x1cc>$/;"	l
c01007ff	obj/kernel.asm	/^c01007ff:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100804	obj/kernel.asm	/^c0100804:	e9 67 02 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c0100809	obj/kernel.asm	/^c0100809:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010080c	obj/kernel.asm	/^c010080c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010080f	obj/kernel.asm	/^c010080f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100812	obj/kernel.asm	/^c0100812:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100815	obj/kernel.asm	/^c0100815:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100818	obj/kernel.asm	/^c0100818:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010081c	obj/kernel.asm	/^c010081c:	c7 44 24 0c 24 00 00 	movl   $0x24,0xc(%esp)$/;"	l
c0100823	obj/kernel.asm	/^c0100823:	00 $/;"	l
c0100824	obj/kernel.asm	/^c0100824:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c0100827	obj/kernel.asm	/^c0100827:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010082b	obj/kernel.asm	/^c010082b:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010082e	obj/kernel.asm	/^c010082e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100832	obj/kernel.asm	/^c0100832:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100835	obj/kernel.asm	/^c0100835:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100838	obj/kernel.asm	/^c0100838:	e8 aa fc ff ff       	call   c01004e7 <stab_binsearch>$/;"	l
c010083d	obj/kernel.asm	/^c010083d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0100840	obj/kernel.asm	/^c0100840:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100843	obj/kernel.asm	/^c0100843:	39 c2                	cmp    %eax,%edx$/;"	l
c0100845	obj/kernel.asm	/^c0100845:	7f 7c                	jg     c01008c3 <debuginfo_eip+0x286>$/;"	l
c0100847	obj/kernel.asm	/^c0100847:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010084a	obj/kernel.asm	/^c010084a:	89 c2                	mov    %eax,%edx$/;"	l
c010084c	obj/kernel.asm	/^c010084c:	89 d0                	mov    %edx,%eax$/;"	l
c010084e	obj/kernel.asm	/^c010084e:	01 c0                	add    %eax,%eax$/;"	l
c0100850	obj/kernel.asm	/^c0100850:	01 d0                	add    %edx,%eax$/;"	l
c0100852	obj/kernel.asm	/^c0100852:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100855	obj/kernel.asm	/^c0100855:	89 c2                	mov    %eax,%edx$/;"	l
c0100857	obj/kernel.asm	/^c0100857:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010085a	obj/kernel.asm	/^c010085a:	01 d0                	add    %edx,%eax$/;"	l
c010085c	obj/kernel.asm	/^c010085c:	8b 10                	mov    (%eax),%edx$/;"	l
c010085e	obj/kernel.asm	/^c010085e:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0100861	obj/kernel.asm	/^c0100861:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100864	obj/kernel.asm	/^c0100864:	29 c1                	sub    %eax,%ecx$/;"	l
c0100866	obj/kernel.asm	/^c0100866:	89 c8                	mov    %ecx,%eax$/;"	l
c0100868	obj/kernel.asm	/^c0100868:	39 c2                	cmp    %eax,%edx$/;"	l
c010086a	obj/kernel.asm	/^c010086a:	73 22                	jae    c010088e <debuginfo_eip+0x251>$/;"	l
c010086c	obj/kernel.asm	/^c010086c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010086f	obj/kernel.asm	/^c010086f:	89 c2                	mov    %eax,%edx$/;"	l
c0100871	obj/kernel.asm	/^c0100871:	89 d0                	mov    %edx,%eax$/;"	l
c0100873	obj/kernel.asm	/^c0100873:	01 c0                	add    %eax,%eax$/;"	l
c0100875	obj/kernel.asm	/^c0100875:	01 d0                	add    %edx,%eax$/;"	l
c0100877	obj/kernel.asm	/^c0100877:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010087a	obj/kernel.asm	/^c010087a:	89 c2                	mov    %eax,%edx$/;"	l
c010087c	obj/kernel.asm	/^c010087c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010087f	obj/kernel.asm	/^c010087f:	01 d0                	add    %edx,%eax$/;"	l
c0100881	obj/kernel.asm	/^c0100881:	8b 10                	mov    (%eax),%edx$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100886	obj/kernel.asm	/^c0100886:	01 c2                	add    %eax,%edx$/;"	l
c0100888	obj/kernel.asm	/^c0100888:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010088b	obj/kernel.asm	/^c010088b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100891	obj/kernel.asm	/^c0100891:	89 c2                	mov    %eax,%edx$/;"	l
c0100893	obj/kernel.asm	/^c0100893:	89 d0                	mov    %edx,%eax$/;"	l
c0100895	obj/kernel.asm	/^c0100895:	01 c0                	add    %eax,%eax$/;"	l
c0100897	obj/kernel.asm	/^c0100897:	01 d0                	add    %edx,%eax$/;"	l
c0100899	obj/kernel.asm	/^c0100899:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010089c	obj/kernel.asm	/^c010089c:	89 c2                	mov    %eax,%edx$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008a1	obj/kernel.asm	/^c01008a1:	01 d0                	add    %edx,%eax$/;"	l
c01008a3	obj/kernel.asm	/^c01008a3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01008a6	obj/kernel.asm	/^c01008a6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008a9	obj/kernel.asm	/^c01008a9:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01008ac	obj/kernel.asm	/^c01008ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008af	obj/kernel.asm	/^c01008af:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01008b2	obj/kernel.asm	/^c01008b2:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c01008b5	obj/kernel.asm	/^c01008b5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01008b8	obj/kernel.asm	/^c01008b8:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01008bb	obj/kernel.asm	/^c01008bb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01008be	obj/kernel.asm	/^c01008be:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01008c1	obj/kernel.asm	/^c01008c1:	eb 15                	jmp    c01008d8 <debuginfo_eip+0x29b>$/;"	l
c01008c3	obj/kernel.asm	/^c01008c3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008c6	obj/kernel.asm	/^c01008c6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01008c9	obj/kernel.asm	/^c01008c9:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01008cc	obj/kernel.asm	/^c01008cc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01008cf	obj/kernel.asm	/^c01008cf:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01008d2	obj/kernel.asm	/^c01008d2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01008d5	obj/kernel.asm	/^c01008d5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01008d8	obj/kernel.asm	/^c01008d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008db	obj/kernel.asm	/^c01008db:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01008de	obj/kernel.asm	/^c01008de:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c01008e5	obj/kernel.asm	/^c01008e5:	00 $/;"	l
c01008e6	obj/kernel.asm	/^c01008e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01008e9	obj/kernel.asm	/^c01008e9:	e8 9f 49 01 00       	call   c011528d <strfind>$/;"	l
c01008ee	obj/kernel.asm	/^c01008ee:	89 c2                	mov    %eax,%edx$/;"	l
c01008f0	obj/kernel.asm	/^c01008f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008f3	obj/kernel.asm	/^c01008f3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01008f6	obj/kernel.asm	/^c01008f6:	29 c2                	sub    %eax,%edx$/;"	l
c01008f8	obj/kernel.asm	/^c01008f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008fb	obj/kernel.asm	/^c01008fb:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01008fe	obj/kernel.asm	/^c01008fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100901	obj/kernel.asm	/^c0100901:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0100905	obj/kernel.asm	/^c0100905:	c7 44 24 0c 44 00 00 	movl   $0x44,0xc(%esp)$/;"	l
c010090c	obj/kernel.asm	/^c010090c:	00 $/;"	l
c010090d	obj/kernel.asm	/^c010090d:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c0100910	obj/kernel.asm	/^c0100910:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100914	obj/kernel.asm	/^c0100914:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0100917	obj/kernel.asm	/^c0100917:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010091b	obj/kernel.asm	/^c010091b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010091e	obj/kernel.asm	/^c010091e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100921	obj/kernel.asm	/^c0100921:	e8 c1 fb ff ff       	call   c01004e7 <stab_binsearch>$/;"	l
c0100926	obj/kernel.asm	/^c0100926:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100929	obj/kernel.asm	/^c0100929:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010092c	obj/kernel.asm	/^c010092c:	39 c2                	cmp    %eax,%edx$/;"	l
c010092e	obj/kernel.asm	/^c010092e:	7f 24                	jg     c0100954 <debuginfo_eip+0x317>$/;"	l
c0100930	obj/kernel.asm	/^c0100930:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100933	obj/kernel.asm	/^c0100933:	89 c2                	mov    %eax,%edx$/;"	l
c0100935	obj/kernel.asm	/^c0100935:	89 d0                	mov    %edx,%eax$/;"	l
c0100937	obj/kernel.asm	/^c0100937:	01 c0                	add    %eax,%eax$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	01 d0                	add    %edx,%eax$/;"	l
c010093b	obj/kernel.asm	/^c010093b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010093e	obj/kernel.asm	/^c010093e:	89 c2                	mov    %eax,%edx$/;"	l
c0100940	obj/kernel.asm	/^c0100940:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100943	obj/kernel.asm	/^c0100943:	01 d0                	add    %edx,%eax$/;"	l
c0100945	obj/kernel.asm	/^c0100945:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0100949	obj/kernel.asm	/^c0100949:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010094c	obj/kernel.asm	/^c010094c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010094f	obj/kernel.asm	/^c010094f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0100952	obj/kernel.asm	/^c0100952:	eb 13                	jmp    c0100967 <debuginfo_eip+0x32a>$/;"	l
c0100954	obj/kernel.asm	/^c0100954:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100959	obj/kernel.asm	/^c0100959:	e9 12 01 00 00       	jmp    c0100a70 <debuginfo_eip+0x433>$/;"	l
c010095e	obj/kernel.asm	/^c010095e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100961	obj/kernel.asm	/^c0100961:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100964	obj/kernel.asm	/^c0100964:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100967	obj/kernel.asm	/^c0100967:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010096a	obj/kernel.asm	/^c010096a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010096d	obj/kernel.asm	/^c010096d:	39 c2                	cmp    %eax,%edx$/;"	l
c010096f	obj/kernel.asm	/^c010096f:	7c 56                	jl     c01009c7 <debuginfo_eip+0x38a>$/;"	l
c0100971	obj/kernel.asm	/^c0100971:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100974	obj/kernel.asm	/^c0100974:	89 c2                	mov    %eax,%edx$/;"	l
c0100976	obj/kernel.asm	/^c0100976:	89 d0                	mov    %edx,%eax$/;"	l
c0100978	obj/kernel.asm	/^c0100978:	01 c0                	add    %eax,%eax$/;"	l
c010097a	obj/kernel.asm	/^c010097a:	01 d0                	add    %edx,%eax$/;"	l
c010097c	obj/kernel.asm	/^c010097c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010097f	obj/kernel.asm	/^c010097f:	89 c2                	mov    %eax,%edx$/;"	l
c0100981	obj/kernel.asm	/^c0100981:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100984	obj/kernel.asm	/^c0100984:	01 d0                	add    %edx,%eax$/;"	l
c0100986	obj/kernel.asm	/^c0100986:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010098a	obj/kernel.asm	/^c010098a:	3c 84                	cmp    $0x84,%al$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	74 39                	je     c01009c7 <debuginfo_eip+0x38a>$/;"	l
c010098e	obj/kernel.asm	/^c010098e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100991	obj/kernel.asm	/^c0100991:	89 c2                	mov    %eax,%edx$/;"	l
c0100993	obj/kernel.asm	/^c0100993:	89 d0                	mov    %edx,%eax$/;"	l
c0100995	obj/kernel.asm	/^c0100995:	01 c0                	add    %eax,%eax$/;"	l
c0100997	obj/kernel.asm	/^c0100997:	01 d0                	add    %edx,%eax$/;"	l
c0100999	obj/kernel.asm	/^c0100999:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010099c	obj/kernel.asm	/^c010099c:	89 c2                	mov    %eax,%edx$/;"	l
c010099e	obj/kernel.asm	/^c010099e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009a1	obj/kernel.asm	/^c01009a1:	01 d0                	add    %edx,%eax$/;"	l
c01009a3	obj/kernel.asm	/^c01009a3:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009a7	obj/kernel.asm	/^c01009a7:	3c 64                	cmp    $0x64,%al$/;"	l
c01009a9	obj/kernel.asm	/^c01009a9:	75 b3                	jne    c010095e <debuginfo_eip+0x321>$/;"	l
c01009ab	obj/kernel.asm	/^c01009ab:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009ae	obj/kernel.asm	/^c01009ae:	89 c2                	mov    %eax,%edx$/;"	l
c01009b0	obj/kernel.asm	/^c01009b0:	89 d0                	mov    %edx,%eax$/;"	l
c01009b2	obj/kernel.asm	/^c01009b2:	01 c0                	add    %eax,%eax$/;"	l
c01009b4	obj/kernel.asm	/^c01009b4:	01 d0                	add    %edx,%eax$/;"	l
c01009b6	obj/kernel.asm	/^c01009b6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009b9	obj/kernel.asm	/^c01009b9:	89 c2                	mov    %eax,%edx$/;"	l
c01009bb	obj/kernel.asm	/^c01009bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009be	obj/kernel.asm	/^c01009be:	01 d0                	add    %edx,%eax$/;"	l
c01009c0	obj/kernel.asm	/^c01009c0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01009c3	obj/kernel.asm	/^c01009c3:	85 c0                	test   %eax,%eax$/;"	l
c01009c5	obj/kernel.asm	/^c01009c5:	74 97                	je     c010095e <debuginfo_eip+0x321>$/;"	l
c01009c7	obj/kernel.asm	/^c01009c7:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01009ca	obj/kernel.asm	/^c01009ca:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01009cd	obj/kernel.asm	/^c01009cd:	39 c2                	cmp    %eax,%edx$/;"	l
c01009cf	obj/kernel.asm	/^c01009cf:	7c 46                	jl     c0100a17 <debuginfo_eip+0x3da>$/;"	l
c01009d1	obj/kernel.asm	/^c01009d1:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009d4	obj/kernel.asm	/^c01009d4:	89 c2                	mov    %eax,%edx$/;"	l
c01009d6	obj/kernel.asm	/^c01009d6:	89 d0                	mov    %edx,%eax$/;"	l
c01009d8	obj/kernel.asm	/^c01009d8:	01 c0                	add    %eax,%eax$/;"	l
c01009da	obj/kernel.asm	/^c01009da:	01 d0                	add    %edx,%eax$/;"	l
c01009dc	obj/kernel.asm	/^c01009dc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009df	obj/kernel.asm	/^c01009df:	89 c2                	mov    %eax,%edx$/;"	l
c01009e1	obj/kernel.asm	/^c01009e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009e4	obj/kernel.asm	/^c01009e4:	01 d0                	add    %edx,%eax$/;"	l
c01009e6	obj/kernel.asm	/^c01009e6:	8b 10                	mov    (%eax),%edx$/;"	l
c01009e8	obj/kernel.asm	/^c01009e8:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01009eb	obj/kernel.asm	/^c01009eb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01009ee	obj/kernel.asm	/^c01009ee:	29 c1                	sub    %eax,%ecx$/;"	l
c01009f0	obj/kernel.asm	/^c01009f0:	89 c8                	mov    %ecx,%eax$/;"	l
c01009f2	obj/kernel.asm	/^c01009f2:	39 c2                	cmp    %eax,%edx$/;"	l
c01009f4	obj/kernel.asm	/^c01009f4:	73 21                	jae    c0100a17 <debuginfo_eip+0x3da>$/;"	l
c01009f6	obj/kernel.asm	/^c01009f6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009f9	obj/kernel.asm	/^c01009f9:	89 c2                	mov    %eax,%edx$/;"	l
c01009fb	obj/kernel.asm	/^c01009fb:	89 d0                	mov    %edx,%eax$/;"	l
c01009fd	obj/kernel.asm	/^c01009fd:	01 c0                	add    %eax,%eax$/;"	l
c01009ff	obj/kernel.asm	/^c01009ff:	01 d0                	add    %edx,%eax$/;"	l
c0100a01	obj/kernel.asm	/^c0100a01:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a04	obj/kernel.asm	/^c0100a04:	89 c2                	mov    %eax,%edx$/;"	l
c0100a06	obj/kernel.asm	/^c0100a06:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a09	obj/kernel.asm	/^c0100a09:	01 d0                	add    %edx,%eax$/;"	l
c0100a0b	obj/kernel.asm	/^c0100a0b:	8b 10                	mov    (%eax),%edx$/;"	l
c0100a0d	obj/kernel.asm	/^c0100a0d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a10	obj/kernel.asm	/^c0100a10:	01 c2                	add    %eax,%edx$/;"	l
c0100a12	obj/kernel.asm	/^c0100a12:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a15	obj/kernel.asm	/^c0100a15:	89 10                	mov    %edx,(%eax)$/;"	l
c0100a17	obj/kernel.asm	/^c0100a17:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a1d	obj/kernel.asm	/^c0100a1d:	39 c2                	cmp    %eax,%edx$/;"	l
c0100a1f	obj/kernel.asm	/^c0100a1f:	7d 4a                	jge    c0100a6b <debuginfo_eip+0x42e>$/;"	l
c0100a21	obj/kernel.asm	/^c0100a21:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100a24	obj/kernel.asm	/^c0100a24:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a27	obj/kernel.asm	/^c0100a27:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a2a	obj/kernel.asm	/^c0100a2a:	eb 18                	jmp    c0100a44 <debuginfo_eip+0x407>$/;"	l
c0100a2c	obj/kernel.asm	/^c0100a2c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a2f	obj/kernel.asm	/^c0100a2f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100a32	obj/kernel.asm	/^c0100a32:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100a35	obj/kernel.asm	/^c0100a35:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a38	obj/kernel.asm	/^c0100a38:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0100a3b	obj/kernel.asm	/^c0100a3b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a3e	obj/kernel.asm	/^c0100a3e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a41	obj/kernel.asm	/^c0100a41:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a44	obj/kernel.asm	/^c0100a44:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100a47	obj/kernel.asm	/^c0100a47:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a4a	obj/kernel.asm	/^c0100a4a:	39 c2                	cmp    %eax,%edx$/;"	l
c0100a4c	obj/kernel.asm	/^c0100a4c:	7d 1d                	jge    c0100a6b <debuginfo_eip+0x42e>$/;"	l
c0100a4e	obj/kernel.asm	/^c0100a4e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a51	obj/kernel.asm	/^c0100a51:	89 c2                	mov    %eax,%edx$/;"	l
c0100a53	obj/kernel.asm	/^c0100a53:	89 d0                	mov    %edx,%eax$/;"	l
c0100a55	obj/kernel.asm	/^c0100a55:	01 c0                	add    %eax,%eax$/;"	l
c0100a57	obj/kernel.asm	/^c0100a57:	01 d0                	add    %edx,%eax$/;"	l
c0100a59	obj/kernel.asm	/^c0100a59:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a5c	obj/kernel.asm	/^c0100a5c:	89 c2                	mov    %eax,%edx$/;"	l
c0100a5e	obj/kernel.asm	/^c0100a5e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a61	obj/kernel.asm	/^c0100a61:	01 d0                	add    %edx,%eax$/;"	l
c0100a63	obj/kernel.asm	/^c0100a63:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100a67	obj/kernel.asm	/^c0100a67:	3c a0                	cmp    $0xa0,%al$/;"	l
c0100a69	obj/kernel.asm	/^c0100a69:	74 c1                	je     c0100a2c <debuginfo_eip+0x3ef>$/;"	l
c0100a6b	obj/kernel.asm	/^c0100a6b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100a70	obj/kernel.asm	/^c0100a70:	c9                   	leave  $/;"	l
c0100a71	obj/kernel.asm	/^c0100a71:	c3                   	ret    $/;"	l
c0100a72	obj/kernel.asm	/^c0100a72 <print_kerninfo>:$/;"	l
c0100a72	obj/kernel.asm	/^c0100a72:	55                   	push   %ebp$/;"	l
c0100a73	obj/kernel.asm	/^c0100a73:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a75	obj/kernel.asm	/^c0100a75:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100a78	obj/kernel.asm	/^c0100a78:	c7 04 24 76 56 11 c0 	movl   $0xc0115676,(%esp)$/;"	l
c0100a7f	obj/kernel.asm	/^c0100a7f:	e8 e1 f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100a84	obj/kernel.asm	/^c0100a84:	c7 44 24 04 2a 00 10 	movl   $0xc010002a,0x4(%esp)$/;"	l
c0100a8b	obj/kernel.asm	/^c0100a8b:	c0 $/;"	l
c0100a8c	obj/kernel.asm	/^c0100a8c:	c7 04 24 8f 56 11 c0 	movl   $0xc011568f,(%esp)$/;"	l
c0100a93	obj/kernel.asm	/^c0100a93:	e8 cd f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100a98	obj/kernel.asm	/^c0100a98:	c7 44 24 04 a2 55 11 	movl   $0xc01155a2,0x4(%esp)$/;"	l
c0100a9f	obj/kernel.asm	/^c0100a9f:	c0 $/;"	l
c0100aa0	obj/kernel.asm	/^c0100aa0:	c7 04 24 a7 56 11 c0 	movl   $0xc01156a7,(%esp)$/;"	l
c0100aa7	obj/kernel.asm	/^c0100aa7:	e8 b9 f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100aac	obj/kernel.asm	/^c0100aac:	c7 44 24 04 d0 ee 14 	movl   $0xc014eed0,0x4(%esp)$/;"	l
c0100ab3	obj/kernel.asm	/^c0100ab3:	c0 $/;"	l
c0100ab4	obj/kernel.asm	/^c0100ab4:	c7 04 24 bf 56 11 c0 	movl   $0xc01156bf,(%esp)$/;"	l
c0100abb	obj/kernel.asm	/^c0100abb:	e8 a5 f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100ac0	obj/kernel.asm	/^c0100ac0:	c7 44 24 04 04 32 15 	movl   $0xc0153204,0x4(%esp)$/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7:	c0 $/;"	l
c0100ac8	obj/kernel.asm	/^c0100ac8:	c7 04 24 d7 56 11 c0 	movl   $0xc01156d7,(%esp)$/;"	l
c0100acf	obj/kernel.asm	/^c0100acf:	e8 91 f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100ad4	obj/kernel.asm	/^c0100ad4:	b8 04 32 15 c0       	mov    $0xc0153204,%eax$/;"	l
c0100ad9	obj/kernel.asm	/^c0100ad9:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100adf	obj/kernel.asm	/^c0100adf:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100ae4	obj/kernel.asm	/^c0100ae4:	29 c2                	sub    %eax,%edx$/;"	l
c0100ae6	obj/kernel.asm	/^c0100ae6:	89 d0                	mov    %edx,%eax$/;"	l
c0100ae8	obj/kernel.asm	/^c0100ae8:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100aee	obj/kernel.asm	/^c0100aee:	85 c0                	test   %eax,%eax$/;"	l
c0100af0	obj/kernel.asm	/^c0100af0:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100af3	obj/kernel.asm	/^c0100af3:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100af6	obj/kernel.asm	/^c0100af6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100afa	obj/kernel.asm	/^c0100afa:	c7 04 24 f0 56 11 c0 	movl   $0xc01156f0,(%esp)$/;"	l
c0100b01	obj/kernel.asm	/^c0100b01:	e8 5f f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100b06	obj/kernel.asm	/^c0100b06:	c9                   	leave  $/;"	l
c0100b07	obj/kernel.asm	/^c0100b07:	c3                   	ret    $/;"	l
c0100b08	obj/kernel.asm	/^c0100b08 <print_debuginfo>:$/;"	l
c0100b08	obj/kernel.asm	/^c0100b08:	55                   	push   %ebp$/;"	l
c0100b09	obj/kernel.asm	/^c0100b09:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b0b	obj/kernel.asm	/^c0100b0b:	81 ec 48 01 00 00    	sub    $0x148,%esp$/;"	l
c0100b11	obj/kernel.asm	/^c0100b11:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100b14	obj/kernel.asm	/^c0100b14:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b18	obj/kernel.asm	/^c0100b18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b1b	obj/kernel.asm	/^c0100b1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100b1e	obj/kernel.asm	/^c0100b1e:	e8 1a fb ff ff       	call   c010063d <debuginfo_eip>$/;"	l
c0100b23	obj/kernel.asm	/^c0100b23:	85 c0                	test   %eax,%eax$/;"	l
c0100b25	obj/kernel.asm	/^c0100b25:	74 15                	je     c0100b3c <print_debuginfo+0x34>$/;"	l
c0100b27	obj/kernel.asm	/^c0100b27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b2a	obj/kernel.asm	/^c0100b2a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b2e	obj/kernel.asm	/^c0100b2e:	c7 04 24 1a 57 11 c0 	movl   $0xc011571a,(%esp)$/;"	l
c0100b35	obj/kernel.asm	/^c0100b35:	e8 2b f8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100b3a	obj/kernel.asm	/^c0100b3a:	eb 6d                	jmp    c0100ba9 <print_debuginfo+0xa1>$/;"	l
c0100b3c	obj/kernel.asm	/^c0100b3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b43	obj/kernel.asm	/^c0100b43:	eb 1c                	jmp    c0100b61 <print_debuginfo+0x59>$/;"	l
c0100b45	obj/kernel.asm	/^c0100b45:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100b48	obj/kernel.asm	/^c0100b48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b4b	obj/kernel.asm	/^c0100b4b:	01 d0                	add    %edx,%eax$/;"	l
c0100b4d	obj/kernel.asm	/^c0100b4d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b50	obj/kernel.asm	/^c0100b50:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100b56	obj/kernel.asm	/^c0100b56:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100b59	obj/kernel.asm	/^c0100b59:	01 ca                	add    %ecx,%edx$/;"	l
c0100b5b	obj/kernel.asm	/^c0100b5b:	88 02                	mov    %al,(%edx)$/;"	l
c0100b5d	obj/kernel.asm	/^c0100b5d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100b61	obj/kernel.asm	/^c0100b61:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100b64	obj/kernel.asm	/^c0100b64:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100b67	obj/kernel.asm	/^c0100b67:	7f dc                	jg     c0100b45 <print_debuginfo+0x3d>$/;"	l
c0100b69	obj/kernel.asm	/^c0100b69:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100b6f	obj/kernel.asm	/^c0100b6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b72	obj/kernel.asm	/^c0100b72:	01 d0                	add    %edx,%eax$/;"	l
c0100b74	obj/kernel.asm	/^c0100b74:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100b77	obj/kernel.asm	/^c0100b77:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100b7a	obj/kernel.asm	/^c0100b7a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100b7d	obj/kernel.asm	/^c0100b7d:	89 d1                	mov    %edx,%ecx$/;"	l
c0100b7f	obj/kernel.asm	/^c0100b7f:	29 c1                	sub    %eax,%ecx$/;"	l
c0100b81	obj/kernel.asm	/^c0100b81:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100b84	obj/kernel.asm	/^c0100b84:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100b87	obj/kernel.asm	/^c0100b87:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0100b8b	obj/kernel.asm	/^c0100b8b:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100b91	obj/kernel.asm	/^c0100b91:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0100b95	obj/kernel.asm	/^c0100b95:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100b99	obj/kernel.asm	/^c0100b99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b9d	obj/kernel.asm	/^c0100b9d:	c7 04 24 36 57 11 c0 	movl   $0xc0115736,(%esp)$/;"	l
c0100ba4	obj/kernel.asm	/^c0100ba4:	e8 bc f7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100ba9	obj/kernel.asm	/^c0100ba9:	c9                   	leave  $/;"	l
c0100baa	obj/kernel.asm	/^c0100baa:	c3                   	ret    $/;"	l
c0100bab	obj/kernel.asm	/^c0100bab <read_eip>:$/;"	l
c0100bab	obj/kernel.asm	/^c0100bab:	55                   	push   %ebp$/;"	l
c0100bac	obj/kernel.asm	/^c0100bac:	89 e5                	mov    %esp,%ebp$/;"	l
c0100bae	obj/kernel.asm	/^c0100bae:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100bb1	obj/kernel.asm	/^c0100bb1:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100bb4	obj/kernel.asm	/^c0100bb4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100bb7	obj/kernel.asm	/^c0100bb7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100bba	obj/kernel.asm	/^c0100bba:	c9                   	leave  $/;"	l
c0100bbb	obj/kernel.asm	/^c0100bbb:	c3                   	ret    $/;"	l
c0100bbc	obj/kernel.asm	/^c0100bbc <print_stackframe>:$/;"	l
c0100bbc	obj/kernel.asm	/^c0100bbc:	55                   	push   %ebp$/;"	l
c0100bbd	obj/kernel.asm	/^c0100bbd:	89 e5                	mov    %esp,%ebp$/;"	l
c0100bbf	obj/kernel.asm	/^c0100bbf:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100bc2	obj/kernel.asm	/^c0100bc2:	89 e8                	mov    %ebp,%eax$/;"	l
c0100bc4	obj/kernel.asm	/^c0100bc4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100bc7	obj/kernel.asm	/^c0100bc7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100bca	obj/kernel.asm	/^c0100bca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100bcd	obj/kernel.asm	/^c0100bcd:	e8 d9 ff ff ff       	call   c0100bab <read_eip>$/;"	l
c0100bd2	obj/kernel.asm	/^c0100bd2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100bd5	obj/kernel.asm	/^c0100bd5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0100bdc	obj/kernel.asm	/^c0100bdc:	e9 88 00 00 00       	jmp    c0100c69 <print_stackframe+0xad>$/;"	l
c0100be1	obj/kernel.asm	/^c0100be1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100be4	obj/kernel.asm	/^c0100be4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100be8	obj/kernel.asm	/^c0100be8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100beb	obj/kernel.asm	/^c0100beb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100bef	obj/kernel.asm	/^c0100bef:	c7 04 24 48 57 11 c0 	movl   $0xc0115748,(%esp)$/;"	l
c0100bf6	obj/kernel.asm	/^c0100bf6:	e8 6a f7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100bfb	obj/kernel.asm	/^c0100bfb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe:	83 c0 08             	add    $0x8,%eax$/;"	l
c0100c01	obj/kernel.asm	/^c0100c01:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100c04	obj/kernel.asm	/^c0100c04:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0100c0b	obj/kernel.asm	/^c0100c0b:	eb 25                	jmp    c0100c32 <print_stackframe+0x76>$/;"	l
c0100c0d	obj/kernel.asm	/^c0100c0d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100c10	obj/kernel.asm	/^c0100c10:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100c17	obj/kernel.asm	/^c0100c17:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100c1a	obj/kernel.asm	/^c0100c1a:	01 d0                	add    %edx,%eax$/;"	l
c0100c1c	obj/kernel.asm	/^c0100c1c:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c1e	obj/kernel.asm	/^c0100c1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100c22	obj/kernel.asm	/^c0100c22:	c7 04 24 66 57 11 c0 	movl   $0xc0115766,(%esp)$/;"	l
c0100c29	obj/kernel.asm	/^c0100c29:	e8 37 f7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100c2e	obj/kernel.asm	/^c0100c2e:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
c0100c32	obj/kernel.asm	/^c0100c32:	83 7d e8 03          	cmpl   $0x3,-0x18(%ebp)$/;"	l
c0100c36	obj/kernel.asm	/^c0100c36:	7e d5                	jle    c0100c0d <print_stackframe+0x51>$/;"	l
c0100c38	obj/kernel.asm	/^c0100c38:	c7 04 24 6e 57 11 c0 	movl   $0xc011576e,(%esp)$/;"	l
c0100c3f	obj/kernel.asm	/^c0100c3f:	e8 21 f7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100c44	obj/kernel.asm	/^c0100c44:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100c47	obj/kernel.asm	/^c0100c47:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100c4a	obj/kernel.asm	/^c0100c4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100c4d	obj/kernel.asm	/^c0100c4d:	e8 b6 fe ff ff       	call   c0100b08 <print_debuginfo>$/;"	l
c0100c52	obj/kernel.asm	/^c0100c52:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c55	obj/kernel.asm	/^c0100c55:	83 c0 10             	add    $0x10,%eax$/;"	l
c0100c58	obj/kernel.asm	/^c0100c58:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c5a	obj/kernel.asm	/^c0100c5a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100c5d	obj/kernel.asm	/^c0100c5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c60	obj/kernel.asm	/^c0100c60:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c62	obj/kernel.asm	/^c0100c62:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100c65	obj/kernel.asm	/^c0100c65:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0100c69	obj/kernel.asm	/^c0100c69:	83 7d ec 13          	cmpl   $0x13,-0x14(%ebp)$/;"	l
c0100c6d	obj/kernel.asm	/^c0100c6d:	7f 0a                	jg     c0100c79 <print_stackframe+0xbd>$/;"	l
c0100c6f	obj/kernel.asm	/^c0100c6f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100c73	obj/kernel.asm	/^c0100c73:	0f 85 68 ff ff ff    	jne    c0100be1 <print_stackframe+0x25>$/;"	l
c0100c79	obj/kernel.asm	/^c0100c79:	c9                   	leave  $/;"	l
c0100c7a	obj/kernel.asm	/^c0100c7a:	c3                   	ret    $/;"	l
c0100c7b	obj/kernel.asm	/^c0100c7b <parse>:$/;"	l
c0100c7b	obj/kernel.asm	/^c0100c7b:	55                   	push   %ebp$/;"	l
c0100c7c	obj/kernel.asm	/^c0100c7c:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c7e	obj/kernel.asm	/^c0100c7e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100c81	obj/kernel.asm	/^c0100c81:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c88	obj/kernel.asm	/^c0100c88:	eb 0c                	jmp    c0100c96 <parse+0x1b>$/;"	l
c0100c8a	obj/kernel.asm	/^c0100c8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c8d	obj/kernel.asm	/^c0100c8d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100c90	obj/kernel.asm	/^c0100c90:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100c93	obj/kernel.asm	/^c0100c93:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100c96	obj/kernel.asm	/^c0100c96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c99	obj/kernel.asm	/^c0100c99:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c9c	obj/kernel.asm	/^c0100c9c:	84 c0                	test   %al,%al$/;"	l
c0100c9e	obj/kernel.asm	/^c0100c9e:	74 1d                	je     c0100cbd <parse+0x42>$/;"	l
c0100ca0	obj/kernel.asm	/^c0100ca0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ca3	obj/kernel.asm	/^c0100ca3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100ca6	obj/kernel.asm	/^c0100ca6:	0f be c0             	movsbl %al,%eax$/;"	l
c0100ca9	obj/kernel.asm	/^c0100ca9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100cad	obj/kernel.asm	/^c0100cad:	c7 04 24 f0 57 11 c0 	movl   $0xc01157f0,(%esp)$/;"	l
c0100cb4	obj/kernel.asm	/^c0100cb4:	e8 a1 45 01 00       	call   c011525a <strchr>$/;"	l
c0100cb9	obj/kernel.asm	/^c0100cb9:	85 c0                	test   %eax,%eax$/;"	l
c0100cbb	obj/kernel.asm	/^c0100cbb:	75 cd                	jne    c0100c8a <parse+0xf>$/;"	l
c0100cbd	obj/kernel.asm	/^c0100cbd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100cc0	obj/kernel.asm	/^c0100cc0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100cc3	obj/kernel.asm	/^c0100cc3:	84 c0                	test   %al,%al$/;"	l
c0100cc5	obj/kernel.asm	/^c0100cc5:	75 02                	jne    c0100cc9 <parse+0x4e>$/;"	l
c0100cc7	obj/kernel.asm	/^c0100cc7:	eb 67                	jmp    c0100d30 <parse+0xb5>$/;"	l
c0100cc9	obj/kernel.asm	/^c0100cc9:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100ccd	obj/kernel.asm	/^c0100ccd:	75 14                	jne    c0100ce3 <parse+0x68>$/;"	l
c0100ccf	obj/kernel.asm	/^c0100ccf:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0100cd6	obj/kernel.asm	/^c0100cd6:	00 $/;"	l
c0100cd7	obj/kernel.asm	/^c0100cd7:	c7 04 24 f5 57 11 c0 	movl   $0xc01157f5,(%esp)$/;"	l
c0100cde	obj/kernel.asm	/^c0100cde:	e8 82 f6 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100ce3	obj/kernel.asm	/^c0100ce3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ce6	obj/kernel.asm	/^c0100ce6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100ce9	obj/kernel.asm	/^c0100ce9:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100cec	obj/kernel.asm	/^c0100cec:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100cf3	obj/kernel.asm	/^c0100cf3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100cf6	obj/kernel.asm	/^c0100cf6:	01 c2                	add    %eax,%edx$/;"	l
c0100cf8	obj/kernel.asm	/^c0100cf8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100cfb	obj/kernel.asm	/^c0100cfb:	89 02                	mov    %eax,(%edx)$/;"	l
c0100cfd	obj/kernel.asm	/^c0100cfd:	eb 04                	jmp    c0100d03 <parse+0x88>$/;"	l
c0100cff	obj/kernel.asm	/^c0100cff:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100d03	obj/kernel.asm	/^c0100d03:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d06	obj/kernel.asm	/^c0100d06:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100d09	obj/kernel.asm	/^c0100d09:	84 c0                	test   %al,%al$/;"	l
c0100d0b	obj/kernel.asm	/^c0100d0b:	74 1d                	je     c0100d2a <parse+0xaf>$/;"	l
c0100d0d	obj/kernel.asm	/^c0100d0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d10	obj/kernel.asm	/^c0100d10:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100d13	obj/kernel.asm	/^c0100d13:	0f be c0             	movsbl %al,%eax$/;"	l
c0100d16	obj/kernel.asm	/^c0100d16:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100d1a	obj/kernel.asm	/^c0100d1a:	c7 04 24 f0 57 11 c0 	movl   $0xc01157f0,(%esp)$/;"	l
c0100d21	obj/kernel.asm	/^c0100d21:	e8 34 45 01 00       	call   c011525a <strchr>$/;"	l
c0100d26	obj/kernel.asm	/^c0100d26:	85 c0                	test   %eax,%eax$/;"	l
c0100d28	obj/kernel.asm	/^c0100d28:	74 d5                	je     c0100cff <parse+0x84>$/;"	l
c0100d2a	obj/kernel.asm	/^c0100d2a:	90                   	nop$/;"	l
c0100d2b	obj/kernel.asm	/^c0100d2b:	e9 66 ff ff ff       	jmp    c0100c96 <parse+0x1b>$/;"	l
c0100d30	obj/kernel.asm	/^c0100d30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d33	obj/kernel.asm	/^c0100d33:	c9                   	leave  $/;"	l
c0100d34	obj/kernel.asm	/^c0100d34:	c3                   	ret    $/;"	l
c0100d35	obj/kernel.asm	/^c0100d35 <runcmd>:$/;"	l
c0100d35	obj/kernel.asm	/^c0100d35:	55                   	push   %ebp$/;"	l
c0100d36	obj/kernel.asm	/^c0100d36:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d38	obj/kernel.asm	/^c0100d38:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0100d3b	obj/kernel.asm	/^c0100d3b:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100d3e	obj/kernel.asm	/^c0100d3e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100d42	obj/kernel.asm	/^c0100d42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d45	obj/kernel.asm	/^c0100d45:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100d48	obj/kernel.asm	/^c0100d48:	e8 2e ff ff ff       	call   c0100c7b <parse>$/;"	l
c0100d4d	obj/kernel.asm	/^c0100d4d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100d50	obj/kernel.asm	/^c0100d50:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100d54	obj/kernel.asm	/^c0100d54:	75 0a                	jne    c0100d60 <runcmd+0x2b>$/;"	l
c0100d56	obj/kernel.asm	/^c0100d56:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d5b	obj/kernel.asm	/^c0100d5b:	e9 85 00 00 00       	jmp    c0100de5 <runcmd+0xb0>$/;"	l
c0100d60	obj/kernel.asm	/^c0100d60:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100d67	obj/kernel.asm	/^c0100d67:	eb 5c                	jmp    c0100dc5 <runcmd+0x90>$/;"	l
c0100d69	obj/kernel.asm	/^c0100d69:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100d6c	obj/kernel.asm	/^c0100d6c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	89 d0                	mov    %edx,%eax$/;"	l
c0100d71	obj/kernel.asm	/^c0100d71:	01 c0                	add    %eax,%eax$/;"	l
c0100d73	obj/kernel.asm	/^c0100d73:	01 d0                	add    %edx,%eax$/;"	l
c0100d75	obj/kernel.asm	/^c0100d75:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d78	obj/kernel.asm	/^c0100d78:	05 20 e0 14 c0       	add    $0xc014e020,%eax$/;"	l
c0100d7d	obj/kernel.asm	/^c0100d7d:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d7f	obj/kernel.asm	/^c0100d7f:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0100d83	obj/kernel.asm	/^c0100d83:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100d86	obj/kernel.asm	/^c0100d86:	e8 30 44 01 00       	call   c01151bb <strcmp>$/;"	l
c0100d8b	obj/kernel.asm	/^c0100d8b:	85 c0                	test   %eax,%eax$/;"	l
c0100d8d	obj/kernel.asm	/^c0100d8d:	75 32                	jne    c0100dc1 <runcmd+0x8c>$/;"	l
c0100d8f	obj/kernel.asm	/^c0100d8f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d92	obj/kernel.asm	/^c0100d92:	89 d0                	mov    %edx,%eax$/;"	l
c0100d94	obj/kernel.asm	/^c0100d94:	01 c0                	add    %eax,%eax$/;"	l
c0100d96	obj/kernel.asm	/^c0100d96:	01 d0                	add    %edx,%eax$/;"	l
c0100d98	obj/kernel.asm	/^c0100d98:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d9b	obj/kernel.asm	/^c0100d9b:	05 20 e0 14 c0       	add    $0xc014e020,%eax$/;"	l
c0100da0	obj/kernel.asm	/^c0100da0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100da3	obj/kernel.asm	/^c0100da3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100da6	obj/kernel.asm	/^c0100da6:	8d 4a ff             	lea    -0x1(%edx),%ecx$/;"	l
c0100da9	obj/kernel.asm	/^c0100da9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0100dac	obj/kernel.asm	/^c0100dac:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100db0	obj/kernel.asm	/^c0100db0:	8d 55 b0             	lea    -0x50(%ebp),%edx$/;"	l
c0100db3	obj/kernel.asm	/^c0100db3:	83 c2 04             	add    $0x4,%edx$/;"	l
c0100db6	obj/kernel.asm	/^c0100db6:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0100dba	obj/kernel.asm	/^c0100dba:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
c0100dbd	obj/kernel.asm	/^c0100dbd:	ff d0                	call   *%eax$/;"	l
c0100dbf	obj/kernel.asm	/^c0100dbf:	eb 24                	jmp    c0100de5 <runcmd+0xb0>$/;"	l
c0100dc1	obj/kernel.asm	/^c0100dc1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100dc5	obj/kernel.asm	/^c0100dc5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100dc8	obj/kernel.asm	/^c0100dc8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100dcb	obj/kernel.asm	/^c0100dcb:	76 9c                	jbe    c0100d69 <runcmd+0x34>$/;"	l
c0100dcd	obj/kernel.asm	/^c0100dcd:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100dd0	obj/kernel.asm	/^c0100dd0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100dd4	obj/kernel.asm	/^c0100dd4:	c7 04 24 13 58 11 c0 	movl   $0xc0115813,(%esp)$/;"	l
c0100ddb	obj/kernel.asm	/^c0100ddb:	e8 85 f5 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100de0	obj/kernel.asm	/^c0100de0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100de5	obj/kernel.asm	/^c0100de5:	c9                   	leave  $/;"	l
c0100de6	obj/kernel.asm	/^c0100de6:	c3                   	ret    $/;"	l
c0100de7	obj/kernel.asm	/^c0100de7 <kmonitor>:$/;"	l
c0100de7	obj/kernel.asm	/^c0100de7:	55                   	push   %ebp$/;"	l
c0100de8	obj/kernel.asm	/^c0100de8:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dea	obj/kernel.asm	/^c0100dea:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100ded	obj/kernel.asm	/^c0100ded:	c7 04 24 2c 58 11 c0 	movl   $0xc011582c,(%esp)$/;"	l
c0100df4	obj/kernel.asm	/^c0100df4:	e8 6c f5 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100df9	obj/kernel.asm	/^c0100df9:	c7 04 24 54 58 11 c0 	movl   $0xc0115854,(%esp)$/;"	l
c0100e00	obj/kernel.asm	/^c0100e00:	e8 60 f5 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100e05	obj/kernel.asm	/^c0100e05:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100e09	obj/kernel.asm	/^c0100e09:	74 0b                	je     c0100e16 <kmonitor+0x2f>$/;"	l
c0100e0b	obj/kernel.asm	/^c0100e0b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e0e	obj/kernel.asm	/^c0100e0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100e11	obj/kernel.asm	/^c0100e11:	e8 ac 16 00 00       	call   c01024c2 <print_trapframe>$/;"	l
c0100e16	obj/kernel.asm	/^c0100e16:	c7 04 24 79 58 11 c0 	movl   $0xc0115879,(%esp)$/;"	l
c0100e1d	obj/kernel.asm	/^c0100e1d:	e8 32 f4 ff ff       	call   c0100254 <readline>$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100e25	obj/kernel.asm	/^c0100e25:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100e29	obj/kernel.asm	/^c0100e29:	74 18                	je     c0100e43 <kmonitor+0x5c>$/;"	l
c0100e2b	obj/kernel.asm	/^c0100e2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e2e	obj/kernel.asm	/^c0100e2e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e32	obj/kernel.asm	/^c0100e32:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e35	obj/kernel.asm	/^c0100e35:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100e38	obj/kernel.asm	/^c0100e38:	e8 f8 fe ff ff       	call   c0100d35 <runcmd>$/;"	l
c0100e3d	obj/kernel.asm	/^c0100e3d:	85 c0                	test   %eax,%eax$/;"	l
c0100e3f	obj/kernel.asm	/^c0100e3f:	79 02                	jns    c0100e43 <kmonitor+0x5c>$/;"	l
c0100e41	obj/kernel.asm	/^c0100e41:	eb 02                	jmp    c0100e45 <kmonitor+0x5e>$/;"	l
c0100e43	obj/kernel.asm	/^c0100e43:	eb d1                	jmp    c0100e16 <kmonitor+0x2f>$/;"	l
c0100e45	obj/kernel.asm	/^c0100e45:	c9                   	leave  $/;"	l
c0100e46	obj/kernel.asm	/^c0100e46:	c3                   	ret    $/;"	l
c0100e47	obj/kernel.asm	/^c0100e47 <mon_help>:$/;"	l
c0100e47	obj/kernel.asm	/^c0100e47:	55                   	push   %ebp$/;"	l
c0100e48	obj/kernel.asm	/^c0100e48:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e4a	obj/kernel.asm	/^c0100e4a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100e4d	obj/kernel.asm	/^c0100e4d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100e54	obj/kernel.asm	/^c0100e54:	eb 3f                	jmp    c0100e95 <mon_help+0x4e>$/;"	l
c0100e56	obj/kernel.asm	/^c0100e56:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100e59	obj/kernel.asm	/^c0100e59:	89 d0                	mov    %edx,%eax$/;"	l
c0100e5b	obj/kernel.asm	/^c0100e5b:	01 c0                	add    %eax,%eax$/;"	l
c0100e5d	obj/kernel.asm	/^c0100e5d:	01 d0                	add    %edx,%eax$/;"	l
c0100e5f	obj/kernel.asm	/^c0100e5f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100e62	obj/kernel.asm	/^c0100e62:	05 20 e0 14 c0       	add    $0xc014e020,%eax$/;"	l
c0100e67	obj/kernel.asm	/^c0100e67:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100e6a	obj/kernel.asm	/^c0100e6a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100e6d	obj/kernel.asm	/^c0100e6d:	89 d0                	mov    %edx,%eax$/;"	l
c0100e6f	obj/kernel.asm	/^c0100e6f:	01 c0                	add    %eax,%eax$/;"	l
c0100e71	obj/kernel.asm	/^c0100e71:	01 d0                	add    %edx,%eax$/;"	l
c0100e73	obj/kernel.asm	/^c0100e73:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100e76	obj/kernel.asm	/^c0100e76:	05 20 e0 14 c0       	add    $0xc014e020,%eax$/;"	l
c0100e7b	obj/kernel.asm	/^c0100e7b:	8b 00                	mov    (%eax),%eax$/;"	l
c0100e7d	obj/kernel.asm	/^c0100e7d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0100e81	obj/kernel.asm	/^c0100e81:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100e85	obj/kernel.asm	/^c0100e85:	c7 04 24 7d 58 11 c0 	movl   $0xc011587d,(%esp)$/;"	l
c0100e8c	obj/kernel.asm	/^c0100e8c:	e8 d4 f4 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100e91	obj/kernel.asm	/^c0100e91:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100e95	obj/kernel.asm	/^c0100e95:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e98	obj/kernel.asm	/^c0100e98:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100e9b	obj/kernel.asm	/^c0100e9b:	76 b9                	jbe    c0100e56 <mon_help+0xf>$/;"	l
c0100e9d	obj/kernel.asm	/^c0100e9d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100ea2	obj/kernel.asm	/^c0100ea2:	c9                   	leave  $/;"	l
c0100ea3	obj/kernel.asm	/^c0100ea3:	c3                   	ret    $/;"	l
c0100ea4	obj/kernel.asm	/^c0100ea4 <mon_kerninfo>:$/;"	l
c0100ea4	obj/kernel.asm	/^c0100ea4:	55                   	push   %ebp$/;"	l
c0100ea5	obj/kernel.asm	/^c0100ea5:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ea7	obj/kernel.asm	/^c0100ea7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100eaa	obj/kernel.asm	/^c0100eaa:	e8 c3 fb ff ff       	call   c0100a72 <print_kerninfo>$/;"	l
c0100eaf	obj/kernel.asm	/^c0100eaf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100eb4	obj/kernel.asm	/^c0100eb4:	c9                   	leave  $/;"	l
c0100eb5	obj/kernel.asm	/^c0100eb5:	c3                   	ret    $/;"	l
c0100eb6	obj/kernel.asm	/^c0100eb6 <mon_backtrace>:$/;"	l
c0100eb6	obj/kernel.asm	/^c0100eb6:	55                   	push   %ebp$/;"	l
c0100eb7	obj/kernel.asm	/^c0100eb7:	89 e5                	mov    %esp,%ebp$/;"	l
c0100eb9	obj/kernel.asm	/^c0100eb9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100ebc	obj/kernel.asm	/^c0100ebc:	e8 fb fc ff ff       	call   c0100bbc <print_stackframe>$/;"	l
c0100ec1	obj/kernel.asm	/^c0100ec1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100ec6	obj/kernel.asm	/^c0100ec6:	c9                   	leave  $/;"	l
c0100ec7	obj/kernel.asm	/^c0100ec7:	c3                   	ret    $/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8 <__panic>:$/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8:	55                   	push   %ebp$/;"	l
c0100ec9	obj/kernel.asm	/^c0100ec9:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ecb	obj/kernel.asm	/^c0100ecb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100ece	obj/kernel.asm	/^c0100ece:	a1 00 f3 14 c0       	mov    0xc014f300,%eax$/;"	l
c0100ed3	obj/kernel.asm	/^c0100ed3:	85 c0                	test   %eax,%eax$/;"	l
c0100ed5	obj/kernel.asm	/^c0100ed5:	74 02                	je     c0100ed9 <__panic+0x11>$/;"	l
c0100ed7	obj/kernel.asm	/^c0100ed7:	eb 48                	jmp    c0100f21 <__panic+0x59>$/;"	l
c0100ed9	obj/kernel.asm	/^c0100ed9:	c7 05 00 f3 14 c0 01 	movl   $0x1,0xc014f300$/;"	l
c0100ee0	obj/kernel.asm	/^c0100ee0:	00 00 00 $/;"	l
c0100ee3	obj/kernel.asm	/^c0100ee3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100ee6	obj/kernel.asm	/^c0100ee6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100ee9	obj/kernel.asm	/^c0100ee9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100eec	obj/kernel.asm	/^c0100eec:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100ef0	obj/kernel.asm	/^c0100ef0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ef3	obj/kernel.asm	/^c0100ef3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100ef7	obj/kernel.asm	/^c0100ef7:	c7 04 24 86 58 11 c0 	movl   $0xc0115886,(%esp)$/;"	l
c0100efe	obj/kernel.asm	/^c0100efe:	e8 62 f4 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100f03	obj/kernel.asm	/^c0100f03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100f06	obj/kernel.asm	/^c0100f06:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100f0a	obj/kernel.asm	/^c0100f0a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100f0d	obj/kernel.asm	/^c0100f0d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f10	obj/kernel.asm	/^c0100f10:	e8 15 f4 ff ff       	call   c010032a <vcprintf>$/;"	l
c0100f15	obj/kernel.asm	/^c0100f15:	c7 04 24 a2 58 11 c0 	movl   $0xc01158a2,(%esp)$/;"	l
c0100f1c	obj/kernel.asm	/^c0100f1c:	e8 44 f4 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100f21	obj/kernel.asm	/^c0100f21:	e8 04 12 00 00       	call   c010212a <intr_disable>$/;"	l
c0100f26	obj/kernel.asm	/^c0100f26:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100f2d	obj/kernel.asm	/^c0100f2d:	e8 b5 fe ff ff       	call   c0100de7 <kmonitor>$/;"	l
c0100f32	obj/kernel.asm	/^c0100f32:	eb f2                	jmp    c0100f26 <__panic+0x5e>$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34 <__warn>:$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	55                   	push   %ebp$/;"	l
c0100f35	obj/kernel.asm	/^c0100f35:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f37	obj/kernel.asm	/^c0100f37:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100f3a	obj/kernel.asm	/^c0100f3a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100f3d	obj/kernel.asm	/^c0100f3d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100f40	obj/kernel.asm	/^c0100f40:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100f43	obj/kernel.asm	/^c0100f43:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100f47	obj/kernel.asm	/^c0100f47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100f4a	obj/kernel.asm	/^c0100f4a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100f4e	obj/kernel.asm	/^c0100f4e:	c7 04 24 a4 58 11 c0 	movl   $0xc01158a4,(%esp)$/;"	l
c0100f55	obj/kernel.asm	/^c0100f55:	e8 0b f4 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100f5a	obj/kernel.asm	/^c0100f5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100f5d	obj/kernel.asm	/^c0100f5d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100f61	obj/kernel.asm	/^c0100f61:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100f64	obj/kernel.asm	/^c0100f64:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f67	obj/kernel.asm	/^c0100f67:	e8 be f3 ff ff       	call   c010032a <vcprintf>$/;"	l
c0100f6c	obj/kernel.asm	/^c0100f6c:	c7 04 24 a2 58 11 c0 	movl   $0xc01158a2,(%esp)$/;"	l
c0100f73	obj/kernel.asm	/^c0100f73:	e8 ed f3 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100f78	obj/kernel.asm	/^c0100f78:	c9                   	leave  $/;"	l
c0100f79	obj/kernel.asm	/^c0100f79:	c3                   	ret    $/;"	l
c0100f7a	obj/kernel.asm	/^c0100f7a <is_kernel_panic>:$/;"	l
c0100f7a	obj/kernel.asm	/^c0100f7a:	55                   	push   %ebp$/;"	l
c0100f7b	obj/kernel.asm	/^c0100f7b:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f7d	obj/kernel.asm	/^c0100f7d:	a1 00 f3 14 c0       	mov    0xc014f300,%eax$/;"	l
c0100f82	obj/kernel.asm	/^c0100f82:	5d                   	pop    %ebp$/;"	l
c0100f83	obj/kernel.asm	/^c0100f83:	c3                   	ret    $/;"	l
c0100f84	obj/kernel.asm	/^c0100f84 <SYSTEM_READ_TIMER>:$/;"	l
c0100f84	obj/kernel.asm	/^c0100f84:	55                   	push   %ebp$/;"	l
c0100f85	obj/kernel.asm	/^c0100f85:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f87	obj/kernel.asm	/^c0100f87:	a1 10 30 15 c0       	mov    0xc0153010,%eax$/;"	l
c0100f8c	obj/kernel.asm	/^c0100f8c:	5d                   	pop    %ebp$/;"	l
c0100f8d	obj/kernel.asm	/^c0100f8d:	c3                   	ret    $/;"	l
c0100f8e	obj/kernel.asm	/^c0100f8e <clock_init>:$/;"	l
c0100f8e	obj/kernel.asm	/^c0100f8e:	55                   	push   %ebp$/;"	l
c0100f8f	obj/kernel.asm	/^c0100f8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f91	obj/kernel.asm	/^c0100f91:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100f94	obj/kernel.asm	/^c0100f94:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c0100f9a	obj/kernel.asm	/^c0100f9a:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c0100f9e	obj/kernel.asm	/^c0100f9e:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0100fa2	obj/kernel.asm	/^c0100fa2:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0100fa6	obj/kernel.asm	/^c0100fa6:	ee                   	out    %al,(%dx)$/;"	l
c0100fa7	obj/kernel.asm	/^c0100fa7:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c0100fad	obj/kernel.asm	/^c0100fad:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c0100fb1	obj/kernel.asm	/^c0100fb1:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0100fb5	obj/kernel.asm	/^c0100fb5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0100fb9	obj/kernel.asm	/^c0100fb9:	ee                   	out    %al,(%dx)$/;"	l
c0100fba	obj/kernel.asm	/^c0100fba:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c0100fc0	obj/kernel.asm	/^c0100fc0:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c0100fc4	obj/kernel.asm	/^c0100fc4:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0100fc8	obj/kernel.asm	/^c0100fc8:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0100fcc	obj/kernel.asm	/^c0100fcc:	ee                   	out    %al,(%dx)$/;"	l
c0100fcd	obj/kernel.asm	/^c0100fcd:	c7 05 10 30 15 c0 00 	movl   $0x0,0xc0153010$/;"	l
c0100fd4	obj/kernel.asm	/^c0100fd4:	00 00 00 $/;"	l
c0100fd7	obj/kernel.asm	/^c0100fd7:	c7 04 24 c2 58 11 c0 	movl   $0xc01158c2,(%esp)$/;"	l
c0100fde	obj/kernel.asm	/^c0100fde:	e8 82 f3 ff ff       	call   c0100365 <cprintf>$/;"	l
c0100fe3	obj/kernel.asm	/^c0100fe3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100fea	obj/kernel.asm	/^c0100fea:	e8 99 11 00 00       	call   c0102188 <pic_enable>$/;"	l
c0100fef	obj/kernel.asm	/^c0100fef:	c9                   	leave  $/;"	l
c0100ff0	obj/kernel.asm	/^c0100ff0:	c3                   	ret    $/;"	l
c0100ff1	obj/kernel.asm	/^c0100ff1 <__intr_save>:$/;"	l
c0100ff1	obj/kernel.asm	/^c0100ff1:	55                   	push   %ebp$/;"	l
c0100ff2	obj/kernel.asm	/^c0100ff2:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ff4	obj/kernel.asm	/^c0100ff4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100ff7	obj/kernel.asm	/^c0100ff7:	9c                   	pushf  $/;"	l
c0100ff8	obj/kernel.asm	/^c0100ff8:	58                   	pop    %eax$/;"	l
c0100ff9	obj/kernel.asm	/^c0100ff9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100ffc	obj/kernel.asm	/^c0100ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100fff	obj/kernel.asm	/^c0100fff:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101004	obj/kernel.asm	/^c0101004:	85 c0                	test   %eax,%eax$/;"	l
c0101006	obj/kernel.asm	/^c0101006:	74 0c                	je     c0101014 <__intr_save+0x23>$/;"	l
c0101008	obj/kernel.asm	/^c0101008:	e8 1d 11 00 00       	call   c010212a <intr_disable>$/;"	l
c010100d	obj/kernel.asm	/^c010100d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101012	obj/kernel.asm	/^c0101012:	eb 05                	jmp    c0101019 <__intr_save+0x28>$/;"	l
c0101014	obj/kernel.asm	/^c0101014:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101019	obj/kernel.asm	/^c0101019:	c9                   	leave  $/;"	l
c010101a	obj/kernel.asm	/^c010101a:	c3                   	ret    $/;"	l
c010101b	obj/kernel.asm	/^c010101b <__intr_restore>:$/;"	l
c010101b	obj/kernel.asm	/^c010101b:	55                   	push   %ebp$/;"	l
c010101c	obj/kernel.asm	/^c010101c:	89 e5                	mov    %esp,%ebp$/;"	l
c010101e	obj/kernel.asm	/^c010101e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101021	obj/kernel.asm	/^c0101021:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0101025	obj/kernel.asm	/^c0101025:	74 05                	je     c010102c <__intr_restore+0x11>$/;"	l
c0101027	obj/kernel.asm	/^c0101027:	e8 f8 10 00 00       	call   c0102124 <intr_enable>$/;"	l
c010102c	obj/kernel.asm	/^c010102c:	c9                   	leave  $/;"	l
c010102d	obj/kernel.asm	/^c010102d:	c3                   	ret    $/;"	l
c010102e	obj/kernel.asm	/^c010102e <delay>:$/;"	l
c010102e	obj/kernel.asm	/^c010102e:	55                   	push   %ebp$/;"	l
c010102f	obj/kernel.asm	/^c010102f:	89 e5                	mov    %esp,%ebp$/;"	l
c0101031	obj/kernel.asm	/^c0101031:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101034	obj/kernel.asm	/^c0101034:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c010103a	obj/kernel.asm	/^c010103a:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c010103e	obj/kernel.asm	/^c010103e:	89 c2                	mov    %eax,%edx$/;"	l
c0101040	obj/kernel.asm	/^c0101040:	ec                   	in     (%dx),%al$/;"	l
c0101041	obj/kernel.asm	/^c0101041:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101044	obj/kernel.asm	/^c0101044:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c010104a	obj/kernel.asm	/^c010104a:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c010104e	obj/kernel.asm	/^c010104e:	89 c2                	mov    %eax,%edx$/;"	l
c0101050	obj/kernel.asm	/^c0101050:	ec                   	in     (%dx),%al$/;"	l
c0101051	obj/kernel.asm	/^c0101051:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101054	obj/kernel.asm	/^c0101054:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c010105a	obj/kernel.asm	/^c010105a:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010105e	obj/kernel.asm	/^c010105e:	89 c2                	mov    %eax,%edx$/;"	l
c0101060	obj/kernel.asm	/^c0101060:	ec                   	in     (%dx),%al$/;"	l
c0101061	obj/kernel.asm	/^c0101061:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101064	obj/kernel.asm	/^c0101064:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c010106a	obj/kernel.asm	/^c010106a:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010106e	obj/kernel.asm	/^c010106e:	89 c2                	mov    %eax,%edx$/;"	l
c0101070	obj/kernel.asm	/^c0101070:	ec                   	in     (%dx),%al$/;"	l
c0101071	obj/kernel.asm	/^c0101071:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0101074	obj/kernel.asm	/^c0101074:	c9                   	leave  $/;"	l
c0101075	obj/kernel.asm	/^c0101075:	c3                   	ret    $/;"	l
c0101076	obj/kernel.asm	/^c0101076 <cga_init>:$/;"	l
c0101076	obj/kernel.asm	/^c0101076:	55                   	push   %ebp$/;"	l
c0101077	obj/kernel.asm	/^c0101077:	89 e5                	mov    %esp,%ebp$/;"	l
c0101079	obj/kernel.asm	/^c0101079:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010107c	obj/kernel.asm	/^c010107c:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c0101083	obj/kernel.asm	/^c0101083:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101086	obj/kernel.asm	/^c0101086:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0101089	obj/kernel.asm	/^c0101089:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c010108d	obj/kernel.asm	/^c010108d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101090	obj/kernel.asm	/^c0101090:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c0101095	obj/kernel.asm	/^c0101095:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101098	obj/kernel.asm	/^c0101098:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c010109b	obj/kernel.asm	/^c010109b:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c010109f	obj/kernel.asm	/^c010109f:	74 12                	je     c01010b3 <cga_init+0x3d>$/;"	l
c01010a1	obj/kernel.asm	/^c01010a1:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c01010a8	obj/kernel.asm	/^c01010a8:	66 c7 05 26 f3 14 c0 	movw   $0x3b4,0xc014f326$/;"	l
c01010af	obj/kernel.asm	/^c01010af:	b4 03 $/;"	l
c01010b1	obj/kernel.asm	/^c01010b1:	eb 13                	jmp    c01010c6 <cga_init+0x50>$/;"	l
c01010b3	obj/kernel.asm	/^c01010b3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01010b6	obj/kernel.asm	/^c01010b6:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01010ba	obj/kernel.asm	/^c01010ba:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01010bd	obj/kernel.asm	/^c01010bd:	66 c7 05 26 f3 14 c0 	movw   $0x3d4,0xc014f326$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	d4 03 $/;"	d
c01010c6	obj/kernel.asm	/^c01010c6:	0f b7 05 26 f3 14 c0 	movzwl 0xc014f326,%eax$/;"	l
c01010cd	obj/kernel.asm	/^c01010cd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01010d0	obj/kernel.asm	/^c01010d0:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01010d4	obj/kernel.asm	/^c01010d4:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c01010d8	obj/kernel.asm	/^c01010d8:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01010dc	obj/kernel.asm	/^c01010dc:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01010e0	obj/kernel.asm	/^c01010e0:	ee                   	out    %al,(%dx)$/;"	l
c01010e1	obj/kernel.asm	/^c01010e1:	0f b7 05 26 f3 14 c0 	movzwl 0xc014f326,%eax$/;"	l
c01010e8	obj/kernel.asm	/^c01010e8:	83 c0 01             	add    $0x1,%eax$/;"	l
c01010eb	obj/kernel.asm	/^c01010eb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01010ee	obj/kernel.asm	/^c01010ee:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c01010f2	obj/kernel.asm	/^c01010f2:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c01010f6	obj/kernel.asm	/^c01010f6:	89 c2                	mov    %eax,%edx$/;"	l
c01010f8	obj/kernel.asm	/^c01010f8:	ec                   	in     (%dx),%al$/;"	l
c01010f9	obj/kernel.asm	/^c01010f9:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c01010fc	obj/kernel.asm	/^c01010fc:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101100	obj/kernel.asm	/^c0101100:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0101106	obj/kernel.asm	/^c0101106:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101109	obj/kernel.asm	/^c0101109:	0f b7 05 26 f3 14 c0 	movzwl 0xc014f326,%eax$/;"	l
c0101110	obj/kernel.asm	/^c0101110:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101113	obj/kernel.asm	/^c0101113:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101117	obj/kernel.asm	/^c0101117:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c010111b	obj/kernel.asm	/^c010111b:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010111f	obj/kernel.asm	/^c010111f:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101123	obj/kernel.asm	/^c0101123:	ee                   	out    %al,(%dx)$/;"	l
c0101124	obj/kernel.asm	/^c0101124:	0f b7 05 26 f3 14 c0 	movzwl 0xc014f326,%eax$/;"	l
c010112b	obj/kernel.asm	/^c010112b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010112e	obj/kernel.asm	/^c010112e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101131	obj/kernel.asm	/^c0101131:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0101135	obj/kernel.asm	/^c0101135:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c0101139	obj/kernel.asm	/^c0101139:	89 c2                	mov    %eax,%edx$/;"	l
c010113b	obj/kernel.asm	/^c010113b:	ec                   	in     (%dx),%al$/;"	l
c010113c	obj/kernel.asm	/^c010113c:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c010113f	obj/kernel.asm	/^c010113f:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101143	obj/kernel.asm	/^c0101143:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101146	obj/kernel.asm	/^c0101146:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c0101149	obj/kernel.asm	/^c0101149:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010114c	obj/kernel.asm	/^c010114c:	a3 20 f3 14 c0       	mov    %eax,0xc014f320$/;"	l
c0101151	obj/kernel.asm	/^c0101151:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101154	obj/kernel.asm	/^c0101154:	66 a3 24 f3 14 c0    	mov    %ax,0xc014f324$/;"	l
c010115a	obj/kernel.asm	/^c010115a:	c9                   	leave  $/;"	l
c010115b	obj/kernel.asm	/^c010115b:	c3                   	ret    $/;"	l
c010115c	obj/kernel.asm	/^c010115c <serial_init>:$/;"	l
c010115c	obj/kernel.asm	/^c010115c:	55                   	push   %ebp$/;"	l
c010115d	obj/kernel.asm	/^c010115d:	89 e5                	mov    %esp,%ebp$/;"	l
c010115f	obj/kernel.asm	/^c010115f:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0101162	obj/kernel.asm	/^c0101162:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c0101168	obj/kernel.asm	/^c0101168:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c010116c	obj/kernel.asm	/^c010116c:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101170	obj/kernel.asm	/^c0101170:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101174	obj/kernel.asm	/^c0101174:	ee                   	out    %al,(%dx)$/;"	l
c0101175	obj/kernel.asm	/^c0101175:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c010117b	obj/kernel.asm	/^c010117b:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c010117f	obj/kernel.asm	/^c010117f:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101183	obj/kernel.asm	/^c0101183:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101187	obj/kernel.asm	/^c0101187:	ee                   	out    %al,(%dx)$/;"	l
c0101188	obj/kernel.asm	/^c0101188:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c010118e	obj/kernel.asm	/^c010118e:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c0101192	obj/kernel.asm	/^c0101192:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101196	obj/kernel.asm	/^c0101196:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c010119a	obj/kernel.asm	/^c010119a:	ee                   	out    %al,(%dx)$/;"	l
c010119b	obj/kernel.asm	/^c010119b:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01011a1	obj/kernel.asm	/^c01011a1:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01011a5	obj/kernel.asm	/^c01011a5:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01011a9	obj/kernel.asm	/^c01011a9:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01011ad	obj/kernel.asm	/^c01011ad:	ee                   	out    %al,(%dx)$/;"	l
c01011ae	obj/kernel.asm	/^c01011ae:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01011b4	obj/kernel.asm	/^c01011b4:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01011b8	obj/kernel.asm	/^c01011b8:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01011bc	obj/kernel.asm	/^c01011bc:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01011c0	obj/kernel.asm	/^c01011c0:	ee                   	out    %al,(%dx)$/;"	l
c01011c1	obj/kernel.asm	/^c01011c1:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01011c7	obj/kernel.asm	/^c01011c7:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01011cb	obj/kernel.asm	/^c01011cb:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01011cf	obj/kernel.asm	/^c01011cf:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01011d3	obj/kernel.asm	/^c01011d3:	ee                   	out    %al,(%dx)$/;"	l
c01011d4	obj/kernel.asm	/^c01011d4:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01011da	obj/kernel.asm	/^c01011da:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c01011de	obj/kernel.asm	/^c01011de:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01011e2	obj/kernel.asm	/^c01011e2:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01011e6	obj/kernel.asm	/^c01011e6:	ee                   	out    %al,(%dx)$/;"	l
c01011e7	obj/kernel.asm	/^c01011e7:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c01011ed	obj/kernel.asm	/^c01011ed:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c01011f1	obj/kernel.asm	/^c01011f1:	89 c2                	mov    %eax,%edx$/;"	l
c01011f3	obj/kernel.asm	/^c01011f3:	ec                   	in     (%dx),%al$/;"	l
c01011f4	obj/kernel.asm	/^c01011f4:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01011f7	obj/kernel.asm	/^c01011f7:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01011fb	obj/kernel.asm	/^c01011fb:	3c ff                	cmp    $0xff,%al$/;"	l
c01011fd	obj/kernel.asm	/^c01011fd:	0f 95 c0             	setne  %al$/;"	l
c0101200	obj/kernel.asm	/^c0101200:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101203	obj/kernel.asm	/^c0101203:	a3 28 f3 14 c0       	mov    %eax,0xc014f328$/;"	l
c0101208	obj/kernel.asm	/^c0101208:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c010120e	obj/kernel.asm	/^c010120e:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c0101212	obj/kernel.asm	/^c0101212:	89 c2                	mov    %eax,%edx$/;"	l
c0101214	obj/kernel.asm	/^c0101214:	ec                   	in     (%dx),%al$/;"	l
c0101215	obj/kernel.asm	/^c0101215:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c0101218	obj/kernel.asm	/^c0101218:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c010121e	obj/kernel.asm	/^c010121e:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c0101222	obj/kernel.asm	/^c0101222:	89 c2                	mov    %eax,%edx$/;"	l
c0101224	obj/kernel.asm	/^c0101224:	ec                   	in     (%dx),%al$/;"	l
c0101225	obj/kernel.asm	/^c0101225:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101228	obj/kernel.asm	/^c0101228:	a1 28 f3 14 c0       	mov    0xc014f328,%eax$/;"	l
c010122d	obj/kernel.asm	/^c010122d:	85 c0                	test   %eax,%eax$/;"	l
c010122f	obj/kernel.asm	/^c010122f:	74 0c                	je     c010123d <serial_init+0xe1>$/;"	l
c0101231	obj/kernel.asm	/^c0101231:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c0101238	obj/kernel.asm	/^c0101238:	e8 4b 0f 00 00       	call   c0102188 <pic_enable>$/;"	l
c010123d	obj/kernel.asm	/^c010123d:	c9                   	leave  $/;"	l
c010123e	obj/kernel.asm	/^c010123e:	c3                   	ret    $/;"	l
c010123f	obj/kernel.asm	/^c010123f <lpt_putc_sub>:$/;"	l
c010123f	obj/kernel.asm	/^c010123f:	55                   	push   %ebp$/;"	l
c0101240	obj/kernel.asm	/^c0101240:	89 e5                	mov    %esp,%ebp$/;"	l
c0101242	obj/kernel.asm	/^c0101242:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101245	obj/kernel.asm	/^c0101245:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010124c	obj/kernel.asm	/^c010124c:	eb 09                	jmp    c0101257 <lpt_putc_sub+0x18>$/;"	l
c010124e	obj/kernel.asm	/^c010124e:	e8 db fd ff ff       	call   c010102e <delay>$/;"	l
c0101253	obj/kernel.asm	/^c0101253:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101257	obj/kernel.asm	/^c0101257:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c010125d	obj/kernel.asm	/^c010125d:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101261	obj/kernel.asm	/^c0101261:	89 c2                	mov    %eax,%edx$/;"	l
c0101263	obj/kernel.asm	/^c0101263:	ec                   	in     (%dx),%al$/;"	l
c0101264	obj/kernel.asm	/^c0101264:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101267	obj/kernel.asm	/^c0101267:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010126b	obj/kernel.asm	/^c010126b:	84 c0                	test   %al,%al$/;"	l
c010126d	obj/kernel.asm	/^c010126d:	78 09                	js     c0101278 <lpt_putc_sub+0x39>$/;"	l
c010126f	obj/kernel.asm	/^c010126f:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101276	obj/kernel.asm	/^c0101276:	7e d6                	jle    c010124e <lpt_putc_sub+0xf>$/;"	l
c0101278	obj/kernel.asm	/^c0101278:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010127b	obj/kernel.asm	/^c010127b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010127e	obj/kernel.asm	/^c010127e:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c0101284	obj/kernel.asm	/^c0101284:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101287	obj/kernel.asm	/^c0101287:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010128b	obj/kernel.asm	/^c010128b:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c010128f	obj/kernel.asm	/^c010128f:	ee                   	out    %al,(%dx)$/;"	l
c0101290	obj/kernel.asm	/^c0101290:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c0101296	obj/kernel.asm	/^c0101296:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c010129a	obj/kernel.asm	/^c010129a:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010129e	obj/kernel.asm	/^c010129e:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01012a2	obj/kernel.asm	/^c01012a2:	ee                   	out    %al,(%dx)$/;"	l
c01012a3	obj/kernel.asm	/^c01012a3:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01012a9	obj/kernel.asm	/^c01012a9:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01012ad	obj/kernel.asm	/^c01012ad:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01012b1	obj/kernel.asm	/^c01012b1:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01012b5	obj/kernel.asm	/^c01012b5:	ee                   	out    %al,(%dx)$/;"	l
c01012b6	obj/kernel.asm	/^c01012b6:	c9                   	leave  $/;"	l
c01012b7	obj/kernel.asm	/^c01012b7:	c3                   	ret    $/;"	l
c01012b8	obj/kernel.asm	/^c01012b8 <lpt_putc>:$/;"	l
c01012b8	obj/kernel.asm	/^c01012b8:	55                   	push   %ebp$/;"	l
c01012b9	obj/kernel.asm	/^c01012b9:	89 e5                	mov    %esp,%ebp$/;"	l
c01012bb	obj/kernel.asm	/^c01012bb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01012be	obj/kernel.asm	/^c01012be:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01012c2	obj/kernel.asm	/^c01012c2:	74 0d                	je     c01012d1 <lpt_putc+0x19>$/;"	l
c01012c4	obj/kernel.asm	/^c01012c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01012c7	obj/kernel.asm	/^c01012c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01012ca	obj/kernel.asm	/^c01012ca:	e8 70 ff ff ff       	call   c010123f <lpt_putc_sub>$/;"	l
c01012cf	obj/kernel.asm	/^c01012cf:	eb 24                	jmp    c01012f5 <lpt_putc+0x3d>$/;"	l
c01012d1	obj/kernel.asm	/^c01012d1:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01012d8	obj/kernel.asm	/^c01012d8:	e8 62 ff ff ff       	call   c010123f <lpt_putc_sub>$/;"	l
c01012dd	obj/kernel.asm	/^c01012dd:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c01012e4	obj/kernel.asm	/^c01012e4:	e8 56 ff ff ff       	call   c010123f <lpt_putc_sub>$/;"	l
c01012e9	obj/kernel.asm	/^c01012e9:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01012f0	obj/kernel.asm	/^c01012f0:	e8 4a ff ff ff       	call   c010123f <lpt_putc_sub>$/;"	l
c01012f5	obj/kernel.asm	/^c01012f5:	c9                   	leave  $/;"	l
c01012f6	obj/kernel.asm	/^c01012f6:	c3                   	ret    $/;"	l
c01012f7	obj/kernel.asm	/^c01012f7 <cga_putc>:$/;"	l
c01012f7	obj/kernel.asm	/^c01012f7:	55                   	push   %ebp$/;"	l
c01012f8	obj/kernel.asm	/^c01012f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01012fa	obj/kernel.asm	/^c01012fa:	53                   	push   %ebx$/;"	l
c01012fb	obj/kernel.asm	/^c01012fb:	83 ec 34             	sub    $0x34,%esp$/;"	l
c01012fe	obj/kernel.asm	/^c01012fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101301	obj/kernel.asm	/^c0101301:	b0 00                	mov    $0x0,%al$/;"	l
c0101303	obj/kernel.asm	/^c0101303:	85 c0                	test   %eax,%eax$/;"	l
c0101305	obj/kernel.asm	/^c0101305:	75 07                	jne    c010130e <cga_putc+0x17>$/;"	l
c0101307	obj/kernel.asm	/^c0101307:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c010130e	obj/kernel.asm	/^c010130e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101311	obj/kernel.asm	/^c0101311:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101314	obj/kernel.asm	/^c0101314:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c0101317	obj/kernel.asm	/^c0101317:	74 4c                	je     c0101365 <cga_putc+0x6e>$/;"	l
c0101319	obj/kernel.asm	/^c0101319:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c010131c	obj/kernel.asm	/^c010131c:	74 57                	je     c0101375 <cga_putc+0x7e>$/;"	l
c010131e	obj/kernel.asm	/^c010131e:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0101321	obj/kernel.asm	/^c0101321:	0f 85 88 00 00 00    	jne    c01013af <cga_putc+0xb8>$/;"	l
c0101327	obj/kernel.asm	/^c0101327:	0f b7 05 24 f3 14 c0 	movzwl 0xc014f324,%eax$/;"	l
c010132e	obj/kernel.asm	/^c010132e:	66 85 c0             	test   %ax,%ax$/;"	l
c0101331	obj/kernel.asm	/^c0101331:	74 30                	je     c0101363 <cga_putc+0x6c>$/;"	l
c0101333	obj/kernel.asm	/^c0101333:	0f b7 05 24 f3 14 c0 	movzwl 0xc014f324,%eax$/;"	l
c010133a	obj/kernel.asm	/^c010133a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010133d	obj/kernel.asm	/^c010133d:	66 a3 24 f3 14 c0    	mov    %ax,0xc014f324$/;"	l
c0101343	obj/kernel.asm	/^c0101343:	a1 20 f3 14 c0       	mov    0xc014f320,%eax$/;"	l
c0101348	obj/kernel.asm	/^c0101348:	0f b7 15 24 f3 14 c0 	movzwl 0xc014f324,%edx$/;"	l
c010134f	obj/kernel.asm	/^c010134f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101352	obj/kernel.asm	/^c0101352:	01 d2                	add    %edx,%edx$/;"	l
c0101354	obj/kernel.asm	/^c0101354:	01 c2                	add    %eax,%edx$/;"	l
c0101356	obj/kernel.asm	/^c0101356:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101359	obj/kernel.asm	/^c0101359:	b0 00                	mov    $0x0,%al$/;"	l
c010135b	obj/kernel.asm	/^c010135b:	83 c8 20             	or     $0x20,%eax$/;"	l
c010135e	obj/kernel.asm	/^c010135e:	66 89 02             	mov    %ax,(%edx)$/;"	l
c0101361	obj/kernel.asm	/^c0101361:	eb 72                	jmp    c01013d5 <cga_putc+0xde>$/;"	l
c0101363	obj/kernel.asm	/^c0101363:	eb 70                	jmp    c01013d5 <cga_putc+0xde>$/;"	l
c0101365	obj/kernel.asm	/^c0101365:	0f b7 05 24 f3 14 c0 	movzwl 0xc014f324,%eax$/;"	l
c010136c	obj/kernel.asm	/^c010136c:	83 c0 50             	add    $0x50,%eax$/;"	l
c010136f	obj/kernel.asm	/^c010136f:	66 a3 24 f3 14 c0    	mov    %ax,0xc014f324$/;"	l
c0101375	obj/kernel.asm	/^c0101375:	0f b7 1d 24 f3 14 c0 	movzwl 0xc014f324,%ebx$/;"	l
c010137c	obj/kernel.asm	/^c010137c:	0f b7 0d 24 f3 14 c0 	movzwl 0xc014f324,%ecx$/;"	l
c0101383	obj/kernel.asm	/^c0101383:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c0101386	obj/kernel.asm	/^c0101386:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c010138c	obj/kernel.asm	/^c010138c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010138f	obj/kernel.asm	/^c010138f:	89 c2                	mov    %eax,%edx$/;"	l
c0101391	obj/kernel.asm	/^c0101391:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c0101395	obj/kernel.asm	/^c0101395:	89 d0                	mov    %edx,%eax$/;"	l
c0101397	obj/kernel.asm	/^c0101397:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010139a	obj/kernel.asm	/^c010139a:	01 d0                	add    %edx,%eax$/;"	l
c010139c	obj/kernel.asm	/^c010139c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c010139f	obj/kernel.asm	/^c010139f:	29 c1                	sub    %eax,%ecx$/;"	l
c01013a1	obj/kernel.asm	/^c01013a1:	89 ca                	mov    %ecx,%edx$/;"	l
c01013a3	obj/kernel.asm	/^c01013a3:	89 d8                	mov    %ebx,%eax$/;"	l
c01013a5	obj/kernel.asm	/^c01013a5:	29 d0                	sub    %edx,%eax$/;"	l
c01013a7	obj/kernel.asm	/^c01013a7:	66 a3 24 f3 14 c0    	mov    %ax,0xc014f324$/;"	l
c01013ad	obj/kernel.asm	/^c01013ad:	eb 26                	jmp    c01013d5 <cga_putc+0xde>$/;"	l
c01013af	obj/kernel.asm	/^c01013af:	8b 0d 20 f3 14 c0    	mov    0xc014f320,%ecx$/;"	l
c01013b5	obj/kernel.asm	/^c01013b5:	0f b7 05 24 f3 14 c0 	movzwl 0xc014f324,%eax$/;"	l
c01013bc	obj/kernel.asm	/^c01013bc:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01013bf	obj/kernel.asm	/^c01013bf:	66 89 15 24 f3 14 c0 	mov    %dx,0xc014f324$/;"	l
c01013c6	obj/kernel.asm	/^c01013c6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01013c9	obj/kernel.asm	/^c01013c9:	01 c0                	add    %eax,%eax$/;"	l
c01013cb	obj/kernel.asm	/^c01013cb:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c01013ce	obj/kernel.asm	/^c01013ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01013d1	obj/kernel.asm	/^c01013d1:	66 89 02             	mov    %ax,(%edx)$/;"	l
c01013d4	obj/kernel.asm	/^c01013d4:	90                   	nop$/;"	l
c01013d5	obj/kernel.asm	/^c01013d5:	0f b7 05 24 f3 14 c0 	movzwl 0xc014f324,%eax$/;"	l
c01013dc	obj/kernel.asm	/^c01013dc:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c01013e0	obj/kernel.asm	/^c01013e0:	76 5b                	jbe    c010143d <cga_putc+0x146>$/;"	l
c01013e2	obj/kernel.asm	/^c01013e2:	a1 20 f3 14 c0       	mov    0xc014f320,%eax$/;"	l
c01013e7	obj/kernel.asm	/^c01013e7:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c01013ed	obj/kernel.asm	/^c01013ed:	a1 20 f3 14 c0       	mov    0xc014f320,%eax$/;"	l
c01013f2	obj/kernel.asm	/^c01013f2:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
c01013f9	obj/kernel.asm	/^c01013f9:	00 $/;"	l
c01013fa	obj/kernel.asm	/^c01013fa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01013fe	obj/kernel.asm	/^c01013fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101401	obj/kernel.asm	/^c0101401:	e8 52 40 01 00       	call   c0115458 <memmove>$/;"	l
c0101406	obj/kernel.asm	/^c0101406:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c010140d	obj/kernel.asm	/^c010140d:	eb 15                	jmp    c0101424 <cga_putc+0x12d>$/;"	l
c010140f	obj/kernel.asm	/^c010140f:	a1 20 f3 14 c0       	mov    0xc014f320,%eax$/;"	l
c0101414	obj/kernel.asm	/^c0101414:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101417	obj/kernel.asm	/^c0101417:	01 d2                	add    %edx,%edx$/;"	l
c0101419	obj/kernel.asm	/^c0101419:	01 d0                	add    %edx,%eax$/;"	l
c010141b	obj/kernel.asm	/^c010141b:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101420	obj/kernel.asm	/^c0101420:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0101424	obj/kernel.asm	/^c0101424:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c010142b	obj/kernel.asm	/^c010142b:	7e e2                	jle    c010140f <cga_putc+0x118>$/;"	l
c010142d	obj/kernel.asm	/^c010142d:	0f b7 05 24 f3 14 c0 	movzwl 0xc014f324,%eax$/;"	l
c0101434	obj/kernel.asm	/^c0101434:	83 e8 50             	sub    $0x50,%eax$/;"	l
c0101437	obj/kernel.asm	/^c0101437:	66 a3 24 f3 14 c0    	mov    %ax,0xc014f324$/;"	l
c010143d	obj/kernel.asm	/^c010143d:	0f b7 05 26 f3 14 c0 	movzwl 0xc014f326,%eax$/;"	l
c0101444	obj/kernel.asm	/^c0101444:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101447	obj/kernel.asm	/^c0101447:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c010144b	obj/kernel.asm	/^c010144b:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c010144f	obj/kernel.asm	/^c010144f:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101453	obj/kernel.asm	/^c0101453:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101457	obj/kernel.asm	/^c0101457:	ee                   	out    %al,(%dx)$/;"	l
c0101458	obj/kernel.asm	/^c0101458:	0f b7 05 24 f3 14 c0 	movzwl 0xc014f324,%eax$/;"	l
c010145f	obj/kernel.asm	/^c010145f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101463	obj/kernel.asm	/^c0101463:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101466	obj/kernel.asm	/^c0101466:	0f b7 15 26 f3 14 c0 	movzwl 0xc014f326,%edx$/;"	l
c010146d	obj/kernel.asm	/^c010146d:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101470	obj/kernel.asm	/^c0101470:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101473	obj/kernel.asm	/^c0101473:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c0101477	obj/kernel.asm	/^c0101477:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c010147a	obj/kernel.asm	/^c010147a:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010147e	obj/kernel.asm	/^c010147e:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101482	obj/kernel.asm	/^c0101482:	ee                   	out    %al,(%dx)$/;"	l
c0101483	obj/kernel.asm	/^c0101483:	0f b7 05 26 f3 14 c0 	movzwl 0xc014f326,%eax$/;"	l
c010148a	obj/kernel.asm	/^c010148a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010148d	obj/kernel.asm	/^c010148d:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101491	obj/kernel.asm	/^c0101491:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101495	obj/kernel.asm	/^c0101495:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101499	obj/kernel.asm	/^c0101499:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010149d	obj/kernel.asm	/^c010149d:	ee                   	out    %al,(%dx)$/;"	l
c010149e	obj/kernel.asm	/^c010149e:	0f b7 05 24 f3 14 c0 	movzwl 0xc014f324,%eax$/;"	l
c01014a5	obj/kernel.asm	/^c01014a5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014a8	obj/kernel.asm	/^c01014a8:	0f b7 15 26 f3 14 c0 	movzwl 0xc014f326,%edx$/;"	l
c01014af	obj/kernel.asm	/^c01014af:	83 c2 01             	add    $0x1,%edx$/;"	l
c01014b2	obj/kernel.asm	/^c01014b2:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01014b5	obj/kernel.asm	/^c01014b5:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c01014b9	obj/kernel.asm	/^c01014b9:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c01014bc	obj/kernel.asm	/^c01014bc:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01014c0	obj/kernel.asm	/^c01014c0:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01014c4	obj/kernel.asm	/^c01014c4:	ee                   	out    %al,(%dx)$/;"	l
c01014c5	obj/kernel.asm	/^c01014c5:	83 c4 34             	add    $0x34,%esp$/;"	l
c01014c8	obj/kernel.asm	/^c01014c8:	5b                   	pop    %ebx$/;"	l
c01014c9	obj/kernel.asm	/^c01014c9:	5d                   	pop    %ebp$/;"	l
c01014ca	obj/kernel.asm	/^c01014ca:	c3                   	ret    $/;"	l
c01014cb	obj/kernel.asm	/^c01014cb <serial_putc_sub>:$/;"	l
c01014cb	obj/kernel.asm	/^c01014cb:	55                   	push   %ebp$/;"	l
c01014cc	obj/kernel.asm	/^c01014cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01014ce	obj/kernel.asm	/^c01014ce:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01014d1	obj/kernel.asm	/^c01014d1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01014d8	obj/kernel.asm	/^c01014d8:	eb 09                	jmp    c01014e3 <serial_putc_sub+0x18>$/;"	l
c01014da	obj/kernel.asm	/^c01014da:	e8 4f fb ff ff       	call   c010102e <delay>$/;"	l
c01014df	obj/kernel.asm	/^c01014df:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01014e3	obj/kernel.asm	/^c01014e3:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01014e9	obj/kernel.asm	/^c01014e9:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01014ed	obj/kernel.asm	/^c01014ed:	89 c2                	mov    %eax,%edx$/;"	l
c01014ef	obj/kernel.asm	/^c01014ef:	ec                   	in     (%dx),%al$/;"	l
c01014f0	obj/kernel.asm	/^c01014f0:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01014f3	obj/kernel.asm	/^c01014f3:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01014f7	obj/kernel.asm	/^c01014f7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014fa	obj/kernel.asm	/^c01014fa:	83 e0 20             	and    $0x20,%eax$/;"	l
c01014fd	obj/kernel.asm	/^c01014fd:	85 c0                	test   %eax,%eax$/;"	l
c01014ff	obj/kernel.asm	/^c01014ff:	75 09                	jne    c010150a <serial_putc_sub+0x3f>$/;"	l
c0101501	obj/kernel.asm	/^c0101501:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101508	obj/kernel.asm	/^c0101508:	7e d0                	jle    c01014da <serial_putc_sub+0xf>$/;"	l
c010150a	obj/kernel.asm	/^c010150a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010150d	obj/kernel.asm	/^c010150d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101510	obj/kernel.asm	/^c0101510:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101516	obj/kernel.asm	/^c0101516:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101519	obj/kernel.asm	/^c0101519:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010151d	obj/kernel.asm	/^c010151d:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101521	obj/kernel.asm	/^c0101521:	ee                   	out    %al,(%dx)$/;"	l
c0101522	obj/kernel.asm	/^c0101522:	c9                   	leave  $/;"	l
c0101523	obj/kernel.asm	/^c0101523:	c3                   	ret    $/;"	l
c0101524	obj/kernel.asm	/^c0101524 <serial_putc>:$/;"	l
c0101524	obj/kernel.asm	/^c0101524:	55                   	push   %ebp$/;"	l
c0101525	obj/kernel.asm	/^c0101525:	89 e5                	mov    %esp,%ebp$/;"	l
c0101527	obj/kernel.asm	/^c0101527:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010152a	obj/kernel.asm	/^c010152a:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c010152e	obj/kernel.asm	/^c010152e:	74 0d                	je     c010153d <serial_putc+0x19>$/;"	l
c0101530	obj/kernel.asm	/^c0101530:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101533	obj/kernel.asm	/^c0101533:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101536	obj/kernel.asm	/^c0101536:	e8 90 ff ff ff       	call   c01014cb <serial_putc_sub>$/;"	l
c010153b	obj/kernel.asm	/^c010153b:	eb 24                	jmp    c0101561 <serial_putc+0x3d>$/;"	l
c010153d	obj/kernel.asm	/^c010153d:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c0101544	obj/kernel.asm	/^c0101544:	e8 82 ff ff ff       	call   c01014cb <serial_putc_sub>$/;"	l
c0101549	obj/kernel.asm	/^c0101549:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0101550	obj/kernel.asm	/^c0101550:	e8 76 ff ff ff       	call   c01014cb <serial_putc_sub>$/;"	l
c0101555	obj/kernel.asm	/^c0101555:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c010155c	obj/kernel.asm	/^c010155c:	e8 6a ff ff ff       	call   c01014cb <serial_putc_sub>$/;"	l
c0101561	obj/kernel.asm	/^c0101561:	c9                   	leave  $/;"	l
c0101562	obj/kernel.asm	/^c0101562:	c3                   	ret    $/;"	l
c0101563	obj/kernel.asm	/^c0101563 <cons_intr>:$/;"	l
c0101563	obj/kernel.asm	/^c0101563:	55                   	push   %ebp$/;"	l
c0101564	obj/kernel.asm	/^c0101564:	89 e5                	mov    %esp,%ebp$/;"	l
c0101566	obj/kernel.asm	/^c0101566:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101569	obj/kernel.asm	/^c0101569:	eb 33                	jmp    c010159e <cons_intr+0x3b>$/;"	l
c010156b	obj/kernel.asm	/^c010156b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010156f	obj/kernel.asm	/^c010156f:	74 2d                	je     c010159e <cons_intr+0x3b>$/;"	l
c0101571	obj/kernel.asm	/^c0101571:	a1 44 f5 14 c0       	mov    0xc014f544,%eax$/;"	l
c0101576	obj/kernel.asm	/^c0101576:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101579	obj/kernel.asm	/^c0101579:	89 15 44 f5 14 c0    	mov    %edx,0xc014f544$/;"	l
c010157f	obj/kernel.asm	/^c010157f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101582	obj/kernel.asm	/^c0101582:	88 90 40 f3 14 c0    	mov    %dl,-0x3feb0cc0(%eax)$/;"	l
c0101588	obj/kernel.asm	/^c0101588:	a1 44 f5 14 c0       	mov    0xc014f544,%eax$/;"	l
c010158d	obj/kernel.asm	/^c010158d:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101592	obj/kernel.asm	/^c0101592:	75 0a                	jne    c010159e <cons_intr+0x3b>$/;"	l
c0101594	obj/kernel.asm	/^c0101594:	c7 05 44 f5 14 c0 00 	movl   $0x0,0xc014f544$/;"	l
c010159b	obj/kernel.asm	/^c010159b:	00 00 00 $/;"	l
c010159e	obj/kernel.asm	/^c010159e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01015a1	obj/kernel.asm	/^c01015a1:	ff d0                	call   *%eax$/;"	l
c01015a3	obj/kernel.asm	/^c01015a3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01015a6	obj/kernel.asm	/^c01015a6:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c01015aa	obj/kernel.asm	/^c01015aa:	75 bf                	jne    c010156b <cons_intr+0x8>$/;"	l
c01015ac	obj/kernel.asm	/^c01015ac:	c9                   	leave  $/;"	l
c01015ad	obj/kernel.asm	/^c01015ad:	c3                   	ret    $/;"	l
c01015ae	obj/kernel.asm	/^c01015ae <serial_proc_data>:$/;"	l
c01015ae	obj/kernel.asm	/^c01015ae:	55                   	push   %ebp$/;"	l
c01015af	obj/kernel.asm	/^c01015af:	89 e5                	mov    %esp,%ebp$/;"	l
c01015b1	obj/kernel.asm	/^c01015b1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01015b4	obj/kernel.asm	/^c01015b4:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01015ba	obj/kernel.asm	/^c01015ba:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01015be	obj/kernel.asm	/^c01015be:	89 c2                	mov    %eax,%edx$/;"	l
c01015c0	obj/kernel.asm	/^c01015c0:	ec                   	in     (%dx),%al$/;"	l
c01015c1	obj/kernel.asm	/^c01015c1:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01015c4	obj/kernel.asm	/^c01015c4:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01015c8	obj/kernel.asm	/^c01015c8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01015cb	obj/kernel.asm	/^c01015cb:	83 e0 01             	and    $0x1,%eax$/;"	l
c01015ce	obj/kernel.asm	/^c01015ce:	85 c0                	test   %eax,%eax$/;"	l
c01015d0	obj/kernel.asm	/^c01015d0:	75 07                	jne    c01015d9 <serial_proc_data+0x2b>$/;"	l
c01015d2	obj/kernel.asm	/^c01015d2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01015d7	obj/kernel.asm	/^c01015d7:	eb 2a                	jmp    c0101603 <serial_proc_data+0x55>$/;"	l
c01015d9	obj/kernel.asm	/^c01015d9:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c01015df	obj/kernel.asm	/^c01015df:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01015e3	obj/kernel.asm	/^c01015e3:	89 c2                	mov    %eax,%edx$/;"	l
c01015e5	obj/kernel.asm	/^c01015e5:	ec                   	in     (%dx),%al$/;"	l
c01015e6	obj/kernel.asm	/^c01015e6:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01015e9	obj/kernel.asm	/^c01015e9:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01015ed	obj/kernel.asm	/^c01015ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01015f0	obj/kernel.asm	/^c01015f0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01015f3	obj/kernel.asm	/^c01015f3:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c01015f7	obj/kernel.asm	/^c01015f7:	75 07                	jne    c0101600 <serial_proc_data+0x52>$/;"	l
c01015f9	obj/kernel.asm	/^c01015f9:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101600	obj/kernel.asm	/^c0101600:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101603	obj/kernel.asm	/^c0101603:	c9                   	leave  $/;"	l
c0101604	obj/kernel.asm	/^c0101604:	c3                   	ret    $/;"	l
c0101605	obj/kernel.asm	/^c0101605 <serial_intr>:$/;"	l
c0101605	obj/kernel.asm	/^c0101605:	55                   	push   %ebp$/;"	l
c0101606	obj/kernel.asm	/^c0101606:	89 e5                	mov    %esp,%ebp$/;"	l
c0101608	obj/kernel.asm	/^c0101608:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010160b	obj/kernel.asm	/^c010160b:	a1 28 f3 14 c0       	mov    0xc014f328,%eax$/;"	l
c0101610	obj/kernel.asm	/^c0101610:	85 c0                	test   %eax,%eax$/;"	l
c0101612	obj/kernel.asm	/^c0101612:	74 0c                	je     c0101620 <serial_intr+0x1b>$/;"	l
c0101614	obj/kernel.asm	/^c0101614:	c7 04 24 ae 15 10 c0 	movl   $0xc01015ae,(%esp)$/;"	l
c010161b	obj/kernel.asm	/^c010161b:	e8 43 ff ff ff       	call   c0101563 <cons_intr>$/;"	l
c0101620	obj/kernel.asm	/^c0101620:	c9                   	leave  $/;"	l
c0101621	obj/kernel.asm	/^c0101621:	c3                   	ret    $/;"	l
c0101622	obj/kernel.asm	/^c0101622 <kbd_proc_data>:$/;"	l
c0101622	obj/kernel.asm	/^c0101622:	55                   	push   %ebp$/;"	l
c0101623	obj/kernel.asm	/^c0101623:	89 e5                	mov    %esp,%ebp$/;"	l
c0101625	obj/kernel.asm	/^c0101625:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0101628	obj/kernel.asm	/^c0101628:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c010162e	obj/kernel.asm	/^c010162e:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101632	obj/kernel.asm	/^c0101632:	89 c2                	mov    %eax,%edx$/;"	l
c0101634	obj/kernel.asm	/^c0101634:	ec                   	in     (%dx),%al$/;"	l
c0101635	obj/kernel.asm	/^c0101635:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c0101638	obj/kernel.asm	/^c0101638:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c010163c	obj/kernel.asm	/^c010163c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010163f	obj/kernel.asm	/^c010163f:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101642	obj/kernel.asm	/^c0101642:	85 c0                	test   %eax,%eax$/;"	l
c0101644	obj/kernel.asm	/^c0101644:	75 0a                	jne    c0101650 <kbd_proc_data+0x2e>$/;"	l
c0101646	obj/kernel.asm	/^c0101646:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010164b	obj/kernel.asm	/^c010164b:	e9 59 01 00 00       	jmp    c01017a9 <kbd_proc_data+0x187>$/;"	l
c0101650	obj/kernel.asm	/^c0101650:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c0101656	obj/kernel.asm	/^c0101656:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c010165a	obj/kernel.asm	/^c010165a:	89 c2                	mov    %eax,%edx$/;"	l
c010165c	obj/kernel.asm	/^c010165c:	ec                   	in     (%dx),%al$/;"	l
c010165d	obj/kernel.asm	/^c010165d:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101660	obj/kernel.asm	/^c0101660:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0101664	obj/kernel.asm	/^c0101664:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101667	obj/kernel.asm	/^c0101667:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c010166b	obj/kernel.asm	/^c010166b:	75 17                	jne    c0101684 <kbd_proc_data+0x62>$/;"	l
c010166d	obj/kernel.asm	/^c010166d:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c0101672	obj/kernel.asm	/^c0101672:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101675	obj/kernel.asm	/^c0101675:	a3 48 f5 14 c0       	mov    %eax,0xc014f548$/;"	l
c010167a	obj/kernel.asm	/^c010167a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010167f	obj/kernel.asm	/^c010167f:	e9 25 01 00 00       	jmp    c01017a9 <kbd_proc_data+0x187>$/;"	l
c0101684	obj/kernel.asm	/^c0101684:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101688	obj/kernel.asm	/^c0101688:	84 c0                	test   %al,%al$/;"	l
c010168a	obj/kernel.asm	/^c010168a:	79 47                	jns    c01016d3 <kbd_proc_data+0xb1>$/;"	l
c010168c	obj/kernel.asm	/^c010168c:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c0101691	obj/kernel.asm	/^c0101691:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101694	obj/kernel.asm	/^c0101694:	85 c0                	test   %eax,%eax$/;"	l
c0101696	obj/kernel.asm	/^c0101696:	75 09                	jne    c01016a1 <kbd_proc_data+0x7f>$/;"	l
c0101698	obj/kernel.asm	/^c0101698:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010169c	obj/kernel.asm	/^c010169c:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c010169f	obj/kernel.asm	/^c010169f:	eb 04                	jmp    c01016a5 <kbd_proc_data+0x83>$/;"	l
c01016a1	obj/kernel.asm	/^c01016a1:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01016a5	obj/kernel.asm	/^c01016a5:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c01016a8	obj/kernel.asm	/^c01016a8:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01016ac	obj/kernel.asm	/^c01016ac:	0f b6 80 60 e0 14 c0 	movzbl -0x3feb1fa0(%eax),%eax$/;"	l
c01016b3	obj/kernel.asm	/^c01016b3:	83 c8 40             	or     $0x40,%eax$/;"	l
c01016b6	obj/kernel.asm	/^c01016b6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01016b9	obj/kernel.asm	/^c01016b9:	f7 d0                	not    %eax$/;"	l
c01016bb	obj/kernel.asm	/^c01016bb:	89 c2                	mov    %eax,%edx$/;"	l
c01016bd	obj/kernel.asm	/^c01016bd:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c01016c2	obj/kernel.asm	/^c01016c2:	21 d0                	and    %edx,%eax$/;"	l
c01016c4	obj/kernel.asm	/^c01016c4:	a3 48 f5 14 c0       	mov    %eax,0xc014f548$/;"	l
c01016c9	obj/kernel.asm	/^c01016c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01016ce	obj/kernel.asm	/^c01016ce:	e9 d6 00 00 00       	jmp    c01017a9 <kbd_proc_data+0x187>$/;"	l
c01016d3	obj/kernel.asm	/^c01016d3:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c01016d8	obj/kernel.asm	/^c01016d8:	83 e0 40             	and    $0x40,%eax$/;"	l
c01016db	obj/kernel.asm	/^c01016db:	85 c0                	test   %eax,%eax$/;"	l
c01016dd	obj/kernel.asm	/^c01016dd:	74 11                	je     c01016f0 <kbd_proc_data+0xce>$/;"	l
c01016df	obj/kernel.asm	/^c01016df:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c01016e3	obj/kernel.asm	/^c01016e3:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c01016e8	obj/kernel.asm	/^c01016e8:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c01016eb	obj/kernel.asm	/^c01016eb:	a3 48 f5 14 c0       	mov    %eax,0xc014f548$/;"	l
c01016f0	obj/kernel.asm	/^c01016f0:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01016f4	obj/kernel.asm	/^c01016f4:	0f b6 80 60 e0 14 c0 	movzbl -0x3feb1fa0(%eax),%eax$/;"	l
c01016fb	obj/kernel.asm	/^c01016fb:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01016fe	obj/kernel.asm	/^c01016fe:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c0101703	obj/kernel.asm	/^c0101703:	09 d0                	or     %edx,%eax$/;"	l
c0101705	obj/kernel.asm	/^c0101705:	a3 48 f5 14 c0       	mov    %eax,0xc014f548$/;"	l
c010170a	obj/kernel.asm	/^c010170a:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010170e	obj/kernel.asm	/^c010170e:	0f b6 80 60 e1 14 c0 	movzbl -0x3feb1ea0(%eax),%eax$/;"	l
c0101715	obj/kernel.asm	/^c0101715:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101718	obj/kernel.asm	/^c0101718:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c010171d	obj/kernel.asm	/^c010171d:	31 d0                	xor    %edx,%eax$/;"	l
c010171f	obj/kernel.asm	/^c010171f:	a3 48 f5 14 c0       	mov    %eax,0xc014f548$/;"	l
c0101724	obj/kernel.asm	/^c0101724:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c0101729	obj/kernel.asm	/^c0101729:	83 e0 03             	and    $0x3,%eax$/;"	l
c010172c	obj/kernel.asm	/^c010172c:	8b 14 85 60 e5 14 c0 	mov    -0x3feb1aa0(,%eax,4),%edx$/;"	l
c0101733	obj/kernel.asm	/^c0101733:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101737	obj/kernel.asm	/^c0101737:	01 d0                	add    %edx,%eax$/;"	l
c0101739	obj/kernel.asm	/^c0101739:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010173c	obj/kernel.asm	/^c010173c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010173f	obj/kernel.asm	/^c010173f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101742	obj/kernel.asm	/^c0101742:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c0101747	obj/kernel.asm	/^c0101747:	83 e0 08             	and    $0x8,%eax$/;"	l
c010174a	obj/kernel.asm	/^c010174a:	85 c0                	test   %eax,%eax$/;"	l
c010174c	obj/kernel.asm	/^c010174c:	74 22                	je     c0101770 <kbd_proc_data+0x14e>$/;"	l
c010174e	obj/kernel.asm	/^c010174e:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0101752	obj/kernel.asm	/^c0101752:	7e 0c                	jle    c0101760 <kbd_proc_data+0x13e>$/;"	l
c0101754	obj/kernel.asm	/^c0101754:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c0101758	obj/kernel.asm	/^c0101758:	7f 06                	jg     c0101760 <kbd_proc_data+0x13e>$/;"	l
c010175a	obj/kernel.asm	/^c010175a:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c010175e	obj/kernel.asm	/^c010175e:	eb 10                	jmp    c0101770 <kbd_proc_data+0x14e>$/;"	l
c0101760	obj/kernel.asm	/^c0101760:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0101764	obj/kernel.asm	/^c0101764:	7e 0a                	jle    c0101770 <kbd_proc_data+0x14e>$/;"	l
c0101766	obj/kernel.asm	/^c0101766:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c010176a	obj/kernel.asm	/^c010176a:	7f 04                	jg     c0101770 <kbd_proc_data+0x14e>$/;"	l
c010176c	obj/kernel.asm	/^c010176c:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101770	obj/kernel.asm	/^c0101770:	a1 48 f5 14 c0       	mov    0xc014f548,%eax$/;"	l
c0101775	obj/kernel.asm	/^c0101775:	f7 d0                	not    %eax$/;"	l
c0101777	obj/kernel.asm	/^c0101777:	83 e0 06             	and    $0x6,%eax$/;"	l
c010177a	obj/kernel.asm	/^c010177a:	85 c0                	test   %eax,%eax$/;"	l
c010177c	obj/kernel.asm	/^c010177c:	75 28                	jne    c01017a6 <kbd_proc_data+0x184>$/;"	l
c010177e	obj/kernel.asm	/^c010177e:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c0101785	obj/kernel.asm	/^c0101785:	75 1f                	jne    c01017a6 <kbd_proc_data+0x184>$/;"	l
c0101787	obj/kernel.asm	/^c0101787:	c7 04 24 dd 58 11 c0 	movl   $0xc01158dd,(%esp)$/;"	l
c010178e	obj/kernel.asm	/^c010178e:	e8 d2 eb ff ff       	call   c0100365 <cprintf>$/;"	l
c0101793	obj/kernel.asm	/^c0101793:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c0101799	obj/kernel.asm	/^c0101799:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c010179d	obj/kernel.asm	/^c010179d:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c01017a1	obj/kernel.asm	/^c01017a1:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c01017a5	obj/kernel.asm	/^c01017a5:	ee                   	out    %al,(%dx)$/;"	l
c01017a6	obj/kernel.asm	/^c01017a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01017a9	obj/kernel.asm	/^c01017a9:	c9                   	leave  $/;"	l
c01017aa	obj/kernel.asm	/^c01017aa:	c3                   	ret    $/;"	l
c01017ab	obj/kernel.asm	/^c01017ab <kbd_intr>:$/;"	l
c01017ab	obj/kernel.asm	/^c01017ab:	55                   	push   %ebp$/;"	l
c01017ac	obj/kernel.asm	/^c01017ac:	89 e5                	mov    %esp,%ebp$/;"	l
c01017ae	obj/kernel.asm	/^c01017ae:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01017b1	obj/kernel.asm	/^c01017b1:	c7 04 24 22 16 10 c0 	movl   $0xc0101622,(%esp)$/;"	l
c01017b8	obj/kernel.asm	/^c01017b8:	e8 a6 fd ff ff       	call   c0101563 <cons_intr>$/;"	l
c01017bd	obj/kernel.asm	/^c01017bd:	c9                   	leave  $/;"	l
c01017be	obj/kernel.asm	/^c01017be:	c3                   	ret    $/;"	l
c01017bf	obj/kernel.asm	/^c01017bf <kbd_init>:$/;"	l
c01017bf	obj/kernel.asm	/^c01017bf:	55                   	push   %ebp$/;"	l
c01017c0	obj/kernel.asm	/^c01017c0:	89 e5                	mov    %esp,%ebp$/;"	l
c01017c2	obj/kernel.asm	/^c01017c2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01017c5	obj/kernel.asm	/^c01017c5:	e8 e1 ff ff ff       	call   c01017ab <kbd_intr>$/;"	l
c01017ca	obj/kernel.asm	/^c01017ca:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01017d1	obj/kernel.asm	/^c01017d1:	e8 b2 09 00 00       	call   c0102188 <pic_enable>$/;"	l
c01017d6	obj/kernel.asm	/^c01017d6:	c9                   	leave  $/;"	l
c01017d7	obj/kernel.asm	/^c01017d7:	c3                   	ret    $/;"	l
c01017d8	obj/kernel.asm	/^c01017d8 <cons_init>:$/;"	l
c01017d8	obj/kernel.asm	/^c01017d8:	55                   	push   %ebp$/;"	l
c01017d9	obj/kernel.asm	/^c01017d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01017db	obj/kernel.asm	/^c01017db:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01017de	obj/kernel.asm	/^c01017de:	e8 93 f8 ff ff       	call   c0101076 <cga_init>$/;"	l
c01017e3	obj/kernel.asm	/^c01017e3:	e8 74 f9 ff ff       	call   c010115c <serial_init>$/;"	l
c01017e8	obj/kernel.asm	/^c01017e8:	e8 d2 ff ff ff       	call   c01017bf <kbd_init>$/;"	l
c01017ed	obj/kernel.asm	/^c01017ed:	a1 28 f3 14 c0       	mov    0xc014f328,%eax$/;"	l
c01017f2	obj/kernel.asm	/^c01017f2:	85 c0                	test   %eax,%eax$/;"	l
c01017f4	obj/kernel.asm	/^c01017f4:	75 0c                	jne    c0101802 <cons_init+0x2a>$/;"	l
c01017f6	obj/kernel.asm	/^c01017f6:	c7 04 24 e9 58 11 c0 	movl   $0xc01158e9,(%esp)$/;"	l
c01017fd	obj/kernel.asm	/^c01017fd:	e8 63 eb ff ff       	call   c0100365 <cprintf>$/;"	l
c0101802	obj/kernel.asm	/^c0101802:	c9                   	leave  $/;"	l
c0101803	obj/kernel.asm	/^c0101803:	c3                   	ret    $/;"	l
c0101804	obj/kernel.asm	/^c0101804 <cons_putc>:$/;"	l
c0101804	obj/kernel.asm	/^c0101804:	55                   	push   %ebp$/;"	l
c0101805	obj/kernel.asm	/^c0101805:	89 e5                	mov    %esp,%ebp$/;"	l
c0101807	obj/kernel.asm	/^c0101807:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010180a	obj/kernel.asm	/^c010180a:	e8 e2 f7 ff ff       	call   c0100ff1 <__intr_save>$/;"	l
c010180f	obj/kernel.asm	/^c010180f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101812	obj/kernel.asm	/^c0101812:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101815	obj/kernel.asm	/^c0101815:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101818	obj/kernel.asm	/^c0101818:	e8 9b fa ff ff       	call   c01012b8 <lpt_putc>$/;"	l
c010181d	obj/kernel.asm	/^c010181d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101820	obj/kernel.asm	/^c0101820:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101823	obj/kernel.asm	/^c0101823:	e8 cf fa ff ff       	call   c01012f7 <cga_putc>$/;"	l
c0101828	obj/kernel.asm	/^c0101828:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010182b	obj/kernel.asm	/^c010182b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010182e	obj/kernel.asm	/^c010182e:	e8 f1 fc ff ff       	call   c0101524 <serial_putc>$/;"	l
c0101833	obj/kernel.asm	/^c0101833:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101836	obj/kernel.asm	/^c0101836:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101839	obj/kernel.asm	/^c0101839:	e8 dd f7 ff ff       	call   c010101b <__intr_restore>$/;"	l
c010183e	obj/kernel.asm	/^c010183e:	c9                   	leave  $/;"	l
c010183f	obj/kernel.asm	/^c010183f:	c3                   	ret    $/;"	l
c0101840	obj/kernel.asm	/^c0101840 <cons_getc>:$/;"	l
c0101840	obj/kernel.asm	/^c0101840:	55                   	push   %ebp$/;"	l
c0101841	obj/kernel.asm	/^c0101841:	89 e5                	mov    %esp,%ebp$/;"	l
c0101843	obj/kernel.asm	/^c0101843:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101846	obj/kernel.asm	/^c0101846:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010184d	obj/kernel.asm	/^c010184d:	e8 9f f7 ff ff       	call   c0100ff1 <__intr_save>$/;"	l
c0101852	obj/kernel.asm	/^c0101852:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101855	obj/kernel.asm	/^c0101855:	e8 ab fd ff ff       	call   c0101605 <serial_intr>$/;"	l
c010185a	obj/kernel.asm	/^c010185a:	e8 4c ff ff ff       	call   c01017ab <kbd_intr>$/;"	l
c010185f	obj/kernel.asm	/^c010185f:	8b 15 40 f5 14 c0    	mov    0xc014f540,%edx$/;"	l
c0101865	obj/kernel.asm	/^c0101865:	a1 44 f5 14 c0       	mov    0xc014f544,%eax$/;"	l
c010186a	obj/kernel.asm	/^c010186a:	39 c2                	cmp    %eax,%edx$/;"	l
c010186c	obj/kernel.asm	/^c010186c:	74 31                	je     c010189f <cons_getc+0x5f>$/;"	l
c010186e	obj/kernel.asm	/^c010186e:	a1 40 f5 14 c0       	mov    0xc014f540,%eax$/;"	l
c0101873	obj/kernel.asm	/^c0101873:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101876	obj/kernel.asm	/^c0101876:	89 15 40 f5 14 c0    	mov    %edx,0xc014f540$/;"	l
c010187c	obj/kernel.asm	/^c010187c:	0f b6 80 40 f3 14 c0 	movzbl -0x3feb0cc0(%eax),%eax$/;"	l
c0101883	obj/kernel.asm	/^c0101883:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101886	obj/kernel.asm	/^c0101886:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101889	obj/kernel.asm	/^c0101889:	a1 40 f5 14 c0       	mov    0xc014f540,%eax$/;"	l
c010188e	obj/kernel.asm	/^c010188e:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101893	obj/kernel.asm	/^c0101893:	75 0a                	jne    c010189f <cons_getc+0x5f>$/;"	l
c0101895	obj/kernel.asm	/^c0101895:	c7 05 40 f5 14 c0 00 	movl   $0x0,0xc014f540$/;"	l
c010189c	obj/kernel.asm	/^c010189c:	00 00 00 $/;"	l
c010189f	obj/kernel.asm	/^c010189f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01018a2	obj/kernel.asm	/^c01018a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01018a5	obj/kernel.asm	/^c01018a5:	e8 71 f7 ff ff       	call   c010101b <__intr_restore>$/;"	l
c01018aa	obj/kernel.asm	/^c01018aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01018ad	obj/kernel.asm	/^c01018ad:	c9                   	leave  $/;"	l
c01018ae	obj/kernel.asm	/^c01018ae:	c3                   	ret    $/;"	l
c01018af	obj/kernel.asm	/^c01018af <ide_wait_ready>:$/;"	l
c01018af	obj/kernel.asm	/^c01018af:	55                   	push   %ebp$/;"	l
c01018b0	obj/kernel.asm	/^c01018b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01018b2	obj/kernel.asm	/^c01018b2:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01018b5	obj/kernel.asm	/^c01018b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01018b8	obj/kernel.asm	/^c01018b8:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c01018bc	obj/kernel.asm	/^c01018bc:	90                   	nop$/;"	l
c01018bd	obj/kernel.asm	/^c01018bd:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01018c1	obj/kernel.asm	/^c01018c1:	83 c0 07             	add    $0x7,%eax$/;"	l
c01018c4	obj/kernel.asm	/^c01018c4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018c7	obj/kernel.asm	/^c01018c7:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01018cb	obj/kernel.asm	/^c01018cb:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01018cf	obj/kernel.asm	/^c01018cf:	89 c2                	mov    %eax,%edx$/;"	l
c01018d1	obj/kernel.asm	/^c01018d1:	ec                   	in     (%dx),%al$/;"	l
c01018d2	obj/kernel.asm	/^c01018d2:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01018d5	obj/kernel.asm	/^c01018d5:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01018d9	obj/kernel.asm	/^c01018d9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01018dc	obj/kernel.asm	/^c01018dc:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01018df	obj/kernel.asm	/^c01018df:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01018e2	obj/kernel.asm	/^c01018e2:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c01018e7	obj/kernel.asm	/^c01018e7:	85 c0                	test   %eax,%eax$/;"	l
c01018e9	obj/kernel.asm	/^c01018e9:	75 d2                	jne    c01018bd <ide_wait_ready+0xe>$/;"	l
c01018eb	obj/kernel.asm	/^c01018eb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01018ef	obj/kernel.asm	/^c01018ef:	74 11                	je     c0101902 <ide_wait_ready+0x53>$/;"	l
c01018f1	obj/kernel.asm	/^c01018f1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01018f4	obj/kernel.asm	/^c01018f4:	83 e0 21             	and    $0x21,%eax$/;"	l
c01018f7	obj/kernel.asm	/^c01018f7:	85 c0                	test   %eax,%eax$/;"	l
c01018f9	obj/kernel.asm	/^c01018f9:	74 07                	je     c0101902 <ide_wait_ready+0x53>$/;"	l
c01018fb	obj/kernel.asm	/^c01018fb:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101900	obj/kernel.asm	/^c0101900:	eb 05                	jmp    c0101907 <ide_wait_ready+0x58>$/;"	l
c0101902	obj/kernel.asm	/^c0101902:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101907	obj/kernel.asm	/^c0101907:	c9                   	leave  $/;"	l
c0101908	obj/kernel.asm	/^c0101908:	c3                   	ret    $/;"	l
c0101909	obj/kernel.asm	/^c0101909 <ide_init>:$/;"	l
c0101909	obj/kernel.asm	/^c0101909:	55                   	push   %ebp$/;"	l
c010190a	obj/kernel.asm	/^c010190a:	89 e5                	mov    %esp,%ebp$/;"	l
c010190c	obj/kernel.asm	/^c010190c:	57                   	push   %edi$/;"	l
c010190d	obj/kernel.asm	/^c010190d:	53                   	push   %ebx$/;"	l
c010190e	obj/kernel.asm	/^c010190e:	81 ec 50 02 00 00    	sub    $0x250,%esp$/;"	l
c0101914	obj/kernel.asm	/^c0101914:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c010191a	obj/kernel.asm	/^c010191a:	e9 d6 02 00 00       	jmp    c0101bf5 <ide_init+0x2ec>$/;"	l
c010191f	obj/kernel.asm	/^c010191f:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101923	obj/kernel.asm	/^c0101923:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101926	obj/kernel.asm	/^c0101926:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010192d	obj/kernel.asm	/^c010192d:	29 c2                	sub    %eax,%edx$/;"	l
c010192f	obj/kernel.asm	/^c010192f:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101935	obj/kernel.asm	/^c0101935:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101938	obj/kernel.asm	/^c0101938:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010193c	obj/kernel.asm	/^c010193c:	66 d1 e8             	shr    %ax$/;"	l
c010193f	obj/kernel.asm	/^c010193f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101942	obj/kernel.asm	/^c0101942:	0f b7 04 85 08 59 11 	movzwl -0x3feea6f8(,%eax,4),%eax$/;"	l
c0101949	obj/kernel.asm	/^c0101949:	c0 $/;"	l
c010194a	obj/kernel.asm	/^c010194a:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c010194e	obj/kernel.asm	/^c010194e:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101952	obj/kernel.asm	/^c0101952:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101959	obj/kernel.asm	/^c0101959:	00 $/;"	l
c010195a	obj/kernel.asm	/^c010195a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010195d	obj/kernel.asm	/^c010195d:	e8 4d ff ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101962	obj/kernel.asm	/^c0101962:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101966	obj/kernel.asm	/^c0101966:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c010196c	obj/kernel.asm	/^c010196c:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c010196f	obj/kernel.asm	/^c010196f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101972	obj/kernel.asm	/^c0101972:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101976	obj/kernel.asm	/^c0101976:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101979	obj/kernel.asm	/^c0101979:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010197c	obj/kernel.asm	/^c010197c:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0101980	obj/kernel.asm	/^c0101980:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101983	obj/kernel.asm	/^c0101983:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0101987	obj/kernel.asm	/^c0101987:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c010198b	obj/kernel.asm	/^c010198b:	ee                   	out    %al,(%dx)$/;"	l
c010198c	obj/kernel.asm	/^c010198c:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101990	obj/kernel.asm	/^c0101990:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101997	obj/kernel.asm	/^c0101997:	00 $/;"	l
c0101998	obj/kernel.asm	/^c0101998:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010199b	obj/kernel.asm	/^c010199b:	e8 0f ff ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c01019a0	obj/kernel.asm	/^c01019a0:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01019a4	obj/kernel.asm	/^c01019a4:	83 c0 07             	add    $0x7,%eax$/;"	l
c01019a7	obj/kernel.asm	/^c01019a7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019aa	obj/kernel.asm	/^c01019aa:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c01019ae	obj/kernel.asm	/^c01019ae:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c01019b2	obj/kernel.asm	/^c01019b2:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01019b6	obj/kernel.asm	/^c01019b6:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01019ba	obj/kernel.asm	/^c01019ba:	ee                   	out    %al,(%dx)$/;"	l
c01019bb	obj/kernel.asm	/^c01019bb:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01019bf	obj/kernel.asm	/^c01019bf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01019c6	obj/kernel.asm	/^c01019c6:	00 $/;"	l
c01019c7	obj/kernel.asm	/^c01019c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01019ca	obj/kernel.asm	/^c01019ca:	e8 e0 fe ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c01019cf	obj/kernel.asm	/^c01019cf:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01019d3	obj/kernel.asm	/^c01019d3:	83 c0 07             	add    $0x7,%eax$/;"	l
c01019d6	obj/kernel.asm	/^c01019d6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019d9	obj/kernel.asm	/^c01019d9:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c01019dd	obj/kernel.asm	/^c01019dd:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c01019e1	obj/kernel.asm	/^c01019e1:	89 c2                	mov    %eax,%edx$/;"	l
c01019e3	obj/kernel.asm	/^c01019e3:	ec                   	in     (%dx),%al$/;"	l
c01019e4	obj/kernel.asm	/^c01019e4:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c01019e7	obj/kernel.asm	/^c01019e7:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c01019eb	obj/kernel.asm	/^c01019eb:	84 c0                	test   %al,%al$/;"	l
c01019ed	obj/kernel.asm	/^c01019ed:	0f 84 f7 01 00 00    	je     c0101bea <ide_init+0x2e1>$/;"	l
c01019f3	obj/kernel.asm	/^c01019f3:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01019f7	obj/kernel.asm	/^c01019f7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01019fe	obj/kernel.asm	/^c01019fe:	00 $/;"	l
c01019ff	obj/kernel.asm	/^c01019ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101a02	obj/kernel.asm	/^c0101a02:	e8 a8 fe ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101a07	obj/kernel.asm	/^c0101a07:	85 c0                	test   %eax,%eax$/;"	l
c0101a09	obj/kernel.asm	/^c0101a09:	0f 85 db 01 00 00    	jne    c0101bea <ide_init+0x2e1>$/;"	l
c0101a0f	obj/kernel.asm	/^c0101a0f:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101a13	obj/kernel.asm	/^c0101a13:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101a16	obj/kernel.asm	/^c0101a16:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101a1d	obj/kernel.asm	/^c0101a1d:	29 c2                	sub    %eax,%edx$/;"	l
c0101a1f	obj/kernel.asm	/^c0101a1f:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101a25	obj/kernel.asm	/^c0101a25:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0101a28	obj/kernel.asm	/^c0101a28:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101a2c	obj/kernel.asm	/^c0101a2c:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0101a2f	obj/kernel.asm	/^c0101a2f:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0101a35	obj/kernel.asm	/^c0101a35:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0101a38	obj/kernel.asm	/^c0101a38:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0101a3f	obj/kernel.asm	/^c0101a3f:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0101a42	obj/kernel.asm	/^c0101a42:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c0101a45	obj/kernel.asm	/^c0101a45:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0101a48	obj/kernel.asm	/^c0101a48:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101a4a	obj/kernel.asm	/^c0101a4a:	89 df                	mov    %ebx,%edi$/;"	l
c0101a4c	obj/kernel.asm	/^c0101a4c:	89 c1                	mov    %eax,%ecx$/;"	l
c0101a4e	obj/kernel.asm	/^c0101a4e:	fc                   	cld    $/;"	l
c0101a4f	obj/kernel.asm	/^c0101a4f:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101a51	obj/kernel.asm	/^c0101a51:	89 c8                	mov    %ecx,%eax$/;"	l
c0101a53	obj/kernel.asm	/^c0101a53:	89 fb                	mov    %edi,%ebx$/;"	l
c0101a55	obj/kernel.asm	/^c0101a55:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c0101a58	obj/kernel.asm	/^c0101a58:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0101a5b	obj/kernel.asm	/^c0101a5b:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0101a61	obj/kernel.asm	/^c0101a61:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0101a64	obj/kernel.asm	/^c0101a64:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101a67	obj/kernel.asm	/^c0101a67:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0101a6d	obj/kernel.asm	/^c0101a6d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0101a70	obj/kernel.asm	/^c0101a70:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101a73	obj/kernel.asm	/^c0101a73:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c0101a78	obj/kernel.asm	/^c0101a78:	85 c0                	test   %eax,%eax$/;"	l
c0101a7a	obj/kernel.asm	/^c0101a7a:	74 0e                	je     c0101a8a <ide_init+0x181>$/;"	l
c0101a7c	obj/kernel.asm	/^c0101a7c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101a7f	obj/kernel.asm	/^c0101a7f:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c0101a85	obj/kernel.asm	/^c0101a85:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101a88	obj/kernel.asm	/^c0101a88:	eb 09                	jmp    c0101a93 <ide_init+0x18a>$/;"	l
c0101a8a	obj/kernel.asm	/^c0101a8a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101a8d	obj/kernel.asm	/^c0101a8d:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0101a90	obj/kernel.asm	/^c0101a90:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101a93	obj/kernel.asm	/^c0101a93:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101a97	obj/kernel.asm	/^c0101a97:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101a9a	obj/kernel.asm	/^c0101a9a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101aa1	obj/kernel.asm	/^c0101aa1:	29 c2                	sub    %eax,%edx$/;"	l
c0101aa3	obj/kernel.asm	/^c0101aa3:	81 c2 60 f5 14 c0    	add    $0xc014f560,%edx$/;"	l
c0101aa9	obj/kernel.asm	/^c0101aa9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101aac	obj/kernel.asm	/^c0101aac:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0101aaf	obj/kernel.asm	/^c0101aaf:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101ab3	obj/kernel.asm	/^c0101ab3:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101ab6	obj/kernel.asm	/^c0101ab6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101abd	obj/kernel.asm	/^c0101abd:	29 c2                	sub    %eax,%edx$/;"	l
c0101abf	obj/kernel.asm	/^c0101abf:	81 c2 60 f5 14 c0    	add    $0xc014f560,%edx$/;"	l
c0101ac5	obj/kernel.asm	/^c0101ac5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0101ac8	obj/kernel.asm	/^c0101ac8:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0101acb	obj/kernel.asm	/^c0101acb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101ace	obj/kernel.asm	/^c0101ace:	83 c0 62             	add    $0x62,%eax$/;"	l
c0101ad1	obj/kernel.asm	/^c0101ad1:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0101ad4	obj/kernel.asm	/^c0101ad4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101ad7	obj/kernel.asm	/^c0101ad7:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101adc	obj/kernel.asm	/^c0101adc:	85 c0                	test   %eax,%eax$/;"	l
c0101ade	obj/kernel.asm	/^c0101ade:	75 24                	jne    c0101b04 <ide_init+0x1fb>$/;"	l
c0101ae0	obj/kernel.asm	/^c0101ae0:	c7 44 24 0c 10 59 11 	movl   $0xc0115910,0xc(%esp)$/;"	l
c0101ae7	obj/kernel.asm	/^c0101ae7:	c0 $/;"	l
c0101ae8	obj/kernel.asm	/^c0101ae8:	c7 44 24 08 53 59 11 	movl   $0xc0115953,0x8(%esp)$/;"	l
c0101aef	obj/kernel.asm	/^c0101aef:	c0 $/;"	l
c0101af0	obj/kernel.asm	/^c0101af0:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c0101af7	obj/kernel.asm	/^c0101af7:	00 $/;"	l
c0101af8	obj/kernel.asm	/^c0101af8:	c7 04 24 68 59 11 c0 	movl   $0xc0115968,(%esp)$/;"	l
c0101aff	obj/kernel.asm	/^c0101aff:	e8 c4 f3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101b04	obj/kernel.asm	/^c0101b04:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101b08	obj/kernel.asm	/^c0101b08:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101b0b	obj/kernel.asm	/^c0101b0b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101b12	obj/kernel.asm	/^c0101b12:	29 c2                	sub    %eax,%edx$/;"	l
c0101b14	obj/kernel.asm	/^c0101b14:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101b1a	obj/kernel.asm	/^c0101b1a:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0101b1d	obj/kernel.asm	/^c0101b1d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0101b20	obj/kernel.asm	/^c0101b20:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101b23	obj/kernel.asm	/^c0101b23:	83 c0 36             	add    $0x36,%eax$/;"	l
c0101b26	obj/kernel.asm	/^c0101b26:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0101b29	obj/kernel.asm	/^c0101b29:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0101b30	obj/kernel.asm	/^c0101b30:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0101b37	obj/kernel.asm	/^c0101b37:	eb 34                	jmp    c0101b6d <ide_init+0x264>$/;"	l
c0101b39	obj/kernel.asm	/^c0101b39:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b3c	obj/kernel.asm	/^c0101b3c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101b3f	obj/kernel.asm	/^c0101b3f:	01 c2                	add    %eax,%edx$/;"	l
c0101b41	obj/kernel.asm	/^c0101b41:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b44	obj/kernel.asm	/^c0101b44:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0101b47	obj/kernel.asm	/^c0101b47:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0101b4a	obj/kernel.asm	/^c0101b4a:	01 c8                	add    %ecx,%eax$/;"	l
c0101b4c	obj/kernel.asm	/^c0101b4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b4f	obj/kernel.asm	/^c0101b4f:	88 02                	mov    %al,(%edx)$/;"	l
c0101b51	obj/kernel.asm	/^c0101b51:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b54	obj/kernel.asm	/^c0101b54:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101b57	obj/kernel.asm	/^c0101b57:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101b5a	obj/kernel.asm	/^c0101b5a:	01 c2                	add    %eax,%edx$/;"	l
c0101b5c	obj/kernel.asm	/^c0101b5c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b5f	obj/kernel.asm	/^c0101b5f:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101b62	obj/kernel.asm	/^c0101b62:	01 c8                	add    %ecx,%eax$/;"	l
c0101b64	obj/kernel.asm	/^c0101b64:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b67	obj/kernel.asm	/^c0101b67:	88 02                	mov    %al,(%edx)$/;"	l
c0101b69	obj/kernel.asm	/^c0101b69:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c0101b6d	obj/kernel.asm	/^c0101b6d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b70	obj/kernel.asm	/^c0101b70:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0101b73	obj/kernel.asm	/^c0101b73:	72 c4                	jb     c0101b39 <ide_init+0x230>$/;"	l
c0101b75	obj/kernel.asm	/^c0101b75:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b78	obj/kernel.asm	/^c0101b78:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101b7b	obj/kernel.asm	/^c0101b7b:	01 d0                	add    %edx,%eax$/;"	l
c0101b7d	obj/kernel.asm	/^c0101b7d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101b80	obj/kernel.asm	/^c0101b80:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b83	obj/kernel.asm	/^c0101b83:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0101b86	obj/kernel.asm	/^c0101b86:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0101b89	obj/kernel.asm	/^c0101b89:	85 c0                	test   %eax,%eax$/;"	l
c0101b8b	obj/kernel.asm	/^c0101b8b:	74 0f                	je     c0101b9c <ide_init+0x293>$/;"	l
c0101b8d	obj/kernel.asm	/^c0101b8d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101b90	obj/kernel.asm	/^c0101b90:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101b93	obj/kernel.asm	/^c0101b93:	01 d0                	add    %edx,%eax$/;"	l
c0101b95	obj/kernel.asm	/^c0101b95:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b98	obj/kernel.asm	/^c0101b98:	3c 20                	cmp    $0x20,%al$/;"	l
c0101b9a	obj/kernel.asm	/^c0101b9a:	74 d9                	je     c0101b75 <ide_init+0x26c>$/;"	l
c0101b9c	obj/kernel.asm	/^c0101b9c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101ba0	obj/kernel.asm	/^c0101ba0:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101ba3	obj/kernel.asm	/^c0101ba3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101baa	obj/kernel.asm	/^c0101baa:	29 c2                	sub    %eax,%edx$/;"	l
c0101bac	obj/kernel.asm	/^c0101bac:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101bb2	obj/kernel.asm	/^c0101bb2:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c0101bb5	obj/kernel.asm	/^c0101bb5:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101bbc	obj/kernel.asm	/^c0101bbc:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101bc3	obj/kernel.asm	/^c0101bc3:	29 c2                	sub    %eax,%edx$/;"	l
c0101bc5	obj/kernel.asm	/^c0101bc5:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101bcb	obj/kernel.asm	/^c0101bcb:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0101bce	obj/kernel.asm	/^c0101bce:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101bd2	obj/kernel.asm	/^c0101bd2:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0101bd6	obj/kernel.asm	/^c0101bd6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0101bda	obj/kernel.asm	/^c0101bda:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101bde	obj/kernel.asm	/^c0101bde:	c7 04 24 7a 59 11 c0 	movl   $0xc011597a,(%esp)$/;"	l
c0101be5	obj/kernel.asm	/^c0101be5:	e8 7b e7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0101bea	obj/kernel.asm	/^c0101bea:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101bee	obj/kernel.asm	/^c0101bee:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101bf1	obj/kernel.asm	/^c0101bf1:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c0101bf5	obj/kernel.asm	/^c0101bf5:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c0101bfa	obj/kernel.asm	/^c0101bfa:	0f 86 1f fd ff ff    	jbe    c010191f <ide_init+0x16>$/;"	l
c0101c00	obj/kernel.asm	/^c0101c00:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)$/;"	l
c0101c07	obj/kernel.asm	/^c0101c07:	e8 7c 05 00 00       	call   c0102188 <pic_enable>$/;"	l
c0101c0c	obj/kernel.asm	/^c0101c0c:	c7 04 24 0f 00 00 00 	movl   $0xf,(%esp)$/;"	l
c0101c13	obj/kernel.asm	/^c0101c13:	e8 70 05 00 00       	call   c0102188 <pic_enable>$/;"	l
c0101c18	obj/kernel.asm	/^c0101c18:	81 c4 50 02 00 00    	add    $0x250,%esp$/;"	l
c0101c1e	obj/kernel.asm	/^c0101c1e:	5b                   	pop    %ebx$/;"	l
c0101c1f	obj/kernel.asm	/^c0101c1f:	5f                   	pop    %edi$/;"	l
c0101c20	obj/kernel.asm	/^c0101c20:	5d                   	pop    %ebp$/;"	l
c0101c21	obj/kernel.asm	/^c0101c21:	c3                   	ret    $/;"	l
c0101c22	obj/kernel.asm	/^c0101c22 <ide_device_valid>:$/;"	l
c0101c22	obj/kernel.asm	/^c0101c22:	55                   	push   %ebp$/;"	l
c0101c23	obj/kernel.asm	/^c0101c23:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c25	obj/kernel.asm	/^c0101c25:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101c28	obj/kernel.asm	/^c0101c28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101c2b	obj/kernel.asm	/^c0101c2b:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101c2f	obj/kernel.asm	/^c0101c2f:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c0101c34	obj/kernel.asm	/^c0101c34:	77 24                	ja     c0101c5a <ide_device_valid+0x38>$/;"	l
c0101c36	obj/kernel.asm	/^c0101c36:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101c3a	obj/kernel.asm	/^c0101c3a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101c3d	obj/kernel.asm	/^c0101c3d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101c44	obj/kernel.asm	/^c0101c44:	29 c2                	sub    %eax,%edx$/;"	l
c0101c46	obj/kernel.asm	/^c0101c46:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101c4c	obj/kernel.asm	/^c0101c4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101c4f	obj/kernel.asm	/^c0101c4f:	84 c0                	test   %al,%al$/;"	l
c0101c51	obj/kernel.asm	/^c0101c51:	74 07                	je     c0101c5a <ide_device_valid+0x38>$/;"	l
c0101c53	obj/kernel.asm	/^c0101c53:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101c58	obj/kernel.asm	/^c0101c58:	eb 05                	jmp    c0101c5f <ide_device_valid+0x3d>$/;"	l
c0101c5a	obj/kernel.asm	/^c0101c5a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101c5f	obj/kernel.asm	/^c0101c5f:	c9                   	leave  $/;"	l
c0101c60	obj/kernel.asm	/^c0101c60:	c3                   	ret    $/;"	l
c0101c61	obj/kernel.asm	/^c0101c61 <ide_device_size>:$/;"	l
c0101c61	obj/kernel.asm	/^c0101c61:	55                   	push   %ebp$/;"	l
c0101c62	obj/kernel.asm	/^c0101c62:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c64	obj/kernel.asm	/^c0101c64:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101c67	obj/kernel.asm	/^c0101c67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101c6a	obj/kernel.asm	/^c0101c6a:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101c6e	obj/kernel.asm	/^c0101c6e:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101c72	obj/kernel.asm	/^c0101c72:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101c75	obj/kernel.asm	/^c0101c75:	e8 a8 ff ff ff       	call   c0101c22 <ide_device_valid>$/;"	l
c0101c7a	obj/kernel.asm	/^c0101c7a:	85 c0                	test   %eax,%eax$/;"	l
c0101c7c	obj/kernel.asm	/^c0101c7c:	74 1b                	je     c0101c99 <ide_device_size+0x38>$/;"	l
c0101c7e	obj/kernel.asm	/^c0101c7e:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101c82	obj/kernel.asm	/^c0101c82:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101c85	obj/kernel.asm	/^c0101c85:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101c8c	obj/kernel.asm	/^c0101c8c:	29 c2                	sub    %eax,%edx$/;"	l
c0101c8e	obj/kernel.asm	/^c0101c8e:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101c94	obj/kernel.asm	/^c0101c94:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101c97	obj/kernel.asm	/^c0101c97:	eb 05                	jmp    c0101c9e <ide_device_size+0x3d>$/;"	l
c0101c99	obj/kernel.asm	/^c0101c99:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101c9e	obj/kernel.asm	/^c0101c9e:	c9                   	leave  $/;"	l
c0101c9f	obj/kernel.asm	/^c0101c9f:	c3                   	ret    $/;"	l
c0101ca0	obj/kernel.asm	/^c0101ca0 <ide_read_secs>:$/;"	l
c0101ca0	obj/kernel.asm	/^c0101ca0:	55                   	push   %ebp$/;"	l
c0101ca1	obj/kernel.asm	/^c0101ca1:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ca3	obj/kernel.asm	/^c0101ca3:	57                   	push   %edi$/;"	l
c0101ca4	obj/kernel.asm	/^c0101ca4:	53                   	push   %ebx$/;"	l
c0101ca5	obj/kernel.asm	/^c0101ca5:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101ca8	obj/kernel.asm	/^c0101ca8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101cab	obj/kernel.asm	/^c0101cab:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101caf	obj/kernel.asm	/^c0101caf:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101cb6	obj/kernel.asm	/^c0101cb6:	77 24                	ja     c0101cdc <ide_read_secs+0x3c>$/;"	l
c0101cb8	obj/kernel.asm	/^c0101cb8:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101cbd	obj/kernel.asm	/^c0101cbd:	77 1d                	ja     c0101cdc <ide_read_secs+0x3c>$/;"	l
c0101cbf	obj/kernel.asm	/^c0101cbf:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101cc3	obj/kernel.asm	/^c0101cc3:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101cc6	obj/kernel.asm	/^c0101cc6:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101ccd	obj/kernel.asm	/^c0101ccd:	29 c2                	sub    %eax,%edx$/;"	l
c0101ccf	obj/kernel.asm	/^c0101ccf:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101cd5	obj/kernel.asm	/^c0101cd5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101cd8	obj/kernel.asm	/^c0101cd8:	84 c0                	test   %al,%al$/;"	l
c0101cda	obj/kernel.asm	/^c0101cda:	75 24                	jne    c0101d00 <ide_read_secs+0x60>$/;"	l
c0101cdc	obj/kernel.asm	/^c0101cdc:	c7 44 24 0c 98 59 11 	movl   $0xc0115998,0xc(%esp)$/;"	l
c0101ce3	obj/kernel.asm	/^c0101ce3:	c0 $/;"	l
c0101ce4	obj/kernel.asm	/^c0101ce4:	c7 44 24 08 53 59 11 	movl   $0xc0115953,0x8(%esp)$/;"	l
c0101ceb	obj/kernel.asm	/^c0101ceb:	c0 $/;"	l
c0101cec	obj/kernel.asm	/^c0101cec:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
c0101cf3	obj/kernel.asm	/^c0101cf3:	00 $/;"	l
c0101cf4	obj/kernel.asm	/^c0101cf4:	c7 04 24 68 59 11 c0 	movl   $0xc0115968,(%esp)$/;"	l
c0101cfb	obj/kernel.asm	/^c0101cfb:	e8 c8 f1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101d00	obj/kernel.asm	/^c0101d00:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101d07	obj/kernel.asm	/^c0101d07:	77 0f                	ja     c0101d18 <ide_read_secs+0x78>$/;"	l
c0101d09	obj/kernel.asm	/^c0101d09:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101d0c	obj/kernel.asm	/^c0101d0c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101d0f	obj/kernel.asm	/^c0101d0f:	01 d0                	add    %edx,%eax$/;"	l
c0101d11	obj/kernel.asm	/^c0101d11:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101d16	obj/kernel.asm	/^c0101d16:	76 24                	jbe    c0101d3c <ide_read_secs+0x9c>$/;"	l
c0101d18	obj/kernel.asm	/^c0101d18:	c7 44 24 0c c0 59 11 	movl   $0xc01159c0,0xc(%esp)$/;"	l
c0101d1f	obj/kernel.asm	/^c0101d1f:	c0 $/;"	l
c0101d20	obj/kernel.asm	/^c0101d20:	c7 44 24 08 53 59 11 	movl   $0xc0115953,0x8(%esp)$/;"	l
c0101d27	obj/kernel.asm	/^c0101d27:	c0 $/;"	l
c0101d28	obj/kernel.asm	/^c0101d28:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c0101d2f	obj/kernel.asm	/^c0101d2f:	00 $/;"	l
c0101d30	obj/kernel.asm	/^c0101d30:	c7 04 24 68 59 11 c0 	movl   $0xc0115968,(%esp)$/;"	l
c0101d37	obj/kernel.asm	/^c0101d37:	e8 8c f1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101d3c	obj/kernel.asm	/^c0101d3c:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101d40	obj/kernel.asm	/^c0101d40:	66 d1 e8             	shr    %ax$/;"	l
c0101d43	obj/kernel.asm	/^c0101d43:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101d46	obj/kernel.asm	/^c0101d46:	0f b7 04 85 08 59 11 	movzwl -0x3feea6f8(,%eax,4),%eax$/;"	l
c0101d4d	obj/kernel.asm	/^c0101d4d:	c0 $/;"	l
c0101d4e	obj/kernel.asm	/^c0101d4e:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101d52	obj/kernel.asm	/^c0101d52:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101d56	obj/kernel.asm	/^c0101d56:	66 d1 e8             	shr    %ax$/;"	l
c0101d59	obj/kernel.asm	/^c0101d59:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101d5c	obj/kernel.asm	/^c0101d5c:	0f b7 04 85 0a 59 11 	movzwl -0x3feea6f6(,%eax,4),%eax$/;"	l
c0101d63	obj/kernel.asm	/^c0101d63:	c0 $/;"	l
c0101d64	obj/kernel.asm	/^c0101d64:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101d68	obj/kernel.asm	/^c0101d68:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101d6c	obj/kernel.asm	/^c0101d6c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101d73	obj/kernel.asm	/^c0101d73:	00 $/;"	l
c0101d74	obj/kernel.asm	/^c0101d74:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101d77	obj/kernel.asm	/^c0101d77:	e8 33 fb ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101d7c	obj/kernel.asm	/^c0101d7c:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101d80	obj/kernel.asm	/^c0101d80:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101d83	obj/kernel.asm	/^c0101d83:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101d86	obj/kernel.asm	/^c0101d86:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101d8a	obj/kernel.asm	/^c0101d8a:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101d8e	obj/kernel.asm	/^c0101d8e:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101d92	obj/kernel.asm	/^c0101d92:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101d96	obj/kernel.asm	/^c0101d96:	ee                   	out    %al,(%dx)$/;"	l
c0101d97	obj/kernel.asm	/^c0101d97:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101d9a	obj/kernel.asm	/^c0101d9a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d9d	obj/kernel.asm	/^c0101d9d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101da1	obj/kernel.asm	/^c0101da1:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101da4	obj/kernel.asm	/^c0101da4:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101da7	obj/kernel.asm	/^c0101da7:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101dab	obj/kernel.asm	/^c0101dab:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101dae	obj/kernel.asm	/^c0101dae:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101db2	obj/kernel.asm	/^c0101db2:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101db6	obj/kernel.asm	/^c0101db6:	ee                   	out    %al,(%dx)$/;"	l
c0101db7	obj/kernel.asm	/^c0101db7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101dba	obj/kernel.asm	/^c0101dba:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101dbd	obj/kernel.asm	/^c0101dbd:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101dc1	obj/kernel.asm	/^c0101dc1:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101dc4	obj/kernel.asm	/^c0101dc4:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101dc7	obj/kernel.asm	/^c0101dc7:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101dcb	obj/kernel.asm	/^c0101dcb:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101dce	obj/kernel.asm	/^c0101dce:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101dd2	obj/kernel.asm	/^c0101dd2:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101dd6	obj/kernel.asm	/^c0101dd6:	ee                   	out    %al,(%dx)$/;"	l
c0101dd7	obj/kernel.asm	/^c0101dd7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101dda	obj/kernel.asm	/^c0101dda:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101ddd	obj/kernel.asm	/^c0101ddd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101de0	obj/kernel.asm	/^c0101de0:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101de4	obj/kernel.asm	/^c0101de4:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101de7	obj/kernel.asm	/^c0101de7:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101dea	obj/kernel.asm	/^c0101dea:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101dee	obj/kernel.asm	/^c0101dee:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101df1	obj/kernel.asm	/^c0101df1:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101df5	obj/kernel.asm	/^c0101df5:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101df9	obj/kernel.asm	/^c0101df9:	ee                   	out    %al,(%dx)$/;"	l
c0101dfa	obj/kernel.asm	/^c0101dfa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101dfd	obj/kernel.asm	/^c0101dfd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101e00	obj/kernel.asm	/^c0101e00:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e03	obj/kernel.asm	/^c0101e03:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101e07	obj/kernel.asm	/^c0101e07:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101e0a	obj/kernel.asm	/^c0101e0a:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101e0d	obj/kernel.asm	/^c0101e0d:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101e11	obj/kernel.asm	/^c0101e11:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101e14	obj/kernel.asm	/^c0101e14:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101e18	obj/kernel.asm	/^c0101e18:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101e1c	obj/kernel.asm	/^c0101e1c:	ee                   	out    %al,(%dx)$/;"	l
c0101e1d	obj/kernel.asm	/^c0101e1d:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101e21	obj/kernel.asm	/^c0101e21:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101e24	obj/kernel.asm	/^c0101e24:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101e27	obj/kernel.asm	/^c0101e27:	89 c2                	mov    %eax,%edx$/;"	l
c0101e29	obj/kernel.asm	/^c0101e29:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101e2c	obj/kernel.asm	/^c0101e2c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101e2f	obj/kernel.asm	/^c0101e2f:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101e32	obj/kernel.asm	/^c0101e32:	09 d0                	or     %edx,%eax$/;"	l
c0101e34	obj/kernel.asm	/^c0101e34:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101e37	obj/kernel.asm	/^c0101e37:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e3a	obj/kernel.asm	/^c0101e3a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101e3e	obj/kernel.asm	/^c0101e3e:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101e41	obj/kernel.asm	/^c0101e41:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101e44	obj/kernel.asm	/^c0101e44:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101e48	obj/kernel.asm	/^c0101e48:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101e4b	obj/kernel.asm	/^c0101e4b:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101e4f	obj/kernel.asm	/^c0101e4f:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101e53	obj/kernel.asm	/^c0101e53:	ee                   	out    %al,(%dx)$/;"	l
c0101e54	obj/kernel.asm	/^c0101e54:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101e58	obj/kernel.asm	/^c0101e58:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101e5b	obj/kernel.asm	/^c0101e5b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101e5e	obj/kernel.asm	/^c0101e5e:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101e62	obj/kernel.asm	/^c0101e62:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c0101e66	obj/kernel.asm	/^c0101e66:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101e6a	obj/kernel.asm	/^c0101e6a:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101e6e	obj/kernel.asm	/^c0101e6e:	ee                   	out    %al,(%dx)$/;"	l
c0101e6f	obj/kernel.asm	/^c0101e6f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101e76	obj/kernel.asm	/^c0101e76:	eb 5a                	jmp    c0101ed2 <ide_read_secs+0x232>$/;"	l
c0101e78	obj/kernel.asm	/^c0101e78:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101e7c	obj/kernel.asm	/^c0101e7c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101e83	obj/kernel.asm	/^c0101e83:	00 $/;"	l
c0101e84	obj/kernel.asm	/^c0101e84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101e87	obj/kernel.asm	/^c0101e87:	e8 23 fa ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101e8c	obj/kernel.asm	/^c0101e8c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101e8f	obj/kernel.asm	/^c0101e8f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101e93	obj/kernel.asm	/^c0101e93:	74 02                	je     c0101e97 <ide_read_secs+0x1f7>$/;"	l
c0101e95	obj/kernel.asm	/^c0101e95:	eb 41                	jmp    c0101ed8 <ide_read_secs+0x238>$/;"	l
c0101e97	obj/kernel.asm	/^c0101e97:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101e9b	obj/kernel.asm	/^c0101e9b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101e9e	obj/kernel.asm	/^c0101e9e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101ea1	obj/kernel.asm	/^c0101ea1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101ea4	obj/kernel.asm	/^c0101ea4:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101eab	obj/kernel.asm	/^c0101eab:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101eae	obj/kernel.asm	/^c0101eae:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101eb1	obj/kernel.asm	/^c0101eb1:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101eb4	obj/kernel.asm	/^c0101eb4:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101eb6	obj/kernel.asm	/^c0101eb6:	89 df                	mov    %ebx,%edi$/;"	l
c0101eb8	obj/kernel.asm	/^c0101eb8:	89 c1                	mov    %eax,%ecx$/;"	l
c0101eba	obj/kernel.asm	/^c0101eba:	fc                   	cld    $/;"	l
c0101ebb	obj/kernel.asm	/^c0101ebb:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101ebd	obj/kernel.asm	/^c0101ebd:	89 c8                	mov    %ecx,%eax$/;"	l
c0101ebf	obj/kernel.asm	/^c0101ebf:	89 fb                	mov    %edi,%ebx$/;"	l
c0101ec1	obj/kernel.asm	/^c0101ec1:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101ec4	obj/kernel.asm	/^c0101ec4:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101ec7	obj/kernel.asm	/^c0101ec7:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101ecb	obj/kernel.asm	/^c0101ecb:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101ed2	obj/kernel.asm	/^c0101ed2:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101ed6	obj/kernel.asm	/^c0101ed6:	75 a0                	jne    c0101e78 <ide_read_secs+0x1d8>$/;"	l
c0101ed8	obj/kernel.asm	/^c0101ed8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101edb	obj/kernel.asm	/^c0101edb:	83 c4 50             	add    $0x50,%esp$/;"	l
c0101ede	obj/kernel.asm	/^c0101ede:	5b                   	pop    %ebx$/;"	l
c0101edf	obj/kernel.asm	/^c0101edf:	5f                   	pop    %edi$/;"	l
c0101ee0	obj/kernel.asm	/^c0101ee0:	5d                   	pop    %ebp$/;"	l
c0101ee1	obj/kernel.asm	/^c0101ee1:	c3                   	ret    $/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2 <ide_write_secs>:$/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2:	55                   	push   %ebp$/;"	l
c0101ee3	obj/kernel.asm	/^c0101ee3:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ee5	obj/kernel.asm	/^c0101ee5:	56                   	push   %esi$/;"	l
c0101ee6	obj/kernel.asm	/^c0101ee6:	53                   	push   %ebx$/;"	l
c0101ee7	obj/kernel.asm	/^c0101ee7:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101eea	obj/kernel.asm	/^c0101eea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101eed	obj/kernel.asm	/^c0101eed:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101ef1	obj/kernel.asm	/^c0101ef1:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101ef8	obj/kernel.asm	/^c0101ef8:	77 24                	ja     c0101f1e <ide_write_secs+0x3c>$/;"	l
c0101efa	obj/kernel.asm	/^c0101efa:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101eff	obj/kernel.asm	/^c0101eff:	77 1d                	ja     c0101f1e <ide_write_secs+0x3c>$/;"	l
c0101f01	obj/kernel.asm	/^c0101f01:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101f05	obj/kernel.asm	/^c0101f05:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101f08	obj/kernel.asm	/^c0101f08:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101f0f	obj/kernel.asm	/^c0101f0f:	29 c2                	sub    %eax,%edx$/;"	l
c0101f11	obj/kernel.asm	/^c0101f11:	8d 82 60 f5 14 c0    	lea    -0x3feb0aa0(%edx),%eax$/;"	l
c0101f17	obj/kernel.asm	/^c0101f17:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101f1a	obj/kernel.asm	/^c0101f1a:	84 c0                	test   %al,%al$/;"	l
c0101f1c	obj/kernel.asm	/^c0101f1c:	75 24                	jne    c0101f42 <ide_write_secs+0x60>$/;"	l
c0101f1e	obj/kernel.asm	/^c0101f1e:	c7 44 24 0c 98 59 11 	movl   $0xc0115998,0xc(%esp)$/;"	l
c0101f25	obj/kernel.asm	/^c0101f25:	c0 $/;"	l
c0101f26	obj/kernel.asm	/^c0101f26:	c7 44 24 08 53 59 11 	movl   $0xc0115953,0x8(%esp)$/;"	l
c0101f2d	obj/kernel.asm	/^c0101f2d:	c0 $/;"	l
c0101f2e	obj/kernel.asm	/^c0101f2e:	c7 44 24 04 bc 00 00 	movl   $0xbc,0x4(%esp)$/;"	l
c0101f35	obj/kernel.asm	/^c0101f35:	00 $/;"	l
c0101f36	obj/kernel.asm	/^c0101f36:	c7 04 24 68 59 11 c0 	movl   $0xc0115968,(%esp)$/;"	l
c0101f3d	obj/kernel.asm	/^c0101f3d:	e8 86 ef ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101f42	obj/kernel.asm	/^c0101f42:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101f49	obj/kernel.asm	/^c0101f49:	77 0f                	ja     c0101f5a <ide_write_secs+0x78>$/;"	l
c0101f4b	obj/kernel.asm	/^c0101f4b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101f4e	obj/kernel.asm	/^c0101f4e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101f51	obj/kernel.asm	/^c0101f51:	01 d0                	add    %edx,%eax$/;"	l
c0101f53	obj/kernel.asm	/^c0101f53:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101f58	obj/kernel.asm	/^c0101f58:	76 24                	jbe    c0101f7e <ide_write_secs+0x9c>$/;"	l
c0101f5a	obj/kernel.asm	/^c0101f5a:	c7 44 24 0c c0 59 11 	movl   $0xc01159c0,0xc(%esp)$/;"	l
c0101f61	obj/kernel.asm	/^c0101f61:	c0 $/;"	l
c0101f62	obj/kernel.asm	/^c0101f62:	c7 44 24 08 53 59 11 	movl   $0xc0115953,0x8(%esp)$/;"	l
c0101f69	obj/kernel.asm	/^c0101f69:	c0 $/;"	l
c0101f6a	obj/kernel.asm	/^c0101f6a:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
c0101f71	obj/kernel.asm	/^c0101f71:	00 $/;"	l
c0101f72	obj/kernel.asm	/^c0101f72:	c7 04 24 68 59 11 c0 	movl   $0xc0115968,(%esp)$/;"	l
c0101f79	obj/kernel.asm	/^c0101f79:	e8 4a ef ff ff       	call   c0100ec8 <__panic>$/;"	l
c0101f7e	obj/kernel.asm	/^c0101f7e:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101f82	obj/kernel.asm	/^c0101f82:	66 d1 e8             	shr    %ax$/;"	l
c0101f85	obj/kernel.asm	/^c0101f85:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101f88	obj/kernel.asm	/^c0101f88:	0f b7 04 85 08 59 11 	movzwl -0x3feea6f8(,%eax,4),%eax$/;"	l
c0101f8f	obj/kernel.asm	/^c0101f8f:	c0 $/;"	l
c0101f90	obj/kernel.asm	/^c0101f90:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101f94	obj/kernel.asm	/^c0101f94:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101f98	obj/kernel.asm	/^c0101f98:	66 d1 e8             	shr    %ax$/;"	l
c0101f9b	obj/kernel.asm	/^c0101f9b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101f9e	obj/kernel.asm	/^c0101f9e:	0f b7 04 85 0a 59 11 	movzwl -0x3feea6f6(,%eax,4),%eax$/;"	l
c0101fa5	obj/kernel.asm	/^c0101fa5:	c0 $/;"	l
c0101fa6	obj/kernel.asm	/^c0101fa6:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101faa	obj/kernel.asm	/^c0101faa:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101fae	obj/kernel.asm	/^c0101fae:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101fb5	obj/kernel.asm	/^c0101fb5:	00 $/;"	l
c0101fb6	obj/kernel.asm	/^c0101fb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101fb9	obj/kernel.asm	/^c0101fb9:	e8 f1 f8 ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c0101fbe	obj/kernel.asm	/^c0101fbe:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101fc2	obj/kernel.asm	/^c0101fc2:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101fc5	obj/kernel.asm	/^c0101fc5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101fc8	obj/kernel.asm	/^c0101fc8:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101fcc	obj/kernel.asm	/^c0101fcc:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101fd0	obj/kernel.asm	/^c0101fd0:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101fd4	obj/kernel.asm	/^c0101fd4:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101fd8	obj/kernel.asm	/^c0101fd8:	ee                   	out    %al,(%dx)$/;"	l
c0101fd9	obj/kernel.asm	/^c0101fd9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101fdc	obj/kernel.asm	/^c0101fdc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101fdf	obj/kernel.asm	/^c0101fdf:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101fe3	obj/kernel.asm	/^c0101fe3:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101fe6	obj/kernel.asm	/^c0101fe6:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101fe9	obj/kernel.asm	/^c0101fe9:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101fed	obj/kernel.asm	/^c0101fed:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101ff0	obj/kernel.asm	/^c0101ff0:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101ff4	obj/kernel.asm	/^c0101ff4:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101ff8	obj/kernel.asm	/^c0101ff8:	ee                   	out    %al,(%dx)$/;"	l
c0101ff9	obj/kernel.asm	/^c0101ff9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101ffc	obj/kernel.asm	/^c0101ffc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101fff	obj/kernel.asm	/^c0101fff:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102003	obj/kernel.asm	/^c0102003:	83 c2 03             	add    $0x3,%edx$/;"	l
c0102006	obj/kernel.asm	/^c0102006:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0102009	obj/kernel.asm	/^c0102009:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c010200d	obj/kernel.asm	/^c010200d:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0102010	obj/kernel.asm	/^c0102010:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0102014	obj/kernel.asm	/^c0102014:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0102018	obj/kernel.asm	/^c0102018:	ee                   	out    %al,(%dx)$/;"	l
c0102019	obj/kernel.asm	/^c0102019:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010201c	obj/kernel.asm	/^c010201c:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010201f	obj/kernel.asm	/^c010201f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102022	obj/kernel.asm	/^c0102022:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102026	obj/kernel.asm	/^c0102026:	83 c2 04             	add    $0x4,%edx$/;"	l
c0102029	obj/kernel.asm	/^c0102029:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010202c	obj/kernel.asm	/^c010202c:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0102030	obj/kernel.asm	/^c0102030:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0102033	obj/kernel.asm	/^c0102033:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0102037	obj/kernel.asm	/^c0102037:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c010203b	obj/kernel.asm	/^c010203b:	ee                   	out    %al,(%dx)$/;"	l
c010203c	obj/kernel.asm	/^c010203c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010203f	obj/kernel.asm	/^c010203f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102042	obj/kernel.asm	/^c0102042:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102045	obj/kernel.asm	/^c0102045:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102049	obj/kernel.asm	/^c0102049:	83 c2 05             	add    $0x5,%edx$/;"	l
c010204c	obj/kernel.asm	/^c010204c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0102053	obj/kernel.asm	/^c0102053:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0102056	obj/kernel.asm	/^c0102056:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c010205a	obj/kernel.asm	/^c010205a:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c010205e	obj/kernel.asm	/^c010205e:	ee                   	out    %al,(%dx)$/;"	l
c010205f	obj/kernel.asm	/^c010205f:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0102063	obj/kernel.asm	/^c0102063:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102066	obj/kernel.asm	/^c0102066:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0102069	obj/kernel.asm	/^c0102069:	89 c2                	mov    %eax,%edx$/;"	l
c010206b	obj/kernel.asm	/^c010206b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010206e	obj/kernel.asm	/^c010206e:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0102071	obj/kernel.asm	/^c0102071:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0102074	obj/kernel.asm	/^c0102074:	09 d0                	or     %edx,%eax$/;"	l
c0102076	obj/kernel.asm	/^c0102076:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0102079	obj/kernel.asm	/^c0102079:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010207c	obj/kernel.asm	/^c010207c:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102080	obj/kernel.asm	/^c0102080:	83 c2 06             	add    $0x6,%edx$/;"	l
c0102083	obj/kernel.asm	/^c0102083:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0102086	obj/kernel.asm	/^c0102086:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c010208a	obj/kernel.asm	/^c010208a:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c010208d	obj/kernel.asm	/^c010208d:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102091	obj/kernel.asm	/^c0102091:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0102095	obj/kernel.asm	/^c0102095:	ee                   	out    %al,(%dx)$/;"	l
c0102096	obj/kernel.asm	/^c0102096:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010209a	obj/kernel.asm	/^c010209a:	83 c0 07             	add    $0x7,%eax$/;"	l
c010209d	obj/kernel.asm	/^c010209d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01020a0	obj/kernel.asm	/^c01020a0:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c01020a4	obj/kernel.asm	/^c01020a4:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c01020a8	obj/kernel.asm	/^c01020a8:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c01020ac	obj/kernel.asm	/^c01020ac:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c01020b0	obj/kernel.asm	/^c01020b0:	ee                   	out    %al,(%dx)$/;"	l
c01020b1	obj/kernel.asm	/^c01020b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01020b8	obj/kernel.asm	/^c01020b8:	eb 5a                	jmp    c0102114 <ide_write_secs+0x232>$/;"	l
c01020ba	obj/kernel.asm	/^c01020ba:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01020be	obj/kernel.asm	/^c01020be:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01020c5	obj/kernel.asm	/^c01020c5:	00 $/;"	l
c01020c6	obj/kernel.asm	/^c01020c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01020c9	obj/kernel.asm	/^c01020c9:	e8 e1 f7 ff ff       	call   c01018af <ide_wait_ready>$/;"	l
c01020ce	obj/kernel.asm	/^c01020ce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01020d1	obj/kernel.asm	/^c01020d1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01020d5	obj/kernel.asm	/^c01020d5:	74 02                	je     c01020d9 <ide_write_secs+0x1f7>$/;"	l
c01020d7	obj/kernel.asm	/^c01020d7:	eb 41                	jmp    c010211a <ide_write_secs+0x238>$/;"	l
c01020d9	obj/kernel.asm	/^c01020d9:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01020dd	obj/kernel.asm	/^c01020dd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01020e0	obj/kernel.asm	/^c01020e0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01020e3	obj/kernel.asm	/^c01020e3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01020e6	obj/kernel.asm	/^c01020e6:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c01020ed	obj/kernel.asm	/^c01020ed:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01020f0	obj/kernel.asm	/^c01020f0:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c01020f3	obj/kernel.asm	/^c01020f3:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01020f6	obj/kernel.asm	/^c01020f6:	89 cb                	mov    %ecx,%ebx$/;"	l
c01020f8	obj/kernel.asm	/^c01020f8:	89 de                	mov    %ebx,%esi$/;"	l
c01020fa	obj/kernel.asm	/^c01020fa:	89 c1                	mov    %eax,%ecx$/;"	l
c01020fc	obj/kernel.asm	/^c01020fc:	fc                   	cld    $/;"	l
c01020fd	obj/kernel.asm	/^c01020fd:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c01020ff	obj/kernel.asm	/^c01020ff:	89 c8                	mov    %ecx,%eax$/;"	l
c0102101	obj/kernel.asm	/^c0102101:	89 f3                	mov    %esi,%ebx$/;"	l
c0102103	obj/kernel.asm	/^c0102103:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0102106	obj/kernel.asm	/^c0102106:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0102109	obj/kernel.asm	/^c0102109:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c010210d	obj/kernel.asm	/^c010210d:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0102114	obj/kernel.asm	/^c0102114:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0102118	obj/kernel.asm	/^c0102118:	75 a0                	jne    c01020ba <ide_write_secs+0x1d8>$/;"	l
c010211a	obj/kernel.asm	/^c010211a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010211d	obj/kernel.asm	/^c010211d:	83 c4 50             	add    $0x50,%esp$/;"	l
c0102120	obj/kernel.asm	/^c0102120:	5b                   	pop    %ebx$/;"	l
c0102121	obj/kernel.asm	/^c0102121:	5e                   	pop    %esi$/;"	l
c0102122	obj/kernel.asm	/^c0102122:	5d                   	pop    %ebp$/;"	l
c0102123	obj/kernel.asm	/^c0102123:	c3                   	ret    $/;"	l
c0102124	obj/kernel.asm	/^c0102124 <intr_enable>:$/;"	l
c0102124	obj/kernel.asm	/^c0102124:	55                   	push   %ebp$/;"	l
c0102125	obj/kernel.asm	/^c0102125:	89 e5                	mov    %esp,%ebp$/;"	l
c0102127	obj/kernel.asm	/^c0102127:	fb                   	sti    $/;"	l
c0102128	obj/kernel.asm	/^c0102128:	5d                   	pop    %ebp$/;"	l
c0102129	obj/kernel.asm	/^c0102129:	c3                   	ret    $/;"	l
c010212a	obj/kernel.asm	/^c010212a <intr_disable>:$/;"	l
c010212a	obj/kernel.asm	/^c010212a:	55                   	push   %ebp$/;"	l
c010212b	obj/kernel.asm	/^c010212b:	89 e5                	mov    %esp,%ebp$/;"	l
c010212d	obj/kernel.asm	/^c010212d:	fa                   	cli    $/;"	l
c010212e	obj/kernel.asm	/^c010212e:	5d                   	pop    %ebp$/;"	l
c010212f	obj/kernel.asm	/^c010212f:	c3                   	ret    $/;"	l
c0102130	obj/kernel.asm	/^c0102130 <pic_setmask>:$/;"	l
c0102130	obj/kernel.asm	/^c0102130:	55                   	push   %ebp$/;"	l
c0102131	obj/kernel.asm	/^c0102131:	89 e5                	mov    %esp,%ebp$/;"	l
c0102133	obj/kernel.asm	/^c0102133:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0102136	obj/kernel.asm	/^c0102136:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102139	obj/kernel.asm	/^c0102139:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c010213d	obj/kernel.asm	/^c010213d:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102141	obj/kernel.asm	/^c0102141:	66 a3 70 e5 14 c0    	mov    %ax,0xc014e570$/;"	l
c0102147	obj/kernel.asm	/^c0102147:	a1 40 f6 14 c0       	mov    0xc014f640,%eax$/;"	l
c010214c	obj/kernel.asm	/^c010214c:	85 c0                	test   %eax,%eax$/;"	l
c010214e	obj/kernel.asm	/^c010214e:	74 36                	je     c0102186 <pic_setmask+0x56>$/;"	l
c0102150	obj/kernel.asm	/^c0102150:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102154	obj/kernel.asm	/^c0102154:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102157	obj/kernel.asm	/^c0102157:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c010215d	obj/kernel.asm	/^c010215d:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0102160	obj/kernel.asm	/^c0102160:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0102164	obj/kernel.asm	/^c0102164:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0102168	obj/kernel.asm	/^c0102168:	ee                   	out    %al,(%dx)$/;"	l
c0102169	obj/kernel.asm	/^c0102169:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c010216d	obj/kernel.asm	/^c010216d:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0102171	obj/kernel.asm	/^c0102171:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102174	obj/kernel.asm	/^c0102174:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c010217a	obj/kernel.asm	/^c010217a:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c010217d	obj/kernel.asm	/^c010217d:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0102181	obj/kernel.asm	/^c0102181:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0102185	obj/kernel.asm	/^c0102185:	ee                   	out    %al,(%dx)$/;"	l
c0102186	obj/kernel.asm	/^c0102186:	c9                   	leave  $/;"	l
c0102187	obj/kernel.asm	/^c0102187:	c3                   	ret    $/;"	l
c0102188	obj/kernel.asm	/^c0102188 <pic_enable>:$/;"	l
c0102188	obj/kernel.asm	/^c0102188:	55                   	push   %ebp$/;"	l
c0102189	obj/kernel.asm	/^c0102189:	89 e5                	mov    %esp,%ebp$/;"	l
c010218b	obj/kernel.asm	/^c010218b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010218e	obj/kernel.asm	/^c010218e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102191	obj/kernel.asm	/^c0102191:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0102196	obj/kernel.asm	/^c0102196:	89 c1                	mov    %eax,%ecx$/;"	l
c0102198	obj/kernel.asm	/^c0102198:	d3 e2                	shl    %cl,%edx$/;"	d
c010219a	obj/kernel.asm	/^c010219a:	89 d0                	mov    %edx,%eax$/;"	l
c010219c	obj/kernel.asm	/^c010219c:	f7 d0                	not    %eax$/;"	l
c010219e	obj/kernel.asm	/^c010219e:	89 c2                	mov    %eax,%edx$/;"	l
c01021a0	obj/kernel.asm	/^c01021a0:	0f b7 05 70 e5 14 c0 	movzwl 0xc014e570,%eax$/;"	l
c01021a7	obj/kernel.asm	/^c01021a7:	21 d0                	and    %edx,%eax$/;"	l
c01021a9	obj/kernel.asm	/^c01021a9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01021ac	obj/kernel.asm	/^c01021ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01021af	obj/kernel.asm	/^c01021af:	e8 7c ff ff ff       	call   c0102130 <pic_setmask>$/;"	l
c01021b4	obj/kernel.asm	/^c01021b4:	c9                   	leave  $/;"	l
c01021b5	obj/kernel.asm	/^c01021b5:	c3                   	ret    $/;"	l
c01021b6	obj/kernel.asm	/^c01021b6 <pic_init>:$/;"	l
c01021b6	obj/kernel.asm	/^c01021b6:	55                   	push   %ebp$/;"	l
c01021b7	obj/kernel.asm	/^c01021b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01021b9	obj/kernel.asm	/^c01021b9:	83 ec 44             	sub    $0x44,%esp$/;"	l
c01021bc	obj/kernel.asm	/^c01021bc:	c7 05 40 f6 14 c0 01 	movl   $0x1,0xc014f640$/;"	l
c01021c3	obj/kernel.asm	/^c01021c3:	00 00 00 $/;"	l
c01021c6	obj/kernel.asm	/^c01021c6:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c01021cc	obj/kernel.asm	/^c01021cc:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c01021d0	obj/kernel.asm	/^c01021d0:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c01021d4	obj/kernel.asm	/^c01021d4:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c01021d8	obj/kernel.asm	/^c01021d8:	ee                   	out    %al,(%dx)$/;"	l
c01021d9	obj/kernel.asm	/^c01021d9:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c01021df	obj/kernel.asm	/^c01021df:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c01021e3	obj/kernel.asm	/^c01021e3:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01021e7	obj/kernel.asm	/^c01021e7:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01021eb	obj/kernel.asm	/^c01021eb:	ee                   	out    %al,(%dx)$/;"	l
c01021ec	obj/kernel.asm	/^c01021ec:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c01021f2	obj/kernel.asm	/^c01021f2:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c01021f6	obj/kernel.asm	/^c01021f6:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01021fa	obj/kernel.asm	/^c01021fa:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01021fe	obj/kernel.asm	/^c01021fe:	ee                   	out    %al,(%dx)$/;"	l
c01021ff	obj/kernel.asm	/^c01021ff:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c0102205	obj/kernel.asm	/^c0102205:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c0102209	obj/kernel.asm	/^c0102209:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010220d	obj/kernel.asm	/^c010220d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102211	obj/kernel.asm	/^c0102211:	ee                   	out    %al,(%dx)$/;"	l
c0102212	obj/kernel.asm	/^c0102212:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c0102218	obj/kernel.asm	/^c0102218:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c010221c	obj/kernel.asm	/^c010221c:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0102220	obj/kernel.asm	/^c0102220:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0102224	obj/kernel.asm	/^c0102224:	ee                   	out    %al,(%dx)$/;"	l
c0102225	obj/kernel.asm	/^c0102225:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c010222b	obj/kernel.asm	/^c010222b:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c010222f	obj/kernel.asm	/^c010222f:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0102233	obj/kernel.asm	/^c0102233:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0102237	obj/kernel.asm	/^c0102237:	ee                   	out    %al,(%dx)$/;"	l
c0102238	obj/kernel.asm	/^c0102238:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c010223e	obj/kernel.asm	/^c010223e:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c0102242	obj/kernel.asm	/^c0102242:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0102246	obj/kernel.asm	/^c0102246:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c010224a	obj/kernel.asm	/^c010224a:	ee                   	out    %al,(%dx)$/;"	l
c010224b	obj/kernel.asm	/^c010224b:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c0102251	obj/kernel.asm	/^c0102251:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c0102255	obj/kernel.asm	/^c0102255:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0102259	obj/kernel.asm	/^c0102259:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c010225d	obj/kernel.asm	/^c010225d:	ee                   	out    %al,(%dx)$/;"	l
c010225e	obj/kernel.asm	/^c010225e:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c0102264	obj/kernel.asm	/^c0102264:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c0102268	obj/kernel.asm	/^c0102268:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c010226c	obj/kernel.asm	/^c010226c:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0102270	obj/kernel.asm	/^c0102270:	ee                   	out    %al,(%dx)$/;"	l
c0102271	obj/kernel.asm	/^c0102271:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c0102277	obj/kernel.asm	/^c0102277:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c010227b	obj/kernel.asm	/^c010227b:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c010227f	obj/kernel.asm	/^c010227f:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0102283	obj/kernel.asm	/^c0102283:	ee                   	out    %al,(%dx)$/;"	l
c0102284	obj/kernel.asm	/^c0102284:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c010228a	obj/kernel.asm	/^c010228a:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c010228e	obj/kernel.asm	/^c010228e:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0102292	obj/kernel.asm	/^c0102292:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0102296	obj/kernel.asm	/^c0102296:	ee                   	out    %al,(%dx)$/;"	l
c0102297	obj/kernel.asm	/^c0102297:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c010229d	obj/kernel.asm	/^c010229d:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c01022a1	obj/kernel.asm	/^c01022a1:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c01022a5	obj/kernel.asm	/^c01022a5:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c01022a9	obj/kernel.asm	/^c01022a9:	ee                   	out    %al,(%dx)$/;"	l
c01022aa	obj/kernel.asm	/^c01022aa:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c01022b0	obj/kernel.asm	/^c01022b0:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c01022b4	obj/kernel.asm	/^c01022b4:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01022b8	obj/kernel.asm	/^c01022b8:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01022bc	obj/kernel.asm	/^c01022bc:	ee                   	out    %al,(%dx)$/;"	l
c01022bd	obj/kernel.asm	/^c01022bd:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c01022c3	obj/kernel.asm	/^c01022c3:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c01022c7	obj/kernel.asm	/^c01022c7:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c01022cb	obj/kernel.asm	/^c01022cb:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c01022cf	obj/kernel.asm	/^c01022cf:	ee                   	out    %al,(%dx)$/;"	l
c01022d0	obj/kernel.asm	/^c01022d0:	0f b7 05 70 e5 14 c0 	movzwl 0xc014e570,%eax$/;"	l
c01022d7	obj/kernel.asm	/^c01022d7:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c01022db	obj/kernel.asm	/^c01022db:	74 12                	je     c01022ef <pic_init+0x139>$/;"	l
c01022dd	obj/kernel.asm	/^c01022dd:	0f b7 05 70 e5 14 c0 	movzwl 0xc014e570,%eax$/;"	l
c01022e4	obj/kernel.asm	/^c01022e4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01022e7	obj/kernel.asm	/^c01022e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01022ea	obj/kernel.asm	/^c01022ea:	e8 41 fe ff ff       	call   c0102130 <pic_setmask>$/;"	l
c01022ef	obj/kernel.asm	/^c01022ef:	c9                   	leave  $/;"	l
c01022f0	obj/kernel.asm	/^c01022f0:	c3                   	ret    $/;"	l
c01022f1	obj/kernel.asm	/^c01022f1 <print_ticks>:$/;"	l
c01022f1	obj/kernel.asm	/^c01022f1:	55                   	push   %ebp$/;"	l
c01022f2	obj/kernel.asm	/^c01022f2:	89 e5                	mov    %esp,%ebp$/;"	l
c01022f4	obj/kernel.asm	/^c01022f4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01022f7	obj/kernel.asm	/^c01022f7:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c01022fe	obj/kernel.asm	/^c01022fe:	00 $/;"	l
c01022ff	obj/kernel.asm	/^c01022ff:	c7 04 24 00 5a 11 c0 	movl   $0xc0115a00,(%esp)$/;"	l
c0102306	obj/kernel.asm	/^c0102306:	e8 5a e0 ff ff       	call   c0100365 <cprintf>$/;"	l
c010230b	obj/kernel.asm	/^c010230b:	c9                   	leave  $/;"	l
c010230c	obj/kernel.asm	/^c010230c:	c3                   	ret    $/;"	l
c010230d	obj/kernel.asm	/^c010230d <idt_init>:$/;"	l
c010230d	obj/kernel.asm	/^c010230d:	55                   	push   %ebp$/;"	l
c010230e	obj/kernel.asm	/^c010230e:	89 e5                	mov    %esp,%ebp$/;"	l
c0102310	obj/kernel.asm	/^c0102310:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0102313	obj/kernel.asm	/^c0102313:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010231a	obj/kernel.asm	/^c010231a:	e9 c3 00 00 00       	jmp    c01023e2 <idt_init+0xd5>$/;"	l
c010231f	obj/kernel.asm	/^c010231f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102322	obj/kernel.asm	/^c0102322:	8b 04 85 00 e6 14 c0 	mov    -0x3feb1a00(,%eax,4),%eax$/;"	l
c0102329	obj/kernel.asm	/^c0102329:	89 c2                	mov    %eax,%edx$/;"	l
c010232b	obj/kernel.asm	/^c010232b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010232e	obj/kernel.asm	/^c010232e:	66 89 14 c5 60 f6 14 	mov    %dx,-0x3feb09a0(,%eax,8)$/;"	l
c0102335	obj/kernel.asm	/^c0102335:	c0 $/;"	l
c0102336	obj/kernel.asm	/^c0102336:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102339	obj/kernel.asm	/^c0102339:	66 c7 04 c5 62 f6 14 	movw   $0x8,-0x3feb099e(,%eax,8)$/;"	l
c0102340	obj/kernel.asm	/^c0102340:	c0 08 00 $/;"	l
c0102343	obj/kernel.asm	/^c0102343:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102346	obj/kernel.asm	/^c0102346:	0f b6 14 c5 64 f6 14 	movzbl -0x3feb099c(,%eax,8),%edx$/;"	l
c010234d	obj/kernel.asm	/^c010234d:	c0 $/;"	l
c010234e	obj/kernel.asm	/^c010234e:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102351	obj/kernel.asm	/^c0102351:	88 14 c5 64 f6 14 c0 	mov    %dl,-0x3feb099c(,%eax,8)$/;"	l
c0102358	obj/kernel.asm	/^c0102358:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010235b	obj/kernel.asm	/^c010235b:	0f b6 14 c5 64 f6 14 	movzbl -0x3feb099c(,%eax,8),%edx$/;"	l
c0102362	obj/kernel.asm	/^c0102362:	c0 $/;"	l
c0102363	obj/kernel.asm	/^c0102363:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102366	obj/kernel.asm	/^c0102366:	88 14 c5 64 f6 14 c0 	mov    %dl,-0x3feb099c(,%eax,8)$/;"	l
c010236d	obj/kernel.asm	/^c010236d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102370	obj/kernel.asm	/^c0102370:	0f b6 14 c5 65 f6 14 	movzbl -0x3feb099b(,%eax,8),%edx$/;"	l
c0102377	obj/kernel.asm	/^c0102377:	c0 $/;"	l
c0102378	obj/kernel.asm	/^c0102378:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c010237b	obj/kernel.asm	/^c010237b:	83 ca 0e             	or     $0xe,%edx$/;"	l
c010237e	obj/kernel.asm	/^c010237e:	88 14 c5 65 f6 14 c0 	mov    %dl,-0x3feb099b(,%eax,8)$/;"	l
c0102385	obj/kernel.asm	/^c0102385:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102388	obj/kernel.asm	/^c0102388:	0f b6 14 c5 65 f6 14 	movzbl -0x3feb099b(,%eax,8),%edx$/;"	l
c010238f	obj/kernel.asm	/^c010238f:	c0 $/;"	l
c0102390	obj/kernel.asm	/^c0102390:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102393	obj/kernel.asm	/^c0102393:	88 14 c5 65 f6 14 c0 	mov    %dl,-0x3feb099b(,%eax,8)$/;"	l
c010239a	obj/kernel.asm	/^c010239a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010239d	obj/kernel.asm	/^c010239d:	0f b6 14 c5 65 f6 14 	movzbl -0x3feb099b(,%eax,8),%edx$/;"	l
c01023a4	obj/kernel.asm	/^c01023a4:	c0 $/;"	l
c01023a5	obj/kernel.asm	/^c01023a5:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01023a8	obj/kernel.asm	/^c01023a8:	88 14 c5 65 f6 14 c0 	mov    %dl,-0x3feb099b(,%eax,8)$/;"	l
c01023af	obj/kernel.asm	/^c01023af:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023b2	obj/kernel.asm	/^c01023b2:	0f b6 14 c5 65 f6 14 	movzbl -0x3feb099b(,%eax,8),%edx$/;"	l
c01023b9	obj/kernel.asm	/^c01023b9:	c0 $/;"	l
c01023ba	obj/kernel.asm	/^c01023ba:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01023bd	obj/kernel.asm	/^c01023bd:	88 14 c5 65 f6 14 c0 	mov    %dl,-0x3feb099b(,%eax,8)$/;"	l
c01023c4	obj/kernel.asm	/^c01023c4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023c7	obj/kernel.asm	/^c01023c7:	8b 04 85 00 e6 14 c0 	mov    -0x3feb1a00(,%eax,4),%eax$/;"	l
c01023ce	obj/kernel.asm	/^c01023ce:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01023d1	obj/kernel.asm	/^c01023d1:	89 c2                	mov    %eax,%edx$/;"	l
c01023d3	obj/kernel.asm	/^c01023d3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023d6	obj/kernel.asm	/^c01023d6:	66 89 14 c5 66 f6 14 	mov    %dx,-0x3feb099a(,%eax,8)$/;"	l
c01023dd	obj/kernel.asm	/^c01023dd:	c0 $/;"	l
c01023de	obj/kernel.asm	/^c01023de:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01023e2	obj/kernel.asm	/^c01023e2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023e5	obj/kernel.asm	/^c01023e5:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c01023ea	obj/kernel.asm	/^c01023ea:	0f 86 2f ff ff ff    	jbe    c010231f <idt_init+0x12>$/;"	l
c01023f0	obj/kernel.asm	/^c01023f0:	a1 00 e8 14 c0       	mov    0xc014e800,%eax$/;"	l
c01023f5	obj/kernel.asm	/^c01023f5:	66 a3 60 fa 14 c0    	mov    %ax,0xc014fa60$/;"	l
c01023fb	obj/kernel.asm	/^c01023fb:	66 c7 05 62 fa 14 c0 	movw   $0x8,0xc014fa62$/;"	l
c0102402	obj/kernel.asm	/^c0102402:	08 00 $/;"	l
c0102404	obj/kernel.asm	/^c0102404:	0f b6 05 64 fa 14 c0 	movzbl 0xc014fa64,%eax$/;"	l
c010240b	obj/kernel.asm	/^c010240b:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c010240e	obj/kernel.asm	/^c010240e:	a2 64 fa 14 c0       	mov    %al,0xc014fa64$/;"	l
c0102413	obj/kernel.asm	/^c0102413:	0f b6 05 64 fa 14 c0 	movzbl 0xc014fa64,%eax$/;"	l
c010241a	obj/kernel.asm	/^c010241a:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c010241d	obj/kernel.asm	/^c010241d:	a2 64 fa 14 c0       	mov    %al,0xc014fa64$/;"	l
c0102422	obj/kernel.asm	/^c0102422:	0f b6 05 65 fa 14 c0 	movzbl 0xc014fa65,%eax$/;"	l
c0102429	obj/kernel.asm	/^c0102429:	83 c8 0f             	or     $0xf,%eax$/;"	l
c010242c	obj/kernel.asm	/^c010242c:	a2 65 fa 14 c0       	mov    %al,0xc014fa65$/;"	l
c0102431	obj/kernel.asm	/^c0102431:	0f b6 05 65 fa 14 c0 	movzbl 0xc014fa65,%eax$/;"	l
c0102438	obj/kernel.asm	/^c0102438:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c010243b	obj/kernel.asm	/^c010243b:	a2 65 fa 14 c0       	mov    %al,0xc014fa65$/;"	l
c0102440	obj/kernel.asm	/^c0102440:	0f b6 05 65 fa 14 c0 	movzbl 0xc014fa65,%eax$/;"	l
c0102447	obj/kernel.asm	/^c0102447:	83 c8 60             	or     $0x60,%eax$/;"	l
c010244a	obj/kernel.asm	/^c010244a:	a2 65 fa 14 c0       	mov    %al,0xc014fa65$/;"	l
c010244f	obj/kernel.asm	/^c010244f:	0f b6 05 65 fa 14 c0 	movzbl 0xc014fa65,%eax$/;"	l
c0102456	obj/kernel.asm	/^c0102456:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0102459	obj/kernel.asm	/^c0102459:	a2 65 fa 14 c0       	mov    %al,0xc014fa65$/;"	l
c010245e	obj/kernel.asm	/^c010245e:	a1 00 e8 14 c0       	mov    0xc014e800,%eax$/;"	l
c0102463	obj/kernel.asm	/^c0102463:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102466	obj/kernel.asm	/^c0102466:	66 a3 66 fa 14 c0    	mov    %ax,0xc014fa66$/;"	l
c010246c	obj/kernel.asm	/^c010246c:	c7 45 f8 80 e5 14 c0 	movl   $0xc014e580,-0x8(%ebp)$/;"	l
c0102473	obj/kernel.asm	/^c0102473:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0102476	obj/kernel.asm	/^c0102476:	0f 01 18             	lidtl  (%eax)$/;"	l
c0102479	obj/kernel.asm	/^c0102479:	c9                   	leave  $/;"	l
c010247a	obj/kernel.asm	/^c010247a:	c3                   	ret    $/;"	l
c010247b	obj/kernel.asm	/^c010247b <trapname>:$/;"	l
c010247b	obj/kernel.asm	/^c010247b:	55                   	push   %ebp$/;"	l
c010247c	obj/kernel.asm	/^c010247c:	89 e5                	mov    %esp,%ebp$/;"	l
c010247e	obj/kernel.asm	/^c010247e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102481	obj/kernel.asm	/^c0102481:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c0102484	obj/kernel.asm	/^c0102484:	77 0c                	ja     c0102492 <trapname+0x17>$/;"	l
c0102486	obj/kernel.asm	/^c0102486:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102489	obj/kernel.asm	/^c0102489:	8b 04 85 80 5e 11 c0 	mov    -0x3feea180(,%eax,4),%eax$/;"	l
c0102490	obj/kernel.asm	/^c0102490:	eb 18                	jmp    c01024aa <trapname+0x2f>$/;"	l
c0102492	obj/kernel.asm	/^c0102492:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c0102496	obj/kernel.asm	/^c0102496:	7e 0d                	jle    c01024a5 <trapname+0x2a>$/;"	l
c0102498	obj/kernel.asm	/^c0102498:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c010249c	obj/kernel.asm	/^c010249c:	7f 07                	jg     c01024a5 <trapname+0x2a>$/;"	l
c010249e	obj/kernel.asm	/^c010249e:	b8 0a 5a 11 c0       	mov    $0xc0115a0a,%eax$/;"	l
c01024a3	obj/kernel.asm	/^c01024a3:	eb 05                	jmp    c01024aa <trapname+0x2f>$/;"	l
c01024a5	obj/kernel.asm	/^c01024a5:	b8 1d 5a 11 c0       	mov    $0xc0115a1d,%eax$/;"	l
c01024aa	obj/kernel.asm	/^c01024aa:	5d                   	pop    %ebp$/;"	l
c01024ab	obj/kernel.asm	/^c01024ab:	c3                   	ret    $/;"	l
c01024ac	obj/kernel.asm	/^c01024ac <trap_in_kernel>:$/;"	l
c01024ac	obj/kernel.asm	/^c01024ac:	55                   	push   %ebp$/;"	l
c01024ad	obj/kernel.asm	/^c01024ad:	89 e5                	mov    %esp,%ebp$/;"	l
c01024af	obj/kernel.asm	/^c01024af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024b2	obj/kernel.asm	/^c01024b2:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01024b6	obj/kernel.asm	/^c01024b6:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c01024ba	obj/kernel.asm	/^c01024ba:	0f 94 c0             	sete   %al$/;"	l
c01024bd	obj/kernel.asm	/^c01024bd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01024c0	obj/kernel.asm	/^c01024c0:	5d                   	pop    %ebp$/;"	l
c01024c1	obj/kernel.asm	/^c01024c1:	c3                   	ret    $/;"	l
c01024c2	obj/kernel.asm	/^c01024c2 <print_trapframe>:$/;"	l
c01024c2	obj/kernel.asm	/^c01024c2:	55                   	push   %ebp$/;"	l
c01024c3	obj/kernel.asm	/^c01024c3:	89 e5                	mov    %esp,%ebp$/;"	l
c01024c5	obj/kernel.asm	/^c01024c5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01024c8	obj/kernel.asm	/^c01024c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024cb	obj/kernel.asm	/^c01024cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024cf	obj/kernel.asm	/^c01024cf:	c7 04 24 5e 5a 11 c0 	movl   $0xc0115a5e,(%esp)$/;"	l
c01024d6	obj/kernel.asm	/^c01024d6:	e8 8a de ff ff       	call   c0100365 <cprintf>$/;"	l
c01024db	obj/kernel.asm	/^c01024db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024de	obj/kernel.asm	/^c01024de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01024e1	obj/kernel.asm	/^c01024e1:	e8 a1 01 00 00       	call   c0102687 <print_regs>$/;"	l
c01024e6	obj/kernel.asm	/^c01024e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024e9	obj/kernel.asm	/^c01024e9:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c01024ed	obj/kernel.asm	/^c01024ed:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01024f0	obj/kernel.asm	/^c01024f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01024f4	obj/kernel.asm	/^c01024f4:	c7 04 24 6f 5a 11 c0 	movl   $0xc0115a6f,(%esp)$/;"	l
c01024fb	obj/kernel.asm	/^c01024fb:	e8 65 de ff ff       	call   c0100365 <cprintf>$/;"	l
c0102500	obj/kernel.asm	/^c0102500:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102503	obj/kernel.asm	/^c0102503:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c0102507	obj/kernel.asm	/^c0102507:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010250a	obj/kernel.asm	/^c010250a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010250e	obj/kernel.asm	/^c010250e:	c7 04 24 82 5a 11 c0 	movl   $0xc0115a82,(%esp)$/;"	l
c0102515	obj/kernel.asm	/^c0102515:	e8 4b de ff ff       	call   c0100365 <cprintf>$/;"	l
c010251a	obj/kernel.asm	/^c010251a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010251d	obj/kernel.asm	/^c010251d:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102521	obj/kernel.asm	/^c0102521:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102524	obj/kernel.asm	/^c0102524:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102528	obj/kernel.asm	/^c0102528:	c7 04 24 95 5a 11 c0 	movl   $0xc0115a95,(%esp)$/;"	l
c010252f	obj/kernel.asm	/^c010252f:	e8 31 de ff ff       	call   c0100365 <cprintf>$/;"	l
c0102534	obj/kernel.asm	/^c0102534:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102537	obj/kernel.asm	/^c0102537:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c010253b	obj/kernel.asm	/^c010253b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010253e	obj/kernel.asm	/^c010253e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102542	obj/kernel.asm	/^c0102542:	c7 04 24 a8 5a 11 c0 	movl   $0xc0115aa8,(%esp)$/;"	l
c0102549	obj/kernel.asm	/^c0102549:	e8 17 de ff ff       	call   c0100365 <cprintf>$/;"	l
c010254e	obj/kernel.asm	/^c010254e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102551	obj/kernel.asm	/^c0102551:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0102554	obj/kernel.asm	/^c0102554:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102557	obj/kernel.asm	/^c0102557:	e8 1f ff ff ff       	call   c010247b <trapname>$/;"	l
c010255c	obj/kernel.asm	/^c010255c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010255f	obj/kernel.asm	/^c010255f:	8b 52 30             	mov    0x30(%edx),%edx$/;"	l
c0102562	obj/kernel.asm	/^c0102562:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0102566	obj/kernel.asm	/^c0102566:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010256a	obj/kernel.asm	/^c010256a:	c7 04 24 bb 5a 11 c0 	movl   $0xc0115abb,(%esp)$/;"	l
c0102571	obj/kernel.asm	/^c0102571:	e8 ef dd ff ff       	call   c0100365 <cprintf>$/;"	l
c0102576	obj/kernel.asm	/^c0102576:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102579	obj/kernel.asm	/^c0102579:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010257c	obj/kernel.asm	/^c010257c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102580	obj/kernel.asm	/^c0102580:	c7 04 24 cd 5a 11 c0 	movl   $0xc0115acd,(%esp)$/;"	l
c0102587	obj/kernel.asm	/^c0102587:	e8 d9 dd ff ff       	call   c0100365 <cprintf>$/;"	l
c010258c	obj/kernel.asm	/^c010258c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010258f	obj/kernel.asm	/^c010258f:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0102592	obj/kernel.asm	/^c0102592:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102596	obj/kernel.asm	/^c0102596:	c7 04 24 dc 5a 11 c0 	movl   $0xc0115adc,(%esp)$/;"	l
c010259d	obj/kernel.asm	/^c010259d:	e8 c3 dd ff ff       	call   c0100365 <cprintf>$/;"	l
c01025a2	obj/kernel.asm	/^c01025a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025a5	obj/kernel.asm	/^c01025a5:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01025a9	obj/kernel.asm	/^c01025a9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01025ac	obj/kernel.asm	/^c01025ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025b0	obj/kernel.asm	/^c01025b0:	c7 04 24 eb 5a 11 c0 	movl   $0xc0115aeb,(%esp)$/;"	l
c01025b7	obj/kernel.asm	/^c01025b7:	e8 a9 dd ff ff       	call   c0100365 <cprintf>$/;"	l
c01025bc	obj/kernel.asm	/^c01025bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025bf	obj/kernel.asm	/^c01025bf:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c01025c2	obj/kernel.asm	/^c01025c2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01025c6	obj/kernel.asm	/^c01025c6:	c7 04 24 fe 5a 11 c0 	movl   $0xc0115afe,(%esp)$/;"	l
c01025cd	obj/kernel.asm	/^c01025cd:	e8 93 dd ff ff       	call   c0100365 <cprintf>$/;"	l
c01025d2	obj/kernel.asm	/^c01025d2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01025d9	obj/kernel.asm	/^c01025d9:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c01025e0	obj/kernel.asm	/^c01025e0:	eb 3e                	jmp    c0102620 <print_trapframe+0x15e>$/;"	l
c01025e2	obj/kernel.asm	/^c01025e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025e5	obj/kernel.asm	/^c01025e5:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c01025e8	obj/kernel.asm	/^c01025e8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01025eb	obj/kernel.asm	/^c01025eb:	21 d0                	and    %edx,%eax$/;"	l
c01025ed	obj/kernel.asm	/^c01025ed:	85 c0                	test   %eax,%eax$/;"	l
c01025ef	obj/kernel.asm	/^c01025ef:	74 28                	je     c0102619 <print_trapframe+0x157>$/;"	l
c01025f1	obj/kernel.asm	/^c01025f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01025f4	obj/kernel.asm	/^c01025f4:	8b 04 85 a0 e5 14 c0 	mov    -0x3feb1a60(,%eax,4),%eax$/;"	l
c01025fb	obj/kernel.asm	/^c01025fb:	85 c0                	test   %eax,%eax$/;"	l
c01025fd	obj/kernel.asm	/^c01025fd:	74 1a                	je     c0102619 <print_trapframe+0x157>$/;"	l
c01025ff	obj/kernel.asm	/^c01025ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102602	obj/kernel.asm	/^c0102602:	8b 04 85 a0 e5 14 c0 	mov    -0x3feb1a60(,%eax,4),%eax$/;"	l
c0102609	obj/kernel.asm	/^c0102609:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010260d	obj/kernel.asm	/^c010260d:	c7 04 24 0d 5b 11 c0 	movl   $0xc0115b0d,(%esp)$/;"	l
c0102614	obj/kernel.asm	/^c0102614:	e8 4c dd ff ff       	call   c0100365 <cprintf>$/;"	l
c0102619	obj/kernel.asm	/^c0102619:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010261d	obj/kernel.asm	/^c010261d:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c0102620	obj/kernel.asm	/^c0102620:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102623	obj/kernel.asm	/^c0102623:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c0102626	obj/kernel.asm	/^c0102626:	76 ba                	jbe    c01025e2 <print_trapframe+0x120>$/;"	l
c0102628	obj/kernel.asm	/^c0102628:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010262b	obj/kernel.asm	/^c010262b:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010262e	obj/kernel.asm	/^c010262e:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c0102633	obj/kernel.asm	/^c0102633:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0102636	obj/kernel.asm	/^c0102636:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010263a	obj/kernel.asm	/^c010263a:	c7 04 24 11 5b 11 c0 	movl   $0xc0115b11,(%esp)$/;"	l
c0102641	obj/kernel.asm	/^c0102641:	e8 1f dd ff ff       	call   c0100365 <cprintf>$/;"	l
c0102646	obj/kernel.asm	/^c0102646:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102649	obj/kernel.asm	/^c0102649:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010264c	obj/kernel.asm	/^c010264c:	e8 5b fe ff ff       	call   c01024ac <trap_in_kernel>$/;"	l
c0102651	obj/kernel.asm	/^c0102651:	85 c0                	test   %eax,%eax$/;"	l
c0102653	obj/kernel.asm	/^c0102653:	75 30                	jne    c0102685 <print_trapframe+0x1c3>$/;"	l
c0102655	obj/kernel.asm	/^c0102655:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102658	obj/kernel.asm	/^c0102658:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010265b	obj/kernel.asm	/^c010265b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010265f	obj/kernel.asm	/^c010265f:	c7 04 24 1a 5b 11 c0 	movl   $0xc0115b1a,(%esp)$/;"	l
c0102666	obj/kernel.asm	/^c0102666:	e8 fa dc ff ff       	call   c0100365 <cprintf>$/;"	l
c010266b	obj/kernel.asm	/^c010266b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010266e	obj/kernel.asm	/^c010266e:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c0102672	obj/kernel.asm	/^c0102672:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102675	obj/kernel.asm	/^c0102675:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102679	obj/kernel.asm	/^c0102679:	c7 04 24 29 5b 11 c0 	movl   $0xc0115b29,(%esp)$/;"	l
c0102680	obj/kernel.asm	/^c0102680:	e8 e0 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c0102685	obj/kernel.asm	/^c0102685:	c9                   	leave  $/;"	l
c0102686	obj/kernel.asm	/^c0102686:	c3                   	ret    $/;"	l
c0102687	obj/kernel.asm	/^c0102687 <print_regs>:$/;"	l
c0102687	obj/kernel.asm	/^c0102687:	55                   	push   %ebp$/;"	l
c0102688	obj/kernel.asm	/^c0102688:	89 e5                	mov    %esp,%ebp$/;"	l
c010268a	obj/kernel.asm	/^c010268a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010268d	obj/kernel.asm	/^c010268d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102690	obj/kernel.asm	/^c0102690:	8b 00                	mov    (%eax),%eax$/;"	l
c0102692	obj/kernel.asm	/^c0102692:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102696	obj/kernel.asm	/^c0102696:	c7 04 24 3c 5b 11 c0 	movl   $0xc0115b3c,(%esp)$/;"	l
c010269d	obj/kernel.asm	/^c010269d:	e8 c3 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026a2	obj/kernel.asm	/^c01026a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026a5	obj/kernel.asm	/^c01026a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01026a8	obj/kernel.asm	/^c01026a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01026ac	obj/kernel.asm	/^c01026ac:	c7 04 24 4b 5b 11 c0 	movl   $0xc0115b4b,(%esp)$/;"	l
c01026b3	obj/kernel.asm	/^c01026b3:	e8 ad dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026b8	obj/kernel.asm	/^c01026b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026bb	obj/kernel.asm	/^c01026bb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01026be	obj/kernel.asm	/^c01026be:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01026c2	obj/kernel.asm	/^c01026c2:	c7 04 24 5a 5b 11 c0 	movl   $0xc0115b5a,(%esp)$/;"	l
c01026c9	obj/kernel.asm	/^c01026c9:	e8 97 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026ce	obj/kernel.asm	/^c01026ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026d1	obj/kernel.asm	/^c01026d1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01026d4	obj/kernel.asm	/^c01026d4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01026d8	obj/kernel.asm	/^c01026d8:	c7 04 24 69 5b 11 c0 	movl   $0xc0115b69,(%esp)$/;"	l
c01026df	obj/kernel.asm	/^c01026df:	e8 81 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026e4	obj/kernel.asm	/^c01026e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026e7	obj/kernel.asm	/^c01026e7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01026ea	obj/kernel.asm	/^c01026ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01026ee	obj/kernel.asm	/^c01026ee:	c7 04 24 78 5b 11 c0 	movl   $0xc0115b78,(%esp)$/;"	l
c01026f5	obj/kernel.asm	/^c01026f5:	e8 6b dc ff ff       	call   c0100365 <cprintf>$/;"	l
c01026fa	obj/kernel.asm	/^c01026fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026fd	obj/kernel.asm	/^c01026fd:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0102700	obj/kernel.asm	/^c0102700:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102704	obj/kernel.asm	/^c0102704:	c7 04 24 87 5b 11 c0 	movl   $0xc0115b87,(%esp)$/;"	l
c010270b	obj/kernel.asm	/^c010270b:	e8 55 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c0102710	obj/kernel.asm	/^c0102710:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102713	obj/kernel.asm	/^c0102713:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0102716	obj/kernel.asm	/^c0102716:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010271a	obj/kernel.asm	/^c010271a:	c7 04 24 96 5b 11 c0 	movl   $0xc0115b96,(%esp)$/;"	l
c0102721	obj/kernel.asm	/^c0102721:	e8 3f dc ff ff       	call   c0100365 <cprintf>$/;"	l
c0102726	obj/kernel.asm	/^c0102726:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102729	obj/kernel.asm	/^c0102729:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010272c	obj/kernel.asm	/^c010272c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102730	obj/kernel.asm	/^c0102730:	c7 04 24 a5 5b 11 c0 	movl   $0xc0115ba5,(%esp)$/;"	l
c0102737	obj/kernel.asm	/^c0102737:	e8 29 dc ff ff       	call   c0100365 <cprintf>$/;"	l
c010273c	obj/kernel.asm	/^c010273c:	c9                   	leave  $/;"	l
c010273d	obj/kernel.asm	/^c010273d:	c3                   	ret    $/;"	l
c010273e	obj/kernel.asm	/^c010273e <print_pgfault>:$/;"	l
c010273e	obj/kernel.asm	/^c010273e:	55                   	push   %ebp$/;"	l
c010273f	obj/kernel.asm	/^c010273f:	89 e5                	mov    %esp,%ebp$/;"	l
c0102741	obj/kernel.asm	/^c0102741:	53                   	push   %ebx$/;"	l
c0102742	obj/kernel.asm	/^c0102742:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0102745	obj/kernel.asm	/^c0102745:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102748	obj/kernel.asm	/^c0102748:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010274b	obj/kernel.asm	/^c010274b:	83 e0 01             	and    $0x1,%eax$/;"	l
c010274e	obj/kernel.asm	/^c010274e:	85 c0                	test   %eax,%eax$/;"	l
c0102750	obj/kernel.asm	/^c0102750:	74 07                	je     c0102759 <print_pgfault+0x1b>$/;"	l
c0102752	obj/kernel.asm	/^c0102752:	b9 b4 5b 11 c0       	mov    $0xc0115bb4,%ecx$/;"	l
c0102757	obj/kernel.asm	/^c0102757:	eb 05                	jmp    c010275e <print_pgfault+0x20>$/;"	l
c0102759	obj/kernel.asm	/^c0102759:	b9 c5 5b 11 c0       	mov    $0xc0115bc5,%ecx$/;"	l
c010275e	obj/kernel.asm	/^c010275e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102761	obj/kernel.asm	/^c0102761:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102764	obj/kernel.asm	/^c0102764:	83 e0 02             	and    $0x2,%eax$/;"	l
c0102767	obj/kernel.asm	/^c0102767:	85 c0                	test   %eax,%eax$/;"	l
c0102769	obj/kernel.asm	/^c0102769:	74 07                	je     c0102772 <print_pgfault+0x34>$/;"	l
c010276b	obj/kernel.asm	/^c010276b:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
c0102770	obj/kernel.asm	/^c0102770:	eb 05                	jmp    c0102777 <print_pgfault+0x39>$/;"	l
c0102772	obj/kernel.asm	/^c0102772:	ba 52 00 00 00       	mov    $0x52,%edx$/;"	l
c0102777	obj/kernel.asm	/^c0102777:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010277a	obj/kernel.asm	/^c010277a:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010277d	obj/kernel.asm	/^c010277d:	83 e0 04             	and    $0x4,%eax$/;"	l
c0102780	obj/kernel.asm	/^c0102780:	85 c0                	test   %eax,%eax$/;"	l
c0102782	obj/kernel.asm	/^c0102782:	74 07                	je     c010278b <print_pgfault+0x4d>$/;"	l
c0102784	obj/kernel.asm	/^c0102784:	b8 55 00 00 00       	mov    $0x55,%eax$/;"	l
c0102789	obj/kernel.asm	/^c0102789:	eb 05                	jmp    c0102790 <print_pgfault+0x52>$/;"	l
c010278b	obj/kernel.asm	/^c010278b:	b8 4b 00 00 00       	mov    $0x4b,%eax$/;"	l
c0102790	obj/kernel.asm	/^c0102790:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
c0102793	obj/kernel.asm	/^c0102793:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
c0102796	obj/kernel.asm	/^c0102796:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
c0102799	obj/kernel.asm	/^c0102799:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c010279d	obj/kernel.asm	/^c010279d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01027a1	obj/kernel.asm	/^c01027a1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01027a5	obj/kernel.asm	/^c01027a5:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c01027a9	obj/kernel.asm	/^c01027a9:	c7 04 24 d4 5b 11 c0 	movl   $0xc0115bd4,(%esp)$/;"	l
c01027b0	obj/kernel.asm	/^c01027b0:	e8 b0 db ff ff       	call   c0100365 <cprintf>$/;"	l
c01027b5	obj/kernel.asm	/^c01027b5:	83 c4 34             	add    $0x34,%esp$/;"	l
c01027b8	obj/kernel.asm	/^c01027b8:	5b                   	pop    %ebx$/;"	l
c01027b9	obj/kernel.asm	/^c01027b9:	5d                   	pop    %ebp$/;"	l
c01027ba	obj/kernel.asm	/^c01027ba:	c3                   	ret    $/;"	l
c01027bb	obj/kernel.asm	/^c01027bb <pgfault_handler>:$/;"	l
c01027bb	obj/kernel.asm	/^c01027bb:	55                   	push   %ebp$/;"	l
c01027bc	obj/kernel.asm	/^c01027bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01027be	obj/kernel.asm	/^c01027be:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01027c1	obj/kernel.asm	/^c01027c1:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c01027c6	obj/kernel.asm	/^c01027c6:	85 c0                	test   %eax,%eax$/;"	l
c01027c8	obj/kernel.asm	/^c01027c8:	74 0b                	je     c01027d5 <pgfault_handler+0x1a>$/;"	l
c01027ca	obj/kernel.asm	/^c01027ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027cd	obj/kernel.asm	/^c01027cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01027d0	obj/kernel.asm	/^c01027d0:	e8 69 ff ff ff       	call   c010273e <print_pgfault>$/;"	l
c01027d5	obj/kernel.asm	/^c01027d5:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c01027da	obj/kernel.asm	/^c01027da:	85 c0                	test   %eax,%eax$/;"	l
c01027dc	obj/kernel.asm	/^c01027dc:	74 3d                	je     c010281b <pgfault_handler+0x60>$/;"	l
c01027de	obj/kernel.asm	/^c01027de:	8b 15 28 ff 14 c0    	mov    0xc014ff28,%edx$/;"	l
c01027e4	obj/kernel.asm	/^c01027e4:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c01027e9	obj/kernel.asm	/^c01027e9:	39 c2                	cmp    %eax,%edx$/;"	l
c01027eb	obj/kernel.asm	/^c01027eb:	74 24                	je     c0102811 <pgfault_handler+0x56>$/;"	l
c01027ed	obj/kernel.asm	/^c01027ed:	c7 44 24 0c f7 5b 11 	movl   $0xc0115bf7,0xc(%esp)$/;"	l
c01027f4	obj/kernel.asm	/^c01027f4:	c0 $/;"	l
c01027f5	obj/kernel.asm	/^c01027f5:	c7 44 24 08 0b 5c 11 	movl   $0xc0115c0b,0x8(%esp)$/;"	l
c01027fc	obj/kernel.asm	/^c01027fc:	c0 $/;"	l
c01027fd	obj/kernel.asm	/^c01027fd:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
c0102804	obj/kernel.asm	/^c0102804:	00 $/;"	l
c0102805	obj/kernel.asm	/^c0102805:	c7 04 24 20 5c 11 c0 	movl   $0xc0115c20,(%esp)$/;"	l
c010280c	obj/kernel.asm	/^c010280c:	e8 b7 e6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102811	obj/kernel.asm	/^c0102811:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c0102816	obj/kernel.asm	/^c0102816:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102819	obj/kernel.asm	/^c0102819:	eb 46                	jmp    c0102861 <pgfault_handler+0xa6>$/;"	l
c010281b	obj/kernel.asm	/^c010281b:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102820	obj/kernel.asm	/^c0102820:	85 c0                	test   %eax,%eax$/;"	l
c0102822	obj/kernel.asm	/^c0102822:	75 32                	jne    c0102856 <pgfault_handler+0x9b>$/;"	l
c0102824	obj/kernel.asm	/^c0102824:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102827	obj/kernel.asm	/^c0102827:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010282a	obj/kernel.asm	/^c010282a:	e8 93 fc ff ff       	call   c01024c2 <print_trapframe>$/;"	l
c010282f	obj/kernel.asm	/^c010282f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102832	obj/kernel.asm	/^c0102832:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102835	obj/kernel.asm	/^c0102835:	e8 04 ff ff ff       	call   c010273e <print_pgfault>$/;"	l
c010283a	obj/kernel.asm	/^c010283a:	c7 44 24 08 31 5c 11 	movl   $0xc0115c31,0x8(%esp)$/;"	l
c0102841	obj/kernel.asm	/^c0102841:	c0 $/;"	l
c0102842	obj/kernel.asm	/^c0102842:	c7 44 24 04 bd 00 00 	movl   $0xbd,0x4(%esp)$/;"	l
c0102849	obj/kernel.asm	/^c0102849:	00 $/;"	l
c010284a	obj/kernel.asm	/^c010284a:	c7 04 24 20 5c 11 c0 	movl   $0xc0115c20,(%esp)$/;"	l
c0102851	obj/kernel.asm	/^c0102851:	e8 72 e6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102856	obj/kernel.asm	/^c0102856:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010285b	obj/kernel.asm	/^c010285b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010285e	obj/kernel.asm	/^c010285e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102861	obj/kernel.asm	/^c0102861:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c0102864	obj/kernel.asm	/^c0102864:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102867	obj/kernel.asm	/^c0102867:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010286a	obj/kernel.asm	/^c010286a:	89 c2                	mov    %eax,%edx$/;"	l
c010286c	obj/kernel.asm	/^c010286c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010286f	obj/kernel.asm	/^c010286f:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102872	obj/kernel.asm	/^c0102872:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0102876	obj/kernel.asm	/^c0102876:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010287a	obj/kernel.asm	/^c010287a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010287d	obj/kernel.asm	/^c010287d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102880	obj/kernel.asm	/^c0102880:	e8 ff 64 00 00       	call   c0108d84 <do_pgfault>$/;"	l
c0102885	obj/kernel.asm	/^c0102885:	c9                   	leave  $/;"	l
c0102886	obj/kernel.asm	/^c0102886:	c3                   	ret    $/;"	l
c0102887	obj/kernel.asm	/^c0102887 <trap_dispatch>:$/;"	l
c0102887	obj/kernel.asm	/^c0102887:	55                   	push   %ebp$/;"	l
c0102888	obj/kernel.asm	/^c0102888:	89 e5                	mov    %esp,%ebp$/;"	l
c010288a	obj/kernel.asm	/^c010288a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010288d	obj/kernel.asm	/^c010288d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102894	obj/kernel.asm	/^c0102894:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102897	obj/kernel.asm	/^c0102897:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010289a	obj/kernel.asm	/^c010289a:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c010289d	obj/kernel.asm	/^c010289d:	77 38                	ja     c01028d7 <trap_dispatch+0x50>$/;"	l
c010289f	obj/kernel.asm	/^c010289f:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c01028a2	obj/kernel.asm	/^c01028a2:	0f 83 cb 01 00 00    	jae    c0102a73 <trap_dispatch+0x1ec>$/;"	l
c01028a8	obj/kernel.asm	/^c01028a8:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01028ab	obj/kernel.asm	/^c01028ab:	0f 84 07 01 00 00    	je     c01029b8 <trap_dispatch+0x131>$/;"	l
c01028b1	obj/kernel.asm	/^c01028b1:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01028b4	obj/kernel.asm	/^c01028b4:	77 0a                	ja     c01028c0 <trap_dispatch+0x39>$/;"	l
c01028b6	obj/kernel.asm	/^c01028b6:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c01028b9	obj/kernel.asm	/^c01028b9:	74 3e                	je     c01028f9 <trap_dispatch+0x72>$/;"	l
c01028bb	obj/kernel.asm	/^c01028bb:	e9 6b 01 00 00       	jmp    c0102a2b <trap_dispatch+0x1a4>$/;"	l
c01028c0	obj/kernel.asm	/^c01028c0:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c01028c3	obj/kernel.asm	/^c01028c3:	0f 84 30 01 00 00    	je     c01029f9 <trap_dispatch+0x172>$/;"	l
c01028c9	obj/kernel.asm	/^c01028c9:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c01028cc	obj/kernel.asm	/^c01028cc:	0f 84 27 01 00 00    	je     c01029f9 <trap_dispatch+0x172>$/;"	l
c01028d2	obj/kernel.asm	/^c01028d2:	e9 54 01 00 00       	jmp    c0102a2b <trap_dispatch+0x1a4>$/;"	l
c01028d7	obj/kernel.asm	/^c01028d7:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c01028da	obj/kernel.asm	/^c01028da:	0f 82 4b 01 00 00    	jb     c0102a2b <trap_dispatch+0x1a4>$/;"	l
c01028e0	obj/kernel.asm	/^c01028e0:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c01028e3	obj/kernel.asm	/^c01028e3:	0f 86 26 01 00 00    	jbe    c0102a0f <trap_dispatch+0x188>$/;"	l
c01028e9	obj/kernel.asm	/^c01028e9:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c01028ee	obj/kernel.asm	/^c01028ee:	0f 84 ba 00 00 00    	je     c01029ae <trap_dispatch+0x127>$/;"	l
c01028f4	obj/kernel.asm	/^c01028f4:	e9 32 01 00 00       	jmp    c0102a2b <trap_dispatch+0x1a4>$/;"	l
c01028f9	obj/kernel.asm	/^c01028f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01028fc	obj/kernel.asm	/^c01028fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01028ff	obj/kernel.asm	/^c01028ff:	e8 b7 fe ff ff       	call   c01027bb <pgfault_handler>$/;"	l
c0102904	obj/kernel.asm	/^c0102904:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102907	obj/kernel.asm	/^c0102907:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010290b	obj/kernel.asm	/^c010290b:	0f 84 98 00 00 00    	je     c01029a9 <trap_dispatch+0x122>$/;"	l
c0102911	obj/kernel.asm	/^c0102911:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102914	obj/kernel.asm	/^c0102914:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102917	obj/kernel.asm	/^c0102917:	e8 a6 fb ff ff       	call   c01024c2 <print_trapframe>$/;"	l
c010291c	obj/kernel.asm	/^c010291c:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102921	obj/kernel.asm	/^c0102921:	85 c0                	test   %eax,%eax$/;"	l
c0102923	obj/kernel.asm	/^c0102923:	75 23                	jne    c0102948 <trap_dispatch+0xc1>$/;"	l
c0102925	obj/kernel.asm	/^c0102925:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102928	obj/kernel.asm	/^c0102928:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010292c	obj/kernel.asm	/^c010292c:	c7 44 24 08 48 5c 11 	movl   $0xc0115c48,0x8(%esp)$/;"	l
c0102933	obj/kernel.asm	/^c0102933:	c0 $/;"	l
c0102934	obj/kernel.asm	/^c0102934:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
c010293b	obj/kernel.asm	/^c010293b:	00 $/;"	l
c010293c	obj/kernel.asm	/^c010293c:	c7 04 24 20 5c 11 c0 	movl   $0xc0115c20,(%esp)$/;"	l
c0102943	obj/kernel.asm	/^c0102943:	e8 80 e5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102948	obj/kernel.asm	/^c0102948:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010294b	obj/kernel.asm	/^c010294b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010294e	obj/kernel.asm	/^c010294e:	e8 59 fb ff ff       	call   c01024ac <trap_in_kernel>$/;"	l
c0102953	obj/kernel.asm	/^c0102953:	85 c0                	test   %eax,%eax$/;"	l
c0102955	obj/kernel.asm	/^c0102955:	74 23                	je     c010297a <trap_dispatch+0xf3>$/;"	l
c0102957	obj/kernel.asm	/^c0102957:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010295a	obj/kernel.asm	/^c010295a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010295e	obj/kernel.asm	/^c010295e:	c7 44 24 08 68 5c 11 	movl   $0xc0115c68,0x8(%esp)$/;"	l
c0102965	obj/kernel.asm	/^c0102965:	c0 $/;"	l
c0102966	obj/kernel.asm	/^c0102966:	c7 44 24 04 d7 00 00 	movl   $0xd7,0x4(%esp)$/;"	l
c010296d	obj/kernel.asm	/^c010296d:	00 $/;"	l
c010296e	obj/kernel.asm	/^c010296e:	c7 04 24 20 5c 11 c0 	movl   $0xc0115c20,(%esp)$/;"	l
c0102975	obj/kernel.asm	/^c0102975:	e8 4e e5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010297a	obj/kernel.asm	/^c010297a:	c7 04 24 96 5c 11 c0 	movl   $0xc0115c96,(%esp)$/;"	l
c0102981	obj/kernel.asm	/^c0102981:	e8 df d9 ff ff       	call   c0100365 <cprintf>$/;"	l
c0102986	obj/kernel.asm	/^c0102986:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102989	obj/kernel.asm	/^c0102989:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010298d	obj/kernel.asm	/^c010298d:	c7 44 24 08 ac 5c 11 	movl   $0xc0115cac,0x8(%esp)$/;"	l
c0102994	obj/kernel.asm	/^c0102994:	c0 $/;"	l
c0102995	obj/kernel.asm	/^c0102995:	c7 44 24 04 da 00 00 	movl   $0xda,0x4(%esp)$/;"	l
c010299c	obj/kernel.asm	/^c010299c:	00 $/;"	l
c010299d	obj/kernel.asm	/^c010299d:	c7 04 24 20 5c 11 c0 	movl   $0xc0115c20,(%esp)$/;"	l
c01029a4	obj/kernel.asm	/^c01029a4:	e8 1f e5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01029a9	obj/kernel.asm	/^c01029a9:	e9 c6 00 00 00       	jmp    c0102a74 <trap_dispatch+0x1ed>$/;"	l
c01029ae	obj/kernel.asm	/^c01029ae:	e8 a3 c2 00 00       	call   c010ec56 <syscall>$/;"	l
c01029b3	obj/kernel.asm	/^c01029b3:	e9 bc 00 00 00       	jmp    c0102a74 <trap_dispatch+0x1ed>$/;"	l
c01029b8	obj/kernel.asm	/^c01029b8:	a1 10 30 15 c0       	mov    0xc0153010,%eax$/;"	l
c01029bd	obj/kernel.asm	/^c01029bd:	83 c0 01             	add    $0x1,%eax$/;"	l
c01029c0	obj/kernel.asm	/^c01029c0:	a3 10 30 15 c0       	mov    %eax,0xc0153010$/;"	l
c01029c5	obj/kernel.asm	/^c01029c5:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c01029ca	obj/kernel.asm	/^c01029ca:	85 c0                	test   %eax,%eax$/;"	l
c01029cc	obj/kernel.asm	/^c01029cc:	75 24                	jne    c01029f2 <trap_dispatch+0x16b>$/;"	l
c01029ce	obj/kernel.asm	/^c01029ce:	c7 44 24 0c d5 5c 11 	movl   $0xc0115cd5,0xc(%esp)$/;"	l
c01029d5	obj/kernel.asm	/^c01029d5:	c0 $/;"	l
c01029d6	obj/kernel.asm	/^c01029d6:	c7 44 24 08 0b 5c 11 	movl   $0xc0115c0b,0x8(%esp)$/;"	l
c01029dd	obj/kernel.asm	/^c01029dd:	c0 $/;"	l
c01029de	obj/kernel.asm	/^c01029de:	c7 44 24 04 fe 00 00 	movl   $0xfe,0x4(%esp)$/;"	l
c01029e5	obj/kernel.asm	/^c01029e5:	00 $/;"	l
c01029e6	obj/kernel.asm	/^c01029e6:	c7 04 24 20 5c 11 c0 	movl   $0xc0115c20,(%esp)$/;"	l
c01029ed	obj/kernel.asm	/^c01029ed:	e8 d6 e4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01029f2	obj/kernel.asm	/^c01029f2:	e8 ea bd 00 00       	call   c010e7e1 <run_timer_list>$/;"	l
c01029f7	obj/kernel.asm	/^c01029f7:	eb 7b                	jmp    c0102a74 <trap_dispatch+0x1ed>$/;"	l
c01029f9	obj/kernel.asm	/^c01029f9:	e8 42 ee ff ff       	call   c0101840 <cons_getc>$/;"	l
c01029fe	obj/kernel.asm	/^c01029fe:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0102a01	obj/kernel.asm	/^c0102a01:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c0102a05	obj/kernel.asm	/^c0102a05:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a08	obj/kernel.asm	/^c0102a08:	e8 4b e5 00 00       	call   c0110f58 <dev_stdin_write>$/;"	l
c0102a0d	obj/kernel.asm	/^c0102a0d:	eb 65                	jmp    c0102a74 <trap_dispatch+0x1ed>$/;"	l
c0102a0f	obj/kernel.asm	/^c0102a0f:	c7 44 24 08 e5 5c 11 	movl   $0xc0115ce5,0x8(%esp)$/;"	l
c0102a16	obj/kernel.asm	/^c0102a16:	c0 $/;"	l
c0102a17	obj/kernel.asm	/^c0102a17:	c7 44 24 04 10 01 00 	movl   $0x110,0x4(%esp)$/;"	l
c0102a1e	obj/kernel.asm	/^c0102a1e:	00 $/;"	l
c0102a1f	obj/kernel.asm	/^c0102a1f:	c7 04 24 20 5c 11 c0 	movl   $0xc0115c20,(%esp)$/;"	l
c0102a26	obj/kernel.asm	/^c0102a26:	e8 9d e4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102a2b	obj/kernel.asm	/^c0102a2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a2e	obj/kernel.asm	/^c0102a2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a31	obj/kernel.asm	/^c0102a31:	e8 8c fa ff ff       	call   c01024c2 <print_trapframe>$/;"	l
c0102a36	obj/kernel.asm	/^c0102a36:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102a3b	obj/kernel.asm	/^c0102a3b:	85 c0                	test   %eax,%eax$/;"	l
c0102a3d	obj/kernel.asm	/^c0102a3d:	74 18                	je     c0102a57 <trap_dispatch+0x1d0>$/;"	l
c0102a3f	obj/kernel.asm	/^c0102a3f:	c7 04 24 f5 5c 11 c0 	movl   $0xc0115cf5,(%esp)$/;"	l
c0102a46	obj/kernel.asm	/^c0102a46:	e8 1a d9 ff ff       	call   c0100365 <cprintf>$/;"	l
c0102a4b	obj/kernel.asm	/^c0102a4b:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c0102a52	obj/kernel.asm	/^c0102a52:	e8 11 a0 00 00       	call   c010ca68 <do_exit>$/;"	l
c0102a57	obj/kernel.asm	/^c0102a57:	c7 44 24 08 06 5d 11 	movl   $0xc0115d06,0x8(%esp)$/;"	l
c0102a5e	obj/kernel.asm	/^c0102a5e:	c0 $/;"	l
c0102a5f	obj/kernel.asm	/^c0102a5f:	c7 44 24 04 1d 01 00 	movl   $0x11d,0x4(%esp)$/;"	l
c0102a66	obj/kernel.asm	/^c0102a66:	00 $/;"	l
c0102a67	obj/kernel.asm	/^c0102a67:	c7 04 24 20 5c 11 c0 	movl   $0xc0115c20,(%esp)$/;"	l
c0102a6e	obj/kernel.asm	/^c0102a6e:	e8 55 e4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0102a73	obj/kernel.asm	/^c0102a73:	90                   	nop$/;"	l
c0102a74	obj/kernel.asm	/^c0102a74:	c9                   	leave  $/;"	l
c0102a75	obj/kernel.asm	/^c0102a75:	c3                   	ret    $/;"	l
c0102a76	obj/kernel.asm	/^c0102a76 <trap>:$/;"	l
c0102a76	obj/kernel.asm	/^c0102a76:	55                   	push   %ebp$/;"	l
c0102a77	obj/kernel.asm	/^c0102a77:	89 e5                	mov    %esp,%ebp$/;"	l
c0102a79	obj/kernel.asm	/^c0102a79:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0102a7c	obj/kernel.asm	/^c0102a7c:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102a81	obj/kernel.asm	/^c0102a81:	85 c0                	test   %eax,%eax$/;"	l
c0102a83	obj/kernel.asm	/^c0102a83:	75 0d                	jne    c0102a92 <trap+0x1c>$/;"	l
c0102a85	obj/kernel.asm	/^c0102a85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a88	obj/kernel.asm	/^c0102a88:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a8b	obj/kernel.asm	/^c0102a8b:	e8 f7 fd ff ff       	call   c0102887 <trap_dispatch>$/;"	l
c0102a90	obj/kernel.asm	/^c0102a90:	eb 6c                	jmp    c0102afe <trap+0x88>$/;"	l
c0102a92	obj/kernel.asm	/^c0102a92:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102a97	obj/kernel.asm	/^c0102a97:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0102a9a	obj/kernel.asm	/^c0102a9a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102a9d	obj/kernel.asm	/^c0102a9d:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102aa2	obj/kernel.asm	/^c0102aa2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102aa5	obj/kernel.asm	/^c0102aa5:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102aa8	obj/kernel.asm	/^c0102aa8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102aab	obj/kernel.asm	/^c0102aab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102aae	obj/kernel.asm	/^c0102aae:	e8 f9 f9 ff ff       	call   c01024ac <trap_in_kernel>$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102ab6	obj/kernel.asm	/^c0102ab6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102ab9	obj/kernel.asm	/^c0102ab9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102abc	obj/kernel.asm	/^c0102abc:	e8 c6 fd ff ff       	call   c0102887 <trap_dispatch>$/;"	l
c0102ac1	obj/kernel.asm	/^c0102ac1:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102ac6	obj/kernel.asm	/^c0102ac6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102ac9	obj/kernel.asm	/^c0102ac9:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102acc	obj/kernel.asm	/^c0102acc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102ad0	obj/kernel.asm	/^c0102ad0:	75 2c                	jne    c0102afe <trap+0x88>$/;"	l
c0102ad2	obj/kernel.asm	/^c0102ad2:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102ad7	obj/kernel.asm	/^c0102ad7:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102ada	obj/kernel.asm	/^c0102ada:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102add	obj/kernel.asm	/^c0102add:	85 c0                	test   %eax,%eax$/;"	l
c0102adf	obj/kernel.asm	/^c0102adf:	74 0c                	je     c0102aed <trap+0x77>$/;"	l
c0102ae1	obj/kernel.asm	/^c0102ae1:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c0102ae8	obj/kernel.asm	/^c0102ae8:	e8 7b 9f 00 00       	call   c010ca68 <do_exit>$/;"	l
c0102aed	obj/kernel.asm	/^c0102aed:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0102af2	obj/kernel.asm	/^c0102af2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102af5	obj/kernel.asm	/^c0102af5:	85 c0                	test   %eax,%eax$/;"	l
c0102af7	obj/kernel.asm	/^c0102af7:	74 05                	je     c0102afe <trap+0x88>$/;"	l
c0102af9	obj/kernel.asm	/^c0102af9:	e8 56 ba 00 00       	call   c010e554 <schedule>$/;"	l
c0102afe	obj/kernel.asm	/^c0102afe:	c9                   	leave  $/;"	l
c0102aff	obj/kernel.asm	/^c0102aff:	c3                   	ret    $/;"	l
c0102b00	obj/kernel.asm	/^c0102b00 <__alltraps>:$/;"	l
c0102b00	obj/kernel.asm	/^c0102b00:	1e                   	push   %ds$/;"	l
c0102b01	obj/kernel.asm	/^c0102b01:	06                   	push   %es$/;"	l
c0102b02	obj/kernel.asm	/^c0102b02:	0f a0                	push   %fs$/;"	l
c0102b04	obj/kernel.asm	/^c0102b04:	0f a8                	push   %gs$/;"	l
c0102b06	obj/kernel.asm	/^c0102b06:	60                   	pusha  $/;"	l
c0102b07	obj/kernel.asm	/^c0102b07:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0102b0c	obj/kernel.asm	/^c0102b0c:	8e d8                	mov    %eax,%ds$/;"	l
c0102b0e	obj/kernel.asm	/^c0102b0e:	8e c0                	mov    %eax,%es$/;"	l
c0102b10	obj/kernel.asm	/^c0102b10:	54                   	push   %esp$/;"	l
c0102b11	obj/kernel.asm	/^c0102b11:	e8 60 ff ff ff       	call   c0102a76 <trap>$/;"	l
c0102b16	obj/kernel.asm	/^c0102b16:	5c                   	pop    %esp$/;"	l
c0102b17	obj/kernel.asm	/^c0102b17 <__trapret>:$/;"	l
c0102b17	obj/kernel.asm	/^c0102b17:	61                   	popa   $/;"	l
c0102b18	obj/kernel.asm	/^c0102b18:	0f a9                	pop    %gs$/;"	l
c0102b1a	obj/kernel.asm	/^c0102b1a:	0f a1                	pop    %fs$/;"	l
c0102b1c	obj/kernel.asm	/^c0102b1c:	07                   	pop    %es$/;"	l
c0102b1d	obj/kernel.asm	/^c0102b1d:	1f                   	pop    %ds$/;"	l
c0102b1e	obj/kernel.asm	/^c0102b1e:	83 c4 08             	add    $0x8,%esp$/;"	l
c0102b21	obj/kernel.asm	/^c0102b21:	cf                   	iret   $/;"	l
c0102b22	obj/kernel.asm	/^c0102b22 <forkrets>:$/;"	l
c0102b22	obj/kernel.asm	/^c0102b22:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c0102b26	obj/kernel.asm	/^c0102b26:	e9 ec ff ff ff       	jmp    c0102b17 <__trapret>$/;"	l
c0102b2b	obj/kernel.asm	/^c0102b2b <vector0>:$/;"	l
c0102b2b	obj/kernel.asm	/^c0102b2b:	6a 00                	push   $0x0$/;"	l
c0102b2d	obj/kernel.asm	/^c0102b2d:	6a 00                	push   $0x0$/;"	l
c0102b2f	obj/kernel.asm	/^c0102b2f:	e9 cc ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b34	obj/kernel.asm	/^c0102b34 <vector1>:$/;"	l
c0102b34	obj/kernel.asm	/^c0102b34:	6a 00                	push   $0x0$/;"	l
c0102b36	obj/kernel.asm	/^c0102b36:	6a 01                	push   $0x1$/;"	l
c0102b38	obj/kernel.asm	/^c0102b38:	e9 c3 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b3d	obj/kernel.asm	/^c0102b3d <vector2>:$/;"	l
c0102b3d	obj/kernel.asm	/^c0102b3d:	6a 00                	push   $0x0$/;"	l
c0102b3f	obj/kernel.asm	/^c0102b3f:	6a 02                	push   $0x2$/;"	l
c0102b41	obj/kernel.asm	/^c0102b41:	e9 ba ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b46	obj/kernel.asm	/^c0102b46 <vector3>:$/;"	l
c0102b46	obj/kernel.asm	/^c0102b46:	6a 00                	push   $0x0$/;"	l
c0102b48	obj/kernel.asm	/^c0102b48:	6a 03                	push   $0x3$/;"	l
c0102b4a	obj/kernel.asm	/^c0102b4a:	e9 b1 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b4f	obj/kernel.asm	/^c0102b4f <vector4>:$/;"	l
c0102b4f	obj/kernel.asm	/^c0102b4f:	6a 00                	push   $0x0$/;"	l
c0102b51	obj/kernel.asm	/^c0102b51:	6a 04                	push   $0x4$/;"	l
c0102b53	obj/kernel.asm	/^c0102b53:	e9 a8 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b58	obj/kernel.asm	/^c0102b58 <vector5>:$/;"	l
c0102b58	obj/kernel.asm	/^c0102b58:	6a 00                	push   $0x0$/;"	l
c0102b5a	obj/kernel.asm	/^c0102b5a:	6a 05                	push   $0x5$/;"	l
c0102b5c	obj/kernel.asm	/^c0102b5c:	e9 9f ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b61	obj/kernel.asm	/^c0102b61 <vector6>:$/;"	l
c0102b61	obj/kernel.asm	/^c0102b61:	6a 00                	push   $0x0$/;"	l
c0102b63	obj/kernel.asm	/^c0102b63:	6a 06                	push   $0x6$/;"	l
c0102b65	obj/kernel.asm	/^c0102b65:	e9 96 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b6a	obj/kernel.asm	/^c0102b6a <vector7>:$/;"	l
c0102b6a	obj/kernel.asm	/^c0102b6a:	6a 00                	push   $0x0$/;"	l
c0102b6c	obj/kernel.asm	/^c0102b6c:	6a 07                	push   $0x7$/;"	l
c0102b6e	obj/kernel.asm	/^c0102b6e:	e9 8d ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b73	obj/kernel.asm	/^c0102b73 <vector8>:$/;"	l
c0102b73	obj/kernel.asm	/^c0102b73:	6a 08                	push   $0x8$/;"	l
c0102b75	obj/kernel.asm	/^c0102b75:	e9 86 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b7a	obj/kernel.asm	/^c0102b7a <vector9>:$/;"	l
c0102b7a	obj/kernel.asm	/^c0102b7a:	6a 09                	push   $0x9$/;"	l
c0102b7c	obj/kernel.asm	/^c0102b7c:	e9 7f ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b81	obj/kernel.asm	/^c0102b81 <vector10>:$/;"	l
c0102b81	obj/kernel.asm	/^c0102b81:	6a 0a                	push   $0xa$/;"	l
c0102b83	obj/kernel.asm	/^c0102b83:	e9 78 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88 <vector11>:$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88:	6a 0b                	push   $0xb$/;"	l
c0102b8a	obj/kernel.asm	/^c0102b8a:	e9 71 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b8f	obj/kernel.asm	/^c0102b8f <vector12>:$/;"	l
c0102b8f	obj/kernel.asm	/^c0102b8f:	6a 0c                	push   $0xc$/;"	l
c0102b91	obj/kernel.asm	/^c0102b91:	e9 6a ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b96	obj/kernel.asm	/^c0102b96 <vector13>:$/;"	l
c0102b96	obj/kernel.asm	/^c0102b96:	6a 0d                	push   $0xd$/;"	l
c0102b98	obj/kernel.asm	/^c0102b98:	e9 63 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102b9d	obj/kernel.asm	/^c0102b9d <vector14>:$/;"	l
c0102b9d	obj/kernel.asm	/^c0102b9d:	6a 0e                	push   $0xe$/;"	l
c0102b9f	obj/kernel.asm	/^c0102b9f:	e9 5c ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ba4	obj/kernel.asm	/^c0102ba4 <vector15>:$/;"	l
c0102ba4	obj/kernel.asm	/^c0102ba4:	6a 00                	push   $0x0$/;"	l
c0102ba6	obj/kernel.asm	/^c0102ba6:	6a 0f                	push   $0xf$/;"	l
c0102ba8	obj/kernel.asm	/^c0102ba8:	e9 53 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bad	obj/kernel.asm	/^c0102bad <vector16>:$/;"	l
c0102bad	obj/kernel.asm	/^c0102bad:	6a 00                	push   $0x0$/;"	l
c0102baf	obj/kernel.asm	/^c0102baf:	6a 10                	push   $0x10$/;"	l
c0102bb1	obj/kernel.asm	/^c0102bb1:	e9 4a ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bb6	obj/kernel.asm	/^c0102bb6 <vector17>:$/;"	l
c0102bb6	obj/kernel.asm	/^c0102bb6:	6a 11                	push   $0x11$/;"	l
c0102bb8	obj/kernel.asm	/^c0102bb8:	e9 43 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bbd	obj/kernel.asm	/^c0102bbd <vector18>:$/;"	l
c0102bbd	obj/kernel.asm	/^c0102bbd:	6a 00                	push   $0x0$/;"	l
c0102bbf	obj/kernel.asm	/^c0102bbf:	6a 12                	push   $0x12$/;"	l
c0102bc1	obj/kernel.asm	/^c0102bc1:	e9 3a ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bc6	obj/kernel.asm	/^c0102bc6 <vector19>:$/;"	l
c0102bc6	obj/kernel.asm	/^c0102bc6:	6a 00                	push   $0x0$/;"	l
c0102bc8	obj/kernel.asm	/^c0102bc8:	6a 13                	push   $0x13$/;"	l
c0102bca	obj/kernel.asm	/^c0102bca:	e9 31 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bcf	obj/kernel.asm	/^c0102bcf <vector20>:$/;"	l
c0102bcf	obj/kernel.asm	/^c0102bcf:	6a 00                	push   $0x0$/;"	l
c0102bd1	obj/kernel.asm	/^c0102bd1:	6a 14                	push   $0x14$/;"	l
c0102bd3	obj/kernel.asm	/^c0102bd3:	e9 28 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bd8	obj/kernel.asm	/^c0102bd8 <vector21>:$/;"	l
c0102bd8	obj/kernel.asm	/^c0102bd8:	6a 00                	push   $0x0$/;"	l
c0102bda	obj/kernel.asm	/^c0102bda:	6a 15                	push   $0x15$/;"	l
c0102bdc	obj/kernel.asm	/^c0102bdc:	e9 1f ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102be1	obj/kernel.asm	/^c0102be1 <vector22>:$/;"	l
c0102be1	obj/kernel.asm	/^c0102be1:	6a 00                	push   $0x0$/;"	l
c0102be3	obj/kernel.asm	/^c0102be3:	6a 16                	push   $0x16$/;"	l
c0102be5	obj/kernel.asm	/^c0102be5:	e9 16 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bea	obj/kernel.asm	/^c0102bea <vector23>:$/;"	l
c0102bea	obj/kernel.asm	/^c0102bea:	6a 00                	push   $0x0$/;"	l
c0102bec	obj/kernel.asm	/^c0102bec:	6a 17                	push   $0x17$/;"	l
c0102bee	obj/kernel.asm	/^c0102bee:	e9 0d ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bf3	obj/kernel.asm	/^c0102bf3 <vector24>:$/;"	l
c0102bf3	obj/kernel.asm	/^c0102bf3:	6a 00                	push   $0x0$/;"	l
c0102bf5	obj/kernel.asm	/^c0102bf5:	6a 18                	push   $0x18$/;"	l
c0102bf7	obj/kernel.asm	/^c0102bf7:	e9 04 ff ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102bfc	obj/kernel.asm	/^c0102bfc <vector25>:$/;"	l
c0102bfc	obj/kernel.asm	/^c0102bfc:	6a 00                	push   $0x0$/;"	l
c0102bfe	obj/kernel.asm	/^c0102bfe:	6a 19                	push   $0x19$/;"	l
c0102c00	obj/kernel.asm	/^c0102c00:	e9 fb fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c05	obj/kernel.asm	/^c0102c05 <vector26>:$/;"	l
c0102c05	obj/kernel.asm	/^c0102c05:	6a 00                	push   $0x0$/;"	l
c0102c07	obj/kernel.asm	/^c0102c07:	6a 1a                	push   $0x1a$/;"	l
c0102c09	obj/kernel.asm	/^c0102c09:	e9 f2 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c0e	obj/kernel.asm	/^c0102c0e <vector27>:$/;"	l
c0102c0e	obj/kernel.asm	/^c0102c0e:	6a 00                	push   $0x0$/;"	l
c0102c10	obj/kernel.asm	/^c0102c10:	6a 1b                	push   $0x1b$/;"	l
c0102c12	obj/kernel.asm	/^c0102c12:	e9 e9 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c17	obj/kernel.asm	/^c0102c17 <vector28>:$/;"	l
c0102c17	obj/kernel.asm	/^c0102c17:	6a 00                	push   $0x0$/;"	l
c0102c19	obj/kernel.asm	/^c0102c19:	6a 1c                	push   $0x1c$/;"	l
c0102c1b	obj/kernel.asm	/^c0102c1b:	e9 e0 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c20	obj/kernel.asm	/^c0102c20 <vector29>:$/;"	l
c0102c20	obj/kernel.asm	/^c0102c20:	6a 00                	push   $0x0$/;"	l
c0102c22	obj/kernel.asm	/^c0102c22:	6a 1d                	push   $0x1d$/;"	l
c0102c24	obj/kernel.asm	/^c0102c24:	e9 d7 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c29	obj/kernel.asm	/^c0102c29 <vector30>:$/;"	l
c0102c29	obj/kernel.asm	/^c0102c29:	6a 00                	push   $0x0$/;"	l
c0102c2b	obj/kernel.asm	/^c0102c2b:	6a 1e                	push   $0x1e$/;"	l
c0102c2d	obj/kernel.asm	/^c0102c2d:	e9 ce fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c32	obj/kernel.asm	/^c0102c32 <vector31>:$/;"	l
c0102c32	obj/kernel.asm	/^c0102c32:	6a 00                	push   $0x0$/;"	l
c0102c34	obj/kernel.asm	/^c0102c34:	6a 1f                	push   $0x1f$/;"	l
c0102c36	obj/kernel.asm	/^c0102c36:	e9 c5 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c3b	obj/kernel.asm	/^c0102c3b <vector32>:$/;"	l
c0102c3b	obj/kernel.asm	/^c0102c3b:	6a 00                	push   $0x0$/;"	l
c0102c3d	obj/kernel.asm	/^c0102c3d:	6a 20                	push   $0x20$/;"	l
c0102c3f	obj/kernel.asm	/^c0102c3f:	e9 bc fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c44	obj/kernel.asm	/^c0102c44 <vector33>:$/;"	l
c0102c44	obj/kernel.asm	/^c0102c44:	6a 00                	push   $0x0$/;"	l
c0102c46	obj/kernel.asm	/^c0102c46:	6a 21                	push   $0x21$/;"	l
c0102c48	obj/kernel.asm	/^c0102c48:	e9 b3 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c4d	obj/kernel.asm	/^c0102c4d <vector34>:$/;"	l
c0102c4d	obj/kernel.asm	/^c0102c4d:	6a 00                	push   $0x0$/;"	l
c0102c4f	obj/kernel.asm	/^c0102c4f:	6a 22                	push   $0x22$/;"	l
c0102c51	obj/kernel.asm	/^c0102c51:	e9 aa fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c56	obj/kernel.asm	/^c0102c56 <vector35>:$/;"	l
c0102c56	obj/kernel.asm	/^c0102c56:	6a 00                	push   $0x0$/;"	l
c0102c58	obj/kernel.asm	/^c0102c58:	6a 23                	push   $0x23$/;"	l
c0102c5a	obj/kernel.asm	/^c0102c5a:	e9 a1 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c5f	obj/kernel.asm	/^c0102c5f <vector36>:$/;"	l
c0102c5f	obj/kernel.asm	/^c0102c5f:	6a 00                	push   $0x0$/;"	l
c0102c61	obj/kernel.asm	/^c0102c61:	6a 24                	push   $0x24$/;"	l
c0102c63	obj/kernel.asm	/^c0102c63:	e9 98 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c68	obj/kernel.asm	/^c0102c68 <vector37>:$/;"	l
c0102c68	obj/kernel.asm	/^c0102c68:	6a 00                	push   $0x0$/;"	l
c0102c6a	obj/kernel.asm	/^c0102c6a:	6a 25                	push   $0x25$/;"	l
c0102c6c	obj/kernel.asm	/^c0102c6c:	e9 8f fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c71	obj/kernel.asm	/^c0102c71 <vector38>:$/;"	l
c0102c71	obj/kernel.asm	/^c0102c71:	6a 00                	push   $0x0$/;"	l
c0102c73	obj/kernel.asm	/^c0102c73:	6a 26                	push   $0x26$/;"	l
c0102c75	obj/kernel.asm	/^c0102c75:	e9 86 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c7a	obj/kernel.asm	/^c0102c7a <vector39>:$/;"	l
c0102c7a	obj/kernel.asm	/^c0102c7a:	6a 00                	push   $0x0$/;"	l
c0102c7c	obj/kernel.asm	/^c0102c7c:	6a 27                	push   $0x27$/;"	l
c0102c7e	obj/kernel.asm	/^c0102c7e:	e9 7d fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c83	obj/kernel.asm	/^c0102c83 <vector40>:$/;"	l
c0102c83	obj/kernel.asm	/^c0102c83:	6a 00                	push   $0x0$/;"	l
c0102c85	obj/kernel.asm	/^c0102c85:	6a 28                	push   $0x28$/;"	l
c0102c87	obj/kernel.asm	/^c0102c87:	e9 74 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c8c	obj/kernel.asm	/^c0102c8c <vector41>:$/;"	l
c0102c8c	obj/kernel.asm	/^c0102c8c:	6a 00                	push   $0x0$/;"	l
c0102c8e	obj/kernel.asm	/^c0102c8e:	6a 29                	push   $0x29$/;"	l
c0102c90	obj/kernel.asm	/^c0102c90:	e9 6b fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c95	obj/kernel.asm	/^c0102c95 <vector42>:$/;"	l
c0102c95	obj/kernel.asm	/^c0102c95:	6a 00                	push   $0x0$/;"	l
c0102c97	obj/kernel.asm	/^c0102c97:	6a 2a                	push   $0x2a$/;"	l
c0102c99	obj/kernel.asm	/^c0102c99:	e9 62 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102c9e	obj/kernel.asm	/^c0102c9e <vector43>:$/;"	l
c0102c9e	obj/kernel.asm	/^c0102c9e:	6a 00                	push   $0x0$/;"	l
c0102ca0	obj/kernel.asm	/^c0102ca0:	6a 2b                	push   $0x2b$/;"	l
c0102ca2	obj/kernel.asm	/^c0102ca2:	e9 59 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ca7	obj/kernel.asm	/^c0102ca7 <vector44>:$/;"	l
c0102ca7	obj/kernel.asm	/^c0102ca7:	6a 00                	push   $0x0$/;"	l
c0102ca9	obj/kernel.asm	/^c0102ca9:	6a 2c                	push   $0x2c$/;"	l
c0102cab	obj/kernel.asm	/^c0102cab:	e9 50 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cb0	obj/kernel.asm	/^c0102cb0 <vector45>:$/;"	l
c0102cb0	obj/kernel.asm	/^c0102cb0:	6a 00                	push   $0x0$/;"	l
c0102cb2	obj/kernel.asm	/^c0102cb2:	6a 2d                	push   $0x2d$/;"	l
c0102cb4	obj/kernel.asm	/^c0102cb4:	e9 47 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cb9	obj/kernel.asm	/^c0102cb9 <vector46>:$/;"	l
c0102cb9	obj/kernel.asm	/^c0102cb9:	6a 00                	push   $0x0$/;"	l
c0102cbb	obj/kernel.asm	/^c0102cbb:	6a 2e                	push   $0x2e$/;"	l
c0102cbd	obj/kernel.asm	/^c0102cbd:	e9 3e fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cc2	obj/kernel.asm	/^c0102cc2 <vector47>:$/;"	l
c0102cc2	obj/kernel.asm	/^c0102cc2:	6a 00                	push   $0x0$/;"	l
c0102cc4	obj/kernel.asm	/^c0102cc4:	6a 2f                	push   $0x2f$/;"	l
c0102cc6	obj/kernel.asm	/^c0102cc6:	e9 35 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ccb	obj/kernel.asm	/^c0102ccb <vector48>:$/;"	l
c0102ccb	obj/kernel.asm	/^c0102ccb:	6a 00                	push   $0x0$/;"	l
c0102ccd	obj/kernel.asm	/^c0102ccd:	6a 30                	push   $0x30$/;"	l
c0102ccf	obj/kernel.asm	/^c0102ccf:	e9 2c fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cd4	obj/kernel.asm	/^c0102cd4 <vector49>:$/;"	l
c0102cd4	obj/kernel.asm	/^c0102cd4:	6a 00                	push   $0x0$/;"	l
c0102cd6	obj/kernel.asm	/^c0102cd6:	6a 31                	push   $0x31$/;"	l
c0102cd8	obj/kernel.asm	/^c0102cd8:	e9 23 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cdd	obj/kernel.asm	/^c0102cdd <vector50>:$/;"	l
c0102cdd	obj/kernel.asm	/^c0102cdd:	6a 00                	push   $0x0$/;"	l
c0102cdf	obj/kernel.asm	/^c0102cdf:	6a 32                	push   $0x32$/;"	l
c0102ce1	obj/kernel.asm	/^c0102ce1:	e9 1a fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ce6	obj/kernel.asm	/^c0102ce6 <vector51>:$/;"	l
c0102ce6	obj/kernel.asm	/^c0102ce6:	6a 00                	push   $0x0$/;"	l
c0102ce8	obj/kernel.asm	/^c0102ce8:	6a 33                	push   $0x33$/;"	l
c0102cea	obj/kernel.asm	/^c0102cea:	e9 11 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cef	obj/kernel.asm	/^c0102cef <vector52>:$/;"	l
c0102cef	obj/kernel.asm	/^c0102cef:	6a 00                	push   $0x0$/;"	l
c0102cf1	obj/kernel.asm	/^c0102cf1:	6a 34                	push   $0x34$/;"	l
c0102cf3	obj/kernel.asm	/^c0102cf3:	e9 08 fe ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102cf8	obj/kernel.asm	/^c0102cf8 <vector53>:$/;"	l
c0102cf8	obj/kernel.asm	/^c0102cf8:	6a 00                	push   $0x0$/;"	l
c0102cfa	obj/kernel.asm	/^c0102cfa:	6a 35                	push   $0x35$/;"	l
c0102cfc	obj/kernel.asm	/^c0102cfc:	e9 ff fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d01	obj/kernel.asm	/^c0102d01 <vector54>:$/;"	l
c0102d01	obj/kernel.asm	/^c0102d01:	6a 00                	push   $0x0$/;"	l
c0102d03	obj/kernel.asm	/^c0102d03:	6a 36                	push   $0x36$/;"	l
c0102d05	obj/kernel.asm	/^c0102d05:	e9 f6 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d0a	obj/kernel.asm	/^c0102d0a <vector55>:$/;"	l
c0102d0a	obj/kernel.asm	/^c0102d0a:	6a 00                	push   $0x0$/;"	l
c0102d0c	obj/kernel.asm	/^c0102d0c:	6a 37                	push   $0x37$/;"	l
c0102d0e	obj/kernel.asm	/^c0102d0e:	e9 ed fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d13	obj/kernel.asm	/^c0102d13 <vector56>:$/;"	l
c0102d13	obj/kernel.asm	/^c0102d13:	6a 00                	push   $0x0$/;"	l
c0102d15	obj/kernel.asm	/^c0102d15:	6a 38                	push   $0x38$/;"	l
c0102d17	obj/kernel.asm	/^c0102d17:	e9 e4 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d1c	obj/kernel.asm	/^c0102d1c <vector57>:$/;"	l
c0102d1c	obj/kernel.asm	/^c0102d1c:	6a 00                	push   $0x0$/;"	l
c0102d1e	obj/kernel.asm	/^c0102d1e:	6a 39                	push   $0x39$/;"	l
c0102d20	obj/kernel.asm	/^c0102d20:	e9 db fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d25	obj/kernel.asm	/^c0102d25 <vector58>:$/;"	l
c0102d25	obj/kernel.asm	/^c0102d25:	6a 00                	push   $0x0$/;"	l
c0102d27	obj/kernel.asm	/^c0102d27:	6a 3a                	push   $0x3a$/;"	l
c0102d29	obj/kernel.asm	/^c0102d29:	e9 d2 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d2e	obj/kernel.asm	/^c0102d2e <vector59>:$/;"	l
c0102d2e	obj/kernel.asm	/^c0102d2e:	6a 00                	push   $0x0$/;"	l
c0102d30	obj/kernel.asm	/^c0102d30:	6a 3b                	push   $0x3b$/;"	l
c0102d32	obj/kernel.asm	/^c0102d32:	e9 c9 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d37	obj/kernel.asm	/^c0102d37 <vector60>:$/;"	l
c0102d37	obj/kernel.asm	/^c0102d37:	6a 00                	push   $0x0$/;"	l
c0102d39	obj/kernel.asm	/^c0102d39:	6a 3c                	push   $0x3c$/;"	l
c0102d3b	obj/kernel.asm	/^c0102d3b:	e9 c0 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d40	obj/kernel.asm	/^c0102d40 <vector61>:$/;"	l
c0102d40	obj/kernel.asm	/^c0102d40:	6a 00                	push   $0x0$/;"	l
c0102d42	obj/kernel.asm	/^c0102d42:	6a 3d                	push   $0x3d$/;"	l
c0102d44	obj/kernel.asm	/^c0102d44:	e9 b7 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d49	obj/kernel.asm	/^c0102d49 <vector62>:$/;"	l
c0102d49	obj/kernel.asm	/^c0102d49:	6a 00                	push   $0x0$/;"	l
c0102d4b	obj/kernel.asm	/^c0102d4b:	6a 3e                	push   $0x3e$/;"	l
c0102d4d	obj/kernel.asm	/^c0102d4d:	e9 ae fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d52	obj/kernel.asm	/^c0102d52 <vector63>:$/;"	l
c0102d52	obj/kernel.asm	/^c0102d52:	6a 00                	push   $0x0$/;"	l
c0102d54	obj/kernel.asm	/^c0102d54:	6a 3f                	push   $0x3f$/;"	l
c0102d56	obj/kernel.asm	/^c0102d56:	e9 a5 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d5b	obj/kernel.asm	/^c0102d5b <vector64>:$/;"	l
c0102d5b	obj/kernel.asm	/^c0102d5b:	6a 00                	push   $0x0$/;"	l
c0102d5d	obj/kernel.asm	/^c0102d5d:	6a 40                	push   $0x40$/;"	l
c0102d5f	obj/kernel.asm	/^c0102d5f:	e9 9c fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d64	obj/kernel.asm	/^c0102d64 <vector65>:$/;"	l
c0102d64	obj/kernel.asm	/^c0102d64:	6a 00                	push   $0x0$/;"	l
c0102d66	obj/kernel.asm	/^c0102d66:	6a 41                	push   $0x41$/;"	l
c0102d68	obj/kernel.asm	/^c0102d68:	e9 93 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d6d	obj/kernel.asm	/^c0102d6d <vector66>:$/;"	l
c0102d6d	obj/kernel.asm	/^c0102d6d:	6a 00                	push   $0x0$/;"	l
c0102d6f	obj/kernel.asm	/^c0102d6f:	6a 42                	push   $0x42$/;"	l
c0102d71	obj/kernel.asm	/^c0102d71:	e9 8a fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d76	obj/kernel.asm	/^c0102d76 <vector67>:$/;"	l
c0102d76	obj/kernel.asm	/^c0102d76:	6a 00                	push   $0x0$/;"	l
c0102d78	obj/kernel.asm	/^c0102d78:	6a 43                	push   $0x43$/;"	l
c0102d7a	obj/kernel.asm	/^c0102d7a:	e9 81 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d7f	obj/kernel.asm	/^c0102d7f <vector68>:$/;"	l
c0102d7f	obj/kernel.asm	/^c0102d7f:	6a 00                	push   $0x0$/;"	l
c0102d81	obj/kernel.asm	/^c0102d81:	6a 44                	push   $0x44$/;"	l
c0102d83	obj/kernel.asm	/^c0102d83:	e9 78 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d88	obj/kernel.asm	/^c0102d88 <vector69>:$/;"	l
c0102d88	obj/kernel.asm	/^c0102d88:	6a 00                	push   $0x0$/;"	l
c0102d8a	obj/kernel.asm	/^c0102d8a:	6a 45                	push   $0x45$/;"	l
c0102d8c	obj/kernel.asm	/^c0102d8c:	e9 6f fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d91	obj/kernel.asm	/^c0102d91 <vector70>:$/;"	l
c0102d91	obj/kernel.asm	/^c0102d91:	6a 00                	push   $0x0$/;"	l
c0102d93	obj/kernel.asm	/^c0102d93:	6a 46                	push   $0x46$/;"	l
c0102d95	obj/kernel.asm	/^c0102d95:	e9 66 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102d9a	obj/kernel.asm	/^c0102d9a <vector71>:$/;"	l
c0102d9a	obj/kernel.asm	/^c0102d9a:	6a 00                	push   $0x0$/;"	l
c0102d9c	obj/kernel.asm	/^c0102d9c:	6a 47                	push   $0x47$/;"	l
c0102d9e	obj/kernel.asm	/^c0102d9e:	e9 5d fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102da3	obj/kernel.asm	/^c0102da3 <vector72>:$/;"	l
c0102da3	obj/kernel.asm	/^c0102da3:	6a 00                	push   $0x0$/;"	l
c0102da5	obj/kernel.asm	/^c0102da5:	6a 48                	push   $0x48$/;"	l
c0102da7	obj/kernel.asm	/^c0102da7:	e9 54 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dac	obj/kernel.asm	/^c0102dac <vector73>:$/;"	l
c0102dac	obj/kernel.asm	/^c0102dac:	6a 00                	push   $0x0$/;"	l
c0102dae	obj/kernel.asm	/^c0102dae:	6a 49                	push   $0x49$/;"	l
c0102db0	obj/kernel.asm	/^c0102db0:	e9 4b fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102db5	obj/kernel.asm	/^c0102db5 <vector74>:$/;"	l
c0102db5	obj/kernel.asm	/^c0102db5:	6a 00                	push   $0x0$/;"	l
c0102db7	obj/kernel.asm	/^c0102db7:	6a 4a                	push   $0x4a$/;"	l
c0102db9	obj/kernel.asm	/^c0102db9:	e9 42 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dbe	obj/kernel.asm	/^c0102dbe <vector75>:$/;"	l
c0102dbe	obj/kernel.asm	/^c0102dbe:	6a 00                	push   $0x0$/;"	l
c0102dc0	obj/kernel.asm	/^c0102dc0:	6a 4b                	push   $0x4b$/;"	l
c0102dc2	obj/kernel.asm	/^c0102dc2:	e9 39 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dc7	obj/kernel.asm	/^c0102dc7 <vector76>:$/;"	l
c0102dc7	obj/kernel.asm	/^c0102dc7:	6a 00                	push   $0x0$/;"	l
c0102dc9	obj/kernel.asm	/^c0102dc9:	6a 4c                	push   $0x4c$/;"	l
c0102dcb	obj/kernel.asm	/^c0102dcb:	e9 30 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dd0	obj/kernel.asm	/^c0102dd0 <vector77>:$/;"	l
c0102dd0	obj/kernel.asm	/^c0102dd0:	6a 00                	push   $0x0$/;"	l
c0102dd2	obj/kernel.asm	/^c0102dd2:	6a 4d                	push   $0x4d$/;"	l
c0102dd4	obj/kernel.asm	/^c0102dd4:	e9 27 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dd9	obj/kernel.asm	/^c0102dd9 <vector78>:$/;"	l
c0102dd9	obj/kernel.asm	/^c0102dd9:	6a 00                	push   $0x0$/;"	l
c0102ddb	obj/kernel.asm	/^c0102ddb:	6a 4e                	push   $0x4e$/;"	l
c0102ddd	obj/kernel.asm	/^c0102ddd:	e9 1e fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102de2	obj/kernel.asm	/^c0102de2 <vector79>:$/;"	l
c0102de2	obj/kernel.asm	/^c0102de2:	6a 00                	push   $0x0$/;"	l
c0102de4	obj/kernel.asm	/^c0102de4:	6a 4f                	push   $0x4f$/;"	l
c0102de6	obj/kernel.asm	/^c0102de6:	e9 15 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102deb	obj/kernel.asm	/^c0102deb <vector80>:$/;"	l
c0102deb	obj/kernel.asm	/^c0102deb:	6a 00                	push   $0x0$/;"	l
c0102ded	obj/kernel.asm	/^c0102ded:	6a 50                	push   $0x50$/;"	l
c0102def	obj/kernel.asm	/^c0102def:	e9 0c fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102df4	obj/kernel.asm	/^c0102df4 <vector81>:$/;"	l
c0102df4	obj/kernel.asm	/^c0102df4:	6a 00                	push   $0x0$/;"	l
c0102df6	obj/kernel.asm	/^c0102df6:	6a 51                	push   $0x51$/;"	l
c0102df8	obj/kernel.asm	/^c0102df8:	e9 03 fd ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102dfd	obj/kernel.asm	/^c0102dfd <vector82>:$/;"	l
c0102dfd	obj/kernel.asm	/^c0102dfd:	6a 00                	push   $0x0$/;"	l
c0102dff	obj/kernel.asm	/^c0102dff:	6a 52                	push   $0x52$/;"	l
c0102e01	obj/kernel.asm	/^c0102e01:	e9 fa fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e06	obj/kernel.asm	/^c0102e06 <vector83>:$/;"	l
c0102e06	obj/kernel.asm	/^c0102e06:	6a 00                	push   $0x0$/;"	l
c0102e08	obj/kernel.asm	/^c0102e08:	6a 53                	push   $0x53$/;"	l
c0102e0a	obj/kernel.asm	/^c0102e0a:	e9 f1 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e0f	obj/kernel.asm	/^c0102e0f <vector84>:$/;"	l
c0102e0f	obj/kernel.asm	/^c0102e0f:	6a 00                	push   $0x0$/;"	l
c0102e11	obj/kernel.asm	/^c0102e11:	6a 54                	push   $0x54$/;"	l
c0102e13	obj/kernel.asm	/^c0102e13:	e9 e8 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e18	obj/kernel.asm	/^c0102e18 <vector85>:$/;"	l
c0102e18	obj/kernel.asm	/^c0102e18:	6a 00                	push   $0x0$/;"	l
c0102e1a	obj/kernel.asm	/^c0102e1a:	6a 55                	push   $0x55$/;"	l
c0102e1c	obj/kernel.asm	/^c0102e1c:	e9 df fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e21	obj/kernel.asm	/^c0102e21 <vector86>:$/;"	l
c0102e21	obj/kernel.asm	/^c0102e21:	6a 00                	push   $0x0$/;"	l
c0102e23	obj/kernel.asm	/^c0102e23:	6a 56                	push   $0x56$/;"	l
c0102e25	obj/kernel.asm	/^c0102e25:	e9 d6 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e2a	obj/kernel.asm	/^c0102e2a <vector87>:$/;"	l
c0102e2a	obj/kernel.asm	/^c0102e2a:	6a 00                	push   $0x0$/;"	l
c0102e2c	obj/kernel.asm	/^c0102e2c:	6a 57                	push   $0x57$/;"	l
c0102e2e	obj/kernel.asm	/^c0102e2e:	e9 cd fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e33	obj/kernel.asm	/^c0102e33 <vector88>:$/;"	l
c0102e33	obj/kernel.asm	/^c0102e33:	6a 00                	push   $0x0$/;"	l
c0102e35	obj/kernel.asm	/^c0102e35:	6a 58                	push   $0x58$/;"	l
c0102e37	obj/kernel.asm	/^c0102e37:	e9 c4 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e3c	obj/kernel.asm	/^c0102e3c <vector89>:$/;"	l
c0102e3c	obj/kernel.asm	/^c0102e3c:	6a 00                	push   $0x0$/;"	l
c0102e3e	obj/kernel.asm	/^c0102e3e:	6a 59                	push   $0x59$/;"	l
c0102e40	obj/kernel.asm	/^c0102e40:	e9 bb fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e45	obj/kernel.asm	/^c0102e45 <vector90>:$/;"	l
c0102e45	obj/kernel.asm	/^c0102e45:	6a 00                	push   $0x0$/;"	l
c0102e47	obj/kernel.asm	/^c0102e47:	6a 5a                	push   $0x5a$/;"	l
c0102e49	obj/kernel.asm	/^c0102e49:	e9 b2 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e4e	obj/kernel.asm	/^c0102e4e <vector91>:$/;"	l
c0102e4e	obj/kernel.asm	/^c0102e4e:	6a 00                	push   $0x0$/;"	l
c0102e50	obj/kernel.asm	/^c0102e50:	6a 5b                	push   $0x5b$/;"	l
c0102e52	obj/kernel.asm	/^c0102e52:	e9 a9 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e57	obj/kernel.asm	/^c0102e57 <vector92>:$/;"	l
c0102e57	obj/kernel.asm	/^c0102e57:	6a 00                	push   $0x0$/;"	l
c0102e59	obj/kernel.asm	/^c0102e59:	6a 5c                	push   $0x5c$/;"	l
c0102e5b	obj/kernel.asm	/^c0102e5b:	e9 a0 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e60	obj/kernel.asm	/^c0102e60 <vector93>:$/;"	l
c0102e60	obj/kernel.asm	/^c0102e60:	6a 00                	push   $0x0$/;"	l
c0102e62	obj/kernel.asm	/^c0102e62:	6a 5d                	push   $0x5d$/;"	l
c0102e64	obj/kernel.asm	/^c0102e64:	e9 97 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e69	obj/kernel.asm	/^c0102e69 <vector94>:$/;"	l
c0102e69	obj/kernel.asm	/^c0102e69:	6a 00                	push   $0x0$/;"	l
c0102e6b	obj/kernel.asm	/^c0102e6b:	6a 5e                	push   $0x5e$/;"	l
c0102e6d	obj/kernel.asm	/^c0102e6d:	e9 8e fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e72	obj/kernel.asm	/^c0102e72 <vector95>:$/;"	l
c0102e72	obj/kernel.asm	/^c0102e72:	6a 00                	push   $0x0$/;"	l
c0102e74	obj/kernel.asm	/^c0102e74:	6a 5f                	push   $0x5f$/;"	l
c0102e76	obj/kernel.asm	/^c0102e76:	e9 85 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e7b	obj/kernel.asm	/^c0102e7b <vector96>:$/;"	l
c0102e7b	obj/kernel.asm	/^c0102e7b:	6a 00                	push   $0x0$/;"	l
c0102e7d	obj/kernel.asm	/^c0102e7d:	6a 60                	push   $0x60$/;"	l
c0102e7f	obj/kernel.asm	/^c0102e7f:	e9 7c fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e84	obj/kernel.asm	/^c0102e84 <vector97>:$/;"	l
c0102e84	obj/kernel.asm	/^c0102e84:	6a 00                	push   $0x0$/;"	l
c0102e86	obj/kernel.asm	/^c0102e86:	6a 61                	push   $0x61$/;"	l
c0102e88	obj/kernel.asm	/^c0102e88:	e9 73 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e8d	obj/kernel.asm	/^c0102e8d <vector98>:$/;"	l
c0102e8d	obj/kernel.asm	/^c0102e8d:	6a 00                	push   $0x0$/;"	l
c0102e8f	obj/kernel.asm	/^c0102e8f:	6a 62                	push   $0x62$/;"	l
c0102e91	obj/kernel.asm	/^c0102e91:	e9 6a fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e96	obj/kernel.asm	/^c0102e96 <vector99>:$/;"	l
c0102e96	obj/kernel.asm	/^c0102e96:	6a 00                	push   $0x0$/;"	l
c0102e98	obj/kernel.asm	/^c0102e98:	6a 63                	push   $0x63$/;"	l
c0102e9a	obj/kernel.asm	/^c0102e9a:	e9 61 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102e9f	obj/kernel.asm	/^c0102e9f <vector100>:$/;"	l
c0102e9f	obj/kernel.asm	/^c0102e9f:	6a 00                	push   $0x0$/;"	l
c0102ea1	obj/kernel.asm	/^c0102ea1:	6a 64                	push   $0x64$/;"	l
c0102ea3	obj/kernel.asm	/^c0102ea3:	e9 58 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ea8	obj/kernel.asm	/^c0102ea8 <vector101>:$/;"	l
c0102ea8	obj/kernel.asm	/^c0102ea8:	6a 00                	push   $0x0$/;"	l
c0102eaa	obj/kernel.asm	/^c0102eaa:	6a 65                	push   $0x65$/;"	l
c0102eac	obj/kernel.asm	/^c0102eac:	e9 4f fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102eb1	obj/kernel.asm	/^c0102eb1 <vector102>:$/;"	l
c0102eb1	obj/kernel.asm	/^c0102eb1:	6a 00                	push   $0x0$/;"	l
c0102eb3	obj/kernel.asm	/^c0102eb3:	6a 66                	push   $0x66$/;"	l
c0102eb5	obj/kernel.asm	/^c0102eb5:	e9 46 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102eba	obj/kernel.asm	/^c0102eba <vector103>:$/;"	l
c0102eba	obj/kernel.asm	/^c0102eba:	6a 00                	push   $0x0$/;"	l
c0102ebc	obj/kernel.asm	/^c0102ebc:	6a 67                	push   $0x67$/;"	l
c0102ebe	obj/kernel.asm	/^c0102ebe:	e9 3d fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ec3	obj/kernel.asm	/^c0102ec3 <vector104>:$/;"	l
c0102ec3	obj/kernel.asm	/^c0102ec3:	6a 00                	push   $0x0$/;"	l
c0102ec5	obj/kernel.asm	/^c0102ec5:	6a 68                	push   $0x68$/;"	l
c0102ec7	obj/kernel.asm	/^c0102ec7:	e9 34 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ecc	obj/kernel.asm	/^c0102ecc <vector105>:$/;"	l
c0102ecc	obj/kernel.asm	/^c0102ecc:	6a 00                	push   $0x0$/;"	l
c0102ece	obj/kernel.asm	/^c0102ece:	6a 69                	push   $0x69$/;"	l
c0102ed0	obj/kernel.asm	/^c0102ed0:	e9 2b fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ed5	obj/kernel.asm	/^c0102ed5 <vector106>:$/;"	l
c0102ed5	obj/kernel.asm	/^c0102ed5:	6a 00                	push   $0x0$/;"	l
c0102ed7	obj/kernel.asm	/^c0102ed7:	6a 6a                	push   $0x6a$/;"	l
c0102ed9	obj/kernel.asm	/^c0102ed9:	e9 22 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ede	obj/kernel.asm	/^c0102ede <vector107>:$/;"	l
c0102ede	obj/kernel.asm	/^c0102ede:	6a 00                	push   $0x0$/;"	l
c0102ee0	obj/kernel.asm	/^c0102ee0:	6a 6b                	push   $0x6b$/;"	l
c0102ee2	obj/kernel.asm	/^c0102ee2:	e9 19 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ee7	obj/kernel.asm	/^c0102ee7 <vector108>:$/;"	l
c0102ee7	obj/kernel.asm	/^c0102ee7:	6a 00                	push   $0x0$/;"	l
c0102ee9	obj/kernel.asm	/^c0102ee9:	6a 6c                	push   $0x6c$/;"	l
c0102eeb	obj/kernel.asm	/^c0102eeb:	e9 10 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ef0	obj/kernel.asm	/^c0102ef0 <vector109>:$/;"	l
c0102ef0	obj/kernel.asm	/^c0102ef0:	6a 00                	push   $0x0$/;"	l
c0102ef2	obj/kernel.asm	/^c0102ef2:	6a 6d                	push   $0x6d$/;"	l
c0102ef4	obj/kernel.asm	/^c0102ef4:	e9 07 fc ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ef9	obj/kernel.asm	/^c0102ef9 <vector110>:$/;"	l
c0102ef9	obj/kernel.asm	/^c0102ef9:	6a 00                	push   $0x0$/;"	l
c0102efb	obj/kernel.asm	/^c0102efb:	6a 6e                	push   $0x6e$/;"	l
c0102efd	obj/kernel.asm	/^c0102efd:	e9 fe fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f02	obj/kernel.asm	/^c0102f02 <vector111>:$/;"	l
c0102f02	obj/kernel.asm	/^c0102f02:	6a 00                	push   $0x0$/;"	l
c0102f04	obj/kernel.asm	/^c0102f04:	6a 6f                	push   $0x6f$/;"	l
c0102f06	obj/kernel.asm	/^c0102f06:	e9 f5 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f0b	obj/kernel.asm	/^c0102f0b <vector112>:$/;"	l
c0102f0b	obj/kernel.asm	/^c0102f0b:	6a 00                	push   $0x0$/;"	l
c0102f0d	obj/kernel.asm	/^c0102f0d:	6a 70                	push   $0x70$/;"	l
c0102f0f	obj/kernel.asm	/^c0102f0f:	e9 ec fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f14	obj/kernel.asm	/^c0102f14 <vector113>:$/;"	l
c0102f14	obj/kernel.asm	/^c0102f14:	6a 00                	push   $0x0$/;"	l
c0102f16	obj/kernel.asm	/^c0102f16:	6a 71                	push   $0x71$/;"	l
c0102f18	obj/kernel.asm	/^c0102f18:	e9 e3 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f1d	obj/kernel.asm	/^c0102f1d <vector114>:$/;"	l
c0102f1d	obj/kernel.asm	/^c0102f1d:	6a 00                	push   $0x0$/;"	l
c0102f1f	obj/kernel.asm	/^c0102f1f:	6a 72                	push   $0x72$/;"	l
c0102f21	obj/kernel.asm	/^c0102f21:	e9 da fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f26	obj/kernel.asm	/^c0102f26 <vector115>:$/;"	l
c0102f26	obj/kernel.asm	/^c0102f26:	6a 00                	push   $0x0$/;"	l
c0102f28	obj/kernel.asm	/^c0102f28:	6a 73                	push   $0x73$/;"	l
c0102f2a	obj/kernel.asm	/^c0102f2a:	e9 d1 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f2f	obj/kernel.asm	/^c0102f2f <vector116>:$/;"	l
c0102f2f	obj/kernel.asm	/^c0102f2f:	6a 00                	push   $0x0$/;"	l
c0102f31	obj/kernel.asm	/^c0102f31:	6a 74                	push   $0x74$/;"	l
c0102f33	obj/kernel.asm	/^c0102f33:	e9 c8 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f38	obj/kernel.asm	/^c0102f38 <vector117>:$/;"	l
c0102f38	obj/kernel.asm	/^c0102f38:	6a 00                	push   $0x0$/;"	l
c0102f3a	obj/kernel.asm	/^c0102f3a:	6a 75                	push   $0x75$/;"	l
c0102f3c	obj/kernel.asm	/^c0102f3c:	e9 bf fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f41	obj/kernel.asm	/^c0102f41 <vector118>:$/;"	l
c0102f41	obj/kernel.asm	/^c0102f41:	6a 00                	push   $0x0$/;"	l
c0102f43	obj/kernel.asm	/^c0102f43:	6a 76                	push   $0x76$/;"	l
c0102f45	obj/kernel.asm	/^c0102f45:	e9 b6 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f4a	obj/kernel.asm	/^c0102f4a <vector119>:$/;"	l
c0102f4a	obj/kernel.asm	/^c0102f4a:	6a 00                	push   $0x0$/;"	l
c0102f4c	obj/kernel.asm	/^c0102f4c:	6a 77                	push   $0x77$/;"	l
c0102f4e	obj/kernel.asm	/^c0102f4e:	e9 ad fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f53	obj/kernel.asm	/^c0102f53 <vector120>:$/;"	l
c0102f53	obj/kernel.asm	/^c0102f53:	6a 00                	push   $0x0$/;"	l
c0102f55	obj/kernel.asm	/^c0102f55:	6a 78                	push   $0x78$/;"	l
c0102f57	obj/kernel.asm	/^c0102f57:	e9 a4 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f5c	obj/kernel.asm	/^c0102f5c <vector121>:$/;"	l
c0102f5c	obj/kernel.asm	/^c0102f5c:	6a 00                	push   $0x0$/;"	l
c0102f5e	obj/kernel.asm	/^c0102f5e:	6a 79                	push   $0x79$/;"	l
c0102f60	obj/kernel.asm	/^c0102f60:	e9 9b fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f65	obj/kernel.asm	/^c0102f65 <vector122>:$/;"	l
c0102f65	obj/kernel.asm	/^c0102f65:	6a 00                	push   $0x0$/;"	l
c0102f67	obj/kernel.asm	/^c0102f67:	6a 7a                	push   $0x7a$/;"	l
c0102f69	obj/kernel.asm	/^c0102f69:	e9 92 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f6e	obj/kernel.asm	/^c0102f6e <vector123>:$/;"	l
c0102f6e	obj/kernel.asm	/^c0102f6e:	6a 00                	push   $0x0$/;"	l
c0102f70	obj/kernel.asm	/^c0102f70:	6a 7b                	push   $0x7b$/;"	l
c0102f72	obj/kernel.asm	/^c0102f72:	e9 89 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f77	obj/kernel.asm	/^c0102f77 <vector124>:$/;"	l
c0102f77	obj/kernel.asm	/^c0102f77:	6a 00                	push   $0x0$/;"	l
c0102f79	obj/kernel.asm	/^c0102f79:	6a 7c                	push   $0x7c$/;"	l
c0102f7b	obj/kernel.asm	/^c0102f7b:	e9 80 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f80	obj/kernel.asm	/^c0102f80 <vector125>:$/;"	l
c0102f80	obj/kernel.asm	/^c0102f80:	6a 00                	push   $0x0$/;"	l
c0102f82	obj/kernel.asm	/^c0102f82:	6a 7d                	push   $0x7d$/;"	l
c0102f84	obj/kernel.asm	/^c0102f84:	e9 77 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f89	obj/kernel.asm	/^c0102f89 <vector126>:$/;"	l
c0102f89	obj/kernel.asm	/^c0102f89:	6a 00                	push   $0x0$/;"	l
c0102f8b	obj/kernel.asm	/^c0102f8b:	6a 7e                	push   $0x7e$/;"	l
c0102f8d	obj/kernel.asm	/^c0102f8d:	e9 6e fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f92	obj/kernel.asm	/^c0102f92 <vector127>:$/;"	l
c0102f92	obj/kernel.asm	/^c0102f92:	6a 00                	push   $0x0$/;"	l
c0102f94	obj/kernel.asm	/^c0102f94:	6a 7f                	push   $0x7f$/;"	l
c0102f96	obj/kernel.asm	/^c0102f96:	e9 65 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102f9b	obj/kernel.asm	/^c0102f9b <vector128>:$/;"	l
c0102f9b	obj/kernel.asm	/^c0102f9b:	6a 00                	push   $0x0$/;"	l
c0102f9d	obj/kernel.asm	/^c0102f9d:	68 80 00 00 00       	push   $0x80$/;"	l
c0102fa2	obj/kernel.asm	/^c0102fa2:	e9 59 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7 <vector129>:$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7:	6a 00                	push   $0x0$/;"	l
c0102fa9	obj/kernel.asm	/^c0102fa9:	68 81 00 00 00       	push   $0x81$/;"	l
c0102fae	obj/kernel.asm	/^c0102fae:	e9 4d fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fb3	obj/kernel.asm	/^c0102fb3 <vector130>:$/;"	l
c0102fb3	obj/kernel.asm	/^c0102fb3:	6a 00                	push   $0x0$/;"	l
c0102fb5	obj/kernel.asm	/^c0102fb5:	68 82 00 00 00       	push   $0x82$/;"	l
c0102fba	obj/kernel.asm	/^c0102fba:	e9 41 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fbf	obj/kernel.asm	/^c0102fbf <vector131>:$/;"	l
c0102fbf	obj/kernel.asm	/^c0102fbf:	6a 00                	push   $0x0$/;"	l
c0102fc1	obj/kernel.asm	/^c0102fc1:	68 83 00 00 00       	push   $0x83$/;"	l
c0102fc6	obj/kernel.asm	/^c0102fc6:	e9 35 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb <vector132>:$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb:	6a 00                	push   $0x0$/;"	l
c0102fcd	obj/kernel.asm	/^c0102fcd:	68 84 00 00 00       	push   $0x84$/;"	l
c0102fd2	obj/kernel.asm	/^c0102fd2:	e9 29 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fd7	obj/kernel.asm	/^c0102fd7 <vector133>:$/;"	l
c0102fd7	obj/kernel.asm	/^c0102fd7:	6a 00                	push   $0x0$/;"	l
c0102fd9	obj/kernel.asm	/^c0102fd9:	68 85 00 00 00       	push   $0x85$/;"	l
c0102fde	obj/kernel.asm	/^c0102fde:	e9 1d fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fe3	obj/kernel.asm	/^c0102fe3 <vector134>:$/;"	l
c0102fe3	obj/kernel.asm	/^c0102fe3:	6a 00                	push   $0x0$/;"	l
c0102fe5	obj/kernel.asm	/^c0102fe5:	68 86 00 00 00       	push   $0x86$/;"	l
c0102fea	obj/kernel.asm	/^c0102fea:	e9 11 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef <vector135>:$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef:	6a 00                	push   $0x0$/;"	l
c0102ff1	obj/kernel.asm	/^c0102ff1:	68 87 00 00 00       	push   $0x87$/;"	l
c0102ff6	obj/kernel.asm	/^c0102ff6:	e9 05 fb ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0102ffb	obj/kernel.asm	/^c0102ffb <vector136>:$/;"	l
c0102ffb	obj/kernel.asm	/^c0102ffb:	6a 00                	push   $0x0$/;"	l
c0102ffd	obj/kernel.asm	/^c0102ffd:	68 88 00 00 00       	push   $0x88$/;"	l
c0103002	obj/kernel.asm	/^c0103002:	e9 f9 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103007	obj/kernel.asm	/^c0103007 <vector137>:$/;"	l
c0103007	obj/kernel.asm	/^c0103007:	6a 00                	push   $0x0$/;"	l
c0103009	obj/kernel.asm	/^c0103009:	68 89 00 00 00       	push   $0x89$/;"	l
c010300e	obj/kernel.asm	/^c010300e:	e9 ed fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103013	obj/kernel.asm	/^c0103013 <vector138>:$/;"	l
c0103013	obj/kernel.asm	/^c0103013:	6a 00                	push   $0x0$/;"	l
c0103015	obj/kernel.asm	/^c0103015:	68 8a 00 00 00       	push   $0x8a$/;"	l
c010301a	obj/kernel.asm	/^c010301a:	e9 e1 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010301f	obj/kernel.asm	/^c010301f <vector139>:$/;"	l
c010301f	obj/kernel.asm	/^c010301f:	6a 00                	push   $0x0$/;"	l
c0103021	obj/kernel.asm	/^c0103021:	68 8b 00 00 00       	push   $0x8b$/;"	l
c0103026	obj/kernel.asm	/^c0103026:	e9 d5 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010302b	obj/kernel.asm	/^c010302b <vector140>:$/;"	l
c010302b	obj/kernel.asm	/^c010302b:	6a 00                	push   $0x0$/;"	l
c010302d	obj/kernel.asm	/^c010302d:	68 8c 00 00 00       	push   $0x8c$/;"	l
c0103032	obj/kernel.asm	/^c0103032:	e9 c9 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103037	obj/kernel.asm	/^c0103037 <vector141>:$/;"	l
c0103037	obj/kernel.asm	/^c0103037:	6a 00                	push   $0x0$/;"	l
c0103039	obj/kernel.asm	/^c0103039:	68 8d 00 00 00       	push   $0x8d$/;"	l
c010303e	obj/kernel.asm	/^c010303e:	e9 bd fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103043	obj/kernel.asm	/^c0103043 <vector142>:$/;"	l
c0103043	obj/kernel.asm	/^c0103043:	6a 00                	push   $0x0$/;"	l
c0103045	obj/kernel.asm	/^c0103045:	68 8e 00 00 00       	push   $0x8e$/;"	l
c010304a	obj/kernel.asm	/^c010304a:	e9 b1 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010304f	obj/kernel.asm	/^c010304f <vector143>:$/;"	l
c010304f	obj/kernel.asm	/^c010304f:	6a 00                	push   $0x0$/;"	l
c0103051	obj/kernel.asm	/^c0103051:	68 8f 00 00 00       	push   $0x8f$/;"	l
c0103056	obj/kernel.asm	/^c0103056:	e9 a5 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010305b	obj/kernel.asm	/^c010305b <vector144>:$/;"	l
c010305b	obj/kernel.asm	/^c010305b:	6a 00                	push   $0x0$/;"	l
c010305d	obj/kernel.asm	/^c010305d:	68 90 00 00 00       	push   $0x90$/;"	l
c0103062	obj/kernel.asm	/^c0103062:	e9 99 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103067	obj/kernel.asm	/^c0103067 <vector145>:$/;"	l
c0103067	obj/kernel.asm	/^c0103067:	6a 00                	push   $0x0$/;"	l
c0103069	obj/kernel.asm	/^c0103069:	68 91 00 00 00       	push   $0x91$/;"	l
c010306e	obj/kernel.asm	/^c010306e:	e9 8d fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103073	obj/kernel.asm	/^c0103073 <vector146>:$/;"	l
c0103073	obj/kernel.asm	/^c0103073:	6a 00                	push   $0x0$/;"	l
c0103075	obj/kernel.asm	/^c0103075:	68 92 00 00 00       	push   $0x92$/;"	l
c010307a	obj/kernel.asm	/^c010307a:	e9 81 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010307f	obj/kernel.asm	/^c010307f <vector147>:$/;"	l
c010307f	obj/kernel.asm	/^c010307f:	6a 00                	push   $0x0$/;"	l
c0103081	obj/kernel.asm	/^c0103081:	68 93 00 00 00       	push   $0x93$/;"	l
c0103086	obj/kernel.asm	/^c0103086:	e9 75 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010308b	obj/kernel.asm	/^c010308b <vector148>:$/;"	l
c010308b	obj/kernel.asm	/^c010308b:	6a 00                	push   $0x0$/;"	l
c010308d	obj/kernel.asm	/^c010308d:	68 94 00 00 00       	push   $0x94$/;"	l
c0103092	obj/kernel.asm	/^c0103092:	e9 69 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103097	obj/kernel.asm	/^c0103097 <vector149>:$/;"	l
c0103097	obj/kernel.asm	/^c0103097:	6a 00                	push   $0x0$/;"	l
c0103099	obj/kernel.asm	/^c0103099:	68 95 00 00 00       	push   $0x95$/;"	l
c010309e	obj/kernel.asm	/^c010309e:	e9 5d fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030a3	obj/kernel.asm	/^c01030a3 <vector150>:$/;"	l
c01030a3	obj/kernel.asm	/^c01030a3:	6a 00                	push   $0x0$/;"	l
c01030a5	obj/kernel.asm	/^c01030a5:	68 96 00 00 00       	push   $0x96$/;"	l
c01030aa	obj/kernel.asm	/^c01030aa:	e9 51 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030af	obj/kernel.asm	/^c01030af <vector151>:$/;"	l
c01030af	obj/kernel.asm	/^c01030af:	6a 00                	push   $0x0$/;"	l
c01030b1	obj/kernel.asm	/^c01030b1:	68 97 00 00 00       	push   $0x97$/;"	l
c01030b6	obj/kernel.asm	/^c01030b6:	e9 45 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030bb	obj/kernel.asm	/^c01030bb <vector152>:$/;"	l
c01030bb	obj/kernel.asm	/^c01030bb:	6a 00                	push   $0x0$/;"	l
c01030bd	obj/kernel.asm	/^c01030bd:	68 98 00 00 00       	push   $0x98$/;"	l
c01030c2	obj/kernel.asm	/^c01030c2:	e9 39 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030c7	obj/kernel.asm	/^c01030c7 <vector153>:$/;"	l
c01030c7	obj/kernel.asm	/^c01030c7:	6a 00                	push   $0x0$/;"	l
c01030c9	obj/kernel.asm	/^c01030c9:	68 99 00 00 00       	push   $0x99$/;"	l
c01030ce	obj/kernel.asm	/^c01030ce:	e9 2d fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030d3	obj/kernel.asm	/^c01030d3 <vector154>:$/;"	l
c01030d3	obj/kernel.asm	/^c01030d3:	6a 00                	push   $0x0$/;"	l
c01030d5	obj/kernel.asm	/^c01030d5:	68 9a 00 00 00       	push   $0x9a$/;"	l
c01030da	obj/kernel.asm	/^c01030da:	e9 21 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030df	obj/kernel.asm	/^c01030df <vector155>:$/;"	l
c01030df	obj/kernel.asm	/^c01030df:	6a 00                	push   $0x0$/;"	l
c01030e1	obj/kernel.asm	/^c01030e1:	68 9b 00 00 00       	push   $0x9b$/;"	l
c01030e6	obj/kernel.asm	/^c01030e6:	e9 15 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030eb	obj/kernel.asm	/^c01030eb <vector156>:$/;"	l
c01030eb	obj/kernel.asm	/^c01030eb:	6a 00                	push   $0x0$/;"	l
c01030ed	obj/kernel.asm	/^c01030ed:	68 9c 00 00 00       	push   $0x9c$/;"	l
c01030f2	obj/kernel.asm	/^c01030f2:	e9 09 fa ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01030f7	obj/kernel.asm	/^c01030f7 <vector157>:$/;"	l
c01030f7	obj/kernel.asm	/^c01030f7:	6a 00                	push   $0x0$/;"	l
c01030f9	obj/kernel.asm	/^c01030f9:	68 9d 00 00 00       	push   $0x9d$/;"	l
c01030fe	obj/kernel.asm	/^c01030fe:	e9 fd f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103103	obj/kernel.asm	/^c0103103 <vector158>:$/;"	l
c0103103	obj/kernel.asm	/^c0103103:	6a 00                	push   $0x0$/;"	l
c0103105	obj/kernel.asm	/^c0103105:	68 9e 00 00 00       	push   $0x9e$/;"	l
c010310a	obj/kernel.asm	/^c010310a:	e9 f1 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010310f	obj/kernel.asm	/^c010310f <vector159>:$/;"	l
c010310f	obj/kernel.asm	/^c010310f:	6a 00                	push   $0x0$/;"	l
c0103111	obj/kernel.asm	/^c0103111:	68 9f 00 00 00       	push   $0x9f$/;"	l
c0103116	obj/kernel.asm	/^c0103116:	e9 e5 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010311b	obj/kernel.asm	/^c010311b <vector160>:$/;"	l
c010311b	obj/kernel.asm	/^c010311b:	6a 00                	push   $0x0$/;"	l
c010311d	obj/kernel.asm	/^c010311d:	68 a0 00 00 00       	push   $0xa0$/;"	l
c0103122	obj/kernel.asm	/^c0103122:	e9 d9 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103127	obj/kernel.asm	/^c0103127 <vector161>:$/;"	l
c0103127	obj/kernel.asm	/^c0103127:	6a 00                	push   $0x0$/;"	l
c0103129	obj/kernel.asm	/^c0103129:	68 a1 00 00 00       	push   $0xa1$/;"	l
c010312e	obj/kernel.asm	/^c010312e:	e9 cd f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103133	obj/kernel.asm	/^c0103133 <vector162>:$/;"	l
c0103133	obj/kernel.asm	/^c0103133:	6a 00                	push   $0x0$/;"	l
c0103135	obj/kernel.asm	/^c0103135:	68 a2 00 00 00       	push   $0xa2$/;"	l
c010313a	obj/kernel.asm	/^c010313a:	e9 c1 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010313f	obj/kernel.asm	/^c010313f <vector163>:$/;"	l
c010313f	obj/kernel.asm	/^c010313f:	6a 00                	push   $0x0$/;"	l
c0103141	obj/kernel.asm	/^c0103141:	68 a3 00 00 00       	push   $0xa3$/;"	l
c0103146	obj/kernel.asm	/^c0103146:	e9 b5 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010314b	obj/kernel.asm	/^c010314b <vector164>:$/;"	l
c010314b	obj/kernel.asm	/^c010314b:	6a 00                	push   $0x0$/;"	l
c010314d	obj/kernel.asm	/^c010314d:	68 a4 00 00 00       	push   $0xa4$/;"	l
c0103152	obj/kernel.asm	/^c0103152:	e9 a9 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103157	obj/kernel.asm	/^c0103157 <vector165>:$/;"	l
c0103157	obj/kernel.asm	/^c0103157:	6a 00                	push   $0x0$/;"	l
c0103159	obj/kernel.asm	/^c0103159:	68 a5 00 00 00       	push   $0xa5$/;"	l
c010315e	obj/kernel.asm	/^c010315e:	e9 9d f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103163	obj/kernel.asm	/^c0103163 <vector166>:$/;"	l
c0103163	obj/kernel.asm	/^c0103163:	6a 00                	push   $0x0$/;"	l
c0103165	obj/kernel.asm	/^c0103165:	68 a6 00 00 00       	push   $0xa6$/;"	l
c010316a	obj/kernel.asm	/^c010316a:	e9 91 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010316f	obj/kernel.asm	/^c010316f <vector167>:$/;"	l
c010316f	obj/kernel.asm	/^c010316f:	6a 00                	push   $0x0$/;"	l
c0103171	obj/kernel.asm	/^c0103171:	68 a7 00 00 00       	push   $0xa7$/;"	l
c0103176	obj/kernel.asm	/^c0103176:	e9 85 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010317b	obj/kernel.asm	/^c010317b <vector168>:$/;"	l
c010317b	obj/kernel.asm	/^c010317b:	6a 00                	push   $0x0$/;"	l
c010317d	obj/kernel.asm	/^c010317d:	68 a8 00 00 00       	push   $0xa8$/;"	l
c0103182	obj/kernel.asm	/^c0103182:	e9 79 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103187	obj/kernel.asm	/^c0103187 <vector169>:$/;"	l
c0103187	obj/kernel.asm	/^c0103187:	6a 00                	push   $0x0$/;"	l
c0103189	obj/kernel.asm	/^c0103189:	68 a9 00 00 00       	push   $0xa9$/;"	l
c010318e	obj/kernel.asm	/^c010318e:	e9 6d f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103193	obj/kernel.asm	/^c0103193 <vector170>:$/;"	l
c0103193	obj/kernel.asm	/^c0103193:	6a 00                	push   $0x0$/;"	l
c0103195	obj/kernel.asm	/^c0103195:	68 aa 00 00 00       	push   $0xaa$/;"	l
c010319a	obj/kernel.asm	/^c010319a:	e9 61 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010319f	obj/kernel.asm	/^c010319f <vector171>:$/;"	l
c010319f	obj/kernel.asm	/^c010319f:	6a 00                	push   $0x0$/;"	l
c01031a1	obj/kernel.asm	/^c01031a1:	68 ab 00 00 00       	push   $0xab$/;"	l
c01031a6	obj/kernel.asm	/^c01031a6:	e9 55 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031ab	obj/kernel.asm	/^c01031ab <vector172>:$/;"	l
c01031ab	obj/kernel.asm	/^c01031ab:	6a 00                	push   $0x0$/;"	l
c01031ad	obj/kernel.asm	/^c01031ad:	68 ac 00 00 00       	push   $0xac$/;"	l
c01031b2	obj/kernel.asm	/^c01031b2:	e9 49 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031b7	obj/kernel.asm	/^c01031b7 <vector173>:$/;"	l
c01031b7	obj/kernel.asm	/^c01031b7:	6a 00                	push   $0x0$/;"	l
c01031b9	obj/kernel.asm	/^c01031b9:	68 ad 00 00 00       	push   $0xad$/;"	l
c01031be	obj/kernel.asm	/^c01031be:	e9 3d f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031c3	obj/kernel.asm	/^c01031c3 <vector174>:$/;"	l
c01031c3	obj/kernel.asm	/^c01031c3:	6a 00                	push   $0x0$/;"	l
c01031c5	obj/kernel.asm	/^c01031c5:	68 ae 00 00 00       	push   $0xae$/;"	l
c01031ca	obj/kernel.asm	/^c01031ca:	e9 31 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031cf	obj/kernel.asm	/^c01031cf <vector175>:$/;"	l
c01031cf	obj/kernel.asm	/^c01031cf:	6a 00                	push   $0x0$/;"	l
c01031d1	obj/kernel.asm	/^c01031d1:	68 af 00 00 00       	push   $0xaf$/;"	l
c01031d6	obj/kernel.asm	/^c01031d6:	e9 25 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031db	obj/kernel.asm	/^c01031db <vector176>:$/;"	l
c01031db	obj/kernel.asm	/^c01031db:	6a 00                	push   $0x0$/;"	l
c01031dd	obj/kernel.asm	/^c01031dd:	68 b0 00 00 00       	push   $0xb0$/;"	l
c01031e2	obj/kernel.asm	/^c01031e2:	e9 19 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031e7	obj/kernel.asm	/^c01031e7 <vector177>:$/;"	l
c01031e7	obj/kernel.asm	/^c01031e7:	6a 00                	push   $0x0$/;"	l
c01031e9	obj/kernel.asm	/^c01031e9:	68 b1 00 00 00       	push   $0xb1$/;"	l
c01031ee	obj/kernel.asm	/^c01031ee:	e9 0d f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031f3	obj/kernel.asm	/^c01031f3 <vector178>:$/;"	l
c01031f3	obj/kernel.asm	/^c01031f3:	6a 00                	push   $0x0$/;"	l
c01031f5	obj/kernel.asm	/^c01031f5:	68 b2 00 00 00       	push   $0xb2$/;"	l
c01031fa	obj/kernel.asm	/^c01031fa:	e9 01 f9 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01031ff	obj/kernel.asm	/^c01031ff <vector179>:$/;"	l
c01031ff	obj/kernel.asm	/^c01031ff:	6a 00                	push   $0x0$/;"	l
c0103201	obj/kernel.asm	/^c0103201:	68 b3 00 00 00       	push   $0xb3$/;"	l
c0103206	obj/kernel.asm	/^c0103206:	e9 f5 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010320b	obj/kernel.asm	/^c010320b <vector180>:$/;"	l
c010320b	obj/kernel.asm	/^c010320b:	6a 00                	push   $0x0$/;"	l
c010320d	obj/kernel.asm	/^c010320d:	68 b4 00 00 00       	push   $0xb4$/;"	l
c0103212	obj/kernel.asm	/^c0103212:	e9 e9 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103217	obj/kernel.asm	/^c0103217 <vector181>:$/;"	l
c0103217	obj/kernel.asm	/^c0103217:	6a 00                	push   $0x0$/;"	l
c0103219	obj/kernel.asm	/^c0103219:	68 b5 00 00 00       	push   $0xb5$/;"	l
c010321e	obj/kernel.asm	/^c010321e:	e9 dd f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103223	obj/kernel.asm	/^c0103223 <vector182>:$/;"	l
c0103223	obj/kernel.asm	/^c0103223:	6a 00                	push   $0x0$/;"	l
c0103225	obj/kernel.asm	/^c0103225:	68 b6 00 00 00       	push   $0xb6$/;"	l
c010322a	obj/kernel.asm	/^c010322a:	e9 d1 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010322f	obj/kernel.asm	/^c010322f <vector183>:$/;"	l
c010322f	obj/kernel.asm	/^c010322f:	6a 00                	push   $0x0$/;"	l
c0103231	obj/kernel.asm	/^c0103231:	68 b7 00 00 00       	push   $0xb7$/;"	l
c0103236	obj/kernel.asm	/^c0103236:	e9 c5 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010323b	obj/kernel.asm	/^c010323b <vector184>:$/;"	l
c010323b	obj/kernel.asm	/^c010323b:	6a 00                	push   $0x0$/;"	l
c010323d	obj/kernel.asm	/^c010323d:	68 b8 00 00 00       	push   $0xb8$/;"	l
c0103242	obj/kernel.asm	/^c0103242:	e9 b9 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103247	obj/kernel.asm	/^c0103247 <vector185>:$/;"	l
c0103247	obj/kernel.asm	/^c0103247:	6a 00                	push   $0x0$/;"	l
c0103249	obj/kernel.asm	/^c0103249:	68 b9 00 00 00       	push   $0xb9$/;"	l
c010324e	obj/kernel.asm	/^c010324e:	e9 ad f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103253	obj/kernel.asm	/^c0103253 <vector186>:$/;"	l
c0103253	obj/kernel.asm	/^c0103253:	6a 00                	push   $0x0$/;"	l
c0103255	obj/kernel.asm	/^c0103255:	68 ba 00 00 00       	push   $0xba$/;"	l
c010325a	obj/kernel.asm	/^c010325a:	e9 a1 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010325f	obj/kernel.asm	/^c010325f <vector187>:$/;"	l
c010325f	obj/kernel.asm	/^c010325f:	6a 00                	push   $0x0$/;"	l
c0103261	obj/kernel.asm	/^c0103261:	68 bb 00 00 00       	push   $0xbb$/;"	l
c0103266	obj/kernel.asm	/^c0103266:	e9 95 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010326b	obj/kernel.asm	/^c010326b <vector188>:$/;"	l
c010326b	obj/kernel.asm	/^c010326b:	6a 00                	push   $0x0$/;"	l
c010326d	obj/kernel.asm	/^c010326d:	68 bc 00 00 00       	push   $0xbc$/;"	l
c0103272	obj/kernel.asm	/^c0103272:	e9 89 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103277	obj/kernel.asm	/^c0103277 <vector189>:$/;"	l
c0103277	obj/kernel.asm	/^c0103277:	6a 00                	push   $0x0$/;"	l
c0103279	obj/kernel.asm	/^c0103279:	68 bd 00 00 00       	push   $0xbd$/;"	l
c010327e	obj/kernel.asm	/^c010327e:	e9 7d f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103283	obj/kernel.asm	/^c0103283 <vector190>:$/;"	l
c0103283	obj/kernel.asm	/^c0103283:	6a 00                	push   $0x0$/;"	l
c0103285	obj/kernel.asm	/^c0103285:	68 be 00 00 00       	push   $0xbe$/;"	l
c010328a	obj/kernel.asm	/^c010328a:	e9 71 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010328f	obj/kernel.asm	/^c010328f <vector191>:$/;"	l
c010328f	obj/kernel.asm	/^c010328f:	6a 00                	push   $0x0$/;"	l
c0103291	obj/kernel.asm	/^c0103291:	68 bf 00 00 00       	push   $0xbf$/;"	l
c0103296	obj/kernel.asm	/^c0103296:	e9 65 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010329b	obj/kernel.asm	/^c010329b <vector192>:$/;"	l
c010329b	obj/kernel.asm	/^c010329b:	6a 00                	push   $0x0$/;"	l
c010329d	obj/kernel.asm	/^c010329d:	68 c0 00 00 00       	push   $0xc0$/;"	l
c01032a2	obj/kernel.asm	/^c01032a2:	e9 59 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032a7	obj/kernel.asm	/^c01032a7 <vector193>:$/;"	l
c01032a7	obj/kernel.asm	/^c01032a7:	6a 00                	push   $0x0$/;"	l
c01032a9	obj/kernel.asm	/^c01032a9:	68 c1 00 00 00       	push   $0xc1$/;"	l
c01032ae	obj/kernel.asm	/^c01032ae:	e9 4d f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032b3	obj/kernel.asm	/^c01032b3 <vector194>:$/;"	l
c01032b3	obj/kernel.asm	/^c01032b3:	6a 00                	push   $0x0$/;"	l
c01032b5	obj/kernel.asm	/^c01032b5:	68 c2 00 00 00       	push   $0xc2$/;"	l
c01032ba	obj/kernel.asm	/^c01032ba:	e9 41 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032bf	obj/kernel.asm	/^c01032bf <vector195>:$/;"	l
c01032bf	obj/kernel.asm	/^c01032bf:	6a 00                	push   $0x0$/;"	l
c01032c1	obj/kernel.asm	/^c01032c1:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01032c6	obj/kernel.asm	/^c01032c6:	e9 35 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032cb	obj/kernel.asm	/^c01032cb <vector196>:$/;"	l
c01032cb	obj/kernel.asm	/^c01032cb:	6a 00                	push   $0x0$/;"	l
c01032cd	obj/kernel.asm	/^c01032cd:	68 c4 00 00 00       	push   $0xc4$/;"	l
c01032d2	obj/kernel.asm	/^c01032d2:	e9 29 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032d7	obj/kernel.asm	/^c01032d7 <vector197>:$/;"	l
c01032d7	obj/kernel.asm	/^c01032d7:	6a 00                	push   $0x0$/;"	l
c01032d9	obj/kernel.asm	/^c01032d9:	68 c5 00 00 00       	push   $0xc5$/;"	l
c01032de	obj/kernel.asm	/^c01032de:	e9 1d f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032e3	obj/kernel.asm	/^c01032e3 <vector198>:$/;"	l
c01032e3	obj/kernel.asm	/^c01032e3:	6a 00                	push   $0x0$/;"	l
c01032e5	obj/kernel.asm	/^c01032e5:	68 c6 00 00 00       	push   $0xc6$/;"	l
c01032ea	obj/kernel.asm	/^c01032ea:	e9 11 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032ef	obj/kernel.asm	/^c01032ef <vector199>:$/;"	l
c01032ef	obj/kernel.asm	/^c01032ef:	6a 00                	push   $0x0$/;"	l
c01032f1	obj/kernel.asm	/^c01032f1:	68 c7 00 00 00       	push   $0xc7$/;"	l
c01032f6	obj/kernel.asm	/^c01032f6:	e9 05 f8 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01032fb	obj/kernel.asm	/^c01032fb <vector200>:$/;"	l
c01032fb	obj/kernel.asm	/^c01032fb:	6a 00                	push   $0x0$/;"	l
c01032fd	obj/kernel.asm	/^c01032fd:	68 c8 00 00 00       	push   $0xc8$/;"	l
c0103302	obj/kernel.asm	/^c0103302:	e9 f9 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103307	obj/kernel.asm	/^c0103307 <vector201>:$/;"	l
c0103307	obj/kernel.asm	/^c0103307:	6a 00                	push   $0x0$/;"	l
c0103309	obj/kernel.asm	/^c0103309:	68 c9 00 00 00       	push   $0xc9$/;"	l
c010330e	obj/kernel.asm	/^c010330e:	e9 ed f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103313	obj/kernel.asm	/^c0103313 <vector202>:$/;"	l
c0103313	obj/kernel.asm	/^c0103313:	6a 00                	push   $0x0$/;"	l
c0103315	obj/kernel.asm	/^c0103315:	68 ca 00 00 00       	push   $0xca$/;"	l
c010331a	obj/kernel.asm	/^c010331a:	e9 e1 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010331f	obj/kernel.asm	/^c010331f <vector203>:$/;"	l
c010331f	obj/kernel.asm	/^c010331f:	6a 00                	push   $0x0$/;"	l
c0103321	obj/kernel.asm	/^c0103321:	68 cb 00 00 00       	push   $0xcb$/;"	l
c0103326	obj/kernel.asm	/^c0103326:	e9 d5 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010332b	obj/kernel.asm	/^c010332b <vector204>:$/;"	l
c010332b	obj/kernel.asm	/^c010332b:	6a 00                	push   $0x0$/;"	l
c010332d	obj/kernel.asm	/^c010332d:	68 cc 00 00 00       	push   $0xcc$/;"	l
c0103332	obj/kernel.asm	/^c0103332:	e9 c9 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103337	obj/kernel.asm	/^c0103337 <vector205>:$/;"	l
c0103337	obj/kernel.asm	/^c0103337:	6a 00                	push   $0x0$/;"	l
c0103339	obj/kernel.asm	/^c0103339:	68 cd 00 00 00       	push   $0xcd$/;"	l
c010333e	obj/kernel.asm	/^c010333e:	e9 bd f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103343	obj/kernel.asm	/^c0103343 <vector206>:$/;"	l
c0103343	obj/kernel.asm	/^c0103343:	6a 00                	push   $0x0$/;"	l
c0103345	obj/kernel.asm	/^c0103345:	68 ce 00 00 00       	push   $0xce$/;"	l
c010334a	obj/kernel.asm	/^c010334a:	e9 b1 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010334f	obj/kernel.asm	/^c010334f <vector207>:$/;"	l
c010334f	obj/kernel.asm	/^c010334f:	6a 00                	push   $0x0$/;"	l
c0103351	obj/kernel.asm	/^c0103351:	68 cf 00 00 00       	push   $0xcf$/;"	l
c0103356	obj/kernel.asm	/^c0103356:	e9 a5 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010335b	obj/kernel.asm	/^c010335b <vector208>:$/;"	l
c010335b	obj/kernel.asm	/^c010335b:	6a 00                	push   $0x0$/;"	l
c010335d	obj/kernel.asm	/^c010335d:	68 d0 00 00 00       	push   $0xd0$/;"	l
c0103362	obj/kernel.asm	/^c0103362:	e9 99 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103367	obj/kernel.asm	/^c0103367 <vector209>:$/;"	l
c0103367	obj/kernel.asm	/^c0103367:	6a 00                	push   $0x0$/;"	l
c0103369	obj/kernel.asm	/^c0103369:	68 d1 00 00 00       	push   $0xd1$/;"	l
c010336e	obj/kernel.asm	/^c010336e:	e9 8d f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103373	obj/kernel.asm	/^c0103373 <vector210>:$/;"	l
c0103373	obj/kernel.asm	/^c0103373:	6a 00                	push   $0x0$/;"	l
c0103375	obj/kernel.asm	/^c0103375:	68 d2 00 00 00       	push   $0xd2$/;"	l
c010337a	obj/kernel.asm	/^c010337a:	e9 81 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010337f	obj/kernel.asm	/^c010337f <vector211>:$/;"	l
c010337f	obj/kernel.asm	/^c010337f:	6a 00                	push   $0x0$/;"	l
c0103381	obj/kernel.asm	/^c0103381:	68 d3 00 00 00       	push   $0xd3$/;"	l
c0103386	obj/kernel.asm	/^c0103386:	e9 75 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010338b	obj/kernel.asm	/^c010338b <vector212>:$/;"	l
c010338b	obj/kernel.asm	/^c010338b:	6a 00                	push   $0x0$/;"	l
c010338d	obj/kernel.asm	/^c010338d:	68 d4 00 00 00       	push   $0xd4$/;"	l
c0103392	obj/kernel.asm	/^c0103392:	e9 69 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103397	obj/kernel.asm	/^c0103397 <vector213>:$/;"	l
c0103397	obj/kernel.asm	/^c0103397:	6a 00                	push   $0x0$/;"	l
c0103399	obj/kernel.asm	/^c0103399:	68 d5 00 00 00       	push   $0xd5$/;"	l
c010339e	obj/kernel.asm	/^c010339e:	e9 5d f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033a3	obj/kernel.asm	/^c01033a3 <vector214>:$/;"	l
c01033a3	obj/kernel.asm	/^c01033a3:	6a 00                	push   $0x0$/;"	l
c01033a5	obj/kernel.asm	/^c01033a5:	68 d6 00 00 00       	push   $0xd6$/;"	l
c01033aa	obj/kernel.asm	/^c01033aa:	e9 51 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033af	obj/kernel.asm	/^c01033af <vector215>:$/;"	l
c01033af	obj/kernel.asm	/^c01033af:	6a 00                	push   $0x0$/;"	l
c01033b1	obj/kernel.asm	/^c01033b1:	68 d7 00 00 00       	push   $0xd7$/;"	l
c01033b6	obj/kernel.asm	/^c01033b6:	e9 45 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033bb	obj/kernel.asm	/^c01033bb <vector216>:$/;"	l
c01033bb	obj/kernel.asm	/^c01033bb:	6a 00                	push   $0x0$/;"	l
c01033bd	obj/kernel.asm	/^c01033bd:	68 d8 00 00 00       	push   $0xd8$/;"	l
c01033c2	obj/kernel.asm	/^c01033c2:	e9 39 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033c7	obj/kernel.asm	/^c01033c7 <vector217>:$/;"	l
c01033c7	obj/kernel.asm	/^c01033c7:	6a 00                	push   $0x0$/;"	l
c01033c9	obj/kernel.asm	/^c01033c9:	68 d9 00 00 00       	push   $0xd9$/;"	l
c01033ce	obj/kernel.asm	/^c01033ce:	e9 2d f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033d3	obj/kernel.asm	/^c01033d3 <vector218>:$/;"	l
c01033d3	obj/kernel.asm	/^c01033d3:	6a 00                	push   $0x0$/;"	l
c01033d5	obj/kernel.asm	/^c01033d5:	68 da 00 00 00       	push   $0xda$/;"	l
c01033da	obj/kernel.asm	/^c01033da:	e9 21 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033df	obj/kernel.asm	/^c01033df <vector219>:$/;"	l
c01033df	obj/kernel.asm	/^c01033df:	6a 00                	push   $0x0$/;"	l
c01033e1	obj/kernel.asm	/^c01033e1:	68 db 00 00 00       	push   $0xdb$/;"	l
c01033e6	obj/kernel.asm	/^c01033e6:	e9 15 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033eb	obj/kernel.asm	/^c01033eb <vector220>:$/;"	l
c01033eb	obj/kernel.asm	/^c01033eb:	6a 00                	push   $0x0$/;"	l
c01033ed	obj/kernel.asm	/^c01033ed:	68 dc 00 00 00       	push   $0xdc$/;"	l
c01033f2	obj/kernel.asm	/^c01033f2:	e9 09 f7 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01033f7	obj/kernel.asm	/^c01033f7 <vector221>:$/;"	l
c01033f7	obj/kernel.asm	/^c01033f7:	6a 00                	push   $0x0$/;"	l
c01033f9	obj/kernel.asm	/^c01033f9:	68 dd 00 00 00       	push   $0xdd$/;"	l
c01033fe	obj/kernel.asm	/^c01033fe:	e9 fd f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103403	obj/kernel.asm	/^c0103403 <vector222>:$/;"	l
c0103403	obj/kernel.asm	/^c0103403:	6a 00                	push   $0x0$/;"	l
c0103405	obj/kernel.asm	/^c0103405:	68 de 00 00 00       	push   $0xde$/;"	l
c010340a	obj/kernel.asm	/^c010340a:	e9 f1 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010340f	obj/kernel.asm	/^c010340f <vector223>:$/;"	l
c010340f	obj/kernel.asm	/^c010340f:	6a 00                	push   $0x0$/;"	l
c0103411	obj/kernel.asm	/^c0103411:	68 df 00 00 00       	push   $0xdf$/;"	l
c0103416	obj/kernel.asm	/^c0103416:	e9 e5 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010341b	obj/kernel.asm	/^c010341b <vector224>:$/;"	l
c010341b	obj/kernel.asm	/^c010341b:	6a 00                	push   $0x0$/;"	l
c010341d	obj/kernel.asm	/^c010341d:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0103422	obj/kernel.asm	/^c0103422:	e9 d9 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103427	obj/kernel.asm	/^c0103427 <vector225>:$/;"	l
c0103427	obj/kernel.asm	/^c0103427:	6a 00                	push   $0x0$/;"	l
c0103429	obj/kernel.asm	/^c0103429:	68 e1 00 00 00       	push   $0xe1$/;"	l
c010342e	obj/kernel.asm	/^c010342e:	e9 cd f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103433	obj/kernel.asm	/^c0103433 <vector226>:$/;"	l
c0103433	obj/kernel.asm	/^c0103433:	6a 00                	push   $0x0$/;"	l
c0103435	obj/kernel.asm	/^c0103435:	68 e2 00 00 00       	push   $0xe2$/;"	l
c010343a	obj/kernel.asm	/^c010343a:	e9 c1 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010343f	obj/kernel.asm	/^c010343f <vector227>:$/;"	l
c010343f	obj/kernel.asm	/^c010343f:	6a 00                	push   $0x0$/;"	l
c0103441	obj/kernel.asm	/^c0103441:	68 e3 00 00 00       	push   $0xe3$/;"	l
c0103446	obj/kernel.asm	/^c0103446:	e9 b5 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010344b	obj/kernel.asm	/^c010344b <vector228>:$/;"	l
c010344b	obj/kernel.asm	/^c010344b:	6a 00                	push   $0x0$/;"	l
c010344d	obj/kernel.asm	/^c010344d:	68 e4 00 00 00       	push   $0xe4$/;"	l
c0103452	obj/kernel.asm	/^c0103452:	e9 a9 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103457	obj/kernel.asm	/^c0103457 <vector229>:$/;"	l
c0103457	obj/kernel.asm	/^c0103457:	6a 00                	push   $0x0$/;"	l
c0103459	obj/kernel.asm	/^c0103459:	68 e5 00 00 00       	push   $0xe5$/;"	l
c010345e	obj/kernel.asm	/^c010345e:	e9 9d f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103463	obj/kernel.asm	/^c0103463 <vector230>:$/;"	l
c0103463	obj/kernel.asm	/^c0103463:	6a 00                	push   $0x0$/;"	l
c0103465	obj/kernel.asm	/^c0103465:	68 e6 00 00 00       	push   $0xe6$/;"	l
c010346a	obj/kernel.asm	/^c010346a:	e9 91 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010346f	obj/kernel.asm	/^c010346f <vector231>:$/;"	l
c010346f	obj/kernel.asm	/^c010346f:	6a 00                	push   $0x0$/;"	l
c0103471	obj/kernel.asm	/^c0103471:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0103476	obj/kernel.asm	/^c0103476:	e9 85 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010347b	obj/kernel.asm	/^c010347b <vector232>:$/;"	l
c010347b	obj/kernel.asm	/^c010347b:	6a 00                	push   $0x0$/;"	l
c010347d	obj/kernel.asm	/^c010347d:	68 e8 00 00 00       	push   $0xe8$/;"	l
c0103482	obj/kernel.asm	/^c0103482:	e9 79 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103487	obj/kernel.asm	/^c0103487 <vector233>:$/;"	l
c0103487	obj/kernel.asm	/^c0103487:	6a 00                	push   $0x0$/;"	l
c0103489	obj/kernel.asm	/^c0103489:	68 e9 00 00 00       	push   $0xe9$/;"	l
c010348e	obj/kernel.asm	/^c010348e:	e9 6d f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103493	obj/kernel.asm	/^c0103493 <vector234>:$/;"	l
c0103493	obj/kernel.asm	/^c0103493:	6a 00                	push   $0x0$/;"	l
c0103495	obj/kernel.asm	/^c0103495:	68 ea 00 00 00       	push   $0xea$/;"	l
c010349a	obj/kernel.asm	/^c010349a:	e9 61 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010349f	obj/kernel.asm	/^c010349f <vector235>:$/;"	l
c010349f	obj/kernel.asm	/^c010349f:	6a 00                	push   $0x0$/;"	l
c01034a1	obj/kernel.asm	/^c01034a1:	68 eb 00 00 00       	push   $0xeb$/;"	l
c01034a6	obj/kernel.asm	/^c01034a6:	e9 55 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034ab	obj/kernel.asm	/^c01034ab <vector236>:$/;"	l
c01034ab	obj/kernel.asm	/^c01034ab:	6a 00                	push   $0x0$/;"	l
c01034ad	obj/kernel.asm	/^c01034ad:	68 ec 00 00 00       	push   $0xec$/;"	l
c01034b2	obj/kernel.asm	/^c01034b2:	e9 49 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034b7	obj/kernel.asm	/^c01034b7 <vector237>:$/;"	l
c01034b7	obj/kernel.asm	/^c01034b7:	6a 00                	push   $0x0$/;"	l
c01034b9	obj/kernel.asm	/^c01034b9:	68 ed 00 00 00       	push   $0xed$/;"	l
c01034be	obj/kernel.asm	/^c01034be:	e9 3d f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034c3	obj/kernel.asm	/^c01034c3 <vector238>:$/;"	l
c01034c3	obj/kernel.asm	/^c01034c3:	6a 00                	push   $0x0$/;"	l
c01034c5	obj/kernel.asm	/^c01034c5:	68 ee 00 00 00       	push   $0xee$/;"	l
c01034ca	obj/kernel.asm	/^c01034ca:	e9 31 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf <vector239>:$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf:	6a 00                	push   $0x0$/;"	l
c01034d1	obj/kernel.asm	/^c01034d1:	68 ef 00 00 00       	push   $0xef$/;"	l
c01034d6	obj/kernel.asm	/^c01034d6:	e9 25 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034db	obj/kernel.asm	/^c01034db <vector240>:$/;"	l
c01034db	obj/kernel.asm	/^c01034db:	6a 00                	push   $0x0$/;"	l
c01034dd	obj/kernel.asm	/^c01034dd:	68 f0 00 00 00       	push   $0xf0$/;"	l
c01034e2	obj/kernel.asm	/^c01034e2:	e9 19 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034e7	obj/kernel.asm	/^c01034e7 <vector241>:$/;"	l
c01034e7	obj/kernel.asm	/^c01034e7:	6a 00                	push   $0x0$/;"	l
c01034e9	obj/kernel.asm	/^c01034e9:	68 f1 00 00 00       	push   $0xf1$/;"	l
c01034ee	obj/kernel.asm	/^c01034ee:	e9 0d f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034f3	obj/kernel.asm	/^c01034f3 <vector242>:$/;"	l
c01034f3	obj/kernel.asm	/^c01034f3:	6a 00                	push   $0x0$/;"	l
c01034f5	obj/kernel.asm	/^c01034f5:	68 f2 00 00 00       	push   $0xf2$/;"	l
c01034fa	obj/kernel.asm	/^c01034fa:	e9 01 f6 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c01034ff	obj/kernel.asm	/^c01034ff <vector243>:$/;"	l
c01034ff	obj/kernel.asm	/^c01034ff:	6a 00                	push   $0x0$/;"	l
c0103501	obj/kernel.asm	/^c0103501:	68 f3 00 00 00       	push   $0xf3$/;"	l
c0103506	obj/kernel.asm	/^c0103506:	e9 f5 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010350b	obj/kernel.asm	/^c010350b <vector244>:$/;"	l
c010350b	obj/kernel.asm	/^c010350b:	6a 00                	push   $0x0$/;"	l
c010350d	obj/kernel.asm	/^c010350d:	68 f4 00 00 00       	push   $0xf4$/;"	l
c0103512	obj/kernel.asm	/^c0103512:	e9 e9 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103517	obj/kernel.asm	/^c0103517 <vector245>:$/;"	l
c0103517	obj/kernel.asm	/^c0103517:	6a 00                	push   $0x0$/;"	l
c0103519	obj/kernel.asm	/^c0103519:	68 f5 00 00 00       	push   $0xf5$/;"	l
c010351e	obj/kernel.asm	/^c010351e:	e9 dd f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103523	obj/kernel.asm	/^c0103523 <vector246>:$/;"	l
c0103523	obj/kernel.asm	/^c0103523:	6a 00                	push   $0x0$/;"	l
c0103525	obj/kernel.asm	/^c0103525:	68 f6 00 00 00       	push   $0xf6$/;"	l
c010352a	obj/kernel.asm	/^c010352a:	e9 d1 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010352f	obj/kernel.asm	/^c010352f <vector247>:$/;"	l
c010352f	obj/kernel.asm	/^c010352f:	6a 00                	push   $0x0$/;"	l
c0103531	obj/kernel.asm	/^c0103531:	68 f7 00 00 00       	push   $0xf7$/;"	l
c0103536	obj/kernel.asm	/^c0103536:	e9 c5 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010353b	obj/kernel.asm	/^c010353b <vector248>:$/;"	l
c010353b	obj/kernel.asm	/^c010353b:	6a 00                	push   $0x0$/;"	l
c010353d	obj/kernel.asm	/^c010353d:	68 f8 00 00 00       	push   $0xf8$/;"	l
c0103542	obj/kernel.asm	/^c0103542:	e9 b9 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103547	obj/kernel.asm	/^c0103547 <vector249>:$/;"	l
c0103547	obj/kernel.asm	/^c0103547:	6a 00                	push   $0x0$/;"	l
c0103549	obj/kernel.asm	/^c0103549:	68 f9 00 00 00       	push   $0xf9$/;"	l
c010354e	obj/kernel.asm	/^c010354e:	e9 ad f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103553	obj/kernel.asm	/^c0103553 <vector250>:$/;"	l
c0103553	obj/kernel.asm	/^c0103553:	6a 00                	push   $0x0$/;"	l
c0103555	obj/kernel.asm	/^c0103555:	68 fa 00 00 00       	push   $0xfa$/;"	l
c010355a	obj/kernel.asm	/^c010355a:	e9 a1 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010355f	obj/kernel.asm	/^c010355f <vector251>:$/;"	l
c010355f	obj/kernel.asm	/^c010355f:	6a 00                	push   $0x0$/;"	l
c0103561	obj/kernel.asm	/^c0103561:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0103566	obj/kernel.asm	/^c0103566:	e9 95 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010356b	obj/kernel.asm	/^c010356b <vector252>:$/;"	l
c010356b	obj/kernel.asm	/^c010356b:	6a 00                	push   $0x0$/;"	l
c010356d	obj/kernel.asm	/^c010356d:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0103572	obj/kernel.asm	/^c0103572:	e9 89 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103577	obj/kernel.asm	/^c0103577 <vector253>:$/;"	l
c0103577	obj/kernel.asm	/^c0103577:	6a 00                	push   $0x0$/;"	l
c0103579	obj/kernel.asm	/^c0103579:	68 fd 00 00 00       	push   $0xfd$/;"	l
c010357e	obj/kernel.asm	/^c010357e:	e9 7d f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c0103583	obj/kernel.asm	/^c0103583 <vector254>:$/;"	l
c0103583	obj/kernel.asm	/^c0103583:	6a 00                	push   $0x0$/;"	l
c0103585	obj/kernel.asm	/^c0103585:	68 fe 00 00 00       	push   $0xfe$/;"	l
c010358a	obj/kernel.asm	/^c010358a:	e9 71 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010358f	obj/kernel.asm	/^c010358f <vector255>:$/;"	l
c010358f	obj/kernel.asm	/^c010358f:	6a 00                	push   $0x0$/;"	l
c0103591	obj/kernel.asm	/^c0103591:	68 ff 00 00 00       	push   $0xff$/;"	l
c0103596	obj/kernel.asm	/^c0103596:	e9 65 f5 ff ff       	jmp    c0102b00 <__alltraps>$/;"	l
c010359b	obj/kernel.asm	/^c010359b <page2ppn>:$/;"	l
c010359b	obj/kernel.asm	/^c010359b:	55                   	push   %ebp$/;"	l
c010359c	obj/kernel.asm	/^c010359c:	89 e5                	mov    %esp,%ebp$/;"	l
c010359e	obj/kernel.asm	/^c010359e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01035a1	obj/kernel.asm	/^c01035a1:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c01035a6	obj/kernel.asm	/^c01035a6:	29 c2                	sub    %eax,%edx$/;"	l
c01035a8	obj/kernel.asm	/^c01035a8:	89 d0                	mov    %edx,%eax$/;"	l
c01035aa	obj/kernel.asm	/^c01035aa:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c01035ad	obj/kernel.asm	/^c01035ad:	5d                   	pop    %ebp$/;"	l
c01035ae	obj/kernel.asm	/^c01035ae:	c3                   	ret    $/;"	l
c01035af	obj/kernel.asm	/^c01035af <page2pa>:$/;"	l
c01035af	obj/kernel.asm	/^c01035af:	55                   	push   %ebp$/;"	l
c01035b0	obj/kernel.asm	/^c01035b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01035b2	obj/kernel.asm	/^c01035b2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01035b5	obj/kernel.asm	/^c01035b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035b8	obj/kernel.asm	/^c01035b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01035bb	obj/kernel.asm	/^c01035bb:	e8 db ff ff ff       	call   c010359b <page2ppn>$/;"	l
c01035c0	obj/kernel.asm	/^c01035c0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01035c3	obj/kernel.asm	/^c01035c3:	c9                   	leave  $/;"	l
c01035c4	obj/kernel.asm	/^c01035c4:	c3                   	ret    $/;"	l
c01035c5	obj/kernel.asm	/^c01035c5 <page_ref>:$/;"	l
c01035c5	obj/kernel.asm	/^c01035c5:	55                   	push   %ebp$/;"	l
c01035c6	obj/kernel.asm	/^c01035c6:	89 e5                	mov    %esp,%ebp$/;"	l
c01035c8	obj/kernel.asm	/^c01035c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035cb	obj/kernel.asm	/^c01035cb:	8b 00                	mov    (%eax),%eax$/;"	l
c01035cd	obj/kernel.asm	/^c01035cd:	5d                   	pop    %ebp$/;"	l
c01035ce	obj/kernel.asm	/^c01035ce:	c3                   	ret    $/;"	l
c01035cf	obj/kernel.asm	/^c01035cf <set_page_ref>:$/;"	l
c01035cf	obj/kernel.asm	/^c01035cf:	55                   	push   %ebp$/;"	l
c01035d0	obj/kernel.asm	/^c01035d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01035d2	obj/kernel.asm	/^c01035d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035d5	obj/kernel.asm	/^c01035d5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01035d8	obj/kernel.asm	/^c01035d8:	89 10                	mov    %edx,(%eax)$/;"	l
c01035da	obj/kernel.asm	/^c01035da:	5d                   	pop    %ebp$/;"	l
c01035db	obj/kernel.asm	/^c01035db:	c3                   	ret    $/;"	l
c01035dc	obj/kernel.asm	/^c01035dc <default_init>:$/;"	l
c01035dc	obj/kernel.asm	/^c01035dc:	55                   	push   %ebp$/;"	l
c01035dd	obj/kernel.asm	/^c01035dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01035df	obj/kernel.asm	/^c01035df:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01035e2	obj/kernel.asm	/^c01035e2:	c7 45 fc 14 30 15 c0 	movl   $0xc0153014,-0x4(%ebp)$/;"	l
c01035e9	obj/kernel.asm	/^c01035e9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01035ec	obj/kernel.asm	/^c01035ec:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01035ef	obj/kernel.asm	/^c01035ef:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01035f2	obj/kernel.asm	/^c01035f2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01035f5	obj/kernel.asm	/^c01035f5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01035f8	obj/kernel.asm	/^c01035f8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01035fb	obj/kernel.asm	/^c01035fb:	89 10                	mov    %edx,(%eax)$/;"	l
c01035fd	obj/kernel.asm	/^c01035fd:	c7 05 1c 30 15 c0 00 	movl   $0x0,0xc015301c$/;"	l
c0103604	obj/kernel.asm	/^c0103604:	00 00 00 $/;"	l
c0103607	obj/kernel.asm	/^c0103607:	c9                   	leave  $/;"	l
c0103608	obj/kernel.asm	/^c0103608:	c3                   	ret    $/;"	l
c0103609	obj/kernel.asm	/^c0103609 <default_init_memmap>:$/;"	l
c0103609	obj/kernel.asm	/^c0103609:	55                   	push   %ebp$/;"	l
c010360a	obj/kernel.asm	/^c010360a:	89 e5                	mov    %esp,%ebp$/;"	l
c010360c	obj/kernel.asm	/^c010360c:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010360f	obj/kernel.asm	/^c010360f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0103613	obj/kernel.asm	/^c0103613:	75 24                	jne    c0103639 <default_init_memmap+0x30>$/;"	l
c0103615	obj/kernel.asm	/^c0103615:	c7 44 24 0c d0 5e 11 	movl   $0xc0115ed0,0xc(%esp)$/;"	l
c010361c	obj/kernel.asm	/^c010361c:	c0 $/;"	l
c010361d	obj/kernel.asm	/^c010361d:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103624	obj/kernel.asm	/^c0103624:	c0 $/;"	l
c0103625	obj/kernel.asm	/^c0103625:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)$/;"	l
c010362c	obj/kernel.asm	/^c010362c:	00 $/;"	l
c010362d	obj/kernel.asm	/^c010362d:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103634	obj/kernel.asm	/^c0103634:	e8 8f d8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103639	obj/kernel.asm	/^c0103639:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010363c	obj/kernel.asm	/^c010363c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010363f	obj/kernel.asm	/^c010363f:	e9 dc 00 00 00       	jmp    c0103720 <default_init_memmap+0x117>$/;"	l
c0103644	obj/kernel.asm	/^c0103644:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103647	obj/kernel.asm	/^c0103647:	83 c0 04             	add    $0x4,%eax$/;"	l
c010364a	obj/kernel.asm	/^c010364a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0103651	obj/kernel.asm	/^c0103651:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103654	obj/kernel.asm	/^c0103654:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103657	obj/kernel.asm	/^c0103657:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010365a	obj/kernel.asm	/^c010365a:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010365d	obj/kernel.asm	/^c010365d:	19 c0                	sbb    %eax,%eax$/;"	l
c010365f	obj/kernel.asm	/^c010365f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103662	obj/kernel.asm	/^c0103662:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0103666	obj/kernel.asm	/^c0103666:	0f 95 c0             	setne  %al$/;"	l
c0103669	obj/kernel.asm	/^c0103669:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010366c	obj/kernel.asm	/^c010366c:	85 c0                	test   %eax,%eax$/;"	l
c010366e	obj/kernel.asm	/^c010366e:	75 24                	jne    c0103694 <default_init_memmap+0x8b>$/;"	l
c0103670	obj/kernel.asm	/^c0103670:	c7 44 24 0c 01 5f 11 	movl   $0xc0115f01,0xc(%esp)$/;"	l
c0103677	obj/kernel.asm	/^c0103677:	c0 $/;"	l
c0103678	obj/kernel.asm	/^c0103678:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010367f	obj/kernel.asm	/^c010367f:	c0 $/;"	l
c0103680	obj/kernel.asm	/^c0103680:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
c0103687	obj/kernel.asm	/^c0103687:	00 $/;"	l
c0103688	obj/kernel.asm	/^c0103688:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c010368f	obj/kernel.asm	/^c010368f:	e8 34 d8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103694	obj/kernel.asm	/^c0103694:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103697	obj/kernel.asm	/^c0103697:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010369e	obj/kernel.asm	/^c010369e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036a1	obj/kernel.asm	/^c01036a1:	83 c0 04             	add    $0x4,%eax$/;"	l
c01036a4	obj/kernel.asm	/^c01036a4:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c01036ab	obj/kernel.asm	/^c01036ab:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01036ae	obj/kernel.asm	/^c01036ae:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01036b1	obj/kernel.asm	/^c01036b1:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01036b4	obj/kernel.asm	/^c01036b4:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01036b7	obj/kernel.asm	/^c01036b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036ba	obj/kernel.asm	/^c01036ba:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01036c1	obj/kernel.asm	/^c01036c1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01036c8	obj/kernel.asm	/^c01036c8:	00 $/;"	l
c01036c9	obj/kernel.asm	/^c01036c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036cc	obj/kernel.asm	/^c01036cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01036cf	obj/kernel.asm	/^c01036cf:	e8 fb fe ff ff       	call   c01035cf <set_page_ref>$/;"	l
c01036d4	obj/kernel.asm	/^c01036d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036d7	obj/kernel.asm	/^c01036d7:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01036da	obj/kernel.asm	/^c01036da:	c7 45 dc 14 30 15 c0 	movl   $0xc0153014,-0x24(%ebp)$/;"	l
c01036e1	obj/kernel.asm	/^c01036e1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01036e4	obj/kernel.asm	/^c01036e4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01036e7	obj/kernel.asm	/^c01036e7:	8b 00                	mov    (%eax),%eax$/;"	l
c01036e9	obj/kernel.asm	/^c01036e9:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01036ec	obj/kernel.asm	/^c01036ec:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01036ef	obj/kernel.asm	/^c01036ef:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01036f2	obj/kernel.asm	/^c01036f2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01036f5	obj/kernel.asm	/^c01036f5:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01036f8	obj/kernel.asm	/^c01036f8:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01036fb	obj/kernel.asm	/^c01036fb:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01036fe	obj/kernel.asm	/^c01036fe:	89 10                	mov    %edx,(%eax)$/;"	l
c0103700	obj/kernel.asm	/^c0103700:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103703	obj/kernel.asm	/^c0103703:	8b 10                	mov    (%eax),%edx$/;"	l
c0103705	obj/kernel.asm	/^c0103705:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103708	obj/kernel.asm	/^c0103708:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010370b	obj/kernel.asm	/^c010370b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010370e	obj/kernel.asm	/^c010370e:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103711	obj/kernel.asm	/^c0103711:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103714	obj/kernel.asm	/^c0103714:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0103717	obj/kernel.asm	/^c0103717:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010371a	obj/kernel.asm	/^c010371a:	89 10                	mov    %edx,(%eax)$/;"	l
c010371c	obj/kernel.asm	/^c010371c:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0103720	obj/kernel.asm	/^c0103720:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103723	obj/kernel.asm	/^c0103723:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103726	obj/kernel.asm	/^c0103726:	89 c2                	mov    %eax,%edx$/;"	l
c0103728	obj/kernel.asm	/^c0103728:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010372b	obj/kernel.asm	/^c010372b:	01 d0                	add    %edx,%eax$/;"	l
c010372d	obj/kernel.asm	/^c010372d:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103730	obj/kernel.asm	/^c0103730:	0f 85 0e ff ff ff    	jne    c0103644 <default_init_memmap+0x3b>$/;"	l
c0103736	obj/kernel.asm	/^c0103736:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103739	obj/kernel.asm	/^c0103739:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010373c	obj/kernel.asm	/^c010373c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010373f	obj/kernel.asm	/^c010373f:	8b 15 1c 30 15 c0    	mov    0xc015301c,%edx$/;"	l
c0103745	obj/kernel.asm	/^c0103745:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103748	obj/kernel.asm	/^c0103748:	01 d0                	add    %edx,%eax$/;"	l
c010374a	obj/kernel.asm	/^c010374a:	a3 1c 30 15 c0       	mov    %eax,0xc015301c$/;"	l
c010374f	obj/kernel.asm	/^c010374f:	c9                   	leave  $/;"	l
c0103750	obj/kernel.asm	/^c0103750:	c3                   	ret    $/;"	l
c0103751	obj/kernel.asm	/^c0103751 <default_alloc_pages>:$/;"	l
c0103751	obj/kernel.asm	/^c0103751:	55                   	push   %ebp$/;"	l
c0103752	obj/kernel.asm	/^c0103752:	89 e5                	mov    %esp,%ebp$/;"	l
c0103754	obj/kernel.asm	/^c0103754:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0103757	obj/kernel.asm	/^c0103757:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010375b	obj/kernel.asm	/^c010375b:	75 24                	jne    c0103781 <default_alloc_pages+0x30>$/;"	l
c010375d	obj/kernel.asm	/^c010375d:	c7 44 24 0c d0 5e 11 	movl   $0xc0115ed0,0xc(%esp)$/;"	l
c0103764	obj/kernel.asm	/^c0103764:	c0 $/;"	l
c0103765	obj/kernel.asm	/^c0103765:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010376c	obj/kernel.asm	/^c010376c:	c0 $/;"	l
c010376d	obj/kernel.asm	/^c010376d:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
c0103774	obj/kernel.asm	/^c0103774:	00 $/;"	l
c0103775	obj/kernel.asm	/^c0103775:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c010377c	obj/kernel.asm	/^c010377c:	e8 47 d7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103781	obj/kernel.asm	/^c0103781:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c0103786	obj/kernel.asm	/^c0103786:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103789	obj/kernel.asm	/^c0103789:	73 0a                	jae    c0103795 <default_alloc_pages+0x44>$/;"	l
c010378b	obj/kernel.asm	/^c010378b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0103790	obj/kernel.asm	/^c0103790:	e9 37 01 00 00       	jmp    c01038cc <default_alloc_pages+0x17b>$/;"	l
c0103795	obj/kernel.asm	/^c0103795:	c7 45 f4 14 30 15 c0 	movl   $0xc0153014,-0xc(%ebp)$/;"	l
c010379c	obj/kernel.asm	/^c010379c:	e9 0a 01 00 00       	jmp    c01038ab <default_alloc_pages+0x15a>$/;"	l
c01037a1	obj/kernel.asm	/^c01037a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037a4	obj/kernel.asm	/^c01037a4:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01037a7	obj/kernel.asm	/^c01037a7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01037aa	obj/kernel.asm	/^c01037aa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01037ad	obj/kernel.asm	/^c01037ad:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01037b0	obj/kernel.asm	/^c01037b0:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01037b3	obj/kernel.asm	/^c01037b3:	0f 82 f2 00 00 00    	jb     c01038ab <default_alloc_pages+0x15a>$/;"	l
c01037b9	obj/kernel.asm	/^c01037b9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01037c0	obj/kernel.asm	/^c01037c0:	eb 7c                	jmp    c010383e <default_alloc_pages+0xed>$/;"	l
c01037c2	obj/kernel.asm	/^c01037c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037c5	obj/kernel.asm	/^c01037c5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01037c8	obj/kernel.asm	/^c01037c8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01037cb	obj/kernel.asm	/^c01037cb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01037ce	obj/kernel.asm	/^c01037ce:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01037d1	obj/kernel.asm	/^c01037d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037d4	obj/kernel.asm	/^c01037d4:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01037d7	obj/kernel.asm	/^c01037d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01037da	obj/kernel.asm	/^c01037da:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01037dd	obj/kernel.asm	/^c01037dd:	83 c0 04             	add    $0x4,%eax$/;"	l
c01037e0	obj/kernel.asm	/^c01037e0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01037e7	obj/kernel.asm	/^c01037e7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01037ea	obj/kernel.asm	/^c01037ea:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01037ed	obj/kernel.asm	/^c01037ed:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01037f0	obj/kernel.asm	/^c01037f0:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01037f3	obj/kernel.asm	/^c01037f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01037f6	obj/kernel.asm	/^c01037f6:	83 c0 04             	add    $0x4,%eax$/;"	l
c01037f9	obj/kernel.asm	/^c01037f9:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
c0103800	obj/kernel.asm	/^c0103800:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103803	obj/kernel.asm	/^c0103803:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103806	obj/kernel.asm	/^c0103806:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103809	obj/kernel.asm	/^c0103809:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c010380c	obj/kernel.asm	/^c010380c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010380f	obj/kernel.asm	/^c010380f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0103812	obj/kernel.asm	/^c0103812:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0103815	obj/kernel.asm	/^c0103815:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103818	obj/kernel.asm	/^c0103818:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010381b	obj/kernel.asm	/^c010381b:	8b 12                	mov    (%edx),%edx$/;"	l
c010381d	obj/kernel.asm	/^c010381d:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0103820	obj/kernel.asm	/^c0103820:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0103823	obj/kernel.asm	/^c0103823:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103826	obj/kernel.asm	/^c0103826:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0103829	obj/kernel.asm	/^c0103829:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010382c	obj/kernel.asm	/^c010382c:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010382f	obj/kernel.asm	/^c010382f:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0103832	obj/kernel.asm	/^c0103832:	89 10                	mov    %edx,(%eax)$/;"	l
c0103834	obj/kernel.asm	/^c0103834:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103837	obj/kernel.asm	/^c0103837:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010383a	obj/kernel.asm	/^c010383a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c010383e	obj/kernel.asm	/^c010383e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103841	obj/kernel.asm	/^c0103841:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103844	obj/kernel.asm	/^c0103844:	0f 82 78 ff ff ff    	jb     c01037c2 <default_alloc_pages+0x71>$/;"	l
c010384a	obj/kernel.asm	/^c010384a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010384d	obj/kernel.asm	/^c010384d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103850	obj/kernel.asm	/^c0103850:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103853	obj/kernel.asm	/^c0103853:	76 12                	jbe    c0103867 <default_alloc_pages+0x116>$/;"	l
c0103855	obj/kernel.asm	/^c0103855:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103858	obj/kernel.asm	/^c0103858:	8d 50 f4             	lea    -0xc(%eax),%edx$/;"	l
c010385b	obj/kernel.asm	/^c010385b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010385e	obj/kernel.asm	/^c010385e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103861	obj/kernel.asm	/^c0103861:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0103864	obj/kernel.asm	/^c0103864:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0103867	obj/kernel.asm	/^c0103867:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010386a	obj/kernel.asm	/^c010386a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010386d	obj/kernel.asm	/^c010386d:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0103874	obj/kernel.asm	/^c0103874:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0103877	obj/kernel.asm	/^c0103877:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010387a	obj/kernel.asm	/^c010387a:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010387d	obj/kernel.asm	/^c010387d:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0103880	obj/kernel.asm	/^c0103880:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103883	obj/kernel.asm	/^c0103883:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103886	obj/kernel.asm	/^c0103886:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)$/;"	l
c010388d	obj/kernel.asm	/^c010388d:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0103890	obj/kernel.asm	/^c0103890:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0103893	obj/kernel.asm	/^c0103893:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0103896	obj/kernel.asm	/^c0103896:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103899	obj/kernel.asm	/^c0103899:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c010389e	obj/kernel.asm	/^c010389e:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c01038a1	obj/kernel.asm	/^c01038a1:	a3 1c 30 15 c0       	mov    %eax,0xc015301c$/;"	l
c01038a6	obj/kernel.asm	/^c01038a6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01038a9	obj/kernel.asm	/^c01038a9:	eb 21                	jmp    c01038cc <default_alloc_pages+0x17b>$/;"	l
c01038ab	obj/kernel.asm	/^c01038ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01038ae	obj/kernel.asm	/^c01038ae:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01038b1	obj/kernel.asm	/^c01038b1:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01038b4	obj/kernel.asm	/^c01038b4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01038b7	obj/kernel.asm	/^c01038b7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01038ba	obj/kernel.asm	/^c01038ba:	81 7d f4 14 30 15 c0 	cmpl   $0xc0153014,-0xc(%ebp)$/;"	l
c01038c1	obj/kernel.asm	/^c01038c1:	0f 85 da fe ff ff    	jne    c01037a1 <default_alloc_pages+0x50>$/;"	l
c01038c7	obj/kernel.asm	/^c01038c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01038cc	obj/kernel.asm	/^c01038cc:	c9                   	leave  $/;"	l
c01038cd	obj/kernel.asm	/^c01038cd:	c3                   	ret    $/;"	l
c01038ce	obj/kernel.asm	/^c01038ce <default_free_pages>:$/;"	l
c01038ce	obj/kernel.asm	/^c01038ce:	55                   	push   %ebp$/;"	l
c01038cf	obj/kernel.asm	/^c01038cf:	89 e5                	mov    %esp,%ebp$/;"	l
c01038d1	obj/kernel.asm	/^c01038d1:	83 ec 68             	sub    $0x68,%esp$/;"	l
c01038d4	obj/kernel.asm	/^c01038d4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01038d8	obj/kernel.asm	/^c01038d8:	75 24                	jne    c01038fe <default_free_pages+0x30>$/;"	l
c01038da	obj/kernel.asm	/^c01038da:	c7 44 24 0c d0 5e 11 	movl   $0xc0115ed0,0xc(%esp)$/;"	l
c01038e1	obj/kernel.asm	/^c01038e1:	c0 $/;"	l
c01038e2	obj/kernel.asm	/^c01038e2:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c01038e9	obj/kernel.asm	/^c01038e9:	c0 $/;"	l
c01038ea	obj/kernel.asm	/^c01038ea:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
c01038f1	obj/kernel.asm	/^c01038f1:	00 $/;"	l
c01038f2	obj/kernel.asm	/^c01038f2:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c01038f9	obj/kernel.asm	/^c01038f9:	e8 ca d5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01038fe	obj/kernel.asm	/^c01038fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103901	obj/kernel.asm	/^c0103901:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103904	obj/kernel.asm	/^c0103904:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010390b	obj/kernel.asm	/^c010390b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010390e	obj/kernel.asm	/^c010390e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103911	obj/kernel.asm	/^c0103911:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0103914	obj/kernel.asm	/^c0103914:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0103917	obj/kernel.asm	/^c0103917:	19 c0                	sbb    %eax,%eax$/;"	l
c0103919	obj/kernel.asm	/^c0103919:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010391c	obj/kernel.asm	/^c010391c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103920	obj/kernel.asm	/^c0103920:	0f 95 c0             	setne  %al$/;"	l
c0103923	obj/kernel.asm	/^c0103923:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103926	obj/kernel.asm	/^c0103926:	85 c0                	test   %eax,%eax$/;"	l
c0103928	obj/kernel.asm	/^c0103928:	75 24                	jne    c010394e <default_free_pages+0x80>$/;"	l
c010392a	obj/kernel.asm	/^c010392a:	c7 44 24 0c 11 5f 11 	movl   $0xc0115f11,0xc(%esp)$/;"	l
c0103931	obj/kernel.asm	/^c0103931:	c0 $/;"	l
c0103932	obj/kernel.asm	/^c0103932:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103939	obj/kernel.asm	/^c0103939:	c0 $/;"	l
c010393a	obj/kernel.asm	/^c010393a:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
c0103941	obj/kernel.asm	/^c0103941:	00 $/;"	l
c0103942	obj/kernel.asm	/^c0103942:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103949	obj/kernel.asm	/^c0103949:	e8 7a d5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010394e	obj/kernel.asm	/^c010394e:	c7 45 f4 14 30 15 c0 	movl   $0xc0153014,-0xc(%ebp)$/;"	l
c0103955	obj/kernel.asm	/^c0103955:	eb 13                	jmp    c010396a <default_free_pages+0x9c>$/;"	l
c0103957	obj/kernel.asm	/^c0103957:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010395a	obj/kernel.asm	/^c010395a:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010395d	obj/kernel.asm	/^c010395d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103960	obj/kernel.asm	/^c0103960:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103963	obj/kernel.asm	/^c0103963:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0103966	obj/kernel.asm	/^c0103966:	76 02                	jbe    c010396a <default_free_pages+0x9c>$/;"	l
c0103968	obj/kernel.asm	/^c0103968:	eb 18                	jmp    c0103982 <default_free_pages+0xb4>$/;"	l
c010396a	obj/kernel.asm	/^c010396a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010396d	obj/kernel.asm	/^c010396d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103970	obj/kernel.asm	/^c0103970:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103973	obj/kernel.asm	/^c0103973:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103976	obj/kernel.asm	/^c0103976:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103979	obj/kernel.asm	/^c0103979:	81 7d f4 14 30 15 c0 	cmpl   $0xc0153014,-0xc(%ebp)$/;"	l
c0103980	obj/kernel.asm	/^c0103980:	75 d5                	jne    c0103957 <default_free_pages+0x89>$/;"	l
c0103982	obj/kernel.asm	/^c0103982:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103985	obj/kernel.asm	/^c0103985:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103988	obj/kernel.asm	/^c0103988:	eb 4b                	jmp    c01039d5 <default_free_pages+0x107>$/;"	l
c010398a	obj/kernel.asm	/^c010398a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010398d	obj/kernel.asm	/^c010398d:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0103990	obj/kernel.asm	/^c0103990:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103993	obj/kernel.asm	/^c0103993:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0103996	obj/kernel.asm	/^c0103996:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c0103999	obj/kernel.asm	/^c0103999:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010399c	obj/kernel.asm	/^c010399c:	8b 00                	mov    (%eax),%eax$/;"	l
c010399e	obj/kernel.asm	/^c010399e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01039a1	obj/kernel.asm	/^c01039a1:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01039a4	obj/kernel.asm	/^c01039a4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01039a7	obj/kernel.asm	/^c01039a7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01039aa	obj/kernel.asm	/^c01039aa:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01039ad	obj/kernel.asm	/^c01039ad:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01039b0	obj/kernel.asm	/^c01039b0:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01039b3	obj/kernel.asm	/^c01039b3:	89 10                	mov    %edx,(%eax)$/;"	l
c01039b5	obj/kernel.asm	/^c01039b5:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01039b8	obj/kernel.asm	/^c01039b8:	8b 10                	mov    (%eax),%edx$/;"	l
c01039ba	obj/kernel.asm	/^c01039ba:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01039bd	obj/kernel.asm	/^c01039bd:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01039c0	obj/kernel.asm	/^c01039c0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01039c3	obj/kernel.asm	/^c01039c3:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01039c6	obj/kernel.asm	/^c01039c6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01039c9	obj/kernel.asm	/^c01039c9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01039cc	obj/kernel.asm	/^c01039cc:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01039cf	obj/kernel.asm	/^c01039cf:	89 10                	mov    %edx,(%eax)$/;"	l
c01039d1	obj/kernel.asm	/^c01039d1:	83 45 f0 20          	addl   $0x20,-0x10(%ebp)$/;"	l
c01039d5	obj/kernel.asm	/^c01039d5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01039d8	obj/kernel.asm	/^c01039d8:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c01039db	obj/kernel.asm	/^c01039db:	89 c2                	mov    %eax,%edx$/;"	l
c01039dd	obj/kernel.asm	/^c01039dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039e0	obj/kernel.asm	/^c01039e0:	01 d0                	add    %edx,%eax$/;"	l
c01039e2	obj/kernel.asm	/^c01039e2:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01039e5	obj/kernel.asm	/^c01039e5:	77 a3                	ja     c010398a <default_free_pages+0xbc>$/;"	l
c01039e7	obj/kernel.asm	/^c01039e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039ea	obj/kernel.asm	/^c01039ea:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c01039f1	obj/kernel.asm	/^c01039f1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01039f8	obj/kernel.asm	/^c01039f8:	00 $/;"	l
c01039f9	obj/kernel.asm	/^c01039f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01039fc	obj/kernel.asm	/^c01039fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01039ff	obj/kernel.asm	/^c01039ff:	e8 cb fb ff ff       	call   c01035cf <set_page_ref>$/;"	l
c0103a04	obj/kernel.asm	/^c0103a04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a07	obj/kernel.asm	/^c0103a07:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103a0a	obj/kernel.asm	/^c0103a0a:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)$/;"	l
c0103a11	obj/kernel.asm	/^c0103a11:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0103a14	obj/kernel.asm	/^c0103a14:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103a17	obj/kernel.asm	/^c0103a17:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0103a1a	obj/kernel.asm	/^c0103a1a:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0103a1d	obj/kernel.asm	/^c0103a1d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a20	obj/kernel.asm	/^c0103a20:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103a23	obj/kernel.asm	/^c0103a23:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0103a2a	obj/kernel.asm	/^c0103a2a:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0103a2d	obj/kernel.asm	/^c0103a2d:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0103a30	obj/kernel.asm	/^c0103a30:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0103a33	obj/kernel.asm	/^c0103a33:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103a36	obj/kernel.asm	/^c0103a36:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a39	obj/kernel.asm	/^c0103a39:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103a3c	obj/kernel.asm	/^c0103a3c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103a3f	obj/kernel.asm	/^c0103a3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a42	obj/kernel.asm	/^c0103a42:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103a45	obj/kernel.asm	/^c0103a45:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a48	obj/kernel.asm	/^c0103a48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103a4b	obj/kernel.asm	/^c0103a4b:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103a4e	obj/kernel.asm	/^c0103a4e:	89 c2                	mov    %eax,%edx$/;"	l
c0103a50	obj/kernel.asm	/^c0103a50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a53	obj/kernel.asm	/^c0103a53:	01 d0                	add    %edx,%eax$/;"	l
c0103a55	obj/kernel.asm	/^c0103a55:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103a58	obj/kernel.asm	/^c0103a58:	75 1e                	jne    c0103a78 <default_free_pages+0x1aa>$/;"	l
c0103a5a	obj/kernel.asm	/^c0103a5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a5d	obj/kernel.asm	/^c0103a5d:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103a60	obj/kernel.asm	/^c0103a60:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a63	obj/kernel.asm	/^c0103a63:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103a66	obj/kernel.asm	/^c0103a66:	01 c2                	add    %eax,%edx$/;"	l
c0103a68	obj/kernel.asm	/^c0103a68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a6b	obj/kernel.asm	/^c0103a6b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103a6e	obj/kernel.asm	/^c0103a6e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a71	obj/kernel.asm	/^c0103a71:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0103a78	obj/kernel.asm	/^c0103a78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a7b	obj/kernel.asm	/^c0103a7b:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0103a7e	obj/kernel.asm	/^c0103a7e:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0103a81	obj/kernel.asm	/^c0103a81:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0103a84	obj/kernel.asm	/^c0103a84:	8b 00                	mov    (%eax),%eax$/;"	l
c0103a86	obj/kernel.asm	/^c0103a86:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103a89	obj/kernel.asm	/^c0103a89:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103a8c	obj/kernel.asm	/^c0103a8c:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103a8f	obj/kernel.asm	/^c0103a8f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a92	obj/kernel.asm	/^c0103a92:	81 7d f4 14 30 15 c0 	cmpl   $0xc0153014,-0xc(%ebp)$/;"	l
c0103a99	obj/kernel.asm	/^c0103a99:	74 57                	je     c0103af2 <default_free_pages+0x224>$/;"	l
c0103a9b	obj/kernel.asm	/^c0103a9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103a9e	obj/kernel.asm	/^c0103a9e:	83 e8 20             	sub    $0x20,%eax$/;"	l
c0103aa1	obj/kernel.asm	/^c0103aa1:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103aa4	obj/kernel.asm	/^c0103aa4:	75 4c                	jne    c0103af2 <default_free_pages+0x224>$/;"	l
c0103aa6	obj/kernel.asm	/^c0103aa6:	eb 41                	jmp    c0103ae9 <default_free_pages+0x21b>$/;"	l
c0103aa8	obj/kernel.asm	/^c0103aa8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103aab	obj/kernel.asm	/^c0103aab:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103aae	obj/kernel.asm	/^c0103aae:	85 c0                	test   %eax,%eax$/;"	l
c0103ab0	obj/kernel.asm	/^c0103ab0:	74 20                	je     c0103ad2 <default_free_pages+0x204>$/;"	l
c0103ab2	obj/kernel.asm	/^c0103ab2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103ab5	obj/kernel.asm	/^c0103ab5:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103ab8	obj/kernel.asm	/^c0103ab8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103abb	obj/kernel.asm	/^c0103abb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103abe	obj/kernel.asm	/^c0103abe:	01 c2                	add    %eax,%edx$/;"	l
c0103ac0	obj/kernel.asm	/^c0103ac0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103ac3	obj/kernel.asm	/^c0103ac3:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0103ac6	obj/kernel.asm	/^c0103ac6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103ac9	obj/kernel.asm	/^c0103ac9:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0103ad0	obj/kernel.asm	/^c0103ad0:	eb 20                	jmp    c0103af2 <default_free_pages+0x224>$/;"	l
c0103ad2	obj/kernel.asm	/^c0103ad2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103ad5	obj/kernel.asm	/^c0103ad5:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0103ad8	obj/kernel.asm	/^c0103ad8:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0103adb	obj/kernel.asm	/^c0103adb:	8b 00                	mov    (%eax),%eax$/;"	l
c0103add	obj/kernel.asm	/^c0103add:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103ae0	obj/kernel.asm	/^c0103ae0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103ae3	obj/kernel.asm	/^c0103ae3:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0103ae6	obj/kernel.asm	/^c0103ae6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103ae9	obj/kernel.asm	/^c0103ae9:	81 7d f4 14 30 15 c0 	cmpl   $0xc0153014,-0xc(%ebp)$/;"	l
c0103af0	obj/kernel.asm	/^c0103af0:	75 b6                	jne    c0103aa8 <default_free_pages+0x1da>$/;"	l
c0103af2	obj/kernel.asm	/^c0103af2:	8b 15 1c 30 15 c0    	mov    0xc015301c,%edx$/;"	l
c0103af8	obj/kernel.asm	/^c0103af8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103afb	obj/kernel.asm	/^c0103afb:	01 d0                	add    %edx,%eax$/;"	l
c0103afd	obj/kernel.asm	/^c0103afd:	a3 1c 30 15 c0       	mov    %eax,0xc015301c$/;"	l
c0103b02	obj/kernel.asm	/^c0103b02:	90                   	nop$/;"	l
c0103b03	obj/kernel.asm	/^c0103b03:	c9                   	leave  $/;"	l
c0103b04	obj/kernel.asm	/^c0103b04:	c3                   	ret    $/;"	l
c0103b05	obj/kernel.asm	/^c0103b05 <default_nr_free_pages>:$/;"	l
c0103b05	obj/kernel.asm	/^c0103b05:	55                   	push   %ebp$/;"	l
c0103b06	obj/kernel.asm	/^c0103b06:	89 e5                	mov    %esp,%ebp$/;"	l
c0103b08	obj/kernel.asm	/^c0103b08:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c0103b0d	obj/kernel.asm	/^c0103b0d:	5d                   	pop    %ebp$/;"	l
c0103b0e	obj/kernel.asm	/^c0103b0e:	c3                   	ret    $/;"	l
c0103b0f	obj/kernel.asm	/^c0103b0f <basic_check>:$/;"	l
c0103b0f	obj/kernel.asm	/^c0103b0f:	55                   	push   %ebp$/;"	l
c0103b10	obj/kernel.asm	/^c0103b10:	89 e5                	mov    %esp,%ebp$/;"	l
c0103b12	obj/kernel.asm	/^c0103b12:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0103b15	obj/kernel.asm	/^c0103b15:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0103b1c	obj/kernel.asm	/^c0103b1c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103b1f	obj/kernel.asm	/^c0103b1f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103b22	obj/kernel.asm	/^c0103b22:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103b25	obj/kernel.asm	/^c0103b25:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103b28	obj/kernel.asm	/^c0103b28:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103b2f	obj/kernel.asm	/^c0103b2f:	e8 dc 15 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103b34	obj/kernel.asm	/^c0103b34:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103b37	obj/kernel.asm	/^c0103b37:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0103b3b	obj/kernel.asm	/^c0103b3b:	75 24                	jne    c0103b61 <basic_check+0x52>$/;"	l
c0103b3d	obj/kernel.asm	/^c0103b3d:	c7 44 24 0c 24 5f 11 	movl   $0xc0115f24,0xc(%esp)$/;"	l
c0103b44	obj/kernel.asm	/^c0103b44:	c0 $/;"	l
c0103b45	obj/kernel.asm	/^c0103b45:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103b4c	obj/kernel.asm	/^c0103b4c:	c0 $/;"	l
c0103b4d	obj/kernel.asm	/^c0103b4d:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
c0103b54	obj/kernel.asm	/^c0103b54:	00 $/;"	l
c0103b55	obj/kernel.asm	/^c0103b55:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103b5c	obj/kernel.asm	/^c0103b5c:	e8 67 d3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103b61	obj/kernel.asm	/^c0103b61:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103b68	obj/kernel.asm	/^c0103b68:	e8 a3 15 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103b6d	obj/kernel.asm	/^c0103b6d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103b70	obj/kernel.asm	/^c0103b70:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103b74	obj/kernel.asm	/^c0103b74:	75 24                	jne    c0103b9a <basic_check+0x8b>$/;"	l
c0103b76	obj/kernel.asm	/^c0103b76:	c7 44 24 0c 40 5f 11 	movl   $0xc0115f40,0xc(%esp)$/;"	l
c0103b7d	obj/kernel.asm	/^c0103b7d:	c0 $/;"	l
c0103b7e	obj/kernel.asm	/^c0103b7e:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103b85	obj/kernel.asm	/^c0103b85:	c0 $/;"	l
c0103b86	obj/kernel.asm	/^c0103b86:	c7 44 24 04 ae 00 00 	movl   $0xae,0x4(%esp)$/;"	l
c0103b8d	obj/kernel.asm	/^c0103b8d:	00 $/;"	l
c0103b8e	obj/kernel.asm	/^c0103b8e:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103b95	obj/kernel.asm	/^c0103b95:	e8 2e d3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103b9a	obj/kernel.asm	/^c0103b9a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ba1	obj/kernel.asm	/^c0103ba1:	e8 6a 15 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103ba6	obj/kernel.asm	/^c0103ba6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103ba9	obj/kernel.asm	/^c0103ba9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103bad	obj/kernel.asm	/^c0103bad:	75 24                	jne    c0103bd3 <basic_check+0xc4>$/;"	l
c0103baf	obj/kernel.asm	/^c0103baf:	c7 44 24 0c 5c 5f 11 	movl   $0xc0115f5c,0xc(%esp)$/;"	l
c0103bb6	obj/kernel.asm	/^c0103bb6:	c0 $/;"	l
c0103bb7	obj/kernel.asm	/^c0103bb7:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103bbe	obj/kernel.asm	/^c0103bbe:	c0 $/;"	l
c0103bbf	obj/kernel.asm	/^c0103bbf:	c7 44 24 04 af 00 00 	movl   $0xaf,0x4(%esp)$/;"	l
c0103bc6	obj/kernel.asm	/^c0103bc6:	00 $/;"	l
c0103bc7	obj/kernel.asm	/^c0103bc7:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103bce	obj/kernel.asm	/^c0103bce:	e8 f5 d2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103bd3	obj/kernel.asm	/^c0103bd3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103bd6	obj/kernel.asm	/^c0103bd6:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0103bd9	obj/kernel.asm	/^c0103bd9:	74 10                	je     c0103beb <basic_check+0xdc>$/;"	l
c0103bdb	obj/kernel.asm	/^c0103bdb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103bde	obj/kernel.asm	/^c0103bde:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103be1	obj/kernel.asm	/^c0103be1:	74 08                	je     c0103beb <basic_check+0xdc>$/;"	l
c0103be3	obj/kernel.asm	/^c0103be3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103be6	obj/kernel.asm	/^c0103be6:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0103be9	obj/kernel.asm	/^c0103be9:	75 24                	jne    c0103c0f <basic_check+0x100>$/;"	l
c0103beb	obj/kernel.asm	/^c0103beb:	c7 44 24 0c 78 5f 11 	movl   $0xc0115f78,0xc(%esp)$/;"	l
c0103bf2	obj/kernel.asm	/^c0103bf2:	c0 $/;"	l
c0103bf3	obj/kernel.asm	/^c0103bf3:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103bfa	obj/kernel.asm	/^c0103bfa:	c0 $/;"	l
c0103bfb	obj/kernel.asm	/^c0103bfb:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)$/;"	l
c0103c02	obj/kernel.asm	/^c0103c02:	00 $/;"	l
c0103c03	obj/kernel.asm	/^c0103c03:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103c0a	obj/kernel.asm	/^c0103c0a:	e8 b9 d2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103c0f	obj/kernel.asm	/^c0103c0f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103c12	obj/kernel.asm	/^c0103c12:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c15	obj/kernel.asm	/^c0103c15:	e8 ab f9 ff ff       	call   c01035c5 <page_ref>$/;"	l
c0103c1a	obj/kernel.asm	/^c0103c1a:	85 c0                	test   %eax,%eax$/;"	l
c0103c1c	obj/kernel.asm	/^c0103c1c:	75 1e                	jne    c0103c3c <basic_check+0x12d>$/;"	l
c0103c1e	obj/kernel.asm	/^c0103c1e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103c21	obj/kernel.asm	/^c0103c21:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c24	obj/kernel.asm	/^c0103c24:	e8 9c f9 ff ff       	call   c01035c5 <page_ref>$/;"	l
c0103c29	obj/kernel.asm	/^c0103c29:	85 c0                	test   %eax,%eax$/;"	l
c0103c2b	obj/kernel.asm	/^c0103c2b:	75 0f                	jne    c0103c3c <basic_check+0x12d>$/;"	l
c0103c2d	obj/kernel.asm	/^c0103c2d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103c30	obj/kernel.asm	/^c0103c30:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c33	obj/kernel.asm	/^c0103c33:	e8 8d f9 ff ff       	call   c01035c5 <page_ref>$/;"	l
c0103c38	obj/kernel.asm	/^c0103c38:	85 c0                	test   %eax,%eax$/;"	l
c0103c3a	obj/kernel.asm	/^c0103c3a:	74 24                	je     c0103c60 <basic_check+0x151>$/;"	l
c0103c3c	obj/kernel.asm	/^c0103c3c:	c7 44 24 0c 9c 5f 11 	movl   $0xc0115f9c,0xc(%esp)$/;"	l
c0103c43	obj/kernel.asm	/^c0103c43:	c0 $/;"	l
c0103c44	obj/kernel.asm	/^c0103c44:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103c4b	obj/kernel.asm	/^c0103c4b:	c0 $/;"	l
c0103c4c	obj/kernel.asm	/^c0103c4c:	c7 44 24 04 b2 00 00 	movl   $0xb2,0x4(%esp)$/;"	l
c0103c53	obj/kernel.asm	/^c0103c53:	00 $/;"	l
c0103c54	obj/kernel.asm	/^c0103c54:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103c5b	obj/kernel.asm	/^c0103c5b:	e8 68 d2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103c60	obj/kernel.asm	/^c0103c60:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103c63	obj/kernel.asm	/^c0103c63:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103c66	obj/kernel.asm	/^c0103c66:	e8 44 f9 ff ff       	call   c01035af <page2pa>$/;"	l
c0103c6b	obj/kernel.asm	/^c0103c6b:	8b 15 80 fe 14 c0    	mov    0xc014fe80,%edx$/;"	l
c0103c71	obj/kernel.asm	/^c0103c71:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103c74	obj/kernel.asm	/^c0103c74:	39 d0                	cmp    %edx,%eax$/;"	l
c0103c76	obj/kernel.asm	/^c0103c76:	72 24                	jb     c0103c9c <basic_check+0x18d>$/;"	l
c0103c78	obj/kernel.asm	/^c0103c78:	c7 44 24 0c d8 5f 11 	movl   $0xc0115fd8,0xc(%esp)$/;"	l
c0103c7f	obj/kernel.asm	/^c0103c7f:	c0 $/;"	l
c0103c80	obj/kernel.asm	/^c0103c80:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103c87	obj/kernel.asm	/^c0103c87:	c0 $/;"	l
c0103c88	obj/kernel.asm	/^c0103c88:	c7 44 24 04 b4 00 00 	movl   $0xb4,0x4(%esp)$/;"	l
c0103c8f	obj/kernel.asm	/^c0103c8f:	00 $/;"	l
c0103c90	obj/kernel.asm	/^c0103c90:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103c97	obj/kernel.asm	/^c0103c97:	e8 2c d2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103c9c	obj/kernel.asm	/^c0103c9c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103c9f	obj/kernel.asm	/^c0103c9f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103ca2	obj/kernel.asm	/^c0103ca2:	e8 08 f9 ff ff       	call   c01035af <page2pa>$/;"	l
c0103ca7	obj/kernel.asm	/^c0103ca7:	8b 15 80 fe 14 c0    	mov    0xc014fe80,%edx$/;"	l
c0103cad	obj/kernel.asm	/^c0103cad:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103cb0	obj/kernel.asm	/^c0103cb0:	39 d0                	cmp    %edx,%eax$/;"	l
c0103cb2	obj/kernel.asm	/^c0103cb2:	72 24                	jb     c0103cd8 <basic_check+0x1c9>$/;"	l
c0103cb4	obj/kernel.asm	/^c0103cb4:	c7 44 24 0c f5 5f 11 	movl   $0xc0115ff5,0xc(%esp)$/;"	l
c0103cbb	obj/kernel.asm	/^c0103cbb:	c0 $/;"	l
c0103cbc	obj/kernel.asm	/^c0103cbc:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103cc3	obj/kernel.asm	/^c0103cc3:	c0 $/;"	l
c0103cc4	obj/kernel.asm	/^c0103cc4:	c7 44 24 04 b5 00 00 	movl   $0xb5,0x4(%esp)$/;"	l
c0103ccb	obj/kernel.asm	/^c0103ccb:	00 $/;"	l
c0103ccc	obj/kernel.asm	/^c0103ccc:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103cd3	obj/kernel.asm	/^c0103cd3:	e8 f0 d1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103cd8	obj/kernel.asm	/^c0103cd8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103cdb	obj/kernel.asm	/^c0103cdb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103cde	obj/kernel.asm	/^c0103cde:	e8 cc f8 ff ff       	call   c01035af <page2pa>$/;"	l
c0103ce3	obj/kernel.asm	/^c0103ce3:	8b 15 80 fe 14 c0    	mov    0xc014fe80,%edx$/;"	l
c0103ce9	obj/kernel.asm	/^c0103ce9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0103cec	obj/kernel.asm	/^c0103cec:	39 d0                	cmp    %edx,%eax$/;"	l
c0103cee	obj/kernel.asm	/^c0103cee:	72 24                	jb     c0103d14 <basic_check+0x205>$/;"	l
c0103cf0	obj/kernel.asm	/^c0103cf0:	c7 44 24 0c 12 60 11 	movl   $0xc0116012,0xc(%esp)$/;"	l
c0103cf7	obj/kernel.asm	/^c0103cf7:	c0 $/;"	l
c0103cf8	obj/kernel.asm	/^c0103cf8:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103cff	obj/kernel.asm	/^c0103cff:	c0 $/;"	l
c0103d00	obj/kernel.asm	/^c0103d00:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
c0103d07	obj/kernel.asm	/^c0103d07:	00 $/;"	l
c0103d08	obj/kernel.asm	/^c0103d08:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103d0f	obj/kernel.asm	/^c0103d0f:	e8 b4 d1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103d14	obj/kernel.asm	/^c0103d14:	a1 14 30 15 c0       	mov    0xc0153014,%eax$/;"	l
c0103d19	obj/kernel.asm	/^c0103d19:	8b 15 18 30 15 c0    	mov    0xc0153018,%edx$/;"	l
c0103d1f	obj/kernel.asm	/^c0103d1f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103d22	obj/kernel.asm	/^c0103d22:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103d25	obj/kernel.asm	/^c0103d25:	c7 45 e0 14 30 15 c0 	movl   $0xc0153014,-0x20(%ebp)$/;"	l
c0103d2c	obj/kernel.asm	/^c0103d2c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103d2f	obj/kernel.asm	/^c0103d2f:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0103d32	obj/kernel.asm	/^c0103d32:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0103d35	obj/kernel.asm	/^c0103d35:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103d38	obj/kernel.asm	/^c0103d38:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0103d3b	obj/kernel.asm	/^c0103d3b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103d3e	obj/kernel.asm	/^c0103d3e:	89 10                	mov    %edx,(%eax)$/;"	l
c0103d40	obj/kernel.asm	/^c0103d40:	c7 45 dc 14 30 15 c0 	movl   $0xc0153014,-0x24(%ebp)$/;"	l
c0103d47	obj/kernel.asm	/^c0103d47:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0103d4a	obj/kernel.asm	/^c0103d4a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103d4d	obj/kernel.asm	/^c0103d4d:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0103d50	obj/kernel.asm	/^c0103d50:	0f 94 c0             	sete   %al$/;"	l
c0103d53	obj/kernel.asm	/^c0103d53:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103d56	obj/kernel.asm	/^c0103d56:	85 c0                	test   %eax,%eax$/;"	l
c0103d58	obj/kernel.asm	/^c0103d58:	75 24                	jne    c0103d7e <basic_check+0x26f>$/;"	l
c0103d5a	obj/kernel.asm	/^c0103d5a:	c7 44 24 0c 2f 60 11 	movl   $0xc011602f,0xc(%esp)$/;"	l
c0103d61	obj/kernel.asm	/^c0103d61:	c0 $/;"	l
c0103d62	obj/kernel.asm	/^c0103d62:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103d69	obj/kernel.asm	/^c0103d69:	c0 $/;"	l
c0103d6a	obj/kernel.asm	/^c0103d6a:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
c0103d71	obj/kernel.asm	/^c0103d71:	00 $/;"	l
c0103d72	obj/kernel.asm	/^c0103d72:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103d79	obj/kernel.asm	/^c0103d79:	e8 4a d1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103d7e	obj/kernel.asm	/^c0103d7e:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c0103d83	obj/kernel.asm	/^c0103d83:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103d86	obj/kernel.asm	/^c0103d86:	c7 05 1c 30 15 c0 00 	movl   $0x0,0xc015301c$/;"	l
c0103d8d	obj/kernel.asm	/^c0103d8d:	00 00 00 $/;"	l
c0103d90	obj/kernel.asm	/^c0103d90:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103d97	obj/kernel.asm	/^c0103d97:	e8 74 13 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103d9c	obj/kernel.asm	/^c0103d9c:	85 c0                	test   %eax,%eax$/;"	l
c0103d9e	obj/kernel.asm	/^c0103d9e:	74 24                	je     c0103dc4 <basic_check+0x2b5>$/;"	l
c0103da0	obj/kernel.asm	/^c0103da0:	c7 44 24 0c 46 60 11 	movl   $0xc0116046,0xc(%esp)$/;"	l
c0103da7	obj/kernel.asm	/^c0103da7:	c0 $/;"	l
c0103da8	obj/kernel.asm	/^c0103da8:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103daf	obj/kernel.asm	/^c0103daf:	c0 $/;"	l
c0103db0	obj/kernel.asm	/^c0103db0:	c7 44 24 04 bf 00 00 	movl   $0xbf,0x4(%esp)$/;"	l
c0103db7	obj/kernel.asm	/^c0103db7:	00 $/;"	l
c0103db8	obj/kernel.asm	/^c0103db8:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103dbf	obj/kernel.asm	/^c0103dbf:	e8 04 d1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103dc4	obj/kernel.asm	/^c0103dc4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103dcb	obj/kernel.asm	/^c0103dcb:	00 $/;"	l
c0103dcc	obj/kernel.asm	/^c0103dcc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103dcf	obj/kernel.asm	/^c0103dcf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103dd2	obj/kernel.asm	/^c0103dd2:	e8 a4 13 00 00       	call   c010517b <free_pages>$/;"	l
c0103dd7	obj/kernel.asm	/^c0103dd7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103dde	obj/kernel.asm	/^c0103dde:	00 $/;"	l
c0103ddf	obj/kernel.asm	/^c0103ddf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103de2	obj/kernel.asm	/^c0103de2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103de5	obj/kernel.asm	/^c0103de5:	e8 91 13 00 00       	call   c010517b <free_pages>$/;"	l
c0103dea	obj/kernel.asm	/^c0103dea:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103df1	obj/kernel.asm	/^c0103df1:	00 $/;"	l
c0103df2	obj/kernel.asm	/^c0103df2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103df5	obj/kernel.asm	/^c0103df5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103df8	obj/kernel.asm	/^c0103df8:	e8 7e 13 00 00       	call   c010517b <free_pages>$/;"	l
c0103dfd	obj/kernel.asm	/^c0103dfd:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c0103e02	obj/kernel.asm	/^c0103e02:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0103e05	obj/kernel.asm	/^c0103e05:	74 24                	je     c0103e2b <basic_check+0x31c>$/;"	l
c0103e07	obj/kernel.asm	/^c0103e07:	c7 44 24 0c 5b 60 11 	movl   $0xc011605b,0xc(%esp)$/;"	l
c0103e0e	obj/kernel.asm	/^c0103e0e:	c0 $/;"	l
c0103e0f	obj/kernel.asm	/^c0103e0f:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103e16	obj/kernel.asm	/^c0103e16:	c0 $/;"	l
c0103e17	obj/kernel.asm	/^c0103e17:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)$/;"	l
c0103e1e	obj/kernel.asm	/^c0103e1e:	00 $/;"	l
c0103e1f	obj/kernel.asm	/^c0103e1f:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103e26	obj/kernel.asm	/^c0103e26:	e8 9d d0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103e2b	obj/kernel.asm	/^c0103e2b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e32	obj/kernel.asm	/^c0103e32:	e8 d9 12 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103e37	obj/kernel.asm	/^c0103e37:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103e3a	obj/kernel.asm	/^c0103e3a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0103e3e	obj/kernel.asm	/^c0103e3e:	75 24                	jne    c0103e64 <basic_check+0x355>$/;"	l
c0103e40	obj/kernel.asm	/^c0103e40:	c7 44 24 0c 24 5f 11 	movl   $0xc0115f24,0xc(%esp)$/;"	l
c0103e47	obj/kernel.asm	/^c0103e47:	c0 $/;"	l
c0103e48	obj/kernel.asm	/^c0103e48:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103e4f	obj/kernel.asm	/^c0103e4f:	c0 $/;"	l
c0103e50	obj/kernel.asm	/^c0103e50:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c0103e57	obj/kernel.asm	/^c0103e57:	00 $/;"	l
c0103e58	obj/kernel.asm	/^c0103e58:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103e5f	obj/kernel.asm	/^c0103e5f:	e8 64 d0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103e64	obj/kernel.asm	/^c0103e64:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103e6b	obj/kernel.asm	/^c0103e6b:	e8 a0 12 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103e70	obj/kernel.asm	/^c0103e70:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103e73	obj/kernel.asm	/^c0103e73:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103e77	obj/kernel.asm	/^c0103e77:	75 24                	jne    c0103e9d <basic_check+0x38e>$/;"	l
c0103e79	obj/kernel.asm	/^c0103e79:	c7 44 24 0c 40 5f 11 	movl   $0xc0115f40,0xc(%esp)$/;"	l
c0103e80	obj/kernel.asm	/^c0103e80:	c0 $/;"	l
c0103e81	obj/kernel.asm	/^c0103e81:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103e88	obj/kernel.asm	/^c0103e88:	c0 $/;"	l
c0103e89	obj/kernel.asm	/^c0103e89:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)$/;"	l
c0103e90	obj/kernel.asm	/^c0103e90:	00 $/;"	l
c0103e91	obj/kernel.asm	/^c0103e91:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103e98	obj/kernel.asm	/^c0103e98:	e8 2b d0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103e9d	obj/kernel.asm	/^c0103e9d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103ea4	obj/kernel.asm	/^c0103ea4:	e8 67 12 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103ea9	obj/kernel.asm	/^c0103ea9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103eac	obj/kernel.asm	/^c0103eac:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103eb0	obj/kernel.asm	/^c0103eb0:	75 24                	jne    c0103ed6 <basic_check+0x3c7>$/;"	l
c0103eb2	obj/kernel.asm	/^c0103eb2:	c7 44 24 0c 5c 5f 11 	movl   $0xc0115f5c,0xc(%esp)$/;"	l
c0103eb9	obj/kernel.asm	/^c0103eb9:	c0 $/;"	l
c0103eba	obj/kernel.asm	/^c0103eba:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103ec1	obj/kernel.asm	/^c0103ec1:	c0 $/;"	l
c0103ec2	obj/kernel.asm	/^c0103ec2:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
c0103ec9	obj/kernel.asm	/^c0103ec9:	00 $/;"	l
c0103eca	obj/kernel.asm	/^c0103eca:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103ed1	obj/kernel.asm	/^c0103ed1:	e8 f2 cf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103ed6	obj/kernel.asm	/^c0103ed6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103edd	obj/kernel.asm	/^c0103edd:	e8 2e 12 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103ee2	obj/kernel.asm	/^c0103ee2:	85 c0                	test   %eax,%eax$/;"	l
c0103ee4	obj/kernel.asm	/^c0103ee4:	74 24                	je     c0103f0a <basic_check+0x3fb>$/;"	l
c0103ee6	obj/kernel.asm	/^c0103ee6:	c7 44 24 0c 46 60 11 	movl   $0xc0116046,0xc(%esp)$/;"	l
c0103eed	obj/kernel.asm	/^c0103eed:	c0 $/;"	l
c0103eee	obj/kernel.asm	/^c0103eee:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103ef5	obj/kernel.asm	/^c0103ef5:	c0 $/;"	l
c0103ef6	obj/kernel.asm	/^c0103ef6:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
c0103efd	obj/kernel.asm	/^c0103efd:	00 $/;"	l
c0103efe	obj/kernel.asm	/^c0103efe:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103f05	obj/kernel.asm	/^c0103f05:	e8 be cf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103f0a	obj/kernel.asm	/^c0103f0a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0103f11	obj/kernel.asm	/^c0103f11:	00 $/;"	l
c0103f12	obj/kernel.asm	/^c0103f12:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103f15	obj/kernel.asm	/^c0103f15:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103f18	obj/kernel.asm	/^c0103f18:	e8 5e 12 00 00       	call   c010517b <free_pages>$/;"	l
c0103f1d	obj/kernel.asm	/^c0103f1d:	c7 45 d8 14 30 15 c0 	movl   $0xc0153014,-0x28(%ebp)$/;"	l
c0103f24	obj/kernel.asm	/^c0103f24:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0103f27	obj/kernel.asm	/^c0103f27:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103f2a	obj/kernel.asm	/^c0103f2a:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c0103f2d	obj/kernel.asm	/^c0103f2d:	0f 94 c0             	sete   %al$/;"	l
c0103f30	obj/kernel.asm	/^c0103f30:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103f33	obj/kernel.asm	/^c0103f33:	85 c0                	test   %eax,%eax$/;"	l
c0103f35	obj/kernel.asm	/^c0103f35:	74 24                	je     c0103f5b <basic_check+0x44c>$/;"	l
c0103f37	obj/kernel.asm	/^c0103f37:	c7 44 24 0c 68 60 11 	movl   $0xc0116068,0xc(%esp)$/;"	l
c0103f3e	obj/kernel.asm	/^c0103f3e:	c0 $/;"	l
c0103f3f	obj/kernel.asm	/^c0103f3f:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103f46	obj/kernel.asm	/^c0103f46:	c0 $/;"	l
c0103f47	obj/kernel.asm	/^c0103f47:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c0103f4e	obj/kernel.asm	/^c0103f4e:	00 $/;"	l
c0103f4f	obj/kernel.asm	/^c0103f4f:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103f56	obj/kernel.asm	/^c0103f56:	e8 6d cf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103f5b	obj/kernel.asm	/^c0103f5b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103f62	obj/kernel.asm	/^c0103f62:	e8 a9 11 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103f67	obj/kernel.asm	/^c0103f67:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103f6a	obj/kernel.asm	/^c0103f6a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103f6d	obj/kernel.asm	/^c0103f6d:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0103f70	obj/kernel.asm	/^c0103f70:	74 24                	je     c0103f96 <basic_check+0x487>$/;"	l
c0103f72	obj/kernel.asm	/^c0103f72:	c7 44 24 0c 80 60 11 	movl   $0xc0116080,0xc(%esp)$/;"	l
c0103f79	obj/kernel.asm	/^c0103f79:	c0 $/;"	l
c0103f7a	obj/kernel.asm	/^c0103f7a:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103f81	obj/kernel.asm	/^c0103f81:	c0 $/;"	l
c0103f82	obj/kernel.asm	/^c0103f82:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
c0103f89	obj/kernel.asm	/^c0103f89:	00 $/;"	l
c0103f8a	obj/kernel.asm	/^c0103f8a:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103f91	obj/kernel.asm	/^c0103f91:	e8 32 cf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103f96	obj/kernel.asm	/^c0103f96:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0103f9d	obj/kernel.asm	/^c0103f9d:	e8 6e 11 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0103fa2	obj/kernel.asm	/^c0103fa2:	85 c0                	test   %eax,%eax$/;"	l
c0103fa4	obj/kernel.asm	/^c0103fa4:	74 24                	je     c0103fca <basic_check+0x4bb>$/;"	l
c0103fa6	obj/kernel.asm	/^c0103fa6:	c7 44 24 0c 46 60 11 	movl   $0xc0116046,0xc(%esp)$/;"	l
c0103fad	obj/kernel.asm	/^c0103fad:	c0 $/;"	l
c0103fae	obj/kernel.asm	/^c0103fae:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103fb5	obj/kernel.asm	/^c0103fb5:	c0 $/;"	l
c0103fb6	obj/kernel.asm	/^c0103fb6:	c7 44 24 04 d1 00 00 	movl   $0xd1,0x4(%esp)$/;"	l
c0103fbd	obj/kernel.asm	/^c0103fbd:	00 $/;"	l
c0103fbe	obj/kernel.asm	/^c0103fbe:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103fc5	obj/kernel.asm	/^c0103fc5:	e8 fe ce ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103fca	obj/kernel.asm	/^c0103fca:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c0103fcf	obj/kernel.asm	/^c0103fcf:	85 c0                	test   %eax,%eax$/;"	l
c0103fd1	obj/kernel.asm	/^c0103fd1:	74 24                	je     c0103ff7 <basic_check+0x4e8>$/;"	l
c0103fd3	obj/kernel.asm	/^c0103fd3:	c7 44 24 0c 99 60 11 	movl   $0xc0116099,0xc(%esp)$/;"	l
c0103fda	obj/kernel.asm	/^c0103fda:	c0 $/;"	l
c0103fdb	obj/kernel.asm	/^c0103fdb:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0103fe2	obj/kernel.asm	/^c0103fe2:	c0 $/;"	l
c0103fe3	obj/kernel.asm	/^c0103fe3:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
c0103fea	obj/kernel.asm	/^c0103fea:	00 $/;"	l
c0103feb	obj/kernel.asm	/^c0103feb:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0103ff2	obj/kernel.asm	/^c0103ff2:	e8 d1 ce ff ff       	call   c0100ec8 <__panic>$/;"	l
c0103ff7	obj/kernel.asm	/^c0103ff7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103ffa	obj/kernel.asm	/^c0103ffa:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103ffd	obj/kernel.asm	/^c0103ffd:	a3 14 30 15 c0       	mov    %eax,0xc0153014$/;"	l
c0104002	obj/kernel.asm	/^c0104002:	89 15 18 30 15 c0    	mov    %edx,0xc0153018$/;"	l
c0104008	obj/kernel.asm	/^c0104008:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010400b	obj/kernel.asm	/^c010400b:	a3 1c 30 15 c0       	mov    %eax,0xc015301c$/;"	l
c0104010	obj/kernel.asm	/^c0104010:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0104017	obj/kernel.asm	/^c0104017:	00 $/;"	l
c0104018	obj/kernel.asm	/^c0104018:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010401b	obj/kernel.asm	/^c010401b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010401e	obj/kernel.asm	/^c010401e:	e8 58 11 00 00       	call   c010517b <free_pages>$/;"	l
c0104023	obj/kernel.asm	/^c0104023:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010402a	obj/kernel.asm	/^c010402a:	00 $/;"	l
c010402b	obj/kernel.asm	/^c010402b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010402e	obj/kernel.asm	/^c010402e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104031	obj/kernel.asm	/^c0104031:	e8 45 11 00 00       	call   c010517b <free_pages>$/;"	l
c0104036	obj/kernel.asm	/^c0104036:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010403d	obj/kernel.asm	/^c010403d:	00 $/;"	l
c010403e	obj/kernel.asm	/^c010403e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104041	obj/kernel.asm	/^c0104041:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104044	obj/kernel.asm	/^c0104044:	e8 32 11 00 00       	call   c010517b <free_pages>$/;"	l
c0104049	obj/kernel.asm	/^c0104049:	c9                   	leave  $/;"	l
c010404a	obj/kernel.asm	/^c010404a:	c3                   	ret    $/;"	l
c010404b	obj/kernel.asm	/^c010404b <default_check>:$/;"	l
c010404b	obj/kernel.asm	/^c010404b:	55                   	push   %ebp$/;"	l
c010404c	obj/kernel.asm	/^c010404c:	89 e5                	mov    %esp,%ebp$/;"	l
c010404e	obj/kernel.asm	/^c010404e:	53                   	push   %ebx$/;"	l
c010404f	obj/kernel.asm	/^c010404f:	81 ec 94 00 00 00    	sub    $0x94,%esp$/;"	l
c0104055	obj/kernel.asm	/^c0104055:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010405c	obj/kernel.asm	/^c010405c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0104063	obj/kernel.asm	/^c0104063:	c7 45 ec 14 30 15 c0 	movl   $0xc0153014,-0x14(%ebp)$/;"	l
c010406a	obj/kernel.asm	/^c010406a:	eb 6b                	jmp    c01040d7 <default_check+0x8c>$/;"	l
c010406c	obj/kernel.asm	/^c010406c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010406f	obj/kernel.asm	/^c010406f:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0104072	obj/kernel.asm	/^c0104072:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104075	obj/kernel.asm	/^c0104075:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104078	obj/kernel.asm	/^c0104078:	83 c0 04             	add    $0x4,%eax$/;"	l
c010407b	obj/kernel.asm	/^c010407b:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c0104082	obj/kernel.asm	/^c0104082:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0104085	obj/kernel.asm	/^c0104085:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0104088	obj/kernel.asm	/^c0104088:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010408b	obj/kernel.asm	/^c010408b:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010408e	obj/kernel.asm	/^c010408e:	19 c0                	sbb    %eax,%eax$/;"	l
c0104090	obj/kernel.asm	/^c0104090:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0104093	obj/kernel.asm	/^c0104093:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0104097	obj/kernel.asm	/^c0104097:	0f 95 c0             	setne  %al$/;"	l
c010409a	obj/kernel.asm	/^c010409a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010409d	obj/kernel.asm	/^c010409d:	85 c0                	test   %eax,%eax$/;"	l
c010409f	obj/kernel.asm	/^c010409f:	75 24                	jne    c01040c5 <default_check+0x7a>$/;"	l
c01040a1	obj/kernel.asm	/^c01040a1:	c7 44 24 0c a6 60 11 	movl   $0xc01160a6,0xc(%esp)$/;"	l
c01040a8	obj/kernel.asm	/^c01040a8:	c0 $/;"	l
c01040a9	obj/kernel.asm	/^c01040a9:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c01040b0	obj/kernel.asm	/^c01040b0:	c0 $/;"	l
c01040b1	obj/kernel.asm	/^c01040b1:	c7 44 24 04 e4 00 00 	movl   $0xe4,0x4(%esp)$/;"	l
c01040b8	obj/kernel.asm	/^c01040b8:	00 $/;"	l
c01040b9	obj/kernel.asm	/^c01040b9:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c01040c0	obj/kernel.asm	/^c01040c0:	e8 03 ce ff ff       	call   c0100ec8 <__panic>$/;"	l
c01040c5	obj/kernel.asm	/^c01040c5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01040c9	obj/kernel.asm	/^c01040c9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01040cc	obj/kernel.asm	/^c01040cc:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01040cf	obj/kernel.asm	/^c01040cf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01040d2	obj/kernel.asm	/^c01040d2:	01 d0                	add    %edx,%eax$/;"	l
c01040d4	obj/kernel.asm	/^c01040d4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01040d7	obj/kernel.asm	/^c01040d7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01040da	obj/kernel.asm	/^c01040da:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c01040dd	obj/kernel.asm	/^c01040dd:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01040e0	obj/kernel.asm	/^c01040e0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01040e3	obj/kernel.asm	/^c01040e3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01040e6	obj/kernel.asm	/^c01040e6:	81 7d ec 14 30 15 c0 	cmpl   $0xc0153014,-0x14(%ebp)$/;"	l
c01040ed	obj/kernel.asm	/^c01040ed:	0f 85 79 ff ff ff    	jne    c010406c <default_check+0x21>$/;"	l
c01040f3	obj/kernel.asm	/^c01040f3:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01040f6	obj/kernel.asm	/^c01040f6:	e8 b2 10 00 00       	call   c01051ad <nr_free_pages>$/;"	l
c01040fb	obj/kernel.asm	/^c01040fb:	39 c3                	cmp    %eax,%ebx$/;"	l
c01040fd	obj/kernel.asm	/^c01040fd:	74 24                	je     c0104123 <default_check+0xd8>$/;"	l
c01040ff	obj/kernel.asm	/^c01040ff:	c7 44 24 0c b6 60 11 	movl   $0xc01160b6,0xc(%esp)$/;"	l
c0104106	obj/kernel.asm	/^c0104106:	c0 $/;"	l
c0104107	obj/kernel.asm	/^c0104107:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010410e	obj/kernel.asm	/^c010410e:	c0 $/;"	l
c010410f	obj/kernel.asm	/^c010410f:	c7 44 24 04 e7 00 00 	movl   $0xe7,0x4(%esp)$/;"	l
c0104116	obj/kernel.asm	/^c0104116:	00 $/;"	l
c0104117	obj/kernel.asm	/^c0104117:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c010411e	obj/kernel.asm	/^c010411e:	e8 a5 cd ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104123	obj/kernel.asm	/^c0104123:	e8 e7 f9 ff ff       	call   c0103b0f <basic_check>$/;"	l
c0104128	obj/kernel.asm	/^c0104128:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c010412f	obj/kernel.asm	/^c010412f:	e8 dc 0f 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0104134	obj/kernel.asm	/^c0104134:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104137	obj/kernel.asm	/^c0104137:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010413b	obj/kernel.asm	/^c010413b:	75 24                	jne    c0104161 <default_check+0x116>$/;"	l
c010413d	obj/kernel.asm	/^c010413d:	c7 44 24 0c cf 60 11 	movl   $0xc01160cf,0xc(%esp)$/;"	l
c0104144	obj/kernel.asm	/^c0104144:	c0 $/;"	l
c0104145	obj/kernel.asm	/^c0104145:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010414c	obj/kernel.asm	/^c010414c:	c0 $/;"	l
c010414d	obj/kernel.asm	/^c010414d:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
c0104154	obj/kernel.asm	/^c0104154:	00 $/;"	l
c0104155	obj/kernel.asm	/^c0104155:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c010415c	obj/kernel.asm	/^c010415c:	e8 67 cd ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104161	obj/kernel.asm	/^c0104161:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104164	obj/kernel.asm	/^c0104164:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104167	obj/kernel.asm	/^c0104167:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c010416e	obj/kernel.asm	/^c010416e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0104171	obj/kernel.asm	/^c0104171:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0104174	obj/kernel.asm	/^c0104174:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0104177	obj/kernel.asm	/^c0104177:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010417a	obj/kernel.asm	/^c010417a:	19 c0                	sbb    %eax,%eax$/;"	l
c010417c	obj/kernel.asm	/^c010417c:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010417f	obj/kernel.asm	/^c010417f:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c0104183	obj/kernel.asm	/^c0104183:	0f 95 c0             	setne  %al$/;"	l
c0104186	obj/kernel.asm	/^c0104186:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0104189	obj/kernel.asm	/^c0104189:	85 c0                	test   %eax,%eax$/;"	l
c010418b	obj/kernel.asm	/^c010418b:	74 24                	je     c01041b1 <default_check+0x166>$/;"	l
c010418d	obj/kernel.asm	/^c010418d:	c7 44 24 0c da 60 11 	movl   $0xc01160da,0xc(%esp)$/;"	l
c0104194	obj/kernel.asm	/^c0104194:	c0 $/;"	l
c0104195	obj/kernel.asm	/^c0104195:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010419c	obj/kernel.asm	/^c010419c:	c0 $/;"	l
c010419d	obj/kernel.asm	/^c010419d:	c7 44 24 04 ed 00 00 	movl   $0xed,0x4(%esp)$/;"	l
c01041a4	obj/kernel.asm	/^c01041a4:	00 $/;"	l
c01041a5	obj/kernel.asm	/^c01041a5:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c01041ac	obj/kernel.asm	/^c01041ac:	e8 17 cd ff ff       	call   c0100ec8 <__panic>$/;"	l
c01041b1	obj/kernel.asm	/^c01041b1:	a1 14 30 15 c0       	mov    0xc0153014,%eax$/;"	l
c01041b6	obj/kernel.asm	/^c01041b6:	8b 15 18 30 15 c0    	mov    0xc0153018,%edx$/;"	l
c01041bc	obj/kernel.asm	/^c01041bc:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c01041bf	obj/kernel.asm	/^c01041bf:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c01041c2	obj/kernel.asm	/^c01041c2:	c7 45 b4 14 30 15 c0 	movl   $0xc0153014,-0x4c(%ebp)$/;"	l
c01041c9	obj/kernel.asm	/^c01041c9:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01041cc	obj/kernel.asm	/^c01041cc:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01041cf	obj/kernel.asm	/^c01041cf:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01041d2	obj/kernel.asm	/^c01041d2:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01041d5	obj/kernel.asm	/^c01041d5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01041d8	obj/kernel.asm	/^c01041d8:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01041db	obj/kernel.asm	/^c01041db:	89 10                	mov    %edx,(%eax)$/;"	l
c01041dd	obj/kernel.asm	/^c01041dd:	c7 45 b0 14 30 15 c0 	movl   $0xc0153014,-0x50(%ebp)$/;"	l
c01041e4	obj/kernel.asm	/^c01041e4:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01041e7	obj/kernel.asm	/^c01041e7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01041ea	obj/kernel.asm	/^c01041ea:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c01041ed	obj/kernel.asm	/^c01041ed:	0f 94 c0             	sete   %al$/;"	l
c01041f0	obj/kernel.asm	/^c01041f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01041f3	obj/kernel.asm	/^c01041f3:	85 c0                	test   %eax,%eax$/;"	l
c01041f5	obj/kernel.asm	/^c01041f5:	75 24                	jne    c010421b <default_check+0x1d0>$/;"	l
c01041f7	obj/kernel.asm	/^c01041f7:	c7 44 24 0c 2f 60 11 	movl   $0xc011602f,0xc(%esp)$/;"	l
c01041fe	obj/kernel.asm	/^c01041fe:	c0 $/;"	l
c01041ff	obj/kernel.asm	/^c01041ff:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104206	obj/kernel.asm	/^c0104206:	c0 $/;"	l
c0104207	obj/kernel.asm	/^c0104207:	c7 44 24 04 f1 00 00 	movl   $0xf1,0x4(%esp)$/;"	l
c010420e	obj/kernel.asm	/^c010420e:	00 $/;"	l
c010420f	obj/kernel.asm	/^c010420f:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0104216	obj/kernel.asm	/^c0104216:	e8 ad cc ff ff       	call   c0100ec8 <__panic>$/;"	l
c010421b	obj/kernel.asm	/^c010421b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104222	obj/kernel.asm	/^c0104222:	e8 e9 0e 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0104227	obj/kernel.asm	/^c0104227:	85 c0                	test   %eax,%eax$/;"	l
c0104229	obj/kernel.asm	/^c0104229:	74 24                	je     c010424f <default_check+0x204>$/;"	l
c010422b	obj/kernel.asm	/^c010422b:	c7 44 24 0c 46 60 11 	movl   $0xc0116046,0xc(%esp)$/;"	l
c0104232	obj/kernel.asm	/^c0104232:	c0 $/;"	l
c0104233	obj/kernel.asm	/^c0104233:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010423a	obj/kernel.asm	/^c010423a:	c0 $/;"	l
c010423b	obj/kernel.asm	/^c010423b:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c0104242	obj/kernel.asm	/^c0104242:	00 $/;"	l
c0104243	obj/kernel.asm	/^c0104243:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c010424a	obj/kernel.asm	/^c010424a:	e8 79 cc ff ff       	call   c0100ec8 <__panic>$/;"	l
c010424f	obj/kernel.asm	/^c010424f:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c0104254	obj/kernel.asm	/^c0104254:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104257	obj/kernel.asm	/^c0104257:	c7 05 1c 30 15 c0 00 	movl   $0x0,0xc015301c$/;"	l
c010425e	obj/kernel.asm	/^c010425e:	00 00 00 $/;"	l
c0104261	obj/kernel.asm	/^c0104261:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104264	obj/kernel.asm	/^c0104264:	83 c0 40             	add    $0x40,%eax$/;"	l
c0104267	obj/kernel.asm	/^c0104267:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c010426e	obj/kernel.asm	/^c010426e:	00 $/;"	l
c010426f	obj/kernel.asm	/^c010426f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104272	obj/kernel.asm	/^c0104272:	e8 04 0f 00 00       	call   c010517b <free_pages>$/;"	l
c0104277	obj/kernel.asm	/^c0104277:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c010427e	obj/kernel.asm	/^c010427e:	e8 8d 0e 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0104283	obj/kernel.asm	/^c0104283:	85 c0                	test   %eax,%eax$/;"	l
c0104285	obj/kernel.asm	/^c0104285:	74 24                	je     c01042ab <default_check+0x260>$/;"	l
c0104287	obj/kernel.asm	/^c0104287:	c7 44 24 0c ec 60 11 	movl   $0xc01160ec,0xc(%esp)$/;"	l
c010428e	obj/kernel.asm	/^c010428e:	c0 $/;"	l
c010428f	obj/kernel.asm	/^c010428f:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104296	obj/kernel.asm	/^c0104296:	c0 $/;"	l
c0104297	obj/kernel.asm	/^c0104297:	c7 44 24 04 f8 00 00 	movl   $0xf8,0x4(%esp)$/;"	l
c010429e	obj/kernel.asm	/^c010429e:	00 $/;"	l
c010429f	obj/kernel.asm	/^c010429f:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c01042a6	obj/kernel.asm	/^c01042a6:	e8 1d cc ff ff       	call   c0100ec8 <__panic>$/;"	l
c01042ab	obj/kernel.asm	/^c01042ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01042ae	obj/kernel.asm	/^c01042ae:	83 c0 40             	add    $0x40,%eax$/;"	l
c01042b1	obj/kernel.asm	/^c01042b1:	83 c0 04             	add    $0x4,%eax$/;"	l
c01042b4	obj/kernel.asm	/^c01042b4:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c01042bb	obj/kernel.asm	/^c01042bb:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c01042be	obj/kernel.asm	/^c01042be:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01042c1	obj/kernel.asm	/^c01042c1:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c01042c4	obj/kernel.asm	/^c01042c4:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01042c7	obj/kernel.asm	/^c01042c7:	19 c0                	sbb    %eax,%eax$/;"	l
c01042c9	obj/kernel.asm	/^c01042c9:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c01042cc	obj/kernel.asm	/^c01042cc:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c01042d0	obj/kernel.asm	/^c01042d0:	0f 95 c0             	setne  %al$/;"	l
c01042d3	obj/kernel.asm	/^c01042d3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01042d6	obj/kernel.asm	/^c01042d6:	85 c0                	test   %eax,%eax$/;"	l
c01042d8	obj/kernel.asm	/^c01042d8:	74 0e                	je     c01042e8 <default_check+0x29d>$/;"	l
c01042da	obj/kernel.asm	/^c01042da:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01042dd	obj/kernel.asm	/^c01042dd:	83 c0 40             	add    $0x40,%eax$/;"	l
c01042e0	obj/kernel.asm	/^c01042e0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01042e3	obj/kernel.asm	/^c01042e3:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01042e6	obj/kernel.asm	/^c01042e6:	74 24                	je     c010430c <default_check+0x2c1>$/;"	l
c01042e8	obj/kernel.asm	/^c01042e8:	c7 44 24 0c 04 61 11 	movl   $0xc0116104,0xc(%esp)$/;"	l
c01042ef	obj/kernel.asm	/^c01042ef:	c0 $/;"	l
c01042f0	obj/kernel.asm	/^c01042f0:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c01042f7	obj/kernel.asm	/^c01042f7:	c0 $/;"	l
c01042f8	obj/kernel.asm	/^c01042f8:	c7 44 24 04 f9 00 00 	movl   $0xf9,0x4(%esp)$/;"	l
c01042ff	obj/kernel.asm	/^c01042ff:	00 $/;"	l
c0104300	obj/kernel.asm	/^c0104300:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0104307	obj/kernel.asm	/^c0104307:	e8 bc cb ff ff       	call   c0100ec8 <__panic>$/;"	l
c010430c	obj/kernel.asm	/^c010430c:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)$/;"	l
c0104313	obj/kernel.asm	/^c0104313:	e8 f8 0d 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0104318	obj/kernel.asm	/^c0104318:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010431b	obj/kernel.asm	/^c010431b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010431f	obj/kernel.asm	/^c010431f:	75 24                	jne    c0104345 <default_check+0x2fa>$/;"	l
c0104321	obj/kernel.asm	/^c0104321:	c7 44 24 0c 30 61 11 	movl   $0xc0116130,0xc(%esp)$/;"	l
c0104328	obj/kernel.asm	/^c0104328:	c0 $/;"	l
c0104329	obj/kernel.asm	/^c0104329:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104330	obj/kernel.asm	/^c0104330:	c0 $/;"	l
c0104331	obj/kernel.asm	/^c0104331:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c0104338	obj/kernel.asm	/^c0104338:	00 $/;"	l
c0104339	obj/kernel.asm	/^c0104339:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0104340	obj/kernel.asm	/^c0104340:	e8 83 cb ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104345	obj/kernel.asm	/^c0104345:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010434c	obj/kernel.asm	/^c010434c:	e8 bf 0d 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0104351	obj/kernel.asm	/^c0104351:	85 c0                	test   %eax,%eax$/;"	l
c0104353	obj/kernel.asm	/^c0104353:	74 24                	je     c0104379 <default_check+0x32e>$/;"	l
c0104355	obj/kernel.asm	/^c0104355:	c7 44 24 0c 46 60 11 	movl   $0xc0116046,0xc(%esp)$/;"	l
c010435c	obj/kernel.asm	/^c010435c:	c0 $/;"	l
c010435d	obj/kernel.asm	/^c010435d:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104364	obj/kernel.asm	/^c0104364:	c0 $/;"	l
c0104365	obj/kernel.asm	/^c0104365:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c010436c	obj/kernel.asm	/^c010436c:	00 $/;"	l
c010436d	obj/kernel.asm	/^c010436d:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0104374	obj/kernel.asm	/^c0104374:	e8 4f cb ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104379	obj/kernel.asm	/^c0104379:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010437c	obj/kernel.asm	/^c010437c:	83 c0 40             	add    $0x40,%eax$/;"	l
c010437f	obj/kernel.asm	/^c010437f:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0104382	obj/kernel.asm	/^c0104382:	74 24                	je     c01043a8 <default_check+0x35d>$/;"	l
c0104384	obj/kernel.asm	/^c0104384:	c7 44 24 0c 4e 61 11 	movl   $0xc011614e,0xc(%esp)$/;"	l
c010438b	obj/kernel.asm	/^c010438b:	c0 $/;"	l
c010438c	obj/kernel.asm	/^c010438c:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104393	obj/kernel.asm	/^c0104393:	c0 $/;"	l
c0104394	obj/kernel.asm	/^c0104394:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c010439b	obj/kernel.asm	/^c010439b:	00 $/;"	l
c010439c	obj/kernel.asm	/^c010439c:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c01043a3	obj/kernel.asm	/^c01043a3:	e8 20 cb ff ff       	call   c0100ec8 <__panic>$/;"	l
c01043a8	obj/kernel.asm	/^c01043a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01043ab	obj/kernel.asm	/^c01043ab:	83 c0 20             	add    $0x20,%eax$/;"	l
c01043ae	obj/kernel.asm	/^c01043ae:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01043b1	obj/kernel.asm	/^c01043b1:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01043b8	obj/kernel.asm	/^c01043b8:	00 $/;"	l
c01043b9	obj/kernel.asm	/^c01043b9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01043bc	obj/kernel.asm	/^c01043bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01043bf	obj/kernel.asm	/^c01043bf:	e8 b7 0d 00 00       	call   c010517b <free_pages>$/;"	l
c01043c4	obj/kernel.asm	/^c01043c4:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c01043cb	obj/kernel.asm	/^c01043cb:	00 $/;"	l
c01043cc	obj/kernel.asm	/^c01043cc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01043cf	obj/kernel.asm	/^c01043cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01043d2	obj/kernel.asm	/^c01043d2:	e8 a4 0d 00 00       	call   c010517b <free_pages>$/;"	l
c01043d7	obj/kernel.asm	/^c01043d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01043da	obj/kernel.asm	/^c01043da:	83 c0 04             	add    $0x4,%eax$/;"	l
c01043dd	obj/kernel.asm	/^c01043dd:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c01043e4	obj/kernel.asm	/^c01043e4:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c01043e7	obj/kernel.asm	/^c01043e7:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c01043ea	obj/kernel.asm	/^c01043ea:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c01043ed	obj/kernel.asm	/^c01043ed:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01043f0	obj/kernel.asm	/^c01043f0:	19 c0                	sbb    %eax,%eax$/;"	l
c01043f2	obj/kernel.asm	/^c01043f2:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c01043f5	obj/kernel.asm	/^c01043f5:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c01043f9	obj/kernel.asm	/^c01043f9:	0f 95 c0             	setne  %al$/;"	l
c01043fc	obj/kernel.asm	/^c01043fc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01043ff	obj/kernel.asm	/^c01043ff:	85 c0                	test   %eax,%eax$/;"	l
c0104401	obj/kernel.asm	/^c0104401:	74 0b                	je     c010440e <default_check+0x3c3>$/;"	l
c0104403	obj/kernel.asm	/^c0104403:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104406	obj/kernel.asm	/^c0104406:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104409	obj/kernel.asm	/^c0104409:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010440c	obj/kernel.asm	/^c010440c:	74 24                	je     c0104432 <default_check+0x3e7>$/;"	l
c010440e	obj/kernel.asm	/^c010440e:	c7 44 24 0c 5c 61 11 	movl   $0xc011615c,0xc(%esp)$/;"	l
c0104415	obj/kernel.asm	/^c0104415:	c0 $/;"	l
c0104416	obj/kernel.asm	/^c0104416:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010441d	obj/kernel.asm	/^c010441d:	c0 $/;"	l
c010441e	obj/kernel.asm	/^c010441e:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c0104425	obj/kernel.asm	/^c0104425:	00 $/;"	l
c0104426	obj/kernel.asm	/^c0104426:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c010442d	obj/kernel.asm	/^c010442d:	e8 96 ca ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104432	obj/kernel.asm	/^c0104432:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0104435	obj/kernel.asm	/^c0104435:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104438	obj/kernel.asm	/^c0104438:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c010443f	obj/kernel.asm	/^c010443f:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c0104442	obj/kernel.asm	/^c0104442:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0104445	obj/kernel.asm	/^c0104445:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0104448	obj/kernel.asm	/^c0104448:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010444b	obj/kernel.asm	/^c010444b:	19 c0                	sbb    %eax,%eax$/;"	l
c010444d	obj/kernel.asm	/^c010444d:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0104450	obj/kernel.asm	/^c0104450:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c0104454	obj/kernel.asm	/^c0104454:	0f 95 c0             	setne  %al$/;"	l
c0104457	obj/kernel.asm	/^c0104457:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010445a	obj/kernel.asm	/^c010445a:	85 c0                	test   %eax,%eax$/;"	l
c010445c	obj/kernel.asm	/^c010445c:	74 0b                	je     c0104469 <default_check+0x41e>$/;"	l
c010445e	obj/kernel.asm	/^c010445e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0104461	obj/kernel.asm	/^c0104461:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104464	obj/kernel.asm	/^c0104464:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0104467	obj/kernel.asm	/^c0104467:	74 24                	je     c010448d <default_check+0x442>$/;"	l
c0104469	obj/kernel.asm	/^c0104469:	c7 44 24 0c 84 61 11 	movl   $0xc0116184,0xc(%esp)$/;"	l
c0104470	obj/kernel.asm	/^c0104470:	c0 $/;"	l
c0104471	obj/kernel.asm	/^c0104471:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104478	obj/kernel.asm	/^c0104478:	c0 $/;"	l
c0104479	obj/kernel.asm	/^c0104479:	c7 44 24 04 02 01 00 	movl   $0x102,0x4(%esp)$/;"	l
c0104480	obj/kernel.asm	/^c0104480:	00 $/;"	l
c0104481	obj/kernel.asm	/^c0104481:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0104488	obj/kernel.asm	/^c0104488:	e8 3b ca ff ff       	call   c0100ec8 <__panic>$/;"	l
c010448d	obj/kernel.asm	/^c010448d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104494	obj/kernel.asm	/^c0104494:	e8 77 0c 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0104499	obj/kernel.asm	/^c0104499:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010449c	obj/kernel.asm	/^c010449c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010449f	obj/kernel.asm	/^c010449f:	83 e8 20             	sub    $0x20,%eax$/;"	l
c01044a2	obj/kernel.asm	/^c01044a2:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01044a5	obj/kernel.asm	/^c01044a5:	74 24                	je     c01044cb <default_check+0x480>$/;"	l
c01044a7	obj/kernel.asm	/^c01044a7:	c7 44 24 0c aa 61 11 	movl   $0xc01161aa,0xc(%esp)$/;"	l
c01044ae	obj/kernel.asm	/^c01044ae:	c0 $/;"	l
c01044af	obj/kernel.asm	/^c01044af:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c01044b6	obj/kernel.asm	/^c01044b6:	c0 $/;"	l
c01044b7	obj/kernel.asm	/^c01044b7:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)$/;"	l
c01044be	obj/kernel.asm	/^c01044be:	00 $/;"	l
c01044bf	obj/kernel.asm	/^c01044bf:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c01044c6	obj/kernel.asm	/^c01044c6:	e8 fd c9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01044cb	obj/kernel.asm	/^c01044cb:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01044d2	obj/kernel.asm	/^c01044d2:	00 $/;"	l
c01044d3	obj/kernel.asm	/^c01044d3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01044d6	obj/kernel.asm	/^c01044d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01044d9	obj/kernel.asm	/^c01044d9:	e8 9d 0c 00 00       	call   c010517b <free_pages>$/;"	l
c01044de	obj/kernel.asm	/^c01044de:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c01044e5	obj/kernel.asm	/^c01044e5:	e8 26 0c 00 00       	call   c0105110 <alloc_pages>$/;"	l
c01044ea	obj/kernel.asm	/^c01044ea:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01044ed	obj/kernel.asm	/^c01044ed:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01044f0	obj/kernel.asm	/^c01044f0:	83 c0 20             	add    $0x20,%eax$/;"	l
c01044f3	obj/kernel.asm	/^c01044f3:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01044f6	obj/kernel.asm	/^c01044f6:	74 24                	je     c010451c <default_check+0x4d1>$/;"	l
c01044f8	obj/kernel.asm	/^c01044f8:	c7 44 24 0c c8 61 11 	movl   $0xc01161c8,0xc(%esp)$/;"	l
c01044ff	obj/kernel.asm	/^c01044ff:	c0 $/;"	l
c0104500	obj/kernel.asm	/^c0104500:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104507	obj/kernel.asm	/^c0104507:	c0 $/;"	l
c0104508	obj/kernel.asm	/^c0104508:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)$/;"	l
c010450f	obj/kernel.asm	/^c010450f:	00 $/;"	l
c0104510	obj/kernel.asm	/^c0104510:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0104517	obj/kernel.asm	/^c0104517:	e8 ac c9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010451c	obj/kernel.asm	/^c010451c:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c0104523	obj/kernel.asm	/^c0104523:	00 $/;"	l
c0104524	obj/kernel.asm	/^c0104524:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104527	obj/kernel.asm	/^c0104527:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010452a	obj/kernel.asm	/^c010452a:	e8 4c 0c 00 00       	call   c010517b <free_pages>$/;"	l
c010452f	obj/kernel.asm	/^c010452f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0104536	obj/kernel.asm	/^c0104536:	00 $/;"	l
c0104537	obj/kernel.asm	/^c0104537:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010453a	obj/kernel.asm	/^c010453a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010453d	obj/kernel.asm	/^c010453d:	e8 39 0c 00 00       	call   c010517b <free_pages>$/;"	l
c0104542	obj/kernel.asm	/^c0104542:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c0104549	obj/kernel.asm	/^c0104549:	e8 c2 0b 00 00       	call   c0105110 <alloc_pages>$/;"	l
c010454e	obj/kernel.asm	/^c010454e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104551	obj/kernel.asm	/^c0104551:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0104555	obj/kernel.asm	/^c0104555:	75 24                	jne    c010457b <default_check+0x530>$/;"	l
c0104557	obj/kernel.asm	/^c0104557:	c7 44 24 0c e8 61 11 	movl   $0xc01161e8,0xc(%esp)$/;"	l
c010455e	obj/kernel.asm	/^c010455e:	c0 $/;"	l
c010455f	obj/kernel.asm	/^c010455f:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104566	obj/kernel.asm	/^c0104566:	c0 $/;"	l
c0104567	obj/kernel.asm	/^c0104567:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
c010456e	obj/kernel.asm	/^c010456e:	00 $/;"	l
c010456f	obj/kernel.asm	/^c010456f:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0104576	obj/kernel.asm	/^c0104576:	e8 4d c9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010457b	obj/kernel.asm	/^c010457b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104582	obj/kernel.asm	/^c0104582:	e8 89 0b 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0104587	obj/kernel.asm	/^c0104587:	85 c0                	test   %eax,%eax$/;"	l
c0104589	obj/kernel.asm	/^c0104589:	74 24                	je     c01045af <default_check+0x564>$/;"	l
c010458b	obj/kernel.asm	/^c010458b:	c7 44 24 0c 46 60 11 	movl   $0xc0116046,0xc(%esp)$/;"	l
c0104592	obj/kernel.asm	/^c0104592:	c0 $/;"	l
c0104593	obj/kernel.asm	/^c0104593:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010459a	obj/kernel.asm	/^c010459a:	c0 $/;"	l
c010459b	obj/kernel.asm	/^c010459b:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
c01045a2	obj/kernel.asm	/^c01045a2:	00 $/;"	l
c01045a3	obj/kernel.asm	/^c01045a3:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c01045aa	obj/kernel.asm	/^c01045aa:	e8 19 c9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01045af	obj/kernel.asm	/^c01045af:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c01045b4	obj/kernel.asm	/^c01045b4:	85 c0                	test   %eax,%eax$/;"	l
c01045b6	obj/kernel.asm	/^c01045b6:	74 24                	je     c01045dc <default_check+0x591>$/;"	l
c01045b8	obj/kernel.asm	/^c01045b8:	c7 44 24 0c 99 60 11 	movl   $0xc0116099,0xc(%esp)$/;"	l
c01045bf	obj/kernel.asm	/^c01045bf:	c0 $/;"	l
c01045c0	obj/kernel.asm	/^c01045c0:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c01045c7	obj/kernel.asm	/^c01045c7:	c0 $/;"	l
c01045c8	obj/kernel.asm	/^c01045c8:	c7 44 24 04 0e 01 00 	movl   $0x10e,0x4(%esp)$/;"	l
c01045cf	obj/kernel.asm	/^c01045cf:	00 $/;"	l
c01045d0	obj/kernel.asm	/^c01045d0:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c01045d7	obj/kernel.asm	/^c01045d7:	e8 ec c8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01045dc	obj/kernel.asm	/^c01045dc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01045df	obj/kernel.asm	/^c01045df:	a3 1c 30 15 c0       	mov    %eax,0xc015301c$/;"	l
c01045e4	obj/kernel.asm	/^c01045e4:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c01045e7	obj/kernel.asm	/^c01045e7:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c01045ea	obj/kernel.asm	/^c01045ea:	a3 14 30 15 c0       	mov    %eax,0xc0153014$/;"	l
c01045ef	obj/kernel.asm	/^c01045ef:	89 15 18 30 15 c0    	mov    %edx,0xc0153018$/;"	l
c01045f5	obj/kernel.asm	/^c01045f5:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c01045fc	obj/kernel.asm	/^c01045fc:	00 $/;"	l
c01045fd	obj/kernel.asm	/^c01045fd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104600	obj/kernel.asm	/^c0104600:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104603	obj/kernel.asm	/^c0104603:	e8 73 0b 00 00       	call   c010517b <free_pages>$/;"	l
c0104608	obj/kernel.asm	/^c0104608:	c7 45 ec 14 30 15 c0 	movl   $0xc0153014,-0x14(%ebp)$/;"	l
c010460f	obj/kernel.asm	/^c010460f:	eb 1d                	jmp    c010462e <default_check+0x5e3>$/;"	l
c0104611	obj/kernel.asm	/^c0104611:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104614	obj/kernel.asm	/^c0104614:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0104617	obj/kernel.asm	/^c0104617:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010461a	obj/kernel.asm	/^c010461a:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010461e	obj/kernel.asm	/^c010461e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104621	obj/kernel.asm	/^c0104621:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0104624	obj/kernel.asm	/^c0104624:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104627	obj/kernel.asm	/^c0104627:	29 c2                	sub    %eax,%edx$/;"	l
c0104629	obj/kernel.asm	/^c0104629:	89 d0                	mov    %edx,%eax$/;"	l
c010462b	obj/kernel.asm	/^c010462b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010462e	obj/kernel.asm	/^c010462e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104631	obj/kernel.asm	/^c0104631:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c0104634	obj/kernel.asm	/^c0104634:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0104637	obj/kernel.asm	/^c0104637:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010463a	obj/kernel.asm	/^c010463a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010463d	obj/kernel.asm	/^c010463d:	81 7d ec 14 30 15 c0 	cmpl   $0xc0153014,-0x14(%ebp)$/;"	l
c0104644	obj/kernel.asm	/^c0104644:	75 cb                	jne    c0104611 <default_check+0x5c6>$/;"	l
c0104646	obj/kernel.asm	/^c0104646:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010464a	obj/kernel.asm	/^c010464a:	74 24                	je     c0104670 <default_check+0x625>$/;"	l
c010464c	obj/kernel.asm	/^c010464c:	c7 44 24 0c 06 62 11 	movl   $0xc0116206,0xc(%esp)$/;"	l
c0104653	obj/kernel.asm	/^c0104653:	c0 $/;"	l
c0104654	obj/kernel.asm	/^c0104654:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c010465b	obj/kernel.asm	/^c010465b:	c0 $/;"	l
c010465c	obj/kernel.asm	/^c010465c:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
c0104663	obj/kernel.asm	/^c0104663:	00 $/;"	l
c0104664	obj/kernel.asm	/^c0104664:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c010466b	obj/kernel.asm	/^c010466b:	e8 58 c8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104670	obj/kernel.asm	/^c0104670:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104674	obj/kernel.asm	/^c0104674:	74 24                	je     c010469a <default_check+0x64f>$/;"	l
c0104676	obj/kernel.asm	/^c0104676:	c7 44 24 0c 11 62 11 	movl   $0xc0116211,0xc(%esp)$/;"	l
c010467d	obj/kernel.asm	/^c010467d:	c0 $/;"	l
c010467e	obj/kernel.asm	/^c010467e:	c7 44 24 08 d6 5e 11 	movl   $0xc0115ed6,0x8(%esp)$/;"	l
c0104685	obj/kernel.asm	/^c0104685:	c0 $/;"	l
c0104686	obj/kernel.asm	/^c0104686:	c7 44 24 04 1a 01 00 	movl   $0x11a,0x4(%esp)$/;"	l
c010468d	obj/kernel.asm	/^c010468d:	00 $/;"	l
c010468e	obj/kernel.asm	/^c010468e:	c7 04 24 eb 5e 11 c0 	movl   $0xc0115eeb,(%esp)$/;"	l
c0104695	obj/kernel.asm	/^c0104695:	e8 2e c8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010469a	obj/kernel.asm	/^c010469a:	81 c4 94 00 00 00    	add    $0x94,%esp$/;"	l
c01046a0	obj/kernel.asm	/^c01046a0:	5b                   	pop    %ebx$/;"	l
c01046a1	obj/kernel.asm	/^c01046a1:	5d                   	pop    %ebp$/;"	l
c01046a2	obj/kernel.asm	/^c01046a2:	c3                   	ret    $/;"	l
c01046a3	obj/kernel.asm	/^c01046a3 <__intr_save>:$/;"	l
c01046a3	obj/kernel.asm	/^c01046a3:	55                   	push   %ebp$/;"	l
c01046a4	obj/kernel.asm	/^c01046a4:	89 e5                	mov    %esp,%ebp$/;"	l
c01046a6	obj/kernel.asm	/^c01046a6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01046a9	obj/kernel.asm	/^c01046a9:	9c                   	pushf  $/;"	l
c01046aa	obj/kernel.asm	/^c01046aa:	58                   	pop    %eax$/;"	l
c01046ab	obj/kernel.asm	/^c01046ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046ae	obj/kernel.asm	/^c01046ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046b1	obj/kernel.asm	/^c01046b1:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01046b6	obj/kernel.asm	/^c01046b6:	85 c0                	test   %eax,%eax$/;"	l
c01046b8	obj/kernel.asm	/^c01046b8:	74 0c                	je     c01046c6 <__intr_save+0x23>$/;"	l
c01046ba	obj/kernel.asm	/^c01046ba:	e8 6b da ff ff       	call   c010212a <intr_disable>$/;"	l
c01046bf	obj/kernel.asm	/^c01046bf:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01046c4	obj/kernel.asm	/^c01046c4:	eb 05                	jmp    c01046cb <__intr_save+0x28>$/;"	l
c01046c6	obj/kernel.asm	/^c01046c6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01046cb	obj/kernel.asm	/^c01046cb:	c9                   	leave  $/;"	l
c01046cc	obj/kernel.asm	/^c01046cc:	c3                   	ret    $/;"	l
c01046cd	obj/kernel.asm	/^c01046cd <__intr_restore>:$/;"	l
c01046cd	obj/kernel.asm	/^c01046cd:	55                   	push   %ebp$/;"	l
c01046ce	obj/kernel.asm	/^c01046ce:	89 e5                	mov    %esp,%ebp$/;"	l
c01046d0	obj/kernel.asm	/^c01046d0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01046d3	obj/kernel.asm	/^c01046d3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01046d7	obj/kernel.asm	/^c01046d7:	74 05                	je     c01046de <__intr_restore+0x11>$/;"	l
c01046d9	obj/kernel.asm	/^c01046d9:	e8 46 da ff ff       	call   c0102124 <intr_enable>$/;"	l
c01046de	obj/kernel.asm	/^c01046de:	c9                   	leave  $/;"	l
c01046df	obj/kernel.asm	/^c01046df:	c3                   	ret    $/;"	l
c01046e0	obj/kernel.asm	/^c01046e0 <page2ppn>:$/;"	l
c01046e0	obj/kernel.asm	/^c01046e0:	55                   	push   %ebp$/;"	l
c01046e1	obj/kernel.asm	/^c01046e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01046e3	obj/kernel.asm	/^c01046e3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01046e6	obj/kernel.asm	/^c01046e6:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c01046eb	obj/kernel.asm	/^c01046eb:	29 c2                	sub    %eax,%edx$/;"	l
c01046ed	obj/kernel.asm	/^c01046ed:	89 d0                	mov    %edx,%eax$/;"	l
c01046ef	obj/kernel.asm	/^c01046ef:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c01046f2	obj/kernel.asm	/^c01046f2:	5d                   	pop    %ebp$/;"	l
c01046f3	obj/kernel.asm	/^c01046f3:	c3                   	ret    $/;"	l
c01046f4	obj/kernel.asm	/^c01046f4 <page2pa>:$/;"	l
c01046f4	obj/kernel.asm	/^c01046f4:	55                   	push   %ebp$/;"	l
c01046f5	obj/kernel.asm	/^c01046f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01046f7	obj/kernel.asm	/^c01046f7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01046fa	obj/kernel.asm	/^c01046fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01046fd	obj/kernel.asm	/^c01046fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104700	obj/kernel.asm	/^c0104700:	e8 db ff ff ff       	call   c01046e0 <page2ppn>$/;"	l
c0104705	obj/kernel.asm	/^c0104705:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0104708	obj/kernel.asm	/^c0104708:	c9                   	leave  $/;"	l
c0104709	obj/kernel.asm	/^c0104709:	c3                   	ret    $/;"	l
c010470a	obj/kernel.asm	/^c010470a <pa2page>:$/;"	l
c010470a	obj/kernel.asm	/^c010470a:	55                   	push   %ebp$/;"	l
c010470b	obj/kernel.asm	/^c010470b:	89 e5                	mov    %esp,%ebp$/;"	l
c010470d	obj/kernel.asm	/^c010470d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104710	obj/kernel.asm	/^c0104710:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104713	obj/kernel.asm	/^c0104713:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104716	obj/kernel.asm	/^c0104716:	89 c2                	mov    %eax,%edx$/;"	l
c0104718	obj/kernel.asm	/^c0104718:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c010471d	obj/kernel.asm	/^c010471d:	39 c2                	cmp    %eax,%edx$/;"	l
c010471f	obj/kernel.asm	/^c010471f:	72 1c                	jb     c010473d <pa2page+0x33>$/;"	l
c0104721	obj/kernel.asm	/^c0104721:	c7 44 24 08 4c 62 11 	movl   $0xc011624c,0x8(%esp)$/;"	l
c0104728	obj/kernel.asm	/^c0104728:	c0 $/;"	l
c0104729	obj/kernel.asm	/^c0104729:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0104730	obj/kernel.asm	/^c0104730:	00 $/;"	l
c0104731	obj/kernel.asm	/^c0104731:	c7 04 24 6b 62 11 c0 	movl   $0xc011626b,(%esp)$/;"	l
c0104738	obj/kernel.asm	/^c0104738:	e8 8b c7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010473d	obj/kernel.asm	/^c010473d:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c0104742	obj/kernel.asm	/^c0104742:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104745	obj/kernel.asm	/^c0104745:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0104748	obj/kernel.asm	/^c0104748:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010474b	obj/kernel.asm	/^c010474b:	01 d0                	add    %edx,%eax$/;"	l
c010474d	obj/kernel.asm	/^c010474d:	c9                   	leave  $/;"	l
c010474e	obj/kernel.asm	/^c010474e:	c3                   	ret    $/;"	l
c010474f	obj/kernel.asm	/^c010474f <page2kva>:$/;"	l
c010474f	obj/kernel.asm	/^c010474f:	55                   	push   %ebp$/;"	l
c0104750	obj/kernel.asm	/^c0104750:	89 e5                	mov    %esp,%ebp$/;"	l
c0104752	obj/kernel.asm	/^c0104752:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104755	obj/kernel.asm	/^c0104755:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104758	obj/kernel.asm	/^c0104758:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010475b	obj/kernel.asm	/^c010475b:	e8 94 ff ff ff       	call   c01046f4 <page2pa>$/;"	l
c0104760	obj/kernel.asm	/^c0104760:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104763	obj/kernel.asm	/^c0104763:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104766	obj/kernel.asm	/^c0104766:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104769	obj/kernel.asm	/^c0104769:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010476c	obj/kernel.asm	/^c010476c:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c0104771	obj/kernel.asm	/^c0104771:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0104774	obj/kernel.asm	/^c0104774:	72 23                	jb     c0104799 <page2kva+0x4a>$/;"	l
c0104776	obj/kernel.asm	/^c0104776:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104779	obj/kernel.asm	/^c0104779:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010477d	obj/kernel.asm	/^c010477d:	c7 44 24 08 7c 62 11 	movl   $0xc011627c,0x8(%esp)$/;"	l
c0104784	obj/kernel.asm	/^c0104784:	c0 $/;"	l
c0104785	obj/kernel.asm	/^c0104785:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c010478c	obj/kernel.asm	/^c010478c:	00 $/;"	l
c010478d	obj/kernel.asm	/^c010478d:	c7 04 24 6b 62 11 c0 	movl   $0xc011626b,(%esp)$/;"	l
c0104794	obj/kernel.asm	/^c0104794:	e8 2f c7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104799	obj/kernel.asm	/^c0104799:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010479c	obj/kernel.asm	/^c010479c:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01047a1	obj/kernel.asm	/^c01047a1:	c9                   	leave  $/;"	l
c01047a2	obj/kernel.asm	/^c01047a2:	c3                   	ret    $/;"	l
c01047a3	obj/kernel.asm	/^c01047a3 <kva2page>:$/;"	l
c01047a3	obj/kernel.asm	/^c01047a3:	55                   	push   %ebp$/;"	l
c01047a4	obj/kernel.asm	/^c01047a4:	89 e5                	mov    %esp,%ebp$/;"	l
c01047a6	obj/kernel.asm	/^c01047a6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01047a9	obj/kernel.asm	/^c01047a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01047ac	obj/kernel.asm	/^c01047ac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01047af	obj/kernel.asm	/^c01047af:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c01047b6	obj/kernel.asm	/^c01047b6:	77 23                	ja     c01047db <kva2page+0x38>$/;"	l
c01047b8	obj/kernel.asm	/^c01047b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01047bb	obj/kernel.asm	/^c01047bb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01047bf	obj/kernel.asm	/^c01047bf:	c7 44 24 08 a0 62 11 	movl   $0xc01162a0,0x8(%esp)$/;"	l
c01047c6	obj/kernel.asm	/^c01047c6:	c0 $/;"	l
c01047c7	obj/kernel.asm	/^c01047c7:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c01047ce	obj/kernel.asm	/^c01047ce:	00 $/;"	l
c01047cf	obj/kernel.asm	/^c01047cf:	c7 04 24 6b 62 11 c0 	movl   $0xc011626b,(%esp)$/;"	l
c01047d6	obj/kernel.asm	/^c01047d6:	e8 ed c6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01047db	obj/kernel.asm	/^c01047db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01047de	obj/kernel.asm	/^c01047de:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01047e3	obj/kernel.asm	/^c01047e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01047e6	obj/kernel.asm	/^c01047e6:	e8 1f ff ff ff       	call   c010470a <pa2page>$/;"	l
c01047eb	obj/kernel.asm	/^c01047eb:	c9                   	leave  $/;"	l
c01047ec	obj/kernel.asm	/^c01047ec:	c3                   	ret    $/;"	l
c01047ed	obj/kernel.asm	/^c01047ed <__slob_get_free_pages>:$/;"	l
c01047ed	obj/kernel.asm	/^c01047ed:	55                   	push   %ebp$/;"	l
c01047ee	obj/kernel.asm	/^c01047ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01047f0	obj/kernel.asm	/^c01047f0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01047f3	obj/kernel.asm	/^c01047f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01047f6	obj/kernel.asm	/^c01047f6:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01047fb	obj/kernel.asm	/^c01047fb:	89 c1                	mov    %eax,%ecx$/;"	l
c01047fd	obj/kernel.asm	/^c01047fd:	d3 e2                	shl    %cl,%edx$/;"	d
c01047ff	obj/kernel.asm	/^c01047ff:	89 d0                	mov    %edx,%eax$/;"	l
c0104801	obj/kernel.asm	/^c0104801:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104804	obj/kernel.asm	/^c0104804:	e8 07 09 00 00       	call   c0105110 <alloc_pages>$/;"	l
c0104809	obj/kernel.asm	/^c0104809:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010480c	obj/kernel.asm	/^c010480c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104810	obj/kernel.asm	/^c0104810:	75 07                	jne    c0104819 <__slob_get_free_pages+0x2c>$/;"	l
c0104812	obj/kernel.asm	/^c0104812:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104817	obj/kernel.asm	/^c0104817:	eb 0b                	jmp    c0104824 <__slob_get_free_pages+0x37>$/;"	l
c0104819	obj/kernel.asm	/^c0104819:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010481c	obj/kernel.asm	/^c010481c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010481f	obj/kernel.asm	/^c010481f:	e8 2b ff ff ff       	call   c010474f <page2kva>$/;"	l
c0104824	obj/kernel.asm	/^c0104824:	c9                   	leave  $/;"	l
c0104825	obj/kernel.asm	/^c0104825:	c3                   	ret    $/;"	l
c0104826	obj/kernel.asm	/^c0104826 <__slob_free_pages>:$/;"	l
c0104826	obj/kernel.asm	/^c0104826:	55                   	push   %ebp$/;"	l
c0104827	obj/kernel.asm	/^c0104827:	89 e5                	mov    %esp,%ebp$/;"	l
c0104829	obj/kernel.asm	/^c0104829:	53                   	push   %ebx$/;"	l
c010482a	obj/kernel.asm	/^c010482a:	83 ec 14             	sub    $0x14,%esp$/;"	l
c010482d	obj/kernel.asm	/^c010482d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104830	obj/kernel.asm	/^c0104830:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0104835	obj/kernel.asm	/^c0104835:	89 c1                	mov    %eax,%ecx$/;"	l
c0104837	obj/kernel.asm	/^c0104837:	d3 e2                	shl    %cl,%edx$/;"	d
c0104839	obj/kernel.asm	/^c0104839:	89 d0                	mov    %edx,%eax$/;"	l
c010483b	obj/kernel.asm	/^c010483b:	89 c3                	mov    %eax,%ebx$/;"	l
c010483d	obj/kernel.asm	/^c010483d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104840	obj/kernel.asm	/^c0104840:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104843	obj/kernel.asm	/^c0104843:	e8 5b ff ff ff       	call   c01047a3 <kva2page>$/;"	l
c0104848	obj/kernel.asm	/^c0104848:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c010484c	obj/kernel.asm	/^c010484c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010484f	obj/kernel.asm	/^c010484f:	e8 27 09 00 00       	call   c010517b <free_pages>$/;"	l
c0104854	obj/kernel.asm	/^c0104854:	83 c4 14             	add    $0x14,%esp$/;"	l
c0104857	obj/kernel.asm	/^c0104857:	5b                   	pop    %ebx$/;"	l
c0104858	obj/kernel.asm	/^c0104858:	5d                   	pop    %ebp$/;"	l
c0104859	obj/kernel.asm	/^c0104859:	c3                   	ret    $/;"	l
c010485a	obj/kernel.asm	/^c010485a <slob_alloc>:$/;"	l
c010485a	obj/kernel.asm	/^c010485a:	55                   	push   %ebp$/;"	l
c010485b	obj/kernel.asm	/^c010485b:	89 e5                	mov    %esp,%ebp$/;"	l
c010485d	obj/kernel.asm	/^c010485d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0104860	obj/kernel.asm	/^c0104860:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104863	obj/kernel.asm	/^c0104863:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104866	obj/kernel.asm	/^c0104866:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010486b	obj/kernel.asm	/^c010486b:	76 24                	jbe    c0104891 <slob_alloc+0x37>$/;"	l
c010486d	obj/kernel.asm	/^c010486d:	c7 44 24 0c c4 62 11 	movl   $0xc01162c4,0xc(%esp)$/;"	l
c0104874	obj/kernel.asm	/^c0104874:	c0 $/;"	l
c0104875	obj/kernel.asm	/^c0104875:	c7 44 24 08 e3 62 11 	movl   $0xc01162e3,0x8(%esp)$/;"	l
c010487c	obj/kernel.asm	/^c010487c:	c0 $/;"	l
c010487d	obj/kernel.asm	/^c010487d:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0104884	obj/kernel.asm	/^c0104884:	00 $/;"	l
c0104885	obj/kernel.asm	/^c0104885:	c7 04 24 f8 62 11 c0 	movl   $0xc01162f8,(%esp)$/;"	l
c010488c	obj/kernel.asm	/^c010488c:	e8 37 c6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104891	obj/kernel.asm	/^c0104891:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0104898	obj/kernel.asm	/^c0104898:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010489f	obj/kernel.asm	/^c010489f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01048a2	obj/kernel.asm	/^c01048a2:	83 c0 07             	add    $0x7,%eax$/;"	l
c01048a5	obj/kernel.asm	/^c01048a5:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c01048a8	obj/kernel.asm	/^c01048a8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01048ab	obj/kernel.asm	/^c01048ab:	e8 f3 fd ff ff       	call   c01046a3 <__intr_save>$/;"	l
c01048b0	obj/kernel.asm	/^c01048b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01048b3	obj/kernel.asm	/^c01048b3:	a1 08 ea 14 c0       	mov    0xc014ea08,%eax$/;"	l
c01048b8	obj/kernel.asm	/^c01048b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01048bb	obj/kernel.asm	/^c01048bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01048be	obj/kernel.asm	/^c01048be:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01048c1	obj/kernel.asm	/^c01048c1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01048c4	obj/kernel.asm	/^c01048c4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01048c8	obj/kernel.asm	/^c01048c8:	74 25                	je     c01048ef <slob_alloc+0x95>$/;"	l
c01048ca	obj/kernel.asm	/^c01048ca:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01048cd	obj/kernel.asm	/^c01048cd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01048d0	obj/kernel.asm	/^c01048d0:	01 d0                	add    %edx,%eax$/;"	l
c01048d2	obj/kernel.asm	/^c01048d2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01048d5	obj/kernel.asm	/^c01048d5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01048d8	obj/kernel.asm	/^c01048d8:	f7 d8                	neg    %eax$/;"	l
c01048da	obj/kernel.asm	/^c01048da:	21 d0                	and    %edx,%eax$/;"	l
c01048dc	obj/kernel.asm	/^c01048dc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01048df	obj/kernel.asm	/^c01048df:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01048e2	obj/kernel.asm	/^c01048e2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048e5	obj/kernel.asm	/^c01048e5:	29 c2                	sub    %eax,%edx$/;"	l
c01048e7	obj/kernel.asm	/^c01048e7:	89 d0                	mov    %edx,%eax$/;"	l
c01048e9	obj/kernel.asm	/^c01048e9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c01048ec	obj/kernel.asm	/^c01048ec:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01048ef	obj/kernel.asm	/^c01048ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048f2	obj/kernel.asm	/^c01048f2:	8b 00                	mov    (%eax),%eax$/;"	l
c01048f4	obj/kernel.asm	/^c01048f4:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01048f7	obj/kernel.asm	/^c01048f7:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c01048fa	obj/kernel.asm	/^c01048fa:	01 ca                	add    %ecx,%edx$/;"	l
c01048fc	obj/kernel.asm	/^c01048fc:	39 d0                	cmp    %edx,%eax$/;"	l
c01048fe	obj/kernel.asm	/^c01048fe:	0f 8c aa 00 00 00    	jl     c01049ae <slob_alloc+0x154>$/;"	l
c0104904	obj/kernel.asm	/^c0104904:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0104908	obj/kernel.asm	/^c0104908:	74 38                	je     c0104942 <slob_alloc+0xe8>$/;"	l
c010490a	obj/kernel.asm	/^c010490a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010490d	obj/kernel.asm	/^c010490d:	8b 00                	mov    (%eax),%eax$/;"	l
c010490f	obj/kernel.asm	/^c010490f:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c0104912	obj/kernel.asm	/^c0104912:	89 c2                	mov    %eax,%edx$/;"	l
c0104914	obj/kernel.asm	/^c0104914:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104917	obj/kernel.asm	/^c0104917:	89 10                	mov    %edx,(%eax)$/;"	l
c0104919	obj/kernel.asm	/^c0104919:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010491c	obj/kernel.asm	/^c010491c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010491f	obj/kernel.asm	/^c010491f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104922	obj/kernel.asm	/^c0104922:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104925	obj/kernel.asm	/^c0104925:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104928	obj/kernel.asm	/^c0104928:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010492b	obj/kernel.asm	/^c010492b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010492e	obj/kernel.asm	/^c010492e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104931	obj/kernel.asm	/^c0104931:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0104934	obj/kernel.asm	/^c0104934:	89 10                	mov    %edx,(%eax)$/;"	l
c0104936	obj/kernel.asm	/^c0104936:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104939	obj/kernel.asm	/^c0104939:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010493c	obj/kernel.asm	/^c010493c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010493f	obj/kernel.asm	/^c010493f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104942	obj/kernel.asm	/^c0104942:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104945	obj/kernel.asm	/^c0104945:	8b 00                	mov    (%eax),%eax$/;"	l
c0104947	obj/kernel.asm	/^c0104947:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010494a	obj/kernel.asm	/^c010494a:	75 0e                	jne    c010495a <slob_alloc+0x100>$/;"	l
c010494c	obj/kernel.asm	/^c010494c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010494f	obj/kernel.asm	/^c010494f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104952	obj/kernel.asm	/^c0104952:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104955	obj/kernel.asm	/^c0104955:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104958	obj/kernel.asm	/^c0104958:	eb 3c                	jmp    c0104996 <slob_alloc+0x13c>$/;"	l
c010495a	obj/kernel.asm	/^c010495a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010495d	obj/kernel.asm	/^c010495d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0104964	obj/kernel.asm	/^c0104964:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104967	obj/kernel.asm	/^c0104967:	01 c2                	add    %eax,%edx$/;"	l
c0104969	obj/kernel.asm	/^c0104969:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010496c	obj/kernel.asm	/^c010496c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010496f	obj/kernel.asm	/^c010496f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104972	obj/kernel.asm	/^c0104972:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104975	obj/kernel.asm	/^c0104975:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104978	obj/kernel.asm	/^c0104978:	8b 12                	mov    (%edx),%edx$/;"	l
c010497a	obj/kernel.asm	/^c010497a:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c010497d	obj/kernel.asm	/^c010497d:	89 10                	mov    %edx,(%eax)$/;"	l
c010497f	obj/kernel.asm	/^c010497f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104982	obj/kernel.asm	/^c0104982:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104985	obj/kernel.asm	/^c0104985:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104988	obj/kernel.asm	/^c0104988:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c010498b	obj/kernel.asm	/^c010498b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010498e	obj/kernel.asm	/^c010498e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104991	obj/kernel.asm	/^c0104991:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0104994	obj/kernel.asm	/^c0104994:	89 10                	mov    %edx,(%eax)$/;"	l
c0104996	obj/kernel.asm	/^c0104996:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104999	obj/kernel.asm	/^c0104999:	a3 08 ea 14 c0       	mov    %eax,0xc014ea08$/;"	l
c010499e	obj/kernel.asm	/^c010499e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01049a1	obj/kernel.asm	/^c01049a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01049a4	obj/kernel.asm	/^c01049a4:	e8 24 fd ff ff       	call   c01046cd <__intr_restore>$/;"	l
c01049a9	obj/kernel.asm	/^c01049a9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049ac	obj/kernel.asm	/^c01049ac:	eb 7f                	jmp    c0104a2d <slob_alloc+0x1d3>$/;"	l
c01049ae	obj/kernel.asm	/^c01049ae:	a1 08 ea 14 c0       	mov    0xc014ea08,%eax$/;"	l
c01049b3	obj/kernel.asm	/^c01049b3:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01049b6	obj/kernel.asm	/^c01049b6:	75 61                	jne    c0104a19 <slob_alloc+0x1bf>$/;"	l
c01049b8	obj/kernel.asm	/^c01049b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01049bb	obj/kernel.asm	/^c01049bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01049be	obj/kernel.asm	/^c01049be:	e8 0a fd ff ff       	call   c01046cd <__intr_restore>$/;"	l
c01049c3	obj/kernel.asm	/^c01049c3:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01049ca	obj/kernel.asm	/^c01049ca:	75 07                	jne    c01049d3 <slob_alloc+0x179>$/;"	l
c01049cc	obj/kernel.asm	/^c01049cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01049d1	obj/kernel.asm	/^c01049d1:	eb 5a                	jmp    c0104a2d <slob_alloc+0x1d3>$/;"	l
c01049d3	obj/kernel.asm	/^c01049d3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01049da	obj/kernel.asm	/^c01049da:	00 $/;"	l
c01049db	obj/kernel.asm	/^c01049db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01049de	obj/kernel.asm	/^c01049de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01049e1	obj/kernel.asm	/^c01049e1:	e8 07 fe ff ff       	call   c01047ed <__slob_get_free_pages>$/;"	l
c01049e6	obj/kernel.asm	/^c01049e6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01049e9	obj/kernel.asm	/^c01049e9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01049ed	obj/kernel.asm	/^c01049ed:	75 07                	jne    c01049f6 <slob_alloc+0x19c>$/;"	l
c01049ef	obj/kernel.asm	/^c01049ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01049f4	obj/kernel.asm	/^c01049f4:	eb 37                	jmp    c0104a2d <slob_alloc+0x1d3>$/;"	l
c01049f6	obj/kernel.asm	/^c01049f6:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01049fd	obj/kernel.asm	/^c01049fd:	00 $/;"	l
c01049fe	obj/kernel.asm	/^c01049fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a01	obj/kernel.asm	/^c0104a01:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104a04	obj/kernel.asm	/^c0104a04:	e8 26 00 00 00       	call   c0104a2f <slob_free>$/;"	l
c0104a09	obj/kernel.asm	/^c0104a09:	e8 95 fc ff ff       	call   c01046a3 <__intr_save>$/;"	l
c0104a0e	obj/kernel.asm	/^c0104a0e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104a11	obj/kernel.asm	/^c0104a11:	a1 08 ea 14 c0       	mov    0xc014ea08,%eax$/;"	l
c0104a16	obj/kernel.asm	/^c0104a16:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104a19	obj/kernel.asm	/^c0104a19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a1c	obj/kernel.asm	/^c0104a1c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104a1f	obj/kernel.asm	/^c0104a1f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a22	obj/kernel.asm	/^c0104a22:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a25	obj/kernel.asm	/^c0104a25:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104a28	obj/kernel.asm	/^c0104a28:	e9 97 fe ff ff       	jmp    c01048c4 <slob_alloc+0x6a>$/;"	l
c0104a2d	obj/kernel.asm	/^c0104a2d:	c9                   	leave  $/;"	l
c0104a2e	obj/kernel.asm	/^c0104a2e:	c3                   	ret    $/;"	l
c0104a2f	obj/kernel.asm	/^c0104a2f <slob_free>:$/;"	l
c0104a2f	obj/kernel.asm	/^c0104a2f:	55                   	push   %ebp$/;"	l
c0104a30	obj/kernel.asm	/^c0104a30:	89 e5                	mov    %esp,%ebp$/;"	l
c0104a32	obj/kernel.asm	/^c0104a32:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104a35	obj/kernel.asm	/^c0104a35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104a38	obj/kernel.asm	/^c0104a38:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104a3b	obj/kernel.asm	/^c0104a3b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104a3f	obj/kernel.asm	/^c0104a3f:	75 05                	jne    c0104a46 <slob_free+0x17>$/;"	l
c0104a41	obj/kernel.asm	/^c0104a41:	e9 ff 00 00 00       	jmp    c0104b45 <slob_free+0x116>$/;"	l
c0104a46	obj/kernel.asm	/^c0104a46:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0104a4a	obj/kernel.asm	/^c0104a4a:	74 10                	je     c0104a5c <slob_free+0x2d>$/;"	l
c0104a4c	obj/kernel.asm	/^c0104a4c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104a4f	obj/kernel.asm	/^c0104a4f:	83 c0 07             	add    $0x7,%eax$/;"	l
c0104a52	obj/kernel.asm	/^c0104a52:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0104a55	obj/kernel.asm	/^c0104a55:	89 c2                	mov    %eax,%edx$/;"	l
c0104a57	obj/kernel.asm	/^c0104a57:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a5a	obj/kernel.asm	/^c0104a5a:	89 10                	mov    %edx,(%eax)$/;"	l
c0104a5c	obj/kernel.asm	/^c0104a5c:	e8 42 fc ff ff       	call   c01046a3 <__intr_save>$/;"	l
c0104a61	obj/kernel.asm	/^c0104a61:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104a64	obj/kernel.asm	/^c0104a64:	a1 08 ea 14 c0       	mov    0xc014ea08,%eax$/;"	l
c0104a69	obj/kernel.asm	/^c0104a69:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104a6c	obj/kernel.asm	/^c0104a6c:	eb 27                	jmp    c0104a95 <slob_free+0x66>$/;"	l
c0104a6e	obj/kernel.asm	/^c0104a6e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a71	obj/kernel.asm	/^c0104a71:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a74	obj/kernel.asm	/^c0104a74:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104a77	obj/kernel.asm	/^c0104a77:	77 13                	ja     c0104a8c <slob_free+0x5d>$/;"	l
c0104a79	obj/kernel.asm	/^c0104a79:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a7c	obj/kernel.asm	/^c0104a7c:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104a7f	obj/kernel.asm	/^c0104a7f:	77 27                	ja     c0104aa8 <slob_free+0x79>$/;"	l
c0104a81	obj/kernel.asm	/^c0104a81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a84	obj/kernel.asm	/^c0104a84:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a87	obj/kernel.asm	/^c0104a87:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104a8a	obj/kernel.asm	/^c0104a8a:	77 1c                	ja     c0104aa8 <slob_free+0x79>$/;"	l
c0104a8c	obj/kernel.asm	/^c0104a8c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104a8f	obj/kernel.asm	/^c0104a8f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104a92	obj/kernel.asm	/^c0104a92:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104a95	obj/kernel.asm	/^c0104a95:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a98	obj/kernel.asm	/^c0104a98:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104a9b	obj/kernel.asm	/^c0104a9b:	76 d1                	jbe    c0104a6e <slob_free+0x3f>$/;"	l
c0104a9d	obj/kernel.asm	/^c0104a9d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104aa0	obj/kernel.asm	/^c0104aa0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104aa3	obj/kernel.asm	/^c0104aa3:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104aa6	obj/kernel.asm	/^c0104aa6:	76 c6                	jbe    c0104a6e <slob_free+0x3f>$/;"	l
c0104aa8	obj/kernel.asm	/^c0104aa8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104aab	obj/kernel.asm	/^c0104aab:	8b 00                	mov    (%eax),%eax$/;"	l
c0104aad	obj/kernel.asm	/^c0104aad:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0104ab4	obj/kernel.asm	/^c0104ab4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ab7	obj/kernel.asm	/^c0104ab7:	01 c2                	add    %eax,%edx$/;"	l
c0104ab9	obj/kernel.asm	/^c0104ab9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104abc	obj/kernel.asm	/^c0104abc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104abf	obj/kernel.asm	/^c0104abf:	39 c2                	cmp    %eax,%edx$/;"	l
c0104ac1	obj/kernel.asm	/^c0104ac1:	75 25                	jne    c0104ae8 <slob_free+0xb9>$/;"	l
c0104ac3	obj/kernel.asm	/^c0104ac3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ac6	obj/kernel.asm	/^c0104ac6:	8b 10                	mov    (%eax),%edx$/;"	l
c0104ac8	obj/kernel.asm	/^c0104ac8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104acb	obj/kernel.asm	/^c0104acb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104ace	obj/kernel.asm	/^c0104ace:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ad0	obj/kernel.asm	/^c0104ad0:	01 c2                	add    %eax,%edx$/;"	l
c0104ad2	obj/kernel.asm	/^c0104ad2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ad5	obj/kernel.asm	/^c0104ad5:	89 10                	mov    %edx,(%eax)$/;"	l
c0104ad7	obj/kernel.asm	/^c0104ad7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ada	obj/kernel.asm	/^c0104ada:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104add	obj/kernel.asm	/^c0104add:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104ae0	obj/kernel.asm	/^c0104ae0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ae3	obj/kernel.asm	/^c0104ae3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104ae6	obj/kernel.asm	/^c0104ae6:	eb 0c                	jmp    c0104af4 <slob_free+0xc5>$/;"	l
c0104ae8	obj/kernel.asm	/^c0104ae8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104aeb	obj/kernel.asm	/^c0104aeb:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104aee	obj/kernel.asm	/^c0104aee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104af1	obj/kernel.asm	/^c0104af1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104af4	obj/kernel.asm	/^c0104af4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104af7	obj/kernel.asm	/^c0104af7:	8b 00                	mov    (%eax),%eax$/;"	l
c0104af9	obj/kernel.asm	/^c0104af9:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0104b00	obj/kernel.asm	/^c0104b00:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b03	obj/kernel.asm	/^c0104b03:	01 d0                	add    %edx,%eax$/;"	l
c0104b05	obj/kernel.asm	/^c0104b05:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104b08	obj/kernel.asm	/^c0104b08:	75 1f                	jne    c0104b29 <slob_free+0xfa>$/;"	l
c0104b0a	obj/kernel.asm	/^c0104b0a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b0d	obj/kernel.asm	/^c0104b0d:	8b 10                	mov    (%eax),%edx$/;"	l
c0104b0f	obj/kernel.asm	/^c0104b0f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b12	obj/kernel.asm	/^c0104b12:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b14	obj/kernel.asm	/^c0104b14:	01 c2                	add    %eax,%edx$/;"	l
c0104b16	obj/kernel.asm	/^c0104b16:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b19	obj/kernel.asm	/^c0104b19:	89 10                	mov    %edx,(%eax)$/;"	l
c0104b1b	obj/kernel.asm	/^c0104b1b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b1e	obj/kernel.asm	/^c0104b1e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0104b21	obj/kernel.asm	/^c0104b21:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b24	obj/kernel.asm	/^c0104b24:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104b27	obj/kernel.asm	/^c0104b27:	eb 09                	jmp    c0104b32 <slob_free+0x103>$/;"	l
c0104b29	obj/kernel.asm	/^c0104b29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b2c	obj/kernel.asm	/^c0104b2c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104b2f	obj/kernel.asm	/^c0104b2f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0104b32	obj/kernel.asm	/^c0104b32:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b35	obj/kernel.asm	/^c0104b35:	a3 08 ea 14 c0       	mov    %eax,0xc014ea08$/;"	l
c0104b3a	obj/kernel.asm	/^c0104b3a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104b3d	obj/kernel.asm	/^c0104b3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104b40	obj/kernel.asm	/^c0104b40:	e8 88 fb ff ff       	call   c01046cd <__intr_restore>$/;"	l
c0104b45	obj/kernel.asm	/^c0104b45:	c9                   	leave  $/;"	l
c0104b46	obj/kernel.asm	/^c0104b46:	c3                   	ret    $/;"	l
c0104b47	obj/kernel.asm	/^c0104b47 <slob_init>:$/;"	l
c0104b47	obj/kernel.asm	/^c0104b47:	55                   	push   %ebp$/;"	l
c0104b48	obj/kernel.asm	/^c0104b48:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b4a	obj/kernel.asm	/^c0104b4a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104b4d	obj/kernel.asm	/^c0104b4d:	c7 04 24 0a 63 11 c0 	movl   $0xc011630a,(%esp)$/;"	l
c0104b54	obj/kernel.asm	/^c0104b54:	e8 0c b8 ff ff       	call   c0100365 <cprintf>$/;"	l
c0104b59	obj/kernel.asm	/^c0104b59:	c9                   	leave  $/;"	l
c0104b5a	obj/kernel.asm	/^c0104b5a:	c3                   	ret    $/;"	l
c0104b5b	obj/kernel.asm	/^c0104b5b <kmalloc_init>:$/;"	l
c0104b5b	obj/kernel.asm	/^c0104b5b:	55                   	push   %ebp$/;"	l
c0104b5c	obj/kernel.asm	/^c0104b5c:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b5e	obj/kernel.asm	/^c0104b5e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104b61	obj/kernel.asm	/^c0104b61:	e8 e1 ff ff ff       	call   c0104b47 <slob_init>$/;"	l
c0104b66	obj/kernel.asm	/^c0104b66:	c7 04 24 1e 63 11 c0 	movl   $0xc011631e,(%esp)$/;"	l
c0104b6d	obj/kernel.asm	/^c0104b6d:	e8 f3 b7 ff ff       	call   c0100365 <cprintf>$/;"	l
c0104b72	obj/kernel.asm	/^c0104b72:	c9                   	leave  $/;"	l
c0104b73	obj/kernel.asm	/^c0104b73:	c3                   	ret    $/;"	l
c0104b74	obj/kernel.asm	/^c0104b74 <slob_allocated>:$/;"	l
c0104b74	obj/kernel.asm	/^c0104b74:	55                   	push   %ebp$/;"	l
c0104b75	obj/kernel.asm	/^c0104b75:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b77	obj/kernel.asm	/^c0104b77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104b7c	obj/kernel.asm	/^c0104b7c:	5d                   	pop    %ebp$/;"	l
c0104b7d	obj/kernel.asm	/^c0104b7d:	c3                   	ret    $/;"	l
c0104b7e	obj/kernel.asm	/^c0104b7e <kallocated>:$/;"	l
c0104b7e	obj/kernel.asm	/^c0104b7e:	55                   	push   %ebp$/;"	l
c0104b7f	obj/kernel.asm	/^c0104b7f:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b81	obj/kernel.asm	/^c0104b81:	e8 ee ff ff ff       	call   c0104b74 <slob_allocated>$/;"	l
c0104b86	obj/kernel.asm	/^c0104b86:	5d                   	pop    %ebp$/;"	l
c0104b87	obj/kernel.asm	/^c0104b87:	c3                   	ret    $/;"	l
c0104b88	obj/kernel.asm	/^c0104b88 <find_order>:$/;"	l
c0104b88	obj/kernel.asm	/^c0104b88:	55                   	push   %ebp$/;"	l
c0104b89	obj/kernel.asm	/^c0104b89:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b8b	obj/kernel.asm	/^c0104b8b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0104b8e	obj/kernel.asm	/^c0104b8e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0104b95	obj/kernel.asm	/^c0104b95:	eb 07                	jmp    c0104b9e <find_order+0x16>$/;"	l
c0104b97	obj/kernel.asm	/^c0104b97:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0104b9b	obj/kernel.asm	/^c0104b9b:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c0104b9e	obj/kernel.asm	/^c0104b9e:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0104ba5	obj/kernel.asm	/^c0104ba5:	7f f0                	jg     c0104b97 <find_order+0xf>$/;"	l
c0104ba7	obj/kernel.asm	/^c0104ba7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0104baa	obj/kernel.asm	/^c0104baa:	c9                   	leave  $/;"	l
c0104bab	obj/kernel.asm	/^c0104bab:	c3                   	ret    $/;"	l
c0104bac	obj/kernel.asm	/^c0104bac <__kmalloc>:$/;"	l
c0104bac	obj/kernel.asm	/^c0104bac:	55                   	push   %ebp$/;"	l
c0104bad	obj/kernel.asm	/^c0104bad:	89 e5                	mov    %esp,%ebp$/;"	l
c0104baf	obj/kernel.asm	/^c0104baf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104bb2	obj/kernel.asm	/^c0104bb2:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c0104bb9	obj/kernel.asm	/^c0104bb9:	77 38                	ja     c0104bf3 <__kmalloc+0x47>$/;"	l
c0104bbb	obj/kernel.asm	/^c0104bbb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104bbe	obj/kernel.asm	/^c0104bbe:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c0104bc1	obj/kernel.asm	/^c0104bc1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0104bc8	obj/kernel.asm	/^c0104bc8:	00 $/;"	l
c0104bc9	obj/kernel.asm	/^c0104bc9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104bcc	obj/kernel.asm	/^c0104bcc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104bd0	obj/kernel.asm	/^c0104bd0:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0104bd3	obj/kernel.asm	/^c0104bd3:	e8 82 fc ff ff       	call   c010485a <slob_alloc>$/;"	l
c0104bd8	obj/kernel.asm	/^c0104bd8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104bdb	obj/kernel.asm	/^c0104bdb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104bdf	obj/kernel.asm	/^c0104bdf:	74 08                	je     c0104be9 <__kmalloc+0x3d>$/;"	l
c0104be1	obj/kernel.asm	/^c0104be1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104be4	obj/kernel.asm	/^c0104be4:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104be7	obj/kernel.asm	/^c0104be7:	eb 05                	jmp    c0104bee <__kmalloc+0x42>$/;"	l
c0104be9	obj/kernel.asm	/^c0104be9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104bee	obj/kernel.asm	/^c0104bee:	e9 a6 00 00 00       	jmp    c0104c99 <__kmalloc+0xed>$/;"	l
c0104bf3	obj/kernel.asm	/^c0104bf3:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0104bfa	obj/kernel.asm	/^c0104bfa:	00 $/;"	l
c0104bfb	obj/kernel.asm	/^c0104bfb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104bfe	obj/kernel.asm	/^c0104bfe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104c02	obj/kernel.asm	/^c0104c02:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)$/;"	l
c0104c09	obj/kernel.asm	/^c0104c09:	e8 4c fc ff ff       	call   c010485a <slob_alloc>$/;"	l
c0104c0e	obj/kernel.asm	/^c0104c0e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104c11	obj/kernel.asm	/^c0104c11:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104c15	obj/kernel.asm	/^c0104c15:	75 07                	jne    c0104c1e <__kmalloc+0x72>$/;"	l
c0104c17	obj/kernel.asm	/^c0104c17:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104c1c	obj/kernel.asm	/^c0104c1c:	eb 7b                	jmp    c0104c99 <__kmalloc+0xed>$/;"	l
c0104c1e	obj/kernel.asm	/^c0104c1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c21	obj/kernel.asm	/^c0104c21:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c24	obj/kernel.asm	/^c0104c24:	e8 5f ff ff ff       	call   c0104b88 <find_order>$/;"	l
c0104c29	obj/kernel.asm	/^c0104c29:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104c2c	obj/kernel.asm	/^c0104c2c:	89 02                	mov    %eax,(%edx)$/;"	l
c0104c2e	obj/kernel.asm	/^c0104c2e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c31	obj/kernel.asm	/^c0104c31:	8b 00                	mov    (%eax),%eax$/;"	l
c0104c33	obj/kernel.asm	/^c0104c33:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104c37	obj/kernel.asm	/^c0104c37:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104c3a	obj/kernel.asm	/^c0104c3a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c3d	obj/kernel.asm	/^c0104c3d:	e8 ab fb ff ff       	call   c01047ed <__slob_get_free_pages>$/;"	l
c0104c42	obj/kernel.asm	/^c0104c42:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104c45	obj/kernel.asm	/^c0104c45:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0104c48	obj/kernel.asm	/^c0104c48:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c4b	obj/kernel.asm	/^c0104c4b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104c4e	obj/kernel.asm	/^c0104c4e:	85 c0                	test   %eax,%eax$/;"	l
c0104c50	obj/kernel.asm	/^c0104c50:	74 2f                	je     c0104c81 <__kmalloc+0xd5>$/;"	l
c0104c52	obj/kernel.asm	/^c0104c52:	e8 4c fa ff ff       	call   c01046a3 <__intr_save>$/;"	l
c0104c57	obj/kernel.asm	/^c0104c57:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104c5a	obj/kernel.asm	/^c0104c5a:	8b 15 64 fe 14 c0    	mov    0xc014fe64,%edx$/;"	l
c0104c60	obj/kernel.asm	/^c0104c60:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c63	obj/kernel.asm	/^c0104c63:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0104c66	obj/kernel.asm	/^c0104c66:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c69	obj/kernel.asm	/^c0104c69:	a3 64 fe 14 c0       	mov    %eax,0xc014fe64$/;"	l
c0104c6e	obj/kernel.asm	/^c0104c6e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104c71	obj/kernel.asm	/^c0104c71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c74	obj/kernel.asm	/^c0104c74:	e8 54 fa ff ff       	call   c01046cd <__intr_restore>$/;"	l
c0104c79	obj/kernel.asm	/^c0104c79:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c7c	obj/kernel.asm	/^c0104c7c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104c7f	obj/kernel.asm	/^c0104c7f:	eb 18                	jmp    c0104c99 <__kmalloc+0xed>$/;"	l
c0104c81	obj/kernel.asm	/^c0104c81:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0104c88	obj/kernel.asm	/^c0104c88:	00 $/;"	l
c0104c89	obj/kernel.asm	/^c0104c89:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c8c	obj/kernel.asm	/^c0104c8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c8f	obj/kernel.asm	/^c0104c8f:	e8 9b fd ff ff       	call   c0104a2f <slob_free>$/;"	l
c0104c94	obj/kernel.asm	/^c0104c94:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104c99	obj/kernel.asm	/^c0104c99:	c9                   	leave  $/;"	l
c0104c9a	obj/kernel.asm	/^c0104c9a:	c3                   	ret    $/;"	l
c0104c9b	obj/kernel.asm	/^c0104c9b <kmalloc>:$/;"	l
c0104c9b	obj/kernel.asm	/^c0104c9b:	55                   	push   %ebp$/;"	l
c0104c9c	obj/kernel.asm	/^c0104c9c:	89 e5                	mov    %esp,%ebp$/;"	l
c0104c9e	obj/kernel.asm	/^c0104c9e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104ca1	obj/kernel.asm	/^c0104ca1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104ca8	obj/kernel.asm	/^c0104ca8:	00 $/;"	l
c0104ca9	obj/kernel.asm	/^c0104ca9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104cac	obj/kernel.asm	/^c0104cac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104caf	obj/kernel.asm	/^c0104caf:	e8 f8 fe ff ff       	call   c0104bac <__kmalloc>$/;"	l
c0104cb4	obj/kernel.asm	/^c0104cb4:	c9                   	leave  $/;"	l
c0104cb5	obj/kernel.asm	/^c0104cb5:	c3                   	ret    $/;"	l
c0104cb6	obj/kernel.asm	/^c0104cb6 <kfree>:$/;"	l
c0104cb6	obj/kernel.asm	/^c0104cb6:	55                   	push   %ebp$/;"	l
c0104cb7	obj/kernel.asm	/^c0104cb7:	89 e5                	mov    %esp,%ebp$/;"	l
c0104cb9	obj/kernel.asm	/^c0104cb9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104cbc	obj/kernel.asm	/^c0104cbc:	c7 45 f0 64 fe 14 c0 	movl   $0xc014fe64,-0x10(%ebp)$/;"	l
c0104cc3	obj/kernel.asm	/^c0104cc3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104cc7	obj/kernel.asm	/^c0104cc7:	75 05                	jne    c0104cce <kfree+0x18>$/;"	l
c0104cc9	obj/kernel.asm	/^c0104cc9:	e9 a2 00 00 00       	jmp    c0104d70 <kfree+0xba>$/;"	l
c0104cce	obj/kernel.asm	/^c0104cce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104cd1	obj/kernel.asm	/^c0104cd1:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104cd6	obj/kernel.asm	/^c0104cd6:	85 c0                	test   %eax,%eax$/;"	l
c0104cd8	obj/kernel.asm	/^c0104cd8:	75 7f                	jne    c0104d59 <kfree+0xa3>$/;"	l
c0104cda	obj/kernel.asm	/^c0104cda:	e8 c4 f9 ff ff       	call   c01046a3 <__intr_save>$/;"	l
c0104cdf	obj/kernel.asm	/^c0104cdf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104ce2	obj/kernel.asm	/^c0104ce2:	a1 64 fe 14 c0       	mov    0xc014fe64,%eax$/;"	l
c0104ce7	obj/kernel.asm	/^c0104ce7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104cea	obj/kernel.asm	/^c0104cea:	eb 5c                	jmp    c0104d48 <kfree+0x92>$/;"	l
c0104cec	obj/kernel.asm	/^c0104cec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cef	obj/kernel.asm	/^c0104cef:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104cf2	obj/kernel.asm	/^c0104cf2:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0104cf5	obj/kernel.asm	/^c0104cf5:	75 3f                	jne    c0104d36 <kfree+0x80>$/;"	l
c0104cf7	obj/kernel.asm	/^c0104cf7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cfa	obj/kernel.asm	/^c0104cfa:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0104cfd	obj/kernel.asm	/^c0104cfd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d00	obj/kernel.asm	/^c0104d00:	89 10                	mov    %edx,(%eax)$/;"	l
c0104d02	obj/kernel.asm	/^c0104d02:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104d05	obj/kernel.asm	/^c0104d05:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d08	obj/kernel.asm	/^c0104d08:	e8 c0 f9 ff ff       	call   c01046cd <__intr_restore>$/;"	l
c0104d0d	obj/kernel.asm	/^c0104d0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d10	obj/kernel.asm	/^c0104d10:	8b 10                	mov    (%eax),%edx$/;"	l
c0104d12	obj/kernel.asm	/^c0104d12:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d15	obj/kernel.asm	/^c0104d15:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0104d19	obj/kernel.asm	/^c0104d19:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d1c	obj/kernel.asm	/^c0104d1c:	e8 05 fb ff ff       	call   c0104826 <__slob_free_pages>$/;"	l
c0104d21	obj/kernel.asm	/^c0104d21:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0104d28	obj/kernel.asm	/^c0104d28:	00 $/;"	l
c0104d29	obj/kernel.asm	/^c0104d29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d2c	obj/kernel.asm	/^c0104d2c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d2f	obj/kernel.asm	/^c0104d2f:	e8 fb fc ff ff       	call   c0104a2f <slob_free>$/;"	l
c0104d34	obj/kernel.asm	/^c0104d34:	eb 3a                	jmp    c0104d70 <kfree+0xba>$/;"	l
c0104d36	obj/kernel.asm	/^c0104d36:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d39	obj/kernel.asm	/^c0104d39:	83 c0 08             	add    $0x8,%eax$/;"	l
c0104d3c	obj/kernel.asm	/^c0104d3c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104d3f	obj/kernel.asm	/^c0104d3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d42	obj/kernel.asm	/^c0104d42:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104d45	obj/kernel.asm	/^c0104d45:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104d48	obj/kernel.asm	/^c0104d48:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104d4c	obj/kernel.asm	/^c0104d4c:	75 9e                	jne    c0104cec <kfree+0x36>$/;"	l
c0104d4e	obj/kernel.asm	/^c0104d4e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104d51	obj/kernel.asm	/^c0104d51:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d54	obj/kernel.asm	/^c0104d54:	e8 74 f9 ff ff       	call   c01046cd <__intr_restore>$/;"	l
c0104d59	obj/kernel.asm	/^c0104d59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d5c	obj/kernel.asm	/^c0104d5c:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0104d5f	obj/kernel.asm	/^c0104d5f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104d66	obj/kernel.asm	/^c0104d66:	00 $/;"	l
c0104d67	obj/kernel.asm	/^c0104d67:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d6a	obj/kernel.asm	/^c0104d6a:	e8 c0 fc ff ff       	call   c0104a2f <slob_free>$/;"	l
c0104d6f	obj/kernel.asm	/^c0104d6f:	90                   	nop$/;"	l
c0104d70	obj/kernel.asm	/^c0104d70:	c9                   	leave  $/;"	l
c0104d71	obj/kernel.asm	/^c0104d71:	c3                   	ret    $/;"	l
c0104d72	obj/kernel.asm	/^c0104d72 <ksize>:$/;"	l
c0104d72	obj/kernel.asm	/^c0104d72:	55                   	push   %ebp$/;"	l
c0104d73	obj/kernel.asm	/^c0104d73:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d75	obj/kernel.asm	/^c0104d75:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104d78	obj/kernel.asm	/^c0104d78:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104d7c	obj/kernel.asm	/^c0104d7c:	75 07                	jne    c0104d85 <ksize+0x13>$/;"	l
c0104d7e	obj/kernel.asm	/^c0104d7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104d83	obj/kernel.asm	/^c0104d83:	eb 6b                	jmp    c0104df0 <ksize+0x7e>$/;"	l
c0104d85	obj/kernel.asm	/^c0104d85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104d88	obj/kernel.asm	/^c0104d88:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104d8d	obj/kernel.asm	/^c0104d8d:	85 c0                	test   %eax,%eax$/;"	l
c0104d8f	obj/kernel.asm	/^c0104d8f:	75 54                	jne    c0104de5 <ksize+0x73>$/;"	l
c0104d91	obj/kernel.asm	/^c0104d91:	e8 0d f9 ff ff       	call   c01046a3 <__intr_save>$/;"	l
c0104d96	obj/kernel.asm	/^c0104d96:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104d99	obj/kernel.asm	/^c0104d99:	a1 64 fe 14 c0       	mov    0xc014fe64,%eax$/;"	l
c0104d9e	obj/kernel.asm	/^c0104d9e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104da1	obj/kernel.asm	/^c0104da1:	eb 31                	jmp    c0104dd4 <ksize+0x62>$/;"	l
c0104da3	obj/kernel.asm	/^c0104da3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104da6	obj/kernel.asm	/^c0104da6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104da9	obj/kernel.asm	/^c0104da9:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0104dac	obj/kernel.asm	/^c0104dac:	75 1d                	jne    c0104dcb <ksize+0x59>$/;"	l
c0104dae	obj/kernel.asm	/^c0104dae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104db1	obj/kernel.asm	/^c0104db1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104db4	obj/kernel.asm	/^c0104db4:	e8 14 f9 ff ff       	call   c01046cd <__intr_restore>$/;"	l
c0104db9	obj/kernel.asm	/^c0104db9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104dbc	obj/kernel.asm	/^c0104dbc:	8b 00                	mov    (%eax),%eax$/;"	l
c0104dbe	obj/kernel.asm	/^c0104dbe:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c0104dc3	obj/kernel.asm	/^c0104dc3:	89 c1                	mov    %eax,%ecx$/;"	l
c0104dc5	obj/kernel.asm	/^c0104dc5:	d3 e2                	shl    %cl,%edx$/;"	d
c0104dc7	obj/kernel.asm	/^c0104dc7:	89 d0                	mov    %edx,%eax$/;"	l
c0104dc9	obj/kernel.asm	/^c0104dc9:	eb 25                	jmp    c0104df0 <ksize+0x7e>$/;"	l
c0104dcb	obj/kernel.asm	/^c0104dcb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104dce	obj/kernel.asm	/^c0104dce:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0104dd1	obj/kernel.asm	/^c0104dd1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104dd4	obj/kernel.asm	/^c0104dd4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104dd8	obj/kernel.asm	/^c0104dd8:	75 c9                	jne    c0104da3 <ksize+0x31>$/;"	l
c0104dda	obj/kernel.asm	/^c0104dda:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ddd	obj/kernel.asm	/^c0104ddd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104de0	obj/kernel.asm	/^c0104de0:	e8 e8 f8 ff ff       	call   c01046cd <__intr_restore>$/;"	l
c0104de5	obj/kernel.asm	/^c0104de5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104de8	obj/kernel.asm	/^c0104de8:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0104deb	obj/kernel.asm	/^c0104deb:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ded	obj/kernel.asm	/^c0104ded:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0104df0	obj/kernel.asm	/^c0104df0:	c9                   	leave  $/;"	l
c0104df1	obj/kernel.asm	/^c0104df1:	c3                   	ret    $/;"	l
c0104df2	obj/kernel.asm	/^c0104df2 <page2ppn>:$/;"	l
c0104df2	obj/kernel.asm	/^c0104df2:	55                   	push   %ebp$/;"	l
c0104df3	obj/kernel.asm	/^c0104df3:	89 e5                	mov    %esp,%ebp$/;"	l
c0104df5	obj/kernel.asm	/^c0104df5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104df8	obj/kernel.asm	/^c0104df8:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c0104dfd	obj/kernel.asm	/^c0104dfd:	29 c2                	sub    %eax,%edx$/;"	l
c0104dff	obj/kernel.asm	/^c0104dff:	89 d0                	mov    %edx,%eax$/;"	l
c0104e01	obj/kernel.asm	/^c0104e01:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0104e04	obj/kernel.asm	/^c0104e04:	5d                   	pop    %ebp$/;"	l
c0104e05	obj/kernel.asm	/^c0104e05:	c3                   	ret    $/;"	l
c0104e06	obj/kernel.asm	/^c0104e06 <page2pa>:$/;"	l
c0104e06	obj/kernel.asm	/^c0104e06:	55                   	push   %ebp$/;"	l
c0104e07	obj/kernel.asm	/^c0104e07:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e09	obj/kernel.asm	/^c0104e09:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104e0c	obj/kernel.asm	/^c0104e0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e0f	obj/kernel.asm	/^c0104e0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e12	obj/kernel.asm	/^c0104e12:	e8 db ff ff ff       	call   c0104df2 <page2ppn>$/;"	l
c0104e17	obj/kernel.asm	/^c0104e17:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0104e1a	obj/kernel.asm	/^c0104e1a:	c9                   	leave  $/;"	l
c0104e1b	obj/kernel.asm	/^c0104e1b:	c3                   	ret    $/;"	l
c0104e1c	obj/kernel.asm	/^c0104e1c <pa2page>:$/;"	l
c0104e1c	obj/kernel.asm	/^c0104e1c:	55                   	push   %ebp$/;"	l
c0104e1d	obj/kernel.asm	/^c0104e1d:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e1f	obj/kernel.asm	/^c0104e1f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104e22	obj/kernel.asm	/^c0104e22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e25	obj/kernel.asm	/^c0104e25:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104e28	obj/kernel.asm	/^c0104e28:	89 c2                	mov    %eax,%edx$/;"	l
c0104e2a	obj/kernel.asm	/^c0104e2a:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c0104e2f	obj/kernel.asm	/^c0104e2f:	39 c2                	cmp    %eax,%edx$/;"	l
c0104e31	obj/kernel.asm	/^c0104e31:	72 1c                	jb     c0104e4f <pa2page+0x33>$/;"	l
c0104e33	obj/kernel.asm	/^c0104e33:	c7 44 24 08 3c 63 11 	movl   $0xc011633c,0x8(%esp)$/;"	l
c0104e3a	obj/kernel.asm	/^c0104e3a:	c0 $/;"	l
c0104e3b	obj/kernel.asm	/^c0104e3b:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0104e42	obj/kernel.asm	/^c0104e42:	00 $/;"	l
c0104e43	obj/kernel.asm	/^c0104e43:	c7 04 24 5b 63 11 c0 	movl   $0xc011635b,(%esp)$/;"	l
c0104e4a	obj/kernel.asm	/^c0104e4a:	e8 79 c0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104e4f	obj/kernel.asm	/^c0104e4f:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c0104e54	obj/kernel.asm	/^c0104e54:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104e57	obj/kernel.asm	/^c0104e57:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0104e5a	obj/kernel.asm	/^c0104e5a:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0104e5d	obj/kernel.asm	/^c0104e5d:	01 d0                	add    %edx,%eax$/;"	l
c0104e5f	obj/kernel.asm	/^c0104e5f:	c9                   	leave  $/;"	l
c0104e60	obj/kernel.asm	/^c0104e60:	c3                   	ret    $/;"	l
c0104e61	obj/kernel.asm	/^c0104e61 <page2kva>:$/;"	l
c0104e61	obj/kernel.asm	/^c0104e61:	55                   	push   %ebp$/;"	l
c0104e62	obj/kernel.asm	/^c0104e62:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e64	obj/kernel.asm	/^c0104e64:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104e67	obj/kernel.asm	/^c0104e67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104e6a	obj/kernel.asm	/^c0104e6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104e6d	obj/kernel.asm	/^c0104e6d:	e8 94 ff ff ff       	call   c0104e06 <page2pa>$/;"	l
c0104e72	obj/kernel.asm	/^c0104e72:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104e75	obj/kernel.asm	/^c0104e75:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104e78	obj/kernel.asm	/^c0104e78:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104e7b	obj/kernel.asm	/^c0104e7b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104e7e	obj/kernel.asm	/^c0104e7e:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c0104e83	obj/kernel.asm	/^c0104e83:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0104e86	obj/kernel.asm	/^c0104e86:	72 23                	jb     c0104eab <page2kva+0x4a>$/;"	l
c0104e88	obj/kernel.asm	/^c0104e88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104e8b	obj/kernel.asm	/^c0104e8b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104e8f	obj/kernel.asm	/^c0104e8f:	c7 44 24 08 6c 63 11 	movl   $0xc011636c,0x8(%esp)$/;"	l
c0104e96	obj/kernel.asm	/^c0104e96:	c0 $/;"	l
c0104e97	obj/kernel.asm	/^c0104e97:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0104e9e	obj/kernel.asm	/^c0104e9e:	00 $/;"	l
c0104e9f	obj/kernel.asm	/^c0104e9f:	c7 04 24 5b 63 11 c0 	movl   $0xc011635b,(%esp)$/;"	l
c0104ea6	obj/kernel.asm	/^c0104ea6:	e8 1d c0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104eab	obj/kernel.asm	/^c0104eab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104eae	obj/kernel.asm	/^c0104eae:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104eb3	obj/kernel.asm	/^c0104eb3:	c9                   	leave  $/;"	l
c0104eb4	obj/kernel.asm	/^c0104eb4:	c3                   	ret    $/;"	l
c0104eb5	obj/kernel.asm	/^c0104eb5 <pte2page>:$/;"	l
c0104eb5	obj/kernel.asm	/^c0104eb5:	55                   	push   %ebp$/;"	l
c0104eb6	obj/kernel.asm	/^c0104eb6:	89 e5                	mov    %esp,%ebp$/;"	l
c0104eb8	obj/kernel.asm	/^c0104eb8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104ebb	obj/kernel.asm	/^c0104ebb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ebe	obj/kernel.asm	/^c0104ebe:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104ec1	obj/kernel.asm	/^c0104ec1:	85 c0                	test   %eax,%eax$/;"	l
c0104ec3	obj/kernel.asm	/^c0104ec3:	75 1c                	jne    c0104ee1 <pte2page+0x2c>$/;"	l
c0104ec5	obj/kernel.asm	/^c0104ec5:	c7 44 24 08 90 63 11 	movl   $0xc0116390,0x8(%esp)$/;"	l
c0104ecc	obj/kernel.asm	/^c0104ecc:	c0 $/;"	l
c0104ecd	obj/kernel.asm	/^c0104ecd:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0104ed4	obj/kernel.asm	/^c0104ed4:	00 $/;"	l
c0104ed5	obj/kernel.asm	/^c0104ed5:	c7 04 24 5b 63 11 c0 	movl   $0xc011635b,(%esp)$/;"	l
c0104edc	obj/kernel.asm	/^c0104edc:	e8 e7 bf ff ff       	call   c0100ec8 <__panic>$/;"	l
c0104ee1	obj/kernel.asm	/^c0104ee1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ee4	obj/kernel.asm	/^c0104ee4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104ee9	obj/kernel.asm	/^c0104ee9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104eec	obj/kernel.asm	/^c0104eec:	e8 2b ff ff ff       	call   c0104e1c <pa2page>$/;"	l
c0104ef1	obj/kernel.asm	/^c0104ef1:	c9                   	leave  $/;"	l
c0104ef2	obj/kernel.asm	/^c0104ef2:	c3                   	ret    $/;"	l
c0104ef3	obj/kernel.asm	/^c0104ef3 <pde2page>:$/;"	l
c0104ef3	obj/kernel.asm	/^c0104ef3:	55                   	push   %ebp$/;"	l
c0104ef4	obj/kernel.asm	/^c0104ef4:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ef6	obj/kernel.asm	/^c0104ef6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104ef9	obj/kernel.asm	/^c0104ef9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104efc	obj/kernel.asm	/^c0104efc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104f01	obj/kernel.asm	/^c0104f01:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104f04	obj/kernel.asm	/^c0104f04:	e8 13 ff ff ff       	call   c0104e1c <pa2page>$/;"	l
c0104f09	obj/kernel.asm	/^c0104f09:	c9                   	leave  $/;"	l
c0104f0a	obj/kernel.asm	/^c0104f0a:	c3                   	ret    $/;"	l
c0104f0b	obj/kernel.asm	/^c0104f0b <page_ref>:$/;"	l
c0104f0b	obj/kernel.asm	/^c0104f0b:	55                   	push   %ebp$/;"	l
c0104f0c	obj/kernel.asm	/^c0104f0c:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f0e	obj/kernel.asm	/^c0104f0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f11	obj/kernel.asm	/^c0104f11:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f13	obj/kernel.asm	/^c0104f13:	5d                   	pop    %ebp$/;"	l
c0104f14	obj/kernel.asm	/^c0104f14:	c3                   	ret    $/;"	l
c0104f15	obj/kernel.asm	/^c0104f15 <set_page_ref>:$/;"	l
c0104f15	obj/kernel.asm	/^c0104f15:	55                   	push   %ebp$/;"	l
c0104f16	obj/kernel.asm	/^c0104f16:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f18	obj/kernel.asm	/^c0104f18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f1b	obj/kernel.asm	/^c0104f1b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104f1e	obj/kernel.asm	/^c0104f1e:	89 10                	mov    %edx,(%eax)$/;"	l
c0104f20	obj/kernel.asm	/^c0104f20:	5d                   	pop    %ebp$/;"	l
c0104f21	obj/kernel.asm	/^c0104f21:	c3                   	ret    $/;"	l
c0104f22	obj/kernel.asm	/^c0104f22 <page_ref_inc>:$/;"	l
c0104f22	obj/kernel.asm	/^c0104f22:	55                   	push   %ebp$/;"	l
c0104f23	obj/kernel.asm	/^c0104f23:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f25	obj/kernel.asm	/^c0104f25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f28	obj/kernel.asm	/^c0104f28:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f2a	obj/kernel.asm	/^c0104f2a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0104f2d	obj/kernel.asm	/^c0104f2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f30	obj/kernel.asm	/^c0104f30:	89 10                	mov    %edx,(%eax)$/;"	l
c0104f32	obj/kernel.asm	/^c0104f32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f35	obj/kernel.asm	/^c0104f35:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f37	obj/kernel.asm	/^c0104f37:	5d                   	pop    %ebp$/;"	l
c0104f38	obj/kernel.asm	/^c0104f38:	c3                   	ret    $/;"	l
c0104f39	obj/kernel.asm	/^c0104f39 <page_ref_dec>:$/;"	l
c0104f39	obj/kernel.asm	/^c0104f39:	55                   	push   %ebp$/;"	l
c0104f3a	obj/kernel.asm	/^c0104f3a:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f3c	obj/kernel.asm	/^c0104f3c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f3f	obj/kernel.asm	/^c0104f3f:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f41	obj/kernel.asm	/^c0104f41:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0104f44	obj/kernel.asm	/^c0104f44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f47	obj/kernel.asm	/^c0104f47:	89 10                	mov    %edx,(%eax)$/;"	l
c0104f49	obj/kernel.asm	/^c0104f49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f4c	obj/kernel.asm	/^c0104f4c:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f4e	obj/kernel.asm	/^c0104f4e:	5d                   	pop    %ebp$/;"	l
c0104f4f	obj/kernel.asm	/^c0104f4f:	c3                   	ret    $/;"	l
c0104f50	obj/kernel.asm	/^c0104f50 <__intr_save>:$/;"	l
c0104f50	obj/kernel.asm	/^c0104f50:	55                   	push   %ebp$/;"	l
c0104f51	obj/kernel.asm	/^c0104f51:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f53	obj/kernel.asm	/^c0104f53:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104f56	obj/kernel.asm	/^c0104f56:	9c                   	pushf  $/;"	l
c0104f57	obj/kernel.asm	/^c0104f57:	58                   	pop    %eax$/;"	l
c0104f58	obj/kernel.asm	/^c0104f58:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104f5b	obj/kernel.asm	/^c0104f5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104f5e	obj/kernel.asm	/^c0104f5e:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0104f63	obj/kernel.asm	/^c0104f63:	85 c0                	test   %eax,%eax$/;"	l
c0104f65	obj/kernel.asm	/^c0104f65:	74 0c                	je     c0104f73 <__intr_save+0x23>$/;"	l
c0104f67	obj/kernel.asm	/^c0104f67:	e8 be d1 ff ff       	call   c010212a <intr_disable>$/;"	l
c0104f6c	obj/kernel.asm	/^c0104f6c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0104f71	obj/kernel.asm	/^c0104f71:	eb 05                	jmp    c0104f78 <__intr_save+0x28>$/;"	l
c0104f73	obj/kernel.asm	/^c0104f73:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104f78	obj/kernel.asm	/^c0104f78:	c9                   	leave  $/;"	l
c0104f79	obj/kernel.asm	/^c0104f79:	c3                   	ret    $/;"	l
c0104f7a	obj/kernel.asm	/^c0104f7a <__intr_restore>:$/;"	l
c0104f7a	obj/kernel.asm	/^c0104f7a:	55                   	push   %ebp$/;"	l
c0104f7b	obj/kernel.asm	/^c0104f7b:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f7d	obj/kernel.asm	/^c0104f7d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f80	obj/kernel.asm	/^c0104f80:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0104f84	obj/kernel.asm	/^c0104f84:	74 05                	je     c0104f8b <__intr_restore+0x11>$/;"	l
c0104f86	obj/kernel.asm	/^c0104f86:	e8 99 d1 ff ff       	call   c0102124 <intr_enable>$/;"	l
c0104f8b	obj/kernel.asm	/^c0104f8b:	c9                   	leave  $/;"	l
c0104f8c	obj/kernel.asm	/^c0104f8c:	c3                   	ret    $/;"	l
c0104f8d	obj/kernel.asm	/^c0104f8d <lgdt>:$/;"	l
c0104f8d	obj/kernel.asm	/^c0104f8d:	55                   	push   %ebp$/;"	l
c0104f8e	obj/kernel.asm	/^c0104f8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f90	obj/kernel.asm	/^c0104f90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f93	obj/kernel.asm	/^c0104f93:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0104f96	obj/kernel.asm	/^c0104f96:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0104f9b	obj/kernel.asm	/^c0104f9b:	8e e8                	mov    %eax,%gs$/;"	l
c0104f9d	obj/kernel.asm	/^c0104f9d:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0104fa2	obj/kernel.asm	/^c0104fa2:	8e e0                	mov    %eax,%fs$/;"	l
c0104fa4	obj/kernel.asm	/^c0104fa4:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104fa9	obj/kernel.asm	/^c0104fa9:	8e c0                	mov    %eax,%es$/;"	l
c0104fab	obj/kernel.asm	/^c0104fab:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104fb0	obj/kernel.asm	/^c0104fb0:	8e d8                	mov    %eax,%ds$/;"	l
c0104fb2	obj/kernel.asm	/^c0104fb2:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0104fb7	obj/kernel.asm	/^c0104fb7:	8e d0                	mov    %eax,%ss$/;"	l
c0104fb9	obj/kernel.asm	/^c0104fb9:	ea c0 4f 10 c0 08 00 	ljmp   $0x8,$0xc0104fc0$/;"	l
c0104fc0	obj/kernel.asm	/^c0104fc0:	5d                   	pop    %ebp$/;"	l
c0104fc1	obj/kernel.asm	/^c0104fc1:	c3                   	ret    $/;"	l
c0104fc2	obj/kernel.asm	/^c0104fc2 <load_esp0>:$/;"	l
c0104fc2	obj/kernel.asm	/^c0104fc2:	55                   	push   %ebp$/;"	l
c0104fc3	obj/kernel.asm	/^c0104fc3:	89 e5                	mov    %esp,%ebp$/;"	l
c0104fc5	obj/kernel.asm	/^c0104fc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104fc8	obj/kernel.asm	/^c0104fc8:	a3 a4 fe 14 c0       	mov    %eax,0xc014fea4$/;"	l
c0104fcd	obj/kernel.asm	/^c0104fcd:	5d                   	pop    %ebp$/;"	l
c0104fce	obj/kernel.asm	/^c0104fce:	c3                   	ret    $/;"	l
c0104fcf	obj/kernel.asm	/^c0104fcf <gdt_init>:$/;"	l
c0104fcf	obj/kernel.asm	/^c0104fcf:	55                   	push   %ebp$/;"	l
c0104fd0	obj/kernel.asm	/^c0104fd0:	89 e5                	mov    %esp,%ebp$/;"	l
c0104fd2	obj/kernel.asm	/^c0104fd2:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0104fd5	obj/kernel.asm	/^c0104fd5:	b8 00 e0 14 c0       	mov    $0xc014e000,%eax$/;"	l
c0104fda	obj/kernel.asm	/^c0104fda:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104fdd	obj/kernel.asm	/^c0104fdd:	e8 e0 ff ff ff       	call   c0104fc2 <load_esp0>$/;"	l
c0104fe2	obj/kernel.asm	/^c0104fe2:	66 c7 05 a8 fe 14 c0 	movw   $0x10,0xc014fea8$/;"	l
c0104fe9	obj/kernel.asm	/^c0104fe9:	10 00 $/;"	l
c0104feb	obj/kernel.asm	/^c0104feb:	66 c7 05 48 ea 14 c0 	movw   $0x68,0xc014ea48$/;"	l
c0104ff2	obj/kernel.asm	/^c0104ff2:	68 00 $/;"	l
c0104ff4	obj/kernel.asm	/^c0104ff4:	b8 a0 fe 14 c0       	mov    $0xc014fea0,%eax$/;"	l
c0104ff9	obj/kernel.asm	/^c0104ff9:	66 a3 4a ea 14 c0    	mov    %ax,0xc014ea4a$/;"	l
c0104fff	obj/kernel.asm	/^c0104fff:	b8 a0 fe 14 c0       	mov    $0xc014fea0,%eax$/;"	l
c0105004	obj/kernel.asm	/^c0105004:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0105007	obj/kernel.asm	/^c0105007:	a2 4c ea 14 c0       	mov    %al,0xc014ea4c$/;"	l
c010500c	obj/kernel.asm	/^c010500c:	0f b6 05 4d ea 14 c0 	movzbl 0xc014ea4d,%eax$/;"	l
c0105013	obj/kernel.asm	/^c0105013:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0105016	obj/kernel.asm	/^c0105016:	83 c8 09             	or     $0x9,%eax$/;"	l
c0105019	obj/kernel.asm	/^c0105019:	a2 4d ea 14 c0       	mov    %al,0xc014ea4d$/;"	l
c010501e	obj/kernel.asm	/^c010501e:	0f b6 05 4d ea 14 c0 	movzbl 0xc014ea4d,%eax$/;"	l
c0105025	obj/kernel.asm	/^c0105025:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0105028	obj/kernel.asm	/^c0105028:	a2 4d ea 14 c0       	mov    %al,0xc014ea4d$/;"	l
c010502d	obj/kernel.asm	/^c010502d:	0f b6 05 4d ea 14 c0 	movzbl 0xc014ea4d,%eax$/;"	l
c0105034	obj/kernel.asm	/^c0105034:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c0105037	obj/kernel.asm	/^c0105037:	a2 4d ea 14 c0       	mov    %al,0xc014ea4d$/;"	l
c010503c	obj/kernel.asm	/^c010503c:	0f b6 05 4d ea 14 c0 	movzbl 0xc014ea4d,%eax$/;"	l
c0105043	obj/kernel.asm	/^c0105043:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0105046	obj/kernel.asm	/^c0105046:	a2 4d ea 14 c0       	mov    %al,0xc014ea4d$/;"	l
c010504b	obj/kernel.asm	/^c010504b:	0f b6 05 4e ea 14 c0 	movzbl 0xc014ea4e,%eax$/;"	l
c0105052	obj/kernel.asm	/^c0105052:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0105055	obj/kernel.asm	/^c0105055:	a2 4e ea 14 c0       	mov    %al,0xc014ea4e$/;"	l
c010505a	obj/kernel.asm	/^c010505a:	0f b6 05 4e ea 14 c0 	movzbl 0xc014ea4e,%eax$/;"	l
c0105061	obj/kernel.asm	/^c0105061:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0105064	obj/kernel.asm	/^c0105064:	a2 4e ea 14 c0       	mov    %al,0xc014ea4e$/;"	l
c0105069	obj/kernel.asm	/^c0105069:	0f b6 05 4e ea 14 c0 	movzbl 0xc014ea4e,%eax$/;"	l
c0105070	obj/kernel.asm	/^c0105070:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c0105073	obj/kernel.asm	/^c0105073:	a2 4e ea 14 c0       	mov    %al,0xc014ea4e$/;"	l
c0105078	obj/kernel.asm	/^c0105078:	0f b6 05 4e ea 14 c0 	movzbl 0xc014ea4e,%eax$/;"	l
c010507f	obj/kernel.asm	/^c010507f:	83 c8 40             	or     $0x40,%eax$/;"	l
c0105082	obj/kernel.asm	/^c0105082:	a2 4e ea 14 c0       	mov    %al,0xc014ea4e$/;"	l
c0105087	obj/kernel.asm	/^c0105087:	0f b6 05 4e ea 14 c0 	movzbl 0xc014ea4e,%eax$/;"	l
c010508e	obj/kernel.asm	/^c010508e:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c0105091	obj/kernel.asm	/^c0105091:	a2 4e ea 14 c0       	mov    %al,0xc014ea4e$/;"	l
c0105096	obj/kernel.asm	/^c0105096:	b8 a0 fe 14 c0       	mov    $0xc014fea0,%eax$/;"	l
c010509b	obj/kernel.asm	/^c010509b:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c010509e	obj/kernel.asm	/^c010509e:	a2 4f ea 14 c0       	mov    %al,0xc014ea4f$/;"	l
c01050a3	obj/kernel.asm	/^c01050a3:	c7 04 24 50 ea 14 c0 	movl   $0xc014ea50,(%esp)$/;"	l
c01050aa	obj/kernel.asm	/^c01050aa:	e8 de fe ff ff       	call   c0104f8d <lgdt>$/;"	l
c01050af	obj/kernel.asm	/^c01050af:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c01050b5	obj/kernel.asm	/^c01050b5:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c01050b9	obj/kernel.asm	/^c01050b9:	0f 00 d8             	ltr    %ax$/;"	l
c01050bc	obj/kernel.asm	/^c01050bc:	c9                   	leave  $/;"	l
c01050bd	obj/kernel.asm	/^c01050bd:	c3                   	ret    $/;"	l
c01050be	obj/kernel.asm	/^c01050be <init_pmm_manager>:$/;"	l
c01050be	obj/kernel.asm	/^c01050be:	55                   	push   %ebp$/;"	l
c01050bf	obj/kernel.asm	/^c01050bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01050c1	obj/kernel.asm	/^c01050c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01050c4	obj/kernel.asm	/^c01050c4:	c7 05 20 30 15 c0 30 	movl   $0xc0116230,0xc0153020$/;"	l
c01050cb	obj/kernel.asm	/^c01050cb:	62 11 c0 $/;"	l
c01050ce	obj/kernel.asm	/^c01050ce:	a1 20 30 15 c0       	mov    0xc0153020,%eax$/;"	l
c01050d3	obj/kernel.asm	/^c01050d3:	8b 00                	mov    (%eax),%eax$/;"	l
c01050d5	obj/kernel.asm	/^c01050d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01050d9	obj/kernel.asm	/^c01050d9:	c7 04 24 bc 63 11 c0 	movl   $0xc01163bc,(%esp)$/;"	l
c01050e0	obj/kernel.asm	/^c01050e0:	e8 80 b2 ff ff       	call   c0100365 <cprintf>$/;"	l
c01050e5	obj/kernel.asm	/^c01050e5:	a1 20 30 15 c0       	mov    0xc0153020,%eax$/;"	l
c01050ea	obj/kernel.asm	/^c01050ea:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01050ed	obj/kernel.asm	/^c01050ed:	ff d0                	call   *%eax$/;"	l
c01050ef	obj/kernel.asm	/^c01050ef:	c9                   	leave  $/;"	l
c01050f0	obj/kernel.asm	/^c01050f0:	c3                   	ret    $/;"	l
c01050f1	obj/kernel.asm	/^c01050f1 <init_memmap>:$/;"	l
c01050f1	obj/kernel.asm	/^c01050f1:	55                   	push   %ebp$/;"	l
c01050f2	obj/kernel.asm	/^c01050f2:	89 e5                	mov    %esp,%ebp$/;"	l
c01050f4	obj/kernel.asm	/^c01050f4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01050f7	obj/kernel.asm	/^c01050f7:	a1 20 30 15 c0       	mov    0xc0153020,%eax$/;"	l
c01050fc	obj/kernel.asm	/^c01050fc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01050ff	obj/kernel.asm	/^c01050ff:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105102	obj/kernel.asm	/^c0105102:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105106	obj/kernel.asm	/^c0105106:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105109	obj/kernel.asm	/^c0105109:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010510c	obj/kernel.asm	/^c010510c:	ff d0                	call   *%eax$/;"	l
c010510e	obj/kernel.asm	/^c010510e:	c9                   	leave  $/;"	l
c010510f	obj/kernel.asm	/^c010510f:	c3                   	ret    $/;"	l
c0105110	obj/kernel.asm	/^c0105110 <alloc_pages>:$/;"	l
c0105110	obj/kernel.asm	/^c0105110:	55                   	push   %ebp$/;"	l
c0105111	obj/kernel.asm	/^c0105111:	89 e5                	mov    %esp,%ebp$/;"	l
c0105113	obj/kernel.asm	/^c0105113:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105116	obj/kernel.asm	/^c0105116:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010511d	obj/kernel.asm	/^c010511d:	e8 2e fe ff ff       	call   c0104f50 <__intr_save>$/;"	l
c0105122	obj/kernel.asm	/^c0105122:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105125	obj/kernel.asm	/^c0105125:	a1 20 30 15 c0       	mov    0xc0153020,%eax$/;"	l
c010512a	obj/kernel.asm	/^c010512a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010512d	obj/kernel.asm	/^c010512d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105130	obj/kernel.asm	/^c0105130:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0105133	obj/kernel.asm	/^c0105133:	ff d0                	call   *%eax$/;"	l
c0105135	obj/kernel.asm	/^c0105135:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105138	obj/kernel.asm	/^c0105138:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010513b	obj/kernel.asm	/^c010513b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010513e	obj/kernel.asm	/^c010513e:	e8 37 fe ff ff       	call   c0104f7a <__intr_restore>$/;"	l
c0105143	obj/kernel.asm	/^c0105143:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105147	obj/kernel.asm	/^c0105147:	75 2d                	jne    c0105176 <alloc_pages+0x66>$/;"	l
c0105149	obj/kernel.asm	/^c0105149:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c010514d	obj/kernel.asm	/^c010514d:	77 27                	ja     c0105176 <alloc_pages+0x66>$/;"	l
c010514f	obj/kernel.asm	/^c010514f:	a1 0c ff 14 c0       	mov    0xc014ff0c,%eax$/;"	l
c0105154	obj/kernel.asm	/^c0105154:	85 c0                	test   %eax,%eax$/;"	l
c0105156	obj/kernel.asm	/^c0105156:	74 1e                	je     c0105176 <alloc_pages+0x66>$/;"	l
c0105158	obj/kernel.asm	/^c0105158:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010515b	obj/kernel.asm	/^c010515b:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c0105160	obj/kernel.asm	/^c0105160:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105167	obj/kernel.asm	/^c0105167:	00 $/;"	l
c0105168	obj/kernel.asm	/^c0105168:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010516c	obj/kernel.asm	/^c010516c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010516f	obj/kernel.asm	/^c010516f:	e8 97 1d 00 00       	call   c0106f0b <swap_out>$/;"	l
c0105174	obj/kernel.asm	/^c0105174:	eb a7                	jmp    c010511d <alloc_pages+0xd>$/;"	l
c0105176	obj/kernel.asm	/^c0105176:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105179	obj/kernel.asm	/^c0105179:	c9                   	leave  $/;"	l
c010517a	obj/kernel.asm	/^c010517a:	c3                   	ret    $/;"	l
c010517b	obj/kernel.asm	/^c010517b <free_pages>:$/;"	l
c010517b	obj/kernel.asm	/^c010517b:	55                   	push   %ebp$/;"	l
c010517c	obj/kernel.asm	/^c010517c:	89 e5                	mov    %esp,%ebp$/;"	l
c010517e	obj/kernel.asm	/^c010517e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105181	obj/kernel.asm	/^c0105181:	e8 ca fd ff ff       	call   c0104f50 <__intr_save>$/;"	l
c0105186	obj/kernel.asm	/^c0105186:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105189	obj/kernel.asm	/^c0105189:	a1 20 30 15 c0       	mov    0xc0153020,%eax$/;"	l
c010518e	obj/kernel.asm	/^c010518e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0105191	obj/kernel.asm	/^c0105191:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105194	obj/kernel.asm	/^c0105194:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105198	obj/kernel.asm	/^c0105198:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010519b	obj/kernel.asm	/^c010519b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010519e	obj/kernel.asm	/^c010519e:	ff d0                	call   *%eax$/;"	l
c01051a0	obj/kernel.asm	/^c01051a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01051a3	obj/kernel.asm	/^c01051a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01051a6	obj/kernel.asm	/^c01051a6:	e8 cf fd ff ff       	call   c0104f7a <__intr_restore>$/;"	l
c01051ab	obj/kernel.asm	/^c01051ab:	c9                   	leave  $/;"	l
c01051ac	obj/kernel.asm	/^c01051ac:	c3                   	ret    $/;"	l
c01051ad	obj/kernel.asm	/^c01051ad <nr_free_pages>:$/;"	l
c01051ad	obj/kernel.asm	/^c01051ad:	55                   	push   %ebp$/;"	l
c01051ae	obj/kernel.asm	/^c01051ae:	89 e5                	mov    %esp,%ebp$/;"	l
c01051b0	obj/kernel.asm	/^c01051b0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01051b3	obj/kernel.asm	/^c01051b3:	e8 98 fd ff ff       	call   c0104f50 <__intr_save>$/;"	l
c01051b8	obj/kernel.asm	/^c01051b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01051bb	obj/kernel.asm	/^c01051bb:	a1 20 30 15 c0       	mov    0xc0153020,%eax$/;"	l
c01051c0	obj/kernel.asm	/^c01051c0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01051c3	obj/kernel.asm	/^c01051c3:	ff d0                	call   *%eax$/;"	l
c01051c5	obj/kernel.asm	/^c01051c5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01051c8	obj/kernel.asm	/^c01051c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01051cb	obj/kernel.asm	/^c01051cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01051ce	obj/kernel.asm	/^c01051ce:	e8 a7 fd ff ff       	call   c0104f7a <__intr_restore>$/;"	l
c01051d3	obj/kernel.asm	/^c01051d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01051d6	obj/kernel.asm	/^c01051d6:	c9                   	leave  $/;"	l
c01051d7	obj/kernel.asm	/^c01051d7:	c3                   	ret    $/;"	l
c01051d8	obj/kernel.asm	/^c01051d8 <page_init>:$/;"	l
c01051d8	obj/kernel.asm	/^c01051d8:	55                   	push   %ebp$/;"	l
c01051d9	obj/kernel.asm	/^c01051d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01051db	obj/kernel.asm	/^c01051db:	57                   	push   %edi$/;"	l
c01051dc	obj/kernel.asm	/^c01051dc:	56                   	push   %esi$/;"	l
c01051dd	obj/kernel.asm	/^c01051dd:	53                   	push   %ebx$/;"	l
c01051de	obj/kernel.asm	/^c01051de:	81 ec 9c 00 00 00    	sub    $0x9c,%esp$/;"	l
c01051e4	obj/kernel.asm	/^c01051e4:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c01051eb	obj/kernel.asm	/^c01051eb:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c01051f2	obj/kernel.asm	/^c01051f2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01051f9	obj/kernel.asm	/^c01051f9:	c7 04 24 d3 63 11 c0 	movl   $0xc01163d3,(%esp)$/;"	l
c0105200	obj/kernel.asm	/^c0105200:	e8 60 b1 ff ff       	call   c0100365 <cprintf>$/;"	l
c0105205	obj/kernel.asm	/^c0105205:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010520c	obj/kernel.asm	/^c010520c:	e9 15 01 00 00       	jmp    c0105326 <page_init+0x14e>$/;"	l
c0105211	obj/kernel.asm	/^c0105211:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105214	obj/kernel.asm	/^c0105214:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105217	obj/kernel.asm	/^c0105217:	89 d0                	mov    %edx,%eax$/;"	l
c0105219	obj/kernel.asm	/^c0105219:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010521c	obj/kernel.asm	/^c010521c:	01 d0                	add    %edx,%eax$/;"	l
c010521e	obj/kernel.asm	/^c010521e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105221	obj/kernel.asm	/^c0105221:	01 c8                	add    %ecx,%eax$/;"	l
c0105223	obj/kernel.asm	/^c0105223:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105226	obj/kernel.asm	/^c0105226:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105229	obj/kernel.asm	/^c0105229:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010522c	obj/kernel.asm	/^c010522c:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c010522f	obj/kernel.asm	/^c010522f:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105232	obj/kernel.asm	/^c0105232:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105235	obj/kernel.asm	/^c0105235:	89 d0                	mov    %edx,%eax$/;"	l
c0105237	obj/kernel.asm	/^c0105237:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010523a	obj/kernel.asm	/^c010523a:	01 d0                	add    %edx,%eax$/;"	l
c010523c	obj/kernel.asm	/^c010523c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010523f	obj/kernel.asm	/^c010523f:	01 c8                	add    %ecx,%eax$/;"	l
c0105241	obj/kernel.asm	/^c0105241:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0105244	obj/kernel.asm	/^c0105244:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0105247	obj/kernel.asm	/^c0105247:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010524a	obj/kernel.asm	/^c010524a:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c010524d	obj/kernel.asm	/^c010524d:	01 c8                	add    %ecx,%eax$/;"	l
c010524f	obj/kernel.asm	/^c010524f:	11 da                	adc    %ebx,%edx$/;"	l
c0105251	obj/kernel.asm	/^c0105251:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0105254	obj/kernel.asm	/^c0105254:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c0105257	obj/kernel.asm	/^c0105257:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010525a	obj/kernel.asm	/^c010525a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010525d	obj/kernel.asm	/^c010525d:	89 d0                	mov    %edx,%eax$/;"	l
c010525f	obj/kernel.asm	/^c010525f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105262	obj/kernel.asm	/^c0105262:	01 d0                	add    %edx,%eax$/;"	l
c0105264	obj/kernel.asm	/^c0105264:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105267	obj/kernel.asm	/^c0105267:	01 c8                	add    %ecx,%eax$/;"	l
c0105269	obj/kernel.asm	/^c0105269:	83 c0 14             	add    $0x14,%eax$/;"	l
c010526c	obj/kernel.asm	/^c010526c:	8b 00                	mov    (%eax),%eax$/;"	l
c010526e	obj/kernel.asm	/^c010526e:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c0105274	obj/kernel.asm	/^c0105274:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0105277	obj/kernel.asm	/^c0105277:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010527a	obj/kernel.asm	/^c010527a:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c010527d	obj/kernel.asm	/^c010527d:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c0105280	obj/kernel.asm	/^c0105280:	89 c6                	mov    %eax,%esi$/;"	l
c0105282	obj/kernel.asm	/^c0105282:	89 d7                	mov    %edx,%edi$/;"	l
c0105284	obj/kernel.asm	/^c0105284:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105287	obj/kernel.asm	/^c0105287:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010528a	obj/kernel.asm	/^c010528a:	89 d0                	mov    %edx,%eax$/;"	l
c010528c	obj/kernel.asm	/^c010528c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010528f	obj/kernel.asm	/^c010528f:	01 d0                	add    %edx,%eax$/;"	l
c0105291	obj/kernel.asm	/^c0105291:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105294	obj/kernel.asm	/^c0105294:	01 c8                	add    %ecx,%eax$/;"	l
c0105296	obj/kernel.asm	/^c0105296:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0105299	obj/kernel.asm	/^c0105299:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c010529c	obj/kernel.asm	/^c010529c:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c01052a2	obj/kernel.asm	/^c01052a2:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c01052a6	obj/kernel.asm	/^c01052a6:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
c01052aa	obj/kernel.asm	/^c01052aa:	89 7c 24 18          	mov    %edi,0x18(%esp)$/;"	l
c01052ae	obj/kernel.asm	/^c01052ae:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01052b1	obj/kernel.asm	/^c01052b1:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c01052b4	obj/kernel.asm	/^c01052b4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01052b8	obj/kernel.asm	/^c01052b8:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c01052bc	obj/kernel.asm	/^c01052bc:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01052c0	obj/kernel.asm	/^c01052c0:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c01052c4	obj/kernel.asm	/^c01052c4:	c7 04 24 e0 63 11 c0 	movl   $0xc01163e0,(%esp)$/;"	l
c01052cb	obj/kernel.asm	/^c01052cb:	e8 95 b0 ff ff       	call   c0100365 <cprintf>$/;"	l
c01052d0	obj/kernel.asm	/^c01052d0:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01052d3	obj/kernel.asm	/^c01052d3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01052d6	obj/kernel.asm	/^c01052d6:	89 d0                	mov    %edx,%eax$/;"	l
c01052d8	obj/kernel.asm	/^c01052d8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01052db	obj/kernel.asm	/^c01052db:	01 d0                	add    %edx,%eax$/;"	l
c01052dd	obj/kernel.asm	/^c01052dd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01052e0	obj/kernel.asm	/^c01052e0:	01 c8                	add    %ecx,%eax$/;"	l
c01052e2	obj/kernel.asm	/^c01052e2:	83 c0 14             	add    $0x14,%eax$/;"	l
c01052e5	obj/kernel.asm	/^c01052e5:	8b 00                	mov    (%eax),%eax$/;"	l
c01052e7	obj/kernel.asm	/^c01052e7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01052ea	obj/kernel.asm	/^c01052ea:	75 36                	jne    c0105322 <page_init+0x14a>$/;"	l
c01052ec	obj/kernel.asm	/^c01052ec:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01052ef	obj/kernel.asm	/^c01052ef:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01052f2	obj/kernel.asm	/^c01052f2:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c01052f5	obj/kernel.asm	/^c01052f5:	77 2b                	ja     c0105322 <page_init+0x14a>$/;"	l
c01052f7	obj/kernel.asm	/^c01052f7:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c01052fa	obj/kernel.asm	/^c01052fa:	72 05                	jb     c0105301 <page_init+0x129>$/;"	l
c01052fc	obj/kernel.asm	/^c01052fc:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c01052ff	obj/kernel.asm	/^c01052ff:	73 21                	jae    c0105322 <page_init+0x14a>$/;"	l
c0105301	obj/kernel.asm	/^c0105301:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105305	obj/kernel.asm	/^c0105305:	77 1b                	ja     c0105322 <page_init+0x14a>$/;"	l
c0105307	obj/kernel.asm	/^c0105307:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c010530b	obj/kernel.asm	/^c010530b:	72 09                	jb     c0105316 <page_init+0x13e>$/;"	l
c010530d	obj/kernel.asm	/^c010530d:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c0105314	obj/kernel.asm	/^c0105314:	77 0c                	ja     c0105322 <page_init+0x14a>$/;"	l
c0105316	obj/kernel.asm	/^c0105316:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0105319	obj/kernel.asm	/^c0105319:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010531c	obj/kernel.asm	/^c010531c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010531f	obj/kernel.asm	/^c010531f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0105322	obj/kernel.asm	/^c0105322:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0105326	obj/kernel.asm	/^c0105326:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0105329	obj/kernel.asm	/^c0105329:	8b 00                	mov    (%eax),%eax$/;"	l
c010532b	obj/kernel.asm	/^c010532b:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c010532e	obj/kernel.asm	/^c010532e:	0f 8f dd fe ff ff    	jg     c0105211 <page_init+0x39>$/;"	l
c0105334	obj/kernel.asm	/^c0105334:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105338	obj/kernel.asm	/^c0105338:	72 1d                	jb     c0105357 <page_init+0x17f>$/;"	l
c010533a	obj/kernel.asm	/^c010533a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010533e	obj/kernel.asm	/^c010533e:	77 09                	ja     c0105349 <page_init+0x171>$/;"	l
c0105340	obj/kernel.asm	/^c0105340:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c0105347	obj/kernel.asm	/^c0105347:	76 0e                	jbe    c0105357 <page_init+0x17f>$/;"	l
c0105349	obj/kernel.asm	/^c0105349:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c0105350	obj/kernel.asm	/^c0105350:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0105357	obj/kernel.asm	/^c0105357:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010535a	obj/kernel.asm	/^c010535a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010535d	obj/kernel.asm	/^c010535d:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0105361	obj/kernel.asm	/^c0105361:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0105364	obj/kernel.asm	/^c0105364:	a3 80 fe 14 c0       	mov    %eax,0xc014fe80$/;"	l
c0105369	obj/kernel.asm	/^c0105369:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c0105370	obj/kernel.asm	/^c0105370:	b8 04 32 15 c0       	mov    $0xc0153204,%eax$/;"	l
c0105375	obj/kernel.asm	/^c0105375:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0105378	obj/kernel.asm	/^c0105378:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c010537b	obj/kernel.asm	/^c010537b:	01 d0                	add    %edx,%eax$/;"	l
c010537d	obj/kernel.asm	/^c010537d:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0105380	obj/kernel.asm	/^c0105380:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0105383	obj/kernel.asm	/^c0105383:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105388	obj/kernel.asm	/^c0105388:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c010538b	obj/kernel.asm	/^c010538b:	89 d0                	mov    %edx,%eax$/;"	l
c010538d	obj/kernel.asm	/^c010538d:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0105390	obj/kernel.asm	/^c0105390:	29 c2                	sub    %eax,%edx$/;"	l
c0105392	obj/kernel.asm	/^c0105392:	89 d0                	mov    %edx,%eax$/;"	l
c0105394	obj/kernel.asm	/^c0105394:	a3 28 30 15 c0       	mov    %eax,0xc0153028$/;"	l
c0105399	obj/kernel.asm	/^c0105399:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01053a0	obj/kernel.asm	/^c01053a0:	eb 27                	jmp    c01053c9 <page_init+0x1f1>$/;"	l
c01053a2	obj/kernel.asm	/^c01053a2:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c01053a7	obj/kernel.asm	/^c01053a7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01053aa	obj/kernel.asm	/^c01053aa:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01053ad	obj/kernel.asm	/^c01053ad:	01 d0                	add    %edx,%eax$/;"	l
c01053af	obj/kernel.asm	/^c01053af:	83 c0 04             	add    $0x4,%eax$/;"	l
c01053b2	obj/kernel.asm	/^c01053b2:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c01053b9	obj/kernel.asm	/^c01053b9:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c01053bc	obj/kernel.asm	/^c01053bc:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c01053bf	obj/kernel.asm	/^c01053bf:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c01053c2	obj/kernel.asm	/^c01053c2:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01053c5	obj/kernel.asm	/^c01053c5:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c01053c9	obj/kernel.asm	/^c01053c9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01053cc	obj/kernel.asm	/^c01053cc:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c01053d1	obj/kernel.asm	/^c01053d1:	39 c2                	cmp    %eax,%edx$/;"	l
c01053d3	obj/kernel.asm	/^c01053d3:	72 cd                	jb     c01053a2 <page_init+0x1ca>$/;"	l
c01053d5	obj/kernel.asm	/^c01053d5:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c01053da	obj/kernel.asm	/^c01053da:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c01053dd	obj/kernel.asm	/^c01053dd:	89 c2                	mov    %eax,%edx$/;"	l
c01053df	obj/kernel.asm	/^c01053df:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c01053e4	obj/kernel.asm	/^c01053e4:	01 d0                	add    %edx,%eax$/;"	l
c01053e6	obj/kernel.asm	/^c01053e6:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c01053e9	obj/kernel.asm	/^c01053e9:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c01053f0	obj/kernel.asm	/^c01053f0:	77 23                	ja     c0105415 <page_init+0x23d>$/;"	l
c01053f2	obj/kernel.asm	/^c01053f2:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c01053f5	obj/kernel.asm	/^c01053f5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01053f9	obj/kernel.asm	/^c01053f9:	c7 44 24 08 10 64 11 	movl   $0xc0116410,0x8(%esp)$/;"	l
c0105400	obj/kernel.asm	/^c0105400:	c0 $/;"	l
c0105401	obj/kernel.asm	/^c0105401:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c0105408	obj/kernel.asm	/^c0105408:	00 $/;"	l
c0105409	obj/kernel.asm	/^c0105409:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105410	obj/kernel.asm	/^c0105410:	e8 b3 ba ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105415	obj/kernel.asm	/^c0105415:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0105418	obj/kernel.asm	/^c0105418:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010541d	obj/kernel.asm	/^c010541d:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0105420	obj/kernel.asm	/^c0105420:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105427	obj/kernel.asm	/^c0105427:	e9 74 01 00 00       	jmp    c01055a0 <page_init+0x3c8>$/;"	l
c010542c	obj/kernel.asm	/^c010542c:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010542f	obj/kernel.asm	/^c010542f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105432	obj/kernel.asm	/^c0105432:	89 d0                	mov    %edx,%eax$/;"	l
c0105434	obj/kernel.asm	/^c0105434:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105437	obj/kernel.asm	/^c0105437:	01 d0                	add    %edx,%eax$/;"	l
c0105439	obj/kernel.asm	/^c0105439:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010543c	obj/kernel.asm	/^c010543c:	01 c8                	add    %ecx,%eax$/;"	l
c010543e	obj/kernel.asm	/^c010543e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105441	obj/kernel.asm	/^c0105441:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105444	obj/kernel.asm	/^c0105444:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105447	obj/kernel.asm	/^c0105447:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010544a	obj/kernel.asm	/^c010544a:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010544d	obj/kernel.asm	/^c010544d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105450	obj/kernel.asm	/^c0105450:	89 d0                	mov    %edx,%eax$/;"	l
c0105452	obj/kernel.asm	/^c0105452:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105455	obj/kernel.asm	/^c0105455:	01 d0                	add    %edx,%eax$/;"	l
c0105457	obj/kernel.asm	/^c0105457:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010545a	obj/kernel.asm	/^c010545a:	01 c8                	add    %ecx,%eax$/;"	l
c010545c	obj/kernel.asm	/^c010545c:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010545f	obj/kernel.asm	/^c010545f:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0105462	obj/kernel.asm	/^c0105462:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105465	obj/kernel.asm	/^c0105465:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105468	obj/kernel.asm	/^c0105468:	01 c8                	add    %ecx,%eax$/;"	l
c010546a	obj/kernel.asm	/^c010546a:	11 da                	adc    %ebx,%edx$/;"	l
c010546c	obj/kernel.asm	/^c010546c:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010546f	obj/kernel.asm	/^c010546f:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0105472	obj/kernel.asm	/^c0105472:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0105475	obj/kernel.asm	/^c0105475:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105478	obj/kernel.asm	/^c0105478:	89 d0                	mov    %edx,%eax$/;"	l
c010547a	obj/kernel.asm	/^c010547a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010547d	obj/kernel.asm	/^c010547d:	01 d0                	add    %edx,%eax$/;"	l
c010547f	obj/kernel.asm	/^c010547f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105482	obj/kernel.asm	/^c0105482:	01 c8                	add    %ecx,%eax$/;"	l
c0105484	obj/kernel.asm	/^c0105484:	83 c0 14             	add    $0x14,%eax$/;"	l
c0105487	obj/kernel.asm	/^c0105487:	8b 00                	mov    (%eax),%eax$/;"	l
c0105489	obj/kernel.asm	/^c0105489:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010548c	obj/kernel.asm	/^c010548c:	0f 85 0a 01 00 00    	jne    c010559c <page_init+0x3c4>$/;"	l
c0105492	obj/kernel.asm	/^c0105492:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0105495	obj/kernel.asm	/^c0105495:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010549a	obj/kernel.asm	/^c010549a:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010549d	obj/kernel.asm	/^c010549d:	72 17                	jb     c01054b6 <page_init+0x2de>$/;"	l
c010549f	obj/kernel.asm	/^c010549f:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c01054a2	obj/kernel.asm	/^c01054a2:	77 05                	ja     c01054a9 <page_init+0x2d1>$/;"	l
c01054a4	obj/kernel.asm	/^c01054a4:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c01054a7	obj/kernel.asm	/^c01054a7:	76 0d                	jbe    c01054b6 <page_init+0x2de>$/;"	l
c01054a9	obj/kernel.asm	/^c01054a9:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c01054ac	obj/kernel.asm	/^c01054ac:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01054af	obj/kernel.asm	/^c01054af:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c01054b6	obj/kernel.asm	/^c01054b6:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c01054ba	obj/kernel.asm	/^c01054ba:	72 1d                	jb     c01054d9 <page_init+0x301>$/;"	l
c01054bc	obj/kernel.asm	/^c01054bc:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c01054c0	obj/kernel.asm	/^c01054c0:	77 09                	ja     c01054cb <page_init+0x2f3>$/;"	l
c01054c2	obj/kernel.asm	/^c01054c2:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c01054c9	obj/kernel.asm	/^c01054c9:	76 0e                	jbe    c01054d9 <page_init+0x301>$/;"	l
c01054cb	obj/kernel.asm	/^c01054cb:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c01054d2	obj/kernel.asm	/^c01054d2:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c01054d9	obj/kernel.asm	/^c01054d9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01054dc	obj/kernel.asm	/^c01054dc:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01054df	obj/kernel.asm	/^c01054df:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c01054e2	obj/kernel.asm	/^c01054e2:	0f 87 b4 00 00 00    	ja     c010559c <page_init+0x3c4>$/;"	l
c01054e8	obj/kernel.asm	/^c01054e8:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c01054eb	obj/kernel.asm	/^c01054eb:	72 09                	jb     c01054f6 <page_init+0x31e>$/;"	l
c01054ed	obj/kernel.asm	/^c01054ed:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	0f 83 a6 00 00 00    	jae    c010559c <page_init+0x3c4>$/;"	l
c01054f6	obj/kernel.asm	/^c01054f6:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c01054fd	obj/kernel.asm	/^c01054fd:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0105500	obj/kernel.asm	/^c0105500:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0105503	obj/kernel.asm	/^c0105503:	01 d0                	add    %edx,%eax$/;"	l
c0105505	obj/kernel.asm	/^c0105505:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0105508	obj/kernel.asm	/^c0105508:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010550b	obj/kernel.asm	/^c010550b:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c010550e	obj/kernel.asm	/^c010550e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105513	obj/kernel.asm	/^c0105513:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c0105516	obj/kernel.asm	/^c0105516:	89 d0                	mov    %edx,%eax$/;"	l
c0105518	obj/kernel.asm	/^c0105518:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c010551b	obj/kernel.asm	/^c010551b:	29 c2                	sub    %eax,%edx$/;"	l
c010551d	obj/kernel.asm	/^c010551d:	89 d0                	mov    %edx,%eax$/;"	l
c010551f	obj/kernel.asm	/^c010551f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105524	obj/kernel.asm	/^c0105524:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105527	obj/kernel.asm	/^c0105527:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010552a	obj/kernel.asm	/^c010552a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010552d	obj/kernel.asm	/^c010552d:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0105530	obj/kernel.asm	/^c0105530:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0105533	obj/kernel.asm	/^c0105533:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105538	obj/kernel.asm	/^c0105538:	89 c7                	mov    %eax,%edi$/;"	l
c010553a	obj/kernel.asm	/^c010553a:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
c0105540	obj/kernel.asm	/^c0105540:	89 7d 80             	mov    %edi,-0x80(%ebp)$/;"	l
c0105543	obj/kernel.asm	/^c0105543:	89 d0                	mov    %edx,%eax$/;"	l
c0105545	obj/kernel.asm	/^c0105545:	83 e0 00             	and    $0x0,%eax$/;"	l
c0105548	obj/kernel.asm	/^c0105548:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c010554b	obj/kernel.asm	/^c010554b:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c010554e	obj/kernel.asm	/^c010554e:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0105551	obj/kernel.asm	/^c0105551:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0105554	obj/kernel.asm	/^c0105554:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0105557	obj/kernel.asm	/^c0105557:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010555a	obj/kernel.asm	/^c010555a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010555d	obj/kernel.asm	/^c010555d:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0105560	obj/kernel.asm	/^c0105560:	77 3a                	ja     c010559c <page_init+0x3c4>$/;"	l
c0105562	obj/kernel.asm	/^c0105562:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0105565	obj/kernel.asm	/^c0105565:	72 05                	jb     c010556c <page_init+0x394>$/;"	l
c0105567	obj/kernel.asm	/^c0105567:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c010556a	obj/kernel.asm	/^c010556a:	73 30                	jae    c010559c <page_init+0x3c4>$/;"	l
c010556c	obj/kernel.asm	/^c010556c:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
c010556f	obj/kernel.asm	/^c010556f:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
c0105572	obj/kernel.asm	/^c0105572:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0105575	obj/kernel.asm	/^c0105575:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0105578	obj/kernel.asm	/^c0105578:	29 c8                	sub    %ecx,%eax$/;"	l
c010557a	obj/kernel.asm	/^c010557a:	19 da                	sbb    %ebx,%edx$/;"	l
c010557c	obj/kernel.asm	/^c010557c:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0105580	obj/kernel.asm	/^c0105580:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0105583	obj/kernel.asm	/^c0105583:	89 c3                	mov    %eax,%ebx$/;"	l
c0105585	obj/kernel.asm	/^c0105585:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105588	obj/kernel.asm	/^c0105588:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010558b	obj/kernel.asm	/^c010558b:	e8 8c f8 ff ff       	call   c0104e1c <pa2page>$/;"	l
c0105590	obj/kernel.asm	/^c0105590:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0105594	obj/kernel.asm	/^c0105594:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105597	obj/kernel.asm	/^c0105597:	e8 55 fb ff ff       	call   c01050f1 <init_memmap>$/;"	l
c010559c	obj/kernel.asm	/^c010559c:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c01055a0	obj/kernel.asm	/^c01055a0:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01055a3	obj/kernel.asm	/^c01055a3:	8b 00                	mov    (%eax),%eax$/;"	l
c01055a5	obj/kernel.asm	/^c01055a5:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01055a8	obj/kernel.asm	/^c01055a8:	0f 8f 7e fe ff ff    	jg     c010542c <page_init+0x254>$/;"	l
c01055ae	obj/kernel.asm	/^c01055ae:	81 c4 9c 00 00 00    	add    $0x9c,%esp$/;"	l
c01055b4	obj/kernel.asm	/^c01055b4:	5b                   	pop    %ebx$/;"	l
c01055b5	obj/kernel.asm	/^c01055b5:	5e                   	pop    %esi$/;"	l
c01055b6	obj/kernel.asm	/^c01055b6:	5f                   	pop    %edi$/;"	l
c01055b7	obj/kernel.asm	/^c01055b7:	5d                   	pop    %ebp$/;"	l
c01055b8	obj/kernel.asm	/^c01055b8:	c3                   	ret    $/;"	l
c01055b9	obj/kernel.asm	/^c01055b9 <enable_paging>:$/;"	l
c01055b9	obj/kernel.asm	/^c01055b9:	55                   	push   %ebp$/;"	l
c01055ba	obj/kernel.asm	/^c01055ba:	89 e5                	mov    %esp,%ebp$/;"	l
c01055bc	obj/kernel.asm	/^c01055bc:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01055bf	obj/kernel.asm	/^c01055bf:	a1 24 30 15 c0       	mov    0xc0153024,%eax$/;"	l
c01055c4	obj/kernel.asm	/^c01055c4:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01055c7	obj/kernel.asm	/^c01055c7:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01055ca	obj/kernel.asm	/^c01055ca:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c01055cd	obj/kernel.asm	/^c01055cd:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c01055d0	obj/kernel.asm	/^c01055d0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01055d3	obj/kernel.asm	/^c01055d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01055d6	obj/kernel.asm	/^c01055d6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01055d9	obj/kernel.asm	/^c01055d9:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c01055e0	obj/kernel.asm	/^c01055e0:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c01055e4	obj/kernel.asm	/^c01055e4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01055e7	obj/kernel.asm	/^c01055e7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01055ea	obj/kernel.asm	/^c01055ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01055ed	obj/kernel.asm	/^c01055ed:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c01055f0	obj/kernel.asm	/^c01055f0:	c9                   	leave  $/;"	l
c01055f1	obj/kernel.asm	/^c01055f1:	c3                   	ret    $/;"	l
c01055f2	obj/kernel.asm	/^c01055f2 <boot_map_segment>:$/;"	l
c01055f2	obj/kernel.asm	/^c01055f2:	55                   	push   %ebp$/;"	l
c01055f3	obj/kernel.asm	/^c01055f3:	89 e5                	mov    %esp,%ebp$/;"	l
c01055f5	obj/kernel.asm	/^c01055f5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01055f8	obj/kernel.asm	/^c01055f8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01055fb	obj/kernel.asm	/^c01055fb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01055fe	obj/kernel.asm	/^c01055fe:	31 d0                	xor    %edx,%eax$/;"	l
c0105600	obj/kernel.asm	/^c0105600:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105605	obj/kernel.asm	/^c0105605:	85 c0                	test   %eax,%eax$/;"	l
c0105607	obj/kernel.asm	/^c0105607:	74 24                	je     c010562d <boot_map_segment+0x3b>$/;"	l
c0105609	obj/kernel.asm	/^c0105609:	c7 44 24 0c 42 64 11 	movl   $0xc0116442,0xc(%esp)$/;"	l
c0105610	obj/kernel.asm	/^c0105610:	c0 $/;"	l
c0105611	obj/kernel.asm	/^c0105611:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105618	obj/kernel.asm	/^c0105618:	c0 $/;"	l
c0105619	obj/kernel.asm	/^c0105619:	c7 44 24 04 12 01 00 	movl   $0x112,0x4(%esp)$/;"	l
c0105620	obj/kernel.asm	/^c0105620:	00 $/;"	l
c0105621	obj/kernel.asm	/^c0105621:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105628	obj/kernel.asm	/^c0105628:	e8 9b b8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010562d	obj/kernel.asm	/^c010562d:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c0105634	obj/kernel.asm	/^c0105634:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105637	obj/kernel.asm	/^c0105637:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010563c	obj/kernel.asm	/^c010563c:	89 c2                	mov    %eax,%edx$/;"	l
c010563e	obj/kernel.asm	/^c010563e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105641	obj/kernel.asm	/^c0105641:	01 c2                	add    %eax,%edx$/;"	l
c0105643	obj/kernel.asm	/^c0105643:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105646	obj/kernel.asm	/^c0105646:	01 d0                	add    %edx,%eax$/;"	l
c0105648	obj/kernel.asm	/^c0105648:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010564b	obj/kernel.asm	/^c010564b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010564e	obj/kernel.asm	/^c010564e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105651	obj/kernel.asm	/^c0105651:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105656	obj/kernel.asm	/^c0105656:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c0105659	obj/kernel.asm	/^c0105659:	89 d0                	mov    %edx,%eax$/;"	l
c010565b	obj/kernel.asm	/^c010565b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010565e	obj/kernel.asm	/^c010565e:	29 c2                	sub    %eax,%edx$/;"	l
c0105660	obj/kernel.asm	/^c0105660:	89 d0                	mov    %edx,%eax$/;"	l
c0105662	obj/kernel.asm	/^c0105662:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105665	obj/kernel.asm	/^c0105665:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105668	obj/kernel.asm	/^c0105668:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010566b	obj/kernel.asm	/^c010566b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010566e	obj/kernel.asm	/^c010566e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105671	obj/kernel.asm	/^c0105671:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105676	obj/kernel.asm	/^c0105676:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105679	obj/kernel.asm	/^c0105679:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010567c	obj/kernel.asm	/^c010567c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010567f	obj/kernel.asm	/^c010567f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105682	obj/kernel.asm	/^c0105682:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105687	obj/kernel.asm	/^c0105687:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c010568a	obj/kernel.asm	/^c010568a:	eb 6b                	jmp    c01056f7 <boot_map_segment+0x105>$/;"	l
c010568c	obj/kernel.asm	/^c010568c:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105693	obj/kernel.asm	/^c0105693:	00 $/;"	l
c0105694	obj/kernel.asm	/^c0105694:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105697	obj/kernel.asm	/^c0105697:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010569b	obj/kernel.asm	/^c010569b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010569e	obj/kernel.asm	/^c010569e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01056a1	obj/kernel.asm	/^c01056a1:	e8 d1 01 00 00       	call   c0105877 <get_pte>$/;"	l
c01056a6	obj/kernel.asm	/^c01056a6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01056a9	obj/kernel.asm	/^c01056a9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01056ad	obj/kernel.asm	/^c01056ad:	75 24                	jne    c01056d3 <boot_map_segment+0xe1>$/;"	l
c01056af	obj/kernel.asm	/^c01056af:	c7 44 24 0c 6e 64 11 	movl   $0xc011646e,0xc(%esp)$/;"	l
c01056b6	obj/kernel.asm	/^c01056b6:	c0 $/;"	l
c01056b7	obj/kernel.asm	/^c01056b7:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01056be	obj/kernel.asm	/^c01056be:	c0 $/;"	l
c01056bf	obj/kernel.asm	/^c01056bf:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
c01056c6	obj/kernel.asm	/^c01056c6:	00 $/;"	l
c01056c7	obj/kernel.asm	/^c01056c7:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01056ce	obj/kernel.asm	/^c01056ce:	e8 f5 b7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01056d3	obj/kernel.asm	/^c01056d3:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01056d6	obj/kernel.asm	/^c01056d6:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01056d9	obj/kernel.asm	/^c01056d9:	09 d0                	or     %edx,%eax$/;"	l
c01056db	obj/kernel.asm	/^c01056db:	83 c8 01             	or     $0x1,%eax$/;"	l
c01056de	obj/kernel.asm	/^c01056de:	89 c2                	mov    %eax,%edx$/;"	l
c01056e0	obj/kernel.asm	/^c01056e0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01056e3	obj/kernel.asm	/^c01056e3:	89 10                	mov    %edx,(%eax)$/;"	l
c01056e5	obj/kernel.asm	/^c01056e5:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01056e9	obj/kernel.asm	/^c01056e9:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01056f0	obj/kernel.asm	/^c01056f0:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c01056f7	obj/kernel.asm	/^c01056f7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01056fb	obj/kernel.asm	/^c01056fb:	75 8f                	jne    c010568c <boot_map_segment+0x9a>$/;"	l
c01056fd	obj/kernel.asm	/^c01056fd:	c9                   	leave  $/;"	l
c01056fe	obj/kernel.asm	/^c01056fe:	c3                   	ret    $/;"	l
c01056ff	obj/kernel.asm	/^c01056ff <boot_alloc_page>:$/;"	l
c01056ff	obj/kernel.asm	/^c01056ff:	55                   	push   %ebp$/;"	l
c0105700	obj/kernel.asm	/^c0105700:	89 e5                	mov    %esp,%ebp$/;"	l
c0105702	obj/kernel.asm	/^c0105702:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105705	obj/kernel.asm	/^c0105705:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010570c	obj/kernel.asm	/^c010570c:	e8 ff f9 ff ff       	call   c0105110 <alloc_pages>$/;"	l
c0105711	obj/kernel.asm	/^c0105711:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105714	obj/kernel.asm	/^c0105714:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105718	obj/kernel.asm	/^c0105718:	75 1c                	jne    c0105736 <boot_alloc_page+0x37>$/;"	l
c010571a	obj/kernel.asm	/^c010571a:	c7 44 24 08 7b 64 11 	movl   $0xc011647b,0x8(%esp)$/;"	l
c0105721	obj/kernel.asm	/^c0105721:	c0 $/;"	l
c0105722	obj/kernel.asm	/^c0105722:	c7 44 24 04 24 01 00 	movl   $0x124,0x4(%esp)$/;"	l
c0105729	obj/kernel.asm	/^c0105729:	00 $/;"	l
c010572a	obj/kernel.asm	/^c010572a:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105731	obj/kernel.asm	/^c0105731:	e8 92 b7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105736	obj/kernel.asm	/^c0105736:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105739	obj/kernel.asm	/^c0105739:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010573c	obj/kernel.asm	/^c010573c:	e8 20 f7 ff ff       	call   c0104e61 <page2kva>$/;"	l
c0105741	obj/kernel.asm	/^c0105741:	c9                   	leave  $/;"	l
c0105742	obj/kernel.asm	/^c0105742:	c3                   	ret    $/;"	l
c0105743	obj/kernel.asm	/^c0105743 <pmm_init>:$/;"	l
c0105743	obj/kernel.asm	/^c0105743:	55                   	push   %ebp$/;"	l
c0105744	obj/kernel.asm	/^c0105744:	89 e5                	mov    %esp,%ebp$/;"	l
c0105746	obj/kernel.asm	/^c0105746:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0105749	obj/kernel.asm	/^c0105749:	e8 70 f9 ff ff       	call   c01050be <init_pmm_manager>$/;"	l
c010574e	obj/kernel.asm	/^c010574e:	e8 85 fa ff ff       	call   c01051d8 <page_init>$/;"	l
c0105753	obj/kernel.asm	/^c0105753:	e8 58 09 00 00       	call   c01060b0 <check_alloc_page>$/;"	l
c0105758	obj/kernel.asm	/^c0105758:	e8 a2 ff ff ff       	call   c01056ff <boot_alloc_page>$/;"	l
c010575d	obj/kernel.asm	/^c010575d:	a3 84 fe 14 c0       	mov    %eax,0xc014fe84$/;"	l
c0105762	obj/kernel.asm	/^c0105762:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0105767	obj/kernel.asm	/^c0105767:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c010576e	obj/kernel.asm	/^c010576e:	00 $/;"	l
c010576f	obj/kernel.asm	/^c010576f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0105776	obj/kernel.asm	/^c0105776:	00 $/;"	l
c0105777	obj/kernel.asm	/^c0105777:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010577a	obj/kernel.asm	/^c010577a:	e8 9a fc 00 00       	call   c0115419 <memset>$/;"	l
c010577f	obj/kernel.asm	/^c010577f:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0105784	obj/kernel.asm	/^c0105784:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105787	obj/kernel.asm	/^c0105787:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010578e	obj/kernel.asm	/^c010578e:	77 23                	ja     c01057b3 <pmm_init+0x70>$/;"	l
c0105790	obj/kernel.asm	/^c0105790:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105793	obj/kernel.asm	/^c0105793:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105797	obj/kernel.asm	/^c0105797:	c7 44 24 08 10 64 11 	movl   $0xc0116410,0x8(%esp)$/;"	l
c010579e	obj/kernel.asm	/^c010579e:	c0 $/;"	l
c010579f	obj/kernel.asm	/^c010579f:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
c01057a6	obj/kernel.asm	/^c01057a6:	00 $/;"	l
c01057a7	obj/kernel.asm	/^c01057a7:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01057ae	obj/kernel.asm	/^c01057ae:	e8 15 b7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01057b3	obj/kernel.asm	/^c01057b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057b6	obj/kernel.asm	/^c01057b6:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01057bb	obj/kernel.asm	/^c01057bb:	a3 24 30 15 c0       	mov    %eax,0xc0153024$/;"	l
c01057c0	obj/kernel.asm	/^c01057c0:	e8 09 09 00 00       	call   c01060ce <check_pgdir>$/;"	l
c01057c5	obj/kernel.asm	/^c01057c5:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c01057ca	obj/kernel.asm	/^c01057ca:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c01057d0	obj/kernel.asm	/^c01057d0:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c01057d5	obj/kernel.asm	/^c01057d5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01057d8	obj/kernel.asm	/^c01057d8:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c01057df	obj/kernel.asm	/^c01057df:	77 23                	ja     c0105804 <pmm_init+0xc1>$/;"	l
c01057e1	obj/kernel.asm	/^c01057e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01057e4	obj/kernel.asm	/^c01057e4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01057e8	obj/kernel.asm	/^c01057e8:	c7 44 24 08 10 64 11 	movl   $0xc0116410,0x8(%esp)$/;"	l
c01057ef	obj/kernel.asm	/^c01057ef:	c0 $/;"	l
c01057f0	obj/kernel.asm	/^c01057f0:	c7 44 24 04 46 01 00 	movl   $0x146,0x4(%esp)$/;"	l
c01057f7	obj/kernel.asm	/^c01057f7:	00 $/;"	l
c01057f8	obj/kernel.asm	/^c01057f8:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01057ff	obj/kernel.asm	/^c01057ff:	e8 c4 b6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105804	obj/kernel.asm	/^c0105804:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105807	obj/kernel.asm	/^c0105807:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010580c	obj/kernel.asm	/^c010580c:	83 c8 03             	or     $0x3,%eax$/;"	l
c010580f	obj/kernel.asm	/^c010580f:	89 02                	mov    %eax,(%edx)$/;"	l
c0105811	obj/kernel.asm	/^c0105811:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0105816	obj/kernel.asm	/^c0105816:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)$/;"	l
c010581d	obj/kernel.asm	/^c010581d:	00 $/;"	l
c010581e	obj/kernel.asm	/^c010581e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0105825	obj/kernel.asm	/^c0105825:	00 $/;"	l
c0105826	obj/kernel.asm	/^c0105826:	c7 44 24 08 00 00 00 	movl   $0x38000000,0x8(%esp)$/;"	l
c010582d	obj/kernel.asm	/^c010582d:	38 $/;"	l
c010582e	obj/kernel.asm	/^c010582e:	c7 44 24 04 00 00 00 	movl   $0xc0000000,0x4(%esp)$/;"	l
c0105835	obj/kernel.asm	/^c0105835:	c0 $/;"	l
c0105836	obj/kernel.asm	/^c0105836:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105839	obj/kernel.asm	/^c0105839:	e8 b4 fd ff ff       	call   c01055f2 <boot_map_segment>$/;"	l
c010583e	obj/kernel.asm	/^c010583e:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0105843	obj/kernel.asm	/^c0105843:	8b 15 84 fe 14 c0    	mov    0xc014fe84,%edx$/;"	l
c0105849	obj/kernel.asm	/^c0105849:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c010584f	obj/kernel.asm	/^c010584f:	89 10                	mov    %edx,(%eax)$/;"	l
c0105851	obj/kernel.asm	/^c0105851:	e8 63 fd ff ff       	call   c01055b9 <enable_paging>$/;"	l
c0105856	obj/kernel.asm	/^c0105856:	e8 74 f7 ff ff       	call   c0104fcf <gdt_init>$/;"	l
c010585b	obj/kernel.asm	/^c010585b:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0105860	obj/kernel.asm	/^c0105860:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105866	obj/kernel.asm	/^c0105866:	e8 fe 0e 00 00       	call   c0106769 <check_boot_pgdir>$/;"	l
c010586b	obj/kernel.asm	/^c010586b:	e8 86 13 00 00       	call   c0106bf6 <print_pgdir>$/;"	l
c0105870	obj/kernel.asm	/^c0105870:	e8 e6 f2 ff ff       	call   c0104b5b <kmalloc_init>$/;"	l
c0105875	obj/kernel.asm	/^c0105875:	c9                   	leave  $/;"	l
c0105876	obj/kernel.asm	/^c0105876:	c3                   	ret    $/;"	l
c0105877	obj/kernel.asm	/^c0105877 <get_pte>:$/;"	l
c0105877	obj/kernel.asm	/^c0105877:	55                   	push   %ebp$/;"	l
c0105878	obj/kernel.asm	/^c0105878:	89 e5                	mov    %esp,%ebp$/;"	l
c010587a	obj/kernel.asm	/^c010587a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010587d	obj/kernel.asm	/^c010587d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105880	obj/kernel.asm	/^c0105880:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0105883	obj/kernel.asm	/^c0105883:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010588a	obj/kernel.asm	/^c010588a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010588d	obj/kernel.asm	/^c010588d:	01 d0                	add    %edx,%eax$/;"	l
c010588f	obj/kernel.asm	/^c010588f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105892	obj/kernel.asm	/^c0105892:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105895	obj/kernel.asm	/^c0105895:	8b 00                	mov    (%eax),%eax$/;"	l
c0105897	obj/kernel.asm	/^c0105897:	83 e0 01             	and    $0x1,%eax$/;"	l
c010589a	obj/kernel.asm	/^c010589a:	85 c0                	test   %eax,%eax$/;"	l
c010589c	obj/kernel.asm	/^c010589c:	0f 85 af 00 00 00    	jne    c0105951 <get_pte+0xda>$/;"	l
c01058a2	obj/kernel.asm	/^c01058a2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01058a6	obj/kernel.asm	/^c01058a6:	74 15                	je     c01058bd <get_pte+0x46>$/;"	l
c01058a8	obj/kernel.asm	/^c01058a8:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01058af	obj/kernel.asm	/^c01058af:	e8 5c f8 ff ff       	call   c0105110 <alloc_pages>$/;"	l
c01058b4	obj/kernel.asm	/^c01058b4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01058b7	obj/kernel.asm	/^c01058b7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01058bb	obj/kernel.asm	/^c01058bb:	75 0a                	jne    c01058c7 <get_pte+0x50>$/;"	l
c01058bd	obj/kernel.asm	/^c01058bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01058c2	obj/kernel.asm	/^c01058c2:	e9 e6 00 00 00       	jmp    c01059ad <get_pte+0x136>$/;"	l
c01058c7	obj/kernel.asm	/^c01058c7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01058ce	obj/kernel.asm	/^c01058ce:	00 $/;"	l
c01058cf	obj/kernel.asm	/^c01058cf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01058d2	obj/kernel.asm	/^c01058d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01058d5	obj/kernel.asm	/^c01058d5:	e8 3b f6 ff ff       	call   c0104f15 <set_page_ref>$/;"	l
c01058da	obj/kernel.asm	/^c01058da:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01058dd	obj/kernel.asm	/^c01058dd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01058e0	obj/kernel.asm	/^c01058e0:	e8 21 f5 ff ff       	call   c0104e06 <page2pa>$/;"	l
c01058e5	obj/kernel.asm	/^c01058e5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01058e8	obj/kernel.asm	/^c01058e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01058eb	obj/kernel.asm	/^c01058eb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01058ee	obj/kernel.asm	/^c01058ee:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01058f1	obj/kernel.asm	/^c01058f1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01058f4	obj/kernel.asm	/^c01058f4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01058f7	obj/kernel.asm	/^c01058f7:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c01058fc	obj/kernel.asm	/^c01058fc:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01058ff	obj/kernel.asm	/^c01058ff:	72 23                	jb     c0105924 <get_pte+0xad>$/;"	l
c0105901	obj/kernel.asm	/^c0105901:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105904	obj/kernel.asm	/^c0105904:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105908	obj/kernel.asm	/^c0105908:	c7 44 24 08 6c 63 11 	movl   $0xc011636c,0x8(%esp)$/;"	l
c010590f	obj/kernel.asm	/^c010590f:	c0 $/;"	l
c0105910	obj/kernel.asm	/^c0105910:	c7 44 24 04 97 01 00 	movl   $0x197,0x4(%esp)$/;"	l
c0105917	obj/kernel.asm	/^c0105917:	00 $/;"	l
c0105918	obj/kernel.asm	/^c0105918:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010591f	obj/kernel.asm	/^c010591f:	e8 a4 b5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105924	obj/kernel.asm	/^c0105924:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105927	obj/kernel.asm	/^c0105927:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010592c	obj/kernel.asm	/^c010592c:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0105933	obj/kernel.asm	/^c0105933:	00 $/;"	l
c0105934	obj/kernel.asm	/^c0105934:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010593b	obj/kernel.asm	/^c010593b:	00 $/;"	l
c010593c	obj/kernel.asm	/^c010593c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010593f	obj/kernel.asm	/^c010593f:	e8 d5 fa 00 00       	call   c0115419 <memset>$/;"	l
c0105944	obj/kernel.asm	/^c0105944:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105947	obj/kernel.asm	/^c0105947:	83 c8 07             	or     $0x7,%eax$/;"	l
c010594a	obj/kernel.asm	/^c010594a:	89 c2                	mov    %eax,%edx$/;"	l
c010594c	obj/kernel.asm	/^c010594c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010594f	obj/kernel.asm	/^c010594f:	89 10                	mov    %edx,(%eax)$/;"	l
c0105951	obj/kernel.asm	/^c0105951:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105954	obj/kernel.asm	/^c0105954:	8b 00                	mov    (%eax),%eax$/;"	l
c0105956	obj/kernel.asm	/^c0105956:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010595b	obj/kernel.asm	/^c010595b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010595e	obj/kernel.asm	/^c010595e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105961	obj/kernel.asm	/^c0105961:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105964	obj/kernel.asm	/^c0105964:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105967	obj/kernel.asm	/^c0105967:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c010596c	obj/kernel.asm	/^c010596c:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c010596f	obj/kernel.asm	/^c010596f:	72 23                	jb     c0105994 <get_pte+0x11d>$/;"	l
c0105971	obj/kernel.asm	/^c0105971:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105974	obj/kernel.asm	/^c0105974:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105978	obj/kernel.asm	/^c0105978:	c7 44 24 08 6c 63 11 	movl   $0xc011636c,0x8(%esp)$/;"	l
c010597f	obj/kernel.asm	/^c010597f:	c0 $/;"	l
c0105980	obj/kernel.asm	/^c0105980:	c7 44 24 04 9b 01 00 	movl   $0x19b,0x4(%esp)$/;"	l
c0105987	obj/kernel.asm	/^c0105987:	00 $/;"	l
c0105988	obj/kernel.asm	/^c0105988:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010598f	obj/kernel.asm	/^c010598f:	e8 34 b5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105994	obj/kernel.asm	/^c0105994:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105997	obj/kernel.asm	/^c0105997:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010599c	obj/kernel.asm	/^c010599c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010599f	obj/kernel.asm	/^c010599f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01059a2	obj/kernel.asm	/^c01059a2:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
c01059a8	obj/kernel.asm	/^c01059a8:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01059ab	obj/kernel.asm	/^c01059ab:	01 d0                	add    %edx,%eax$/;"	l
c01059ad	obj/kernel.asm	/^c01059ad:	c9                   	leave  $/;"	l
c01059ae	obj/kernel.asm	/^c01059ae:	c3                   	ret    $/;"	l
c01059af	obj/kernel.asm	/^c01059af <get_page>:$/;"	l
c01059af	obj/kernel.asm	/^c01059af:	55                   	push   %ebp$/;"	l
c01059b0	obj/kernel.asm	/^c01059b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01059b2	obj/kernel.asm	/^c01059b2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01059b5	obj/kernel.asm	/^c01059b5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01059bc	obj/kernel.asm	/^c01059bc:	00 $/;"	l
c01059bd	obj/kernel.asm	/^c01059bd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01059c0	obj/kernel.asm	/^c01059c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01059c4	obj/kernel.asm	/^c01059c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01059c7	obj/kernel.asm	/^c01059c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059ca	obj/kernel.asm	/^c01059ca:	e8 a8 fe ff ff       	call   c0105877 <get_pte>$/;"	l
c01059cf	obj/kernel.asm	/^c01059cf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01059d2	obj/kernel.asm	/^c01059d2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01059d6	obj/kernel.asm	/^c01059d6:	74 08                	je     c01059e0 <get_page+0x31>$/;"	l
c01059d8	obj/kernel.asm	/^c01059d8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01059db	obj/kernel.asm	/^c01059db:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01059de	obj/kernel.asm	/^c01059de:	89 10                	mov    %edx,(%eax)$/;"	l
c01059e0	obj/kernel.asm	/^c01059e0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01059e4	obj/kernel.asm	/^c01059e4:	74 1b                	je     c0105a01 <get_page+0x52>$/;"	l
c01059e6	obj/kernel.asm	/^c01059e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01059e9	obj/kernel.asm	/^c01059e9:	8b 00                	mov    (%eax),%eax$/;"	l
c01059eb	obj/kernel.asm	/^c01059eb:	83 e0 01             	and    $0x1,%eax$/;"	l
c01059ee	obj/kernel.asm	/^c01059ee:	85 c0                	test   %eax,%eax$/;"	l
c01059f0	obj/kernel.asm	/^c01059f0:	74 0f                	je     c0105a01 <get_page+0x52>$/;"	l
c01059f2	obj/kernel.asm	/^c01059f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01059f5	obj/kernel.asm	/^c01059f5:	8b 00                	mov    (%eax),%eax$/;"	l
c01059f7	obj/kernel.asm	/^c01059f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059fa	obj/kernel.asm	/^c01059fa:	e8 b6 f4 ff ff       	call   c0104eb5 <pte2page>$/;"	l
c01059ff	obj/kernel.asm	/^c01059ff:	eb 05                	jmp    c0105a06 <get_page+0x57>$/;"	l
c0105a01	obj/kernel.asm	/^c0105a01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105a06	obj/kernel.asm	/^c0105a06:	c9                   	leave  $/;"	l
c0105a07	obj/kernel.asm	/^c0105a07:	c3                   	ret    $/;"	l
c0105a08	obj/kernel.asm	/^c0105a08 <page_remove_pte>:$/;"	l
c0105a08	obj/kernel.asm	/^c0105a08:	55                   	push   %ebp$/;"	l
c0105a09	obj/kernel.asm	/^c0105a09:	89 e5                	mov    %esp,%ebp$/;"	l
c0105a0b	obj/kernel.asm	/^c0105a0b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105a0e	obj/kernel.asm	/^c0105a0e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105a11	obj/kernel.asm	/^c0105a11:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a13	obj/kernel.asm	/^c0105a13:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105a16	obj/kernel.asm	/^c0105a16:	85 c0                	test   %eax,%eax$/;"	l
c0105a18	obj/kernel.asm	/^c0105a18:	74 4d                	je     c0105a67 <page_remove_pte+0x5f>$/;"	l
c0105a1a	obj/kernel.asm	/^c0105a1a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105a1d	obj/kernel.asm	/^c0105a1d:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a1f	obj/kernel.asm	/^c0105a1f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a22	obj/kernel.asm	/^c0105a22:	e8 8e f4 ff ff       	call   c0104eb5 <pte2page>$/;"	l
c0105a27	obj/kernel.asm	/^c0105a27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a2a	obj/kernel.asm	/^c0105a2a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105a2d	obj/kernel.asm	/^c0105a2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a30	obj/kernel.asm	/^c0105a30:	e8 04 f5 ff ff       	call   c0104f39 <page_ref_dec>$/;"	l
c0105a35	obj/kernel.asm	/^c0105a35:	85 c0                	test   %eax,%eax$/;"	l
c0105a37	obj/kernel.asm	/^c0105a37:	75 13                	jne    c0105a4c <page_remove_pte+0x44>$/;"	l
c0105a39	obj/kernel.asm	/^c0105a39:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105a40	obj/kernel.asm	/^c0105a40:	00 $/;"	l
c0105a41	obj/kernel.asm	/^c0105a41:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105a44	obj/kernel.asm	/^c0105a44:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a47	obj/kernel.asm	/^c0105a47:	e8 2f f7 ff ff       	call   c010517b <free_pages>$/;"	l
c0105a4c	obj/kernel.asm	/^c0105a4c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105a4f	obj/kernel.asm	/^c0105a4f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105a55	obj/kernel.asm	/^c0105a55:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a58	obj/kernel.asm	/^c0105a58:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105a5c	obj/kernel.asm	/^c0105a5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105a5f	obj/kernel.asm	/^c0105a5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105a62	obj/kernel.asm	/^c0105a62:	e8 18 05 00 00       	call   c0105f7f <tlb_invalidate>$/;"	l
c0105a67	obj/kernel.asm	/^c0105a67:	c9                   	leave  $/;"	l
c0105a68	obj/kernel.asm	/^c0105a68:	c3                   	ret    $/;"	l
c0105a69	obj/kernel.asm	/^c0105a69 <unmap_range>:$/;"	l
c0105a69	obj/kernel.asm	/^c0105a69:	55                   	push   %ebp$/;"	l
c0105a6a	obj/kernel.asm	/^c0105a6a:	89 e5                	mov    %esp,%ebp$/;"	l
c0105a6c	obj/kernel.asm	/^c0105a6c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105a6f	obj/kernel.asm	/^c0105a6f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105a72	obj/kernel.asm	/^c0105a72:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105a77	obj/kernel.asm	/^c0105a77:	85 c0                	test   %eax,%eax$/;"	l
c0105a79	obj/kernel.asm	/^c0105a79:	75 0c                	jne    c0105a87 <unmap_range+0x1e>$/;"	l
c0105a7b	obj/kernel.asm	/^c0105a7b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105a7e	obj/kernel.asm	/^c0105a7e:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105a83	obj/kernel.asm	/^c0105a83:	85 c0                	test   %eax,%eax$/;"	l
c0105a85	obj/kernel.asm	/^c0105a85:	74 24                	je     c0105aab <unmap_range+0x42>$/;"	l
c0105a87	obj/kernel.asm	/^c0105a87:	c7 44 24 0c 94 64 11 	movl   $0xc0116494,0xc(%esp)$/;"	l
c0105a8e	obj/kernel.asm	/^c0105a8e:	c0 $/;"	l
c0105a8f	obj/kernel.asm	/^c0105a8f:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105a96	obj/kernel.asm	/^c0105a96:	c0 $/;"	l
c0105a97	obj/kernel.asm	/^c0105a97:	c7 44 24 04 d5 01 00 	movl   $0x1d5,0x4(%esp)$/;"	l
c0105a9e	obj/kernel.asm	/^c0105a9e:	00 $/;"	l
c0105a9f	obj/kernel.asm	/^c0105a9f:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105aa6	obj/kernel.asm	/^c0105aa6:	e8 1d b4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105aab	obj/kernel.asm	/^c0105aab:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0105ab2	obj/kernel.asm	/^c0105ab2:	76 11                	jbe    c0105ac5 <unmap_range+0x5c>$/;"	l
c0105ab4	obj/kernel.asm	/^c0105ab4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105ab7	obj/kernel.asm	/^c0105ab7:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105aba	obj/kernel.asm	/^c0105aba:	73 09                	jae    c0105ac5 <unmap_range+0x5c>$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0105ac3	obj/kernel.asm	/^c0105ac3:	76 24                	jbe    c0105ae9 <unmap_range+0x80>$/;"	l
c0105ac5	obj/kernel.asm	/^c0105ac5:	c7 44 24 0c bd 64 11 	movl   $0xc01164bd,0xc(%esp)$/;"	l
c0105acc	obj/kernel.asm	/^c0105acc:	c0 $/;"	l
c0105acd	obj/kernel.asm	/^c0105acd:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105ad4	obj/kernel.asm	/^c0105ad4:	c0 $/;"	l
c0105ad5	obj/kernel.asm	/^c0105ad5:	c7 44 24 04 d6 01 00 	movl   $0x1d6,0x4(%esp)$/;"	l
c0105adc	obj/kernel.asm	/^c0105adc:	00 $/;"	l
c0105add	obj/kernel.asm	/^c0105add:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105ae4	obj/kernel.asm	/^c0105ae4:	e8 df b3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105ae9	obj/kernel.asm	/^c0105ae9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105af0	obj/kernel.asm	/^c0105af0:	00 $/;"	l
c0105af1	obj/kernel.asm	/^c0105af1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105af4	obj/kernel.asm	/^c0105af4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105af8	obj/kernel.asm	/^c0105af8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105afb	obj/kernel.asm	/^c0105afb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105afe	obj/kernel.asm	/^c0105afe:	e8 74 fd ff ff       	call   c0105877 <get_pte>$/;"	l
c0105b03	obj/kernel.asm	/^c0105b03:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105b06	obj/kernel.asm	/^c0105b06:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105b0a	obj/kernel.asm	/^c0105b0a:	75 18                	jne    c0105b24 <unmap_range+0xbb>$/;"	l
c0105b0c	obj/kernel.asm	/^c0105b0c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b0f	obj/kernel.asm	/^c0105b0f:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105b14	obj/kernel.asm	/^c0105b14:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b17	obj/kernel.asm	/^c0105b17:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b1a	obj/kernel.asm	/^c0105b1a:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105b1f	obj/kernel.asm	/^c0105b1f:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105b22	obj/kernel.asm	/^c0105b22:	eb 29                	jmp    c0105b4d <unmap_range+0xe4>$/;"	l
c0105b24	obj/kernel.asm	/^c0105b24:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b27	obj/kernel.asm	/^c0105b27:	8b 00                	mov    (%eax),%eax$/;"	l
c0105b29	obj/kernel.asm	/^c0105b29:	85 c0                	test   %eax,%eax$/;"	l
c0105b2b	obj/kernel.asm	/^c0105b2b:	74 19                	je     c0105b46 <unmap_range+0xdd>$/;"	l
c0105b2d	obj/kernel.asm	/^c0105b2d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b30	obj/kernel.asm	/^c0105b30:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105b34	obj/kernel.asm	/^c0105b34:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b37	obj/kernel.asm	/^c0105b37:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105b3b	obj/kernel.asm	/^c0105b3b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105b3e	obj/kernel.asm	/^c0105b3e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105b41	obj/kernel.asm	/^c0105b41:	e8 c2 fe ff ff       	call   c0105a08 <page_remove_pte>$/;"	l
c0105b46	obj/kernel.asm	/^c0105b46:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0105b4d	obj/kernel.asm	/^c0105b4d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105b51	obj/kernel.asm	/^c0105b51:	74 08                	je     c0105b5b <unmap_range+0xf2>$/;"	l
c0105b53	obj/kernel.asm	/^c0105b53:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b56	obj/kernel.asm	/^c0105b56:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105b59	obj/kernel.asm	/^c0105b59:	72 8e                	jb     c0105ae9 <unmap_range+0x80>$/;"	l
c0105b5b	obj/kernel.asm	/^c0105b5b:	c9                   	leave  $/;"	l
c0105b5c	obj/kernel.asm	/^c0105b5c:	c3                   	ret    $/;"	l
c0105b5d	obj/kernel.asm	/^c0105b5d <exit_range>:$/;"	l
c0105b5d	obj/kernel.asm	/^c0105b5d:	55                   	push   %ebp$/;"	l
c0105b5e	obj/kernel.asm	/^c0105b5e:	89 e5                	mov    %esp,%ebp$/;"	l
c0105b60	obj/kernel.asm	/^c0105b60:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105b63	obj/kernel.asm	/^c0105b63:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105b66	obj/kernel.asm	/^c0105b66:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105b6b	obj/kernel.asm	/^c0105b6b:	85 c0                	test   %eax,%eax$/;"	l
c0105b6d	obj/kernel.asm	/^c0105b6d:	75 0c                	jne    c0105b7b <exit_range+0x1e>$/;"	l
c0105b6f	obj/kernel.asm	/^c0105b6f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105b72	obj/kernel.asm	/^c0105b72:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105b77	obj/kernel.asm	/^c0105b77:	85 c0                	test   %eax,%eax$/;"	l
c0105b79	obj/kernel.asm	/^c0105b79:	74 24                	je     c0105b9f <exit_range+0x42>$/;"	l
c0105b7b	obj/kernel.asm	/^c0105b7b:	c7 44 24 0c 94 64 11 	movl   $0xc0116494,0xc(%esp)$/;"	l
c0105b82	obj/kernel.asm	/^c0105b82:	c0 $/;"	l
c0105b83	obj/kernel.asm	/^c0105b83:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105b8a	obj/kernel.asm	/^c0105b8a:	c0 $/;"	l
c0105b8b	obj/kernel.asm	/^c0105b8b:	c7 44 24 04 e7 01 00 	movl   $0x1e7,0x4(%esp)$/;"	l
c0105b92	obj/kernel.asm	/^c0105b92:	00 $/;"	l
c0105b93	obj/kernel.asm	/^c0105b93:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105b9a	obj/kernel.asm	/^c0105b9a:	e8 29 b3 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105b9f	obj/kernel.asm	/^c0105b9f:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0105ba6	obj/kernel.asm	/^c0105ba6:	76 11                	jbe    c0105bb9 <exit_range+0x5c>$/;"	l
c0105ba8	obj/kernel.asm	/^c0105ba8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105bab	obj/kernel.asm	/^c0105bab:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105bae	obj/kernel.asm	/^c0105bae:	73 09                	jae    c0105bb9 <exit_range+0x5c>$/;"	l
c0105bb0	obj/kernel.asm	/^c0105bb0:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0105bb7	obj/kernel.asm	/^c0105bb7:	76 24                	jbe    c0105bdd <exit_range+0x80>$/;"	l
c0105bb9	obj/kernel.asm	/^c0105bb9:	c7 44 24 0c bd 64 11 	movl   $0xc01164bd,0xc(%esp)$/;"	l
c0105bc0	obj/kernel.asm	/^c0105bc0:	c0 $/;"	l
c0105bc1	obj/kernel.asm	/^c0105bc1:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105bc8	obj/kernel.asm	/^c0105bc8:	c0 $/;"	l
c0105bc9	obj/kernel.asm	/^c0105bc9:	c7 44 24 04 e8 01 00 	movl   $0x1e8,0x4(%esp)$/;"	l
c0105bd0	obj/kernel.asm	/^c0105bd0:	00 $/;"	l
c0105bd1	obj/kernel.asm	/^c0105bd1:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105bd8	obj/kernel.asm	/^c0105bd8:	e8 eb b2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105bdd	obj/kernel.asm	/^c0105bdd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105be0	obj/kernel.asm	/^c0105be0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105be3	obj/kernel.asm	/^c0105be3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105be6	obj/kernel.asm	/^c0105be6:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105beb	obj/kernel.asm	/^c0105beb:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105bee	obj/kernel.asm	/^c0105bee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105bf1	obj/kernel.asm	/^c0105bf1:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0105bf4	obj/kernel.asm	/^c0105bf4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105bf7	obj/kernel.asm	/^c0105bf7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105bfa	obj/kernel.asm	/^c0105bfa:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105c01	obj/kernel.asm	/^c0105c01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105c04	obj/kernel.asm	/^c0105c04:	01 d0                	add    %edx,%eax$/;"	l
c0105c06	obj/kernel.asm	/^c0105c06:	8b 00                	mov    (%eax),%eax$/;"	l
c0105c08	obj/kernel.asm	/^c0105c08:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105c0b	obj/kernel.asm	/^c0105c0b:	85 c0                	test   %eax,%eax$/;"	l
c0105c0d	obj/kernel.asm	/^c0105c0d:	74 3e                	je     c0105c4d <exit_range+0xf0>$/;"	l
c0105c0f	obj/kernel.asm	/^c0105c0f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105c12	obj/kernel.asm	/^c0105c12:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105c19	obj/kernel.asm	/^c0105c19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105c1c	obj/kernel.asm	/^c0105c1c:	01 d0                	add    %edx,%eax$/;"	l
c0105c1e	obj/kernel.asm	/^c0105c1e:	8b 00                	mov    (%eax),%eax$/;"	l
c0105c20	obj/kernel.asm	/^c0105c20:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c23	obj/kernel.asm	/^c0105c23:	e8 cb f2 ff ff       	call   c0104ef3 <pde2page>$/;"	l
c0105c28	obj/kernel.asm	/^c0105c28:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105c2f	obj/kernel.asm	/^c0105c2f:	00 $/;"	l
c0105c30	obj/kernel.asm	/^c0105c30:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c33	obj/kernel.asm	/^c0105c33:	e8 43 f5 ff ff       	call   c010517b <free_pages>$/;"	l
c0105c38	obj/kernel.asm	/^c0105c38:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105c3b	obj/kernel.asm	/^c0105c3b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105c42	obj/kernel.asm	/^c0105c42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105c45	obj/kernel.asm	/^c0105c45:	01 d0                	add    %edx,%eax$/;"	l
c0105c47	obj/kernel.asm	/^c0105c47:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105c4d	obj/kernel.asm	/^c0105c4d:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c0105c54	obj/kernel.asm	/^c0105c54:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105c58	obj/kernel.asm	/^c0105c58:	74 08                	je     c0105c62 <exit_range+0x105>$/;"	l
c0105c5a	obj/kernel.asm	/^c0105c5a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105c5d	obj/kernel.asm	/^c0105c5d:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105c60	obj/kernel.asm	/^c0105c60:	72 8c                	jb     c0105bee <exit_range+0x91>$/;"	l
c0105c62	obj/kernel.asm	/^c0105c62:	c9                   	leave  $/;"	l
c0105c63	obj/kernel.asm	/^c0105c63:	c3                   	ret    $/;"	l
c0105c64	obj/kernel.asm	/^c0105c64 <copy_range>:$/;"	l
c0105c64	obj/kernel.asm	/^c0105c64:	55                   	push   %ebp$/;"	l
c0105c65	obj/kernel.asm	/^c0105c65:	89 e5                	mov    %esp,%ebp$/;"	l
c0105c67	obj/kernel.asm	/^c0105c67:	53                   	push   %ebx$/;"	l
c0105c68	obj/kernel.asm	/^c0105c68:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0105c6b	obj/kernel.asm	/^c0105c6b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105c6e	obj/kernel.asm	/^c0105c6e:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105c73	obj/kernel.asm	/^c0105c73:	85 c0                	test   %eax,%eax$/;"	l
c0105c75	obj/kernel.asm	/^c0105c75:	75 0c                	jne    c0105c83 <copy_range+0x1f>$/;"	l
c0105c77	obj/kernel.asm	/^c0105c77:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105c7a	obj/kernel.asm	/^c0105c7a:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105c7f	obj/kernel.asm	/^c0105c7f:	85 c0                	test   %eax,%eax$/;"	l
c0105c81	obj/kernel.asm	/^c0105c81:	74 24                	je     c0105ca7 <copy_range+0x43>$/;"	l
c0105c83	obj/kernel.asm	/^c0105c83:	c7 44 24 0c 94 64 11 	movl   $0xc0116494,0xc(%esp)$/;"	l
c0105c8a	obj/kernel.asm	/^c0105c8a:	c0 $/;"	l
c0105c8b	obj/kernel.asm	/^c0105c8b:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105c92	obj/kernel.asm	/^c0105c92:	c0 $/;"	l
c0105c93	obj/kernel.asm	/^c0105c93:	c7 44 24 04 fd 01 00 	movl   $0x1fd,0x4(%esp)$/;"	l
c0105c9a	obj/kernel.asm	/^c0105c9a:	00 $/;"	l
c0105c9b	obj/kernel.asm	/^c0105c9b:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105ca2	obj/kernel.asm	/^c0105ca2:	e8 21 b2 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105ca7	obj/kernel.asm	/^c0105ca7:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c0105cae	obj/kernel.asm	/^c0105cae:	76 11                	jbe    c0105cc1 <copy_range+0x5d>$/;"	l
c0105cb0	obj/kernel.asm	/^c0105cb0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105cb3	obj/kernel.asm	/^c0105cb3:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105cb6	obj/kernel.asm	/^c0105cb6:	73 09                	jae    c0105cc1 <copy_range+0x5d>$/;"	l
c0105cb8	obj/kernel.asm	/^c0105cb8:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c0105cbf	obj/kernel.asm	/^c0105cbf:	76 24                	jbe    c0105ce5 <copy_range+0x81>$/;"	l
c0105cc1	obj/kernel.asm	/^c0105cc1:	c7 44 24 0c bd 64 11 	movl   $0xc01164bd,0xc(%esp)$/;"	l
c0105cc8	obj/kernel.asm	/^c0105cc8:	c0 $/;"	l
c0105cc9	obj/kernel.asm	/^c0105cc9:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105cd0	obj/kernel.asm	/^c0105cd0:	c0 $/;"	l
c0105cd1	obj/kernel.asm	/^c0105cd1:	c7 44 24 04 fe 01 00 	movl   $0x1fe,0x4(%esp)$/;"	l
c0105cd8	obj/kernel.asm	/^c0105cd8:	00 $/;"	l
c0105cd9	obj/kernel.asm	/^c0105cd9:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105ce0	obj/kernel.asm	/^c0105ce0:	e8 e3 b1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105ce5	obj/kernel.asm	/^c0105ce5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105cec	obj/kernel.asm	/^c0105cec:	00 $/;"	l
c0105ced	obj/kernel.asm	/^c0105ced:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105cf0	obj/kernel.asm	/^c0105cf0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105cf4	obj/kernel.asm	/^c0105cf4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105cf7	obj/kernel.asm	/^c0105cf7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105cfa	obj/kernel.asm	/^c0105cfa:	e8 78 fb ff ff       	call   c0105877 <get_pte>$/;"	l
c0105cff	obj/kernel.asm	/^c0105cff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105d02	obj/kernel.asm	/^c0105d02:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105d06	obj/kernel.asm	/^c0105d06:	75 1b                	jne    c0105d23 <copy_range+0xbf>$/;"	l
c0105d08	obj/kernel.asm	/^c0105d08:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105d0b	obj/kernel.asm	/^c0105d0b:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105d10	obj/kernel.asm	/^c0105d10:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105d13	obj/kernel.asm	/^c0105d13:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105d16	obj/kernel.asm	/^c0105d16:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105d1b	obj/kernel.asm	/^c0105d1b:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0105d1e	obj/kernel.asm	/^c0105d1e:	e9 42 01 00 00       	jmp    c0105e65 <copy_range+0x201>$/;"	l
c0105d23	obj/kernel.asm	/^c0105d23:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d26	obj/kernel.asm	/^c0105d26:	8b 00                	mov    (%eax),%eax$/;"	l
c0105d28	obj/kernel.asm	/^c0105d28:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105d2b	obj/kernel.asm	/^c0105d2b:	85 c0                	test   %eax,%eax$/;"	l
c0105d2d	obj/kernel.asm	/^c0105d2d:	0f 84 2b 01 00 00    	je     c0105e5e <copy_range+0x1fa>$/;"	l
c0105d33	obj/kernel.asm	/^c0105d33:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105d3a	obj/kernel.asm	/^c0105d3a:	00 $/;"	l
c0105d3b	obj/kernel.asm	/^c0105d3b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105d3e	obj/kernel.asm	/^c0105d3e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105d42	obj/kernel.asm	/^c0105d42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105d45	obj/kernel.asm	/^c0105d45:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d48	obj/kernel.asm	/^c0105d48:	e8 2a fb ff ff       	call   c0105877 <get_pte>$/;"	l
c0105d4d	obj/kernel.asm	/^c0105d4d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105d50	obj/kernel.asm	/^c0105d50:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0105d54	obj/kernel.asm	/^c0105d54:	75 0a                	jne    c0105d60 <copy_range+0xfc>$/;"	l
c0105d56	obj/kernel.asm	/^c0105d56:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105d5b	obj/kernel.asm	/^c0105d5b:	e9 1c 01 00 00       	jmp    c0105e7c <copy_range+0x218>$/;"	l
c0105d60	obj/kernel.asm	/^c0105d60:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d63	obj/kernel.asm	/^c0105d63:	8b 00                	mov    (%eax),%eax$/;"	l
c0105d65	obj/kernel.asm	/^c0105d65:	83 e0 07             	and    $0x7,%eax$/;"	l
c0105d68	obj/kernel.asm	/^c0105d68:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105d6b	obj/kernel.asm	/^c0105d6b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d6e	obj/kernel.asm	/^c0105d6e:	8b 00                	mov    (%eax),%eax$/;"	l
c0105d70	obj/kernel.asm	/^c0105d70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d73	obj/kernel.asm	/^c0105d73:	e8 3d f1 ff ff       	call   c0104eb5 <pte2page>$/;"	l
c0105d78	obj/kernel.asm	/^c0105d78:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105d7b	obj/kernel.asm	/^c0105d7b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105d82	obj/kernel.asm	/^c0105d82:	e8 89 f3 ff ff       	call   c0105110 <alloc_pages>$/;"	l
c0105d87	obj/kernel.asm	/^c0105d87:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105d8a	obj/kernel.asm	/^c0105d8a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105d8e	obj/kernel.asm	/^c0105d8e:	75 24                	jne    c0105db4 <copy_range+0x150>$/;"	l
c0105d90	obj/kernel.asm	/^c0105d90:	c7 44 24 0c d5 64 11 	movl   $0xc01164d5,0xc(%esp)$/;"	l
c0105d97	obj/kernel.asm	/^c0105d97:	c0 $/;"	l
c0105d98	obj/kernel.asm	/^c0105d98:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105d9f	obj/kernel.asm	/^c0105d9f:	c0 $/;"	l
c0105da0	obj/kernel.asm	/^c0105da0:	c7 44 24 04 11 02 00 	movl   $0x211,0x4(%esp)$/;"	l
c0105da7	obj/kernel.asm	/^c0105da7:	00 $/;"	l
c0105da8	obj/kernel.asm	/^c0105da8:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105daf	obj/kernel.asm	/^c0105daf:	e8 14 b1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105db4	obj/kernel.asm	/^c0105db4:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105db8	obj/kernel.asm	/^c0105db8:	75 24                	jne    c0105dde <copy_range+0x17a>$/;"	l
c0105dba	obj/kernel.asm	/^c0105dba:	c7 44 24 0c e0 64 11 	movl   $0xc01164e0,0xc(%esp)$/;"	l
c0105dc1	obj/kernel.asm	/^c0105dc1:	c0 $/;"	l
c0105dc2	obj/kernel.asm	/^c0105dc2:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105dc9	obj/kernel.asm	/^c0105dc9:	c0 $/;"	l
c0105dca	obj/kernel.asm	/^c0105dca:	c7 44 24 04 12 02 00 	movl   $0x212,0x4(%esp)$/;"	l
c0105dd1	obj/kernel.asm	/^c0105dd1:	00 $/;"	l
c0105dd2	obj/kernel.asm	/^c0105dd2:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105dd9	obj/kernel.asm	/^c0105dd9:	e8 ea b0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105dde	obj/kernel.asm	/^c0105dde:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105de5	obj/kernel.asm	/^c0105de5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105de8	obj/kernel.asm	/^c0105de8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105deb	obj/kernel.asm	/^c0105deb:	e8 71 f0 ff ff       	call   c0104e61 <page2kva>$/;"	l
c0105df0	obj/kernel.asm	/^c0105df0:	89 c3                	mov    %eax,%ebx$/;"	l
c0105df2	obj/kernel.asm	/^c0105df2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105df5	obj/kernel.asm	/^c0105df5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105df8	obj/kernel.asm	/^c0105df8:	e8 64 f0 ff ff       	call   c0104e61 <page2kva>$/;"	l
c0105dfd	obj/kernel.asm	/^c0105dfd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0105e04	obj/kernel.asm	/^c0105e04:	00 $/;"	l
c0105e05	obj/kernel.asm	/^c0105e05:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0105e09	obj/kernel.asm	/^c0105e09:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e0c	obj/kernel.asm	/^c0105e0c:	e8 ea f6 00 00       	call   c01154fb <memcpy>$/;"	l
c0105e11	obj/kernel.asm	/^c0105e11:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e14	obj/kernel.asm	/^c0105e14:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105e18	obj/kernel.asm	/^c0105e18:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105e1b	obj/kernel.asm	/^c0105e1b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105e1f	obj/kernel.asm	/^c0105e1f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105e22	obj/kernel.asm	/^c0105e22:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e26	obj/kernel.asm	/^c0105e26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e29	obj/kernel.asm	/^c0105e29:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e2c	obj/kernel.asm	/^c0105e2c:	e8 95 00 00 00       	call   c0105ec6 <page_insert>$/;"	l
c0105e31	obj/kernel.asm	/^c0105e31:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105e34	obj/kernel.asm	/^c0105e34:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105e38	obj/kernel.asm	/^c0105e38:	74 24                	je     c0105e5e <copy_range+0x1fa>$/;"	l
c0105e3a	obj/kernel.asm	/^c0105e3a:	c7 44 24 0c ec 64 11 	movl   $0xc01164ec,0xc(%esp)$/;"	l
c0105e41	obj/kernel.asm	/^c0105e41:	c0 $/;"	l
c0105e42	obj/kernel.asm	/^c0105e42:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0105e49	obj/kernel.asm	/^c0105e49:	c0 $/;"	l
c0105e4a	obj/kernel.asm	/^c0105e4a:	c7 44 24 04 26 02 00 	movl   $0x226,0x4(%esp)$/;"	l
c0105e51	obj/kernel.asm	/^c0105e51:	00 $/;"	l
c0105e52	obj/kernel.asm	/^c0105e52:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105e59	obj/kernel.asm	/^c0105e59:	e8 6a b0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105e5e	obj/kernel.asm	/^c0105e5e:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c0105e65	obj/kernel.asm	/^c0105e65:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0105e69	obj/kernel.asm	/^c0105e69:	74 0c                	je     c0105e77 <copy_range+0x213>$/;"	l
c0105e6b	obj/kernel.asm	/^c0105e6b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105e6e	obj/kernel.asm	/^c0105e6e:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105e71	obj/kernel.asm	/^c0105e71:	0f 82 6e fe ff ff    	jb     c0105ce5 <copy_range+0x81>$/;"	l
c0105e77	obj/kernel.asm	/^c0105e77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105e7c	obj/kernel.asm	/^c0105e7c:	83 c4 34             	add    $0x34,%esp$/;"	l
c0105e7f	obj/kernel.asm	/^c0105e7f:	5b                   	pop    %ebx$/;"	l
c0105e80	obj/kernel.asm	/^c0105e80:	5d                   	pop    %ebp$/;"	l
c0105e81	obj/kernel.asm	/^c0105e81:	c3                   	ret    $/;"	l
c0105e82	obj/kernel.asm	/^c0105e82 <page_remove>:$/;"	l
c0105e82	obj/kernel.asm	/^c0105e82:	55                   	push   %ebp$/;"	l
c0105e83	obj/kernel.asm	/^c0105e83:	89 e5                	mov    %esp,%ebp$/;"	l
c0105e85	obj/kernel.asm	/^c0105e85:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105e88	obj/kernel.asm	/^c0105e88:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105e8f	obj/kernel.asm	/^c0105e8f:	00 $/;"	l
c0105e90	obj/kernel.asm	/^c0105e90:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105e93	obj/kernel.asm	/^c0105e93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105e97	obj/kernel.asm	/^c0105e97:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105e9a	obj/kernel.asm	/^c0105e9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e9d	obj/kernel.asm	/^c0105e9d:	e8 d5 f9 ff ff       	call   c0105877 <get_pte>$/;"	l
c0105ea2	obj/kernel.asm	/^c0105ea2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105ea5	obj/kernel.asm	/^c0105ea5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105ea9	obj/kernel.asm	/^c0105ea9:	74 19                	je     c0105ec4 <page_remove+0x42>$/;"	l
c0105eab	obj/kernel.asm	/^c0105eab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105eae	obj/kernel.asm	/^c0105eae:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105eb2	obj/kernel.asm	/^c0105eb2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105eb5	obj/kernel.asm	/^c0105eb5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105eb9	obj/kernel.asm	/^c0105eb9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105ebc	obj/kernel.asm	/^c0105ebc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ebf	obj/kernel.asm	/^c0105ebf:	e8 44 fb ff ff       	call   c0105a08 <page_remove_pte>$/;"	l
c0105ec4	obj/kernel.asm	/^c0105ec4:	c9                   	leave  $/;"	l
c0105ec5	obj/kernel.asm	/^c0105ec5:	c3                   	ret    $/;"	l
c0105ec6	obj/kernel.asm	/^c0105ec6 <page_insert>:$/;"	l
c0105ec6	obj/kernel.asm	/^c0105ec6:	55                   	push   %ebp$/;"	l
c0105ec7	obj/kernel.asm	/^c0105ec7:	89 e5                	mov    %esp,%ebp$/;"	l
c0105ec9	obj/kernel.asm	/^c0105ec9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105ecc	obj/kernel.asm	/^c0105ecc:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0105ed3	obj/kernel.asm	/^c0105ed3:	00 $/;"	l
c0105ed4	obj/kernel.asm	/^c0105ed4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105ed7	obj/kernel.asm	/^c0105ed7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105edb	obj/kernel.asm	/^c0105edb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105ede	obj/kernel.asm	/^c0105ede:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ee1	obj/kernel.asm	/^c0105ee1:	e8 91 f9 ff ff       	call   c0105877 <get_pte>$/;"	l
c0105ee6	obj/kernel.asm	/^c0105ee6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105ee9	obj/kernel.asm	/^c0105ee9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105eed	obj/kernel.asm	/^c0105eed:	75 0a                	jne    c0105ef9 <page_insert+0x33>$/;"	l
c0105eef	obj/kernel.asm	/^c0105eef:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105ef4	obj/kernel.asm	/^c0105ef4:	e9 84 00 00 00       	jmp    c0105f7d <page_insert+0xb7>$/;"	l
c0105ef9	obj/kernel.asm	/^c0105ef9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105efc	obj/kernel.asm	/^c0105efc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105eff	obj/kernel.asm	/^c0105eff:	e8 1e f0 ff ff       	call   c0104f22 <page_ref_inc>$/;"	l
c0105f04	obj/kernel.asm	/^c0105f04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f07	obj/kernel.asm	/^c0105f07:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f09	obj/kernel.asm	/^c0105f09:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105f0c	obj/kernel.asm	/^c0105f0c:	85 c0                	test   %eax,%eax$/;"	l
c0105f0e	obj/kernel.asm	/^c0105f0e:	74 3e                	je     c0105f4e <page_insert+0x88>$/;"	l
c0105f10	obj/kernel.asm	/^c0105f10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f13	obj/kernel.asm	/^c0105f13:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f15	obj/kernel.asm	/^c0105f15:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f18	obj/kernel.asm	/^c0105f18:	e8 98 ef ff ff       	call   c0104eb5 <pte2page>$/;"	l
c0105f1d	obj/kernel.asm	/^c0105f1d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105f20	obj/kernel.asm	/^c0105f20:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105f23	obj/kernel.asm	/^c0105f23:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105f26	obj/kernel.asm	/^c0105f26:	75 0d                	jne    c0105f35 <page_insert+0x6f>$/;"	l
c0105f28	obj/kernel.asm	/^c0105f28:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105f2b	obj/kernel.asm	/^c0105f2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f2e	obj/kernel.asm	/^c0105f2e:	e8 06 f0 ff ff       	call   c0104f39 <page_ref_dec>$/;"	l
c0105f33	obj/kernel.asm	/^c0105f33:	eb 19                	jmp    c0105f4e <page_insert+0x88>$/;"	l
c0105f35	obj/kernel.asm	/^c0105f35:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f38	obj/kernel.asm	/^c0105f38:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105f3c	obj/kernel.asm	/^c0105f3c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105f3f	obj/kernel.asm	/^c0105f3f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105f43	obj/kernel.asm	/^c0105f43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105f46	obj/kernel.asm	/^c0105f46:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f49	obj/kernel.asm	/^c0105f49:	e8 ba fa ff ff       	call   c0105a08 <page_remove_pte>$/;"	l
c0105f4e	obj/kernel.asm	/^c0105f4e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105f51	obj/kernel.asm	/^c0105f51:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f54	obj/kernel.asm	/^c0105f54:	e8 ad ee ff ff       	call   c0104e06 <page2pa>$/;"	l
c0105f59	obj/kernel.asm	/^c0105f59:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c0105f5c	obj/kernel.asm	/^c0105f5c:	83 c8 01             	or     $0x1,%eax$/;"	l
c0105f5f	obj/kernel.asm	/^c0105f5f:	89 c2                	mov    %eax,%edx$/;"	l
c0105f61	obj/kernel.asm	/^c0105f61:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105f64	obj/kernel.asm	/^c0105f64:	89 10                	mov    %edx,(%eax)$/;"	l
c0105f66	obj/kernel.asm	/^c0105f66:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105f69	obj/kernel.asm	/^c0105f69:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105f6d	obj/kernel.asm	/^c0105f6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105f70	obj/kernel.asm	/^c0105f70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f73	obj/kernel.asm	/^c0105f73:	e8 07 00 00 00       	call   c0105f7f <tlb_invalidate>$/;"	l
c0105f78	obj/kernel.asm	/^c0105f78:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105f7d	obj/kernel.asm	/^c0105f7d:	c9                   	leave  $/;"	l
c0105f7e	obj/kernel.asm	/^c0105f7e:	c3                   	ret    $/;"	l
c0105f7f	obj/kernel.asm	/^c0105f7f <tlb_invalidate>:$/;"	l
c0105f7f	obj/kernel.asm	/^c0105f7f:	55                   	push   %ebp$/;"	l
c0105f80	obj/kernel.asm	/^c0105f80:	89 e5                	mov    %esp,%ebp$/;"	l
c0105f82	obj/kernel.asm	/^c0105f82:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105f85	obj/kernel.asm	/^c0105f85:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c0105f88	obj/kernel.asm	/^c0105f88:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105f8b	obj/kernel.asm	/^c0105f8b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105f8e	obj/kernel.asm	/^c0105f8e:	89 c2                	mov    %eax,%edx$/;"	l
c0105f90	obj/kernel.asm	/^c0105f90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105f93	obj/kernel.asm	/^c0105f93:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105f96	obj/kernel.asm	/^c0105f96:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0105f9d	obj/kernel.asm	/^c0105f9d:	77 23                	ja     c0105fc2 <tlb_invalidate+0x43>$/;"	l
c0105f9f	obj/kernel.asm	/^c0105f9f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105fa2	obj/kernel.asm	/^c0105fa2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105fa6	obj/kernel.asm	/^c0105fa6:	c7 44 24 08 10 64 11 	movl   $0xc0116410,0x8(%esp)$/;"	l
c0105fad	obj/kernel.asm	/^c0105fad:	c0 $/;"	l
c0105fae	obj/kernel.asm	/^c0105fae:	c7 44 24 04 57 02 00 	movl   $0x257,0x4(%esp)$/;"	l
c0105fb5	obj/kernel.asm	/^c0105fb5:	00 $/;"	l
c0105fb6	obj/kernel.asm	/^c0105fb6:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0105fbd	obj/kernel.asm	/^c0105fbd:	e8 06 af ff ff       	call   c0100ec8 <__panic>$/;"	l
c0105fc2	obj/kernel.asm	/^c0105fc2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105fc5	obj/kernel.asm	/^c0105fc5:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105fca	obj/kernel.asm	/^c0105fca:	39 c2                	cmp    %eax,%edx$/;"	l
c0105fcc	obj/kernel.asm	/^c0105fcc:	75 0c                	jne    c0105fda <tlb_invalidate+0x5b>$/;"	l
c0105fce	obj/kernel.asm	/^c0105fce:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105fd1	obj/kernel.asm	/^c0105fd1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105fd4	obj/kernel.asm	/^c0105fd4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105fd7	obj/kernel.asm	/^c0105fd7:	0f 01 38             	invlpg (%eax)$/;"	l
c0105fda	obj/kernel.asm	/^c0105fda:	c9                   	leave  $/;"	l
c0105fdb	obj/kernel.asm	/^c0105fdb:	c3                   	ret    $/;"	l
c0105fdc	obj/kernel.asm	/^c0105fdc <pgdir_alloc_page>:$/;"	l
c0105fdc	obj/kernel.asm	/^c0105fdc:	55                   	push   %ebp$/;"	l
c0105fdd	obj/kernel.asm	/^c0105fdd:	89 e5                	mov    %esp,%ebp$/;"	l
c0105fdf	obj/kernel.asm	/^c0105fdf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105fe2	obj/kernel.asm	/^c0105fe2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105fe9	obj/kernel.asm	/^c0105fe9:	e8 22 f1 ff ff       	call   c0105110 <alloc_pages>$/;"	l
c0105fee	obj/kernel.asm	/^c0105fee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105ff1	obj/kernel.asm	/^c0105ff1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105ff5	obj/kernel.asm	/^c0105ff5:	0f 84 b0 00 00 00    	je     c01060ab <pgdir_alloc_page+0xcf>$/;"	l
c0105ffb	obj/kernel.asm	/^c0105ffb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105ffe	obj/kernel.asm	/^c0105ffe:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106002	obj/kernel.asm	/^c0106002:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106005	obj/kernel.asm	/^c0106005:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106009	obj/kernel.asm	/^c0106009:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010600c	obj/kernel.asm	/^c010600c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106010	obj/kernel.asm	/^c0106010:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106013	obj/kernel.asm	/^c0106013:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106016	obj/kernel.asm	/^c0106016:	e8 ab fe ff ff       	call   c0105ec6 <page_insert>$/;"	l
c010601b	obj/kernel.asm	/^c010601b:	85 c0                	test   %eax,%eax$/;"	l
c010601d	obj/kernel.asm	/^c010601d:	74 1a                	je     c0106039 <pgdir_alloc_page+0x5d>$/;"	l
c010601f	obj/kernel.asm	/^c010601f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106026	obj/kernel.asm	/^c0106026:	00 $/;"	l
c0106027	obj/kernel.asm	/^c0106027:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010602a	obj/kernel.asm	/^c010602a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010602d	obj/kernel.asm	/^c010602d:	e8 49 f1 ff ff       	call   c010517b <free_pages>$/;"	l
c0106032	obj/kernel.asm	/^c0106032:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106037	obj/kernel.asm	/^c0106037:	eb 75                	jmp    c01060ae <pgdir_alloc_page+0xd2>$/;"	l
c0106039	obj/kernel.asm	/^c0106039:	a1 0c ff 14 c0       	mov    0xc014ff0c,%eax$/;"	l
c010603e	obj/kernel.asm	/^c010603e:	85 c0                	test   %eax,%eax$/;"	l
c0106040	obj/kernel.asm	/^c0106040:	74 69                	je     c01060ab <pgdir_alloc_page+0xcf>$/;"	l
c0106042	obj/kernel.asm	/^c0106042:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c0106047	obj/kernel.asm	/^c0106047:	85 c0                	test   %eax,%eax$/;"	l
c0106049	obj/kernel.asm	/^c0106049:	74 60                	je     c01060ab <pgdir_alloc_page+0xcf>$/;"	l
c010604b	obj/kernel.asm	/^c010604b:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c0106050	obj/kernel.asm	/^c0106050:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106057	obj/kernel.asm	/^c0106057:	00 $/;"	l
c0106058	obj/kernel.asm	/^c0106058:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010605b	obj/kernel.asm	/^c010605b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010605f	obj/kernel.asm	/^c010605f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106062	obj/kernel.asm	/^c0106062:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106066	obj/kernel.asm	/^c0106066:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106069	obj/kernel.asm	/^c0106069:	e8 51 0e 00 00       	call   c0106ebf <swap_map_swappable>$/;"	l
c010606e	obj/kernel.asm	/^c010606e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106071	obj/kernel.asm	/^c0106071:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106074	obj/kernel.asm	/^c0106074:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0106077	obj/kernel.asm	/^c0106077:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010607a	obj/kernel.asm	/^c010607a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010607d	obj/kernel.asm	/^c010607d:	e8 89 ee ff ff       	call   c0104f0b <page_ref>$/;"	l
c0106082	obj/kernel.asm	/^c0106082:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106085	obj/kernel.asm	/^c0106085:	74 24                	je     c01060ab <pgdir_alloc_page+0xcf>$/;"	l
c0106087	obj/kernel.asm	/^c0106087:	c7 44 24 0c f5 64 11 	movl   $0xc01164f5,0xc(%esp)$/;"	l
c010608e	obj/kernel.asm	/^c010608e:	c0 $/;"	l
c010608f	obj/kernel.asm	/^c010608f:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106096	obj/kernel.asm	/^c0106096:	c0 $/;"	l
c0106097	obj/kernel.asm	/^c0106097:	c7 44 24 04 6b 02 00 	movl   $0x26b,0x4(%esp)$/;"	l
c010609e	obj/kernel.asm	/^c010609e:	00 $/;"	l
c010609f	obj/kernel.asm	/^c010609f:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01060a6	obj/kernel.asm	/^c01060a6:	e8 1d ae ff ff       	call   c0100ec8 <__panic>$/;"	l
c01060ab	obj/kernel.asm	/^c01060ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01060ae	obj/kernel.asm	/^c01060ae:	c9                   	leave  $/;"	l
c01060af	obj/kernel.asm	/^c01060af:	c3                   	ret    $/;"	l
c01060b0	obj/kernel.asm	/^c01060b0 <check_alloc_page>:$/;"	l
c01060b0	obj/kernel.asm	/^c01060b0:	55                   	push   %ebp$/;"	l
c01060b1	obj/kernel.asm	/^c01060b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01060b3	obj/kernel.asm	/^c01060b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01060b6	obj/kernel.asm	/^c01060b6:	a1 20 30 15 c0       	mov    0xc0153020,%eax$/;"	l
c01060bb	obj/kernel.asm	/^c01060bb:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01060be	obj/kernel.asm	/^c01060be:	ff d0                	call   *%eax$/;"	l
c01060c0	obj/kernel.asm	/^c01060c0:	c7 04 24 0c 65 11 c0 	movl   $0xc011650c,(%esp)$/;"	l
c01060c7	obj/kernel.asm	/^c01060c7:	e8 99 a2 ff ff       	call   c0100365 <cprintf>$/;"	l
c01060cc	obj/kernel.asm	/^c01060cc:	c9                   	leave  $/;"	l
c01060cd	obj/kernel.asm	/^c01060cd:	c3                   	ret    $/;"	l
c01060ce	obj/kernel.asm	/^c01060ce <check_pgdir>:$/;"	l
c01060ce	obj/kernel.asm	/^c01060ce:	55                   	push   %ebp$/;"	l
c01060cf	obj/kernel.asm	/^c01060cf:	89 e5                	mov    %esp,%ebp$/;"	l
c01060d1	obj/kernel.asm	/^c01060d1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01060d4	obj/kernel.asm	/^c01060d4:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c01060d9	obj/kernel.asm	/^c01060d9:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c01060de	obj/kernel.asm	/^c01060de:	76 24                	jbe    c0106104 <check_pgdir+0x36>$/;"	l
c01060e0	obj/kernel.asm	/^c01060e0:	c7 44 24 0c 2b 65 11 	movl   $0xc011652b,0xc(%esp)$/;"	l
c01060e7	obj/kernel.asm	/^c01060e7:	c0 $/;"	l
c01060e8	obj/kernel.asm	/^c01060e8:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01060ef	obj/kernel.asm	/^c01060ef:	c0 $/;"	l
c01060f0	obj/kernel.asm	/^c01060f0:	c7 44 24 04 83 02 00 	movl   $0x283,0x4(%esp)$/;"	l
c01060f7	obj/kernel.asm	/^c01060f7:	00 $/;"	l
c01060f8	obj/kernel.asm	/^c01060f8:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01060ff	obj/kernel.asm	/^c01060ff:	e8 c4 ad ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106104	obj/kernel.asm	/^c0106104:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106109	obj/kernel.asm	/^c0106109:	85 c0                	test   %eax,%eax$/;"	l
c010610b	obj/kernel.asm	/^c010610b:	74 0e                	je     c010611b <check_pgdir+0x4d>$/;"	l
c010610d	obj/kernel.asm	/^c010610d:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106112	obj/kernel.asm	/^c0106112:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0106117	obj/kernel.asm	/^c0106117:	85 c0                	test   %eax,%eax$/;"	l
c0106119	obj/kernel.asm	/^c0106119:	74 24                	je     c010613f <check_pgdir+0x71>$/;"	l
c010611b	obj/kernel.asm	/^c010611b:	c7 44 24 0c 48 65 11 	movl   $0xc0116548,0xc(%esp)$/;"	l
c0106122	obj/kernel.asm	/^c0106122:	c0 $/;"	l
c0106123	obj/kernel.asm	/^c0106123:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010612a	obj/kernel.asm	/^c010612a:	c0 $/;"	l
c010612b	obj/kernel.asm	/^c010612b:	c7 44 24 04 84 02 00 	movl   $0x284,0x4(%esp)$/;"	l
c0106132	obj/kernel.asm	/^c0106132:	00 $/;"	l
c0106133	obj/kernel.asm	/^c0106133:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010613a	obj/kernel.asm	/^c010613a:	e8 89 ad ff ff       	call   c0100ec8 <__panic>$/;"	l
c010613f	obj/kernel.asm	/^c010613f:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106144	obj/kernel.asm	/^c0106144:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010614b	obj/kernel.asm	/^c010614b:	00 $/;"	l
c010614c	obj/kernel.asm	/^c010614c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0106153	obj/kernel.asm	/^c0106153:	00 $/;"	l
c0106154	obj/kernel.asm	/^c0106154:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106157	obj/kernel.asm	/^c0106157:	e8 53 f8 ff ff       	call   c01059af <get_page>$/;"	l
c010615c	obj/kernel.asm	/^c010615c:	85 c0                	test   %eax,%eax$/;"	l
c010615e	obj/kernel.asm	/^c010615e:	74 24                	je     c0106184 <check_pgdir+0xb6>$/;"	l
c0106160	obj/kernel.asm	/^c0106160:	c7 44 24 0c 80 65 11 	movl   $0xc0116580,0xc(%esp)$/;"	l
c0106167	obj/kernel.asm	/^c0106167:	c0 $/;"	l
c0106168	obj/kernel.asm	/^c0106168:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010616f	obj/kernel.asm	/^c010616f:	c0 $/;"	l
c0106170	obj/kernel.asm	/^c0106170:	c7 44 24 04 85 02 00 	movl   $0x285,0x4(%esp)$/;"	l
c0106177	obj/kernel.asm	/^c0106177:	00 $/;"	l
c0106178	obj/kernel.asm	/^c0106178:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010617f	obj/kernel.asm	/^c010617f:	e8 44 ad ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106184	obj/kernel.asm	/^c0106184:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010618b	obj/kernel.asm	/^c010618b:	e8 80 ef ff ff       	call   c0105110 <alloc_pages>$/;"	l
c0106190	obj/kernel.asm	/^c0106190:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106193	obj/kernel.asm	/^c0106193:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106198	obj/kernel.asm	/^c0106198:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010619f	obj/kernel.asm	/^c010619f:	00 $/;"	l
c01061a0	obj/kernel.asm	/^c01061a0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01061a7	obj/kernel.asm	/^c01061a7:	00 $/;"	l
c01061a8	obj/kernel.asm	/^c01061a8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01061ab	obj/kernel.asm	/^c01061ab:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01061af	obj/kernel.asm	/^c01061af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01061b2	obj/kernel.asm	/^c01061b2:	e8 0f fd ff ff       	call   c0105ec6 <page_insert>$/;"	l
c01061b7	obj/kernel.asm	/^c01061b7:	85 c0                	test   %eax,%eax$/;"	l
c01061b9	obj/kernel.asm	/^c01061b9:	74 24                	je     c01061df <check_pgdir+0x111>$/;"	l
c01061bb	obj/kernel.asm	/^c01061bb:	c7 44 24 0c a8 65 11 	movl   $0xc01165a8,0xc(%esp)$/;"	l
c01061c2	obj/kernel.asm	/^c01061c2:	c0 $/;"	l
c01061c3	obj/kernel.asm	/^c01061c3:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01061ca	obj/kernel.asm	/^c01061ca:	c0 $/;"	l
c01061cb	obj/kernel.asm	/^c01061cb:	c7 44 24 04 89 02 00 	movl   $0x289,0x4(%esp)$/;"	l
c01061d2	obj/kernel.asm	/^c01061d2:	00 $/;"	l
c01061d3	obj/kernel.asm	/^c01061d3:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01061da	obj/kernel.asm	/^c01061da:	e8 e9 ac ff ff       	call   c0100ec8 <__panic>$/;"	l
c01061df	obj/kernel.asm	/^c01061df:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c01061e4	obj/kernel.asm	/^c01061e4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01061eb	obj/kernel.asm	/^c01061eb:	00 $/;"	l
c01061ec	obj/kernel.asm	/^c01061ec:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01061f3	obj/kernel.asm	/^c01061f3:	00 $/;"	l
c01061f4	obj/kernel.asm	/^c01061f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01061f7	obj/kernel.asm	/^c01061f7:	e8 7b f6 ff ff       	call   c0105877 <get_pte>$/;"	l
c01061fc	obj/kernel.asm	/^c01061fc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01061ff	obj/kernel.asm	/^c01061ff:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106203	obj/kernel.asm	/^c0106203:	75 24                	jne    c0106229 <check_pgdir+0x15b>$/;"	l
c0106205	obj/kernel.asm	/^c0106205:	c7 44 24 0c d4 65 11 	movl   $0xc01165d4,0xc(%esp)$/;"	l
c010620c	obj/kernel.asm	/^c010620c:	c0 $/;"	l
c010620d	obj/kernel.asm	/^c010620d:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106214	obj/kernel.asm	/^c0106214:	c0 $/;"	l
c0106215	obj/kernel.asm	/^c0106215:	c7 44 24 04 8c 02 00 	movl   $0x28c,0x4(%esp)$/;"	l
c010621c	obj/kernel.asm	/^c010621c:	00 $/;"	l
c010621d	obj/kernel.asm	/^c010621d:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106224	obj/kernel.asm	/^c0106224:	e8 9f ac ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106229	obj/kernel.asm	/^c0106229:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010622c	obj/kernel.asm	/^c010622c:	8b 00                	mov    (%eax),%eax$/;"	l
c010622e	obj/kernel.asm	/^c010622e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106231	obj/kernel.asm	/^c0106231:	e8 7f ec ff ff       	call   c0104eb5 <pte2page>$/;"	l
c0106236	obj/kernel.asm	/^c0106236:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0106239	obj/kernel.asm	/^c0106239:	74 24                	je     c010625f <check_pgdir+0x191>$/;"	l
c010623b	obj/kernel.asm	/^c010623b:	c7 44 24 0c 01 66 11 	movl   $0xc0116601,0xc(%esp)$/;"	l
c0106242	obj/kernel.asm	/^c0106242:	c0 $/;"	l
c0106243	obj/kernel.asm	/^c0106243:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010624a	obj/kernel.asm	/^c010624a:	c0 $/;"	l
c010624b	obj/kernel.asm	/^c010624b:	c7 44 24 04 8d 02 00 	movl   $0x28d,0x4(%esp)$/;"	l
c0106252	obj/kernel.asm	/^c0106252:	00 $/;"	l
c0106253	obj/kernel.asm	/^c0106253:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010625a	obj/kernel.asm	/^c010625a:	e8 69 ac ff ff       	call   c0100ec8 <__panic>$/;"	l
c010625f	obj/kernel.asm	/^c010625f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106262	obj/kernel.asm	/^c0106262:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106265	obj/kernel.asm	/^c0106265:	e8 a1 ec ff ff       	call   c0104f0b <page_ref>$/;"	l
c010626a	obj/kernel.asm	/^c010626a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010626d	obj/kernel.asm	/^c010626d:	74 24                	je     c0106293 <check_pgdir+0x1c5>$/;"	l
c010626f	obj/kernel.asm	/^c010626f:	c7 44 24 0c 17 66 11 	movl   $0xc0116617,0xc(%esp)$/;"	l
c0106276	obj/kernel.asm	/^c0106276:	c0 $/;"	l
c0106277	obj/kernel.asm	/^c0106277:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010627e	obj/kernel.asm	/^c010627e:	c0 $/;"	l
c010627f	obj/kernel.asm	/^c010627f:	c7 44 24 04 8e 02 00 	movl   $0x28e,0x4(%esp)$/;"	l
c0106286	obj/kernel.asm	/^c0106286:	00 $/;"	l
c0106287	obj/kernel.asm	/^c0106287:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010628e	obj/kernel.asm	/^c010628e:	e8 35 ac ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106293	obj/kernel.asm	/^c0106293:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106298	obj/kernel.asm	/^c0106298:	8b 00                	mov    (%eax),%eax$/;"	l
c010629a	obj/kernel.asm	/^c010629a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010629f	obj/kernel.asm	/^c010629f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01062a2	obj/kernel.asm	/^c01062a2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01062a5	obj/kernel.asm	/^c01062a5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01062a8	obj/kernel.asm	/^c01062a8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01062ab	obj/kernel.asm	/^c01062ab:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c01062b0	obj/kernel.asm	/^c01062b0:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c01062b3	obj/kernel.asm	/^c01062b3:	72 23                	jb     c01062d8 <check_pgdir+0x20a>$/;"	l
c01062b5	obj/kernel.asm	/^c01062b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01062b8	obj/kernel.asm	/^c01062b8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01062bc	obj/kernel.asm	/^c01062bc:	c7 44 24 08 6c 63 11 	movl   $0xc011636c,0x8(%esp)$/;"	l
c01062c3	obj/kernel.asm	/^c01062c3:	c0 $/;"	l
c01062c4	obj/kernel.asm	/^c01062c4:	c7 44 24 04 90 02 00 	movl   $0x290,0x4(%esp)$/;"	l
c01062cb	obj/kernel.asm	/^c01062cb:	00 $/;"	l
c01062cc	obj/kernel.asm	/^c01062cc:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01062d3	obj/kernel.asm	/^c01062d3:	e8 f0 ab ff ff       	call   c0100ec8 <__panic>$/;"	l
c01062d8	obj/kernel.asm	/^c01062d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01062db	obj/kernel.asm	/^c01062db:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01062e0	obj/kernel.asm	/^c01062e0:	83 c0 04             	add    $0x4,%eax$/;"	l
c01062e3	obj/kernel.asm	/^c01062e3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01062e6	obj/kernel.asm	/^c01062e6:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c01062eb	obj/kernel.asm	/^c01062eb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01062f2	obj/kernel.asm	/^c01062f2:	00 $/;"	l
c01062f3	obj/kernel.asm	/^c01062f3:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01062fa	obj/kernel.asm	/^c01062fa:	00 $/;"	l
c01062fb	obj/kernel.asm	/^c01062fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01062fe	obj/kernel.asm	/^c01062fe:	e8 74 f5 ff ff       	call   c0105877 <get_pte>$/;"	l
c0106303	obj/kernel.asm	/^c0106303:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0106306	obj/kernel.asm	/^c0106306:	74 24                	je     c010632c <check_pgdir+0x25e>$/;"	l
c0106308	obj/kernel.asm	/^c0106308:	c7 44 24 0c 2c 66 11 	movl   $0xc011662c,0xc(%esp)$/;"	l
c010630f	obj/kernel.asm	/^c010630f:	c0 $/;"	l
c0106310	obj/kernel.asm	/^c0106310:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106317	obj/kernel.asm	/^c0106317:	c0 $/;"	l
c0106318	obj/kernel.asm	/^c0106318:	c7 44 24 04 91 02 00 	movl   $0x291,0x4(%esp)$/;"	l
c010631f	obj/kernel.asm	/^c010631f:	00 $/;"	l
c0106320	obj/kernel.asm	/^c0106320:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106327	obj/kernel.asm	/^c0106327:	e8 9c ab ff ff       	call   c0100ec8 <__panic>$/;"	l
c010632c	obj/kernel.asm	/^c010632c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0106333	obj/kernel.asm	/^c0106333:	e8 d8 ed ff ff       	call   c0105110 <alloc_pages>$/;"	l
c0106338	obj/kernel.asm	/^c0106338:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010633b	obj/kernel.asm	/^c010633b:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106340	obj/kernel.asm	/^c0106340:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
c0106347	obj/kernel.asm	/^c0106347:	00 $/;"	l
c0106348	obj/kernel.asm	/^c0106348:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c010634f	obj/kernel.asm	/^c010634f:	00 $/;"	l
c0106350	obj/kernel.asm	/^c0106350:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106353	obj/kernel.asm	/^c0106353:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106357	obj/kernel.asm	/^c0106357:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010635a	obj/kernel.asm	/^c010635a:	e8 67 fb ff ff       	call   c0105ec6 <page_insert>$/;"	l
c010635f	obj/kernel.asm	/^c010635f:	85 c0                	test   %eax,%eax$/;"	l
c0106361	obj/kernel.asm	/^c0106361:	74 24                	je     c0106387 <check_pgdir+0x2b9>$/;"	l
c0106363	obj/kernel.asm	/^c0106363:	c7 44 24 0c 54 66 11 	movl   $0xc0116654,0xc(%esp)$/;"	l
c010636a	obj/kernel.asm	/^c010636a:	c0 $/;"	l
c010636b	obj/kernel.asm	/^c010636b:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106372	obj/kernel.asm	/^c0106372:	c0 $/;"	l
c0106373	obj/kernel.asm	/^c0106373:	c7 44 24 04 94 02 00 	movl   $0x294,0x4(%esp)$/;"	l
c010637a	obj/kernel.asm	/^c010637a:	00 $/;"	l
c010637b	obj/kernel.asm	/^c010637b:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106382	obj/kernel.asm	/^c0106382:	e8 41 ab ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106387	obj/kernel.asm	/^c0106387:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010638c	obj/kernel.asm	/^c010638c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106393	obj/kernel.asm	/^c0106393:	00 $/;"	l
c0106394	obj/kernel.asm	/^c0106394:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010639b	obj/kernel.asm	/^c010639b:	00 $/;"	l
c010639c	obj/kernel.asm	/^c010639c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010639f	obj/kernel.asm	/^c010639f:	e8 d3 f4 ff ff       	call   c0105877 <get_pte>$/;"	l
c01063a4	obj/kernel.asm	/^c01063a4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01063a7	obj/kernel.asm	/^c01063a7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01063ab	obj/kernel.asm	/^c01063ab:	75 24                	jne    c01063d1 <check_pgdir+0x303>$/;"	l
c01063ad	obj/kernel.asm	/^c01063ad:	c7 44 24 0c 8c 66 11 	movl   $0xc011668c,0xc(%esp)$/;"	l
c01063b4	obj/kernel.asm	/^c01063b4:	c0 $/;"	l
c01063b5	obj/kernel.asm	/^c01063b5:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01063bc	obj/kernel.asm	/^c01063bc:	c0 $/;"	l
c01063bd	obj/kernel.asm	/^c01063bd:	c7 44 24 04 95 02 00 	movl   $0x295,0x4(%esp)$/;"	l
c01063c4	obj/kernel.asm	/^c01063c4:	00 $/;"	l
c01063c5	obj/kernel.asm	/^c01063c5:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01063cc	obj/kernel.asm	/^c01063cc:	e8 f7 aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c01063d1	obj/kernel.asm	/^c01063d1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01063d4	obj/kernel.asm	/^c01063d4:	8b 00                	mov    (%eax),%eax$/;"	l
c01063d6	obj/kernel.asm	/^c01063d6:	83 e0 04             	and    $0x4,%eax$/;"	l
c01063d9	obj/kernel.asm	/^c01063d9:	85 c0                	test   %eax,%eax$/;"	l
c01063db	obj/kernel.asm	/^c01063db:	75 24                	jne    c0106401 <check_pgdir+0x333>$/;"	l
c01063dd	obj/kernel.asm	/^c01063dd:	c7 44 24 0c bc 66 11 	movl   $0xc01166bc,0xc(%esp)$/;"	l
c01063e4	obj/kernel.asm	/^c01063e4:	c0 $/;"	l
c01063e5	obj/kernel.asm	/^c01063e5:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01063ec	obj/kernel.asm	/^c01063ec:	c0 $/;"	l
c01063ed	obj/kernel.asm	/^c01063ed:	c7 44 24 04 96 02 00 	movl   $0x296,0x4(%esp)$/;"	l
c01063f4	obj/kernel.asm	/^c01063f4:	00 $/;"	l
c01063f5	obj/kernel.asm	/^c01063f5:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01063fc	obj/kernel.asm	/^c01063fc:	e8 c7 aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106401	obj/kernel.asm	/^c0106401:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106404	obj/kernel.asm	/^c0106404:	8b 00                	mov    (%eax),%eax$/;"	l
c0106406	obj/kernel.asm	/^c0106406:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106409	obj/kernel.asm	/^c0106409:	85 c0                	test   %eax,%eax$/;"	l
c010640b	obj/kernel.asm	/^c010640b:	75 24                	jne    c0106431 <check_pgdir+0x363>$/;"	l
c010640d	obj/kernel.asm	/^c010640d:	c7 44 24 0c ca 66 11 	movl   $0xc01166ca,0xc(%esp)$/;"	l
c0106414	obj/kernel.asm	/^c0106414:	c0 $/;"	l
c0106415	obj/kernel.asm	/^c0106415:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010641c	obj/kernel.asm	/^c010641c:	c0 $/;"	l
c010641d	obj/kernel.asm	/^c010641d:	c7 44 24 04 97 02 00 	movl   $0x297,0x4(%esp)$/;"	l
c0106424	obj/kernel.asm	/^c0106424:	00 $/;"	l
c0106425	obj/kernel.asm	/^c0106425:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010642c	obj/kernel.asm	/^c010642c:	e8 97 aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106431	obj/kernel.asm	/^c0106431:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106436	obj/kernel.asm	/^c0106436:	8b 00                	mov    (%eax),%eax$/;"	l
c0106438	obj/kernel.asm	/^c0106438:	83 e0 04             	and    $0x4,%eax$/;"	l
c010643b	obj/kernel.asm	/^c010643b:	85 c0                	test   %eax,%eax$/;"	l
c010643d	obj/kernel.asm	/^c010643d:	75 24                	jne    c0106463 <check_pgdir+0x395>$/;"	l
c010643f	obj/kernel.asm	/^c010643f:	c7 44 24 0c d8 66 11 	movl   $0xc01166d8,0xc(%esp)$/;"	l
c0106446	obj/kernel.asm	/^c0106446:	c0 $/;"	l
c0106447	obj/kernel.asm	/^c0106447:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010644e	obj/kernel.asm	/^c010644e:	c0 $/;"	l
c010644f	obj/kernel.asm	/^c010644f:	c7 44 24 04 98 02 00 	movl   $0x298,0x4(%esp)$/;"	l
c0106456	obj/kernel.asm	/^c0106456:	00 $/;"	l
c0106457	obj/kernel.asm	/^c0106457:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010645e	obj/kernel.asm	/^c010645e:	e8 65 aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106463	obj/kernel.asm	/^c0106463:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106466	obj/kernel.asm	/^c0106466:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106469	obj/kernel.asm	/^c0106469:	e8 9d ea ff ff       	call   c0104f0b <page_ref>$/;"	l
c010646e	obj/kernel.asm	/^c010646e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106471	obj/kernel.asm	/^c0106471:	74 24                	je     c0106497 <check_pgdir+0x3c9>$/;"	l
c0106473	obj/kernel.asm	/^c0106473:	c7 44 24 0c ee 66 11 	movl   $0xc01166ee,0xc(%esp)$/;"	l
c010647a	obj/kernel.asm	/^c010647a:	c0 $/;"	l
c010647b	obj/kernel.asm	/^c010647b:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106482	obj/kernel.asm	/^c0106482:	c0 $/;"	l
c0106483	obj/kernel.asm	/^c0106483:	c7 44 24 04 99 02 00 	movl   $0x299,0x4(%esp)$/;"	l
c010648a	obj/kernel.asm	/^c010648a:	00 $/;"	l
c010648b	obj/kernel.asm	/^c010648b:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106492	obj/kernel.asm	/^c0106492:	e8 31 aa ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106497	obj/kernel.asm	/^c0106497:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010649c	obj/kernel.asm	/^c010649c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01064a3	obj/kernel.asm	/^c01064a3:	00 $/;"	l
c01064a4	obj/kernel.asm	/^c01064a4:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01064ab	obj/kernel.asm	/^c01064ab:	00 $/;"	l
c01064ac	obj/kernel.asm	/^c01064ac:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01064af	obj/kernel.asm	/^c01064af:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01064b3	obj/kernel.asm	/^c01064b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01064b6	obj/kernel.asm	/^c01064b6:	e8 0b fa ff ff       	call   c0105ec6 <page_insert>$/;"	l
c01064bb	obj/kernel.asm	/^c01064bb:	85 c0                	test   %eax,%eax$/;"	l
c01064bd	obj/kernel.asm	/^c01064bd:	74 24                	je     c01064e3 <check_pgdir+0x415>$/;"	l
c01064bf	obj/kernel.asm	/^c01064bf:	c7 44 24 0c 00 67 11 	movl   $0xc0116700,0xc(%esp)$/;"	l
c01064c6	obj/kernel.asm	/^c01064c6:	c0 $/;"	l
c01064c7	obj/kernel.asm	/^c01064c7:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01064ce	obj/kernel.asm	/^c01064ce:	c0 $/;"	l
c01064cf	obj/kernel.asm	/^c01064cf:	c7 44 24 04 9b 02 00 	movl   $0x29b,0x4(%esp)$/;"	l
c01064d6	obj/kernel.asm	/^c01064d6:	00 $/;"	l
c01064d7	obj/kernel.asm	/^c01064d7:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01064de	obj/kernel.asm	/^c01064de:	e8 e5 a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01064e3	obj/kernel.asm	/^c01064e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01064e6	obj/kernel.asm	/^c01064e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01064e9	obj/kernel.asm	/^c01064e9:	e8 1d ea ff ff       	call   c0104f0b <page_ref>$/;"	l
c01064ee	obj/kernel.asm	/^c01064ee:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01064f1	obj/kernel.asm	/^c01064f1:	74 24                	je     c0106517 <check_pgdir+0x449>$/;"	l
c01064f3	obj/kernel.asm	/^c01064f3:	c7 44 24 0c 2c 67 11 	movl   $0xc011672c,0xc(%esp)$/;"	l
c01064fa	obj/kernel.asm	/^c01064fa:	c0 $/;"	l
c01064fb	obj/kernel.asm	/^c01064fb:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106502	obj/kernel.asm	/^c0106502:	c0 $/;"	l
c0106503	obj/kernel.asm	/^c0106503:	c7 44 24 04 9c 02 00 	movl   $0x29c,0x4(%esp)$/;"	l
c010650a	obj/kernel.asm	/^c010650a:	00 $/;"	l
c010650b	obj/kernel.asm	/^c010650b:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106512	obj/kernel.asm	/^c0106512:	e8 b1 a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106517	obj/kernel.asm	/^c0106517:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010651a	obj/kernel.asm	/^c010651a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010651d	obj/kernel.asm	/^c010651d:	e8 e9 e9 ff ff       	call   c0104f0b <page_ref>$/;"	l
c0106522	obj/kernel.asm	/^c0106522:	85 c0                	test   %eax,%eax$/;"	l
c0106524	obj/kernel.asm	/^c0106524:	74 24                	je     c010654a <check_pgdir+0x47c>$/;"	l
c0106526	obj/kernel.asm	/^c0106526:	c7 44 24 0c 3e 67 11 	movl   $0xc011673e,0xc(%esp)$/;"	l
c010652d	obj/kernel.asm	/^c010652d:	c0 $/;"	l
c010652e	obj/kernel.asm	/^c010652e:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106535	obj/kernel.asm	/^c0106535:	c0 $/;"	l
c0106536	obj/kernel.asm	/^c0106536:	c7 44 24 04 9d 02 00 	movl   $0x29d,0x4(%esp)$/;"	l
c010653d	obj/kernel.asm	/^c010653d:	00 $/;"	l
c010653e	obj/kernel.asm	/^c010653e:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106545	obj/kernel.asm	/^c0106545:	e8 7e a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010654a	obj/kernel.asm	/^c010654a:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010654f	obj/kernel.asm	/^c010654f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106556	obj/kernel.asm	/^c0106556:	00 $/;"	l
c0106557	obj/kernel.asm	/^c0106557:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010655e	obj/kernel.asm	/^c010655e:	00 $/;"	l
c010655f	obj/kernel.asm	/^c010655f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106562	obj/kernel.asm	/^c0106562:	e8 10 f3 ff ff       	call   c0105877 <get_pte>$/;"	l
c0106567	obj/kernel.asm	/^c0106567:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010656a	obj/kernel.asm	/^c010656a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010656e	obj/kernel.asm	/^c010656e:	75 24                	jne    c0106594 <check_pgdir+0x4c6>$/;"	l
c0106570	obj/kernel.asm	/^c0106570:	c7 44 24 0c 8c 66 11 	movl   $0xc011668c,0xc(%esp)$/;"	l
c0106577	obj/kernel.asm	/^c0106577:	c0 $/;"	l
c0106578	obj/kernel.asm	/^c0106578:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010657f	obj/kernel.asm	/^c010657f:	c0 $/;"	l
c0106580	obj/kernel.asm	/^c0106580:	c7 44 24 04 9e 02 00 	movl   $0x29e,0x4(%esp)$/;"	l
c0106587	obj/kernel.asm	/^c0106587:	00 $/;"	l
c0106588	obj/kernel.asm	/^c0106588:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010658f	obj/kernel.asm	/^c010658f:	e8 34 a9 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106594	obj/kernel.asm	/^c0106594:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106597	obj/kernel.asm	/^c0106597:	8b 00                	mov    (%eax),%eax$/;"	l
c0106599	obj/kernel.asm	/^c0106599:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010659c	obj/kernel.asm	/^c010659c:	e8 14 e9 ff ff       	call   c0104eb5 <pte2page>$/;"	l
c01065a1	obj/kernel.asm	/^c01065a1:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01065a4	obj/kernel.asm	/^c01065a4:	74 24                	je     c01065ca <check_pgdir+0x4fc>$/;"	l
c01065a6	obj/kernel.asm	/^c01065a6:	c7 44 24 0c 01 66 11 	movl   $0xc0116601,0xc(%esp)$/;"	l
c01065ad	obj/kernel.asm	/^c01065ad:	c0 $/;"	l
c01065ae	obj/kernel.asm	/^c01065ae:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01065b5	obj/kernel.asm	/^c01065b5:	c0 $/;"	l
c01065b6	obj/kernel.asm	/^c01065b6:	c7 44 24 04 9f 02 00 	movl   $0x29f,0x4(%esp)$/;"	l
c01065bd	obj/kernel.asm	/^c01065bd:	00 $/;"	l
c01065be	obj/kernel.asm	/^c01065be:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01065c5	obj/kernel.asm	/^c01065c5:	e8 fe a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01065ca	obj/kernel.asm	/^c01065ca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01065cd	obj/kernel.asm	/^c01065cd:	8b 00                	mov    (%eax),%eax$/;"	l
c01065cf	obj/kernel.asm	/^c01065cf:	83 e0 04             	and    $0x4,%eax$/;"	l
c01065d2	obj/kernel.asm	/^c01065d2:	85 c0                	test   %eax,%eax$/;"	l
c01065d4	obj/kernel.asm	/^c01065d4:	74 24                	je     c01065fa <check_pgdir+0x52c>$/;"	l
c01065d6	obj/kernel.asm	/^c01065d6:	c7 44 24 0c 50 67 11 	movl   $0xc0116750,0xc(%esp)$/;"	l
c01065dd	obj/kernel.asm	/^c01065dd:	c0 $/;"	l
c01065de	obj/kernel.asm	/^c01065de:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01065e5	obj/kernel.asm	/^c01065e5:	c0 $/;"	l
c01065e6	obj/kernel.asm	/^c01065e6:	c7 44 24 04 a0 02 00 	movl   $0x2a0,0x4(%esp)$/;"	l
c01065ed	obj/kernel.asm	/^c01065ed:	00 $/;"	l
c01065ee	obj/kernel.asm	/^c01065ee:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01065f5	obj/kernel.asm	/^c01065f5:	e8 ce a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01065fa	obj/kernel.asm	/^c01065fa:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c01065ff	obj/kernel.asm	/^c01065ff:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0106606	obj/kernel.asm	/^c0106606:	00 $/;"	l
c0106607	obj/kernel.asm	/^c0106607:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010660a	obj/kernel.asm	/^c010660a:	e8 73 f8 ff ff       	call   c0105e82 <page_remove>$/;"	l
c010660f	obj/kernel.asm	/^c010660f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106612	obj/kernel.asm	/^c0106612:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106615	obj/kernel.asm	/^c0106615:	e8 f1 e8 ff ff       	call   c0104f0b <page_ref>$/;"	l
c010661a	obj/kernel.asm	/^c010661a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010661d	obj/kernel.asm	/^c010661d:	74 24                	je     c0106643 <check_pgdir+0x575>$/;"	l
c010661f	obj/kernel.asm	/^c010661f:	c7 44 24 0c 17 66 11 	movl   $0xc0116617,0xc(%esp)$/;"	l
c0106626	obj/kernel.asm	/^c0106626:	c0 $/;"	l
c0106627	obj/kernel.asm	/^c0106627:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010662e	obj/kernel.asm	/^c010662e:	c0 $/;"	l
c010662f	obj/kernel.asm	/^c010662f:	c7 44 24 04 a3 02 00 	movl   $0x2a3,0x4(%esp)$/;"	l
c0106636	obj/kernel.asm	/^c0106636:	00 $/;"	l
c0106637	obj/kernel.asm	/^c0106637:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010663e	obj/kernel.asm	/^c010663e:	e8 85 a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106643	obj/kernel.asm	/^c0106643:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106646	obj/kernel.asm	/^c0106646:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106649	obj/kernel.asm	/^c0106649:	e8 bd e8 ff ff       	call   c0104f0b <page_ref>$/;"	l
c010664e	obj/kernel.asm	/^c010664e:	85 c0                	test   %eax,%eax$/;"	l
c0106650	obj/kernel.asm	/^c0106650:	74 24                	je     c0106676 <check_pgdir+0x5a8>$/;"	l
c0106652	obj/kernel.asm	/^c0106652:	c7 44 24 0c 3e 67 11 	movl   $0xc011673e,0xc(%esp)$/;"	l
c0106659	obj/kernel.asm	/^c0106659:	c0 $/;"	l
c010665a	obj/kernel.asm	/^c010665a:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106661	obj/kernel.asm	/^c0106661:	c0 $/;"	l
c0106662	obj/kernel.asm	/^c0106662:	c7 44 24 04 a4 02 00 	movl   $0x2a4,0x4(%esp)$/;"	l
c0106669	obj/kernel.asm	/^c0106669:	00 $/;"	l
c010666a	obj/kernel.asm	/^c010666a:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106671	obj/kernel.asm	/^c0106671:	e8 52 a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106676	obj/kernel.asm	/^c0106676:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010667b	obj/kernel.asm	/^c010667b:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0106682	obj/kernel.asm	/^c0106682:	00 $/;"	l
c0106683	obj/kernel.asm	/^c0106683:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106686	obj/kernel.asm	/^c0106686:	e8 f7 f7 ff ff       	call   c0105e82 <page_remove>$/;"	l
c010668b	obj/kernel.asm	/^c010668b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010668e	obj/kernel.asm	/^c010668e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106691	obj/kernel.asm	/^c0106691:	e8 75 e8 ff ff       	call   c0104f0b <page_ref>$/;"	l
c0106696	obj/kernel.asm	/^c0106696:	85 c0                	test   %eax,%eax$/;"	l
c0106698	obj/kernel.asm	/^c0106698:	74 24                	je     c01066be <check_pgdir+0x5f0>$/;"	l
c010669a	obj/kernel.asm	/^c010669a:	c7 44 24 0c 65 67 11 	movl   $0xc0116765,0xc(%esp)$/;"	l
c01066a1	obj/kernel.asm	/^c01066a1:	c0 $/;"	l
c01066a2	obj/kernel.asm	/^c01066a2:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01066a9	obj/kernel.asm	/^c01066a9:	c0 $/;"	l
c01066aa	obj/kernel.asm	/^c01066aa:	c7 44 24 04 a7 02 00 	movl   $0x2a7,0x4(%esp)$/;"	l
c01066b1	obj/kernel.asm	/^c01066b1:	00 $/;"	l
c01066b2	obj/kernel.asm	/^c01066b2:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01066b9	obj/kernel.asm	/^c01066b9:	e8 0a a8 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01066be	obj/kernel.asm	/^c01066be:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01066c1	obj/kernel.asm	/^c01066c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01066c4	obj/kernel.asm	/^c01066c4:	e8 42 e8 ff ff       	call   c0104f0b <page_ref>$/;"	l
c01066c9	obj/kernel.asm	/^c01066c9:	85 c0                	test   %eax,%eax$/;"	l
c01066cb	obj/kernel.asm	/^c01066cb:	74 24                	je     c01066f1 <check_pgdir+0x623>$/;"	l
c01066cd	obj/kernel.asm	/^c01066cd:	c7 44 24 0c 3e 67 11 	movl   $0xc011673e,0xc(%esp)$/;"	l
c01066d4	obj/kernel.asm	/^c01066d4:	c0 $/;"	l
c01066d5	obj/kernel.asm	/^c01066d5:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01066dc	obj/kernel.asm	/^c01066dc:	c0 $/;"	l
c01066dd	obj/kernel.asm	/^c01066dd:	c7 44 24 04 a8 02 00 	movl   $0x2a8,0x4(%esp)$/;"	l
c01066e4	obj/kernel.asm	/^c01066e4:	00 $/;"	l
c01066e5	obj/kernel.asm	/^c01066e5:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01066ec	obj/kernel.asm	/^c01066ec:	e8 d7 a7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01066f1	obj/kernel.asm	/^c01066f1:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c01066f6	obj/kernel.asm	/^c01066f6:	8b 00                	mov    (%eax),%eax$/;"	l
c01066f8	obj/kernel.asm	/^c01066f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01066fb	obj/kernel.asm	/^c01066fb:	e8 f3 e7 ff ff       	call   c0104ef3 <pde2page>$/;"	l
c0106700	obj/kernel.asm	/^c0106700:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106703	obj/kernel.asm	/^c0106703:	e8 03 e8 ff ff       	call   c0104f0b <page_ref>$/;"	l
c0106708	obj/kernel.asm	/^c0106708:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010670b	obj/kernel.asm	/^c010670b:	74 24                	je     c0106731 <check_pgdir+0x663>$/;"	l
c010670d	obj/kernel.asm	/^c010670d:	c7 44 24 0c 78 67 11 	movl   $0xc0116778,0xc(%esp)$/;"	l
c0106714	obj/kernel.asm	/^c0106714:	c0 $/;"	l
c0106715	obj/kernel.asm	/^c0106715:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c010671c	obj/kernel.asm	/^c010671c:	c0 $/;"	l
c010671d	obj/kernel.asm	/^c010671d:	c7 44 24 04 aa 02 00 	movl   $0x2aa,0x4(%esp)$/;"	l
c0106724	obj/kernel.asm	/^c0106724:	00 $/;"	l
c0106725	obj/kernel.asm	/^c0106725:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c010672c	obj/kernel.asm	/^c010672c:	e8 97 a7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106731	obj/kernel.asm	/^c0106731:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106736	obj/kernel.asm	/^c0106736:	8b 00                	mov    (%eax),%eax$/;"	l
c0106738	obj/kernel.asm	/^c0106738:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010673b	obj/kernel.asm	/^c010673b:	e8 b3 e7 ff ff       	call   c0104ef3 <pde2page>$/;"	l
c0106740	obj/kernel.asm	/^c0106740:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106747	obj/kernel.asm	/^c0106747:	00 $/;"	l
c0106748	obj/kernel.asm	/^c0106748:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010674b	obj/kernel.asm	/^c010674b:	e8 2b ea ff ff       	call   c010517b <free_pages>$/;"	l
c0106750	obj/kernel.asm	/^c0106750:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106755	obj/kernel.asm	/^c0106755:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010675b	obj/kernel.asm	/^c010675b:	c7 04 24 9f 67 11 c0 	movl   $0xc011679f,(%esp)$/;"	l
c0106762	obj/kernel.asm	/^c0106762:	e8 fe 9b ff ff       	call   c0100365 <cprintf>$/;"	l
c0106767	obj/kernel.asm	/^c0106767:	c9                   	leave  $/;"	l
c0106768	obj/kernel.asm	/^c0106768:	c3                   	ret    $/;"	l
c0106769	obj/kernel.asm	/^c0106769 <check_boot_pgdir>:$/;"	l
c0106769	obj/kernel.asm	/^c0106769:	55                   	push   %ebp$/;"	l
c010676a	obj/kernel.asm	/^c010676a:	89 e5                	mov    %esp,%ebp$/;"	l
c010676c	obj/kernel.asm	/^c010676c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010676f	obj/kernel.asm	/^c010676f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106776	obj/kernel.asm	/^c0106776:	e9 ca 00 00 00       	jmp    c0106845 <check_boot_pgdir+0xdc>$/;"	l
c010677b	obj/kernel.asm	/^c010677b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010677e	obj/kernel.asm	/^c010677e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106781	obj/kernel.asm	/^c0106781:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106784	obj/kernel.asm	/^c0106784:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106787	obj/kernel.asm	/^c0106787:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010678a	obj/kernel.asm	/^c010678a:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c010678f	obj/kernel.asm	/^c010678f:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0106792	obj/kernel.asm	/^c0106792:	72 23                	jb     c01067b7 <check_boot_pgdir+0x4e>$/;"	l
c0106794	obj/kernel.asm	/^c0106794:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106797	obj/kernel.asm	/^c0106797:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010679b	obj/kernel.asm	/^c010679b:	c7 44 24 08 6c 63 11 	movl   $0xc011636c,0x8(%esp)$/;"	l
c01067a2	obj/kernel.asm	/^c01067a2:	c0 $/;"	l
c01067a3	obj/kernel.asm	/^c01067a3:	c7 44 24 04 b6 02 00 	movl   $0x2b6,0x4(%esp)$/;"	l
c01067aa	obj/kernel.asm	/^c01067aa:	00 $/;"	l
c01067ab	obj/kernel.asm	/^c01067ab:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01067b2	obj/kernel.asm	/^c01067b2:	e8 11 a7 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01067b7	obj/kernel.asm	/^c01067b7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01067ba	obj/kernel.asm	/^c01067ba:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01067bf	obj/kernel.asm	/^c01067bf:	89 c2                	mov    %eax,%edx$/;"	l
c01067c1	obj/kernel.asm	/^c01067c1:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c01067c6	obj/kernel.asm	/^c01067c6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01067cd	obj/kernel.asm	/^c01067cd:	00 $/;"	l
c01067ce	obj/kernel.asm	/^c01067ce:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01067d2	obj/kernel.asm	/^c01067d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01067d5	obj/kernel.asm	/^c01067d5:	e8 9d f0 ff ff       	call   c0105877 <get_pte>$/;"	l
c01067da	obj/kernel.asm	/^c01067da:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01067dd	obj/kernel.asm	/^c01067dd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01067e1	obj/kernel.asm	/^c01067e1:	75 24                	jne    c0106807 <check_boot_pgdir+0x9e>$/;"	l
c01067e3	obj/kernel.asm	/^c01067e3:	c7 44 24 0c bc 67 11 	movl   $0xc01167bc,0xc(%esp)$/;"	l
c01067ea	obj/kernel.asm	/^c01067ea:	c0 $/;"	l
c01067eb	obj/kernel.asm	/^c01067eb:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01067f2	obj/kernel.asm	/^c01067f2:	c0 $/;"	l
c01067f3	obj/kernel.asm	/^c01067f3:	c7 44 24 04 b6 02 00 	movl   $0x2b6,0x4(%esp)$/;"	l
c01067fa	obj/kernel.asm	/^c01067fa:	00 $/;"	l
c01067fb	obj/kernel.asm	/^c01067fb:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106802	obj/kernel.asm	/^c0106802:	e8 c1 a6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106807	obj/kernel.asm	/^c0106807:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010680a	obj/kernel.asm	/^c010680a:	8b 00                	mov    (%eax),%eax$/;"	l
c010680c	obj/kernel.asm	/^c010680c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106811	obj/kernel.asm	/^c0106811:	89 c2                	mov    %eax,%edx$/;"	l
c0106813	obj/kernel.asm	/^c0106813:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106816	obj/kernel.asm	/^c0106816:	39 c2                	cmp    %eax,%edx$/;"	l
c0106818	obj/kernel.asm	/^c0106818:	74 24                	je     c010683e <check_boot_pgdir+0xd5>$/;"	l
c010681a	obj/kernel.asm	/^c010681a:	c7 44 24 0c f9 67 11 	movl   $0xc01167f9,0xc(%esp)$/;"	l
c0106821	obj/kernel.asm	/^c0106821:	c0 $/;"	l
c0106822	obj/kernel.asm	/^c0106822:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106829	obj/kernel.asm	/^c0106829:	c0 $/;"	l
c010682a	obj/kernel.asm	/^c010682a:	c7 44 24 04 b7 02 00 	movl   $0x2b7,0x4(%esp)$/;"	l
c0106831	obj/kernel.asm	/^c0106831:	00 $/;"	l
c0106832	obj/kernel.asm	/^c0106832:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106839	obj/kernel.asm	/^c0106839:	e8 8a a6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010683e	obj/kernel.asm	/^c010683e:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0106845	obj/kernel.asm	/^c0106845:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106848	obj/kernel.asm	/^c0106848:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c010684d	obj/kernel.asm	/^c010684d:	39 c2                	cmp    %eax,%edx$/;"	l
c010684f	obj/kernel.asm	/^c010684f:	0f 82 26 ff ff ff    	jb     c010677b <check_boot_pgdir+0x12>$/;"	l
c0106855	obj/kernel.asm	/^c0106855:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010685a	obj/kernel.asm	/^c010685a:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c010685f	obj/kernel.asm	/^c010685f:	8b 00                	mov    (%eax),%eax$/;"	l
c0106861	obj/kernel.asm	/^c0106861:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106866	obj/kernel.asm	/^c0106866:	89 c2                	mov    %eax,%edx$/;"	l
c0106868	obj/kernel.asm	/^c0106868:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010686d	obj/kernel.asm	/^c010686d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106870	obj/kernel.asm	/^c0106870:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c0106877	obj/kernel.asm	/^c0106877:	77 23                	ja     c010689c <check_boot_pgdir+0x133>$/;"	l
c0106879	obj/kernel.asm	/^c0106879:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010687c	obj/kernel.asm	/^c010687c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106880	obj/kernel.asm	/^c0106880:	c7 44 24 08 10 64 11 	movl   $0xc0116410,0x8(%esp)$/;"	l
c0106887	obj/kernel.asm	/^c0106887:	c0 $/;"	l
c0106888	obj/kernel.asm	/^c0106888:	c7 44 24 04 ba 02 00 	movl   $0x2ba,0x4(%esp)$/;"	l
c010688f	obj/kernel.asm	/^c010688f:	00 $/;"	l
c0106890	obj/kernel.asm	/^c0106890:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106897	obj/kernel.asm	/^c0106897:	e8 2c a6 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010689c	obj/kernel.asm	/^c010689c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010689f	obj/kernel.asm	/^c010689f:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01068a4	obj/kernel.asm	/^c01068a4:	39 c2                	cmp    %eax,%edx$/;"	l
c01068a6	obj/kernel.asm	/^c01068a6:	74 24                	je     c01068cc <check_boot_pgdir+0x163>$/;"	l
c01068a8	obj/kernel.asm	/^c01068a8:	c7 44 24 0c 10 68 11 	movl   $0xc0116810,0xc(%esp)$/;"	l
c01068af	obj/kernel.asm	/^c01068af:	c0 $/;"	l
c01068b0	obj/kernel.asm	/^c01068b0:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01068b7	obj/kernel.asm	/^c01068b7:	c0 $/;"	l
c01068b8	obj/kernel.asm	/^c01068b8:	c7 44 24 04 ba 02 00 	movl   $0x2ba,0x4(%esp)$/;"	l
c01068bf	obj/kernel.asm	/^c01068bf:	00 $/;"	l
c01068c0	obj/kernel.asm	/^c01068c0:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01068c7	obj/kernel.asm	/^c01068c7:	e8 fc a5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01068cc	obj/kernel.asm	/^c01068cc:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c01068d1	obj/kernel.asm	/^c01068d1:	8b 00                	mov    (%eax),%eax$/;"	l
c01068d3	obj/kernel.asm	/^c01068d3:	85 c0                	test   %eax,%eax$/;"	l
c01068d5	obj/kernel.asm	/^c01068d5:	74 24                	je     c01068fb <check_boot_pgdir+0x192>$/;"	l
c01068d7	obj/kernel.asm	/^c01068d7:	c7 44 24 0c 44 68 11 	movl   $0xc0116844,0xc(%esp)$/;"	l
c01068de	obj/kernel.asm	/^c01068de:	c0 $/;"	l
c01068df	obj/kernel.asm	/^c01068df:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01068e6	obj/kernel.asm	/^c01068e6:	c0 $/;"	l
c01068e7	obj/kernel.asm	/^c01068e7:	c7 44 24 04 bc 02 00 	movl   $0x2bc,0x4(%esp)$/;"	l
c01068ee	obj/kernel.asm	/^c01068ee:	00 $/;"	l
c01068ef	obj/kernel.asm	/^c01068ef:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01068f6	obj/kernel.asm	/^c01068f6:	e8 cd a5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01068fb	obj/kernel.asm	/^c01068fb:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0106902	obj/kernel.asm	/^c0106902:	e8 09 e8 ff ff       	call   c0105110 <alloc_pages>$/;"	l
c0106907	obj/kernel.asm	/^c0106907:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010690a	obj/kernel.asm	/^c010690a:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010690f	obj/kernel.asm	/^c010690f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c0106916	obj/kernel.asm	/^c0106916:	00 $/;"	l
c0106917	obj/kernel.asm	/^c0106917:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c010691e	obj/kernel.asm	/^c010691e:	00 $/;"	l
c010691f	obj/kernel.asm	/^c010691f:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106922	obj/kernel.asm	/^c0106922:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106926	obj/kernel.asm	/^c0106926:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106929	obj/kernel.asm	/^c0106929:	e8 98 f5 ff ff       	call   c0105ec6 <page_insert>$/;"	l
c010692e	obj/kernel.asm	/^c010692e:	85 c0                	test   %eax,%eax$/;"	l
c0106930	obj/kernel.asm	/^c0106930:	74 24                	je     c0106956 <check_boot_pgdir+0x1ed>$/;"	l
c0106932	obj/kernel.asm	/^c0106932:	c7 44 24 0c 58 68 11 	movl   $0xc0116858,0xc(%esp)$/;"	l
c0106939	obj/kernel.asm	/^c0106939:	c0 $/;"	l
c010693a	obj/kernel.asm	/^c010693a:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106941	obj/kernel.asm	/^c0106941:	c0 $/;"	l
c0106942	obj/kernel.asm	/^c0106942:	c7 44 24 04 c0 02 00 	movl   $0x2c0,0x4(%esp)$/;"	l
c0106949	obj/kernel.asm	/^c0106949:	00 $/;"	l
c010694a	obj/kernel.asm	/^c010694a:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106951	obj/kernel.asm	/^c0106951:	e8 72 a5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106956	obj/kernel.asm	/^c0106956:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106959	obj/kernel.asm	/^c0106959:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010695c	obj/kernel.asm	/^c010695c:	e8 aa e5 ff ff       	call   c0104f0b <page_ref>$/;"	l
c0106961	obj/kernel.asm	/^c0106961:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106964	obj/kernel.asm	/^c0106964:	74 24                	je     c010698a <check_boot_pgdir+0x221>$/;"	l
c0106966	obj/kernel.asm	/^c0106966:	c7 44 24 0c 86 68 11 	movl   $0xc0116886,0xc(%esp)$/;"	l
c010696d	obj/kernel.asm	/^c010696d:	c0 $/;"	l
c010696e	obj/kernel.asm	/^c010696e:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106975	obj/kernel.asm	/^c0106975:	c0 $/;"	l
c0106976	obj/kernel.asm	/^c0106976:	c7 44 24 04 c1 02 00 	movl   $0x2c1,0x4(%esp)$/;"	l
c010697d	obj/kernel.asm	/^c010697d:	00 $/;"	l
c010697e	obj/kernel.asm	/^c010697e:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106985	obj/kernel.asm	/^c0106985:	e8 3e a5 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010698a	obj/kernel.asm	/^c010698a:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010698f	obj/kernel.asm	/^c010698f:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c0106996	obj/kernel.asm	/^c0106996:	00 $/;"	l
c0106997	obj/kernel.asm	/^c0106997:	c7 44 24 08 00 11 00 	movl   $0x1100,0x8(%esp)$/;"	l
c010699e	obj/kernel.asm	/^c010699e:	00 $/;"	l
c010699f	obj/kernel.asm	/^c010699f:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01069a2	obj/kernel.asm	/^c01069a2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01069a6	obj/kernel.asm	/^c01069a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01069a9	obj/kernel.asm	/^c01069a9:	e8 18 f5 ff ff       	call   c0105ec6 <page_insert>$/;"	l
c01069ae	obj/kernel.asm	/^c01069ae:	85 c0                	test   %eax,%eax$/;"	l
c01069b0	obj/kernel.asm	/^c01069b0:	74 24                	je     c01069d6 <check_boot_pgdir+0x26d>$/;"	l
c01069b2	obj/kernel.asm	/^c01069b2:	c7 44 24 0c 98 68 11 	movl   $0xc0116898,0xc(%esp)$/;"	l
c01069b9	obj/kernel.asm	/^c01069b9:	c0 $/;"	l
c01069ba	obj/kernel.asm	/^c01069ba:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01069c1	obj/kernel.asm	/^c01069c1:	c0 $/;"	l
c01069c2	obj/kernel.asm	/^c01069c2:	c7 44 24 04 c2 02 00 	movl   $0x2c2,0x4(%esp)$/;"	l
c01069c9	obj/kernel.asm	/^c01069c9:	00 $/;"	l
c01069ca	obj/kernel.asm	/^c01069ca:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c01069d1	obj/kernel.asm	/^c01069d1:	e8 f2 a4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01069d6	obj/kernel.asm	/^c01069d6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069d9	obj/kernel.asm	/^c01069d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01069dc	obj/kernel.asm	/^c01069dc:	e8 2a e5 ff ff       	call   c0104f0b <page_ref>$/;"	l
c01069e1	obj/kernel.asm	/^c01069e1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01069e4	obj/kernel.asm	/^c01069e4:	74 24                	je     c0106a0a <check_boot_pgdir+0x2a1>$/;"	l
c01069e6	obj/kernel.asm	/^c01069e6:	c7 44 24 0c cf 68 11 	movl   $0xc01168cf,0xc(%esp)$/;"	l
c01069ed	obj/kernel.asm	/^c01069ed:	c0 $/;"	l
c01069ee	obj/kernel.asm	/^c01069ee:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c01069f5	obj/kernel.asm	/^c01069f5:	c0 $/;"	l
c01069f6	obj/kernel.asm	/^c01069f6:	c7 44 24 04 c3 02 00 	movl   $0x2c3,0x4(%esp)$/;"	l
c01069fd	obj/kernel.asm	/^c01069fd:	00 $/;"	l
c01069fe	obj/kernel.asm	/^c01069fe:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106a05	obj/kernel.asm	/^c0106a05:	e8 be a4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106a0a	obj/kernel.asm	/^c0106a0a:	c7 45 dc e0 68 11 c0 	movl   $0xc01168e0,-0x24(%ebp)$/;"	l
c0106a11	obj/kernel.asm	/^c0106a11:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106a14	obj/kernel.asm	/^c0106a14:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106a18	obj/kernel.asm	/^c0106a18:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106a1f	obj/kernel.asm	/^c0106a1f:	e8 1e e7 00 00       	call   c0115142 <strcpy>$/;"	l
c0106a24	obj/kernel.asm	/^c0106a24:	c7 44 24 04 00 11 00 	movl   $0x1100,0x4(%esp)$/;"	l
c0106a2b	obj/kernel.asm	/^c0106a2b:	00 $/;"	l
c0106a2c	obj/kernel.asm	/^c0106a2c:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106a33	obj/kernel.asm	/^c0106a33:	e8 83 e7 00 00       	call   c01151bb <strcmp>$/;"	l
c0106a38	obj/kernel.asm	/^c0106a38:	85 c0                	test   %eax,%eax$/;"	l
c0106a3a	obj/kernel.asm	/^c0106a3a:	74 24                	je     c0106a60 <check_boot_pgdir+0x2f7>$/;"	l
c0106a3c	obj/kernel.asm	/^c0106a3c:	c7 44 24 0c f8 68 11 	movl   $0xc01168f8,0xc(%esp)$/;"	l
c0106a43	obj/kernel.asm	/^c0106a43:	c0 $/;"	l
c0106a44	obj/kernel.asm	/^c0106a44:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106a4b	obj/kernel.asm	/^c0106a4b:	c0 $/;"	l
c0106a4c	obj/kernel.asm	/^c0106a4c:	c7 44 24 04 c7 02 00 	movl   $0x2c7,0x4(%esp)$/;"	l
c0106a53	obj/kernel.asm	/^c0106a53:	00 $/;"	l
c0106a54	obj/kernel.asm	/^c0106a54:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106a5b	obj/kernel.asm	/^c0106a5b:	e8 68 a4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106a60	obj/kernel.asm	/^c0106a60:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106a63	obj/kernel.asm	/^c0106a63:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106a66	obj/kernel.asm	/^c0106a66:	e8 f6 e3 ff ff       	call   c0104e61 <page2kva>$/;"	l
c0106a6b	obj/kernel.asm	/^c0106a6b:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0106a70	obj/kernel.asm	/^c0106a70:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0106a73	obj/kernel.asm	/^c0106a73:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106a7a	obj/kernel.asm	/^c0106a7a:	e8 44 e6 00 00       	call   c01150c3 <strlen>$/;"	l
c0106a7f	obj/kernel.asm	/^c0106a7f:	85 c0                	test   %eax,%eax$/;"	l
c0106a81	obj/kernel.asm	/^c0106a81:	74 24                	je     c0106aa7 <check_boot_pgdir+0x33e>$/;"	l
c0106a83	obj/kernel.asm	/^c0106a83:	c7 44 24 0c 30 69 11 	movl   $0xc0116930,0xc(%esp)$/;"	l
c0106a8a	obj/kernel.asm	/^c0106a8a:	c0 $/;"	l
c0106a8b	obj/kernel.asm	/^c0106a8b:	c7 44 24 08 59 64 11 	movl   $0xc0116459,0x8(%esp)$/;"	l
c0106a92	obj/kernel.asm	/^c0106a92:	c0 $/;"	l
c0106a93	obj/kernel.asm	/^c0106a93:	c7 44 24 04 ca 02 00 	movl   $0x2ca,0x4(%esp)$/;"	l
c0106a9a	obj/kernel.asm	/^c0106a9a:	00 $/;"	l
c0106a9b	obj/kernel.asm	/^c0106a9b:	c7 04 24 34 64 11 c0 	movl   $0xc0116434,(%esp)$/;"	l
c0106aa2	obj/kernel.asm	/^c0106aa2:	e8 21 a4 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106aa7	obj/kernel.asm	/^c0106aa7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106aae	obj/kernel.asm	/^c0106aae:	00 $/;"	l
c0106aaf	obj/kernel.asm	/^c0106aaf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106ab2	obj/kernel.asm	/^c0106ab2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106ab5	obj/kernel.asm	/^c0106ab5:	e8 c1 e6 ff ff       	call   c010517b <free_pages>$/;"	l
c0106aba	obj/kernel.asm	/^c0106aba:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106abf	obj/kernel.asm	/^c0106abf:	8b 00                	mov    (%eax),%eax$/;"	l
c0106ac1	obj/kernel.asm	/^c0106ac1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106ac4	obj/kernel.asm	/^c0106ac4:	e8 2a e4 ff ff       	call   c0104ef3 <pde2page>$/;"	l
c0106ac9	obj/kernel.asm	/^c0106ac9:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106ad0	obj/kernel.asm	/^c0106ad0:	00 $/;"	l
c0106ad1	obj/kernel.asm	/^c0106ad1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106ad4	obj/kernel.asm	/^c0106ad4:	e8 a2 e6 ff ff       	call   c010517b <free_pages>$/;"	l
c0106ad9	obj/kernel.asm	/^c0106ad9:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c0106ade	obj/kernel.asm	/^c0106ade:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106ae4	obj/kernel.asm	/^c0106ae4:	c7 04 24 54 69 11 c0 	movl   $0xc0116954,(%esp)$/;"	l
c0106aeb	obj/kernel.asm	/^c0106aeb:	e8 75 98 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106af0	obj/kernel.asm	/^c0106af0:	c9                   	leave  $/;"	l
c0106af1	obj/kernel.asm	/^c0106af1:	c3                   	ret    $/;"	l
c0106af2	obj/kernel.asm	/^c0106af2 <perm2str>:$/;"	l
c0106af2	obj/kernel.asm	/^c0106af2:	55                   	push   %ebp$/;"	l
c0106af3	obj/kernel.asm	/^c0106af3:	89 e5                	mov    %esp,%ebp$/;"	l
c0106af5	obj/kernel.asm	/^c0106af5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106af8	obj/kernel.asm	/^c0106af8:	83 e0 04             	and    $0x4,%eax$/;"	l
c0106afb	obj/kernel.asm	/^c0106afb:	85 c0                	test   %eax,%eax$/;"	l
c0106afd	obj/kernel.asm	/^c0106afd:	74 07                	je     c0106b06 <perm2str+0x14>$/;"	l
c0106aff	obj/kernel.asm	/^c0106aff:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0106b04	obj/kernel.asm	/^c0106b04:	eb 05                	jmp    c0106b0b <perm2str+0x19>$/;"	l
c0106b06	obj/kernel.asm	/^c0106b06:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0106b0b	obj/kernel.asm	/^c0106b0b:	a2 08 ff 14 c0       	mov    %al,0xc014ff08$/;"	l
c0106b10	obj/kernel.asm	/^c0106b10:	c6 05 09 ff 14 c0 72 	movb   $0x72,0xc014ff09$/;"	l
c0106b17	obj/kernel.asm	/^c0106b17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106b1a	obj/kernel.asm	/^c0106b1a:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106b1d	obj/kernel.asm	/^c0106b1d:	85 c0                	test   %eax,%eax$/;"	l
c0106b1f	obj/kernel.asm	/^c0106b1f:	74 07                	je     c0106b28 <perm2str+0x36>$/;"	l
c0106b21	obj/kernel.asm	/^c0106b21:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c0106b26	obj/kernel.asm	/^c0106b26:	eb 05                	jmp    c0106b2d <perm2str+0x3b>$/;"	l
c0106b28	obj/kernel.asm	/^c0106b28:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0106b2d	obj/kernel.asm	/^c0106b2d:	a2 0a ff 14 c0       	mov    %al,0xc014ff0a$/;"	l
c0106b32	obj/kernel.asm	/^c0106b32:	c6 05 0b ff 14 c0 00 	movb   $0x0,0xc014ff0b$/;"	l
c0106b39	obj/kernel.asm	/^c0106b39:	b8 08 ff 14 c0       	mov    $0xc014ff08,%eax$/;"	l
c0106b3e	obj/kernel.asm	/^c0106b3e:	5d                   	pop    %ebp$/;"	l
c0106b3f	obj/kernel.asm	/^c0106b3f:	c3                   	ret    $/;"	l
c0106b40	obj/kernel.asm	/^c0106b40 <get_pgtable_items>:$/;"	l
c0106b40	obj/kernel.asm	/^c0106b40:	55                   	push   %ebp$/;"	l
c0106b41	obj/kernel.asm	/^c0106b41:	89 e5                	mov    %esp,%ebp$/;"	l
c0106b43	obj/kernel.asm	/^c0106b43:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0106b46	obj/kernel.asm	/^c0106b46:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b49	obj/kernel.asm	/^c0106b49:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106b4c	obj/kernel.asm	/^c0106b4c:	72 0a                	jb     c0106b58 <get_pgtable_items+0x18>$/;"	l
c0106b4e	obj/kernel.asm	/^c0106b4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106b53	obj/kernel.asm	/^c0106b53:	e9 9c 00 00 00       	jmp    c0106bf4 <get_pgtable_items+0xb4>$/;"	l
c0106b58	obj/kernel.asm	/^c0106b58:	eb 04                	jmp    c0106b5e <get_pgtable_items+0x1e>$/;"	l
c0106b5a	obj/kernel.asm	/^c0106b5a:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106b5e	obj/kernel.asm	/^c0106b5e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b61	obj/kernel.asm	/^c0106b61:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106b64	obj/kernel.asm	/^c0106b64:	73 18                	jae    c0106b7e <get_pgtable_items+0x3e>$/;"	l
c0106b66	obj/kernel.asm	/^c0106b66:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b69	obj/kernel.asm	/^c0106b69:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106b70	obj/kernel.asm	/^c0106b70:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106b73	obj/kernel.asm	/^c0106b73:	01 d0                	add    %edx,%eax$/;"	l
c0106b75	obj/kernel.asm	/^c0106b75:	8b 00                	mov    (%eax),%eax$/;"	l
c0106b77	obj/kernel.asm	/^c0106b77:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106b7a	obj/kernel.asm	/^c0106b7a:	85 c0                	test   %eax,%eax$/;"	l
c0106b7c	obj/kernel.asm	/^c0106b7c:	74 dc                	je     c0106b5a <get_pgtable_items+0x1a>$/;"	l
c0106b7e	obj/kernel.asm	/^c0106b7e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b81	obj/kernel.asm	/^c0106b81:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106b84	obj/kernel.asm	/^c0106b84:	73 69                	jae    c0106bef <get_pgtable_items+0xaf>$/;"	l
c0106b86	obj/kernel.asm	/^c0106b86:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0106b8a	obj/kernel.asm	/^c0106b8a:	74 08                	je     c0106b94 <get_pgtable_items+0x54>$/;"	l
c0106b8c	obj/kernel.asm	/^c0106b8c:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0106b8f	obj/kernel.asm	/^c0106b8f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106b92	obj/kernel.asm	/^c0106b92:	89 10                	mov    %edx,(%eax)$/;"	l
c0106b94	obj/kernel.asm	/^c0106b94:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106b97	obj/kernel.asm	/^c0106b97:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0106b9a	obj/kernel.asm	/^c0106b9a:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c0106b9d	obj/kernel.asm	/^c0106b9d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106ba4	obj/kernel.asm	/^c0106ba4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106ba7	obj/kernel.asm	/^c0106ba7:	01 d0                	add    %edx,%eax$/;"	l
c0106ba9	obj/kernel.asm	/^c0106ba9:	8b 00                	mov    (%eax),%eax$/;"	l
c0106bab	obj/kernel.asm	/^c0106bab:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106bae	obj/kernel.asm	/^c0106bae:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0106bb1	obj/kernel.asm	/^c0106bb1:	eb 04                	jmp    c0106bb7 <get_pgtable_items+0x77>$/;"	l
c0106bb3	obj/kernel.asm	/^c0106bb3:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106bb7	obj/kernel.asm	/^c0106bb7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106bba	obj/kernel.asm	/^c0106bba:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106bbd	obj/kernel.asm	/^c0106bbd:	73 1d                	jae    c0106bdc <get_pgtable_items+0x9c>$/;"	l
c0106bbf	obj/kernel.asm	/^c0106bbf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106bc2	obj/kernel.asm	/^c0106bc2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106bc9	obj/kernel.asm	/^c0106bc9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106bcc	obj/kernel.asm	/^c0106bcc:	01 d0                	add    %edx,%eax$/;"	l
c0106bce	obj/kernel.asm	/^c0106bce:	8b 00                	mov    (%eax),%eax$/;"	l
c0106bd0	obj/kernel.asm	/^c0106bd0:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106bd3	obj/kernel.asm	/^c0106bd3:	89 c2                	mov    %eax,%edx$/;"	l
c0106bd5	obj/kernel.asm	/^c0106bd5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106bd8	obj/kernel.asm	/^c0106bd8:	39 c2                	cmp    %eax,%edx$/;"	l
c0106bda	obj/kernel.asm	/^c0106bda:	74 d7                	je     c0106bb3 <get_pgtable_items+0x73>$/;"	l
c0106bdc	obj/kernel.asm	/^c0106bdc:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0106be0	obj/kernel.asm	/^c0106be0:	74 08                	je     c0106bea <get_pgtable_items+0xaa>$/;"	l
c0106be2	obj/kernel.asm	/^c0106be2:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0106be5	obj/kernel.asm	/^c0106be5:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106be8	obj/kernel.asm	/^c0106be8:	89 10                	mov    %edx,(%eax)$/;"	l
c0106bea	obj/kernel.asm	/^c0106bea:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106bed	obj/kernel.asm	/^c0106bed:	eb 05                	jmp    c0106bf4 <get_pgtable_items+0xb4>$/;"	l
c0106bef	obj/kernel.asm	/^c0106bef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106bf4	obj/kernel.asm	/^c0106bf4:	c9                   	leave  $/;"	l
c0106bf5	obj/kernel.asm	/^c0106bf5:	c3                   	ret    $/;"	l
c0106bf6	obj/kernel.asm	/^c0106bf6 <print_pgdir>:$/;"	l
c0106bf6	obj/kernel.asm	/^c0106bf6:	55                   	push   %ebp$/;"	l
c0106bf7	obj/kernel.asm	/^c0106bf7:	89 e5                	mov    %esp,%ebp$/;"	l
c0106bf9	obj/kernel.asm	/^c0106bf9:	57                   	push   %edi$/;"	l
c0106bfa	obj/kernel.asm	/^c0106bfa:	56                   	push   %esi$/;"	l
c0106bfb	obj/kernel.asm	/^c0106bfb:	53                   	push   %ebx$/;"	l
c0106bfc	obj/kernel.asm	/^c0106bfc:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
c0106bff	obj/kernel.asm	/^c0106bff:	c7 04 24 74 69 11 c0 	movl   $0xc0116974,(%esp)$/;"	l
c0106c06	obj/kernel.asm	/^c0106c06:	e8 5a 97 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106c0b	obj/kernel.asm	/^c0106c0b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106c12	obj/kernel.asm	/^c0106c12:	e9 fa 00 00 00       	jmp    c0106d11 <print_pgdir+0x11b>$/;"	l
c0106c17	obj/kernel.asm	/^c0106c17:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106c1a	obj/kernel.asm	/^c0106c1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106c1d	obj/kernel.asm	/^c0106c1d:	e8 d0 fe ff ff       	call   c0106af2 <perm2str>$/;"	l
c0106c22	obj/kernel.asm	/^c0106c22:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106c25	obj/kernel.asm	/^c0106c25:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106c28	obj/kernel.asm	/^c0106c28:	29 d1                	sub    %edx,%ecx$/;"	l
c0106c2a	obj/kernel.asm	/^c0106c2a:	89 ca                	mov    %ecx,%edx$/;"	l
c0106c2c	obj/kernel.asm	/^c0106c2c:	89 d6                	mov    %edx,%esi$/;"	l
c0106c2e	obj/kernel.asm	/^c0106c2e:	c1 e6 16             	shl    $0x16,%esi$/;"	l
c0106c31	obj/kernel.asm	/^c0106c31:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106c34	obj/kernel.asm	/^c0106c34:	89 d3                	mov    %edx,%ebx$/;"	l
c0106c36	obj/kernel.asm	/^c0106c36:	c1 e3 16             	shl    $0x16,%ebx$/;"	l
c0106c39	obj/kernel.asm	/^c0106c39:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106c3c	obj/kernel.asm	/^c0106c3c:	89 d1                	mov    %edx,%ecx$/;"	l
c0106c3e	obj/kernel.asm	/^c0106c3e:	c1 e1 16             	shl    $0x16,%ecx$/;"	l
c0106c41	obj/kernel.asm	/^c0106c41:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
c0106c44	obj/kernel.asm	/^c0106c44:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106c47	obj/kernel.asm	/^c0106c47:	29 d7                	sub    %edx,%edi$/;"	l
c0106c49	obj/kernel.asm	/^c0106c49:	89 fa                	mov    %edi,%edx$/;"	l
c0106c4b	obj/kernel.asm	/^c0106c4b:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0106c4f	obj/kernel.asm	/^c0106c4f:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106c53	obj/kernel.asm	/^c0106c53:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106c57	obj/kernel.asm	/^c0106c57:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106c5b	obj/kernel.asm	/^c0106c5b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106c5f	obj/kernel.asm	/^c0106c5f:	c7 04 24 a5 69 11 c0 	movl   $0xc01169a5,(%esp)$/;"	l
c0106c66	obj/kernel.asm	/^c0106c66:	e8 fa 96 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106c6b	obj/kernel.asm	/^c0106c6b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106c6e	obj/kernel.asm	/^c0106c6e:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c0106c71	obj/kernel.asm	/^c0106c71:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0106c74	obj/kernel.asm	/^c0106c74:	eb 54                	jmp    c0106cca <print_pgdir+0xd4>$/;"	l
c0106c76	obj/kernel.asm	/^c0106c76:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106c79	obj/kernel.asm	/^c0106c79:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106c7c	obj/kernel.asm	/^c0106c7c:	e8 71 fe ff ff       	call   c0106af2 <perm2str>$/;"	l
c0106c81	obj/kernel.asm	/^c0106c81:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c0106c84	obj/kernel.asm	/^c0106c84:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106c87	obj/kernel.asm	/^c0106c87:	29 d1                	sub    %edx,%ecx$/;"	l
c0106c89	obj/kernel.asm	/^c0106c89:	89 ca                	mov    %ecx,%edx$/;"	l
c0106c8b	obj/kernel.asm	/^c0106c8b:	89 d6                	mov    %edx,%esi$/;"	l
c0106c8d	obj/kernel.asm	/^c0106c8d:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
c0106c90	obj/kernel.asm	/^c0106c90:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0106c93	obj/kernel.asm	/^c0106c93:	89 d3                	mov    %edx,%ebx$/;"	l
c0106c95	obj/kernel.asm	/^c0106c95:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
c0106c98	obj/kernel.asm	/^c0106c98:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106c9b	obj/kernel.asm	/^c0106c9b:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0106c9e	obj/kernel.asm	/^c0106c9e:	89 d1                	mov    %edx,%ecx$/;"	l
c0106ca0	obj/kernel.asm	/^c0106ca0:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
c0106ca3	obj/kernel.asm	/^c0106ca3:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106ca6	obj/kernel.asm	/^c0106ca6:	29 d7                	sub    %edx,%edi$/;"	l
c0106ca8	obj/kernel.asm	/^c0106ca8:	89 fa                	mov    %edi,%edx$/;"	l
c0106caa	obj/kernel.asm	/^c0106caa:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0106cae	obj/kernel.asm	/^c0106cae:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106cb2	obj/kernel.asm	/^c0106cb2:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106cb6	obj/kernel.asm	/^c0106cb6:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106cba	obj/kernel.asm	/^c0106cba:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106cbe	obj/kernel.asm	/^c0106cbe:	c7 04 24 c4 69 11 c0 	movl   $0xc01169c4,(%esp)$/;"	l
c0106cc5	obj/kernel.asm	/^c0106cc5:	e8 9b 96 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106cca	obj/kernel.asm	/^c0106cca:	ba 00 00 c0 fa       	mov    $0xfac00000,%edx$/;"	l
c0106ccf	obj/kernel.asm	/^c0106ccf:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0106cd2	obj/kernel.asm	/^c0106cd2:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106cd5	obj/kernel.asm	/^c0106cd5:	89 ce                	mov    %ecx,%esi$/;"	l
c0106cd7	obj/kernel.asm	/^c0106cd7:	c1 e6 0a             	shl    $0xa,%esi$/;"	l
c0106cda	obj/kernel.asm	/^c0106cda:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0106cdd	obj/kernel.asm	/^c0106cdd:	89 cb                	mov    %ecx,%ebx$/;"	l
c0106cdf	obj/kernel.asm	/^c0106cdf:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c0106ce2	obj/kernel.asm	/^c0106ce2:	8d 4d d4             	lea    -0x2c(%ebp),%ecx$/;"	l
c0106ce5	obj/kernel.asm	/^c0106ce5:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106ce9	obj/kernel.asm	/^c0106ce9:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
c0106cec	obj/kernel.asm	/^c0106cec:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106cf0	obj/kernel.asm	/^c0106cf0:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106cf4	obj/kernel.asm	/^c0106cf4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106cf8	obj/kernel.asm	/^c0106cf8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0106cfc	obj/kernel.asm	/^c0106cfc:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0106cff	obj/kernel.asm	/^c0106cff:	e8 3c fe ff ff       	call   c0106b40 <get_pgtable_items>$/;"	l
c0106d04	obj/kernel.asm	/^c0106d04:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106d07	obj/kernel.asm	/^c0106d07:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106d0b	obj/kernel.asm	/^c0106d0b:	0f 85 65 ff ff ff    	jne    c0106c76 <print_pgdir+0x80>$/;"	l
c0106d11	obj/kernel.asm	/^c0106d11:	ba 00 b0 fe fa       	mov    $0xfafeb000,%edx$/;"	l
c0106d16	obj/kernel.asm	/^c0106d16:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d19	obj/kernel.asm	/^c0106d19:	8d 4d dc             	lea    -0x24(%ebp),%ecx$/;"	l
c0106d1c	obj/kernel.asm	/^c0106d1c:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106d20	obj/kernel.asm	/^c0106d20:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c0106d23	obj/kernel.asm	/^c0106d23:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106d27	obj/kernel.asm	/^c0106d27:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106d2b	obj/kernel.asm	/^c0106d2b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106d2f	obj/kernel.asm	/^c0106d2f:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
c0106d36	obj/kernel.asm	/^c0106d36:	00 $/;"	l
c0106d37	obj/kernel.asm	/^c0106d37:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0106d3e	obj/kernel.asm	/^c0106d3e:	e8 fd fd ff ff       	call   c0106b40 <get_pgtable_items>$/;"	l
c0106d43	obj/kernel.asm	/^c0106d43:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106d46	obj/kernel.asm	/^c0106d46:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106d4a	obj/kernel.asm	/^c0106d4a:	0f 85 c7 fe ff ff    	jne    c0106c17 <print_pgdir+0x21>$/;"	l
c0106d50	obj/kernel.asm	/^c0106d50:	c7 04 24 e8 69 11 c0 	movl   $0xc01169e8,(%esp)$/;"	l
c0106d57	obj/kernel.asm	/^c0106d57:	e8 09 96 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106d5c	obj/kernel.asm	/^c0106d5c:	83 c4 4c             	add    $0x4c,%esp$/;"	l
c0106d5f	obj/kernel.asm	/^c0106d5f:	5b                   	pop    %ebx$/;"	l
c0106d60	obj/kernel.asm	/^c0106d60:	5e                   	pop    %esi$/;"	l
c0106d61	obj/kernel.asm	/^c0106d61:	5f                   	pop    %edi$/;"	l
c0106d62	obj/kernel.asm	/^c0106d62:	5d                   	pop    %ebp$/;"	l
c0106d63	obj/kernel.asm	/^c0106d63:	c3                   	ret    $/;"	l
c0106d64	obj/kernel.asm	/^c0106d64 <pa2page>:$/;"	l
c0106d64	obj/kernel.asm	/^c0106d64:	55                   	push   %ebp$/;"	l
c0106d65	obj/kernel.asm	/^c0106d65:	89 e5                	mov    %esp,%ebp$/;"	l
c0106d67	obj/kernel.asm	/^c0106d67:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106d6a	obj/kernel.asm	/^c0106d6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106d6d	obj/kernel.asm	/^c0106d6d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106d70	obj/kernel.asm	/^c0106d70:	89 c2                	mov    %eax,%edx$/;"	l
c0106d72	obj/kernel.asm	/^c0106d72:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c0106d77	obj/kernel.asm	/^c0106d77:	39 c2                	cmp    %eax,%edx$/;"	l
c0106d79	obj/kernel.asm	/^c0106d79:	72 1c                	jb     c0106d97 <pa2page+0x33>$/;"	l
c0106d7b	obj/kernel.asm	/^c0106d7b:	c7 44 24 08 1c 6a 11 	movl   $0xc0116a1c,0x8(%esp)$/;"	l
c0106d82	obj/kernel.asm	/^c0106d82:	c0 $/;"	l
c0106d83	obj/kernel.asm	/^c0106d83:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0106d8a	obj/kernel.asm	/^c0106d8a:	00 $/;"	l
c0106d8b	obj/kernel.asm	/^c0106d8b:	c7 04 24 3b 6a 11 c0 	movl   $0xc0116a3b,(%esp)$/;"	l
c0106d92	obj/kernel.asm	/^c0106d92:	e8 31 a1 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106d97	obj/kernel.asm	/^c0106d97:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c0106d9c	obj/kernel.asm	/^c0106d9c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106d9f	obj/kernel.asm	/^c0106d9f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106da2	obj/kernel.asm	/^c0106da2:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0106da5	obj/kernel.asm	/^c0106da5:	01 d0                	add    %edx,%eax$/;"	l
c0106da7	obj/kernel.asm	/^c0106da7:	c9                   	leave  $/;"	l
c0106da8	obj/kernel.asm	/^c0106da8:	c3                   	ret    $/;"	l
c0106da9	obj/kernel.asm	/^c0106da9 <pte2page>:$/;"	l
c0106da9	obj/kernel.asm	/^c0106da9:	55                   	push   %ebp$/;"	l
c0106daa	obj/kernel.asm	/^c0106daa:	89 e5                	mov    %esp,%ebp$/;"	l
c0106dac	obj/kernel.asm	/^c0106dac:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106daf	obj/kernel.asm	/^c0106daf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106db2	obj/kernel.asm	/^c0106db2:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106db5	obj/kernel.asm	/^c0106db5:	85 c0                	test   %eax,%eax$/;"	l
c0106db7	obj/kernel.asm	/^c0106db7:	75 1c                	jne    c0106dd5 <pte2page+0x2c>$/;"	l
c0106db9	obj/kernel.asm	/^c0106db9:	c7 44 24 08 4c 6a 11 	movl   $0xc0116a4c,0x8(%esp)$/;"	l
c0106dc0	obj/kernel.asm	/^c0106dc0:	c0 $/;"	l
c0106dc1	obj/kernel.asm	/^c0106dc1:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0106dc8	obj/kernel.asm	/^c0106dc8:	00 $/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	c7 04 24 3b 6a 11 c0 	movl   $0xc0116a3b,(%esp)$/;"	l
c0106dd0	obj/kernel.asm	/^c0106dd0:	e8 f3 a0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106dd5	obj/kernel.asm	/^c0106dd5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106dd8	obj/kernel.asm	/^c0106dd8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106ddd	obj/kernel.asm	/^c0106ddd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106de0	obj/kernel.asm	/^c0106de0:	e8 7f ff ff ff       	call   c0106d64 <pa2page>$/;"	l
c0106de5	obj/kernel.asm	/^c0106de5:	c9                   	leave  $/;"	l
c0106de6	obj/kernel.asm	/^c0106de6:	c3                   	ret    $/;"	l
c0106de7	obj/kernel.asm	/^c0106de7 <pde2page>:$/;"	l
c0106de7	obj/kernel.asm	/^c0106de7:	55                   	push   %ebp$/;"	l
c0106de8	obj/kernel.asm	/^c0106de8:	89 e5                	mov    %esp,%ebp$/;"	l
c0106dea	obj/kernel.asm	/^c0106dea:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ded	obj/kernel.asm	/^c0106ded:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106df0	obj/kernel.asm	/^c0106df0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106df5	obj/kernel.asm	/^c0106df5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106df8	obj/kernel.asm	/^c0106df8:	e8 67 ff ff ff       	call   c0106d64 <pa2page>$/;"	l
c0106dfd	obj/kernel.asm	/^c0106dfd:	c9                   	leave  $/;"	l
c0106dfe	obj/kernel.asm	/^c0106dfe:	c3                   	ret    $/;"	l
c0106dff	obj/kernel.asm	/^c0106dff <swap_init>:$/;"	l
c0106dff	obj/kernel.asm	/^c0106dff:	55                   	push   %ebp$/;"	l
c0106e00	obj/kernel.asm	/^c0106e00:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e02	obj/kernel.asm	/^c0106e02:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106e05	obj/kernel.asm	/^c0106e05:	e8 92 7f 00 00       	call   c010ed9c <swapfs_init>$/;"	l
c0106e0a	obj/kernel.asm	/^c0106e0a:	a1 dc 30 15 c0       	mov    0xc01530dc,%eax$/;"	l
c0106e0f	obj/kernel.asm	/^c0106e0f:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c0106e14	obj/kernel.asm	/^c0106e14:	76 0c                	jbe    c0106e22 <swap_init+0x23>$/;"	l
c0106e16	obj/kernel.asm	/^c0106e16:	a1 dc 30 15 c0       	mov    0xc01530dc,%eax$/;"	l
c0106e1b	obj/kernel.asm	/^c0106e1b:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c0106e20	obj/kernel.asm	/^c0106e20:	76 25                	jbe    c0106e47 <swap_init+0x48>$/;"	l
c0106e22	obj/kernel.asm	/^c0106e22:	a1 dc 30 15 c0       	mov    0xc01530dc,%eax$/;"	l
c0106e27	obj/kernel.asm	/^c0106e27:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0106e2b	obj/kernel.asm	/^c0106e2b:	c7 44 24 08 6d 6a 11 	movl   $0xc0116a6d,0x8(%esp)$/;"	l
c0106e32	obj/kernel.asm	/^c0106e32:	c0 $/;"	l
c0106e33	obj/kernel.asm	/^c0106e33:	c7 44 24 04 27 00 00 	movl   $0x27,0x4(%esp)$/;"	l
c0106e3a	obj/kernel.asm	/^c0106e3a:	00 $/;"	l
c0106e3b	obj/kernel.asm	/^c0106e3b:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0106e42	obj/kernel.asm	/^c0106e42:	e8 81 a0 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106e47	obj/kernel.asm	/^c0106e47:	c7 05 14 ff 14 c0 60 	movl   $0xc014ea60,0xc014ff14$/;"	l
c0106e4e	obj/kernel.asm	/^c0106e4e:	ea 14 c0 $/;"	l
c0106e51	obj/kernel.asm	/^c0106e51:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0106e56	obj/kernel.asm	/^c0106e56:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106e59	obj/kernel.asm	/^c0106e59:	ff d0                	call   *%eax$/;"	l
c0106e5b	obj/kernel.asm	/^c0106e5b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106e5e	obj/kernel.asm	/^c0106e5e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106e62	obj/kernel.asm	/^c0106e62:	75 26                	jne    c0106e8a <swap_init+0x8b>$/;"	l
c0106e64	obj/kernel.asm	/^c0106e64:	c7 05 0c ff 14 c0 01 	movl   $0x1,0xc014ff0c$/;"	l
c0106e6b	obj/kernel.asm	/^c0106e6b:	00 00 00 $/;"	l
c0106e6e	obj/kernel.asm	/^c0106e6e:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0106e73	obj/kernel.asm	/^c0106e73:	8b 00                	mov    (%eax),%eax$/;"	l
c0106e75	obj/kernel.asm	/^c0106e75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106e79	obj/kernel.asm	/^c0106e79:	c7 04 24 97 6a 11 c0 	movl   $0xc0116a97,(%esp)$/;"	l
c0106e80	obj/kernel.asm	/^c0106e80:	e8 e0 94 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106e85	obj/kernel.asm	/^c0106e85:	e8 a4 04 00 00       	call   c010732e <check_swap>$/;"	l
c0106e8a	obj/kernel.asm	/^c0106e8a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106e8d	obj/kernel.asm	/^c0106e8d:	c9                   	leave  $/;"	l
c0106e8e	obj/kernel.asm	/^c0106e8e:	c3                   	ret    $/;"	l
c0106e8f	obj/kernel.asm	/^c0106e8f <swap_init_mm>:$/;"	l
c0106e8f	obj/kernel.asm	/^c0106e8f:	55                   	push   %ebp$/;"	l
c0106e90	obj/kernel.asm	/^c0106e90:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e92	obj/kernel.asm	/^c0106e92:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e95	obj/kernel.asm	/^c0106e95:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0106e9a	obj/kernel.asm	/^c0106e9a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106e9d	obj/kernel.asm	/^c0106e9d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106ea0	obj/kernel.asm	/^c0106ea0:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106ea3	obj/kernel.asm	/^c0106ea3:	ff d0                	call   *%eax$/;"	l
c0106ea5	obj/kernel.asm	/^c0106ea5:	c9                   	leave  $/;"	l
c0106ea6	obj/kernel.asm	/^c0106ea6:	c3                   	ret    $/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7 <swap_tick_event>:$/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7:	55                   	push   %ebp$/;"	l
c0106ea8	obj/kernel.asm	/^c0106ea8:	89 e5                	mov    %esp,%ebp$/;"	l
c0106eaa	obj/kernel.asm	/^c0106eaa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ead	obj/kernel.asm	/^c0106ead:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0106eb2	obj/kernel.asm	/^c0106eb2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106eb5	obj/kernel.asm	/^c0106eb5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106eb8	obj/kernel.asm	/^c0106eb8:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106ebb	obj/kernel.asm	/^c0106ebb:	ff d0                	call   *%eax$/;"	l
c0106ebd	obj/kernel.asm	/^c0106ebd:	c9                   	leave  $/;"	l
c0106ebe	obj/kernel.asm	/^c0106ebe:	c3                   	ret    $/;"	l
c0106ebf	obj/kernel.asm	/^c0106ebf <swap_map_swappable>:$/;"	l
c0106ebf	obj/kernel.asm	/^c0106ebf:	55                   	push   %ebp$/;"	l
c0106ec0	obj/kernel.asm	/^c0106ec0:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ec2	obj/kernel.asm	/^c0106ec2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ec5	obj/kernel.asm	/^c0106ec5:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0106eca	obj/kernel.asm	/^c0106eca:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106ecd	obj/kernel.asm	/^c0106ecd:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0106ed0	obj/kernel.asm	/^c0106ed0:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106ed4	obj/kernel.asm	/^c0106ed4:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106ed7	obj/kernel.asm	/^c0106ed7:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106edb	obj/kernel.asm	/^c0106edb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106ede	obj/kernel.asm	/^c0106ede:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106ee2	obj/kernel.asm	/^c0106ee2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106ee5	obj/kernel.asm	/^c0106ee5:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106ee8	obj/kernel.asm	/^c0106ee8:	ff d0                	call   *%eax$/;"	l
c0106eea	obj/kernel.asm	/^c0106eea:	c9                   	leave  $/;"	l
c0106eeb	obj/kernel.asm	/^c0106eeb:	c3                   	ret    $/;"	l
c0106eec	obj/kernel.asm	/^c0106eec <swap_set_unswappable>:$/;"	l
c0106eec	obj/kernel.asm	/^c0106eec:	55                   	push   %ebp$/;"	l
c0106eed	obj/kernel.asm	/^c0106eed:	89 e5                	mov    %esp,%ebp$/;"	l
c0106eef	obj/kernel.asm	/^c0106eef:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ef2	obj/kernel.asm	/^c0106ef2:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0106ef7	obj/kernel.asm	/^c0106ef7:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0106efa	obj/kernel.asm	/^c0106efa:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106efd	obj/kernel.asm	/^c0106efd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106f01	obj/kernel.asm	/^c0106f01:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106f04	obj/kernel.asm	/^c0106f04:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106f07	obj/kernel.asm	/^c0106f07:	ff d0                	call   *%eax$/;"	l
c0106f09	obj/kernel.asm	/^c0106f09:	c9                   	leave  $/;"	l
c0106f0a	obj/kernel.asm	/^c0106f0a:	c3                   	ret    $/;"	l
c0106f0b	obj/kernel.asm	/^c0106f0b <swap_out>:$/;"	l
c0106f0b	obj/kernel.asm	/^c0106f0b:	55                   	push   %ebp$/;"	l
c0106f0c	obj/kernel.asm	/^c0106f0c:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f0e	obj/kernel.asm	/^c0106f0e:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106f11	obj/kernel.asm	/^c0106f11:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106f18	obj/kernel.asm	/^c0106f18:	e9 5a 01 00 00       	jmp    c0107077 <swap_out+0x16c>$/;"	l
c0106f1d	obj/kernel.asm	/^c0106f1d:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0106f22	obj/kernel.asm	/^c0106f22:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0106f25	obj/kernel.asm	/^c0106f25:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106f28	obj/kernel.asm	/^c0106f28:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106f2c	obj/kernel.asm	/^c0106f2c:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0106f2f	obj/kernel.asm	/^c0106f2f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106f33	obj/kernel.asm	/^c0106f33:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106f36	obj/kernel.asm	/^c0106f36:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106f39	obj/kernel.asm	/^c0106f39:	ff d0                	call   *%eax$/;"	l
c0106f3b	obj/kernel.asm	/^c0106f3b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106f3e	obj/kernel.asm	/^c0106f3e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106f42	obj/kernel.asm	/^c0106f42:	74 18                	je     c0106f5c <swap_out+0x51>$/;"	l
c0106f44	obj/kernel.asm	/^c0106f44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f47	obj/kernel.asm	/^c0106f47:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106f4b	obj/kernel.asm	/^c0106f4b:	c7 04 24 ac 6a 11 c0 	movl   $0xc0116aac,(%esp)$/;"	l
c0106f52	obj/kernel.asm	/^c0106f52:	e8 0e 94 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106f57	obj/kernel.asm	/^c0106f57:	e9 27 01 00 00       	jmp    c0107083 <swap_out+0x178>$/;"	l
c0106f5c	obj/kernel.asm	/^c0106f5c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106f5f	obj/kernel.asm	/^c0106f5f:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106f62	obj/kernel.asm	/^c0106f62:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106f65	obj/kernel.asm	/^c0106f65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f68	obj/kernel.asm	/^c0106f68:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106f6b	obj/kernel.asm	/^c0106f6b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0106f72	obj/kernel.asm	/^c0106f72:	00 $/;"	l
c0106f73	obj/kernel.asm	/^c0106f73:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106f76	obj/kernel.asm	/^c0106f76:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106f7a	obj/kernel.asm	/^c0106f7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106f7d	obj/kernel.asm	/^c0106f7d:	e8 f5 e8 ff ff       	call   c0105877 <get_pte>$/;"	l
c0106f82	obj/kernel.asm	/^c0106f82:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106f85	obj/kernel.asm	/^c0106f85:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106f88	obj/kernel.asm	/^c0106f88:	8b 00                	mov    (%eax),%eax$/;"	l
c0106f8a	obj/kernel.asm	/^c0106f8a:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106f8d	obj/kernel.asm	/^c0106f8d:	85 c0                	test   %eax,%eax$/;"	l
c0106f8f	obj/kernel.asm	/^c0106f8f:	75 24                	jne    c0106fb5 <swap_out+0xaa>$/;"	l
c0106f91	obj/kernel.asm	/^c0106f91:	c7 44 24 0c d9 6a 11 	movl   $0xc0116ad9,0xc(%esp)$/;"	l
c0106f98	obj/kernel.asm	/^c0106f98:	c0 $/;"	l
c0106f99	obj/kernel.asm	/^c0106f99:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0106fa0	obj/kernel.asm	/^c0106fa0:	c0 $/;"	l
c0106fa1	obj/kernel.asm	/^c0106fa1:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c0106fa8	obj/kernel.asm	/^c0106fa8:	00 $/;"	l
c0106fa9	obj/kernel.asm	/^c0106fa9:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0106fb0	obj/kernel.asm	/^c0106fb0:	e8 13 9f ff ff       	call   c0100ec8 <__panic>$/;"	l
c0106fb5	obj/kernel.asm	/^c0106fb5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106fb8	obj/kernel.asm	/^c0106fb8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106fbb	obj/kernel.asm	/^c0106fbb:	8b 52 1c             	mov    0x1c(%edx),%edx$/;"	l
c0106fbe	obj/kernel.asm	/^c0106fbe:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106fc1	obj/kernel.asm	/^c0106fc1:	83 c2 01             	add    $0x1,%edx$/;"	l
c0106fc4	obj/kernel.asm	/^c0106fc4:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c0106fc7	obj/kernel.asm	/^c0106fc7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106fcb	obj/kernel.asm	/^c0106fcb:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106fce	obj/kernel.asm	/^c0106fce:	e8 83 7e 00 00       	call   c010ee56 <swapfs_write>$/;"	l
c0106fd3	obj/kernel.asm	/^c0106fd3:	85 c0                	test   %eax,%eax$/;"	l
c0106fd5	obj/kernel.asm	/^c0106fd5:	74 34                	je     c010700b <swap_out+0x100>$/;"	l
c0106fd7	obj/kernel.asm	/^c0106fd7:	c7 04 24 03 6b 11 c0 	movl   $0xc0116b03,(%esp)$/;"	l
c0106fde	obj/kernel.asm	/^c0106fde:	e8 82 93 ff ff       	call   c0100365 <cprintf>$/;"	l
c0106fe3	obj/kernel.asm	/^c0106fe3:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0106fe8	obj/kernel.asm	/^c0106fe8:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106feb	obj/kernel.asm	/^c0106feb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106fee	obj/kernel.asm	/^c0106fee:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0106ff5	obj/kernel.asm	/^c0106ff5:	00 $/;"	l
c0106ff6	obj/kernel.asm	/^c0106ff6:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106ffa	obj/kernel.asm	/^c0106ffa:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106ffd	obj/kernel.asm	/^c0106ffd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0107001	obj/kernel.asm	/^c0107001:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107004	obj/kernel.asm	/^c0107004:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0107007	obj/kernel.asm	/^c0107007:	ff d0                	call   *%eax$/;"	l
c0107009	obj/kernel.asm	/^c0107009:	eb 68                	jmp    c0107073 <swap_out+0x168>$/;"	l
c010700b	obj/kernel.asm	/^c010700b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010700e	obj/kernel.asm	/^c010700e:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0107011	obj/kernel.asm	/^c0107011:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107014	obj/kernel.asm	/^c0107014:	83 c0 01             	add    $0x1,%eax$/;"	l
c0107017	obj/kernel.asm	/^c0107017:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010701b	obj/kernel.asm	/^c010701b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010701e	obj/kernel.asm	/^c010701e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107022	obj/kernel.asm	/^c0107022:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107025	obj/kernel.asm	/^c0107025:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107029	obj/kernel.asm	/^c0107029:	c7 04 24 1c 6b 11 c0 	movl   $0xc0116b1c,(%esp)$/;"	l
c0107030	obj/kernel.asm	/^c0107030:	e8 30 93 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107035	obj/kernel.asm	/^c0107035:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107038	obj/kernel.asm	/^c0107038:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010703b	obj/kernel.asm	/^c010703b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010703e	obj/kernel.asm	/^c010703e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0107041	obj/kernel.asm	/^c0107041:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0107044	obj/kernel.asm	/^c0107044:	89 c2                	mov    %eax,%edx$/;"	l
c0107046	obj/kernel.asm	/^c0107046:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107049	obj/kernel.asm	/^c0107049:	89 10                	mov    %edx,(%eax)$/;"	l
c010704b	obj/kernel.asm	/^c010704b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010704e	obj/kernel.asm	/^c010704e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0107055	obj/kernel.asm	/^c0107055:	00 $/;"	l
c0107056	obj/kernel.asm	/^c0107056:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107059	obj/kernel.asm	/^c0107059:	e8 1d e1 ff ff       	call   c010517b <free_pages>$/;"	l
c010705e	obj/kernel.asm	/^c010705e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107061	obj/kernel.asm	/^c0107061:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107064	obj/kernel.asm	/^c0107064:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107067	obj/kernel.asm	/^c0107067:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010706b	obj/kernel.asm	/^c010706b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010706e	obj/kernel.asm	/^c010706e:	e8 0c ef ff ff       	call   c0105f7f <tlb_invalidate>$/;"	l
c0107073	obj/kernel.asm	/^c0107073:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0107077	obj/kernel.asm	/^c0107077:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010707a	obj/kernel.asm	/^c010707a:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010707d	obj/kernel.asm	/^c010707d:	0f 85 9a fe ff ff    	jne    c0106f1d <swap_out+0x12>$/;"	l
c0107083	obj/kernel.asm	/^c0107083:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107086	obj/kernel.asm	/^c0107086:	c9                   	leave  $/;"	l
c0107087	obj/kernel.asm	/^c0107087:	c3                   	ret    $/;"	l
c0107088	obj/kernel.asm	/^c0107088 <swap_in>:$/;"	l
c0107088	obj/kernel.asm	/^c0107088:	55                   	push   %ebp$/;"	l
c0107089	obj/kernel.asm	/^c0107089:	89 e5                	mov    %esp,%ebp$/;"	l
c010708b	obj/kernel.asm	/^c010708b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010708e	obj/kernel.asm	/^c010708e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0107095	obj/kernel.asm	/^c0107095:	e8 76 e0 ff ff       	call   c0105110 <alloc_pages>$/;"	l
c010709a	obj/kernel.asm	/^c010709a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010709d	obj/kernel.asm	/^c010709d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01070a1	obj/kernel.asm	/^c01070a1:	75 24                	jne    c01070c7 <swap_in+0x3f>$/;"	l
c01070a3	obj/kernel.asm	/^c01070a3:	c7 44 24 0c 5c 6b 11 	movl   $0xc0116b5c,0xc(%esp)$/;"	l
c01070aa	obj/kernel.asm	/^c01070aa:	c0 $/;"	l
c01070ab	obj/kernel.asm	/^c01070ab:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01070b2	obj/kernel.asm	/^c01070b2:	c0 $/;"	l
c01070b3	obj/kernel.asm	/^c01070b3:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c01070ba	obj/kernel.asm	/^c01070ba:	00 $/;"	l
c01070bb	obj/kernel.asm	/^c01070bb:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01070c2	obj/kernel.asm	/^c01070c2:	e8 01 9e ff ff       	call   c0100ec8 <__panic>$/;"	l
c01070c7	obj/kernel.asm	/^c01070c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01070ca	obj/kernel.asm	/^c01070ca:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01070cd	obj/kernel.asm	/^c01070cd:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01070d4	obj/kernel.asm	/^c01070d4:	00 $/;"	l
c01070d5	obj/kernel.asm	/^c01070d5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01070d8	obj/kernel.asm	/^c01070d8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01070dc	obj/kernel.asm	/^c01070dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01070df	obj/kernel.asm	/^c01070df:	e8 93 e7 ff ff       	call   c0105877 <get_pte>$/;"	l
c01070e4	obj/kernel.asm	/^c01070e4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01070e7	obj/kernel.asm	/^c01070e7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070ea	obj/kernel.asm	/^c01070ea:	8b 00                	mov    (%eax),%eax$/;"	l
c01070ec	obj/kernel.asm	/^c01070ec:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01070ef	obj/kernel.asm	/^c01070ef:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01070f3	obj/kernel.asm	/^c01070f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01070f6	obj/kernel.asm	/^c01070f6:	e8 e9 7c 00 00       	call   c010ede4 <swapfs_read>$/;"	l
c01070fb	obj/kernel.asm	/^c01070fb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01070fe	obj/kernel.asm	/^c01070fe:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107102	obj/kernel.asm	/^c0107102:	74 2a                	je     c010712e <swap_in+0xa6>$/;"	l
c0107104	obj/kernel.asm	/^c0107104:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107108	obj/kernel.asm	/^c0107108:	75 24                	jne    c010712e <swap_in+0xa6>$/;"	l
c010710a	obj/kernel.asm	/^c010710a:	c7 44 24 0c 69 6b 11 	movl   $0xc0116b69,0xc(%esp)$/;"	l
c0107111	obj/kernel.asm	/^c0107111:	c0 $/;"	l
c0107112	obj/kernel.asm	/^c0107112:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107119	obj/kernel.asm	/^c0107119:	c0 $/;"	l
c010711a	obj/kernel.asm	/^c010711a:	c7 44 24 04 85 00 00 	movl   $0x85,0x4(%esp)$/;"	l
c0107121	obj/kernel.asm	/^c0107121:	00 $/;"	l
c0107122	obj/kernel.asm	/^c0107122:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107129	obj/kernel.asm	/^c0107129:	e8 9a 9d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010712e	obj/kernel.asm	/^c010712e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107131	obj/kernel.asm	/^c0107131:	8b 00                	mov    (%eax),%eax$/;"	l
c0107133	obj/kernel.asm	/^c0107133:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0107136	obj/kernel.asm	/^c0107136:	89 c2                	mov    %eax,%edx$/;"	l
c0107138	obj/kernel.asm	/^c0107138:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010713b	obj/kernel.asm	/^c010713b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010713f	obj/kernel.asm	/^c010713f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0107143	obj/kernel.asm	/^c0107143:	c7 04 24 70 6b 11 c0 	movl   $0xc0116b70,(%esp)$/;"	l
c010714a	obj/kernel.asm	/^c010714a:	e8 16 92 ff ff       	call   c0100365 <cprintf>$/;"	l
c010714f	obj/kernel.asm	/^c010714f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107152	obj/kernel.asm	/^c0107152:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0107155	obj/kernel.asm	/^c0107155:	89 10                	mov    %edx,(%eax)$/;"	l
c0107157	obj/kernel.asm	/^c0107157:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010715c	obj/kernel.asm	/^c010715c:	c9                   	leave  $/;"	l
c010715d	obj/kernel.asm	/^c010715d:	c3                   	ret    $/;"	l
c010715e	obj/kernel.asm	/^c010715e <check_content_set>:$/;"	l
c010715e	obj/kernel.asm	/^c010715e:	55                   	push   %ebp$/;"	l
c010715f	obj/kernel.asm	/^c010715f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107161	obj/kernel.asm	/^c0107161:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107164	obj/kernel.asm	/^c0107164:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107169	obj/kernel.asm	/^c0107169:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c010716c	obj/kernel.asm	/^c010716c:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107171	obj/kernel.asm	/^c0107171:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0107174	obj/kernel.asm	/^c0107174:	74 24                	je     c010719a <check_content_set+0x3c>$/;"	l
c0107176	obj/kernel.asm	/^c0107176:	c7 44 24 0c ae 6b 11 	movl   $0xc0116bae,0xc(%esp)$/;"	l
c010717d	obj/kernel.asm	/^c010717d:	c0 $/;"	l
c010717e	obj/kernel.asm	/^c010717e:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107185	obj/kernel.asm	/^c0107185:	c0 $/;"	l
c0107186	obj/kernel.asm	/^c0107186:	c7 44 24 04 92 00 00 	movl   $0x92,0x4(%esp)$/;"	l
c010718d	obj/kernel.asm	/^c010718d:	00 $/;"	l
c010718e	obj/kernel.asm	/^c010718e:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107195	obj/kernel.asm	/^c0107195:	e8 2e 9d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010719a	obj/kernel.asm	/^c010719a:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c010719f	obj/kernel.asm	/^c010719f:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01071a2	obj/kernel.asm	/^c01071a2:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c01071a7	obj/kernel.asm	/^c01071a7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01071aa	obj/kernel.asm	/^c01071aa:	74 24                	je     c01071d0 <check_content_set+0x72>$/;"	l
c01071ac	obj/kernel.asm	/^c01071ac:	c7 44 24 0c ae 6b 11 	movl   $0xc0116bae,0xc(%esp)$/;"	l
c01071b3	obj/kernel.asm	/^c01071b3:	c0 $/;"	l
c01071b4	obj/kernel.asm	/^c01071b4:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01071bb	obj/kernel.asm	/^c01071bb:	c0 $/;"	l
c01071bc	obj/kernel.asm	/^c01071bc:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c01071c3	obj/kernel.asm	/^c01071c3:	00 $/;"	l
c01071c4	obj/kernel.asm	/^c01071c4:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01071cb	obj/kernel.asm	/^c01071cb:	e8 f8 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c01071d0	obj/kernel.asm	/^c01071d0:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01071d5	obj/kernel.asm	/^c01071d5:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01071d8	obj/kernel.asm	/^c01071d8:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c01071dd	obj/kernel.asm	/^c01071dd:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01071e0	obj/kernel.asm	/^c01071e0:	74 24                	je     c0107206 <check_content_set+0xa8>$/;"	l
c01071e2	obj/kernel.asm	/^c01071e2:	c7 44 24 0c bd 6b 11 	movl   $0xc0116bbd,0xc(%esp)$/;"	l
c01071e9	obj/kernel.asm	/^c01071e9:	c0 $/;"	l
c01071ea	obj/kernel.asm	/^c01071ea:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01071f1	obj/kernel.asm	/^c01071f1:	c0 $/;"	l
c01071f2	obj/kernel.asm	/^c01071f2:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
c01071f9	obj/kernel.asm	/^c01071f9:	00 $/;"	l
c01071fa	obj/kernel.asm	/^c01071fa:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107201	obj/kernel.asm	/^c0107201:	e8 c2 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107206	obj/kernel.asm	/^c0107206:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c010720b	obj/kernel.asm	/^c010720b:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010720e	obj/kernel.asm	/^c010720e:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107213	obj/kernel.asm	/^c0107213:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0107216	obj/kernel.asm	/^c0107216:	74 24                	je     c010723c <check_content_set+0xde>$/;"	l
c0107218	obj/kernel.asm	/^c0107218:	c7 44 24 0c bd 6b 11 	movl   $0xc0116bbd,0xc(%esp)$/;"	l
c010721f	obj/kernel.asm	/^c010721f:	c0 $/;"	l
c0107220	obj/kernel.asm	/^c0107220:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107227	obj/kernel.asm	/^c0107227:	c0 $/;"	l
c0107228	obj/kernel.asm	/^c0107228:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
c010722f	obj/kernel.asm	/^c010722f:	00 $/;"	l
c0107230	obj/kernel.asm	/^c0107230:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107237	obj/kernel.asm	/^c0107237:	e8 8c 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010723c	obj/kernel.asm	/^c010723c:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107241	obj/kernel.asm	/^c0107241:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107244	obj/kernel.asm	/^c0107244:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107249	obj/kernel.asm	/^c0107249:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010724c	obj/kernel.asm	/^c010724c:	74 24                	je     c0107272 <check_content_set+0x114>$/;"	l
c010724e	obj/kernel.asm	/^c010724e:	c7 44 24 0c cc 6b 11 	movl   $0xc0116bcc,0xc(%esp)$/;"	l
c0107255	obj/kernel.asm	/^c0107255:	c0 $/;"	l
c0107256	obj/kernel.asm	/^c0107256:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c010725d	obj/kernel.asm	/^c010725d:	c0 $/;"	l
c010725e	obj/kernel.asm	/^c010725e:	c7 44 24 04 9a 00 00 	movl   $0x9a,0x4(%esp)$/;"	l
c0107265	obj/kernel.asm	/^c0107265:	00 $/;"	l
c0107266	obj/kernel.asm	/^c0107266:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c010726d	obj/kernel.asm	/^c010726d:	e8 56 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107272	obj/kernel.asm	/^c0107272:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c0107277	obj/kernel.asm	/^c0107277:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c010727a	obj/kernel.asm	/^c010727a:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c010727f	obj/kernel.asm	/^c010727f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0107282	obj/kernel.asm	/^c0107282:	74 24                	je     c01072a8 <check_content_set+0x14a>$/;"	l
c0107284	obj/kernel.asm	/^c0107284:	c7 44 24 0c cc 6b 11 	movl   $0xc0116bcc,0xc(%esp)$/;"	l
c010728b	obj/kernel.asm	/^c010728b:	c0 $/;"	l
c010728c	obj/kernel.asm	/^c010728c:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107293	obj/kernel.asm	/^c0107293:	c0 $/;"	l
c0107294	obj/kernel.asm	/^c0107294:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)$/;"	l
c010729b	obj/kernel.asm	/^c010729b:	00 $/;"	l
c010729c	obj/kernel.asm	/^c010729c:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01072a3	obj/kernel.asm	/^c01072a3:	e8 20 9c ff ff       	call   c0100ec8 <__panic>$/;"	l
c01072a8	obj/kernel.asm	/^c01072a8:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c01072ad	obj/kernel.asm	/^c01072ad:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01072b0	obj/kernel.asm	/^c01072b0:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c01072b5	obj/kernel.asm	/^c01072b5:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01072b8	obj/kernel.asm	/^c01072b8:	74 24                	je     c01072de <check_content_set+0x180>$/;"	l
c01072ba	obj/kernel.asm	/^c01072ba:	c7 44 24 0c db 6b 11 	movl   $0xc0116bdb,0xc(%esp)$/;"	l
c01072c1	obj/kernel.asm	/^c01072c1:	c0 $/;"	l
c01072c2	obj/kernel.asm	/^c01072c2:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01072c9	obj/kernel.asm	/^c01072c9:	c0 $/;"	l
c01072ca	obj/kernel.asm	/^c01072ca:	c7 44 24 04 9e 00 00 	movl   $0x9e,0x4(%esp)$/;"	l
c01072d1	obj/kernel.asm	/^c01072d1:	00 $/;"	l
c01072d2	obj/kernel.asm	/^c01072d2:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01072d9	obj/kernel.asm	/^c01072d9:	e8 ea 9b ff ff       	call   c0100ec8 <__panic>$/;"	l
c01072de	obj/kernel.asm	/^c01072de:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c01072e3	obj/kernel.asm	/^c01072e3:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01072e6	obj/kernel.asm	/^c01072e6:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c01072eb	obj/kernel.asm	/^c01072eb:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01072ee	obj/kernel.asm	/^c01072ee:	74 24                	je     c0107314 <check_content_set+0x1b6>$/;"	l
c01072f0	obj/kernel.asm	/^c01072f0:	c7 44 24 0c db 6b 11 	movl   $0xc0116bdb,0xc(%esp)$/;"	l
c01072f7	obj/kernel.asm	/^c01072f7:	c0 $/;"	l
c01072f8	obj/kernel.asm	/^c01072f8:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01072ff	obj/kernel.asm	/^c01072ff:	c0 $/;"	l
c0107300	obj/kernel.asm	/^c0107300:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c0107307	obj/kernel.asm	/^c0107307:	00 $/;"	l
c0107308	obj/kernel.asm	/^c0107308:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c010730f	obj/kernel.asm	/^c010730f:	e8 b4 9b ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107314	obj/kernel.asm	/^c0107314:	c9                   	leave  $/;"	l
c0107315	obj/kernel.asm	/^c0107315:	c3                   	ret    $/;"	l
c0107316	obj/kernel.asm	/^c0107316 <check_content_access>:$/;"	l
c0107316	obj/kernel.asm	/^c0107316:	55                   	push   %ebp$/;"	l
c0107317	obj/kernel.asm	/^c0107317:	89 e5                	mov    %esp,%ebp$/;"	l
c0107319	obj/kernel.asm	/^c0107319:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010731c	obj/kernel.asm	/^c010731c:	a1 14 ff 14 c0       	mov    0xc014ff14,%eax$/;"	l
c0107321	obj/kernel.asm	/^c0107321:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0107324	obj/kernel.asm	/^c0107324:	ff d0                	call   *%eax$/;"	l
c0107326	obj/kernel.asm	/^c0107326:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107329	obj/kernel.asm	/^c0107329:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010732c	obj/kernel.asm	/^c010732c:	c9                   	leave  $/;"	l
c010732d	obj/kernel.asm	/^c010732d:	c3                   	ret    $/;"	l
c010732e	obj/kernel.asm	/^c010732e <check_swap>:$/;"	l
c010732e	obj/kernel.asm	/^c010732e:	55                   	push   %ebp$/;"	l
c010732f	obj/kernel.asm	/^c010732f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107331	obj/kernel.asm	/^c0107331:	53                   	push   %ebx$/;"	l
c0107332	obj/kernel.asm	/^c0107332:	83 ec 74             	sub    $0x74,%esp$/;"	l
c0107335	obj/kernel.asm	/^c0107335:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010733c	obj/kernel.asm	/^c010733c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0107343	obj/kernel.asm	/^c0107343:	c7 45 e8 14 30 15 c0 	movl   $0xc0153014,-0x18(%ebp)$/;"	l
c010734a	obj/kernel.asm	/^c010734a:	eb 6b                	jmp    c01073b7 <check_swap+0x89>$/;"	l
c010734c	obj/kernel.asm	/^c010734c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010734f	obj/kernel.asm	/^c010734f:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107352	obj/kernel.asm	/^c0107352:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107355	obj/kernel.asm	/^c0107355:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107358	obj/kernel.asm	/^c0107358:	83 c0 04             	add    $0x4,%eax$/;"	l
c010735b	obj/kernel.asm	/^c010735b:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c0107362	obj/kernel.asm	/^c0107362:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0107365	obj/kernel.asm	/^c0107365:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0107368	obj/kernel.asm	/^c0107368:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c010736b	obj/kernel.asm	/^c010736b:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010736e	obj/kernel.asm	/^c010736e:	19 c0                	sbb    %eax,%eax$/;"	l
c0107370	obj/kernel.asm	/^c0107370:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0107373	obj/kernel.asm	/^c0107373:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0107377	obj/kernel.asm	/^c0107377:	0f 95 c0             	setne  %al$/;"	l
c010737a	obj/kernel.asm	/^c010737a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010737d	obj/kernel.asm	/^c010737d:	85 c0                	test   %eax,%eax$/;"	l
c010737f	obj/kernel.asm	/^c010737f:	75 24                	jne    c01073a5 <check_swap+0x77>$/;"	l
c0107381	obj/kernel.asm	/^c0107381:	c7 44 24 0c ea 6b 11 	movl   $0xc0116bea,0xc(%esp)$/;"	l
c0107388	obj/kernel.asm	/^c0107388:	c0 $/;"	l
c0107389	obj/kernel.asm	/^c0107389:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107390	obj/kernel.asm	/^c0107390:	c0 $/;"	l
c0107391	obj/kernel.asm	/^c0107391:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)$/;"	l
c0107398	obj/kernel.asm	/^c0107398:	00 $/;"	l
c0107399	obj/kernel.asm	/^c0107399:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01073a0	obj/kernel.asm	/^c01073a0:	e8 23 9b ff ff       	call   c0100ec8 <__panic>$/;"	l
c01073a5	obj/kernel.asm	/^c01073a5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01073a9	obj/kernel.asm	/^c01073a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01073ac	obj/kernel.asm	/^c01073ac:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01073af	obj/kernel.asm	/^c01073af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073b2	obj/kernel.asm	/^c01073b2:	01 d0                	add    %edx,%eax$/;"	l
c01073b4	obj/kernel.asm	/^c01073b4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01073b7	obj/kernel.asm	/^c01073b7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01073ba	obj/kernel.asm	/^c01073ba:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01073bd	obj/kernel.asm	/^c01073bd:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01073c0	obj/kernel.asm	/^c01073c0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01073c3	obj/kernel.asm	/^c01073c3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01073c6	obj/kernel.asm	/^c01073c6:	81 7d e8 14 30 15 c0 	cmpl   $0xc0153014,-0x18(%ebp)$/;"	l
c01073cd	obj/kernel.asm	/^c01073cd:	0f 85 79 ff ff ff    	jne    c010734c <check_swap+0x1e>$/;"	l
c01073d3	obj/kernel.asm	/^c01073d3:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01073d6	obj/kernel.asm	/^c01073d6:	e8 d2 dd ff ff       	call   c01051ad <nr_free_pages>$/;"	l
c01073db	obj/kernel.asm	/^c01073db:	39 c3                	cmp    %eax,%ebx$/;"	l
c01073dd	obj/kernel.asm	/^c01073dd:	74 24                	je     c0107403 <check_swap+0xd5>$/;"	l
c01073df	obj/kernel.asm	/^c01073df:	c7 44 24 0c fa 6b 11 	movl   $0xc0116bfa,0xc(%esp)$/;"	l
c01073e6	obj/kernel.asm	/^c01073e6:	c0 $/;"	l
c01073e7	obj/kernel.asm	/^c01073e7:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01073ee	obj/kernel.asm	/^c01073ee:	c0 $/;"	l
c01073ef	obj/kernel.asm	/^c01073ef:	c7 44 24 04 be 00 00 	movl   $0xbe,0x4(%esp)$/;"	l
c01073f6	obj/kernel.asm	/^c01073f6:	00 $/;"	l
c01073f7	obj/kernel.asm	/^c01073f7:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01073fe	obj/kernel.asm	/^c01073fe:	e8 c5 9a ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107403	obj/kernel.asm	/^c0107403:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107406	obj/kernel.asm	/^c0107406:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010740a	obj/kernel.asm	/^c010740a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010740d	obj/kernel.asm	/^c010740d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107411	obj/kernel.asm	/^c0107411:	c7 04 24 14 6c 11 c0 	movl   $0xc0116c14,(%esp)$/;"	l
c0107418	obj/kernel.asm	/^c0107418:	e8 48 8f ff ff       	call   c0100365 <cprintf>$/;"	l
c010741d	obj/kernel.asm	/^c010741d:	e8 b2 0a 00 00       	call   c0107ed4 <mm_create>$/;"	l
c0107422	obj/kernel.asm	/^c0107422:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107425	obj/kernel.asm	/^c0107425:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0107429	obj/kernel.asm	/^c0107429:	75 24                	jne    c010744f <check_swap+0x121>$/;"	l
c010742b	obj/kernel.asm	/^c010742b:	c7 44 24 0c 3a 6c 11 	movl   $0xc0116c3a,0xc(%esp)$/;"	l
c0107432	obj/kernel.asm	/^c0107432:	c0 $/;"	l
c0107433	obj/kernel.asm	/^c0107433:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c010743a	obj/kernel.asm	/^c010743a:	c0 $/;"	l
c010743b	obj/kernel.asm	/^c010743b:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)$/;"	l
c0107442	obj/kernel.asm	/^c0107442:	00 $/;"	l
c0107443	obj/kernel.asm	/^c0107443:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c010744a	obj/kernel.asm	/^c010744a:	e8 79 9a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010744f	obj/kernel.asm	/^c010744f:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c0107454	obj/kernel.asm	/^c0107454:	85 c0                	test   %eax,%eax$/;"	l
c0107456	obj/kernel.asm	/^c0107456:	74 24                	je     c010747c <check_swap+0x14e>$/;"	l
c0107458	obj/kernel.asm	/^c0107458:	c7 44 24 0c 45 6c 11 	movl   $0xc0116c45,0xc(%esp)$/;"	l
c010745f	obj/kernel.asm	/^c010745f:	c0 $/;"	l
c0107460	obj/kernel.asm	/^c0107460:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107467	obj/kernel.asm	/^c0107467:	c0 $/;"	l
c0107468	obj/kernel.asm	/^c0107468:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c010746f	obj/kernel.asm	/^c010746f:	00 $/;"	l
c0107470	obj/kernel.asm	/^c0107470:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107477	obj/kernel.asm	/^c0107477:	e8 4c 9a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010747c	obj/kernel.asm	/^c010747c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010747f	obj/kernel.asm	/^c010747f:	a3 0c 31 15 c0       	mov    %eax,0xc015310c$/;"	l
c0107484	obj/kernel.asm	/^c0107484:	8b 15 84 fe 14 c0    	mov    0xc014fe84,%edx$/;"	l
c010748a	obj/kernel.asm	/^c010748a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010748d	obj/kernel.asm	/^c010748d:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0107490	obj/kernel.asm	/^c0107490:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107493	obj/kernel.asm	/^c0107493:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107496	obj/kernel.asm	/^c0107496:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107499	obj/kernel.asm	/^c0107499:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010749c	obj/kernel.asm	/^c010749c:	8b 00                	mov    (%eax),%eax$/;"	l
c010749e	obj/kernel.asm	/^c010749e:	85 c0                	test   %eax,%eax$/;"	l
c01074a0	obj/kernel.asm	/^c01074a0:	74 24                	je     c01074c6 <check_swap+0x198>$/;"	l
c01074a2	obj/kernel.asm	/^c01074a2:	c7 44 24 0c 5d 6c 11 	movl   $0xc0116c5d,0xc(%esp)$/;"	l
c01074a9	obj/kernel.asm	/^c01074a9:	c0 $/;"	l
c01074aa	obj/kernel.asm	/^c01074aa:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01074b1	obj/kernel.asm	/^c01074b1:	c0 $/;"	l
c01074b2	obj/kernel.asm	/^c01074b2:	c7 44 24 04 cb 00 00 	movl   $0xcb,0x4(%esp)$/;"	l
c01074b9	obj/kernel.asm	/^c01074b9:	00 $/;"	l
c01074ba	obj/kernel.asm	/^c01074ba:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01074c1	obj/kernel.asm	/^c01074c1:	e8 02 9a ff ff       	call   c0100ec8 <__panic>$/;"	l
c01074c6	obj/kernel.asm	/^c01074c6:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
c01074cd	obj/kernel.asm	/^c01074cd:	00 $/;"	l
c01074ce	obj/kernel.asm	/^c01074ce:	c7 44 24 04 00 60 00 	movl   $0x6000,0x4(%esp)$/;"	l
c01074d5	obj/kernel.asm	/^c01074d5:	00 $/;"	l
c01074d6	obj/kernel.asm	/^c01074d6:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c01074dd	obj/kernel.asm	/^c01074dd:	e8 97 0a 00 00       	call   c0107f79 <vma_create>$/;"	l
c01074e2	obj/kernel.asm	/^c01074e2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01074e5	obj/kernel.asm	/^c01074e5:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c01074e9	obj/kernel.asm	/^c01074e9:	75 24                	jne    c010750f <check_swap+0x1e1>$/;"	l
c01074eb	obj/kernel.asm	/^c01074eb:	c7 44 24 0c 6b 6c 11 	movl   $0xc0116c6b,0xc(%esp)$/;"	l
c01074f2	obj/kernel.asm	/^c01074f2:	c0 $/;"	l
c01074f3	obj/kernel.asm	/^c01074f3:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01074fa	obj/kernel.asm	/^c01074fa:	c0 $/;"	l
c01074fb	obj/kernel.asm	/^c01074fb:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
c0107502	obj/kernel.asm	/^c0107502:	00 $/;"	l
c0107503	obj/kernel.asm	/^c0107503:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c010750a	obj/kernel.asm	/^c010750a:	e8 b9 99 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010750f	obj/kernel.asm	/^c010750f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107512	obj/kernel.asm	/^c0107512:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107516	obj/kernel.asm	/^c0107516:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107519	obj/kernel.asm	/^c0107519:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010751c	obj/kernel.asm	/^c010751c:	e8 e8 0b 00 00       	call   c0108109 <insert_vma_struct>$/;"	l
c0107521	obj/kernel.asm	/^c0107521:	c7 04 24 78 6c 11 c0 	movl   $0xc0116c78,(%esp)$/;"	l
c0107528	obj/kernel.asm	/^c0107528:	e8 38 8e ff ff       	call   c0100365 <cprintf>$/;"	l
c010752d	obj/kernel.asm	/^c010752d:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0107534	obj/kernel.asm	/^c0107534:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107537	obj/kernel.asm	/^c0107537:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010753a	obj/kernel.asm	/^c010753a:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0107541	obj/kernel.asm	/^c0107541:	00 $/;"	l
c0107542	obj/kernel.asm	/^c0107542:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0107549	obj/kernel.asm	/^c0107549:	00 $/;"	l
c010754a	obj/kernel.asm	/^c010754a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010754d	obj/kernel.asm	/^c010754d:	e8 25 e3 ff ff       	call   c0105877 <get_pte>$/;"	l
c0107552	obj/kernel.asm	/^c0107552:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107555	obj/kernel.asm	/^c0107555:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c0107559	obj/kernel.asm	/^c0107559:	75 24                	jne    c010757f <check_swap+0x251>$/;"	l
c010755b	obj/kernel.asm	/^c010755b:	c7 44 24 0c ac 6c 11 	movl   $0xc0116cac,0xc(%esp)$/;"	l
c0107562	obj/kernel.asm	/^c0107562:	c0 $/;"	l
c0107563	obj/kernel.asm	/^c0107563:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c010756a	obj/kernel.asm	/^c010756a:	c0 $/;"	l
c010756b	obj/kernel.asm	/^c010756b:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c0107572	obj/kernel.asm	/^c0107572:	00 $/;"	l
c0107573	obj/kernel.asm	/^c0107573:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c010757a	obj/kernel.asm	/^c010757a:	e8 49 99 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010757f	obj/kernel.asm	/^c010757f:	c7 04 24 c0 6c 11 c0 	movl   $0xc0116cc0,(%esp)$/;"	l
c0107586	obj/kernel.asm	/^c0107586:	e8 da 8d ff ff       	call   c0100365 <cprintf>$/;"	l
c010758b	obj/kernel.asm	/^c010758b:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107592	obj/kernel.asm	/^c0107592:	e9 a3 00 00 00       	jmp    c010763a <check_swap+0x30c>$/;"	l
c0107597	obj/kernel.asm	/^c0107597:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010759e	obj/kernel.asm	/^c010759e:	e8 6d db ff ff       	call   c0105110 <alloc_pages>$/;"	l
c01075a3	obj/kernel.asm	/^c01075a3:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01075a6	obj/kernel.asm	/^c01075a6:	89 04 95 40 30 15 c0 	mov    %eax,-0x3feacfc0(,%edx,4)$/;"	l
c01075ad	obj/kernel.asm	/^c01075ad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01075b0	obj/kernel.asm	/^c01075b0:	8b 04 85 40 30 15 c0 	mov    -0x3feacfc0(,%eax,4),%eax$/;"	l
c01075b7	obj/kernel.asm	/^c01075b7:	85 c0                	test   %eax,%eax$/;"	l
c01075b9	obj/kernel.asm	/^c01075b9:	75 24                	jne    c01075df <check_swap+0x2b1>$/;"	l
c01075bb	obj/kernel.asm	/^c01075bb:	c7 44 24 0c e4 6c 11 	movl   $0xc0116ce4,0xc(%esp)$/;"	l
c01075c2	obj/kernel.asm	/^c01075c2:	c0 $/;"	l
c01075c3	obj/kernel.asm	/^c01075c3:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01075ca	obj/kernel.asm	/^c01075ca:	c0 $/;"	l
c01075cb	obj/kernel.asm	/^c01075cb:	c7 44 24 04 db 00 00 	movl   $0xdb,0x4(%esp)$/;"	l
c01075d2	obj/kernel.asm	/^c01075d2:	00 $/;"	l
c01075d3	obj/kernel.asm	/^c01075d3:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01075da	obj/kernel.asm	/^c01075da:	e8 e9 98 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01075df	obj/kernel.asm	/^c01075df:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01075e2	obj/kernel.asm	/^c01075e2:	8b 04 85 40 30 15 c0 	mov    -0x3feacfc0(,%eax,4),%eax$/;"	l
c01075e9	obj/kernel.asm	/^c01075e9:	83 c0 04             	add    $0x4,%eax$/;"	l
c01075ec	obj/kernel.asm	/^c01075ec:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c01075f3	obj/kernel.asm	/^c01075f3:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01075f6	obj/kernel.asm	/^c01075f6:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01075f9	obj/kernel.asm	/^c01075f9:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01075fc	obj/kernel.asm	/^c01075fc:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01075ff	obj/kernel.asm	/^c01075ff:	19 c0                	sbb    %eax,%eax$/;"	l
c0107601	obj/kernel.asm	/^c0107601:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107604	obj/kernel.asm	/^c0107604:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c0107608	obj/kernel.asm	/^c0107608:	0f 95 c0             	setne  %al$/;"	l
c010760b	obj/kernel.asm	/^c010760b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010760e	obj/kernel.asm	/^c010760e:	85 c0                	test   %eax,%eax$/;"	l
c0107610	obj/kernel.asm	/^c0107610:	74 24                	je     c0107636 <check_swap+0x308>$/;"	l
c0107612	obj/kernel.asm	/^c0107612:	c7 44 24 0c f8 6c 11 	movl   $0xc0116cf8,0xc(%esp)$/;"	l
c0107619	obj/kernel.asm	/^c0107619:	c0 $/;"	l
c010761a	obj/kernel.asm	/^c010761a:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107621	obj/kernel.asm	/^c0107621:	c0 $/;"	l
c0107622	obj/kernel.asm	/^c0107622:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)$/;"	l
c0107629	obj/kernel.asm	/^c0107629:	00 $/;"	l
c010762a	obj/kernel.asm	/^c010762a:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107631	obj/kernel.asm	/^c0107631:	e8 92 98 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107636	obj/kernel.asm	/^c0107636:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c010763a	obj/kernel.asm	/^c010763a:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c010763e	obj/kernel.asm	/^c010763e:	0f 8e 53 ff ff ff    	jle    c0107597 <check_swap+0x269>$/;"	l
c0107644	obj/kernel.asm	/^c0107644:	a1 14 30 15 c0       	mov    0xc0153014,%eax$/;"	l
c0107649	obj/kernel.asm	/^c0107649:	8b 15 18 30 15 c0    	mov    0xc0153018,%edx$/;"	l
c010764f	obj/kernel.asm	/^c010764f:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0107652	obj/kernel.asm	/^c0107652:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c0107655	obj/kernel.asm	/^c0107655:	c7 45 a8 14 30 15 c0 	movl   $0xc0153014,-0x58(%ebp)$/;"	l
c010765c	obj/kernel.asm	/^c010765c:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010765f	obj/kernel.asm	/^c010765f:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0107662	obj/kernel.asm	/^c0107662:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107665	obj/kernel.asm	/^c0107665:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0107668	obj/kernel.asm	/^c0107668:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010766b	obj/kernel.asm	/^c010766b:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010766e	obj/kernel.asm	/^c010766e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107670	obj/kernel.asm	/^c0107670:	c7 45 a4 14 30 15 c0 	movl   $0xc0153014,-0x5c(%ebp)$/;"	l
c0107677	obj/kernel.asm	/^c0107677:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010767a	obj/kernel.asm	/^c010767a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010767d	obj/kernel.asm	/^c010767d:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0107680	obj/kernel.asm	/^c0107680:	0f 94 c0             	sete   %al$/;"	l
c0107683	obj/kernel.asm	/^c0107683:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107686	obj/kernel.asm	/^c0107686:	85 c0                	test   %eax,%eax$/;"	l
c0107688	obj/kernel.asm	/^c0107688:	75 24                	jne    c01076ae <check_swap+0x380>$/;"	l
c010768a	obj/kernel.asm	/^c010768a:	c7 44 24 0c 13 6d 11 	movl   $0xc0116d13,0xc(%esp)$/;"	l
c0107691	obj/kernel.asm	/^c0107691:	c0 $/;"	l
c0107692	obj/kernel.asm	/^c0107692:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107699	obj/kernel.asm	/^c0107699:	c0 $/;"	l
c010769a	obj/kernel.asm	/^c010769a:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
c01076a1	obj/kernel.asm	/^c01076a1:	00 $/;"	l
c01076a2	obj/kernel.asm	/^c01076a2:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01076a9	obj/kernel.asm	/^c01076a9:	e8 1a 98 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01076ae	obj/kernel.asm	/^c01076ae:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c01076b3	obj/kernel.asm	/^c01076b3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01076b6	obj/kernel.asm	/^c01076b6:	c7 05 1c 30 15 c0 00 	movl   $0x0,0xc015301c$/;"	l
c01076bd	obj/kernel.asm	/^c01076bd:	00 00 00 $/;"	l
c01076c0	obj/kernel.asm	/^c01076c0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01076c7	obj/kernel.asm	/^c01076c7:	eb 1e                	jmp    c01076e7 <check_swap+0x3b9>$/;"	l
c01076c9	obj/kernel.asm	/^c01076c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01076cc	obj/kernel.asm	/^c01076cc:	8b 04 85 40 30 15 c0 	mov    -0x3feacfc0(,%eax,4),%eax$/;"	l
c01076d3	obj/kernel.asm	/^c01076d3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01076da	obj/kernel.asm	/^c01076da:	00 $/;"	l
c01076db	obj/kernel.asm	/^c01076db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01076de	obj/kernel.asm	/^c01076de:	e8 98 da ff ff       	call   c010517b <free_pages>$/;"	l
c01076e3	obj/kernel.asm	/^c01076e3:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01076e7	obj/kernel.asm	/^c01076e7:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c01076eb	obj/kernel.asm	/^c01076eb:	7e dc                	jle    c01076c9 <check_swap+0x39b>$/;"	l
c01076ed	obj/kernel.asm	/^c01076ed:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c01076f2	obj/kernel.asm	/^c01076f2:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01076f5	obj/kernel.asm	/^c01076f5:	74 24                	je     c010771b <check_swap+0x3ed>$/;"	l
c01076f7	obj/kernel.asm	/^c01076f7:	c7 44 24 0c 2c 6d 11 	movl   $0xc0116d2c,0xc(%esp)$/;"	l
c01076fe	obj/kernel.asm	/^c01076fe:	c0 $/;"	l
c01076ff	obj/kernel.asm	/^c01076ff:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107706	obj/kernel.asm	/^c0107706:	c0 $/;"	l
c0107707	obj/kernel.asm	/^c0107707:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c010770e	obj/kernel.asm	/^c010770e:	00 $/;"	l
c010770f	obj/kernel.asm	/^c010770f:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107716	obj/kernel.asm	/^c0107716:	e8 ad 97 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010771b	obj/kernel.asm	/^c010771b:	c7 04 24 50 6d 11 c0 	movl   $0xc0116d50,(%esp)$/;"	l
c0107722	obj/kernel.asm	/^c0107722:	e8 3e 8c ff ff       	call   c0100365 <cprintf>$/;"	l
c0107727	obj/kernel.asm	/^c0107727:	c7 05 18 ff 14 c0 00 	movl   $0x0,0xc014ff18$/;"	l
c010772e	obj/kernel.asm	/^c010772e:	00 00 00 $/;"	l
c0107731	obj/kernel.asm	/^c0107731:	e8 28 fa ff ff       	call   c010715e <check_content_set>$/;"	l
c0107736	obj/kernel.asm	/^c0107736:	a1 1c 30 15 c0       	mov    0xc015301c,%eax$/;"	l
c010773b	obj/kernel.asm	/^c010773b:	85 c0                	test   %eax,%eax$/;"	l
c010773d	obj/kernel.asm	/^c010773d:	74 24                	je     c0107763 <check_swap+0x435>$/;"	l
c010773f	obj/kernel.asm	/^c010773f:	c7 44 24 0c 77 6d 11 	movl   $0xc0116d77,0xc(%esp)$/;"	l
c0107746	obj/kernel.asm	/^c0107746:	c0 $/;"	l
c0107747	obj/kernel.asm	/^c0107747:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c010774e	obj/kernel.asm	/^c010774e:	c0 $/;"	l
c010774f	obj/kernel.asm	/^c010774f:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c0107756	obj/kernel.asm	/^c0107756:	00 $/;"	l
c0107757	obj/kernel.asm	/^c0107757:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c010775e	obj/kernel.asm	/^c010775e:	e8 65 97 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107763	obj/kernel.asm	/^c0107763:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010776a	obj/kernel.asm	/^c010776a:	eb 26                	jmp    c0107792 <check_swap+0x464>$/;"	l
c010776c	obj/kernel.asm	/^c010776c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010776f	obj/kernel.asm	/^c010776f:	c7 04 85 60 30 15 c0 	movl   $0xffffffff,-0x3feacfa0(,%eax,4)$/;"	l
c0107776	obj/kernel.asm	/^c0107776:	ff ff ff ff $/;"	l
c010777a	obj/kernel.asm	/^c010777a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010777d	obj/kernel.asm	/^c010777d:	8b 14 85 60 30 15 c0 	mov    -0x3feacfa0(,%eax,4),%edx$/;"	l
c0107784	obj/kernel.asm	/^c0107784:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107787	obj/kernel.asm	/^c0107787:	89 14 85 a0 30 15 c0 	mov    %edx,-0x3feacf60(,%eax,4)$/;"	l
c010778e	obj/kernel.asm	/^c010778e:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0107792	obj/kernel.asm	/^c0107792:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0107796	obj/kernel.asm	/^c0107796:	7e d4                	jle    c010776c <check_swap+0x43e>$/;"	l
c0107798	obj/kernel.asm	/^c0107798:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010779f	obj/kernel.asm	/^c010779f:	e9 eb 00 00 00       	jmp    c010788f <check_swap+0x561>$/;"	l
c01077a4	obj/kernel.asm	/^c01077a4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077a7	obj/kernel.asm	/^c01077a7:	c7 04 85 f4 30 15 c0 	movl   $0x0,-0x3feacf0c(,%eax,4)$/;"	l
c01077ae	obj/kernel.asm	/^c01077ae:	00 00 00 00 $/;"	l
c01077b2	obj/kernel.asm	/^c01077b2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077b5	obj/kernel.asm	/^c01077b5:	83 c0 01             	add    $0x1,%eax$/;"	l
c01077b8	obj/kernel.asm	/^c01077b8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01077bb	obj/kernel.asm	/^c01077bb:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01077c2	obj/kernel.asm	/^c01077c2:	00 $/;"	l
c01077c3	obj/kernel.asm	/^c01077c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01077c7	obj/kernel.asm	/^c01077c7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01077ca	obj/kernel.asm	/^c01077ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01077cd	obj/kernel.asm	/^c01077cd:	e8 a5 e0 ff ff       	call   c0105877 <get_pte>$/;"	l
c01077d2	obj/kernel.asm	/^c01077d2:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01077d5	obj/kernel.asm	/^c01077d5:	89 04 95 f4 30 15 c0 	mov    %eax,-0x3feacf0c(,%edx,4)$/;"	l
c01077dc	obj/kernel.asm	/^c01077dc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077df	obj/kernel.asm	/^c01077df:	8b 04 85 f4 30 15 c0 	mov    -0x3feacf0c(,%eax,4),%eax$/;"	l
c01077e6	obj/kernel.asm	/^c01077e6:	85 c0                	test   %eax,%eax$/;"	l
c01077e8	obj/kernel.asm	/^c01077e8:	75 24                	jne    c010780e <check_swap+0x4e0>$/;"	l
c01077ea	obj/kernel.asm	/^c01077ea:	c7 44 24 0c 84 6d 11 	movl   $0xc0116d84,0xc(%esp)$/;"	l
c01077f1	obj/kernel.asm	/^c01077f1:	c0 $/;"	l
c01077f2	obj/kernel.asm	/^c01077f2:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01077f9	obj/kernel.asm	/^c01077f9:	c0 $/;"	l
c01077fa	obj/kernel.asm	/^c01077fa:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c0107801	obj/kernel.asm	/^c0107801:	00 $/;"	l
c0107802	obj/kernel.asm	/^c0107802:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107809	obj/kernel.asm	/^c0107809:	e8 ba 96 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010780e	obj/kernel.asm	/^c010780e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107811	obj/kernel.asm	/^c0107811:	8b 04 85 f4 30 15 c0 	mov    -0x3feacf0c(,%eax,4),%eax$/;"	l
c0107818	obj/kernel.asm	/^c0107818:	8b 00                	mov    (%eax),%eax$/;"	l
c010781a	obj/kernel.asm	/^c010781a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010781d	obj/kernel.asm	/^c010781d:	e8 87 f5 ff ff       	call   c0106da9 <pte2page>$/;"	l
c0107822	obj/kernel.asm	/^c0107822:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107825	obj/kernel.asm	/^c0107825:	8b 14 95 40 30 15 c0 	mov    -0x3feacfc0(,%edx,4),%edx$/;"	l
c010782c	obj/kernel.asm	/^c010782c:	39 d0                	cmp    %edx,%eax$/;"	l
c010782e	obj/kernel.asm	/^c010782e:	74 24                	je     c0107854 <check_swap+0x526>$/;"	l
c0107830	obj/kernel.asm	/^c0107830:	c7 44 24 0c 9c 6d 11 	movl   $0xc0116d9c,0xc(%esp)$/;"	l
c0107837	obj/kernel.asm	/^c0107837:	c0 $/;"	l
c0107838	obj/kernel.asm	/^c0107838:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c010783f	obj/kernel.asm	/^c010783f:	c0 $/;"	l
c0107840	obj/kernel.asm	/^c0107840:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c0107847	obj/kernel.asm	/^c0107847:	00 $/;"	l
c0107848	obj/kernel.asm	/^c0107848:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c010784f	obj/kernel.asm	/^c010784f:	e8 74 96 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107854	obj/kernel.asm	/^c0107854:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107857	obj/kernel.asm	/^c0107857:	8b 04 85 f4 30 15 c0 	mov    -0x3feacf0c(,%eax,4),%eax$/;"	l
c010785e	obj/kernel.asm	/^c010785e:	8b 00                	mov    (%eax),%eax$/;"	l
c0107860	obj/kernel.asm	/^c0107860:	83 e0 01             	and    $0x1,%eax$/;"	l
c0107863	obj/kernel.asm	/^c0107863:	85 c0                	test   %eax,%eax$/;"	l
c0107865	obj/kernel.asm	/^c0107865:	75 24                	jne    c010788b <check_swap+0x55d>$/;"	l
c0107867	obj/kernel.asm	/^c0107867:	c7 44 24 0c c4 6d 11 	movl   $0xc0116dc4,0xc(%esp)$/;"	l
c010786e	obj/kernel.asm	/^c010786e:	c0 $/;"	l
c010786f	obj/kernel.asm	/^c010786f:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c0107876	obj/kernel.asm	/^c0107876:	c0 $/;"	l
c0107877	obj/kernel.asm	/^c0107877:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c010787e	obj/kernel.asm	/^c010787e:	00 $/;"	l
c010787f	obj/kernel.asm	/^c010787f:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c0107886	obj/kernel.asm	/^c0107886:	e8 3d 96 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010788b	obj/kernel.asm	/^c010788b:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c010788f	obj/kernel.asm	/^c010788f:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0107893	obj/kernel.asm	/^c0107893:	0f 8e 0b ff ff ff    	jle    c01077a4 <check_swap+0x476>$/;"	l
c0107899	obj/kernel.asm	/^c0107899:	c7 04 24 e0 6d 11 c0 	movl   $0xc0116de0,(%esp)$/;"	l
c01078a0	obj/kernel.asm	/^c01078a0:	e8 c0 8a ff ff       	call   c0100365 <cprintf>$/;"	l
c01078a5	obj/kernel.asm	/^c01078a5:	e8 6c fa ff ff       	call   c0107316 <check_content_access>$/;"	l
c01078aa	obj/kernel.asm	/^c01078aa:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01078ad	obj/kernel.asm	/^c01078ad:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c01078b1	obj/kernel.asm	/^c01078b1:	74 24                	je     c01078d7 <check_swap+0x5a9>$/;"	l
c01078b3	obj/kernel.asm	/^c01078b3:	c7 44 24 0c 06 6e 11 	movl   $0xc0116e06,0xc(%esp)$/;"	l
c01078ba	obj/kernel.asm	/^c01078ba:	c0 $/;"	l
c01078bb	obj/kernel.asm	/^c01078bb:	c7 44 24 08 ee 6a 11 	movl   $0xc0116aee,0x8(%esp)$/;"	l
c01078c2	obj/kernel.asm	/^c01078c2:	c0 $/;"	l
c01078c3	obj/kernel.asm	/^c01078c3:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c01078ca	obj/kernel.asm	/^c01078ca:	00 $/;"	l
c01078cb	obj/kernel.asm	/^c01078cb:	c7 04 24 88 6a 11 c0 	movl   $0xc0116a88,(%esp)$/;"	l
c01078d2	obj/kernel.asm	/^c01078d2:	e8 f1 95 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01078d7	obj/kernel.asm	/^c01078d7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01078de	obj/kernel.asm	/^c01078de:	eb 1e                	jmp    c01078fe <check_swap+0x5d0>$/;"	l
c01078e0	obj/kernel.asm	/^c01078e0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01078e3	obj/kernel.asm	/^c01078e3:	8b 04 85 40 30 15 c0 	mov    -0x3feacfc0(,%eax,4),%eax$/;"	l
c01078ea	obj/kernel.asm	/^c01078ea:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01078f1	obj/kernel.asm	/^c01078f1:	00 $/;"	l
c01078f2	obj/kernel.asm	/^c01078f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01078f5	obj/kernel.asm	/^c01078f5:	e8 81 d8 ff ff       	call   c010517b <free_pages>$/;"	l
c01078fa	obj/kernel.asm	/^c01078fa:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01078fe	obj/kernel.asm	/^c01078fe:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0107902	obj/kernel.asm	/^c0107902:	7e dc                	jle    c01078e0 <check_swap+0x5b2>$/;"	l
c0107904	obj/kernel.asm	/^c0107904:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107907	obj/kernel.asm	/^c0107907:	8b 00                	mov    (%eax),%eax$/;"	l
c0107909	obj/kernel.asm	/^c0107909:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010790c	obj/kernel.asm	/^c010790c:	e8 d6 f4 ff ff       	call   c0106de7 <pde2page>$/;"	l
c0107911	obj/kernel.asm	/^c0107911:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0107918	obj/kernel.asm	/^c0107918:	00 $/;"	l
c0107919	obj/kernel.asm	/^c0107919:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010791c	obj/kernel.asm	/^c010791c:	e8 5a d8 ff ff       	call   c010517b <free_pages>$/;"	l
c0107921	obj/kernel.asm	/^c0107921:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107924	obj/kernel.asm	/^c0107924:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010792a	obj/kernel.asm	/^c010792a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010792d	obj/kernel.asm	/^c010792d:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0107934	obj/kernel.asm	/^c0107934:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107937	obj/kernel.asm	/^c0107937:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010793a	obj/kernel.asm	/^c010793a:	e8 fa 08 00 00       	call   c0108239 <mm_destroy>$/;"	l
c010793f	obj/kernel.asm	/^c010793f:	c7 05 0c 31 15 c0 00 	movl   $0x0,0xc015310c$/;"	l
c0107946	obj/kernel.asm	/^c0107946:	00 00 00 $/;"	l
c0107949	obj/kernel.asm	/^c0107949:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010794c	obj/kernel.asm	/^c010794c:	a3 1c 30 15 c0       	mov    %eax,0xc015301c$/;"	l
c0107951	obj/kernel.asm	/^c0107951:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0107954	obj/kernel.asm	/^c0107954:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c0107957	obj/kernel.asm	/^c0107957:	a3 14 30 15 c0       	mov    %eax,0xc0153014$/;"	l
c010795c	obj/kernel.asm	/^c010795c:	89 15 18 30 15 c0    	mov    %edx,0xc0153018$/;"	l
c0107962	obj/kernel.asm	/^c0107962:	c7 45 e8 14 30 15 c0 	movl   $0xc0153014,-0x18(%ebp)$/;"	l
c0107969	obj/kernel.asm	/^c0107969:	eb 1d                	jmp    c0107988 <check_swap+0x65a>$/;"	l
c010796b	obj/kernel.asm	/^c010796b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010796e	obj/kernel.asm	/^c010796e:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107971	obj/kernel.asm	/^c0107971:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107974	obj/kernel.asm	/^c0107974:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0107978	obj/kernel.asm	/^c0107978:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010797b	obj/kernel.asm	/^c010797b:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010797e	obj/kernel.asm	/^c010797e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107981	obj/kernel.asm	/^c0107981:	29 c2                	sub    %eax,%edx$/;"	l
c0107983	obj/kernel.asm	/^c0107983:	89 d0                	mov    %edx,%eax$/;"	l
c0107985	obj/kernel.asm	/^c0107985:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107988	obj/kernel.asm	/^c0107988:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010798b	obj/kernel.asm	/^c010798b:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c010798e	obj/kernel.asm	/^c010798e:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0107991	obj/kernel.asm	/^c0107991:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107994	obj/kernel.asm	/^c0107994:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107997	obj/kernel.asm	/^c0107997:	81 7d e8 14 30 15 c0 	cmpl   $0xc0153014,-0x18(%ebp)$/;"	l
c010799e	obj/kernel.asm	/^c010799e:	75 cb                	jne    c010796b <check_swap+0x63d>$/;"	l
c01079a0	obj/kernel.asm	/^c01079a0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01079a3	obj/kernel.asm	/^c01079a3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01079a7	obj/kernel.asm	/^c01079a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079aa	obj/kernel.asm	/^c01079aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01079ae	obj/kernel.asm	/^c01079ae:	c7 04 24 0d 6e 11 c0 	movl   $0xc0116e0d,(%esp)$/;"	l
c01079b5	obj/kernel.asm	/^c01079b5:	e8 ab 89 ff ff       	call   c0100365 <cprintf>$/;"	l
c01079ba	obj/kernel.asm	/^c01079ba:	c7 04 24 27 6e 11 c0 	movl   $0xc0116e27,(%esp)$/;"	l
c01079c1	obj/kernel.asm	/^c01079c1:	e8 9f 89 ff ff       	call   c0100365 <cprintf>$/;"	l
c01079c6	obj/kernel.asm	/^c01079c6:	83 c4 74             	add    $0x74,%esp$/;"	l
c01079c9	obj/kernel.asm	/^c01079c9:	5b                   	pop    %ebx$/;"	l
c01079ca	obj/kernel.asm	/^c01079ca:	5d                   	pop    %ebp$/;"	l
c01079cb	obj/kernel.asm	/^c01079cb:	c3                   	ret    $/;"	l
c01079cc	obj/kernel.asm	/^c01079cc <_fifo_init_mm>:$/;"	l
c01079cc	obj/kernel.asm	/^c01079cc:	55                   	push   %ebp$/;"	l
c01079cd	obj/kernel.asm	/^c01079cd:	89 e5                	mov    %esp,%ebp$/;"	l
c01079cf	obj/kernel.asm	/^c01079cf:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01079d2	obj/kernel.asm	/^c01079d2:	c7 45 fc 04 31 15 c0 	movl   $0xc0153104,-0x4(%ebp)$/;"	l
c01079d9	obj/kernel.asm	/^c01079d9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01079dc	obj/kernel.asm	/^c01079dc:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01079df	obj/kernel.asm	/^c01079df:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01079e2	obj/kernel.asm	/^c01079e2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01079e5	obj/kernel.asm	/^c01079e5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01079e8	obj/kernel.asm	/^c01079e8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01079eb	obj/kernel.asm	/^c01079eb:	89 10                	mov    %edx,(%eax)$/;"	l
c01079ed	obj/kernel.asm	/^c01079ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01079f0	obj/kernel.asm	/^c01079f0:	c7 40 14 04 31 15 c0 	movl   $0xc0153104,0x14(%eax)$/;"	l
c01079f7	obj/kernel.asm	/^c01079f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01079fc	obj/kernel.asm	/^c01079fc:	c9                   	leave  $/;"	l
c01079fd	obj/kernel.asm	/^c01079fd:	c3                   	ret    $/;"	l
c01079fe	obj/kernel.asm	/^c01079fe <_fifo_map_swappable>:$/;"	l
c01079fe	obj/kernel.asm	/^c01079fe:	55                   	push   %ebp$/;"	l
c01079ff	obj/kernel.asm	/^c01079ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a01	obj/kernel.asm	/^c0107a01:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0107a04	obj/kernel.asm	/^c0107a04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a07	obj/kernel.asm	/^c0107a07:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107a0a	obj/kernel.asm	/^c0107a0a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107a0d	obj/kernel.asm	/^c0107a0d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107a10	obj/kernel.asm	/^c0107a10:	83 c0 14             	add    $0x14,%eax$/;"	l
c0107a13	obj/kernel.asm	/^c0107a13:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107a16	obj/kernel.asm	/^c0107a16:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107a1a	obj/kernel.asm	/^c0107a1a:	74 06                	je     c0107a22 <_fifo_map_swappable+0x24>$/;"	l
c0107a1c	obj/kernel.asm	/^c0107a1c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107a20	obj/kernel.asm	/^c0107a20:	75 24                	jne    c0107a46 <_fifo_map_swappable+0x48>$/;"	l
c0107a22	obj/kernel.asm	/^c0107a22:	c7 44 24 0c 40 6e 11 	movl   $0xc0116e40,0xc(%esp)$/;"	l
c0107a29	obj/kernel.asm	/^c0107a29:	c0 $/;"	l
c0107a2a	obj/kernel.asm	/^c0107a2a:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107a31	obj/kernel.asm	/^c0107a31:	c0 $/;"	l
c0107a32	obj/kernel.asm	/^c0107a32:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
c0107a39	obj/kernel.asm	/^c0107a39:	00 $/;"	l
c0107a3a	obj/kernel.asm	/^c0107a3a:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107a41	obj/kernel.asm	/^c0107a41:	e8 82 94 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107a46	obj/kernel.asm	/^c0107a46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a49	obj/kernel.asm	/^c0107a49:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107a4c	obj/kernel.asm	/^c0107a4c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107a4f	obj/kernel.asm	/^c0107a4f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107a52	obj/kernel.asm	/^c0107a52:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107a55	obj/kernel.asm	/^c0107a55:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107a58	obj/kernel.asm	/^c0107a58:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107a5b	obj/kernel.asm	/^c0107a5b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107a5e	obj/kernel.asm	/^c0107a5e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107a61	obj/kernel.asm	/^c0107a61:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107a64	obj/kernel.asm	/^c0107a64:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107a67	obj/kernel.asm	/^c0107a67:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c0107a6a	obj/kernel.asm	/^c0107a6a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107a6d	obj/kernel.asm	/^c0107a6d:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c0107a70	obj/kernel.asm	/^c0107a70:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107a73	obj/kernel.asm	/^c0107a73:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107a76	obj/kernel.asm	/^c0107a76:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0107a79	obj/kernel.asm	/^c0107a79:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a7b	obj/kernel.asm	/^c0107a7b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107a7e	obj/kernel.asm	/^c0107a7e:	8b 10                	mov    (%eax),%edx$/;"	l
c0107a80	obj/kernel.asm	/^c0107a80:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107a83	obj/kernel.asm	/^c0107a83:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a86	obj/kernel.asm	/^c0107a86:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a89	obj/kernel.asm	/^c0107a89:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107a8c	obj/kernel.asm	/^c0107a8c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a8f	obj/kernel.asm	/^c0107a8f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a92	obj/kernel.asm	/^c0107a92:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107a95	obj/kernel.asm	/^c0107a95:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a97	obj/kernel.asm	/^c0107a97:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107a9c	obj/kernel.asm	/^c0107a9c:	c9                   	leave  $/;"	l
c0107a9d	obj/kernel.asm	/^c0107a9d:	c3                   	ret    $/;"	l
c0107a9e	obj/kernel.asm	/^c0107a9e <_fifo_swap_out_victim>:$/;"	l
c0107a9e	obj/kernel.asm	/^c0107a9e:	55                   	push   %ebp$/;"	l
c0107a9f	obj/kernel.asm	/^c0107a9f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107aa1	obj/kernel.asm	/^c0107aa1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107aa4	obj/kernel.asm	/^c0107aa4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107aa7	obj/kernel.asm	/^c0107aa7:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107aaa	obj/kernel.asm	/^c0107aaa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107aad	obj/kernel.asm	/^c0107aad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107ab1	obj/kernel.asm	/^c0107ab1:	75 24                	jne    c0107ad7 <_fifo_swap_out_victim+0x39>$/;"	l
c0107ab3	obj/kernel.asm	/^c0107ab3:	c7 44 24 0c 87 6e 11 	movl   $0xc0116e87,0xc(%esp)$/;"	l
c0107aba	obj/kernel.asm	/^c0107aba:	c0 $/;"	l
c0107abb	obj/kernel.asm	/^c0107abb:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107ac2	obj/kernel.asm	/^c0107ac2:	c0 $/;"	l
c0107ac3	obj/kernel.asm	/^c0107ac3:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
c0107aca	obj/kernel.asm	/^c0107aca:	00 $/;"	l
c0107acb	obj/kernel.asm	/^c0107acb:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107ad2	obj/kernel.asm	/^c0107ad2:	e8 f1 93 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107ad7	obj/kernel.asm	/^c0107ad7:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0107adb	obj/kernel.asm	/^c0107adb:	74 24                	je     c0107b01 <_fifo_swap_out_victim+0x63>$/;"	l
c0107add	obj/kernel.asm	/^c0107add:	c7 44 24 0c 94 6e 11 	movl   $0xc0116e94,0xc(%esp)$/;"	l
c0107ae4	obj/kernel.asm	/^c0107ae4:	c0 $/;"	l
c0107ae5	obj/kernel.asm	/^c0107ae5:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107aec	obj/kernel.asm	/^c0107aec:	c0 $/;"	l
c0107aed	obj/kernel.asm	/^c0107aed:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c0107af4	obj/kernel.asm	/^c0107af4:	00 $/;"	l
c0107af5	obj/kernel.asm	/^c0107af5:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107afc	obj/kernel.asm	/^c0107afc:	e8 c7 93 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107b01	obj/kernel.asm	/^c0107b01:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b04	obj/kernel.asm	/^c0107b04:	8b 00                	mov    (%eax),%eax$/;"	l
c0107b06	obj/kernel.asm	/^c0107b06:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107b09	obj/kernel.asm	/^c0107b09:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b0c	obj/kernel.asm	/^c0107b0c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107b0f	obj/kernel.asm	/^c0107b0f:	75 24                	jne    c0107b35 <_fifo_swap_out_victim+0x97>$/;"	l
c0107b11	obj/kernel.asm	/^c0107b11:	c7 44 24 0c 9f 6e 11 	movl   $0xc0116e9f,0xc(%esp)$/;"	l
c0107b18	obj/kernel.asm	/^c0107b18:	c0 $/;"	l
c0107b19	obj/kernel.asm	/^c0107b19:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107b20	obj/kernel.asm	/^c0107b20:	c0 $/;"	l
c0107b21	obj/kernel.asm	/^c0107b21:	c7 44 24 04 48 00 00 	movl   $0x48,0x4(%esp)$/;"	l
c0107b28	obj/kernel.asm	/^c0107b28:	00 $/;"	l
c0107b29	obj/kernel.asm	/^c0107b29:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107b30	obj/kernel.asm	/^c0107b30:	e8 93 93 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107b35	obj/kernel.asm	/^c0107b35:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107b38	obj/kernel.asm	/^c0107b38:	83 e8 14             	sub    $0x14,%eax$/;"	l
c0107b3b	obj/kernel.asm	/^c0107b3b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107b3e	obj/kernel.asm	/^c0107b3e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107b41	obj/kernel.asm	/^c0107b41:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107b44	obj/kernel.asm	/^c0107b44:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107b47	obj/kernel.asm	/^c0107b47:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b4a	obj/kernel.asm	/^c0107b4a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107b4d	obj/kernel.asm	/^c0107b4d:	8b 12                	mov    (%edx),%edx$/;"	l
c0107b4f	obj/kernel.asm	/^c0107b4f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0107b52	obj/kernel.asm	/^c0107b52:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107b55	obj/kernel.asm	/^c0107b55:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107b58	obj/kernel.asm	/^c0107b58:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107b5b	obj/kernel.asm	/^c0107b5b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107b5e	obj/kernel.asm	/^c0107b5e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107b61	obj/kernel.asm	/^c0107b61:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107b64	obj/kernel.asm	/^c0107b64:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b66	obj/kernel.asm	/^c0107b66:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107b6a	obj/kernel.asm	/^c0107b6a:	75 24                	jne    c0107b90 <_fifo_swap_out_victim+0xf2>$/;"	l
c0107b6c	obj/kernel.asm	/^c0107b6c:	c7 44 24 0c aa 6e 11 	movl   $0xc0116eaa,0xc(%esp)$/;"	l
c0107b73	obj/kernel.asm	/^c0107b73:	c0 $/;"	l
c0107b74	obj/kernel.asm	/^c0107b74:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107b7b	obj/kernel.asm	/^c0107b7b:	c0 $/;"	l
c0107b7c	obj/kernel.asm	/^c0107b7c:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
c0107b83	obj/kernel.asm	/^c0107b83:	00 $/;"	l
c0107b84	obj/kernel.asm	/^c0107b84:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107b8b	obj/kernel.asm	/^c0107b8b:	e8 38 93 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107b90	obj/kernel.asm	/^c0107b90:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107b93	obj/kernel.asm	/^c0107b93:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107b96	obj/kernel.asm	/^c0107b96:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b98	obj/kernel.asm	/^c0107b98:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107b9d	obj/kernel.asm	/^c0107b9d:	c9                   	leave  $/;"	l
c0107b9e	obj/kernel.asm	/^c0107b9e:	c3                   	ret    $/;"	l
c0107b9f	obj/kernel.asm	/^c0107b9f <_fifo_check_swap>:$/;"	l
c0107b9f	obj/kernel.asm	/^c0107b9f:	55                   	push   %ebp$/;"	l
c0107ba0	obj/kernel.asm	/^c0107ba0:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ba2	obj/kernel.asm	/^c0107ba2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107ba5	obj/kernel.asm	/^c0107ba5:	c7 04 24 b4 6e 11 c0 	movl   $0xc0116eb4,(%esp)$/;"	l
c0107bac	obj/kernel.asm	/^c0107bac:	e8 b4 87 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107bb1	obj/kernel.asm	/^c0107bb1:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107bb6	obj/kernel.asm	/^c0107bb6:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107bb9	obj/kernel.asm	/^c0107bb9:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107bbe	obj/kernel.asm	/^c0107bbe:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107bc1	obj/kernel.asm	/^c0107bc1:	74 24                	je     c0107be7 <_fifo_check_swap+0x48>$/;"	l
c0107bc3	obj/kernel.asm	/^c0107bc3:	c7 44 24 0c da 6e 11 	movl   $0xc0116eda,0xc(%esp)$/;"	l
c0107bca	obj/kernel.asm	/^c0107bca:	c0 $/;"	l
c0107bcb	obj/kernel.asm	/^c0107bcb:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107bd2	obj/kernel.asm	/^c0107bd2:	c0 $/;"	l
c0107bd3	obj/kernel.asm	/^c0107bd3:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c0107bda	obj/kernel.asm	/^c0107bda:	00 $/;"	l
c0107bdb	obj/kernel.asm	/^c0107bdb:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107be2	obj/kernel.asm	/^c0107be2:	e8 e1 92 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107be7	obj/kernel.asm	/^c0107be7:	c7 04 24 ec 6e 11 c0 	movl   $0xc0116eec,(%esp)$/;"	l
c0107bee	obj/kernel.asm	/^c0107bee:	e8 72 87 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107bf3	obj/kernel.asm	/^c0107bf3:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107bf8	obj/kernel.asm	/^c0107bf8:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107bfb	obj/kernel.asm	/^c0107bfb:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107c00	obj/kernel.asm	/^c0107c00:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107c03	obj/kernel.asm	/^c0107c03:	74 24                	je     c0107c29 <_fifo_check_swap+0x8a>$/;"	l
c0107c05	obj/kernel.asm	/^c0107c05:	c7 44 24 0c da 6e 11 	movl   $0xc0116eda,0xc(%esp)$/;"	l
c0107c0c	obj/kernel.asm	/^c0107c0c:	c0 $/;"	l
c0107c0d	obj/kernel.asm	/^c0107c0d:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107c14	obj/kernel.asm	/^c0107c14:	c0 $/;"	l
c0107c15	obj/kernel.asm	/^c0107c15:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
c0107c1c	obj/kernel.asm	/^c0107c1c:	00 $/;"	l
c0107c1d	obj/kernel.asm	/^c0107c1d:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107c24	obj/kernel.asm	/^c0107c24:	e8 9f 92 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107c29	obj/kernel.asm	/^c0107c29:	c7 04 24 14 6f 11 c0 	movl   $0xc0116f14,(%esp)$/;"	l
c0107c30	obj/kernel.asm	/^c0107c30:	e8 30 87 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107c35	obj/kernel.asm	/^c0107c35:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107c3a	obj/kernel.asm	/^c0107c3a:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107c3d	obj/kernel.asm	/^c0107c3d:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107c42	obj/kernel.asm	/^c0107c42:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107c45	obj/kernel.asm	/^c0107c45:	74 24                	je     c0107c6b <_fifo_check_swap+0xcc>$/;"	l
c0107c47	obj/kernel.asm	/^c0107c47:	c7 44 24 0c da 6e 11 	movl   $0xc0116eda,0xc(%esp)$/;"	l
c0107c4e	obj/kernel.asm	/^c0107c4e:	c0 $/;"	l
c0107c4f	obj/kernel.asm	/^c0107c4f:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107c56	obj/kernel.asm	/^c0107c56:	c0 $/;"	l
c0107c57	obj/kernel.asm	/^c0107c57:	c7 44 24 04 5b 00 00 	movl   $0x5b,0x4(%esp)$/;"	l
c0107c5e	obj/kernel.asm	/^c0107c5e:	00 $/;"	l
c0107c5f	obj/kernel.asm	/^c0107c5f:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107c66	obj/kernel.asm	/^c0107c66:	e8 5d 92 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107c6b	obj/kernel.asm	/^c0107c6b:	c7 04 24 3c 6f 11 c0 	movl   $0xc0116f3c,(%esp)$/;"	l
c0107c72	obj/kernel.asm	/^c0107c72:	e8 ee 86 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107c77	obj/kernel.asm	/^c0107c77:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107c7c	obj/kernel.asm	/^c0107c7c:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107c7f	obj/kernel.asm	/^c0107c7f:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107c84	obj/kernel.asm	/^c0107c84:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107c87	obj/kernel.asm	/^c0107c87:	74 24                	je     c0107cad <_fifo_check_swap+0x10e>$/;"	l
c0107c89	obj/kernel.asm	/^c0107c89:	c7 44 24 0c da 6e 11 	movl   $0xc0116eda,0xc(%esp)$/;"	l
c0107c90	obj/kernel.asm	/^c0107c90:	c0 $/;"	l
c0107c91	obj/kernel.asm	/^c0107c91:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107c98	obj/kernel.asm	/^c0107c98:	c0 $/;"	l
c0107c99	obj/kernel.asm	/^c0107c99:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107ca0	obj/kernel.asm	/^c0107ca0:	00 $/;"	l
c0107ca1	obj/kernel.asm	/^c0107ca1:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107ca8	obj/kernel.asm	/^c0107ca8:	e8 1b 92 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107cad	obj/kernel.asm	/^c0107cad:	c7 04 24 64 6f 11 c0 	movl   $0xc0116f64,(%esp)$/;"	l
c0107cb4	obj/kernel.asm	/^c0107cb4:	e8 ac 86 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107cb9	obj/kernel.asm	/^c0107cb9:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c0107cbe	obj/kernel.asm	/^c0107cbe:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c0107cc1	obj/kernel.asm	/^c0107cc1:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107cc6	obj/kernel.asm	/^c0107cc6:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107cc9	obj/kernel.asm	/^c0107cc9:	74 24                	je     c0107cef <_fifo_check_swap+0x150>$/;"	l
c0107ccb	obj/kernel.asm	/^c0107ccb:	c7 44 24 0c 8a 6f 11 	movl   $0xc0116f8a,0xc(%esp)$/;"	l
c0107cd2	obj/kernel.asm	/^c0107cd2:	c0 $/;"	l
c0107cd3	obj/kernel.asm	/^c0107cd3:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107cda	obj/kernel.asm	/^c0107cda:	c0 $/;"	l
c0107cdb	obj/kernel.asm	/^c0107cdb:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c0107ce2	obj/kernel.asm	/^c0107ce2:	00 $/;"	l
c0107ce3	obj/kernel.asm	/^c0107ce3:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107cea	obj/kernel.asm	/^c0107cea:	e8 d9 91 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107cef	obj/kernel.asm	/^c0107cef:	c7 04 24 3c 6f 11 c0 	movl   $0xc0116f3c,(%esp)$/;"	l
c0107cf6	obj/kernel.asm	/^c0107cf6:	e8 6a 86 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107cfb	obj/kernel.asm	/^c0107cfb:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107d00	obj/kernel.asm	/^c0107d00:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107d03	obj/kernel.asm	/^c0107d03:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107d08	obj/kernel.asm	/^c0107d08:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107d0b	obj/kernel.asm	/^c0107d0b:	74 24                	je     c0107d31 <_fifo_check_swap+0x192>$/;"	l
c0107d0d	obj/kernel.asm	/^c0107d0d:	c7 44 24 0c 8a 6f 11 	movl   $0xc0116f8a,0xc(%esp)$/;"	l
c0107d14	obj/kernel.asm	/^c0107d14:	c0 $/;"	l
c0107d15	obj/kernel.asm	/^c0107d15:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107d1c	obj/kernel.asm	/^c0107d1c:	c0 $/;"	l
c0107d1d	obj/kernel.asm	/^c0107d1d:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0107d24	obj/kernel.asm	/^c0107d24:	00 $/;"	l
c0107d25	obj/kernel.asm	/^c0107d25:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107d2c	obj/kernel.asm	/^c0107d2c:	e8 97 91 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107d31	obj/kernel.asm	/^c0107d31:	c7 04 24 ec 6e 11 c0 	movl   $0xc0116eec,(%esp)$/;"	l
c0107d38	obj/kernel.asm	/^c0107d38:	e8 28 86 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107d3d	obj/kernel.asm	/^c0107d3d:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107d42	obj/kernel.asm	/^c0107d42:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107d45	obj/kernel.asm	/^c0107d45:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107d4a	obj/kernel.asm	/^c0107d4a:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c0107d4d	obj/kernel.asm	/^c0107d4d:	74 24                	je     c0107d73 <_fifo_check_swap+0x1d4>$/;"	l
c0107d4f	obj/kernel.asm	/^c0107d4f:	c7 44 24 0c 99 6f 11 	movl   $0xc0116f99,0xc(%esp)$/;"	l
c0107d56	obj/kernel.asm	/^c0107d56:	c0 $/;"	l
c0107d57	obj/kernel.asm	/^c0107d57:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107d5e	obj/kernel.asm	/^c0107d5e:	c0 $/;"	l
c0107d5f	obj/kernel.asm	/^c0107d5f:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c0107d66	obj/kernel.asm	/^c0107d66:	00 $/;"	l
c0107d67	obj/kernel.asm	/^c0107d67:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107d6e	obj/kernel.asm	/^c0107d6e:	e8 55 91 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107d73	obj/kernel.asm	/^c0107d73:	c7 04 24 3c 6f 11 c0 	movl   $0xc0116f3c,(%esp)$/;"	l
c0107d7a	obj/kernel.asm	/^c0107d7a:	e8 e6 85 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107d7f	obj/kernel.asm	/^c0107d7f:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107d84	obj/kernel.asm	/^c0107d84:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107d87	obj/kernel.asm	/^c0107d87:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107d8c	obj/kernel.asm	/^c0107d8c:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0107d8f	obj/kernel.asm	/^c0107d8f:	74 24                	je     c0107db5 <_fifo_check_swap+0x216>$/;"	l
c0107d91	obj/kernel.asm	/^c0107d91:	c7 44 24 0c a8 6f 11 	movl   $0xc0116fa8,0xc(%esp)$/;"	l
c0107d98	obj/kernel.asm	/^c0107d98:	c0 $/;"	l
c0107d99	obj/kernel.asm	/^c0107d99:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107da0	obj/kernel.asm	/^c0107da0:	c0 $/;"	l
c0107da1	obj/kernel.asm	/^c0107da1:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0107da8	obj/kernel.asm	/^c0107da8:	00 $/;"	l
c0107da9	obj/kernel.asm	/^c0107da9:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107db0	obj/kernel.asm	/^c0107db0:	e8 13 91 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107db5	obj/kernel.asm	/^c0107db5:	c7 04 24 b4 6e 11 c0 	movl   $0xc0116eb4,(%esp)$/;"	l
c0107dbc	obj/kernel.asm	/^c0107dbc:	e8 a4 85 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107dc1	obj/kernel.asm	/^c0107dc1:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107dc6	obj/kernel.asm	/^c0107dc6:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107dc9	obj/kernel.asm	/^c0107dc9:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107dce	obj/kernel.asm	/^c0107dce:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0107dd1	obj/kernel.asm	/^c0107dd1:	74 24                	je     c0107df7 <_fifo_check_swap+0x258>$/;"	l
c0107dd3	obj/kernel.asm	/^c0107dd3:	c7 44 24 0c b7 6f 11 	movl   $0xc0116fb7,0xc(%esp)$/;"	l
c0107dda	obj/kernel.asm	/^c0107dda:	c0 $/;"	l
c0107ddb	obj/kernel.asm	/^c0107ddb:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107de2	obj/kernel.asm	/^c0107de2:	c0 $/;"	l
c0107de3	obj/kernel.asm	/^c0107de3:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c0107dea	obj/kernel.asm	/^c0107dea:	00 $/;"	l
c0107deb	obj/kernel.asm	/^c0107deb:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107df2	obj/kernel.asm	/^c0107df2:	e8 d1 90 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107df7	obj/kernel.asm	/^c0107df7:	c7 04 24 14 6f 11 c0 	movl   $0xc0116f14,(%esp)$/;"	l
c0107dfe	obj/kernel.asm	/^c0107dfe:	e8 62 85 ff ff       	call   c0100365 <cprintf>$/;"	l
c0107e03	obj/kernel.asm	/^c0107e03:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107e08	obj/kernel.asm	/^c0107e08:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107e0b	obj/kernel.asm	/^c0107e0b:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0107e10	obj/kernel.asm	/^c0107e10:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c0107e13	obj/kernel.asm	/^c0107e13:	74 24                	je     c0107e39 <_fifo_check_swap+0x29a>$/;"	l
c0107e15	obj/kernel.asm	/^c0107e15:	c7 44 24 0c c6 6f 11 	movl   $0xc0116fc6,0xc(%esp)$/;"	l
c0107e1c	obj/kernel.asm	/^c0107e1c:	c0 $/;"	l
c0107e1d	obj/kernel.asm	/^c0107e1d:	c7 44 24 08 5e 6e 11 	movl   $0xc0116e5e,0x8(%esp)$/;"	l
c0107e24	obj/kernel.asm	/^c0107e24:	c0 $/;"	l
c0107e25	obj/kernel.asm	/^c0107e25:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0107e2c	obj/kernel.asm	/^c0107e2c:	00 $/;"	l
c0107e2d	obj/kernel.asm	/^c0107e2d:	c7 04 24 73 6e 11 c0 	movl   $0xc0116e73,(%esp)$/;"	l
c0107e34	obj/kernel.asm	/^c0107e34:	e8 8f 90 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107e39	obj/kernel.asm	/^c0107e39:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107e3e	obj/kernel.asm	/^c0107e3e:	c9                   	leave  $/;"	l
c0107e3f	obj/kernel.asm	/^c0107e3f:	c3                   	ret    $/;"	l
c0107e40	obj/kernel.asm	/^c0107e40 <_fifo_init>:$/;"	l
c0107e40	obj/kernel.asm	/^c0107e40:	55                   	push   %ebp$/;"	l
c0107e41	obj/kernel.asm	/^c0107e41:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e43	obj/kernel.asm	/^c0107e43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107e48	obj/kernel.asm	/^c0107e48:	5d                   	pop    %ebp$/;"	l
c0107e49	obj/kernel.asm	/^c0107e49:	c3                   	ret    $/;"	l
c0107e4a	obj/kernel.asm	/^c0107e4a <_fifo_set_unswappable>:$/;"	l
c0107e4a	obj/kernel.asm	/^c0107e4a:	55                   	push   %ebp$/;"	l
c0107e4b	obj/kernel.asm	/^c0107e4b:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e4d	obj/kernel.asm	/^c0107e4d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107e52	obj/kernel.asm	/^c0107e52:	5d                   	pop    %ebp$/;"	l
c0107e53	obj/kernel.asm	/^c0107e53:	c3                   	ret    $/;"	l
c0107e54	obj/kernel.asm	/^c0107e54 <_fifo_tick_event>:$/;"	l
c0107e54	obj/kernel.asm	/^c0107e54:	55                   	push   %ebp$/;"	l
c0107e55	obj/kernel.asm	/^c0107e55:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e57	obj/kernel.asm	/^c0107e57:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107e5c	obj/kernel.asm	/^c0107e5c:	5d                   	pop    %ebp$/;"	l
c0107e5d	obj/kernel.asm	/^c0107e5d:	c3                   	ret    $/;"	l
c0107e5e	obj/kernel.asm	/^c0107e5e <mm_count>:$/;"	l
c0107e5e	obj/kernel.asm	/^c0107e5e:	55                   	push   %ebp$/;"	l
c0107e5f	obj/kernel.asm	/^c0107e5f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e61	obj/kernel.asm	/^c0107e61:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e64	obj/kernel.asm	/^c0107e64:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0107e67	obj/kernel.asm	/^c0107e67:	5d                   	pop    %ebp$/;"	l
c0107e68	obj/kernel.asm	/^c0107e68:	c3                   	ret    $/;"	l
c0107e69	obj/kernel.asm	/^c0107e69 <set_mm_count>:$/;"	l
c0107e69	obj/kernel.asm	/^c0107e69:	55                   	push   %ebp$/;"	l
c0107e6a	obj/kernel.asm	/^c0107e6a:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e6c	obj/kernel.asm	/^c0107e6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e6f	obj/kernel.asm	/^c0107e6f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107e72	obj/kernel.asm	/^c0107e72:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0107e75	obj/kernel.asm	/^c0107e75:	5d                   	pop    %ebp$/;"	l
c0107e76	obj/kernel.asm	/^c0107e76:	c3                   	ret    $/;"	l
c0107e77	obj/kernel.asm	/^c0107e77 <pa2page>:$/;"	l
c0107e77	obj/kernel.asm	/^c0107e77:	55                   	push   %ebp$/;"	l
c0107e78	obj/kernel.asm	/^c0107e78:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e7a	obj/kernel.asm	/^c0107e7a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107e7d	obj/kernel.asm	/^c0107e7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e80	obj/kernel.asm	/^c0107e80:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107e83	obj/kernel.asm	/^c0107e83:	89 c2                	mov    %eax,%edx$/;"	l
c0107e85	obj/kernel.asm	/^c0107e85:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c0107e8a	obj/kernel.asm	/^c0107e8a:	39 c2                	cmp    %eax,%edx$/;"	l
c0107e8c	obj/kernel.asm	/^c0107e8c:	72 1c                	jb     c0107eaa <pa2page+0x33>$/;"	l
c0107e8e	obj/kernel.asm	/^c0107e8e:	c7 44 24 08 e8 6f 11 	movl   $0xc0116fe8,0x8(%esp)$/;"	l
c0107e95	obj/kernel.asm	/^c0107e95:	c0 $/;"	l
c0107e96	obj/kernel.asm	/^c0107e96:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107e9d	obj/kernel.asm	/^c0107e9d:	00 $/;"	l
c0107e9e	obj/kernel.asm	/^c0107e9e:	c7 04 24 07 70 11 c0 	movl   $0xc0117007,(%esp)$/;"	l
c0107ea5	obj/kernel.asm	/^c0107ea5:	e8 1e 90 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0107eaa	obj/kernel.asm	/^c0107eaa:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c0107eaf	obj/kernel.asm	/^c0107eaf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107eb2	obj/kernel.asm	/^c0107eb2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0107eb5	obj/kernel.asm	/^c0107eb5:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0107eb8	obj/kernel.asm	/^c0107eb8:	01 d0                	add    %edx,%eax$/;"	l
c0107eba	obj/kernel.asm	/^c0107eba:	c9                   	leave  $/;"	l
c0107ebb	obj/kernel.asm	/^c0107ebb:	c3                   	ret    $/;"	l
c0107ebc	obj/kernel.asm	/^c0107ebc <pde2page>:$/;"	l
c0107ebc	obj/kernel.asm	/^c0107ebc:	55                   	push   %ebp$/;"	l
c0107ebd	obj/kernel.asm	/^c0107ebd:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ebf	obj/kernel.asm	/^c0107ebf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107ec2	obj/kernel.asm	/^c0107ec2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ec5	obj/kernel.asm	/^c0107ec5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0107eca	obj/kernel.asm	/^c0107eca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107ecd	obj/kernel.asm	/^c0107ecd:	e8 a5 ff ff ff       	call   c0107e77 <pa2page>$/;"	l
c0107ed2	obj/kernel.asm	/^c0107ed2:	c9                   	leave  $/;"	l
c0107ed3	obj/kernel.asm	/^c0107ed3:	c3                   	ret    $/;"	l
c0107ed4	obj/kernel.asm	/^c0107ed4 <mm_create>:$/;"	l
c0107ed4	obj/kernel.asm	/^c0107ed4:	55                   	push   %ebp$/;"	l
c0107ed5	obj/kernel.asm	/^c0107ed5:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ed7	obj/kernel.asm	/^c0107ed7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107eda	obj/kernel.asm	/^c0107eda:	c7 04 24 2c 00 00 00 	movl   $0x2c,(%esp)$/;"	l
c0107ee1	obj/kernel.asm	/^c0107ee1:	e8 b5 cd ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0107ee6	obj/kernel.asm	/^c0107ee6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107ee9	obj/kernel.asm	/^c0107ee9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107eed	obj/kernel.asm	/^c0107eed:	0f 84 81 00 00 00    	je     c0107f74 <mm_create+0xa0>$/;"	l
c0107ef3	obj/kernel.asm	/^c0107ef3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ef6	obj/kernel.asm	/^c0107ef6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107ef9	obj/kernel.asm	/^c0107ef9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107efc	obj/kernel.asm	/^c0107efc:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107eff	obj/kernel.asm	/^c0107eff:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f02	obj/kernel.asm	/^c0107f02:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f05	obj/kernel.asm	/^c0107f05:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107f08	obj/kernel.asm	/^c0107f08:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f0b	obj/kernel.asm	/^c0107f0b:	89 10                	mov    %edx,(%eax)$/;"	l
c0107f0d	obj/kernel.asm	/^c0107f0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f10	obj/kernel.asm	/^c0107f10:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107f17	obj/kernel.asm	/^c0107f17:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f1a	obj/kernel.asm	/^c0107f1a:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0107f21	obj/kernel.asm	/^c0107f21:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f24	obj/kernel.asm	/^c0107f24:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0107f2b	obj/kernel.asm	/^c0107f2b:	a1 0c ff 14 c0       	mov    0xc014ff0c,%eax$/;"	l
c0107f30	obj/kernel.asm	/^c0107f30:	85 c0                	test   %eax,%eax$/;"	l
c0107f32	obj/kernel.asm	/^c0107f32:	74 0d                	je     c0107f41 <mm_create+0x6d>$/;"	l
c0107f34	obj/kernel.asm	/^c0107f34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f37	obj/kernel.asm	/^c0107f37:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107f3a	obj/kernel.asm	/^c0107f3a:	e8 50 ef ff ff       	call   c0106e8f <swap_init_mm>$/;"	l
c0107f3f	obj/kernel.asm	/^c0107f3f:	eb 0a                	jmp    c0107f4b <mm_create+0x77>$/;"	l
c0107f41	obj/kernel.asm	/^c0107f41:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f44	obj/kernel.asm	/^c0107f44:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0107f4b	obj/kernel.asm	/^c0107f4b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0107f52	obj/kernel.asm	/^c0107f52:	00 $/;"	l
c0107f53	obj/kernel.asm	/^c0107f53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f56	obj/kernel.asm	/^c0107f56:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107f59	obj/kernel.asm	/^c0107f59:	e8 0b ff ff ff       	call   c0107e69 <set_mm_count>$/;"	l
c0107f5e	obj/kernel.asm	/^c0107f5e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f61	obj/kernel.asm	/^c0107f61:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0107f64	obj/kernel.asm	/^c0107f64:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0107f6b	obj/kernel.asm	/^c0107f6b:	00 $/;"	l
c0107f6c	obj/kernel.asm	/^c0107f6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107f6f	obj/kernel.asm	/^c0107f6f:	e8 fb 1a 00 00       	call   c0109a6f <sem_init>$/;"	l
c0107f74	obj/kernel.asm	/^c0107f74:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f77	obj/kernel.asm	/^c0107f77:	c9                   	leave  $/;"	l
c0107f78	obj/kernel.asm	/^c0107f78:	c3                   	ret    $/;"	l
c0107f79	obj/kernel.asm	/^c0107f79 <vma_create>:$/;"	l
c0107f79	obj/kernel.asm	/^c0107f79:	55                   	push   %ebp$/;"	l
c0107f7a	obj/kernel.asm	/^c0107f7a:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f7c	obj/kernel.asm	/^c0107f7c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107f7f	obj/kernel.asm	/^c0107f7f:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
c0107f86	obj/kernel.asm	/^c0107f86:	e8 10 cd ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0107f8b	obj/kernel.asm	/^c0107f8b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107f8e	obj/kernel.asm	/^c0107f8e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107f92	obj/kernel.asm	/^c0107f92:	74 1b                	je     c0107faf <vma_create+0x36>$/;"	l
c0107f94	obj/kernel.asm	/^c0107f94:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f97	obj/kernel.asm	/^c0107f97:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107f9a	obj/kernel.asm	/^c0107f9a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f9d	obj/kernel.asm	/^c0107f9d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fa0	obj/kernel.asm	/^c0107fa0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107fa3	obj/kernel.asm	/^c0107fa3:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107fa6	obj/kernel.asm	/^c0107fa6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fa9	obj/kernel.asm	/^c0107fa9:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0107fac	obj/kernel.asm	/^c0107fac:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0107faf	obj/kernel.asm	/^c0107faf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fb2	obj/kernel.asm	/^c0107fb2:	c9                   	leave  $/;"	l
c0107fb3	obj/kernel.asm	/^c0107fb3:	c3                   	ret    $/;"	l
c0107fb4	obj/kernel.asm	/^c0107fb4 <find_vma>:$/;"	l
c0107fb4	obj/kernel.asm	/^c0107fb4:	55                   	push   %ebp$/;"	l
c0107fb5	obj/kernel.asm	/^c0107fb5:	89 e5                	mov    %esp,%ebp$/;"	l
c0107fb7	obj/kernel.asm	/^c0107fb7:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0107fba	obj/kernel.asm	/^c0107fba:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0107fc1	obj/kernel.asm	/^c0107fc1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107fc5	obj/kernel.asm	/^c0107fc5:	0f 84 95 00 00 00    	je     c0108060 <find_vma+0xac>$/;"	l
c0107fcb	obj/kernel.asm	/^c0107fcb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107fce	obj/kernel.asm	/^c0107fce:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107fd1	obj/kernel.asm	/^c0107fd1:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0107fd4	obj/kernel.asm	/^c0107fd4:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0107fd8	obj/kernel.asm	/^c0107fd8:	74 16                	je     c0107ff0 <find_vma+0x3c>$/;"	l
c0107fda	obj/kernel.asm	/^c0107fda:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107fdd	obj/kernel.asm	/^c0107fdd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107fe0	obj/kernel.asm	/^c0107fe0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107fe3	obj/kernel.asm	/^c0107fe3:	77 0b                	ja     c0107ff0 <find_vma+0x3c>$/;"	l
c0107fe5	obj/kernel.asm	/^c0107fe5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107fe8	obj/kernel.asm	/^c0107fe8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107feb	obj/kernel.asm	/^c0107feb:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107fee	obj/kernel.asm	/^c0107fee:	77 61                	ja     c0108051 <find_vma+0x9d>$/;"	l
c0107ff0	obj/kernel.asm	/^c0107ff0:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0107ff7	obj/kernel.asm	/^c0107ff7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ffa	obj/kernel.asm	/^c0107ffa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107ffd	obj/kernel.asm	/^c0107ffd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108000	obj/kernel.asm	/^c0108000:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108003	obj/kernel.asm	/^c0108003:	eb 28                	jmp    c010802d <find_vma+0x79>$/;"	l
c0108005	obj/kernel.asm	/^c0108005:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108008	obj/kernel.asm	/^c0108008:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010800b	obj/kernel.asm	/^c010800b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010800e	obj/kernel.asm	/^c010800e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108011	obj/kernel.asm	/^c0108011:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108014	obj/kernel.asm	/^c0108014:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108017	obj/kernel.asm	/^c0108017:	77 14                	ja     c010802d <find_vma+0x79>$/;"	l
c0108019	obj/kernel.asm	/^c0108019:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010801c	obj/kernel.asm	/^c010801c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010801f	obj/kernel.asm	/^c010801f:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108022	obj/kernel.asm	/^c0108022:	76 09                	jbe    c010802d <find_vma+0x79>$/;"	l
c0108024	obj/kernel.asm	/^c0108024:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c010802b	obj/kernel.asm	/^c010802b:	eb 17                	jmp    c0108044 <find_vma+0x90>$/;"	l
c010802d	obj/kernel.asm	/^c010802d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108030	obj/kernel.asm	/^c0108030:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108033	obj/kernel.asm	/^c0108033:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108036	obj/kernel.asm	/^c0108036:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108039	obj/kernel.asm	/^c0108039:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010803c	obj/kernel.asm	/^c010803c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010803f	obj/kernel.asm	/^c010803f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0108042	obj/kernel.asm	/^c0108042:	75 c1                	jne    c0108005 <find_vma+0x51>$/;"	l
c0108044	obj/kernel.asm	/^c0108044:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c0108048	obj/kernel.asm	/^c0108048:	75 07                	jne    c0108051 <find_vma+0x9d>$/;"	l
c010804a	obj/kernel.asm	/^c010804a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0108051	obj/kernel.asm	/^c0108051:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0108055	obj/kernel.asm	/^c0108055:	74 09                	je     c0108060 <find_vma+0xac>$/;"	l
c0108057	obj/kernel.asm	/^c0108057:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010805a	obj/kernel.asm	/^c010805a:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010805d	obj/kernel.asm	/^c010805d:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0108060	obj/kernel.asm	/^c0108060:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108063	obj/kernel.asm	/^c0108063:	c9                   	leave  $/;"	l
c0108064	obj/kernel.asm	/^c0108064:	c3                   	ret    $/;"	l
c0108065	obj/kernel.asm	/^c0108065 <check_vma_overlap>:$/;"	l
c0108065	obj/kernel.asm	/^c0108065:	55                   	push   %ebp$/;"	l
c0108066	obj/kernel.asm	/^c0108066:	89 e5                	mov    %esp,%ebp$/;"	l
c0108068	obj/kernel.asm	/^c0108068:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010806b	obj/kernel.asm	/^c010806b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010806e	obj/kernel.asm	/^c010806e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108071	obj/kernel.asm	/^c0108071:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108074	obj/kernel.asm	/^c0108074:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108077	obj/kernel.asm	/^c0108077:	39 c2                	cmp    %eax,%edx$/;"	l
c0108079	obj/kernel.asm	/^c0108079:	72 24                	jb     c010809f <check_vma_overlap+0x3a>$/;"	l
c010807b	obj/kernel.asm	/^c010807b:	c7 44 24 0c 15 70 11 	movl   $0xc0117015,0xc(%esp)$/;"	l
c0108082	obj/kernel.asm	/^c0108082:	c0 $/;"	l
c0108083	obj/kernel.asm	/^c0108083:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c010808a	obj/kernel.asm	/^c010808a:	c0 $/;"	l
c010808b	obj/kernel.asm	/^c010808b:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c0108092	obj/kernel.asm	/^c0108092:	00 $/;"	l
c0108093	obj/kernel.asm	/^c0108093:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c010809a	obj/kernel.asm	/^c010809a:	e8 29 8e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010809f	obj/kernel.asm	/^c010809f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01080a2	obj/kernel.asm	/^c01080a2:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01080a5	obj/kernel.asm	/^c01080a5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01080a8	obj/kernel.asm	/^c01080a8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01080ab	obj/kernel.asm	/^c01080ab:	39 c2                	cmp    %eax,%edx$/;"	l
c01080ad	obj/kernel.asm	/^c01080ad:	76 24                	jbe    c01080d3 <check_vma_overlap+0x6e>$/;"	l
c01080af	obj/kernel.asm	/^c01080af:	c7 44 24 0c 58 70 11 	movl   $0xc0117058,0xc(%esp)$/;"	l
c01080b6	obj/kernel.asm	/^c01080b6:	c0 $/;"	l
c01080b7	obj/kernel.asm	/^c01080b7:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c01080be	obj/kernel.asm	/^c01080be:	c0 $/;"	l
c01080bf	obj/kernel.asm	/^c01080bf:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)$/;"	l
c01080c6	obj/kernel.asm	/^c01080c6:	00 $/;"	l
c01080c7	obj/kernel.asm	/^c01080c7:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c01080ce	obj/kernel.asm	/^c01080ce:	e8 f5 8d ff ff       	call   c0100ec8 <__panic>$/;"	l
c01080d3	obj/kernel.asm	/^c01080d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01080d6	obj/kernel.asm	/^c01080d6:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01080d9	obj/kernel.asm	/^c01080d9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01080dc	obj/kernel.asm	/^c01080dc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01080df	obj/kernel.asm	/^c01080df:	39 c2                	cmp    %eax,%edx$/;"	l
c01080e1	obj/kernel.asm	/^c01080e1:	72 24                	jb     c0108107 <check_vma_overlap+0xa2>$/;"	l
c01080e3	obj/kernel.asm	/^c01080e3:	c7 44 24 0c 77 70 11 	movl   $0xc0117077,0xc(%esp)$/;"	l
c01080ea	obj/kernel.asm	/^c01080ea:	c0 $/;"	l
c01080eb	obj/kernel.asm	/^c01080eb:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c01080f2	obj/kernel.asm	/^c01080f2:	c0 $/;"	l
c01080f3	obj/kernel.asm	/^c01080f3:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c01080fa	obj/kernel.asm	/^c01080fa:	00 $/;"	l
c01080fb	obj/kernel.asm	/^c01080fb:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108102	obj/kernel.asm	/^c0108102:	e8 c1 8d ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108107	obj/kernel.asm	/^c0108107:	c9                   	leave  $/;"	l
c0108108	obj/kernel.asm	/^c0108108:	c3                   	ret    $/;"	l
c0108109	obj/kernel.asm	/^c0108109 <insert_vma_struct>:$/;"	l
c0108109	obj/kernel.asm	/^c0108109:	55                   	push   %ebp$/;"	l
c010810a	obj/kernel.asm	/^c010810a:	89 e5                	mov    %esp,%ebp$/;"	l
c010810c	obj/kernel.asm	/^c010810c:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010810f	obj/kernel.asm	/^c010810f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108112	obj/kernel.asm	/^c0108112:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108115	obj/kernel.asm	/^c0108115:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108118	obj/kernel.asm	/^c0108118:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010811b	obj/kernel.asm	/^c010811b:	39 c2                	cmp    %eax,%edx$/;"	l
c010811d	obj/kernel.asm	/^c010811d:	72 24                	jb     c0108143 <insert_vma_struct+0x3a>$/;"	l
c010811f	obj/kernel.asm	/^c010811f:	c7 44 24 0c 95 70 11 	movl   $0xc0117095,0xc(%esp)$/;"	l
c0108126	obj/kernel.asm	/^c0108126:	c0 $/;"	l
c0108127	obj/kernel.asm	/^c0108127:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c010812e	obj/kernel.asm	/^c010812e:	c0 $/;"	l
c010812f	obj/kernel.asm	/^c010812f:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
c0108136	obj/kernel.asm	/^c0108136:	00 $/;"	l
c0108137	obj/kernel.asm	/^c0108137:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c010813e	obj/kernel.asm	/^c010813e:	e8 85 8d ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108143	obj/kernel.asm	/^c0108143:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108146	obj/kernel.asm	/^c0108146:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108149	obj/kernel.asm	/^c0108149:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010814c	obj/kernel.asm	/^c010814c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010814f	obj/kernel.asm	/^c010814f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108152	obj/kernel.asm	/^c0108152:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108155	obj/kernel.asm	/^c0108155:	eb 21                	jmp    c0108178 <insert_vma_struct+0x6f>$/;"	l
c0108157	obj/kernel.asm	/^c0108157:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010815a	obj/kernel.asm	/^c010815a:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010815d	obj/kernel.asm	/^c010815d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108160	obj/kernel.asm	/^c0108160:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108163	obj/kernel.asm	/^c0108163:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108166	obj/kernel.asm	/^c0108166:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108169	obj/kernel.asm	/^c0108169:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010816c	obj/kernel.asm	/^c010816c:	39 c2                	cmp    %eax,%edx$/;"	l
c010816e	obj/kernel.asm	/^c010816e:	76 02                	jbe    c0108172 <insert_vma_struct+0x69>$/;"	l
c0108170	obj/kernel.asm	/^c0108170:	eb 1d                	jmp    c010818f <insert_vma_struct+0x86>$/;"	l
c0108172	obj/kernel.asm	/^c0108172:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108175	obj/kernel.asm	/^c0108175:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108178	obj/kernel.asm	/^c0108178:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010817b	obj/kernel.asm	/^c010817b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010817e	obj/kernel.asm	/^c010817e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108181	obj/kernel.asm	/^c0108181:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108184	obj/kernel.asm	/^c0108184:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108187	obj/kernel.asm	/^c0108187:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010818a	obj/kernel.asm	/^c010818a:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010818d	obj/kernel.asm	/^c010818d:	75 c8                	jne    c0108157 <insert_vma_struct+0x4e>$/;"	l
c010818f	obj/kernel.asm	/^c010818f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108192	obj/kernel.asm	/^c0108192:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108195	obj/kernel.asm	/^c0108195:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108198	obj/kernel.asm	/^c0108198:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010819b	obj/kernel.asm	/^c010819b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010819e	obj/kernel.asm	/^c010819e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01081a1	obj/kernel.asm	/^c01081a1:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01081a4	obj/kernel.asm	/^c01081a4:	74 15                	je     c01081bb <insert_vma_struct+0xb2>$/;"	l
c01081a6	obj/kernel.asm	/^c01081a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01081a9	obj/kernel.asm	/^c01081a9:	8d 50 f0             	lea    -0x10(%eax),%edx$/;"	l
c01081ac	obj/kernel.asm	/^c01081ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01081af	obj/kernel.asm	/^c01081af:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01081b3	obj/kernel.asm	/^c01081b3:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01081b6	obj/kernel.asm	/^c01081b6:	e8 aa fe ff ff       	call   c0108065 <check_vma_overlap>$/;"	l
c01081bb	obj/kernel.asm	/^c01081bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01081be	obj/kernel.asm	/^c01081be:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01081c1	obj/kernel.asm	/^c01081c1:	74 15                	je     c01081d8 <insert_vma_struct+0xcf>$/;"	l
c01081c3	obj/kernel.asm	/^c01081c3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01081c6	obj/kernel.asm	/^c01081c6:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01081c9	obj/kernel.asm	/^c01081c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01081cd	obj/kernel.asm	/^c01081cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01081d0	obj/kernel.asm	/^c01081d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01081d3	obj/kernel.asm	/^c01081d3:	e8 8d fe ff ff       	call   c0108065 <check_vma_overlap>$/;"	l
c01081d8	obj/kernel.asm	/^c01081d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01081db	obj/kernel.asm	/^c01081db:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01081de	obj/kernel.asm	/^c01081de:	89 10                	mov    %edx,(%eax)$/;"	l
c01081e0	obj/kernel.asm	/^c01081e0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01081e3	obj/kernel.asm	/^c01081e3:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c01081e6	obj/kernel.asm	/^c01081e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01081e9	obj/kernel.asm	/^c01081e9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01081ec	obj/kernel.asm	/^c01081ec:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01081ef	obj/kernel.asm	/^c01081ef:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01081f2	obj/kernel.asm	/^c01081f2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01081f5	obj/kernel.asm	/^c01081f5:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01081f8	obj/kernel.asm	/^c01081f8:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c01081fb	obj/kernel.asm	/^c01081fb:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01081fe	obj/kernel.asm	/^c01081fe:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0108201	obj/kernel.asm	/^c0108201:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0108204	obj/kernel.asm	/^c0108204:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0108207	obj/kernel.asm	/^c0108207:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010820a	obj/kernel.asm	/^c010820a:	89 10                	mov    %edx,(%eax)$/;"	l
c010820c	obj/kernel.asm	/^c010820c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010820f	obj/kernel.asm	/^c010820f:	8b 10                	mov    (%eax),%edx$/;"	l
c0108211	obj/kernel.asm	/^c0108211:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108214	obj/kernel.asm	/^c0108214:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108217	obj/kernel.asm	/^c0108217:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010821a	obj/kernel.asm	/^c010821a:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010821d	obj/kernel.asm	/^c010821d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108220	obj/kernel.asm	/^c0108220:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108223	obj/kernel.asm	/^c0108223:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0108226	obj/kernel.asm	/^c0108226:	89 10                	mov    %edx,(%eax)$/;"	l
c0108228	obj/kernel.asm	/^c0108228:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010822b	obj/kernel.asm	/^c010822b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010822e	obj/kernel.asm	/^c010822e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108231	obj/kernel.asm	/^c0108231:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108234	obj/kernel.asm	/^c0108234:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0108237	obj/kernel.asm	/^c0108237:	c9                   	leave  $/;"	l
c0108238	obj/kernel.asm	/^c0108238:	c3                   	ret    $/;"	l
c0108239	obj/kernel.asm	/^c0108239 <mm_destroy>:$/;"	l
c0108239	obj/kernel.asm	/^c0108239:	55                   	push   %ebp$/;"	l
c010823a	obj/kernel.asm	/^c010823a:	89 e5                	mov    %esp,%ebp$/;"	l
c010823c	obj/kernel.asm	/^c010823c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010823f	obj/kernel.asm	/^c010823f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108242	obj/kernel.asm	/^c0108242:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108245	obj/kernel.asm	/^c0108245:	e8 14 fc ff ff       	call   c0107e5e <mm_count>$/;"	l
c010824a	obj/kernel.asm	/^c010824a:	85 c0                	test   %eax,%eax$/;"	l
c010824c	obj/kernel.asm	/^c010824c:	74 24                	je     c0108272 <mm_destroy+0x39>$/;"	l
c010824e	obj/kernel.asm	/^c010824e:	c7 44 24 0c b1 70 11 	movl   $0xc01170b1,0xc(%esp)$/;"	l
c0108255	obj/kernel.asm	/^c0108255:	c0 $/;"	l
c0108256	obj/kernel.asm	/^c0108256:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c010825d	obj/kernel.asm	/^c010825d:	c0 $/;"	l
c010825e	obj/kernel.asm	/^c010825e:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c0108265	obj/kernel.asm	/^c0108265:	00 $/;"	l
c0108266	obj/kernel.asm	/^c0108266:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c010826d	obj/kernel.asm	/^c010826d:	e8 56 8c ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108272	obj/kernel.asm	/^c0108272:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108275	obj/kernel.asm	/^c0108275:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108278	obj/kernel.asm	/^c0108278:	eb 36                	jmp    c01082b0 <mm_destroy+0x77>$/;"	l
c010827a	obj/kernel.asm	/^c010827a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010827d	obj/kernel.asm	/^c010827d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108280	obj/kernel.asm	/^c0108280:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108283	obj/kernel.asm	/^c0108283:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108286	obj/kernel.asm	/^c0108286:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108289	obj/kernel.asm	/^c0108289:	8b 12                	mov    (%edx),%edx$/;"	l
c010828b	obj/kernel.asm	/^c010828b:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010828e	obj/kernel.asm	/^c010828e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108291	obj/kernel.asm	/^c0108291:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108294	obj/kernel.asm	/^c0108294:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108297	obj/kernel.asm	/^c0108297:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010829a	obj/kernel.asm	/^c010829a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010829d	obj/kernel.asm	/^c010829d:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01082a0	obj/kernel.asm	/^c01082a0:	89 10                	mov    %edx,(%eax)$/;"	l
c01082a2	obj/kernel.asm	/^c01082a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01082a5	obj/kernel.asm	/^c01082a5:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01082a8	obj/kernel.asm	/^c01082a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01082ab	obj/kernel.asm	/^c01082ab:	e8 06 ca ff ff       	call   c0104cb6 <kfree>$/;"	l
c01082b0	obj/kernel.asm	/^c01082b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01082b3	obj/kernel.asm	/^c01082b3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01082b6	obj/kernel.asm	/^c01082b6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01082b9	obj/kernel.asm	/^c01082b9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01082bc	obj/kernel.asm	/^c01082bc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01082bf	obj/kernel.asm	/^c01082bf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01082c2	obj/kernel.asm	/^c01082c2:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01082c5	obj/kernel.asm	/^c01082c5:	75 b3                	jne    c010827a <mm_destroy+0x41>$/;"	l
c01082c7	obj/kernel.asm	/^c01082c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01082ca	obj/kernel.asm	/^c01082ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01082cd	obj/kernel.asm	/^c01082cd:	e8 e4 c9 ff ff       	call   c0104cb6 <kfree>$/;"	l
c01082d2	obj/kernel.asm	/^c01082d2:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c01082d9	obj/kernel.asm	/^c01082d9:	c9                   	leave  $/;"	l
c01082da	obj/kernel.asm	/^c01082da:	c3                   	ret    $/;"	l
c01082db	obj/kernel.asm	/^c01082db <mm_map>:$/;"	l
c01082db	obj/kernel.asm	/^c01082db:	55                   	push   %ebp$/;"	l
c01082dc	obj/kernel.asm	/^c01082dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01082de	obj/kernel.asm	/^c01082de:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01082e1	obj/kernel.asm	/^c01082e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01082e4	obj/kernel.asm	/^c01082e4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01082e7	obj/kernel.asm	/^c01082e7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01082ea	obj/kernel.asm	/^c01082ea:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01082ef	obj/kernel.asm	/^c01082ef:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01082f2	obj/kernel.asm	/^c01082f2:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c01082f9	obj/kernel.asm	/^c01082f9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01082fc	obj/kernel.asm	/^c01082fc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01082ff	obj/kernel.asm	/^c01082ff:	01 c2                	add    %eax,%edx$/;"	l
c0108301	obj/kernel.asm	/^c0108301:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108304	obj/kernel.asm	/^c0108304:	01 d0                	add    %edx,%eax$/;"	l
c0108306	obj/kernel.asm	/^c0108306:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0108309	obj/kernel.asm	/^c0108309:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010830c	obj/kernel.asm	/^c010830c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010830f	obj/kernel.asm	/^c010830f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0108314	obj/kernel.asm	/^c0108314:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c0108317	obj/kernel.asm	/^c0108317:	89 d0                	mov    %edx,%eax$/;"	l
c0108319	obj/kernel.asm	/^c0108319:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010831c	obj/kernel.asm	/^c010831c:	29 c2                	sub    %eax,%edx$/;"	l
c010831e	obj/kernel.asm	/^c010831e:	89 d0                	mov    %edx,%eax$/;"	l
c0108320	obj/kernel.asm	/^c0108320:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108323	obj/kernel.asm	/^c0108323:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c010832a	obj/kernel.asm	/^c010832a:	76 11                	jbe    c010833d <mm_map+0x62>$/;"	l
c010832c	obj/kernel.asm	/^c010832c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010832f	obj/kernel.asm	/^c010832f:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108332	obj/kernel.asm	/^c0108332:	73 09                	jae    c010833d <mm_map+0x62>$/;"	l
c0108334	obj/kernel.asm	/^c0108334:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c010833b	obj/kernel.asm	/^c010833b:	76 0a                	jbe    c0108347 <mm_map+0x6c>$/;"	l
c010833d	obj/kernel.asm	/^c010833d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0108342	obj/kernel.asm	/^c0108342:	e9 ae 00 00 00       	jmp    c01083f5 <mm_map+0x11a>$/;"	l
c0108347	obj/kernel.asm	/^c0108347:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010834b	obj/kernel.asm	/^c010834b:	75 24                	jne    c0108371 <mm_map+0x96>$/;"	l
c010834d	obj/kernel.asm	/^c010834d:	c7 44 24 0c c3 70 11 	movl   $0xc01170c3,0xc(%esp)$/;"	l
c0108354	obj/kernel.asm	/^c0108354:	c0 $/;"	l
c0108355	obj/kernel.asm	/^c0108355:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c010835c	obj/kernel.asm	/^c010835c:	c0 $/;"	l
c010835d	obj/kernel.asm	/^c010835d:	c7 44 24 04 a7 00 00 	movl   $0xa7,0x4(%esp)$/;"	l
c0108364	obj/kernel.asm	/^c0108364:	00 $/;"	l
c0108365	obj/kernel.asm	/^c0108365:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c010836c	obj/kernel.asm	/^c010836c:	e8 57 8b ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108371	obj/kernel.asm	/^c0108371:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0108378	obj/kernel.asm	/^c0108378:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010837b	obj/kernel.asm	/^c010837b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010837f	obj/kernel.asm	/^c010837f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108382	obj/kernel.asm	/^c0108382:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108385	obj/kernel.asm	/^c0108385:	e8 2a fc ff ff       	call   c0107fb4 <find_vma>$/;"	l
c010838a	obj/kernel.asm	/^c010838a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010838d	obj/kernel.asm	/^c010838d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0108391	obj/kernel.asm	/^c0108391:	74 0d                	je     c01083a0 <mm_map+0xc5>$/;"	l
c0108393	obj/kernel.asm	/^c0108393:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108396	obj/kernel.asm	/^c0108396:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108399	obj/kernel.asm	/^c0108399:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010839c	obj/kernel.asm	/^c010839c:	73 02                	jae    c01083a0 <mm_map+0xc5>$/;"	l
c010839e	obj/kernel.asm	/^c010839e:	eb 52                	jmp    c01083f2 <mm_map+0x117>$/;"	l
c01083a0	obj/kernel.asm	/^c01083a0:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01083a7	obj/kernel.asm	/^c01083a7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01083aa	obj/kernel.asm	/^c01083aa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01083ae	obj/kernel.asm	/^c01083ae:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01083b1	obj/kernel.asm	/^c01083b1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01083b5	obj/kernel.asm	/^c01083b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01083b8	obj/kernel.asm	/^c01083b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01083bb	obj/kernel.asm	/^c01083bb:	e8 b9 fb ff ff       	call   c0107f79 <vma_create>$/;"	l
c01083c0	obj/kernel.asm	/^c01083c0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01083c3	obj/kernel.asm	/^c01083c3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01083c7	obj/kernel.asm	/^c01083c7:	75 02                	jne    c01083cb <mm_map+0xf0>$/;"	l
c01083c9	obj/kernel.asm	/^c01083c9:	eb 27                	jmp    c01083f2 <mm_map+0x117>$/;"	l
c01083cb	obj/kernel.asm	/^c01083cb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01083ce	obj/kernel.asm	/^c01083ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01083d2	obj/kernel.asm	/^c01083d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01083d5	obj/kernel.asm	/^c01083d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01083d8	obj/kernel.asm	/^c01083d8:	e8 2c fd ff ff       	call   c0108109 <insert_vma_struct>$/;"	l
c01083dd	obj/kernel.asm	/^c01083dd:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c01083e1	obj/kernel.asm	/^c01083e1:	74 08                	je     c01083eb <mm_map+0x110>$/;"	l
c01083e3	obj/kernel.asm	/^c01083e3:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01083e6	obj/kernel.asm	/^c01083e6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01083e9	obj/kernel.asm	/^c01083e9:	89 10                	mov    %edx,(%eax)$/;"	l
c01083eb	obj/kernel.asm	/^c01083eb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01083f2	obj/kernel.asm	/^c01083f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01083f5	obj/kernel.asm	/^c01083f5:	c9                   	leave  $/;"	l
c01083f6	obj/kernel.asm	/^c01083f6:	c3                   	ret    $/;"	l
c01083f7	obj/kernel.asm	/^c01083f7 <dup_mmap>:$/;"	l
c01083f7	obj/kernel.asm	/^c01083f7:	55                   	push   %ebp$/;"	l
c01083f8	obj/kernel.asm	/^c01083f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01083fa	obj/kernel.asm	/^c01083fa:	56                   	push   %esi$/;"	l
c01083fb	obj/kernel.asm	/^c01083fb:	53                   	push   %ebx$/;"	l
c01083fc	obj/kernel.asm	/^c01083fc:	83 ec 40             	sub    $0x40,%esp$/;"	l
c01083ff	obj/kernel.asm	/^c01083ff:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108403	obj/kernel.asm	/^c0108403:	74 06                	je     c010840b <dup_mmap+0x14>$/;"	l
c0108405	obj/kernel.asm	/^c0108405:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0108409	obj/kernel.asm	/^c0108409:	75 24                	jne    c010842f <dup_mmap+0x38>$/;"	l
c010840b	obj/kernel.asm	/^c010840b:	c7 44 24 0c ce 70 11 	movl   $0xc01170ce,0xc(%esp)$/;"	l
c0108412	obj/kernel.asm	/^c0108412:	c0 $/;"	l
c0108413	obj/kernel.asm	/^c0108413:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c010841a	obj/kernel.asm	/^c010841a:	c0 $/;"	l
c010841b	obj/kernel.asm	/^c010841b:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c0108422	obj/kernel.asm	/^c0108422:	00 $/;"	l
c0108423	obj/kernel.asm	/^c0108423:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c010842a	obj/kernel.asm	/^c010842a:	e8 99 8a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010842f	obj/kernel.asm	/^c010842f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108432	obj/kernel.asm	/^c0108432:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108435	obj/kernel.asm	/^c0108435:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108438	obj/kernel.asm	/^c0108438:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010843b	obj/kernel.asm	/^c010843b:	e9 92 00 00 00       	jmp    c01084d2 <dup_mmap+0xdb>$/;"	l
c0108440	obj/kernel.asm	/^c0108440:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108443	obj/kernel.asm	/^c0108443:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108446	obj/kernel.asm	/^c0108446:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108449	obj/kernel.asm	/^c0108449:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010844c	obj/kernel.asm	/^c010844c:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010844f	obj/kernel.asm	/^c010844f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108452	obj/kernel.asm	/^c0108452:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108455	obj/kernel.asm	/^c0108455:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108458	obj/kernel.asm	/^c0108458:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010845b	obj/kernel.asm	/^c010845b:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c010845f	obj/kernel.asm	/^c010845f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108463	obj/kernel.asm	/^c0108463:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108466	obj/kernel.asm	/^c0108466:	e8 0e fb ff ff       	call   c0107f79 <vma_create>$/;"	l
c010846b	obj/kernel.asm	/^c010846b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010846e	obj/kernel.asm	/^c010846e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0108472	obj/kernel.asm	/^c0108472:	75 07                	jne    c010847b <dup_mmap+0x84>$/;"	l
c0108474	obj/kernel.asm	/^c0108474:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0108479	obj/kernel.asm	/^c0108479:	eb 76                	jmp    c01084f1 <dup_mmap+0xfa>$/;"	l
c010847b	obj/kernel.asm	/^c010847b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010847e	obj/kernel.asm	/^c010847e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108482	obj/kernel.asm	/^c0108482:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108485	obj/kernel.asm	/^c0108485:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108488	obj/kernel.asm	/^c0108488:	e8 7c fc ff ff       	call   c0108109 <insert_vma_struct>$/;"	l
c010848d	obj/kernel.asm	/^c010848d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0108494	obj/kernel.asm	/^c0108494:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108497	obj/kernel.asm	/^c0108497:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c010849a	obj/kernel.asm	/^c010849a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010849d	obj/kernel.asm	/^c010849d:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c01084a0	obj/kernel.asm	/^c01084a0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01084a3	obj/kernel.asm	/^c01084a3:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c01084a6	obj/kernel.asm	/^c01084a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01084a9	obj/kernel.asm	/^c01084a9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01084ac	obj/kernel.asm	/^c01084ac:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
c01084af	obj/kernel.asm	/^c01084af:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c01084b3	obj/kernel.asm	/^c01084b3:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c01084b7	obj/kernel.asm	/^c01084b7:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01084bb	obj/kernel.asm	/^c01084bb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01084bf	obj/kernel.asm	/^c01084bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01084c2	obj/kernel.asm	/^c01084c2:	e8 9d d7 ff ff       	call   c0105c64 <copy_range>$/;"	l
c01084c7	obj/kernel.asm	/^c01084c7:	85 c0                	test   %eax,%eax$/;"	l
c01084c9	obj/kernel.asm	/^c01084c9:	74 07                	je     c01084d2 <dup_mmap+0xdb>$/;"	l
c01084cb	obj/kernel.asm	/^c01084cb:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01084d0	obj/kernel.asm	/^c01084d0:	eb 1f                	jmp    c01084f1 <dup_mmap+0xfa>$/;"	l
c01084d2	obj/kernel.asm	/^c01084d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01084d5	obj/kernel.asm	/^c01084d5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01084d8	obj/kernel.asm	/^c01084d8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01084db	obj/kernel.asm	/^c01084db:	8b 00                	mov    (%eax),%eax$/;"	l
c01084dd	obj/kernel.asm	/^c01084dd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01084e0	obj/kernel.asm	/^c01084e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01084e3	obj/kernel.asm	/^c01084e3:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01084e6	obj/kernel.asm	/^c01084e6:	0f 85 54 ff ff ff    	jne    c0108440 <dup_mmap+0x49>$/;"	l
c01084ec	obj/kernel.asm	/^c01084ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01084f1	obj/kernel.asm	/^c01084f1:	83 c4 40             	add    $0x40,%esp$/;"	l
c01084f4	obj/kernel.asm	/^c01084f4:	5b                   	pop    %ebx$/;"	l
c01084f5	obj/kernel.asm	/^c01084f5:	5e                   	pop    %esi$/;"	l
c01084f6	obj/kernel.asm	/^c01084f6:	5d                   	pop    %ebp$/;"	l
c01084f7	obj/kernel.asm	/^c01084f7:	c3                   	ret    $/;"	l
c01084f8	obj/kernel.asm	/^c01084f8 <exit_mmap>:$/;"	l
c01084f8	obj/kernel.asm	/^c01084f8:	55                   	push   %ebp$/;"	l
c01084f9	obj/kernel.asm	/^c01084f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01084fb	obj/kernel.asm	/^c01084fb:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01084fe	obj/kernel.asm	/^c01084fe:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108502	obj/kernel.asm	/^c0108502:	74 0f                	je     c0108513 <exit_mmap+0x1b>$/;"	l
c0108504	obj/kernel.asm	/^c0108504:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108507	obj/kernel.asm	/^c0108507:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010850a	obj/kernel.asm	/^c010850a:	e8 4f f9 ff ff       	call   c0107e5e <mm_count>$/;"	l
c010850f	obj/kernel.asm	/^c010850f:	85 c0                	test   %eax,%eax$/;"	l
c0108511	obj/kernel.asm	/^c0108511:	74 24                	je     c0108537 <exit_mmap+0x3f>$/;"	l
c0108513	obj/kernel.asm	/^c0108513:	c7 44 24 0c ec 70 11 	movl   $0xc01170ec,0xc(%esp)$/;"	l
c010851a	obj/kernel.asm	/^c010851a:	c0 $/;"	l
c010851b	obj/kernel.asm	/^c010851b:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108522	obj/kernel.asm	/^c0108522:	c0 $/;"	l
c0108523	obj/kernel.asm	/^c0108523:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c010852a	obj/kernel.asm	/^c010852a:	00 $/;"	l
c010852b	obj/kernel.asm	/^c010852b:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108532	obj/kernel.asm	/^c0108532:	e8 91 89 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108537	obj/kernel.asm	/^c0108537:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010853a	obj/kernel.asm	/^c010853a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010853d	obj/kernel.asm	/^c010853d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108540	obj/kernel.asm	/^c0108540:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108543	obj/kernel.asm	/^c0108543:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108546	obj/kernel.asm	/^c0108546:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108549	obj/kernel.asm	/^c0108549:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010854c	obj/kernel.asm	/^c010854c:	eb 28                	jmp    c0108576 <exit_mmap+0x7e>$/;"	l
c010854e	obj/kernel.asm	/^c010854e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108551	obj/kernel.asm	/^c0108551:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108554	obj/kernel.asm	/^c0108554:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108557	obj/kernel.asm	/^c0108557:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010855a	obj/kernel.asm	/^c010855a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010855d	obj/kernel.asm	/^c010855d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108560	obj/kernel.asm	/^c0108560:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108563	obj/kernel.asm	/^c0108563:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108567	obj/kernel.asm	/^c0108567:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010856b	obj/kernel.asm	/^c010856b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010856e	obj/kernel.asm	/^c010856e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108571	obj/kernel.asm	/^c0108571:	e8 f3 d4 ff ff       	call   c0105a69 <unmap_range>$/;"	l
c0108576	obj/kernel.asm	/^c0108576:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108579	obj/kernel.asm	/^c0108579:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010857c	obj/kernel.asm	/^c010857c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010857f	obj/kernel.asm	/^c010857f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108582	obj/kernel.asm	/^c0108582:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108585	obj/kernel.asm	/^c0108585:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108588	obj/kernel.asm	/^c0108588:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010858b	obj/kernel.asm	/^c010858b:	75 c1                	jne    c010854e <exit_mmap+0x56>$/;"	l
c010858d	obj/kernel.asm	/^c010858d:	eb 28                	jmp    c01085b7 <exit_mmap+0xbf>$/;"	l
c010858f	obj/kernel.asm	/^c010858f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108592	obj/kernel.asm	/^c0108592:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108595	obj/kernel.asm	/^c0108595:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108598	obj/kernel.asm	/^c0108598:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010859b	obj/kernel.asm	/^c010859b:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010859e	obj/kernel.asm	/^c010859e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085a1	obj/kernel.asm	/^c01085a1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01085a4	obj/kernel.asm	/^c01085a4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01085a8	obj/kernel.asm	/^c01085a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01085ac	obj/kernel.asm	/^c01085ac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01085af	obj/kernel.asm	/^c01085af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01085b2	obj/kernel.asm	/^c01085b2:	e8 a6 d5 ff ff       	call   c0105b5d <exit_range>$/;"	l
c01085b7	obj/kernel.asm	/^c01085b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01085ba	obj/kernel.asm	/^c01085ba:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01085bd	obj/kernel.asm	/^c01085bd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01085c0	obj/kernel.asm	/^c01085c0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01085c3	obj/kernel.asm	/^c01085c3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01085c6	obj/kernel.asm	/^c01085c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01085c9	obj/kernel.asm	/^c01085c9:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01085cc	obj/kernel.asm	/^c01085cc:	75 c1                	jne    c010858f <exit_mmap+0x97>$/;"	l
c01085ce	obj/kernel.asm	/^c01085ce:	c9                   	leave  $/;"	l
c01085cf	obj/kernel.asm	/^c01085cf:	c3                   	ret    $/;"	l
c01085d0	obj/kernel.asm	/^c01085d0 <copy_from_user>:$/;"	l
c01085d0	obj/kernel.asm	/^c01085d0:	55                   	push   %ebp$/;"	l
c01085d1	obj/kernel.asm	/^c01085d1:	89 e5                	mov    %esp,%ebp$/;"	l
c01085d3	obj/kernel.asm	/^c01085d3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01085d6	obj/kernel.asm	/^c01085d6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01085d9	obj/kernel.asm	/^c01085d9:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c01085dc	obj/kernel.asm	/^c01085dc:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01085e0	obj/kernel.asm	/^c01085e0:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01085e3	obj/kernel.asm	/^c01085e3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01085e7	obj/kernel.asm	/^c01085e7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01085eb	obj/kernel.asm	/^c01085eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01085ee	obj/kernel.asm	/^c01085ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01085f1	obj/kernel.asm	/^c01085f1:	e8 57 09 00 00       	call   c0108f4d <user_mem_check>$/;"	l
c01085f6	obj/kernel.asm	/^c01085f6:	85 c0                	test   %eax,%eax$/;"	l
c01085f8	obj/kernel.asm	/^c01085f8:	75 07                	jne    c0108601 <copy_from_user+0x31>$/;"	l
c01085fa	obj/kernel.asm	/^c01085fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01085ff	obj/kernel.asm	/^c01085ff:	eb 1e                	jmp    c010861f <copy_from_user+0x4f>$/;"	l
c0108601	obj/kernel.asm	/^c0108601:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0108604	obj/kernel.asm	/^c0108604:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108608	obj/kernel.asm	/^c0108608:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010860b	obj/kernel.asm	/^c010860b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010860f	obj/kernel.asm	/^c010860f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108612	obj/kernel.asm	/^c0108612:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108615	obj/kernel.asm	/^c0108615:	e8 e1 ce 00 00       	call   c01154fb <memcpy>$/;"	l
c010861a	obj/kernel.asm	/^c010861a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010861f	obj/kernel.asm	/^c010861f:	c9                   	leave  $/;"	l
c0108620	obj/kernel.asm	/^c0108620:	c3                   	ret    $/;"	l
c0108621	obj/kernel.asm	/^c0108621 <copy_to_user>:$/;"	l
c0108621	obj/kernel.asm	/^c0108621:	55                   	push   %ebp$/;"	l
c0108622	obj/kernel.asm	/^c0108622:	89 e5                	mov    %esp,%ebp$/;"	l
c0108624	obj/kernel.asm	/^c0108624:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108627	obj/kernel.asm	/^c0108627:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010862a	obj/kernel.asm	/^c010862a:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0108631	obj/kernel.asm	/^c0108631:	00 $/;"	l
c0108632	obj/kernel.asm	/^c0108632:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0108635	obj/kernel.asm	/^c0108635:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108639	obj/kernel.asm	/^c0108639:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010863d	obj/kernel.asm	/^c010863d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108640	obj/kernel.asm	/^c0108640:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108643	obj/kernel.asm	/^c0108643:	e8 05 09 00 00       	call   c0108f4d <user_mem_check>$/;"	l
c0108648	obj/kernel.asm	/^c0108648:	85 c0                	test   %eax,%eax$/;"	l
c010864a	obj/kernel.asm	/^c010864a:	75 07                	jne    c0108653 <copy_to_user+0x32>$/;"	l
c010864c	obj/kernel.asm	/^c010864c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108651	obj/kernel.asm	/^c0108651:	eb 1e                	jmp    c0108671 <copy_to_user+0x50>$/;"	l
c0108653	obj/kernel.asm	/^c0108653:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0108656	obj/kernel.asm	/^c0108656:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010865a	obj/kernel.asm	/^c010865a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010865d	obj/kernel.asm	/^c010865d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108661	obj/kernel.asm	/^c0108661:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108664	obj/kernel.asm	/^c0108664:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108667	obj/kernel.asm	/^c0108667:	e8 8f ce 00 00       	call   c01154fb <memcpy>$/;"	l
c010866c	obj/kernel.asm	/^c010866c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108671	obj/kernel.asm	/^c0108671:	c9                   	leave  $/;"	l
c0108672	obj/kernel.asm	/^c0108672:	c3                   	ret    $/;"	l
c0108673	obj/kernel.asm	/^c0108673 <vmm_init>:$/;"	l
c0108673	obj/kernel.asm	/^c0108673:	55                   	push   %ebp$/;"	l
c0108674	obj/kernel.asm	/^c0108674:	89 e5                	mov    %esp,%ebp$/;"	l
c0108676	obj/kernel.asm	/^c0108676:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108679	obj/kernel.asm	/^c0108679:	e8 02 00 00 00       	call   c0108680 <check_vmm>$/;"	l
c010867e	obj/kernel.asm	/^c010867e:	c9                   	leave  $/;"	l
c010867f	obj/kernel.asm	/^c010867f:	c3                   	ret    $/;"	l
c0108680	obj/kernel.asm	/^c0108680 <check_vmm>:$/;"	l
c0108680	obj/kernel.asm	/^c0108680:	55                   	push   %ebp$/;"	l
c0108681	obj/kernel.asm	/^c0108681:	89 e5                	mov    %esp,%ebp$/;"	l
c0108683	obj/kernel.asm	/^c0108683:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108686	obj/kernel.asm	/^c0108686:	e8 22 cb ff ff       	call   c01051ad <nr_free_pages>$/;"	l
c010868b	obj/kernel.asm	/^c010868b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010868e	obj/kernel.asm	/^c010868e:	e8 13 00 00 00       	call   c01086a6 <check_vma_struct>$/;"	l
c0108693	obj/kernel.asm	/^c0108693:	e8 a7 04 00 00       	call   c0108b3f <check_pgfault>$/;"	l
c0108698	obj/kernel.asm	/^c0108698:	c7 04 24 0c 71 11 c0 	movl   $0xc011710c,(%esp)$/;"	l
c010869f	obj/kernel.asm	/^c010869f:	e8 c1 7c ff ff       	call   c0100365 <cprintf>$/;"	l
c01086a4	obj/kernel.asm	/^c01086a4:	c9                   	leave  $/;"	l
c01086a5	obj/kernel.asm	/^c01086a5:	c3                   	ret    $/;"	l
c01086a6	obj/kernel.asm	/^c01086a6 <check_vma_struct>:$/;"	l
c01086a6	obj/kernel.asm	/^c01086a6:	55                   	push   %ebp$/;"	l
c01086a7	obj/kernel.asm	/^c01086a7:	89 e5                	mov    %esp,%ebp$/;"	l
c01086a9	obj/kernel.asm	/^c01086a9:	83 ec 68             	sub    $0x68,%esp$/;"	l
c01086ac	obj/kernel.asm	/^c01086ac:	e8 fc ca ff ff       	call   c01051ad <nr_free_pages>$/;"	l
c01086b1	obj/kernel.asm	/^c01086b1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01086b4	obj/kernel.asm	/^c01086b4:	e8 1b f8 ff ff       	call   c0107ed4 <mm_create>$/;"	l
c01086b9	obj/kernel.asm	/^c01086b9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01086bc	obj/kernel.asm	/^c01086bc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01086c0	obj/kernel.asm	/^c01086c0:	75 24                	jne    c01086e6 <check_vma_struct+0x40>$/;"	l
c01086c2	obj/kernel.asm	/^c01086c2:	c7 44 24 0c c3 70 11 	movl   $0xc01170c3,0xc(%esp)$/;"	l
c01086c9	obj/kernel.asm	/^c01086c9:	c0 $/;"	l
c01086ca	obj/kernel.asm	/^c01086ca:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c01086d1	obj/kernel.asm	/^c01086d1:	c0 $/;"	l
c01086d2	obj/kernel.asm	/^c01086d2:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
c01086d9	obj/kernel.asm	/^c01086d9:	00 $/;"	l
c01086da	obj/kernel.asm	/^c01086da:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c01086e1	obj/kernel.asm	/^c01086e1:	e8 e2 87 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01086e6	obj/kernel.asm	/^c01086e6:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c01086ed	obj/kernel.asm	/^c01086ed:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01086f0	obj/kernel.asm	/^c01086f0:	89 d0                	mov    %edx,%eax$/;"	l
c01086f2	obj/kernel.asm	/^c01086f2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01086f5	obj/kernel.asm	/^c01086f5:	01 d0                	add    %edx,%eax$/;"	l
c01086f7	obj/kernel.asm	/^c01086f7:	01 c0                	add    %eax,%eax$/;"	l
c01086f9	obj/kernel.asm	/^c01086f9:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01086fc	obj/kernel.asm	/^c01086fc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086ff	obj/kernel.asm	/^c01086ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108702	obj/kernel.asm	/^c0108702:	eb 70                	jmp    c0108774 <check_vma_struct+0xce>$/;"	l
c0108704	obj/kernel.asm	/^c0108704:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108707	obj/kernel.asm	/^c0108707:	89 d0                	mov    %edx,%eax$/;"	l
c0108709	obj/kernel.asm	/^c0108709:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010870c	obj/kernel.asm	/^c010870c:	01 d0                	add    %edx,%eax$/;"	l
c010870e	obj/kernel.asm	/^c010870e:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108711	obj/kernel.asm	/^c0108711:	89 c1                	mov    %eax,%ecx$/;"	l
c0108713	obj/kernel.asm	/^c0108713:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108716	obj/kernel.asm	/^c0108716:	89 d0                	mov    %edx,%eax$/;"	l
c0108718	obj/kernel.asm	/^c0108718:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010871b	obj/kernel.asm	/^c010871b:	01 d0                	add    %edx,%eax$/;"	l
c010871d	obj/kernel.asm	/^c010871d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0108724	obj/kernel.asm	/^c0108724:	00 $/;"	l
c0108725	obj/kernel.asm	/^c0108725:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0108729	obj/kernel.asm	/^c0108729:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010872c	obj/kernel.asm	/^c010872c:	e8 48 f8 ff ff       	call   c0107f79 <vma_create>$/;"	l
c0108731	obj/kernel.asm	/^c0108731:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108734	obj/kernel.asm	/^c0108734:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0108738	obj/kernel.asm	/^c0108738:	75 24                	jne    c010875e <check_vma_struct+0xb8>$/;"	l
c010873a	obj/kernel.asm	/^c010873a:	c7 44 24 0c 24 71 11 	movl   $0xc0117124,0xc(%esp)$/;"	l
c0108741	obj/kernel.asm	/^c0108741:	c0 $/;"	l
c0108742	obj/kernel.asm	/^c0108742:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108749	obj/kernel.asm	/^c0108749:	c0 $/;"	l
c010874a	obj/kernel.asm	/^c010874a:	c7 44 24 04 13 01 00 	movl   $0x113,0x4(%esp)$/;"	l
c0108751	obj/kernel.asm	/^c0108751:	00 $/;"	l
c0108752	obj/kernel.asm	/^c0108752:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108759	obj/kernel.asm	/^c0108759:	e8 6a 87 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010875e	obj/kernel.asm	/^c010875e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108761	obj/kernel.asm	/^c0108761:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108765	obj/kernel.asm	/^c0108765:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108768	obj/kernel.asm	/^c0108768:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010876b	obj/kernel.asm	/^c010876b:	e8 99 f9 ff ff       	call   c0108109 <insert_vma_struct>$/;"	l
c0108770	obj/kernel.asm	/^c0108770:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0108774	obj/kernel.asm	/^c0108774:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108778	obj/kernel.asm	/^c0108778:	7f 8a                	jg     c0108704 <check_vma_struct+0x5e>$/;"	l
c010877a	obj/kernel.asm	/^c010877a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010877d	obj/kernel.asm	/^c010877d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108780	obj/kernel.asm	/^c0108780:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108783	obj/kernel.asm	/^c0108783:	eb 70                	jmp    c01087f5 <check_vma_struct+0x14f>$/;"	l
c0108785	obj/kernel.asm	/^c0108785:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108788	obj/kernel.asm	/^c0108788:	89 d0                	mov    %edx,%eax$/;"	l
c010878a	obj/kernel.asm	/^c010878a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010878d	obj/kernel.asm	/^c010878d:	01 d0                	add    %edx,%eax$/;"	l
c010878f	obj/kernel.asm	/^c010878f:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108792	obj/kernel.asm	/^c0108792:	89 c1                	mov    %eax,%ecx$/;"	l
c0108794	obj/kernel.asm	/^c0108794:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108797	obj/kernel.asm	/^c0108797:	89 d0                	mov    %edx,%eax$/;"	l
c0108799	obj/kernel.asm	/^c0108799:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010879c	obj/kernel.asm	/^c010879c:	01 d0                	add    %edx,%eax$/;"	l
c010879e	obj/kernel.asm	/^c010879e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01087a5	obj/kernel.asm	/^c01087a5:	00 $/;"	l
c01087a6	obj/kernel.asm	/^c01087a6:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01087aa	obj/kernel.asm	/^c01087aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01087ad	obj/kernel.asm	/^c01087ad:	e8 c7 f7 ff ff       	call   c0107f79 <vma_create>$/;"	l
c01087b2	obj/kernel.asm	/^c01087b2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01087b5	obj/kernel.asm	/^c01087b5:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c01087b9	obj/kernel.asm	/^c01087b9:	75 24                	jne    c01087df <check_vma_struct+0x139>$/;"	l
c01087bb	obj/kernel.asm	/^c01087bb:	c7 44 24 0c 24 71 11 	movl   $0xc0117124,0xc(%esp)$/;"	l
c01087c2	obj/kernel.asm	/^c01087c2:	c0 $/;"	l
c01087c3	obj/kernel.asm	/^c01087c3:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c01087ca	obj/kernel.asm	/^c01087ca:	c0 $/;"	l
c01087cb	obj/kernel.asm	/^c01087cb:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
c01087d2	obj/kernel.asm	/^c01087d2:	00 $/;"	l
c01087d3	obj/kernel.asm	/^c01087d3:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c01087da	obj/kernel.asm	/^c01087da:	e8 e9 86 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01087df	obj/kernel.asm	/^c01087df:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01087e2	obj/kernel.asm	/^c01087e2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01087e6	obj/kernel.asm	/^c01087e6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01087e9	obj/kernel.asm	/^c01087e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01087ec	obj/kernel.asm	/^c01087ec:	e8 18 f9 ff ff       	call   c0108109 <insert_vma_struct>$/;"	l
c01087f1	obj/kernel.asm	/^c01087f1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01087f5	obj/kernel.asm	/^c01087f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01087f8	obj/kernel.asm	/^c01087f8:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01087fb	obj/kernel.asm	/^c01087fb:	7e 88                	jle    c0108785 <check_vma_struct+0xdf>$/;"	l
c01087fd	obj/kernel.asm	/^c01087fd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108800	obj/kernel.asm	/^c0108800:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0108803	obj/kernel.asm	/^c0108803:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0108806	obj/kernel.asm	/^c0108806:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108809	obj/kernel.asm	/^c0108809:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010880c	obj/kernel.asm	/^c010880c:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0108813	obj/kernel.asm	/^c0108813:	e9 97 00 00 00       	jmp    c01088af <check_vma_struct+0x209>$/;"	l
c0108818	obj/kernel.asm	/^c0108818:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010881b	obj/kernel.asm	/^c010881b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010881e	obj/kernel.asm	/^c010881e:	75 24                	jne    c0108844 <check_vma_struct+0x19e>$/;"	l
c0108820	obj/kernel.asm	/^c0108820:	c7 44 24 0c 30 71 11 	movl   $0xc0117130,0xc(%esp)$/;"	l
c0108827	obj/kernel.asm	/^c0108827:	c0 $/;"	l
c0108828	obj/kernel.asm	/^c0108828:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c010882f	obj/kernel.asm	/^c010882f:	c0 $/;"	l
c0108830	obj/kernel.asm	/^c0108830:	c7 44 24 04 20 01 00 	movl   $0x120,0x4(%esp)$/;"	l
c0108837	obj/kernel.asm	/^c0108837:	00 $/;"	l
c0108838	obj/kernel.asm	/^c0108838:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c010883f	obj/kernel.asm	/^c010883f:	e8 84 86 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108844	obj/kernel.asm	/^c0108844:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108847	obj/kernel.asm	/^c0108847:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010884a	obj/kernel.asm	/^c010884a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010884d	obj/kernel.asm	/^c010884d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0108850	obj/kernel.asm	/^c0108850:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0108853	obj/kernel.asm	/^c0108853:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108856	obj/kernel.asm	/^c0108856:	89 d0                	mov    %edx,%eax$/;"	l
c0108858	obj/kernel.asm	/^c0108858:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010885b	obj/kernel.asm	/^c010885b:	01 d0                	add    %edx,%eax$/;"	l
c010885d	obj/kernel.asm	/^c010885d:	39 c1                	cmp    %eax,%ecx$/;"	l
c010885f	obj/kernel.asm	/^c010885f:	75 17                	jne    c0108878 <check_vma_struct+0x1d2>$/;"	l
c0108861	obj/kernel.asm	/^c0108861:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0108864	obj/kernel.asm	/^c0108864:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c0108867	obj/kernel.asm	/^c0108867:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010886a	obj/kernel.asm	/^c010886a:	89 d0                	mov    %edx,%eax$/;"	l
c010886c	obj/kernel.asm	/^c010886c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010886f	obj/kernel.asm	/^c010886f:	01 d0                	add    %edx,%eax$/;"	l
c0108871	obj/kernel.asm	/^c0108871:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108874	obj/kernel.asm	/^c0108874:	39 c1                	cmp    %eax,%ecx$/;"	l
c0108876	obj/kernel.asm	/^c0108876:	74 24                	je     c010889c <check_vma_struct+0x1f6>$/;"	l
c0108878	obj/kernel.asm	/^c0108878:	c7 44 24 0c 48 71 11 	movl   $0xc0117148,0xc(%esp)$/;"	l
c010887f	obj/kernel.asm	/^c010887f:	c0 $/;"	l
c0108880	obj/kernel.asm	/^c0108880:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108887	obj/kernel.asm	/^c0108887:	c0 $/;"	l
c0108888	obj/kernel.asm	/^c0108888:	c7 44 24 04 22 01 00 	movl   $0x122,0x4(%esp)$/;"	l
c010888f	obj/kernel.asm	/^c010888f:	00 $/;"	l
c0108890	obj/kernel.asm	/^c0108890:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108897	obj/kernel.asm	/^c0108897:	e8 2c 86 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010889c	obj/kernel.asm	/^c010889c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010889f	obj/kernel.asm	/^c010889f:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c01088a2	obj/kernel.asm	/^c01088a2:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01088a5	obj/kernel.asm	/^c01088a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01088a8	obj/kernel.asm	/^c01088a8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01088ab	obj/kernel.asm	/^c01088ab:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01088af	obj/kernel.asm	/^c01088af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01088b2	obj/kernel.asm	/^c01088b2:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01088b5	obj/kernel.asm	/^c01088b5:	0f 8e 5d ff ff ff    	jle    c0108818 <check_vma_struct+0x172>$/;"	l
c01088bb	obj/kernel.asm	/^c01088bb:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c01088c2	obj/kernel.asm	/^c01088c2:	e9 cd 01 00 00       	jmp    c0108a94 <check_vma_struct+0x3ee>$/;"	l
c01088c7	obj/kernel.asm	/^c01088c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01088ca	obj/kernel.asm	/^c01088ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01088ce	obj/kernel.asm	/^c01088ce:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01088d1	obj/kernel.asm	/^c01088d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01088d4	obj/kernel.asm	/^c01088d4:	e8 db f6 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c01088d9	obj/kernel.asm	/^c01088d9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01088dc	obj/kernel.asm	/^c01088dc:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c01088e0	obj/kernel.asm	/^c01088e0:	75 24                	jne    c0108906 <check_vma_struct+0x260>$/;"	l
c01088e2	obj/kernel.asm	/^c01088e2:	c7 44 24 0c 7d 71 11 	movl   $0xc011717d,0xc(%esp)$/;"	l
c01088e9	obj/kernel.asm	/^c01088e9:	c0 $/;"	l
c01088ea	obj/kernel.asm	/^c01088ea:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c01088f1	obj/kernel.asm	/^c01088f1:	c0 $/;"	l
c01088f2	obj/kernel.asm	/^c01088f2:	c7 44 24 04 28 01 00 	movl   $0x128,0x4(%esp)$/;"	l
c01088f9	obj/kernel.asm	/^c01088f9:	00 $/;"	l
c01088fa	obj/kernel.asm	/^c01088fa:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108901	obj/kernel.asm	/^c0108901:	e8 c2 85 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108906	obj/kernel.asm	/^c0108906:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108909	obj/kernel.asm	/^c0108909:	83 c0 01             	add    $0x1,%eax$/;"	l
c010890c	obj/kernel.asm	/^c010890c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108910	obj/kernel.asm	/^c0108910:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108913	obj/kernel.asm	/^c0108913:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108916	obj/kernel.asm	/^c0108916:	e8 99 f6 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c010891b	obj/kernel.asm	/^c010891b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010891e	obj/kernel.asm	/^c010891e:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0108922	obj/kernel.asm	/^c0108922:	75 24                	jne    c0108948 <check_vma_struct+0x2a2>$/;"	l
c0108924	obj/kernel.asm	/^c0108924:	c7 44 24 0c 8a 71 11 	movl   $0xc011718a,0xc(%esp)$/;"	l
c010892b	obj/kernel.asm	/^c010892b:	c0 $/;"	l
c010892c	obj/kernel.asm	/^c010892c:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108933	obj/kernel.asm	/^c0108933:	c0 $/;"	l
c0108934	obj/kernel.asm	/^c0108934:	c7 44 24 04 2a 01 00 	movl   $0x12a,0x4(%esp)$/;"	l
c010893b	obj/kernel.asm	/^c010893b:	00 $/;"	l
c010893c	obj/kernel.asm	/^c010893c:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108943	obj/kernel.asm	/^c0108943:	e8 80 85 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108948	obj/kernel.asm	/^c0108948:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010894b	obj/kernel.asm	/^c010894b:	83 c0 02             	add    $0x2,%eax$/;"	l
c010894e	obj/kernel.asm	/^c010894e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108952	obj/kernel.asm	/^c0108952:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108955	obj/kernel.asm	/^c0108955:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108958	obj/kernel.asm	/^c0108958:	e8 57 f6 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c010895d	obj/kernel.asm	/^c010895d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0108960	obj/kernel.asm	/^c0108960:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0108964	obj/kernel.asm	/^c0108964:	74 24                	je     c010898a <check_vma_struct+0x2e4>$/;"	l
c0108966	obj/kernel.asm	/^c0108966:	c7 44 24 0c 97 71 11 	movl   $0xc0117197,0xc(%esp)$/;"	l
c010896d	obj/kernel.asm	/^c010896d:	c0 $/;"	l
c010896e	obj/kernel.asm	/^c010896e:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108975	obj/kernel.asm	/^c0108975:	c0 $/;"	l
c0108976	obj/kernel.asm	/^c0108976:	c7 44 24 04 2c 01 00 	movl   $0x12c,0x4(%esp)$/;"	l
c010897d	obj/kernel.asm	/^c010897d:	00 $/;"	l
c010897e	obj/kernel.asm	/^c010897e:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108985	obj/kernel.asm	/^c0108985:	e8 3e 85 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010898a	obj/kernel.asm	/^c010898a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010898d	obj/kernel.asm	/^c010898d:	83 c0 03             	add    $0x3,%eax$/;"	l
c0108990	obj/kernel.asm	/^c0108990:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108994	obj/kernel.asm	/^c0108994:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108997	obj/kernel.asm	/^c0108997:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010899a	obj/kernel.asm	/^c010899a:	e8 15 f6 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c010899f	obj/kernel.asm	/^c010899f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c01089a2	obj/kernel.asm	/^c01089a2:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c01089a6	obj/kernel.asm	/^c01089a6:	74 24                	je     c01089cc <check_vma_struct+0x326>$/;"	l
c01089a8	obj/kernel.asm	/^c01089a8:	c7 44 24 0c a4 71 11 	movl   $0xc01171a4,0xc(%esp)$/;"	l
c01089af	obj/kernel.asm	/^c01089af:	c0 $/;"	l
c01089b0	obj/kernel.asm	/^c01089b0:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c01089b7	obj/kernel.asm	/^c01089b7:	c0 $/;"	l
c01089b8	obj/kernel.asm	/^c01089b8:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
c01089bf	obj/kernel.asm	/^c01089bf:	00 $/;"	l
c01089c0	obj/kernel.asm	/^c01089c0:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c01089c7	obj/kernel.asm	/^c01089c7:	e8 fc 84 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01089cc	obj/kernel.asm	/^c01089cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01089cf	obj/kernel.asm	/^c01089cf:	83 c0 04             	add    $0x4,%eax$/;"	l
c01089d2	obj/kernel.asm	/^c01089d2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01089d6	obj/kernel.asm	/^c01089d6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01089d9	obj/kernel.asm	/^c01089d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01089dc	obj/kernel.asm	/^c01089dc:	e8 d3 f5 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c01089e1	obj/kernel.asm	/^c01089e1:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01089e4	obj/kernel.asm	/^c01089e4:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c01089e8	obj/kernel.asm	/^c01089e8:	74 24                	je     c0108a0e <check_vma_struct+0x368>$/;"	l
c01089ea	obj/kernel.asm	/^c01089ea:	c7 44 24 0c b1 71 11 	movl   $0xc01171b1,0xc(%esp)$/;"	l
c01089f1	obj/kernel.asm	/^c01089f1:	c0 $/;"	l
c01089f2	obj/kernel.asm	/^c01089f2:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c01089f9	obj/kernel.asm	/^c01089f9:	c0 $/;"	l
c01089fa	obj/kernel.asm	/^c01089fa:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
c0108a01	obj/kernel.asm	/^c0108a01:	00 $/;"	l
c0108a02	obj/kernel.asm	/^c0108a02:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108a09	obj/kernel.asm	/^c0108a09:	e8 ba 84 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108a0e	obj/kernel.asm	/^c0108a0e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108a11	obj/kernel.asm	/^c0108a11:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108a14	obj/kernel.asm	/^c0108a14:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a17	obj/kernel.asm	/^c0108a17:	39 c2                	cmp    %eax,%edx$/;"	l
c0108a19	obj/kernel.asm	/^c0108a19:	75 10                	jne    c0108a2b <check_vma_struct+0x385>$/;"	l
c0108a1b	obj/kernel.asm	/^c0108a1b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108a1e	obj/kernel.asm	/^c0108a1e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108a21	obj/kernel.asm	/^c0108a21:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a24	obj/kernel.asm	/^c0108a24:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108a27	obj/kernel.asm	/^c0108a27:	39 c2                	cmp    %eax,%edx$/;"	l
c0108a29	obj/kernel.asm	/^c0108a29:	74 24                	je     c0108a4f <check_vma_struct+0x3a9>$/;"	l
c0108a2b	obj/kernel.asm	/^c0108a2b:	c7 44 24 0c c0 71 11 	movl   $0xc01171c0,0xc(%esp)$/;"	l
c0108a32	obj/kernel.asm	/^c0108a32:	c0 $/;"	l
c0108a33	obj/kernel.asm	/^c0108a33:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108a3a	obj/kernel.asm	/^c0108a3a:	c0 $/;"	l
c0108a3b	obj/kernel.asm	/^c0108a3b:	c7 44 24 04 32 01 00 	movl   $0x132,0x4(%esp)$/;"	l
c0108a42	obj/kernel.asm	/^c0108a42:	00 $/;"	l
c0108a43	obj/kernel.asm	/^c0108a43:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108a4a	obj/kernel.asm	/^c0108a4a:	e8 79 84 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108a4f	obj/kernel.asm	/^c0108a4f:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108a52	obj/kernel.asm	/^c0108a52:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108a55	obj/kernel.asm	/^c0108a55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a58	obj/kernel.asm	/^c0108a58:	39 c2                	cmp    %eax,%edx$/;"	l
c0108a5a	obj/kernel.asm	/^c0108a5a:	75 10                	jne    c0108a6c <check_vma_struct+0x3c6>$/;"	l
c0108a5c	obj/kernel.asm	/^c0108a5c:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108a5f	obj/kernel.asm	/^c0108a5f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108a62	obj/kernel.asm	/^c0108a62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a65	obj/kernel.asm	/^c0108a65:	83 c0 02             	add    $0x2,%eax$/;"	l
c0108a68	obj/kernel.asm	/^c0108a68:	39 c2                	cmp    %eax,%edx$/;"	l
c0108a6a	obj/kernel.asm	/^c0108a6a:	74 24                	je     c0108a90 <check_vma_struct+0x3ea>$/;"	l
c0108a6c	obj/kernel.asm	/^c0108a6c:	c7 44 24 0c f0 71 11 	movl   $0xc01171f0,0xc(%esp)$/;"	l
c0108a73	obj/kernel.asm	/^c0108a73:	c0 $/;"	l
c0108a74	obj/kernel.asm	/^c0108a74:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108a7b	obj/kernel.asm	/^c0108a7b:	c0 $/;"	l
c0108a7c	obj/kernel.asm	/^c0108a7c:	c7 44 24 04 33 01 00 	movl   $0x133,0x4(%esp)$/;"	l
c0108a83	obj/kernel.asm	/^c0108a83:	00 $/;"	l
c0108a84	obj/kernel.asm	/^c0108a84:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108a8b	obj/kernel.asm	/^c0108a8b:	e8 38 84 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108a90	obj/kernel.asm	/^c0108a90:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0108a94	obj/kernel.asm	/^c0108a94:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108a97	obj/kernel.asm	/^c0108a97:	89 d0                	mov    %edx,%eax$/;"	l
c0108a99	obj/kernel.asm	/^c0108a99:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108a9c	obj/kernel.asm	/^c0108a9c:	01 d0                	add    %edx,%eax$/;"	l
c0108a9e	obj/kernel.asm	/^c0108a9e:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108aa1	obj/kernel.asm	/^c0108aa1:	0f 8d 20 fe ff ff    	jge    c01088c7 <check_vma_struct+0x221>$/;"	l
c0108aa7	obj/kernel.asm	/^c0108aa7:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0108aae	obj/kernel.asm	/^c0108aae:	eb 70                	jmp    c0108b20 <check_vma_struct+0x47a>$/;"	l
c0108ab0	obj/kernel.asm	/^c0108ab0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ab3	obj/kernel.asm	/^c0108ab3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108ab7	obj/kernel.asm	/^c0108ab7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108aba	obj/kernel.asm	/^c0108aba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108abd	obj/kernel.asm	/^c0108abd:	e8 f2 f4 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c0108ac2	obj/kernel.asm	/^c0108ac2:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0108ac5	obj/kernel.asm	/^c0108ac5:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0108ac9	obj/kernel.asm	/^c0108ac9:	74 27                	je     c0108af2 <check_vma_struct+0x44c>$/;"	l
c0108acb	obj/kernel.asm	/^c0108acb:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108ace	obj/kernel.asm	/^c0108ace:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108ad1	obj/kernel.asm	/^c0108ad1:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108ad4	obj/kernel.asm	/^c0108ad4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108ad7	obj/kernel.asm	/^c0108ad7:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0108adb	obj/kernel.asm	/^c0108adb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108adf	obj/kernel.asm	/^c0108adf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ae2	obj/kernel.asm	/^c0108ae2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108ae6	obj/kernel.asm	/^c0108ae6:	c7 04 24 20 72 11 c0 	movl   $0xc0117220,(%esp)$/;"	l
c0108aed	obj/kernel.asm	/^c0108aed:	e8 73 78 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108af2	obj/kernel.asm	/^c0108af2:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0108af6	obj/kernel.asm	/^c0108af6:	74 24                	je     c0108b1c <check_vma_struct+0x476>$/;"	l
c0108af8	obj/kernel.asm	/^c0108af8:	c7 44 24 0c 45 72 11 	movl   $0xc0117245,0xc(%esp)$/;"	l
c0108aff	obj/kernel.asm	/^c0108aff:	c0 $/;"	l
c0108b00	obj/kernel.asm	/^c0108b00:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108b07	obj/kernel.asm	/^c0108b07:	c0 $/;"	l
c0108b08	obj/kernel.asm	/^c0108b08:	c7 44 24 04 3b 01 00 	movl   $0x13b,0x4(%esp)$/;"	l
c0108b0f	obj/kernel.asm	/^c0108b0f:	00 $/;"	l
c0108b10	obj/kernel.asm	/^c0108b10:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108b17	obj/kernel.asm	/^c0108b17:	e8 ac 83 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108b1c	obj/kernel.asm	/^c0108b1c:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0108b20	obj/kernel.asm	/^c0108b20:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108b24	obj/kernel.asm	/^c0108b24:	79 8a                	jns    c0108ab0 <check_vma_struct+0x40a>$/;"	l
c0108b26	obj/kernel.asm	/^c0108b26:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108b29	obj/kernel.asm	/^c0108b29:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108b2c	obj/kernel.asm	/^c0108b2c:	e8 08 f7 ff ff       	call   c0108239 <mm_destroy>$/;"	l
c0108b31	obj/kernel.asm	/^c0108b31:	c7 04 24 5c 72 11 c0 	movl   $0xc011725c,(%esp)$/;"	l
c0108b38	obj/kernel.asm	/^c0108b38:	e8 28 78 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108b3d	obj/kernel.asm	/^c0108b3d:	c9                   	leave  $/;"	l
c0108b3e	obj/kernel.asm	/^c0108b3e:	c3                   	ret    $/;"	l
c0108b3f	obj/kernel.asm	/^c0108b3f <check_pgfault>:$/;"	l
c0108b3f	obj/kernel.asm	/^c0108b3f:	55                   	push   %ebp$/;"	l
c0108b40	obj/kernel.asm	/^c0108b40:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b42	obj/kernel.asm	/^c0108b42:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108b45	obj/kernel.asm	/^c0108b45:	e8 63 c6 ff ff       	call   c01051ad <nr_free_pages>$/;"	l
c0108b4a	obj/kernel.asm	/^c0108b4a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108b4d	obj/kernel.asm	/^c0108b4d:	e8 82 f3 ff ff       	call   c0107ed4 <mm_create>$/;"	l
c0108b52	obj/kernel.asm	/^c0108b52:	a3 0c 31 15 c0       	mov    %eax,0xc015310c$/;"	l
c0108b57	obj/kernel.asm	/^c0108b57:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c0108b5c	obj/kernel.asm	/^c0108b5c:	85 c0                	test   %eax,%eax$/;"	l
c0108b5e	obj/kernel.asm	/^c0108b5e:	75 24                	jne    c0108b84 <check_pgfault+0x45>$/;"	l
c0108b60	obj/kernel.asm	/^c0108b60:	c7 44 24 0c 7b 72 11 	movl   $0xc011727b,0xc(%esp)$/;"	l
c0108b67	obj/kernel.asm	/^c0108b67:	c0 $/;"	l
c0108b68	obj/kernel.asm	/^c0108b68:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108b6f	obj/kernel.asm	/^c0108b6f:	c0 $/;"	l
c0108b70	obj/kernel.asm	/^c0108b70:	c7 44 24 04 4b 01 00 	movl   $0x14b,0x4(%esp)$/;"	l
c0108b77	obj/kernel.asm	/^c0108b77:	00 $/;"	l
c0108b78	obj/kernel.asm	/^c0108b78:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108b7f	obj/kernel.asm	/^c0108b7f:	e8 44 83 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108b84	obj/kernel.asm	/^c0108b84:	a1 0c 31 15 c0       	mov    0xc015310c,%eax$/;"	l
c0108b89	obj/kernel.asm	/^c0108b89:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108b8c	obj/kernel.asm	/^c0108b8c:	8b 15 84 fe 14 c0    	mov    0xc014fe84,%edx$/;"	l
c0108b92	obj/kernel.asm	/^c0108b92:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108b95	obj/kernel.asm	/^c0108b95:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0108b98	obj/kernel.asm	/^c0108b98:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108b9b	obj/kernel.asm	/^c0108b9b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108b9e	obj/kernel.asm	/^c0108b9e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108ba1	obj/kernel.asm	/^c0108ba1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108ba4	obj/kernel.asm	/^c0108ba4:	8b 00                	mov    (%eax),%eax$/;"	l
c0108ba6	obj/kernel.asm	/^c0108ba6:	85 c0                	test   %eax,%eax$/;"	l
c0108ba8	obj/kernel.asm	/^c0108ba8:	74 24                	je     c0108bce <check_pgfault+0x8f>$/;"	l
c0108baa	obj/kernel.asm	/^c0108baa:	c7 44 24 0c 93 72 11 	movl   $0xc0117293,0xc(%esp)$/;"	l
c0108bb1	obj/kernel.asm	/^c0108bb1:	c0 $/;"	l
c0108bb2	obj/kernel.asm	/^c0108bb2:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108bb9	obj/kernel.asm	/^c0108bb9:	c0 $/;"	l
c0108bba	obj/kernel.asm	/^c0108bba:	c7 44 24 04 4f 01 00 	movl   $0x14f,0x4(%esp)$/;"	l
c0108bc1	obj/kernel.asm	/^c0108bc1:	00 $/;"	l
c0108bc2	obj/kernel.asm	/^c0108bc2:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108bc9	obj/kernel.asm	/^c0108bc9:	e8 fa 82 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108bce	obj/kernel.asm	/^c0108bce:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c0108bd5	obj/kernel.asm	/^c0108bd5:	00 $/;"	l
c0108bd6	obj/kernel.asm	/^c0108bd6:	c7 44 24 04 00 00 40 	movl   $0x400000,0x4(%esp)$/;"	l
c0108bdd	obj/kernel.asm	/^c0108bdd:	00 $/;"	l
c0108bde	obj/kernel.asm	/^c0108bde:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0108be5	obj/kernel.asm	/^c0108be5:	e8 8f f3 ff ff       	call   c0107f79 <vma_create>$/;"	l
c0108bea	obj/kernel.asm	/^c0108bea:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108bed	obj/kernel.asm	/^c0108bed:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0108bf1	obj/kernel.asm	/^c0108bf1:	75 24                	jne    c0108c17 <check_pgfault+0xd8>$/;"	l
c0108bf3	obj/kernel.asm	/^c0108bf3:	c7 44 24 0c 24 71 11 	movl   $0xc0117124,0xc(%esp)$/;"	l
c0108bfa	obj/kernel.asm	/^c0108bfa:	c0 $/;"	l
c0108bfb	obj/kernel.asm	/^c0108bfb:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108c02	obj/kernel.asm	/^c0108c02:	c0 $/;"	l
c0108c03	obj/kernel.asm	/^c0108c03:	c7 44 24 04 52 01 00 	movl   $0x152,0x4(%esp)$/;"	l
c0108c0a	obj/kernel.asm	/^c0108c0a:	00 $/;"	l
c0108c0b	obj/kernel.asm	/^c0108c0b:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108c12	obj/kernel.asm	/^c0108c12:	e8 b1 82 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108c17	obj/kernel.asm	/^c0108c17:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108c1a	obj/kernel.asm	/^c0108c1a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108c1e	obj/kernel.asm	/^c0108c1e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108c21	obj/kernel.asm	/^c0108c21:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108c24	obj/kernel.asm	/^c0108c24:	e8 e0 f4 ff ff       	call   c0108109 <insert_vma_struct>$/;"	l
c0108c29	obj/kernel.asm	/^c0108c29:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0108c30	obj/kernel.asm	/^c0108c30:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108c33	obj/kernel.asm	/^c0108c33:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108c37	obj/kernel.asm	/^c0108c37:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108c3a	obj/kernel.asm	/^c0108c3a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108c3d	obj/kernel.asm	/^c0108c3d:	e8 72 f3 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c0108c42	obj/kernel.asm	/^c0108c42:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0108c45	obj/kernel.asm	/^c0108c45:	74 24                	je     c0108c6b <check_pgfault+0x12c>$/;"	l
c0108c47	obj/kernel.asm	/^c0108c47:	c7 44 24 0c a1 72 11 	movl   $0xc01172a1,0xc(%esp)$/;"	l
c0108c4e	obj/kernel.asm	/^c0108c4e:	c0 $/;"	l
c0108c4f	obj/kernel.asm	/^c0108c4f:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108c56	obj/kernel.asm	/^c0108c56:	c0 $/;"	l
c0108c57	obj/kernel.asm	/^c0108c57:	c7 44 24 04 57 01 00 	movl   $0x157,0x4(%esp)$/;"	l
c0108c5e	obj/kernel.asm	/^c0108c5e:	00 $/;"	l
c0108c5f	obj/kernel.asm	/^c0108c5f:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108c66	obj/kernel.asm	/^c0108c66:	e8 5d 82 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108c6b	obj/kernel.asm	/^c0108c6b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0108c72	obj/kernel.asm	/^c0108c72:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108c79	obj/kernel.asm	/^c0108c79:	eb 17                	jmp    c0108c92 <check_pgfault+0x153>$/;"	l
c0108c7b	obj/kernel.asm	/^c0108c7b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108c7e	obj/kernel.asm	/^c0108c7e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108c81	obj/kernel.asm	/^c0108c81:	01 d0                	add    %edx,%eax$/;"	l
c0108c83	obj/kernel.asm	/^c0108c83:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108c86	obj/kernel.asm	/^c0108c86:	88 10                	mov    %dl,(%eax)$/;"	l
c0108c88	obj/kernel.asm	/^c0108c88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108c8b	obj/kernel.asm	/^c0108c8b:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0108c8e	obj/kernel.asm	/^c0108c8e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108c92	obj/kernel.asm	/^c0108c92:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0108c96	obj/kernel.asm	/^c0108c96:	7e e3                	jle    c0108c7b <check_pgfault+0x13c>$/;"	l
c0108c98	obj/kernel.asm	/^c0108c98:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108c9f	obj/kernel.asm	/^c0108c9f:	eb 15                	jmp    c0108cb6 <check_pgfault+0x177>$/;"	l
c0108ca1	obj/kernel.asm	/^c0108ca1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108ca4	obj/kernel.asm	/^c0108ca4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108ca7	obj/kernel.asm	/^c0108ca7:	01 d0                	add    %edx,%eax$/;"	l
c0108ca9	obj/kernel.asm	/^c0108ca9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0108cac	obj/kernel.asm	/^c0108cac:	0f be c0             	movsbl %al,%eax$/;"	l
c0108caf	obj/kernel.asm	/^c0108caf:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0108cb2	obj/kernel.asm	/^c0108cb2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108cb6	obj/kernel.asm	/^c0108cb6:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0108cba	obj/kernel.asm	/^c0108cba:	7e e5                	jle    c0108ca1 <check_pgfault+0x162>$/;"	l
c0108cbc	obj/kernel.asm	/^c0108cbc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108cc0	obj/kernel.asm	/^c0108cc0:	74 24                	je     c0108ce6 <check_pgfault+0x1a7>$/;"	l
c0108cc2	obj/kernel.asm	/^c0108cc2:	c7 44 24 0c bb 72 11 	movl   $0xc01172bb,0xc(%esp)$/;"	l
c0108cc9	obj/kernel.asm	/^c0108cc9:	c0 $/;"	l
c0108cca	obj/kernel.asm	/^c0108cca:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108cd1	obj/kernel.asm	/^c0108cd1:	c0 $/;"	l
c0108cd2	obj/kernel.asm	/^c0108cd2:	c7 44 24 04 61 01 00 	movl   $0x161,0x4(%esp)$/;"	l
c0108cd9	obj/kernel.asm	/^c0108cd9:	00 $/;"	l
c0108cda	obj/kernel.asm	/^c0108cda:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108ce1	obj/kernel.asm	/^c0108ce1:	e8 e2 81 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108ce6	obj/kernel.asm	/^c0108ce6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108ce9	obj/kernel.asm	/^c0108ce9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108cec	obj/kernel.asm	/^c0108cec:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108cef	obj/kernel.asm	/^c0108cef:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0108cf4	obj/kernel.asm	/^c0108cf4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108cf8	obj/kernel.asm	/^c0108cf8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108cfb	obj/kernel.asm	/^c0108cfb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108cfe	obj/kernel.asm	/^c0108cfe:	e8 7f d1 ff ff       	call   c0105e82 <page_remove>$/;"	l
c0108d03	obj/kernel.asm	/^c0108d03:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108d06	obj/kernel.asm	/^c0108d06:	8b 00                	mov    (%eax),%eax$/;"	l
c0108d08	obj/kernel.asm	/^c0108d08:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d0b	obj/kernel.asm	/^c0108d0b:	e8 ac f1 ff ff       	call   c0107ebc <pde2page>$/;"	l
c0108d10	obj/kernel.asm	/^c0108d10:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0108d17	obj/kernel.asm	/^c0108d17:	00 $/;"	l
c0108d18	obj/kernel.asm	/^c0108d18:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d1b	obj/kernel.asm	/^c0108d1b:	e8 5b c4 ff ff       	call   c010517b <free_pages>$/;"	l
c0108d20	obj/kernel.asm	/^c0108d20:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108d23	obj/kernel.asm	/^c0108d23:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0108d29	obj/kernel.asm	/^c0108d29:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108d2c	obj/kernel.asm	/^c0108d2c:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0108d33	obj/kernel.asm	/^c0108d33:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108d36	obj/kernel.asm	/^c0108d36:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d39	obj/kernel.asm	/^c0108d39:	e8 fb f4 ff ff       	call   c0108239 <mm_destroy>$/;"	l
c0108d3e	obj/kernel.asm	/^c0108d3e:	c7 05 0c 31 15 c0 00 	movl   $0x0,0xc015310c$/;"	l
c0108d45	obj/kernel.asm	/^c0108d45:	00 00 00 $/;"	l
c0108d48	obj/kernel.asm	/^c0108d48:	e8 60 c4 ff ff       	call   c01051ad <nr_free_pages>$/;"	l
c0108d4d	obj/kernel.asm	/^c0108d4d:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108d50	obj/kernel.asm	/^c0108d50:	74 24                	je     c0108d76 <check_pgfault+0x237>$/;"	l
c0108d52	obj/kernel.asm	/^c0108d52:	c7 44 24 0c c4 72 11 	movl   $0xc01172c4,0xc(%esp)$/;"	l
c0108d59	obj/kernel.asm	/^c0108d59:	c0 $/;"	l
c0108d5a	obj/kernel.asm	/^c0108d5a:	c7 44 24 08 33 70 11 	movl   $0xc0117033,0x8(%esp)$/;"	l
c0108d61	obj/kernel.asm	/^c0108d61:	c0 $/;"	l
c0108d62	obj/kernel.asm	/^c0108d62:	c7 44 24 04 6b 01 00 	movl   $0x16b,0x4(%esp)$/;"	l
c0108d69	obj/kernel.asm	/^c0108d69:	00 $/;"	l
c0108d6a	obj/kernel.asm	/^c0108d6a:	c7 04 24 48 70 11 c0 	movl   $0xc0117048,(%esp)$/;"	l
c0108d71	obj/kernel.asm	/^c0108d71:	e8 52 81 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0108d76	obj/kernel.asm	/^c0108d76:	c7 04 24 eb 72 11 c0 	movl   $0xc01172eb,(%esp)$/;"	l
c0108d7d	obj/kernel.asm	/^c0108d7d:	e8 e3 75 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108d82	obj/kernel.asm	/^c0108d82:	c9                   	leave  $/;"	l
c0108d83	obj/kernel.asm	/^c0108d83:	c3                   	ret    $/;"	l
c0108d84	obj/kernel.asm	/^c0108d84 <do_pgfault>:$/;"	l
c0108d84	obj/kernel.asm	/^c0108d84:	55                   	push   %ebp$/;"	l
c0108d85	obj/kernel.asm	/^c0108d85:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d87	obj/kernel.asm	/^c0108d87:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108d8a	obj/kernel.asm	/^c0108d8a:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0108d91	obj/kernel.asm	/^c0108d91:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108d94	obj/kernel.asm	/^c0108d94:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108d98	obj/kernel.asm	/^c0108d98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d9b	obj/kernel.asm	/^c0108d9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d9e	obj/kernel.asm	/^c0108d9e:	e8 11 f2 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c0108da3	obj/kernel.asm	/^c0108da3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108da6	obj/kernel.asm	/^c0108da6:	a1 18 ff 14 c0       	mov    0xc014ff18,%eax$/;"	l
c0108dab	obj/kernel.asm	/^c0108dab:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108dae	obj/kernel.asm	/^c0108dae:	a3 18 ff 14 c0       	mov    %eax,0xc014ff18$/;"	l
c0108db3	obj/kernel.asm	/^c0108db3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108db7	obj/kernel.asm	/^c0108db7:	74 0b                	je     c0108dc4 <do_pgfault+0x40>$/;"	l
c0108db9	obj/kernel.asm	/^c0108db9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108dbc	obj/kernel.asm	/^c0108dbc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108dbf	obj/kernel.asm	/^c0108dbf:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0108dc2	obj/kernel.asm	/^c0108dc2:	76 18                	jbe    c0108ddc <do_pgfault+0x58>$/;"	l
c0108dc4	obj/kernel.asm	/^c0108dc4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108dc7	obj/kernel.asm	/^c0108dc7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108dcb	obj/kernel.asm	/^c0108dcb:	c7 04 24 08 73 11 c0 	movl   $0xc0117308,(%esp)$/;"	l
c0108dd2	obj/kernel.asm	/^c0108dd2:	e8 8e 75 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108dd7	obj/kernel.asm	/^c0108dd7:	e9 6c 01 00 00       	jmp    c0108f48 <do_pgfault+0x1c4>$/;"	l
c0108ddc	obj/kernel.asm	/^c0108ddc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108ddf	obj/kernel.asm	/^c0108ddf:	83 e0 03             	and    $0x3,%eax$/;"	l
c0108de2	obj/kernel.asm	/^c0108de2:	85 c0                	test   %eax,%eax$/;"	l
c0108de4	obj/kernel.asm	/^c0108de4:	74 36                	je     c0108e1c <do_pgfault+0x98>$/;"	l
c0108de6	obj/kernel.asm	/^c0108de6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108de9	obj/kernel.asm	/^c0108de9:	74 20                	je     c0108e0b <do_pgfault+0x87>$/;"	l
c0108deb	obj/kernel.asm	/^c0108deb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108dee	obj/kernel.asm	/^c0108dee:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108df1	obj/kernel.asm	/^c0108df1:	83 e0 02             	and    $0x2,%eax$/;"	l
c0108df4	obj/kernel.asm	/^c0108df4:	85 c0                	test   %eax,%eax$/;"	l
c0108df6	obj/kernel.asm	/^c0108df6:	75 11                	jne    c0108e09 <do_pgfault+0x85>$/;"	l
c0108df8	obj/kernel.asm	/^c0108df8:	c7 04 24 38 73 11 c0 	movl   $0xc0117338,(%esp)$/;"	l
c0108dff	obj/kernel.asm	/^c0108dff:	e8 61 75 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108e04	obj/kernel.asm	/^c0108e04:	e9 3f 01 00 00       	jmp    c0108f48 <do_pgfault+0x1c4>$/;"	l
c0108e09	obj/kernel.asm	/^c0108e09:	eb 2f                	jmp    c0108e3a <do_pgfault+0xb6>$/;"	l
c0108e0b	obj/kernel.asm	/^c0108e0b:	c7 04 24 98 73 11 c0 	movl   $0xc0117398,(%esp)$/;"	l
c0108e12	obj/kernel.asm	/^c0108e12:	e8 4e 75 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108e17	obj/kernel.asm	/^c0108e17:	e9 2c 01 00 00       	jmp    c0108f48 <do_pgfault+0x1c4>$/;"	l
c0108e1c	obj/kernel.asm	/^c0108e1c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108e1f	obj/kernel.asm	/^c0108e1f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108e22	obj/kernel.asm	/^c0108e22:	83 e0 05             	and    $0x5,%eax$/;"	l
c0108e25	obj/kernel.asm	/^c0108e25:	85 c0                	test   %eax,%eax$/;"	l
c0108e27	obj/kernel.asm	/^c0108e27:	75 11                	jne    c0108e3a <do_pgfault+0xb6>$/;"	l
c0108e29	obj/kernel.asm	/^c0108e29:	c7 04 24 d0 73 11 c0 	movl   $0xc01173d0,(%esp)$/;"	l
c0108e30	obj/kernel.asm	/^c0108e30:	e8 30 75 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108e35	obj/kernel.asm	/^c0108e35:	e9 0e 01 00 00       	jmp    c0108f48 <do_pgfault+0x1c4>$/;"	l
c0108e3a	obj/kernel.asm	/^c0108e3a:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c0108e41	obj/kernel.asm	/^c0108e41:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108e44	obj/kernel.asm	/^c0108e44:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108e47	obj/kernel.asm	/^c0108e47:	83 e0 02             	and    $0x2,%eax$/;"	l
c0108e4a	obj/kernel.asm	/^c0108e4a:	85 c0                	test   %eax,%eax$/;"	l
c0108e4c	obj/kernel.asm	/^c0108e4c:	74 04                	je     c0108e52 <do_pgfault+0xce>$/;"	l
c0108e4e	obj/kernel.asm	/^c0108e4e:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c0108e52	obj/kernel.asm	/^c0108e52:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108e55	obj/kernel.asm	/^c0108e55:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108e58	obj/kernel.asm	/^c0108e58:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108e5b	obj/kernel.asm	/^c0108e5b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0108e60	obj/kernel.asm	/^c0108e60:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0108e63	obj/kernel.asm	/^c0108e63:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0108e6a	obj/kernel.asm	/^c0108e6a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0108e71	obj/kernel.asm	/^c0108e71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e74	obj/kernel.asm	/^c0108e74:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108e77	obj/kernel.asm	/^c0108e77:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0108e7e	obj/kernel.asm	/^c0108e7e:	00 $/;"	l
c0108e7f	obj/kernel.asm	/^c0108e7f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108e82	obj/kernel.asm	/^c0108e82:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108e86	obj/kernel.asm	/^c0108e86:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108e89	obj/kernel.asm	/^c0108e89:	e8 e9 c9 ff ff       	call   c0105877 <get_pte>$/;"	l
c0108e8e	obj/kernel.asm	/^c0108e8e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108e91	obj/kernel.asm	/^c0108e91:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108e94	obj/kernel.asm	/^c0108e94:	8b 00                	mov    (%eax),%eax$/;"	l
c0108e96	obj/kernel.asm	/^c0108e96:	85 c0                	test   %eax,%eax$/;"	l
c0108e98	obj/kernel.asm	/^c0108e98:	75 21                	jne    c0108ebb <do_pgfault+0x137>$/;"	l
c0108e9a	obj/kernel.asm	/^c0108e9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e9d	obj/kernel.asm	/^c0108e9d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108ea0	obj/kernel.asm	/^c0108ea0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108ea3	obj/kernel.asm	/^c0108ea3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0108ea7	obj/kernel.asm	/^c0108ea7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0108eaa	obj/kernel.asm	/^c0108eaa:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108eae	obj/kernel.asm	/^c0108eae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108eb1	obj/kernel.asm	/^c0108eb1:	e8 26 d1 ff ff       	call   c0105fdc <pgdir_alloc_page>$/;"	l
c0108eb6	obj/kernel.asm	/^c0108eb6:	e9 86 00 00 00       	jmp    c0108f41 <do_pgfault+0x1bd>$/;"	l
c0108ebb	obj/kernel.asm	/^c0108ebb:	a1 0c ff 14 c0       	mov    0xc014ff0c,%eax$/;"	l
c0108ec0	obj/kernel.asm	/^c0108ec0:	85 c0                	test   %eax,%eax$/;"	l
c0108ec2	obj/kernel.asm	/^c0108ec2:	74 66                	je     c0108f2a <do_pgfault+0x1a6>$/;"	l
c0108ec4	obj/kernel.asm	/^c0108ec4:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0108ecb	obj/kernel.asm	/^c0108ecb:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c0108ece	obj/kernel.asm	/^c0108ece:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108ed2	obj/kernel.asm	/^c0108ed2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108ed5	obj/kernel.asm	/^c0108ed5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108ed9	obj/kernel.asm	/^c0108ed9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108edc	obj/kernel.asm	/^c0108edc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108edf	obj/kernel.asm	/^c0108edf:	e8 a4 e1 ff ff       	call   c0107088 <swap_in>$/;"	l
c0108ee4	obj/kernel.asm	/^c0108ee4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108ee7	obj/kernel.asm	/^c0108ee7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108eea	obj/kernel.asm	/^c0108eea:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108eed	obj/kernel.asm	/^c0108eed:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c0108ef0	obj/kernel.asm	/^c0108ef0:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0108ef4	obj/kernel.asm	/^c0108ef4:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0108ef7	obj/kernel.asm	/^c0108ef7:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0108efb	obj/kernel.asm	/^c0108efb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108eff	obj/kernel.asm	/^c0108eff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108f02	obj/kernel.asm	/^c0108f02:	e8 bf cf ff ff       	call   c0105ec6 <page_insert>$/;"	l
c0108f07	obj/kernel.asm	/^c0108f07:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108f0a	obj/kernel.asm	/^c0108f0a:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0108f11	obj/kernel.asm	/^c0108f11:	00 $/;"	l
c0108f12	obj/kernel.asm	/^c0108f12:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108f16	obj/kernel.asm	/^c0108f16:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108f19	obj/kernel.asm	/^c0108f19:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108f1d	obj/kernel.asm	/^c0108f1d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f20	obj/kernel.asm	/^c0108f20:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108f23	obj/kernel.asm	/^c0108f23:	e8 97 df ff ff       	call   c0106ebf <swap_map_swappable>$/;"	l
c0108f28	obj/kernel.asm	/^c0108f28:	eb 17                	jmp    c0108f41 <do_pgfault+0x1bd>$/;"	l
c0108f2a	obj/kernel.asm	/^c0108f2a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108f2d	obj/kernel.asm	/^c0108f2d:	8b 00                	mov    (%eax),%eax$/;"	l
c0108f2f	obj/kernel.asm	/^c0108f2f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108f33	obj/kernel.asm	/^c0108f33:	c7 04 24 34 74 11 c0 	movl   $0xc0117434,(%esp)$/;"	l
c0108f3a	obj/kernel.asm	/^c0108f3a:	e8 26 74 ff ff       	call   c0100365 <cprintf>$/;"	l
c0108f3f	obj/kernel.asm	/^c0108f3f:	eb 07                	jmp    c0108f48 <do_pgfault+0x1c4>$/;"	l
c0108f41	obj/kernel.asm	/^c0108f41:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108f48	obj/kernel.asm	/^c0108f48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f4b	obj/kernel.asm	/^c0108f4b:	c9                   	leave  $/;"	l
c0108f4c	obj/kernel.asm	/^c0108f4c:	c3                   	ret    $/;"	l
c0108f4d	obj/kernel.asm	/^c0108f4d <user_mem_check>:$/;"	l
c0108f4d	obj/kernel.asm	/^c0108f4d:	55                   	push   %ebp$/;"	l
c0108f4e	obj/kernel.asm	/^c0108f4e:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f50	obj/kernel.asm	/^c0108f50:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108f53	obj/kernel.asm	/^c0108f53:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108f57	obj/kernel.asm	/^c0108f57:	0f 84 e0 00 00 00    	je     c010903d <user_mem_check+0xf0>$/;"	l
c0108f5d	obj/kernel.asm	/^c0108f5d:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0108f64	obj/kernel.asm	/^c0108f64:	76 1c                	jbe    c0108f82 <user_mem_check+0x35>$/;"	l
c0108f66	obj/kernel.asm	/^c0108f66:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108f69	obj/kernel.asm	/^c0108f69:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108f6c	obj/kernel.asm	/^c0108f6c:	01 d0                	add    %edx,%eax$/;"	l
c0108f6e	obj/kernel.asm	/^c0108f6e:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0108f71	obj/kernel.asm	/^c0108f71:	76 0f                	jbe    c0108f82 <user_mem_check+0x35>$/;"	l
c0108f73	obj/kernel.asm	/^c0108f73:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108f76	obj/kernel.asm	/^c0108f76:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108f79	obj/kernel.asm	/^c0108f79:	01 d0                	add    %edx,%eax$/;"	l
c0108f7b	obj/kernel.asm	/^c0108f7b:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0108f80	obj/kernel.asm	/^c0108f80:	76 0a                	jbe    c0108f8c <user_mem_check+0x3f>$/;"	l
c0108f82	obj/kernel.asm	/^c0108f82:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108f87	obj/kernel.asm	/^c0108f87:	e9 e2 00 00 00       	jmp    c010906e <user_mem_check+0x121>$/;"	l
c0108f8c	obj/kernel.asm	/^c0108f8c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108f8f	obj/kernel.asm	/^c0108f8f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108f92	obj/kernel.asm	/^c0108f92:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0108f95	obj/kernel.asm	/^c0108f95:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108f98	obj/kernel.asm	/^c0108f98:	01 d0                	add    %edx,%eax$/;"	l
c0108f9a	obj/kernel.asm	/^c0108f9a:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0108f9d	obj/kernel.asm	/^c0108f9d:	e9 88 00 00 00       	jmp    c010902a <user_mem_check+0xdd>$/;"	l
c0108fa2	obj/kernel.asm	/^c0108fa2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108fa5	obj/kernel.asm	/^c0108fa5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108fa9	obj/kernel.asm	/^c0108fa9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108fac	obj/kernel.asm	/^c0108fac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108faf	obj/kernel.asm	/^c0108faf:	e8 00 f0 ff ff       	call   c0107fb4 <find_vma>$/;"	l
c0108fb4	obj/kernel.asm	/^c0108fb4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108fb7	obj/kernel.asm	/^c0108fb7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108fbb	obj/kernel.asm	/^c0108fbb:	74 0b                	je     c0108fc8 <user_mem_check+0x7b>$/;"	l
c0108fbd	obj/kernel.asm	/^c0108fbd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108fc0	obj/kernel.asm	/^c0108fc0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108fc3	obj/kernel.asm	/^c0108fc3:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0108fc6	obj/kernel.asm	/^c0108fc6:	76 0a                	jbe    c0108fd2 <user_mem_check+0x85>$/;"	l
c0108fc8	obj/kernel.asm	/^c0108fc8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108fcd	obj/kernel.asm	/^c0108fcd:	e9 9c 00 00 00       	jmp    c010906e <user_mem_check+0x121>$/;"	l
c0108fd2	obj/kernel.asm	/^c0108fd2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108fd5	obj/kernel.asm	/^c0108fd5:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0108fd8	obj/kernel.asm	/^c0108fd8:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0108fdc	obj/kernel.asm	/^c0108fdc:	74 07                	je     c0108fe5 <user_mem_check+0x98>$/;"	l
c0108fde	obj/kernel.asm	/^c0108fde:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
c0108fe3	obj/kernel.asm	/^c0108fe3:	eb 05                	jmp    c0108fea <user_mem_check+0x9d>$/;"	l
c0108fe5	obj/kernel.asm	/^c0108fe5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108fea	obj/kernel.asm	/^c0108fea:	21 d0                	and    %edx,%eax$/;"	l
c0108fec	obj/kernel.asm	/^c0108fec:	85 c0                	test   %eax,%eax$/;"	l
c0108fee	obj/kernel.asm	/^c0108fee:	75 07                	jne    c0108ff7 <user_mem_check+0xaa>$/;"	l
c0108ff0	obj/kernel.asm	/^c0108ff0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108ff5	obj/kernel.asm	/^c0108ff5:	eb 77                	jmp    c010906e <user_mem_check+0x121>$/;"	l
c0108ff7	obj/kernel.asm	/^c0108ff7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0108ffb	obj/kernel.asm	/^c0108ffb:	74 24                	je     c0109021 <user_mem_check+0xd4>$/;"	l
c0108ffd	obj/kernel.asm	/^c0108ffd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109000	obj/kernel.asm	/^c0109000:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109003	obj/kernel.asm	/^c0109003:	83 e0 08             	and    $0x8,%eax$/;"	l
c0109006	obj/kernel.asm	/^c0109006:	85 c0                	test   %eax,%eax$/;"	l
c0109008	obj/kernel.asm	/^c0109008:	74 17                	je     c0109021 <user_mem_check+0xd4>$/;"	l
c010900a	obj/kernel.asm	/^c010900a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010900d	obj/kernel.asm	/^c010900d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109010	obj/kernel.asm	/^c0109010:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0109015	obj/kernel.asm	/^c0109015:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0109018	obj/kernel.asm	/^c0109018:	76 07                	jbe    c0109021 <user_mem_check+0xd4>$/;"	l
c010901a	obj/kernel.asm	/^c010901a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010901f	obj/kernel.asm	/^c010901f:	eb 4d                	jmp    c010906e <user_mem_check+0x121>$/;"	l
c0109021	obj/kernel.asm	/^c0109021:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109024	obj/kernel.asm	/^c0109024:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109027	obj/kernel.asm	/^c0109027:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010902a	obj/kernel.asm	/^c010902a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010902d	obj/kernel.asm	/^c010902d:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0109030	obj/kernel.asm	/^c0109030:	0f 82 6c ff ff ff    	jb     c0108fa2 <user_mem_check+0x55>$/;"	l
c0109036	obj/kernel.asm	/^c0109036:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010903b	obj/kernel.asm	/^c010903b:	eb 31                	jmp    c010906e <user_mem_check+0x121>$/;"	l
c010903d	obj/kernel.asm	/^c010903d:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c0109044	obj/kernel.asm	/^c0109044:	76 23                	jbe    c0109069 <user_mem_check+0x11c>$/;"	l
c0109046	obj/kernel.asm	/^c0109046:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109049	obj/kernel.asm	/^c0109049:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010904c	obj/kernel.asm	/^c010904c:	01 d0                	add    %edx,%eax$/;"	l
c010904e	obj/kernel.asm	/^c010904e:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109051	obj/kernel.asm	/^c0109051:	76 16                	jbe    c0109069 <user_mem_check+0x11c>$/;"	l
c0109053	obj/kernel.asm	/^c0109053:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109056	obj/kernel.asm	/^c0109056:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109059	obj/kernel.asm	/^c0109059:	01 d0                	add    %edx,%eax$/;"	l
c010905b	obj/kernel.asm	/^c010905b:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c0109060	obj/kernel.asm	/^c0109060:	77 07                	ja     c0109069 <user_mem_check+0x11c>$/;"	l
c0109062	obj/kernel.asm	/^c0109062:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109067	obj/kernel.asm	/^c0109067:	eb 05                	jmp    c010906e <user_mem_check+0x121>$/;"	l
c0109069	obj/kernel.asm	/^c0109069:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010906e	obj/kernel.asm	/^c010906e:	c9                   	leave  $/;"	l
c010906f	obj/kernel.asm	/^c010906f:	c3                   	ret    $/;"	l
c0109070	obj/kernel.asm	/^c0109070 <copy_string>:$/;"	l
c0109070	obj/kernel.asm	/^c0109070:	55                   	push   %ebp$/;"	l
c0109071	obj/kernel.asm	/^c0109071:	89 e5                	mov    %esp,%ebp$/;"	l
c0109073	obj/kernel.asm	/^c0109073:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109076	obj/kernel.asm	/^c0109076:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109079	obj/kernel.asm	/^c0109079:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010907e	obj/kernel.asm	/^c010907e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109081	obj/kernel.asm	/^c0109081:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109084	obj/kernel.asm	/^c0109084:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0109089	obj/kernel.asm	/^c0109089:	89 c2                	mov    %eax,%edx$/;"	l
c010908b	obj/kernel.asm	/^c010908b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010908e	obj/kernel.asm	/^c010908e:	29 c2                	sub    %eax,%edx$/;"	l
c0109090	obj/kernel.asm	/^c0109090:	89 d0                	mov    %edx,%eax$/;"	l
c0109092	obj/kernel.asm	/^c0109092:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109095	obj/kernel.asm	/^c0109095:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109098	obj/kernel.asm	/^c0109098:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010909b	obj/kernel.asm	/^c010909b:	76 06                	jbe    c01090a3 <copy_string+0x33>$/;"	l
c010909d	obj/kernel.asm	/^c010909d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01090a0	obj/kernel.asm	/^c01090a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01090a3	obj/kernel.asm	/^c01090a3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01090a6	obj/kernel.asm	/^c01090a6:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01090ad	obj/kernel.asm	/^c01090ad:	00 $/;"	l
c01090ae	obj/kernel.asm	/^c01090ae:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01090b1	obj/kernel.asm	/^c01090b1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01090b5	obj/kernel.asm	/^c01090b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01090b9	obj/kernel.asm	/^c01090b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090bc	obj/kernel.asm	/^c01090bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01090bf	obj/kernel.asm	/^c01090bf:	e8 89 fe ff ff       	call   c0108f4d <user_mem_check>$/;"	l
c01090c4	obj/kernel.asm	/^c01090c4:	85 c0                	test   %eax,%eax$/;"	l
c01090c6	obj/kernel.asm	/^c01090c6:	75 0a                	jne    c01090d2 <copy_string+0x62>$/;"	l
c01090c8	obj/kernel.asm	/^c01090c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01090cd	obj/kernel.asm	/^c01090cd:	e9 86 00 00 00       	jmp    c0109158 <copy_string+0xe8>$/;"	l
c01090d2	obj/kernel.asm	/^c01090d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090d5	obj/kernel.asm	/^c01090d5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01090d9	obj/kernel.asm	/^c01090d9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01090dc	obj/kernel.asm	/^c01090dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01090df	obj/kernel.asm	/^c01090df:	e8 07 c0 00 00       	call   c01150eb <strnlen>$/;"	l
c01090e4	obj/kernel.asm	/^c01090e4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01090e7	obj/kernel.asm	/^c01090e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01090ea	obj/kernel.asm	/^c01090ea:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01090ed	obj/kernel.asm	/^c01090ed:	73 23                	jae    c0109112 <copy_string+0xa2>$/;"	l
c01090ef	obj/kernel.asm	/^c01090ef:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01090f2	obj/kernel.asm	/^c01090f2:	83 c0 01             	add    $0x1,%eax$/;"	l
c01090f5	obj/kernel.asm	/^c01090f5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01090f9	obj/kernel.asm	/^c01090f9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01090fc	obj/kernel.asm	/^c01090fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109100	obj/kernel.asm	/^c0109100:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109103	obj/kernel.asm	/^c0109103:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109106	obj/kernel.asm	/^c0109106:	e8 f0 c3 00 00       	call   c01154fb <memcpy>$/;"	l
c010910b	obj/kernel.asm	/^c010910b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109110	obj/kernel.asm	/^c0109110:	eb 46                	jmp    c0109158 <copy_string+0xe8>$/;"	l
c0109112	obj/kernel.asm	/^c0109112:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109115	obj/kernel.asm	/^c0109115:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0109118	obj/kernel.asm	/^c0109118:	75 07                	jne    c0109121 <copy_string+0xb1>$/;"	l
c010911a	obj/kernel.asm	/^c010911a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010911f	obj/kernel.asm	/^c010911f:	eb 37                	jmp    c0109158 <copy_string+0xe8>$/;"	l
c0109121	obj/kernel.asm	/^c0109121:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109124	obj/kernel.asm	/^c0109124:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109128	obj/kernel.asm	/^c0109128:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010912b	obj/kernel.asm	/^c010912b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010912f	obj/kernel.asm	/^c010912f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109132	obj/kernel.asm	/^c0109132:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109135	obj/kernel.asm	/^c0109135:	e8 c1 c3 00 00       	call   c01154fb <memcpy>$/;"	l
c010913a	obj/kernel.asm	/^c010913a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010913d	obj/kernel.asm	/^c010913d:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c0109140	obj/kernel.asm	/^c0109140:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109143	obj/kernel.asm	/^c0109143:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c0109146	obj/kernel.asm	/^c0109146:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109149	obj/kernel.asm	/^c0109149:	29 45 14             	sub    %eax,0x14(%ebp)$/;"	l
c010914c	obj/kernel.asm	/^c010914c:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
c0109153	obj/kernel.asm	/^c0109153:	e9 3d ff ff ff       	jmp    c0109095 <copy_string+0x25>$/;"	l
c0109158	obj/kernel.asm	/^c0109158:	c9                   	leave  $/;"	l
c0109159	obj/kernel.asm	/^c0109159:	c3                   	ret    $/;"	l
c010915a	obj/kernel.asm	/^c010915a <phi_test_sema>:$/;"	l
c010915a	obj/kernel.asm	/^c010915a:	55                   	push   %ebp$/;"	l
c010915b	obj/kernel.asm	/^c010915b:	89 e5                	mov    %esp,%ebp$/;"	l
c010915d	obj/kernel.asm	/^c010915d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109160	obj/kernel.asm	/^c0109160:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109163	obj/kernel.asm	/^c0109163:	8b 04 85 20 31 15 c0 	mov    -0x3feacee0(,%eax,4),%eax$/;"	l
c010916a	obj/kernel.asm	/^c010916a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010916d	obj/kernel.asm	/^c010916d:	0f 85 85 00 00 00    	jne    c01091f8 <phi_test_sema+0x9e>$/;"	l
c0109173	obj/kernel.asm	/^c0109173:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109176	obj/kernel.asm	/^c0109176:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0109179	obj/kernel.asm	/^c0109179:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010917e	obj/kernel.asm	/^c010917e:	89 c8                	mov    %ecx,%eax$/;"	l
c0109180	obj/kernel.asm	/^c0109180:	f7 ea                	imul   %edx$/;"	l
c0109182	obj/kernel.asm	/^c0109182:	d1 fa                	sar    %edx$/;"	d
c0109184	obj/kernel.asm	/^c0109184:	89 c8                	mov    %ecx,%eax$/;"	l
c0109186	obj/kernel.asm	/^c0109186:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0109189	obj/kernel.asm	/^c0109189:	29 c2                	sub    %eax,%edx$/;"	l
c010918b	obj/kernel.asm	/^c010918b:	89 d0                	mov    %edx,%eax$/;"	l
c010918d	obj/kernel.asm	/^c010918d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109190	obj/kernel.asm	/^c0109190:	01 d0                	add    %edx,%eax$/;"	l
c0109192	obj/kernel.asm	/^c0109192:	29 c1                	sub    %eax,%ecx$/;"	l
c0109194	obj/kernel.asm	/^c0109194:	89 ca                	mov    %ecx,%edx$/;"	l
c0109196	obj/kernel.asm	/^c0109196:	8b 04 95 20 31 15 c0 	mov    -0x3feacee0(,%edx,4),%eax$/;"	l
c010919d	obj/kernel.asm	/^c010919d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01091a0	obj/kernel.asm	/^c01091a0:	74 56                	je     c01091f8 <phi_test_sema+0x9e>$/;"	l
c01091a2	obj/kernel.asm	/^c01091a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091a5	obj/kernel.asm	/^c01091a5:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01091a8	obj/kernel.asm	/^c01091a8:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01091ad	obj/kernel.asm	/^c01091ad:	89 c8                	mov    %ecx,%eax$/;"	l
c01091af	obj/kernel.asm	/^c01091af:	f7 ea                	imul   %edx$/;"	l
c01091b1	obj/kernel.asm	/^c01091b1:	d1 fa                	sar    %edx$/;"	d
c01091b3	obj/kernel.asm	/^c01091b3:	89 c8                	mov    %ecx,%eax$/;"	l
c01091b5	obj/kernel.asm	/^c01091b5:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01091b8	obj/kernel.asm	/^c01091b8:	29 c2                	sub    %eax,%edx$/;"	l
c01091ba	obj/kernel.asm	/^c01091ba:	89 d0                	mov    %edx,%eax$/;"	l
c01091bc	obj/kernel.asm	/^c01091bc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01091bf	obj/kernel.asm	/^c01091bf:	01 d0                	add    %edx,%eax$/;"	l
c01091c1	obj/kernel.asm	/^c01091c1:	29 c1                	sub    %eax,%ecx$/;"	l
c01091c3	obj/kernel.asm	/^c01091c3:	89 ca                	mov    %ecx,%edx$/;"	l
c01091c5	obj/kernel.asm	/^c01091c5:	8b 04 95 20 31 15 c0 	mov    -0x3feacee0(,%edx,4),%eax$/;"	l
c01091cc	obj/kernel.asm	/^c01091cc:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01091cf	obj/kernel.asm	/^c01091cf:	74 27                	je     c01091f8 <phi_test_sema+0x9e>$/;"	l
c01091d1	obj/kernel.asm	/^c01091d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091d4	obj/kernel.asm	/^c01091d4:	c7 04 85 20 31 15 c0 	movl   $0x2,-0x3feacee0(,%eax,4)$/;"	l
c01091db	obj/kernel.asm	/^c01091db:	02 00 00 00 $/;"	l
c01091df	obj/kernel.asm	/^c01091df:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01091e2	obj/kernel.asm	/^c01091e2:	89 d0                	mov    %edx,%eax$/;"	l
c01091e4	obj/kernel.asm	/^c01091e4:	01 c0                	add    %eax,%eax$/;"	l
c01091e6	obj/kernel.asm	/^c01091e6:	01 d0                	add    %edx,%eax$/;"	l
c01091e8	obj/kernel.asm	/^c01091e8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01091eb	obj/kernel.asm	/^c01091eb:	05 c0 31 15 c0       	add    $0xc01531c0,%eax$/;"	l
c01091f0	obj/kernel.asm	/^c01091f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01091f3	obj/kernel.asm	/^c01091f3:	e8 ea 09 00 00       	call   c0109be2 <up>$/;"	l
c01091f8	obj/kernel.asm	/^c01091f8:	c9                   	leave  $/;"	l
c01091f9	obj/kernel.asm	/^c01091f9:	c3                   	ret    $/;"	l
c01091fa	obj/kernel.asm	/^c01091fa <phi_take_forks_sema>:$/;"	l
c01091fa	obj/kernel.asm	/^c01091fa:	55                   	push   %ebp$/;"	l
c01091fb	obj/kernel.asm	/^c01091fb:	89 e5                	mov    %esp,%ebp$/;"	l
c01091fd	obj/kernel.asm	/^c01091fd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109200	obj/kernel.asm	/^c0109200:	c7 04 24 48 31 15 c0 	movl   $0xc0153148,(%esp)$/;"	l
c0109207	obj/kernel.asm	/^c0109207:	e8 f1 09 00 00       	call   c0109bfd <down>$/;"	l
c010920c	obj/kernel.asm	/^c010920c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010920f	obj/kernel.asm	/^c010920f:	c7 04 85 20 31 15 c0 	movl   $0x1,-0x3feacee0(,%eax,4)$/;"	l
c0109216	obj/kernel.asm	/^c0109216:	01 00 00 00 $/;"	l
c010921a	obj/kernel.asm	/^c010921a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010921d	obj/kernel.asm	/^c010921d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109220	obj/kernel.asm	/^c0109220:	e8 35 ff ff ff       	call   c010915a <phi_test_sema>$/;"	l
c0109225	obj/kernel.asm	/^c0109225:	c7 04 24 48 31 15 c0 	movl   $0xc0153148,(%esp)$/;"	l
c010922c	obj/kernel.asm	/^c010922c:	e8 b1 09 00 00       	call   c0109be2 <up>$/;"	l
c0109231	obj/kernel.asm	/^c0109231:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109234	obj/kernel.asm	/^c0109234:	89 d0                	mov    %edx,%eax$/;"	l
c0109236	obj/kernel.asm	/^c0109236:	01 c0                	add    %eax,%eax$/;"	l
c0109238	obj/kernel.asm	/^c0109238:	01 d0                	add    %edx,%eax$/;"	l
c010923a	obj/kernel.asm	/^c010923a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010923d	obj/kernel.asm	/^c010923d:	05 c0 31 15 c0       	add    $0xc01531c0,%eax$/;"	l
c0109242	obj/kernel.asm	/^c0109242:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109245	obj/kernel.asm	/^c0109245:	e8 b3 09 00 00       	call   c0109bfd <down>$/;"	l
c010924a	obj/kernel.asm	/^c010924a:	c9                   	leave  $/;"	l
c010924b	obj/kernel.asm	/^c010924b:	c3                   	ret    $/;"	l
c010924c	obj/kernel.asm	/^c010924c <phi_put_forks_sema>:$/;"	l
c010924c	obj/kernel.asm	/^c010924c:	55                   	push   %ebp$/;"	l
c010924d	obj/kernel.asm	/^c010924d:	89 e5                	mov    %esp,%ebp$/;"	l
c010924f	obj/kernel.asm	/^c010924f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109252	obj/kernel.asm	/^c0109252:	c7 04 24 48 31 15 c0 	movl   $0xc0153148,(%esp)$/;"	l
c0109259	obj/kernel.asm	/^c0109259:	e8 9f 09 00 00       	call   c0109bfd <down>$/;"	l
c010925e	obj/kernel.asm	/^c010925e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109261	obj/kernel.asm	/^c0109261:	c7 04 85 20 31 15 c0 	movl   $0x0,-0x3feacee0(,%eax,4)$/;"	l
c0109268	obj/kernel.asm	/^c0109268:	00 00 00 00 $/;"	l
c010926c	obj/kernel.asm	/^c010926c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010926f	obj/kernel.asm	/^c010926f:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0109272	obj/kernel.asm	/^c0109272:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0109277	obj/kernel.asm	/^c0109277:	89 c8                	mov    %ecx,%eax$/;"	l
c0109279	obj/kernel.asm	/^c0109279:	f7 ea                	imul   %edx$/;"	l
c010927b	obj/kernel.asm	/^c010927b:	d1 fa                	sar    %edx$/;"	d
c010927d	obj/kernel.asm	/^c010927d:	89 c8                	mov    %ecx,%eax$/;"	l
c010927f	obj/kernel.asm	/^c010927f:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0109282	obj/kernel.asm	/^c0109282:	29 c2                	sub    %eax,%edx$/;"	l
c0109284	obj/kernel.asm	/^c0109284:	89 d0                	mov    %edx,%eax$/;"	l
c0109286	obj/kernel.asm	/^c0109286:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109289	obj/kernel.asm	/^c0109289:	01 d0                	add    %edx,%eax$/;"	l
c010928b	obj/kernel.asm	/^c010928b:	29 c1                	sub    %eax,%ecx$/;"	l
c010928d	obj/kernel.asm	/^c010928d:	89 ca                	mov    %ecx,%edx$/;"	l
c010928f	obj/kernel.asm	/^c010928f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109292	obj/kernel.asm	/^c0109292:	e8 c3 fe ff ff       	call   c010915a <phi_test_sema>$/;"	l
c0109297	obj/kernel.asm	/^c0109297:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010929a	obj/kernel.asm	/^c010929a:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010929d	obj/kernel.asm	/^c010929d:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01092a2	obj/kernel.asm	/^c01092a2:	89 c8                	mov    %ecx,%eax$/;"	l
c01092a4	obj/kernel.asm	/^c01092a4:	f7 ea                	imul   %edx$/;"	l
c01092a6	obj/kernel.asm	/^c01092a6:	d1 fa                	sar    %edx$/;"	d
c01092a8	obj/kernel.asm	/^c01092a8:	89 c8                	mov    %ecx,%eax$/;"	l
c01092aa	obj/kernel.asm	/^c01092aa:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01092ad	obj/kernel.asm	/^c01092ad:	29 c2                	sub    %eax,%edx$/;"	l
c01092af	obj/kernel.asm	/^c01092af:	89 d0                	mov    %edx,%eax$/;"	l
c01092b1	obj/kernel.asm	/^c01092b1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01092b4	obj/kernel.asm	/^c01092b4:	01 d0                	add    %edx,%eax$/;"	l
c01092b6	obj/kernel.asm	/^c01092b6:	29 c1                	sub    %eax,%ecx$/;"	l
c01092b8	obj/kernel.asm	/^c01092b8:	89 ca                	mov    %ecx,%edx$/;"	l
c01092ba	obj/kernel.asm	/^c01092ba:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01092bd	obj/kernel.asm	/^c01092bd:	e8 98 fe ff ff       	call   c010915a <phi_test_sema>$/;"	l
c01092c2	obj/kernel.asm	/^c01092c2:	c7 04 24 48 31 15 c0 	movl   $0xc0153148,(%esp)$/;"	l
c01092c9	obj/kernel.asm	/^c01092c9:	e8 14 09 00 00       	call   c0109be2 <up>$/;"	l
c01092ce	obj/kernel.asm	/^c01092ce:	c9                   	leave  $/;"	l
c01092cf	obj/kernel.asm	/^c01092cf:	c3                   	ret    $/;"	l
c01092d0	obj/kernel.asm	/^c01092d0 <philosopher_using_semaphore>:$/;"	l
c01092d0	obj/kernel.asm	/^c01092d0:	55                   	push   %ebp$/;"	l
c01092d1	obj/kernel.asm	/^c01092d1:	89 e5                	mov    %esp,%ebp$/;"	l
c01092d3	obj/kernel.asm	/^c01092d3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01092d6	obj/kernel.asm	/^c01092d6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01092dd	obj/kernel.asm	/^c01092dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092e0	obj/kernel.asm	/^c01092e0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01092e3	obj/kernel.asm	/^c01092e3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01092e6	obj/kernel.asm	/^c01092e6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01092ea	obj/kernel.asm	/^c01092ea:	c7 04 24 5c 74 11 c0 	movl   $0xc011745c,(%esp)$/;"	l
c01092f1	obj/kernel.asm	/^c01092f1:	e8 6f 70 ff ff       	call   c0100365 <cprintf>$/;"	l
c01092f6	obj/kernel.asm	/^c01092f6:	eb 62                	jmp    c010935a <philosopher_using_semaphore+0x8a>$/;"	l
c01092f8	obj/kernel.asm	/^c01092f8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01092fb	obj/kernel.asm	/^c01092fb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01092ff	obj/kernel.asm	/^c01092ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109302	obj/kernel.asm	/^c0109302:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109306	obj/kernel.asm	/^c0109306:	c7 04 24 7c 74 11 c0 	movl   $0xc011747c,(%esp)$/;"	l
c010930d	obj/kernel.asm	/^c010930d:	e8 53 70 ff ff       	call   c0100365 <cprintf>$/;"	l
c0109312	obj/kernel.asm	/^c0109312:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c0109319	obj/kernel.asm	/^c0109319:	e8 24 4c 00 00       	call   c010df42 <do_sleep>$/;"	l
c010931e	obj/kernel.asm	/^c010931e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109321	obj/kernel.asm	/^c0109321:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109324	obj/kernel.asm	/^c0109324:	e8 d1 fe ff ff       	call   c01091fa <phi_take_forks_sema>$/;"	l
c0109329	obj/kernel.asm	/^c0109329:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010932c	obj/kernel.asm	/^c010932c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109330	obj/kernel.asm	/^c0109330:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109333	obj/kernel.asm	/^c0109333:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109337	obj/kernel.asm	/^c0109337:	c7 04 24 ac 74 11 c0 	movl   $0xc01174ac,(%esp)$/;"	l
c010933e	obj/kernel.asm	/^c010933e:	e8 22 70 ff ff       	call   c0100365 <cprintf>$/;"	l
c0109343	obj/kernel.asm	/^c0109343:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010934a	obj/kernel.asm	/^c010934a:	e8 f3 4b 00 00       	call   c010df42 <do_sleep>$/;"	l
c010934f	obj/kernel.asm	/^c010934f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109352	obj/kernel.asm	/^c0109352:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109355	obj/kernel.asm	/^c0109355:	e8 f2 fe ff ff       	call   c010924c <phi_put_forks_sema>$/;"	l
c010935a	obj/kernel.asm	/^c010935a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010935d	obj/kernel.asm	/^c010935d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109360	obj/kernel.asm	/^c0109360:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0109363	obj/kernel.asm	/^c0109363:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109366	obj/kernel.asm	/^c0109366:	7e 90                	jle    c01092f8 <philosopher_using_semaphore+0x28>$/;"	l
c0109368	obj/kernel.asm	/^c0109368:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010936b	obj/kernel.asm	/^c010936b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010936f	obj/kernel.asm	/^c010936f:	c7 04 24 d7 74 11 c0 	movl   $0xc01174d7,(%esp)$/;"	l
c0109376	obj/kernel.asm	/^c0109376:	e8 ea 6f ff ff       	call   c0100365 <cprintf>$/;"	l
c010937b	obj/kernel.asm	/^c010937b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109380	obj/kernel.asm	/^c0109380:	c9                   	leave  $/;"	l
c0109381	obj/kernel.asm	/^c0109381:	c3                   	ret    $/;"	l
c0109382	obj/kernel.asm	/^c0109382 <phi_test_condvar>:$/;"	l
c0109382	obj/kernel.asm	/^c0109382:	55                   	push   %ebp$/;"	l
c0109383	obj/kernel.asm	/^c0109383:	89 e5                	mov    %esp,%ebp$/;"	l
c0109385	obj/kernel.asm	/^c0109385:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109388	obj/kernel.asm	/^c0109388:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010938b	obj/kernel.asm	/^c010938b:	8b 04 85 80 31 15 c0 	mov    -0x3feace80(,%eax,4),%eax$/;"	l
c0109392	obj/kernel.asm	/^c0109392:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0109395	obj/kernel.asm	/^c0109395:	0f 85 b5 00 00 00    	jne    c0109450 <phi_test_condvar+0xce>$/;"	l
c010939b	obj/kernel.asm	/^c010939b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010939e	obj/kernel.asm	/^c010939e:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01093a1	obj/kernel.asm	/^c01093a1:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01093a6	obj/kernel.asm	/^c01093a6:	89 c8                	mov    %ecx,%eax$/;"	l
c01093a8	obj/kernel.asm	/^c01093a8:	f7 ea                	imul   %edx$/;"	l
c01093aa	obj/kernel.asm	/^c01093aa:	d1 fa                	sar    %edx$/;"	d
c01093ac	obj/kernel.asm	/^c01093ac:	89 c8                	mov    %ecx,%eax$/;"	l
c01093ae	obj/kernel.asm	/^c01093ae:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01093b1	obj/kernel.asm	/^c01093b1:	29 c2                	sub    %eax,%edx$/;"	l
c01093b3	obj/kernel.asm	/^c01093b3:	89 d0                	mov    %edx,%eax$/;"	l
c01093b5	obj/kernel.asm	/^c01093b5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01093b8	obj/kernel.asm	/^c01093b8:	01 d0                	add    %edx,%eax$/;"	l
c01093ba	obj/kernel.asm	/^c01093ba:	29 c1                	sub    %eax,%ecx$/;"	l
c01093bc	obj/kernel.asm	/^c01093bc:	89 ca                	mov    %ecx,%edx$/;"	l
c01093be	obj/kernel.asm	/^c01093be:	8b 04 95 80 31 15 c0 	mov    -0x3feace80(,%edx,4),%eax$/;"	l
c01093c5	obj/kernel.asm	/^c01093c5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01093c8	obj/kernel.asm	/^c01093c8:	0f 84 82 00 00 00    	je     c0109450 <phi_test_condvar+0xce>$/;"	l
c01093ce	obj/kernel.asm	/^c01093ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093d1	obj/kernel.asm	/^c01093d1:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01093d4	obj/kernel.asm	/^c01093d4:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01093d9	obj/kernel.asm	/^c01093d9:	89 c8                	mov    %ecx,%eax$/;"	l
c01093db	obj/kernel.asm	/^c01093db:	f7 ea                	imul   %edx$/;"	l
c01093dd	obj/kernel.asm	/^c01093dd:	d1 fa                	sar    %edx$/;"	d
c01093df	obj/kernel.asm	/^c01093df:	89 c8                	mov    %ecx,%eax$/;"	l
c01093e1	obj/kernel.asm	/^c01093e1:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01093e4	obj/kernel.asm	/^c01093e4:	29 c2                	sub    %eax,%edx$/;"	l
c01093e6	obj/kernel.asm	/^c01093e6:	89 d0                	mov    %edx,%eax$/;"	l
c01093e8	obj/kernel.asm	/^c01093e8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01093eb	obj/kernel.asm	/^c01093eb:	01 d0                	add    %edx,%eax$/;"	l
c01093ed	obj/kernel.asm	/^c01093ed:	29 c1                	sub    %eax,%ecx$/;"	l
c01093ef	obj/kernel.asm	/^c01093ef:	89 ca                	mov    %ecx,%edx$/;"	l
c01093f1	obj/kernel.asm	/^c01093f1:	8b 04 95 80 31 15 c0 	mov    -0x3feace80(,%edx,4),%eax$/;"	l
c01093f8	obj/kernel.asm	/^c01093f8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01093fb	obj/kernel.asm	/^c01093fb:	74 53                	je     c0109450 <phi_test_condvar+0xce>$/;"	l
c01093fd	obj/kernel.asm	/^c01093fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109400	obj/kernel.asm	/^c0109400:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109404	obj/kernel.asm	/^c0109404:	c7 04 24 f4 74 11 c0 	movl   $0xc01174f4,(%esp)$/;"	l
c010940b	obj/kernel.asm	/^c010940b:	e8 55 6f ff ff       	call   c0100365 <cprintf>$/;"	l
c0109410	obj/kernel.asm	/^c0109410:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109413	obj/kernel.asm	/^c0109413:	c7 04 85 80 31 15 c0 	movl   $0x2,-0x3feace80(,%eax,4)$/;"	l
c010941a	obj/kernel.asm	/^c010941a:	02 00 00 00 $/;"	l
c010941e	obj/kernel.asm	/^c010941e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109421	obj/kernel.asm	/^c0109421:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109425	obj/kernel.asm	/^c0109425:	c7 04 24 28 75 11 c0 	movl   $0xc0117528,(%esp)$/;"	l
c010942c	obj/kernel.asm	/^c010942c:	e8 34 6f ff ff       	call   c0100365 <cprintf>$/;"	l
c0109431	obj/kernel.asm	/^c0109431:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c0109436	obj/kernel.asm	/^c0109436:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0109439	obj/kernel.asm	/^c0109439:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010943c	obj/kernel.asm	/^c010943c:	89 d0                	mov    %edx,%eax$/;"	l
c010943e	obj/kernel.asm	/^c010943e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109441	obj/kernel.asm	/^c0109441:	01 d0                	add    %edx,%eax$/;"	l
c0109443	obj/kernel.asm	/^c0109443:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109446	obj/kernel.asm	/^c0109446:	01 c8                	add    %ecx,%eax$/;"	l
c0109448	obj/kernel.asm	/^c0109448:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010944b	obj/kernel.asm	/^c010944b:	e8 8f 04 00 00       	call   c01098df <cond_signal>$/;"	l
c0109450	obj/kernel.asm	/^c0109450:	c9                   	leave  $/;"	l
c0109451	obj/kernel.asm	/^c0109451:	c3                   	ret    $/;"	l
c0109452	obj/kernel.asm	/^c0109452 <phi_take_forks_condvar>:$/;"	l
c0109452	obj/kernel.asm	/^c0109452:	55                   	push   %ebp$/;"	l
c0109453	obj/kernel.asm	/^c0109453:	89 e5                	mov    %esp,%ebp$/;"	l
c0109455	obj/kernel.asm	/^c0109455:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109458	obj/kernel.asm	/^c0109458:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c010945d	obj/kernel.asm	/^c010945d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109460	obj/kernel.asm	/^c0109460:	e8 98 07 00 00       	call   c0109bfd <down>$/;"	l
c0109465	obj/kernel.asm	/^c0109465:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109468	obj/kernel.asm	/^c0109468:	c7 04 85 80 31 15 c0 	movl   $0x1,-0x3feace80(,%eax,4)$/;"	l
c010946f	obj/kernel.asm	/^c010946f:	01 00 00 00 $/;"	l
c0109473	obj/kernel.asm	/^c0109473:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109476	obj/kernel.asm	/^c0109476:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109479	obj/kernel.asm	/^c0109479:	e8 04 ff ff ff       	call   c0109382 <phi_test_condvar>$/;"	l
c010947e	obj/kernel.asm	/^c010947e:	eb 32                	jmp    c01094b2 <phi_take_forks_condvar+0x60>$/;"	l
c0109480	obj/kernel.asm	/^c0109480:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109483	obj/kernel.asm	/^c0109483:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109487	obj/kernel.asm	/^c0109487:	c7 04 24 50 75 11 c0 	movl   $0xc0117550,(%esp)$/;"	l
c010948e	obj/kernel.asm	/^c010948e:	e8 d2 6e ff ff       	call   c0100365 <cprintf>$/;"	l
c0109493	obj/kernel.asm	/^c0109493:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c0109498	obj/kernel.asm	/^c0109498:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010949b	obj/kernel.asm	/^c010949b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010949e	obj/kernel.asm	/^c010949e:	89 d0                	mov    %edx,%eax$/;"	l
c01094a0	obj/kernel.asm	/^c01094a0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01094a3	obj/kernel.asm	/^c01094a3:	01 d0                	add    %edx,%eax$/;"	l
c01094a5	obj/kernel.asm	/^c01094a5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01094a8	obj/kernel.asm	/^c01094a8:	01 c8                	add    %ecx,%eax$/;"	l
c01094aa	obj/kernel.asm	/^c01094aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01094ad	obj/kernel.asm	/^c01094ad:	e8 cd 04 00 00       	call   c010997f <cond_wait>$/;"	l
c01094b2	obj/kernel.asm	/^c01094b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094b5	obj/kernel.asm	/^c01094b5:	8b 04 85 80 31 15 c0 	mov    -0x3feace80(,%eax,4),%eax$/;"	l
c01094bc	obj/kernel.asm	/^c01094bc:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01094bf	obj/kernel.asm	/^c01094bf:	75 bf                	jne    c0109480 <phi_take_forks_condvar+0x2e>$/;"	l
c01094c1	obj/kernel.asm	/^c01094c1:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c01094c6	obj/kernel.asm	/^c01094c6:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01094c9	obj/kernel.asm	/^c01094c9:	85 c0                	test   %eax,%eax$/;"	l
c01094cb	obj/kernel.asm	/^c01094cb:	7e 12                	jle    c01094df <phi_take_forks_condvar+0x8d>$/;"	l
c01094cd	obj/kernel.asm	/^c01094cd:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c01094d2	obj/kernel.asm	/^c01094d2:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01094d5	obj/kernel.asm	/^c01094d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01094d8	obj/kernel.asm	/^c01094d8:	e8 05 07 00 00       	call   c0109be2 <up>$/;"	l
c01094dd	obj/kernel.asm	/^c01094dd:	eb 0d                	jmp    c01094ec <phi_take_forks_condvar+0x9a>$/;"	l
c01094df	obj/kernel.asm	/^c01094df:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c01094e4	obj/kernel.asm	/^c01094e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01094e7	obj/kernel.asm	/^c01094e7:	e8 f6 06 00 00       	call   c0109be2 <up>$/;"	l
c01094ec	obj/kernel.asm	/^c01094ec:	c9                   	leave  $/;"	l
c01094ed	obj/kernel.asm	/^c01094ed:	c3                   	ret    $/;"	l
c01094ee	obj/kernel.asm	/^c01094ee <phi_put_forks_condvar>:$/;"	l
c01094ee	obj/kernel.asm	/^c01094ee:	55                   	push   %ebp$/;"	l
c01094ef	obj/kernel.asm	/^c01094ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01094f1	obj/kernel.asm	/^c01094f1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01094f4	obj/kernel.asm	/^c01094f4:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c01094f9	obj/kernel.asm	/^c01094f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01094fc	obj/kernel.asm	/^c01094fc:	e8 fc 06 00 00       	call   c0109bfd <down>$/;"	l
c0109501	obj/kernel.asm	/^c0109501:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109504	obj/kernel.asm	/^c0109504:	c7 04 85 80 31 15 c0 	movl   $0x0,-0x3feace80(,%eax,4)$/;"	l
c010950b	obj/kernel.asm	/^c010950b:	00 00 00 00 $/;"	l
c010950f	obj/kernel.asm	/^c010950f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109512	obj/kernel.asm	/^c0109512:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0109515	obj/kernel.asm	/^c0109515:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010951a	obj/kernel.asm	/^c010951a:	89 c8                	mov    %ecx,%eax$/;"	l
c010951c	obj/kernel.asm	/^c010951c:	f7 ea                	imul   %edx$/;"	l
c010951e	obj/kernel.asm	/^c010951e:	d1 fa                	sar    %edx$/;"	d
c0109520	obj/kernel.asm	/^c0109520:	89 c8                	mov    %ecx,%eax$/;"	l
c0109522	obj/kernel.asm	/^c0109522:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0109525	obj/kernel.asm	/^c0109525:	29 c2                	sub    %eax,%edx$/;"	l
c0109527	obj/kernel.asm	/^c0109527:	89 d0                	mov    %edx,%eax$/;"	l
c0109529	obj/kernel.asm	/^c0109529:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010952c	obj/kernel.asm	/^c010952c:	01 d0                	add    %edx,%eax$/;"	l
c010952e	obj/kernel.asm	/^c010952e:	29 c1                	sub    %eax,%ecx$/;"	l
c0109530	obj/kernel.asm	/^c0109530:	89 ca                	mov    %ecx,%edx$/;"	l
c0109532	obj/kernel.asm	/^c0109532:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109535	obj/kernel.asm	/^c0109535:	e8 48 fe ff ff       	call   c0109382 <phi_test_condvar>$/;"	l
c010953a	obj/kernel.asm	/^c010953a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010953d	obj/kernel.asm	/^c010953d:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0109540	obj/kernel.asm	/^c0109540:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0109545	obj/kernel.asm	/^c0109545:	89 c8                	mov    %ecx,%eax$/;"	l
c0109547	obj/kernel.asm	/^c0109547:	f7 ea                	imul   %edx$/;"	l
c0109549	obj/kernel.asm	/^c0109549:	d1 fa                	sar    %edx$/;"	d
c010954b	obj/kernel.asm	/^c010954b:	89 c8                	mov    %ecx,%eax$/;"	l
c010954d	obj/kernel.asm	/^c010954d:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0109550	obj/kernel.asm	/^c0109550:	29 c2                	sub    %eax,%edx$/;"	l
c0109552	obj/kernel.asm	/^c0109552:	89 d0                	mov    %edx,%eax$/;"	l
c0109554	obj/kernel.asm	/^c0109554:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109557	obj/kernel.asm	/^c0109557:	01 d0                	add    %edx,%eax$/;"	l
c0109559	obj/kernel.asm	/^c0109559:	29 c1                	sub    %eax,%ecx$/;"	l
c010955b	obj/kernel.asm	/^c010955b:	89 ca                	mov    %ecx,%edx$/;"	l
c010955d	obj/kernel.asm	/^c010955d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109560	obj/kernel.asm	/^c0109560:	e8 1d fe ff ff       	call   c0109382 <phi_test_condvar>$/;"	l
c0109565	obj/kernel.asm	/^c0109565:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c010956a	obj/kernel.asm	/^c010956a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010956d	obj/kernel.asm	/^c010956d:	85 c0                	test   %eax,%eax$/;"	l
c010956f	obj/kernel.asm	/^c010956f:	7e 12                	jle    c0109583 <phi_put_forks_condvar+0x95>$/;"	l
c0109571	obj/kernel.asm	/^c0109571:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c0109576	obj/kernel.asm	/^c0109576:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109579	obj/kernel.asm	/^c0109579:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010957c	obj/kernel.asm	/^c010957c:	e8 61 06 00 00       	call   c0109be2 <up>$/;"	l
c0109581	obj/kernel.asm	/^c0109581:	eb 0d                	jmp    c0109590 <phi_put_forks_condvar+0xa2>$/;"	l
c0109583	obj/kernel.asm	/^c0109583:	a1 80 ea 14 c0       	mov    0xc014ea80,%eax$/;"	l
c0109588	obj/kernel.asm	/^c0109588:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010958b	obj/kernel.asm	/^c010958b:	e8 52 06 00 00       	call   c0109be2 <up>$/;"	l
c0109590	obj/kernel.asm	/^c0109590:	c9                   	leave  $/;"	l
c0109591	obj/kernel.asm	/^c0109591:	c3                   	ret    $/;"	l
c0109592	obj/kernel.asm	/^c0109592 <philosopher_using_condvar>:$/;"	l
c0109592	obj/kernel.asm	/^c0109592:	55                   	push   %ebp$/;"	l
c0109593	obj/kernel.asm	/^c0109593:	89 e5                	mov    %esp,%ebp$/;"	l
c0109595	obj/kernel.asm	/^c0109595:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109598	obj/kernel.asm	/^c0109598:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010959f	obj/kernel.asm	/^c010959f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095a2	obj/kernel.asm	/^c01095a2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01095a5	obj/kernel.asm	/^c01095a5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01095a8	obj/kernel.asm	/^c01095a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01095ac	obj/kernel.asm	/^c01095ac:	c7 04 24 8c 75 11 c0 	movl   $0xc011758c,(%esp)$/;"	l
c01095b3	obj/kernel.asm	/^c01095b3:	e8 ad 6d ff ff       	call   c0100365 <cprintf>$/;"	l
c01095b8	obj/kernel.asm	/^c01095b8:	eb 62                	jmp    c010961c <philosopher_using_condvar+0x8a>$/;"	l
c01095ba	obj/kernel.asm	/^c01095ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01095bd	obj/kernel.asm	/^c01095bd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01095c1	obj/kernel.asm	/^c01095c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01095c4	obj/kernel.asm	/^c01095c4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01095c8	obj/kernel.asm	/^c01095c8:	c7 04 24 ac 75 11 c0 	movl   $0xc01175ac,(%esp)$/;"	l
c01095cf	obj/kernel.asm	/^c01095cf:	e8 91 6d ff ff       	call   c0100365 <cprintf>$/;"	l
c01095d4	obj/kernel.asm	/^c01095d4:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c01095db	obj/kernel.asm	/^c01095db:	e8 62 49 00 00       	call   c010df42 <do_sleep>$/;"	l
c01095e0	obj/kernel.asm	/^c01095e0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01095e3	obj/kernel.asm	/^c01095e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01095e6	obj/kernel.asm	/^c01095e6:	e8 67 fe ff ff       	call   c0109452 <phi_take_forks_condvar>$/;"	l
c01095eb	obj/kernel.asm	/^c01095eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01095ee	obj/kernel.asm	/^c01095ee:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01095f2	obj/kernel.asm	/^c01095f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01095f5	obj/kernel.asm	/^c01095f5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01095f9	obj/kernel.asm	/^c01095f9:	c7 04 24 dc 75 11 c0 	movl   $0xc01175dc,(%esp)$/;"	l
c0109600	obj/kernel.asm	/^c0109600:	e8 60 6d ff ff       	call   c0100365 <cprintf>$/;"	l
c0109605	obj/kernel.asm	/^c0109605:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010960c	obj/kernel.asm	/^c010960c:	e8 31 49 00 00       	call   c010df42 <do_sleep>$/;"	l
c0109611	obj/kernel.asm	/^c0109611:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109614	obj/kernel.asm	/^c0109614:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109617	obj/kernel.asm	/^c0109617:	e8 d2 fe ff ff       	call   c01094ee <phi_put_forks_condvar>$/;"	l
c010961c	obj/kernel.asm	/^c010961c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010961f	obj/kernel.asm	/^c010961f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109622	obj/kernel.asm	/^c0109622:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0109625	obj/kernel.asm	/^c0109625:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109628	obj/kernel.asm	/^c0109628:	7e 90                	jle    c01095ba <philosopher_using_condvar+0x28>$/;"	l
c010962a	obj/kernel.asm	/^c010962a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010962d	obj/kernel.asm	/^c010962d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109631	obj/kernel.asm	/^c0109631:	c7 04 24 0c 76 11 c0 	movl   $0xc011760c,(%esp)$/;"	l
c0109638	obj/kernel.asm	/^c0109638:	e8 28 6d ff ff       	call   c0100365 <cprintf>$/;"	l
c010963d	obj/kernel.asm	/^c010963d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109642	obj/kernel.asm	/^c0109642:	c9                   	leave  $/;"	l
c0109643	obj/kernel.asm	/^c0109643:	c3                   	ret    $/;"	l
c0109644	obj/kernel.asm	/^c0109644 <check_sync>:$/;"	l
c0109644	obj/kernel.asm	/^c0109644:	55                   	push   %ebp$/;"	l
c0109645	obj/kernel.asm	/^c0109645:	89 e5                	mov    %esp,%ebp$/;"	l
c0109647	obj/kernel.asm	/^c0109647:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010964a	obj/kernel.asm	/^c010964a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109651	obj/kernel.asm	/^c0109651:	00 $/;"	l
c0109652	obj/kernel.asm	/^c0109652:	c7 04 24 48 31 15 c0 	movl   $0xc0153148,(%esp)$/;"	l
c0109659	obj/kernel.asm	/^c0109659:	e8 11 04 00 00       	call   c0109a6f <sem_init>$/;"	l
c010965e	obj/kernel.asm	/^c010965e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109665	obj/kernel.asm	/^c0109665:	e9 94 00 00 00       	jmp    c01096fe <check_sync+0xba>$/;"	l
c010966a	obj/kernel.asm	/^c010966a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010966d	obj/kernel.asm	/^c010966d:	89 d0                	mov    %edx,%eax$/;"	l
c010966f	obj/kernel.asm	/^c010966f:	01 c0                	add    %eax,%eax$/;"	l
c0109671	obj/kernel.asm	/^c0109671:	01 d0                	add    %edx,%eax$/;"	l
c0109673	obj/kernel.asm	/^c0109673:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109676	obj/kernel.asm	/^c0109676:	05 c0 31 15 c0       	add    $0xc01531c0,%eax$/;"	l
c010967b	obj/kernel.asm	/^c010967b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109682	obj/kernel.asm	/^c0109682:	00 $/;"	l
c0109683	obj/kernel.asm	/^c0109683:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109686	obj/kernel.asm	/^c0109686:	e8 e4 03 00 00       	call   c0109a6f <sem_init>$/;"	l
c010968b	obj/kernel.asm	/^c010968b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010968e	obj/kernel.asm	/^c010968e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0109695	obj/kernel.asm	/^c0109695:	00 $/;"	l
c0109696	obj/kernel.asm	/^c0109696:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010969a	obj/kernel.asm	/^c010969a:	c7 04 24 d0 92 10 c0 	movl   $0xc01092d0,(%esp)$/;"	l
c01096a1	obj/kernel.asm	/^c01096a1:	e8 09 2e 00 00       	call   c010c4af <kernel_thread>$/;"	l
c01096a6	obj/kernel.asm	/^c01096a6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01096a9	obj/kernel.asm	/^c01096a9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01096ad	obj/kernel.asm	/^c01096ad:	7f 1c                	jg     c01096cb <check_sync+0x87>$/;"	l
c01096af	obj/kernel.asm	/^c01096af:	c7 44 24 08 2c 76 11 	movl   $0xc011762c,0x8(%esp)$/;"	l
c01096b6	obj/kernel.asm	/^c01096b6:	c0 $/;"	l
c01096b7	obj/kernel.asm	/^c01096b7:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c01096be	obj/kernel.asm	/^c01096be:	00 $/;"	l
c01096bf	obj/kernel.asm	/^c01096bf:	c7 04 24 5e 76 11 c0 	movl   $0xc011765e,(%esp)$/;"	l
c01096c6	obj/kernel.asm	/^c01096c6:	e8 fd 77 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01096cb	obj/kernel.asm	/^c01096cb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096ce	obj/kernel.asm	/^c01096ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01096d1	obj/kernel.asm	/^c01096d1:	e8 65 2d 00 00       	call   c010c43b <find_proc>$/;"	l
c01096d6	obj/kernel.asm	/^c01096d6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01096d9	obj/kernel.asm	/^c01096d9:	89 04 95 94 31 15 c0 	mov    %eax,-0x3feace6c(,%edx,4)$/;"	l
c01096e0	obj/kernel.asm	/^c01096e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01096e3	obj/kernel.asm	/^c01096e3:	8b 04 85 94 31 15 c0 	mov    -0x3feace6c(,%eax,4),%eax$/;"	l
c01096ea	obj/kernel.asm	/^c01096ea:	c7 44 24 04 75 76 11 	movl   $0xc0117675,0x4(%esp)$/;"	l
c01096f1	obj/kernel.asm	/^c01096f1:	c0 $/;"	l
c01096f2	obj/kernel.asm	/^c01096f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01096f5	obj/kernel.asm	/^c01096f5:	e8 28 29 00 00       	call   c010c022 <set_proc_name>$/;"	l
c01096fa	obj/kernel.asm	/^c01096fa:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01096fe	obj/kernel.asm	/^c01096fe:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c0109702	obj/kernel.asm	/^c0109702:	0f 8e 62 ff ff ff    	jle    c010966a <check_sync+0x26>$/;"	l
c0109708	obj/kernel.asm	/^c0109708:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c010970f	obj/kernel.asm	/^c010970f:	00 $/;"	l
c0109710	obj/kernel.asm	/^c0109710:	c7 04 24 60 31 15 c0 	movl   $0xc0153160,(%esp)$/;"	l
c0109717	obj/kernel.asm	/^c0109717:	e8 99 00 00 00       	call   c01097b5 <monitor_init>$/;"	l
c010971c	obj/kernel.asm	/^c010971c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109723	obj/kernel.asm	/^c0109723:	e9 81 00 00 00       	jmp    c01097a9 <check_sync+0x165>$/;"	l
c0109728	obj/kernel.asm	/^c0109728:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010972b	obj/kernel.asm	/^c010972b:	c7 04 85 80 31 15 c0 	movl   $0x0,-0x3feace80(,%eax,4)$/;"	l
c0109732	obj/kernel.asm	/^c0109732:	00 00 00 00 $/;"	l
c0109736	obj/kernel.asm	/^c0109736:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109739	obj/kernel.asm	/^c0109739:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0109740	obj/kernel.asm	/^c0109740:	00 $/;"	l
c0109741	obj/kernel.asm	/^c0109741:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109745	obj/kernel.asm	/^c0109745:	c7 04 24 92 95 10 c0 	movl   $0xc0109592,(%esp)$/;"	l
c010974c	obj/kernel.asm	/^c010974c:	e8 5e 2d 00 00       	call   c010c4af <kernel_thread>$/;"	l
c0109751	obj/kernel.asm	/^c0109751:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109754	obj/kernel.asm	/^c0109754:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0109758	obj/kernel.asm	/^c0109758:	7f 1c                	jg     c0109776 <check_sync+0x132>$/;"	l
c010975a	obj/kernel.asm	/^c010975a:	c7 44 24 08 8c 76 11 	movl   $0xc011768c,0x8(%esp)$/;"	l
c0109761	obj/kernel.asm	/^c0109761:	c0 $/;"	l
c0109762	obj/kernel.asm	/^c0109762:	c7 44 24 04 cc 00 00 	movl   $0xcc,0x4(%esp)$/;"	l
c0109769	obj/kernel.asm	/^c0109769:	00 $/;"	l
c010976a	obj/kernel.asm	/^c010976a:	c7 04 24 5e 76 11 c0 	movl   $0xc011765e,(%esp)$/;"	l
c0109771	obj/kernel.asm	/^c0109771:	e8 52 77 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109776	obj/kernel.asm	/^c0109776:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109779	obj/kernel.asm	/^c0109779:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010977c	obj/kernel.asm	/^c010977c:	e8 ba 2c 00 00       	call   c010c43b <find_proc>$/;"	l
c0109781	obj/kernel.asm	/^c0109781:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109784	obj/kernel.asm	/^c0109784:	89 04 95 34 31 15 c0 	mov    %eax,-0x3feacecc(,%edx,4)$/;"	l
c010978b	obj/kernel.asm	/^c010978b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010978e	obj/kernel.asm	/^c010978e:	8b 04 85 34 31 15 c0 	mov    -0x3feacecc(,%eax,4),%eax$/;"	l
c0109795	obj/kernel.asm	/^c0109795:	c7 44 24 04 bc 76 11 	movl   $0xc01176bc,0x4(%esp)$/;"	l
c010979c	obj/kernel.asm	/^c010979c:	c0 $/;"	l
c010979d	obj/kernel.asm	/^c010979d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01097a0	obj/kernel.asm	/^c01097a0:	e8 7d 28 00 00       	call   c010c022 <set_proc_name>$/;"	l
c01097a5	obj/kernel.asm	/^c01097a5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01097a9	obj/kernel.asm	/^c01097a9:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c01097ad	obj/kernel.asm	/^c01097ad:	0f 8e 75 ff ff ff    	jle    c0109728 <check_sync+0xe4>$/;"	l
c01097b3	obj/kernel.asm	/^c01097b3:	c9                   	leave  $/;"	l
c01097b4	obj/kernel.asm	/^c01097b4:	c3                   	ret    $/;"	l
c01097b5	obj/kernel.asm	/^c01097b5 <monitor_init>:$/;"	l
c01097b5	obj/kernel.asm	/^c01097b5:	55                   	push   %ebp$/;"	l
c01097b6	obj/kernel.asm	/^c01097b6:	89 e5                	mov    %esp,%ebp$/;"	l
c01097b8	obj/kernel.asm	/^c01097b8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01097bb	obj/kernel.asm	/^c01097bb:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01097bf	obj/kernel.asm	/^c01097bf:	75 24                	jne    c01097e5 <monitor_init+0x30>$/;"	l
c01097c1	obj/kernel.asm	/^c01097c1:	c7 44 24 0c d8 76 11 	movl   $0xc01176d8,0xc(%esp)$/;"	l
c01097c8	obj/kernel.asm	/^c01097c8:	c0 $/;"	l
c01097c9	obj/kernel.asm	/^c01097c9:	c7 44 24 08 e1 76 11 	movl   $0xc01176e1,0x8(%esp)$/;"	l
c01097d0	obj/kernel.asm	/^c01097d0:	c0 $/;"	l
c01097d1	obj/kernel.asm	/^c01097d1:	c7 44 24 04 0b 00 00 	movl   $0xb,0x4(%esp)$/;"	l
c01097d8	obj/kernel.asm	/^c01097d8:	00 $/;"	l
c01097d9	obj/kernel.asm	/^c01097d9:	c7 04 24 f6 76 11 c0 	movl   $0xc01176f6,(%esp)$/;"	l
c01097e0	obj/kernel.asm	/^c01097e0:	e8 e3 76 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01097e5	obj/kernel.asm	/^c01097e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097e8	obj/kernel.asm	/^c01097e8:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c01097ef	obj/kernel.asm	/^c01097ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097f2	obj/kernel.asm	/^c01097f2:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c01097f9	obj/kernel.asm	/^c01097f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097fc	obj/kernel.asm	/^c01097fc:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109803	obj/kernel.asm	/^c0109803:	00 $/;"	l
c0109804	obj/kernel.asm	/^c0109804:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109807	obj/kernel.asm	/^c0109807:	e8 63 02 00 00       	call   c0109a6f <sem_init>$/;"	l
c010980c	obj/kernel.asm	/^c010980c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010980f	obj/kernel.asm	/^c010980f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109812	obj/kernel.asm	/^c0109812:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0109819	obj/kernel.asm	/^c0109819:	00 $/;"	l
c010981a	obj/kernel.asm	/^c010981a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010981d	obj/kernel.asm	/^c010981d:	e8 4d 02 00 00       	call   c0109a6f <sem_init>$/;"	l
c0109822	obj/kernel.asm	/^c0109822:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109825	obj/kernel.asm	/^c0109825:	89 d0                	mov    %edx,%eax$/;"	l
c0109827	obj/kernel.asm	/^c0109827:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010982a	obj/kernel.asm	/^c010982a:	01 d0                	add    %edx,%eax$/;"	l
c010982c	obj/kernel.asm	/^c010982c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010982f	obj/kernel.asm	/^c010982f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109832	obj/kernel.asm	/^c0109832:	e8 64 b4 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0109837	obj/kernel.asm	/^c0109837:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010983a	obj/kernel.asm	/^c010983a:	89 42 1c             	mov    %eax,0x1c(%edx)$/;"	l
c010983d	obj/kernel.asm	/^c010983d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109840	obj/kernel.asm	/^c0109840:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0109843	obj/kernel.asm	/^c0109843:	85 c0                	test   %eax,%eax$/;"	l
c0109845	obj/kernel.asm	/^c0109845:	75 24                	jne    c010986b <monitor_init+0xb6>$/;"	l
c0109847	obj/kernel.asm	/^c0109847:	c7 44 24 0c 0a 77 11 	movl   $0xc011770a,0xc(%esp)$/;"	l
c010984e	obj/kernel.asm	/^c010984e:	c0 $/;"	l
c010984f	obj/kernel.asm	/^c010984f:	c7 44 24 08 e1 76 11 	movl   $0xc01176e1,0x8(%esp)$/;"	l
c0109856	obj/kernel.asm	/^c0109856:	c0 $/;"	l
c0109857	obj/kernel.asm	/^c0109857:	c7 44 24 04 11 00 00 	movl   $0x11,0x4(%esp)$/;"	l
c010985e	obj/kernel.asm	/^c010985e:	00 $/;"	l
c010985f	obj/kernel.asm	/^c010985f:	c7 04 24 f6 76 11 c0 	movl   $0xc01176f6,(%esp)$/;"	l
c0109866	obj/kernel.asm	/^c0109866:	e8 5d 76 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010986b	obj/kernel.asm	/^c010986b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109872	obj/kernel.asm	/^c0109872:	eb 61                	jmp    c01098d5 <monitor_init+0x120>$/;"	l
c0109874	obj/kernel.asm	/^c0109874:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109877	obj/kernel.asm	/^c0109877:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010987a	obj/kernel.asm	/^c010987a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010987d	obj/kernel.asm	/^c010987d:	89 d0                	mov    %edx,%eax$/;"	l
c010987f	obj/kernel.asm	/^c010987f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109882	obj/kernel.asm	/^c0109882:	01 d0                	add    %edx,%eax$/;"	l
c0109884	obj/kernel.asm	/^c0109884:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109887	obj/kernel.asm	/^c0109887:	01 c8                	add    %ecx,%eax$/;"	l
c0109889	obj/kernel.asm	/^c0109889:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109893	obj/kernel.asm	/^c0109893:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0109896	obj/kernel.asm	/^c0109896:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109899	obj/kernel.asm	/^c0109899:	89 d0                	mov    %edx,%eax$/;"	l
c010989b	obj/kernel.asm	/^c010989b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010989e	obj/kernel.asm	/^c010989e:	01 d0                	add    %edx,%eax$/;"	l
c01098a0	obj/kernel.asm	/^c01098a0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01098a3	obj/kernel.asm	/^c01098a3:	01 c8                	add    %ecx,%eax$/;"	l
c01098a5	obj/kernel.asm	/^c01098a5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01098ac	obj/kernel.asm	/^c01098ac:	00 $/;"	l
c01098ad	obj/kernel.asm	/^c01098ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01098b0	obj/kernel.asm	/^c01098b0:	e8 ba 01 00 00       	call   c0109a6f <sem_init>$/;"	l
c01098b5	obj/kernel.asm	/^c01098b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098b8	obj/kernel.asm	/^c01098b8:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c01098bb	obj/kernel.asm	/^c01098bb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01098be	obj/kernel.asm	/^c01098be:	89 d0                	mov    %edx,%eax$/;"	l
c01098c0	obj/kernel.asm	/^c01098c0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01098c3	obj/kernel.asm	/^c01098c3:	01 d0                	add    %edx,%eax$/;"	l
c01098c5	obj/kernel.asm	/^c01098c5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01098c8	obj/kernel.asm	/^c01098c8:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c01098cb	obj/kernel.asm	/^c01098cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098ce	obj/kernel.asm	/^c01098ce:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c01098d1	obj/kernel.asm	/^c01098d1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01098d5	obj/kernel.asm	/^c01098d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01098d8	obj/kernel.asm	/^c01098d8:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01098db	obj/kernel.asm	/^c01098db:	72 97                	jb     c0109874 <monitor_init+0xbf>$/;"	l
c01098dd	obj/kernel.asm	/^c01098dd:	c9                   	leave  $/;"	l
c01098de	obj/kernel.asm	/^c01098de:	c3                   	ret    $/;"	l
c01098df	obj/kernel.asm	/^c01098df <cond_signal>:$/;"	l
c01098df	obj/kernel.asm	/^c01098df:	55                   	push   %ebp$/;"	l
c01098e0	obj/kernel.asm	/^c01098e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01098e2	obj/kernel.asm	/^c01098e2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01098e5	obj/kernel.asm	/^c01098e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098e8	obj/kernel.asm	/^c01098e8:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01098eb	obj/kernel.asm	/^c01098eb:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01098ee	obj/kernel.asm	/^c01098ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098f1	obj/kernel.asm	/^c01098f1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01098f4	obj/kernel.asm	/^c01098f4:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01098f8	obj/kernel.asm	/^c01098f8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01098fc	obj/kernel.asm	/^c01098fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098ff	obj/kernel.asm	/^c01098ff:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109903	obj/kernel.asm	/^c0109903:	c7 04 24 18 77 11 c0 	movl   $0xc0117718,(%esp)$/;"	l
c010990a	obj/kernel.asm	/^c010990a:	e8 56 6a ff ff       	call   c0100365 <cprintf>$/;"	l
c010990f	obj/kernel.asm	/^c010990f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109912	obj/kernel.asm	/^c0109912:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109915	obj/kernel.asm	/^c0109915:	85 c0                	test   %eax,%eax$/;"	l
c0109917	obj/kernel.asm	/^c0109917:	7e 3a                	jle    c0109953 <cond_signal+0x74>$/;"	l
c0109919	obj/kernel.asm	/^c0109919:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010991c	obj/kernel.asm	/^c010991c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010991f	obj/kernel.asm	/^c010991f:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109922	obj/kernel.asm	/^c0109922:	83 c2 01             	add    $0x1,%edx$/;"	l
c0109925	obj/kernel.asm	/^c0109925:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109928	obj/kernel.asm	/^c0109928:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010992b	obj/kernel.asm	/^c010992b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010992e	obj/kernel.asm	/^c010992e:	e8 af 02 00 00       	call   c0109be2 <up>$/;"	l
c0109933	obj/kernel.asm	/^c0109933:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109936	obj/kernel.asm	/^c0109936:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109939	obj/kernel.asm	/^c0109939:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010993c	obj/kernel.asm	/^c010993c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010993f	obj/kernel.asm	/^c010993f:	e8 b9 02 00 00       	call   c0109bfd <down>$/;"	l
c0109944	obj/kernel.asm	/^c0109944:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109947	obj/kernel.asm	/^c0109947:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010994a	obj/kernel.asm	/^c010994a:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010994d	obj/kernel.asm	/^c010994d:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0109950	obj/kernel.asm	/^c0109950:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109953	obj/kernel.asm	/^c0109953:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109956	obj/kernel.asm	/^c0109956:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109959	obj/kernel.asm	/^c0109959:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010995c	obj/kernel.asm	/^c010995c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010995f	obj/kernel.asm	/^c010995f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109962	obj/kernel.asm	/^c0109962:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0109966	obj/kernel.asm	/^c0109966:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010996a	obj/kernel.asm	/^c010996a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010996d	obj/kernel.asm	/^c010996d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109971	obj/kernel.asm	/^c0109971:	c7 04 24 60 77 11 c0 	movl   $0xc0117760,(%esp)$/;"	l
c0109978	obj/kernel.asm	/^c0109978:	e8 e8 69 ff ff       	call   c0100365 <cprintf>$/;"	l
c010997d	obj/kernel.asm	/^c010997d:	c9                   	leave  $/;"	l
c010997e	obj/kernel.asm	/^c010997e:	c3                   	ret    $/;"	l
c010997f	obj/kernel.asm	/^c010997f <cond_wait>:$/;"	l
c010997f	obj/kernel.asm	/^c010997f:	55                   	push   %ebp$/;"	l
c0109980	obj/kernel.asm	/^c0109980:	89 e5                	mov    %esp,%ebp$/;"	l
c0109982	obj/kernel.asm	/^c0109982:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109985	obj/kernel.asm	/^c0109985:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109988	obj/kernel.asm	/^c0109988:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010998b	obj/kernel.asm	/^c010998b:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010998e	obj/kernel.asm	/^c010998e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109991	obj/kernel.asm	/^c0109991:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109994	obj/kernel.asm	/^c0109994:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0109998	obj/kernel.asm	/^c0109998:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010999c	obj/kernel.asm	/^c010999c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010999f	obj/kernel.asm	/^c010999f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01099a3	obj/kernel.asm	/^c01099a3:	c7 04 24 a4 77 11 c0 	movl   $0xc01177a4,(%esp)$/;"	l
c01099aa	obj/kernel.asm	/^c01099aa:	e8 b6 69 ff ff       	call   c0100365 <cprintf>$/;"	l
c01099af	obj/kernel.asm	/^c01099af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099b2	obj/kernel.asm	/^c01099b2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01099b5	obj/kernel.asm	/^c01099b5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01099b8	obj/kernel.asm	/^c01099b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099bb	obj/kernel.asm	/^c01099bb:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01099be	obj/kernel.asm	/^c01099be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099c1	obj/kernel.asm	/^c01099c1:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01099c4	obj/kernel.asm	/^c01099c4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	85 c0                	test   %eax,%eax$/;"	l
c01099c9	obj/kernel.asm	/^c01099c9:	7e 13                	jle    c01099de <cond_wait+0x5f>$/;"	l
c01099cb	obj/kernel.asm	/^c01099cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099ce	obj/kernel.asm	/^c01099ce:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01099d1	obj/kernel.asm	/^c01099d1:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01099d4	obj/kernel.asm	/^c01099d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01099d7	obj/kernel.asm	/^c01099d7:	e8 06 02 00 00       	call   c0109be2 <up>$/;"	l
c01099dc	obj/kernel.asm	/^c01099dc:	eb 0e                	jmp    c01099ec <cond_wait+0x6d>$/;"	l
c01099de	obj/kernel.asm	/^c01099de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099e1	obj/kernel.asm	/^c01099e1:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01099e4	obj/kernel.asm	/^c01099e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01099e7	obj/kernel.asm	/^c01099e7:	e8 f6 01 00 00       	call   c0109be2 <up>$/;"	l
c01099ec	obj/kernel.asm	/^c01099ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099ef	obj/kernel.asm	/^c01099ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01099f2	obj/kernel.asm	/^c01099f2:	e8 06 02 00 00       	call   c0109bfd <down>$/;"	l
c01099f7	obj/kernel.asm	/^c01099f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099fa	obj/kernel.asm	/^c01099fa:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01099fd	obj/kernel.asm	/^c01099fd:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109a00	obj/kernel.asm	/^c0109a00:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a03	obj/kernel.asm	/^c0109a03:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0109a06	obj/kernel.asm	/^c0109a06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a09	obj/kernel.asm	/^c0109a09:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109a0c	obj/kernel.asm	/^c0109a0c:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109a0f	obj/kernel.asm	/^c0109a0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a12	obj/kernel.asm	/^c0109a12:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109a15	obj/kernel.asm	/^c0109a15:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0109a19	obj/kernel.asm	/^c0109a19:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109a1d	obj/kernel.asm	/^c0109a1d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a20	obj/kernel.asm	/^c0109a20:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109a24	obj/kernel.asm	/^c0109a24:	c7 04 24 e8 77 11 c0 	movl   $0xc01177e8,(%esp)$/;"	l
c0109a2b	obj/kernel.asm	/^c0109a2b:	e8 35 69 ff ff       	call   c0100365 <cprintf>$/;"	l
c0109a30	obj/kernel.asm	/^c0109a30:	c9                   	leave  $/;"	l
c0109a31	obj/kernel.asm	/^c0109a31:	c3                   	ret    $/;"	l
c0109a32	obj/kernel.asm	/^c0109a32 <__intr_save>:$/;"	l
c0109a32	obj/kernel.asm	/^c0109a32:	55                   	push   %ebp$/;"	l
c0109a33	obj/kernel.asm	/^c0109a33:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a35	obj/kernel.asm	/^c0109a35:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109a38	obj/kernel.asm	/^c0109a38:	9c                   	pushf  $/;"	l
c0109a39	obj/kernel.asm	/^c0109a39:	58                   	pop    %eax$/;"	l
c0109a3a	obj/kernel.asm	/^c0109a3a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109a3d	obj/kernel.asm	/^c0109a3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a40	obj/kernel.asm	/^c0109a40:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0109a45	obj/kernel.asm	/^c0109a45:	85 c0                	test   %eax,%eax$/;"	l
c0109a47	obj/kernel.asm	/^c0109a47:	74 0c                	je     c0109a55 <__intr_save+0x23>$/;"	l
c0109a49	obj/kernel.asm	/^c0109a49:	e8 dc 86 ff ff       	call   c010212a <intr_disable>$/;"	l
c0109a4e	obj/kernel.asm	/^c0109a4e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109a53	obj/kernel.asm	/^c0109a53:	eb 05                	jmp    c0109a5a <__intr_save+0x28>$/;"	l
c0109a55	obj/kernel.asm	/^c0109a55:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109a5a	obj/kernel.asm	/^c0109a5a:	c9                   	leave  $/;"	l
c0109a5b	obj/kernel.asm	/^c0109a5b:	c3                   	ret    $/;"	l
c0109a5c	obj/kernel.asm	/^c0109a5c <__intr_restore>:$/;"	l
c0109a5c	obj/kernel.asm	/^c0109a5c:	55                   	push   %ebp$/;"	l
c0109a5d	obj/kernel.asm	/^c0109a5d:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a5f	obj/kernel.asm	/^c0109a5f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109a62	obj/kernel.asm	/^c0109a62:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109a66	obj/kernel.asm	/^c0109a66:	74 05                	je     c0109a6d <__intr_restore+0x11>$/;"	l
c0109a68	obj/kernel.asm	/^c0109a68:	e8 b7 86 ff ff       	call   c0102124 <intr_enable>$/;"	l
c0109a6d	obj/kernel.asm	/^c0109a6d:	c9                   	leave  $/;"	l
c0109a6e	obj/kernel.asm	/^c0109a6e:	c3                   	ret    $/;"	l
c0109a6f	obj/kernel.asm	/^c0109a6f <sem_init>:$/;"	l
c0109a6f	obj/kernel.asm	/^c0109a6f:	55                   	push   %ebp$/;"	l
c0109a70	obj/kernel.asm	/^c0109a70:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a72	obj/kernel.asm	/^c0109a72:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109a75	obj/kernel.asm	/^c0109a75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a78	obj/kernel.asm	/^c0109a78:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109a7b	obj/kernel.asm	/^c0109a7b:	89 10                	mov    %edx,(%eax)$/;"	l
c0109a7d	obj/kernel.asm	/^c0109a7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a80	obj/kernel.asm	/^c0109a80:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109a83	obj/kernel.asm	/^c0109a83:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a86	obj/kernel.asm	/^c0109a86:	e8 33 02 00 00       	call   c0109cbe <wait_queue_init>$/;"	l
c0109a8b	obj/kernel.asm	/^c0109a8b:	c9                   	leave  $/;"	l
c0109a8c	obj/kernel.asm	/^c0109a8c:	c3                   	ret    $/;"	l
c0109a8d	obj/kernel.asm	/^c0109a8d <__up>:$/;"	l
c0109a8d	obj/kernel.asm	/^c0109a8d:	55                   	push   %ebp$/;"	l
c0109a8e	obj/kernel.asm	/^c0109a8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a90	obj/kernel.asm	/^c0109a90:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109a93	obj/kernel.asm	/^c0109a93:	e8 9a ff ff ff       	call   c0109a32 <__intr_save>$/;"	l
c0109a98	obj/kernel.asm	/^c0109a98:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109a9b	obj/kernel.asm	/^c0109a9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a9e	obj/kernel.asm	/^c0109a9e:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109aa1	obj/kernel.asm	/^c0109aa1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109aa4	obj/kernel.asm	/^c0109aa4:	e8 69 04 00 00       	call   c0109f12 <wait_queue_first>$/;"	l
c0109aa9	obj/kernel.asm	/^c0109aa9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109aac	obj/kernel.asm	/^c0109aac:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109ab0	obj/kernel.asm	/^c0109ab0:	75 0f                	jne    c0109ac1 <__up+0x34>$/;"	l
c0109ab2	obj/kernel.asm	/^c0109ab2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ab5	obj/kernel.asm	/^c0109ab5:	8b 00                	mov    (%eax),%eax$/;"	l
c0109ab7	obj/kernel.asm	/^c0109ab7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109aba	obj/kernel.asm	/^c0109aba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109abd	obj/kernel.asm	/^c0109abd:	89 10                	mov    %edx,(%eax)$/;"	l
c0109abf	obj/kernel.asm	/^c0109abf:	eb 58                	jmp    c0109b19 <__up+0x8c>$/;"	l
c0109ac1	obj/kernel.asm	/^c0109ac1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109ac4	obj/kernel.asm	/^c0109ac4:	8b 00                	mov    (%eax),%eax$/;"	l
c0109ac6	obj/kernel.asm	/^c0109ac6:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c0109acc	obj/kernel.asm	/^c0109acc:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109acf	obj/kernel.asm	/^c0109acf:	74 24                	je     c0109af5 <__up+0x68>$/;"	l
c0109ad1	obj/kernel.asm	/^c0109ad1:	c7 44 24 0c 2c 78 11 	movl   $0xc011782c,0xc(%esp)$/;"	l
c0109ad8	obj/kernel.asm	/^c0109ad8:	c0 $/;"	l
c0109ad9	obj/kernel.asm	/^c0109ad9:	c7 44 24 08 51 78 11 	movl   $0xc0117851,0x8(%esp)$/;"	l
c0109ae0	obj/kernel.asm	/^c0109ae0:	c0 $/;"	l
c0109ae1	obj/kernel.asm	/^c0109ae1:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
c0109ae8	obj/kernel.asm	/^c0109ae8:	00 $/;"	l
c0109ae9	obj/kernel.asm	/^c0109ae9:	c7 04 24 66 78 11 c0 	movl   $0xc0117866,(%esp)$/;"	l
c0109af0	obj/kernel.asm	/^c0109af0:	e8 d3 73 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109af5	obj/kernel.asm	/^c0109af5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109af8	obj/kernel.asm	/^c0109af8:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0109afb	obj/kernel.asm	/^c0109afb:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0109b02	obj/kernel.asm	/^c0109b02:	00 $/;"	l
c0109b03	obj/kernel.asm	/^c0109b03:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109b06	obj/kernel.asm	/^c0109b06:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109b0a	obj/kernel.asm	/^c0109b0a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109b0d	obj/kernel.asm	/^c0109b0d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109b11	obj/kernel.asm	/^c0109b11:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109b14	obj/kernel.asm	/^c0109b14:	e8 95 04 00 00       	call   c0109fae <wakeup_wait>$/;"	l
c0109b19	obj/kernel.asm	/^c0109b19:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b1c	obj/kernel.asm	/^c0109b1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b1f	obj/kernel.asm	/^c0109b1f:	e8 38 ff ff ff       	call   c0109a5c <__intr_restore>$/;"	l
c0109b24	obj/kernel.asm	/^c0109b24:	c9                   	leave  $/;"	l
c0109b25	obj/kernel.asm	/^c0109b25:	c3                   	ret    $/;"	l
c0109b26	obj/kernel.asm	/^c0109b26 <__down>:$/;"	l
c0109b26	obj/kernel.asm	/^c0109b26:	55                   	push   %ebp$/;"	l
c0109b27	obj/kernel.asm	/^c0109b27:	89 e5                	mov    %esp,%ebp$/;"	l
c0109b29	obj/kernel.asm	/^c0109b29:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0109b2c	obj/kernel.asm	/^c0109b2c:	e8 01 ff ff ff       	call   c0109a32 <__intr_save>$/;"	l
c0109b31	obj/kernel.asm	/^c0109b31:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b34	obj/kernel.asm	/^c0109b34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b37	obj/kernel.asm	/^c0109b37:	8b 00                	mov    (%eax),%eax$/;"	l
c0109b39	obj/kernel.asm	/^c0109b39:	85 c0                	test   %eax,%eax$/;"	l
c0109b3b	obj/kernel.asm	/^c0109b3b:	7e 22                	jle    c0109b5f <__down+0x39>$/;"	l
c0109b3d	obj/kernel.asm	/^c0109b3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b40	obj/kernel.asm	/^c0109b40:	8b 00                	mov    (%eax),%eax$/;"	l
c0109b42	obj/kernel.asm	/^c0109b42:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109b45	obj/kernel.asm	/^c0109b45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b48	obj/kernel.asm	/^c0109b48:	89 10                	mov    %edx,(%eax)$/;"	l
c0109b4a	obj/kernel.asm	/^c0109b4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b4d	obj/kernel.asm	/^c0109b4d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b50	obj/kernel.asm	/^c0109b50:	e8 07 ff ff ff       	call   c0109a5c <__intr_restore>$/;"	l
c0109b55	obj/kernel.asm	/^c0109b55:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109b5a	obj/kernel.asm	/^c0109b5a:	e9 81 00 00 00       	jmp    c0109be0 <__down+0xba>$/;"	l
c0109b5f	obj/kernel.asm	/^c0109b5f:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109b62	obj/kernel.asm	/^c0109b62:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109b65	obj/kernel.asm	/^c0109b65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109b68	obj/kernel.asm	/^c0109b68:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0109b6b	obj/kernel.asm	/^c0109b6b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109b6e	obj/kernel.asm	/^c0109b6e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0109b72	obj/kernel.asm	/^c0109b72:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109b75	obj/kernel.asm	/^c0109b75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109b79	obj/kernel.asm	/^c0109b79:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109b7c	obj/kernel.asm	/^c0109b7c:	e8 34 05 00 00       	call   c010a0b5 <wait_current_set>$/;"	l
c0109b81	obj/kernel.asm	/^c0109b81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b84	obj/kernel.asm	/^c0109b84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b87	obj/kernel.asm	/^c0109b87:	e8 d0 fe ff ff       	call   c0109a5c <__intr_restore>$/;"	l
c0109b8c	obj/kernel.asm	/^c0109b8c:	e8 c3 49 00 00       	call   c010e554 <schedule>$/;"	l
c0109b91	obj/kernel.asm	/^c0109b91:	e8 9c fe ff ff       	call   c0109a32 <__intr_save>$/;"	l
c0109b96	obj/kernel.asm	/^c0109b96:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b99	obj/kernel.asm	/^c0109b99:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109b9c	obj/kernel.asm	/^c0109b9c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109b9f	obj/kernel.asm	/^c0109b9f:	e8 e2 03 00 00       	call   c0109f86 <wait_in_queue>$/;"	l
c0109ba4	obj/kernel.asm	/^c0109ba4:	85 c0                	test   %eax,%eax$/;"	l
c0109ba6	obj/kernel.asm	/^c0109ba6:	74 15                	je     c0109bbd <__down+0x97>$/;"	l
c0109ba8	obj/kernel.asm	/^c0109ba8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bab	obj/kernel.asm	/^c0109bab:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0109bae	obj/kernel.asm	/^c0109bae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109bb1	obj/kernel.asm	/^c0109bb1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109bb5	obj/kernel.asm	/^c0109bb5:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0109bb8	obj/kernel.asm	/^c0109bb8:	e8 c4 01 00 00       	call   c0109d81 <wait_queue_del>$/;"	l
c0109bbd	obj/kernel.asm	/^c0109bbd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bc0	obj/kernel.asm	/^c0109bc0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109bc3	obj/kernel.asm	/^c0109bc3:	e8 94 fe ff ff       	call   c0109a5c <__intr_restore>$/;"	l
c0109bc8	obj/kernel.asm	/^c0109bc8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109bcb	obj/kernel.asm	/^c0109bcb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109bce	obj/kernel.asm	/^c0109bce:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109bd1	obj/kernel.asm	/^c0109bd1:	74 08                	je     c0109bdb <__down+0xb5>$/;"	l
c0109bd3	obj/kernel.asm	/^c0109bd3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109bd6	obj/kernel.asm	/^c0109bd6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109bd9	obj/kernel.asm	/^c0109bd9:	eb 05                	jmp    c0109be0 <__down+0xba>$/;"	l
c0109bdb	obj/kernel.asm	/^c0109bdb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109be0	obj/kernel.asm	/^c0109be0:	c9                   	leave  $/;"	l
c0109be1	obj/kernel.asm	/^c0109be1:	c3                   	ret    $/;"	l
c0109be2	obj/kernel.asm	/^c0109be2 <up>:$/;"	l
c0109be2	obj/kernel.asm	/^c0109be2:	55                   	push   %ebp$/;"	l
c0109be3	obj/kernel.asm	/^c0109be3:	89 e5                	mov    %esp,%ebp$/;"	l
c0109be5	obj/kernel.asm	/^c0109be5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109be8	obj/kernel.asm	/^c0109be8:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)$/;"	l
c0109bef	obj/kernel.asm	/^c0109bef:	00 $/;"	l
c0109bf0	obj/kernel.asm	/^c0109bf0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109bf3	obj/kernel.asm	/^c0109bf3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109bf6	obj/kernel.asm	/^c0109bf6:	e8 92 fe ff ff       	call   c0109a8d <__up>$/;"	l
c0109bfb	obj/kernel.asm	/^c0109bfb:	c9                   	leave  $/;"	l
c0109bfc	obj/kernel.asm	/^c0109bfc:	c3                   	ret    $/;"	l
c0109bfd	obj/kernel.asm	/^c0109bfd <down>:$/;"	l
c0109bfd	obj/kernel.asm	/^c0109bfd:	55                   	push   %ebp$/;"	l
c0109bfe	obj/kernel.asm	/^c0109bfe:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c00	obj/kernel.asm	/^c0109c00:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109c03	obj/kernel.asm	/^c0109c03:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)$/;"	l
c0109c0a	obj/kernel.asm	/^c0109c0a:	00 $/;"	l
c0109c0b	obj/kernel.asm	/^c0109c0b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c0e	obj/kernel.asm	/^c0109c0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c11	obj/kernel.asm	/^c0109c11:	e8 10 ff ff ff       	call   c0109b26 <__down>$/;"	l
c0109c16	obj/kernel.asm	/^c0109c16:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109c19	obj/kernel.asm	/^c0109c19:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109c1d	obj/kernel.asm	/^c0109c1d:	74 24                	je     c0109c43 <down+0x46>$/;"	l
c0109c1f	obj/kernel.asm	/^c0109c1f:	c7 44 24 0c 76 78 11 	movl   $0xc0117876,0xc(%esp)$/;"	l
c0109c26	obj/kernel.asm	/^c0109c26:	c0 $/;"	l
c0109c27	obj/kernel.asm	/^c0109c27:	c7 44 24 08 51 78 11 	movl   $0xc0117851,0x8(%esp)$/;"	l
c0109c2e	obj/kernel.asm	/^c0109c2e:	c0 $/;"	l
c0109c2f	obj/kernel.asm	/^c0109c2f:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%esp)$/;"	l
c0109c36	obj/kernel.asm	/^c0109c36:	00 $/;"	l
c0109c37	obj/kernel.asm	/^c0109c37:	c7 04 24 66 78 11 c0 	movl   $0xc0117866,(%esp)$/;"	l
c0109c3e	obj/kernel.asm	/^c0109c3e:	e8 85 72 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109c43	obj/kernel.asm	/^c0109c43:	c9                   	leave  $/;"	l
c0109c44	obj/kernel.asm	/^c0109c44:	c3                   	ret    $/;"	l
c0109c45	obj/kernel.asm	/^c0109c45 <try_down>:$/;"	l
c0109c45	obj/kernel.asm	/^c0109c45:	55                   	push   %ebp$/;"	l
c0109c46	obj/kernel.asm	/^c0109c46:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c48	obj/kernel.asm	/^c0109c48:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109c4b	obj/kernel.asm	/^c0109c4b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109c52	obj/kernel.asm	/^c0109c52:	e8 db fd ff ff       	call   c0109a32 <__intr_save>$/;"	l
c0109c57	obj/kernel.asm	/^c0109c57:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109c5a	obj/kernel.asm	/^c0109c5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c5d	obj/kernel.asm	/^c0109c5d:	8b 00                	mov    (%eax),%eax$/;"	l
c0109c5f	obj/kernel.asm	/^c0109c5f:	85 c0                	test   %eax,%eax$/;"	l
c0109c61	obj/kernel.asm	/^c0109c61:	7e 14                	jle    c0109c77 <try_down+0x32>$/;"	l
c0109c63	obj/kernel.asm	/^c0109c63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c66	obj/kernel.asm	/^c0109c66:	8b 00                	mov    (%eax),%eax$/;"	l
c0109c68	obj/kernel.asm	/^c0109c68:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109c6b	obj/kernel.asm	/^c0109c6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c6e	obj/kernel.asm	/^c0109c6e:	89 10                	mov    %edx,(%eax)$/;"	l
c0109c70	obj/kernel.asm	/^c0109c70:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0109c77	obj/kernel.asm	/^c0109c77:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c7a	obj/kernel.asm	/^c0109c7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c7d	obj/kernel.asm	/^c0109c7d:	e8 da fd ff ff       	call   c0109a5c <__intr_restore>$/;"	l
c0109c82	obj/kernel.asm	/^c0109c82:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c85	obj/kernel.asm	/^c0109c85:	c9                   	leave  $/;"	l
c0109c86	obj/kernel.asm	/^c0109c86:	c3                   	ret    $/;"	l
c0109c87	obj/kernel.asm	/^c0109c87 <wait_init>:$/;"	l
c0109c87	obj/kernel.asm	/^c0109c87:	55                   	push   %ebp$/;"	l
c0109c88	obj/kernel.asm	/^c0109c88:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c8a	obj/kernel.asm	/^c0109c8a:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109c8d	obj/kernel.asm	/^c0109c8d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c90	obj/kernel.asm	/^c0109c90:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109c93	obj/kernel.asm	/^c0109c93:	89 10                	mov    %edx,(%eax)$/;"	l
c0109c95	obj/kernel.asm	/^c0109c95:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c98	obj/kernel.asm	/^c0109c98:	c7 40 04 00 00 00 80 	movl   $0x80000000,0x4(%eax)$/;"	l
c0109c9f	obj/kernel.asm	/^c0109c9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ca2	obj/kernel.asm	/^c0109ca2:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109ca5	obj/kernel.asm	/^c0109ca5:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109ca8	obj/kernel.asm	/^c0109ca8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109cab	obj/kernel.asm	/^c0109cab:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0109cae	obj/kernel.asm	/^c0109cae:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109cb1	obj/kernel.asm	/^c0109cb1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109cb4	obj/kernel.asm	/^c0109cb4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109cb7	obj/kernel.asm	/^c0109cb7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109cba	obj/kernel.asm	/^c0109cba:	89 10                	mov    %edx,(%eax)$/;"	l
c0109cbc	obj/kernel.asm	/^c0109cbc:	c9                   	leave  $/;"	l
c0109cbd	obj/kernel.asm	/^c0109cbd:	c3                   	ret    $/;"	l
c0109cbe	obj/kernel.asm	/^c0109cbe <wait_queue_init>:$/;"	l
c0109cbe	obj/kernel.asm	/^c0109cbe:	55                   	push   %ebp$/;"	l
c0109cbf	obj/kernel.asm	/^c0109cbf:	89 e5                	mov    %esp,%ebp$/;"	l
c0109cc1	obj/kernel.asm	/^c0109cc1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109cc4	obj/kernel.asm	/^c0109cc4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109cc7	obj/kernel.asm	/^c0109cc7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109cca	obj/kernel.asm	/^c0109cca:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109ccd	obj/kernel.asm	/^c0109ccd:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0109cd0	obj/kernel.asm	/^c0109cd0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109cd3	obj/kernel.asm	/^c0109cd3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109cd6	obj/kernel.asm	/^c0109cd6:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109cd9	obj/kernel.asm	/^c0109cd9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109cdc	obj/kernel.asm	/^c0109cdc:	89 10                	mov    %edx,(%eax)$/;"	l
c0109cde	obj/kernel.asm	/^c0109cde:	c9                   	leave  $/;"	l
c0109cdf	obj/kernel.asm	/^c0109cdf:	c3                   	ret    $/;"	l
c0109ce0	obj/kernel.asm	/^c0109ce0 <wait_queue_add>:$/;"	l
c0109ce0	obj/kernel.asm	/^c0109ce0:	55                   	push   %ebp$/;"	l
c0109ce1	obj/kernel.asm	/^c0109ce1:	89 e5                	mov    %esp,%ebp$/;"	l
c0109ce3	obj/kernel.asm	/^c0109ce3:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0109ce6	obj/kernel.asm	/^c0109ce6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109ce9	obj/kernel.asm	/^c0109ce9:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109cec	obj/kernel.asm	/^c0109cec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109cef	obj/kernel.asm	/^c0109cef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109cf2	obj/kernel.asm	/^c0109cf2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109cf5	obj/kernel.asm	/^c0109cf5:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0109cf8	obj/kernel.asm	/^c0109cf8:	0f 94 c0             	sete   %al$/;"	l
c0109cfb	obj/kernel.asm	/^c0109cfb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109cfe	obj/kernel.asm	/^c0109cfe:	85 c0                	test   %eax,%eax$/;"	l
c0109d00	obj/kernel.asm	/^c0109d00:	74 09                	je     c0109d0b <wait_queue_add+0x2b>$/;"	l
c0109d02	obj/kernel.asm	/^c0109d02:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109d05	obj/kernel.asm	/^c0109d05:	8b 00                	mov    (%eax),%eax$/;"	l
c0109d07	obj/kernel.asm	/^c0109d07:	85 c0                	test   %eax,%eax$/;"	l
c0109d09	obj/kernel.asm	/^c0109d09:	75 24                	jne    c0109d2f <wait_queue_add+0x4f>$/;"	l
c0109d0b	obj/kernel.asm	/^c0109d0b:	c7 44 24 0c 84 78 11 	movl   $0xc0117884,0xc(%esp)$/;"	l
c0109d12	obj/kernel.asm	/^c0109d12:	c0 $/;"	l
c0109d13	obj/kernel.asm	/^c0109d13:	c7 44 24 08 b9 78 11 	movl   $0xc01178b9,0x8(%esp)$/;"	l
c0109d1a	obj/kernel.asm	/^c0109d1a:	c0 $/;"	l
c0109d1b	obj/kernel.asm	/^c0109d1b:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c0109d22	obj/kernel.asm	/^c0109d22:	00 $/;"	l
c0109d23	obj/kernel.asm	/^c0109d23:	c7 04 24 ce 78 11 c0 	movl   $0xc01178ce,(%esp)$/;"	l
c0109d2a	obj/kernel.asm	/^c0109d2a:	e8 99 71 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109d2f	obj/kernel.asm	/^c0109d2f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109d32	obj/kernel.asm	/^c0109d32:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109d35	obj/kernel.asm	/^c0109d35:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0109d38	obj/kernel.asm	/^c0109d38:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109d3b	obj/kernel.asm	/^c0109d3b:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0109d3e	obj/kernel.asm	/^c0109d3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d41	obj/kernel.asm	/^c0109d41:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109d44	obj/kernel.asm	/^c0109d44:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0109d47	obj/kernel.asm	/^c0109d47:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d4a	obj/kernel.asm	/^c0109d4a:	8b 00                	mov    (%eax),%eax$/;"	l
c0109d4c	obj/kernel.asm	/^c0109d4c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109d4f	obj/kernel.asm	/^c0109d4f:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0109d52	obj/kernel.asm	/^c0109d52:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109d55	obj/kernel.asm	/^c0109d55:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d58	obj/kernel.asm	/^c0109d58:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109d5b	obj/kernel.asm	/^c0109d5b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109d5e	obj/kernel.asm	/^c0109d5e:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0109d61	obj/kernel.asm	/^c0109d61:	89 10                	mov    %edx,(%eax)$/;"	l
c0109d63	obj/kernel.asm	/^c0109d63:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109d66	obj/kernel.asm	/^c0109d66:	8b 10                	mov    (%eax),%edx$/;"	l
c0109d68	obj/kernel.asm	/^c0109d68:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d6b	obj/kernel.asm	/^c0109d6b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109d6e	obj/kernel.asm	/^c0109d6e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109d71	obj/kernel.asm	/^c0109d71:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0109d74	obj/kernel.asm	/^c0109d74:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109d77	obj/kernel.asm	/^c0109d77:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109d7a	obj/kernel.asm	/^c0109d7a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0109d7d	obj/kernel.asm	/^c0109d7d:	89 10                	mov    %edx,(%eax)$/;"	l
c0109d7f	obj/kernel.asm	/^c0109d7f:	c9                   	leave  $/;"	l
c0109d80	obj/kernel.asm	/^c0109d80:	c3                   	ret    $/;"	l
c0109d81	obj/kernel.asm	/^c0109d81 <wait_queue_del>:$/;"	l
c0109d81	obj/kernel.asm	/^c0109d81:	55                   	push   %ebp$/;"	l
c0109d82	obj/kernel.asm	/^c0109d82:	89 e5                	mov    %esp,%ebp$/;"	l
c0109d84	obj/kernel.asm	/^c0109d84:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0109d87	obj/kernel.asm	/^c0109d87:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109d8a	obj/kernel.asm	/^c0109d8a:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109d8d	obj/kernel.asm	/^c0109d8d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109d90	obj/kernel.asm	/^c0109d90:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109d93	obj/kernel.asm	/^c0109d93:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109d96	obj/kernel.asm	/^c0109d96:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0109d99	obj/kernel.asm	/^c0109d99:	0f 94 c0             	sete   %al$/;"	l
c0109d9c	obj/kernel.asm	/^c0109d9c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109d9f	obj/kernel.asm	/^c0109d9f:	85 c0                	test   %eax,%eax$/;"	l
c0109da1	obj/kernel.asm	/^c0109da1:	75 0b                	jne    c0109dae <wait_queue_del+0x2d>$/;"	l
c0109da3	obj/kernel.asm	/^c0109da3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109da6	obj/kernel.asm	/^c0109da6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109da9	obj/kernel.asm	/^c0109da9:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109dac	obj/kernel.asm	/^c0109dac:	74 24                	je     c0109dd2 <wait_queue_del+0x51>$/;"	l
c0109dae	obj/kernel.asm	/^c0109dae:	c7 44 24 0c e0 78 11 	movl   $0xc01178e0,0xc(%esp)$/;"	l
c0109db5	obj/kernel.asm	/^c0109db5:	c0 $/;"	l
c0109db6	obj/kernel.asm	/^c0109db6:	c7 44 24 08 b9 78 11 	movl   $0xc01178b9,0x8(%esp)$/;"	l
c0109dbd	obj/kernel.asm	/^c0109dbd:	c0 $/;"	l
c0109dbe	obj/kernel.asm	/^c0109dbe:	c7 44 24 04 1c 00 00 	movl   $0x1c,0x4(%esp)$/;"	l
c0109dc5	obj/kernel.asm	/^c0109dc5:	00 $/;"	l
c0109dc6	obj/kernel.asm	/^c0109dc6:	c7 04 24 ce 78 11 c0 	movl   $0xc01178ce,(%esp)$/;"	l
c0109dcd	obj/kernel.asm	/^c0109dcd:	e8 f6 70 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109dd2	obj/kernel.asm	/^c0109dd2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109dd5	obj/kernel.asm	/^c0109dd5:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109dd8	obj/kernel.asm	/^c0109dd8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109ddb	obj/kernel.asm	/^c0109ddb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109dde	obj/kernel.asm	/^c0109dde:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109de1	obj/kernel.asm	/^c0109de1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109de4	obj/kernel.asm	/^c0109de4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109de7	obj/kernel.asm	/^c0109de7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109dea	obj/kernel.asm	/^c0109dea:	8b 12                	mov    (%edx),%edx$/;"	l
c0109dec	obj/kernel.asm	/^c0109dec:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0109def	obj/kernel.asm	/^c0109def:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109df2	obj/kernel.asm	/^c0109df2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109df5	obj/kernel.asm	/^c0109df5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0109df8	obj/kernel.asm	/^c0109df8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109dfb	obj/kernel.asm	/^c0109dfb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109dfe	obj/kernel.asm	/^c0109dfe:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0109e01	obj/kernel.asm	/^c0109e01:	89 10                	mov    %edx,(%eax)$/;"	l
c0109e03	obj/kernel.asm	/^c0109e03:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e06	obj/kernel.asm	/^c0109e06:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109e09	obj/kernel.asm	/^c0109e09:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109e0c	obj/kernel.asm	/^c0109e0c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0109e0f	obj/kernel.asm	/^c0109e0f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109e12	obj/kernel.asm	/^c0109e12:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109e15	obj/kernel.asm	/^c0109e15:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109e18	obj/kernel.asm	/^c0109e18:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109e1b	obj/kernel.asm	/^c0109e1b:	89 10                	mov    %edx,(%eax)$/;"	l
c0109e1d	obj/kernel.asm	/^c0109e1d:	c9                   	leave  $/;"	l
c0109e1e	obj/kernel.asm	/^c0109e1e:	c3                   	ret    $/;"	l
c0109e1f	obj/kernel.asm	/^c0109e1f <wait_queue_next>:$/;"	l
c0109e1f	obj/kernel.asm	/^c0109e1f:	55                   	push   %ebp$/;"	l
c0109e20	obj/kernel.asm	/^c0109e20:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e22	obj/kernel.asm	/^c0109e22:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109e25	obj/kernel.asm	/^c0109e25:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109e28	obj/kernel.asm	/^c0109e28:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109e2b	obj/kernel.asm	/^c0109e2b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109e2e	obj/kernel.asm	/^c0109e2e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e31	obj/kernel.asm	/^c0109e31:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109e34	obj/kernel.asm	/^c0109e34:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0109e37	obj/kernel.asm	/^c0109e37:	0f 94 c0             	sete   %al$/;"	l
c0109e3a	obj/kernel.asm	/^c0109e3a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109e3d	obj/kernel.asm	/^c0109e3d:	85 c0                	test   %eax,%eax$/;"	l
c0109e3f	obj/kernel.asm	/^c0109e3f:	75 0b                	jne    c0109e4c <wait_queue_next+0x2d>$/;"	l
c0109e41	obj/kernel.asm	/^c0109e41:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109e44	obj/kernel.asm	/^c0109e44:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109e47	obj/kernel.asm	/^c0109e47:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109e4a	obj/kernel.asm	/^c0109e4a:	74 24                	je     c0109e70 <wait_queue_next+0x51>$/;"	l
c0109e4c	obj/kernel.asm	/^c0109e4c:	c7 44 24 0c e0 78 11 	movl   $0xc01178e0,0xc(%esp)$/;"	l
c0109e53	obj/kernel.asm	/^c0109e53:	c0 $/;"	l
c0109e54	obj/kernel.asm	/^c0109e54:	c7 44 24 08 b9 78 11 	movl   $0xc01178b9,0x8(%esp)$/;"	l
c0109e5b	obj/kernel.asm	/^c0109e5b:	c0 $/;"	l
c0109e5c	obj/kernel.asm	/^c0109e5c:	c7 44 24 04 22 00 00 	movl   $0x22,0x4(%esp)$/;"	l
c0109e63	obj/kernel.asm	/^c0109e63:	00 $/;"	l
c0109e64	obj/kernel.asm	/^c0109e64:	c7 04 24 ce 78 11 c0 	movl   $0xc01178ce,(%esp)$/;"	l
c0109e6b	obj/kernel.asm	/^c0109e6b:	e8 58 70 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109e70	obj/kernel.asm	/^c0109e70:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109e73	obj/kernel.asm	/^c0109e73:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109e76	obj/kernel.asm	/^c0109e76:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109e79	obj/kernel.asm	/^c0109e79:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109e7c	obj/kernel.asm	/^c0109e7c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109e7f	obj/kernel.asm	/^c0109e7f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109e85	obj/kernel.asm	/^c0109e85:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109e88	obj/kernel.asm	/^c0109e88:	74 08                	je     c0109e92 <wait_queue_next+0x73>$/;"	l
c0109e8a	obj/kernel.asm	/^c0109e8a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e8d	obj/kernel.asm	/^c0109e8d:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109e90	obj/kernel.asm	/^c0109e90:	eb 05                	jmp    c0109e97 <wait_queue_next+0x78>$/;"	l
c0109e92	obj/kernel.asm	/^c0109e92:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109e97	obj/kernel.asm	/^c0109e97:	c9                   	leave  $/;"	l
c0109e98	obj/kernel.asm	/^c0109e98:	c3                   	ret    $/;"	l
c0109e99	obj/kernel.asm	/^c0109e99 <wait_queue_prev>:$/;"	l
c0109e99	obj/kernel.asm	/^c0109e99:	55                   	push   %ebp$/;"	l
c0109e9a	obj/kernel.asm	/^c0109e9a:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e9c	obj/kernel.asm	/^c0109e9c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109e9f	obj/kernel.asm	/^c0109e9f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109ea2	obj/kernel.asm	/^c0109ea2:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109ea5	obj/kernel.asm	/^c0109ea5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109ea8	obj/kernel.asm	/^c0109ea8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109eae	obj/kernel.asm	/^c0109eae:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0109eb1	obj/kernel.asm	/^c0109eb1:	0f 94 c0             	sete   %al$/;"	l
c0109eb4	obj/kernel.asm	/^c0109eb4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109eb7	obj/kernel.asm	/^c0109eb7:	85 c0                	test   %eax,%eax$/;"	l
c0109eb9	obj/kernel.asm	/^c0109eb9:	75 0b                	jne    c0109ec6 <wait_queue_prev+0x2d>$/;"	l
c0109ebb	obj/kernel.asm	/^c0109ebb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109ebe	obj/kernel.asm	/^c0109ebe:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109ec1	obj/kernel.asm	/^c0109ec1:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109ec4	obj/kernel.asm	/^c0109ec4:	74 24                	je     c0109eea <wait_queue_prev+0x51>$/;"	l
c0109ec6	obj/kernel.asm	/^c0109ec6:	c7 44 24 0c e0 78 11 	movl   $0xc01178e0,0xc(%esp)$/;"	l
c0109ecd	obj/kernel.asm	/^c0109ecd:	c0 $/;"	l
c0109ece	obj/kernel.asm	/^c0109ece:	c7 44 24 08 b9 78 11 	movl   $0xc01178b9,0x8(%esp)$/;"	l
c0109ed5	obj/kernel.asm	/^c0109ed5:	c0 $/;"	l
c0109ed6	obj/kernel.asm	/^c0109ed6:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c0109edd	obj/kernel.asm	/^c0109edd:	00 $/;"	l
c0109ede	obj/kernel.asm	/^c0109ede:	c7 04 24 ce 78 11 c0 	movl   $0xc01178ce,(%esp)$/;"	l
c0109ee5	obj/kernel.asm	/^c0109ee5:	e8 de 6f ff ff       	call   c0100ec8 <__panic>$/;"	l
c0109eea	obj/kernel.asm	/^c0109eea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109eed	obj/kernel.asm	/^c0109eed:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109ef0	obj/kernel.asm	/^c0109ef0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109ef3	obj/kernel.asm	/^c0109ef3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109ef6	obj/kernel.asm	/^c0109ef6:	8b 00                	mov    (%eax),%eax$/;"	l
c0109ef8	obj/kernel.asm	/^c0109ef8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109efb	obj/kernel.asm	/^c0109efb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109efe	obj/kernel.asm	/^c0109efe:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109f01	obj/kernel.asm	/^c0109f01:	74 08                	je     c0109f0b <wait_queue_prev+0x72>$/;"	l
c0109f03	obj/kernel.asm	/^c0109f03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109f06	obj/kernel.asm	/^c0109f06:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109f09	obj/kernel.asm	/^c0109f09:	eb 05                	jmp    c0109f10 <wait_queue_prev+0x77>$/;"	l
c0109f0b	obj/kernel.asm	/^c0109f0b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109f10	obj/kernel.asm	/^c0109f10:	c9                   	leave  $/;"	l
c0109f11	obj/kernel.asm	/^c0109f11:	c3                   	ret    $/;"	l
c0109f12	obj/kernel.asm	/^c0109f12 <wait_queue_first>:$/;"	l
c0109f12	obj/kernel.asm	/^c0109f12:	55                   	push   %ebp$/;"	l
c0109f13	obj/kernel.asm	/^c0109f13:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f15	obj/kernel.asm	/^c0109f15:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109f18	obj/kernel.asm	/^c0109f18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f1b	obj/kernel.asm	/^c0109f1b:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0109f1e	obj/kernel.asm	/^c0109f1e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109f21	obj/kernel.asm	/^c0109f21:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109f24	obj/kernel.asm	/^c0109f24:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109f27	obj/kernel.asm	/^c0109f27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f2a	obj/kernel.asm	/^c0109f2a:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0109f2d	obj/kernel.asm	/^c0109f2d:	74 08                	je     c0109f37 <wait_queue_first+0x25>$/;"	l
c0109f2f	obj/kernel.asm	/^c0109f2f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109f32	obj/kernel.asm	/^c0109f32:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109f35	obj/kernel.asm	/^c0109f35:	eb 05                	jmp    c0109f3c <wait_queue_first+0x2a>$/;"	l
c0109f37	obj/kernel.asm	/^c0109f37:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109f3c	obj/kernel.asm	/^c0109f3c:	c9                   	leave  $/;"	l
c0109f3d	obj/kernel.asm	/^c0109f3d:	c3                   	ret    $/;"	l
c0109f3e	obj/kernel.asm	/^c0109f3e <wait_queue_last>:$/;"	l
c0109f3e	obj/kernel.asm	/^c0109f3e:	55                   	push   %ebp$/;"	l
c0109f3f	obj/kernel.asm	/^c0109f3f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f41	obj/kernel.asm	/^c0109f41:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109f44	obj/kernel.asm	/^c0109f44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f47	obj/kernel.asm	/^c0109f47:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0109f4a	obj/kernel.asm	/^c0109f4a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109f4d	obj/kernel.asm	/^c0109f4d:	8b 00                	mov    (%eax),%eax$/;"	l
c0109f4f	obj/kernel.asm	/^c0109f4f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109f52	obj/kernel.asm	/^c0109f52:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f55	obj/kernel.asm	/^c0109f55:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0109f58	obj/kernel.asm	/^c0109f58:	74 08                	je     c0109f62 <wait_queue_last+0x24>$/;"	l
c0109f5a	obj/kernel.asm	/^c0109f5a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109f5d	obj/kernel.asm	/^c0109f5d:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109f60	obj/kernel.asm	/^c0109f60:	eb 05                	jmp    c0109f67 <wait_queue_last+0x29>$/;"	l
c0109f62	obj/kernel.asm	/^c0109f62:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109f67	obj/kernel.asm	/^c0109f67:	c9                   	leave  $/;"	l
c0109f68	obj/kernel.asm	/^c0109f68:	c3                   	ret    $/;"	l
c0109f69	obj/kernel.asm	/^c0109f69 <wait_queue_empty>:$/;"	l
c0109f69	obj/kernel.asm	/^c0109f69:	55                   	push   %ebp$/;"	l
c0109f6a	obj/kernel.asm	/^c0109f6a:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f6c	obj/kernel.asm	/^c0109f6c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109f6f	obj/kernel.asm	/^c0109f6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f72	obj/kernel.asm	/^c0109f72:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109f75	obj/kernel.asm	/^c0109f75:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109f78	obj/kernel.asm	/^c0109f78:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109f7b	obj/kernel.asm	/^c0109f7b:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c0109f7e	obj/kernel.asm	/^c0109f7e:	0f 94 c0             	sete   %al$/;"	l
c0109f81	obj/kernel.asm	/^c0109f81:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109f84	obj/kernel.asm	/^c0109f84:	c9                   	leave  $/;"	l
c0109f85	obj/kernel.asm	/^c0109f85:	c3                   	ret    $/;"	l
c0109f86	obj/kernel.asm	/^c0109f86 <wait_in_queue>:$/;"	l
c0109f86	obj/kernel.asm	/^c0109f86:	55                   	push   %ebp$/;"	l
c0109f87	obj/kernel.asm	/^c0109f87:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f89	obj/kernel.asm	/^c0109f89:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109f8c	obj/kernel.asm	/^c0109f8c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f8f	obj/kernel.asm	/^c0109f8f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109f92	obj/kernel.asm	/^c0109f92:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109f95	obj/kernel.asm	/^c0109f95:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109f98	obj/kernel.asm	/^c0109f98:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109f9b	obj/kernel.asm	/^c0109f9b:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c0109f9e	obj/kernel.asm	/^c0109f9e:	0f 94 c0             	sete   %al$/;"	l
c0109fa1	obj/kernel.asm	/^c0109fa1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109fa4	obj/kernel.asm	/^c0109fa4:	85 c0                	test   %eax,%eax$/;"	l
c0109fa6	obj/kernel.asm	/^c0109fa6:	0f 94 c0             	sete   %al$/;"	l
c0109fa9	obj/kernel.asm	/^c0109fa9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109fac	obj/kernel.asm	/^c0109fac:	c9                   	leave  $/;"	l
c0109fad	obj/kernel.asm	/^c0109fad:	c3                   	ret    $/;"	l
c0109fae	obj/kernel.asm	/^c0109fae <wakeup_wait>:$/;"	l
c0109fae	obj/kernel.asm	/^c0109fae:	55                   	push   %ebp$/;"	l
c0109faf	obj/kernel.asm	/^c0109faf:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fb1	obj/kernel.asm	/^c0109fb1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109fb4	obj/kernel.asm	/^c0109fb4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0109fb8	obj/kernel.asm	/^c0109fb8:	74 12                	je     c0109fcc <wakeup_wait+0x1e>$/;"	l
c0109fba	obj/kernel.asm	/^c0109fba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109fbd	obj/kernel.asm	/^c0109fbd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0109fc1	obj/kernel.asm	/^c0109fc1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109fc4	obj/kernel.asm	/^c0109fc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109fc7	obj/kernel.asm	/^c0109fc7:	e8 b5 fd ff ff       	call   c0109d81 <wait_queue_del>$/;"	l
c0109fcc	obj/kernel.asm	/^c0109fcc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109fcf	obj/kernel.asm	/^c0109fcf:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0109fd2	obj/kernel.asm	/^c0109fd2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109fd5	obj/kernel.asm	/^c0109fd5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109fd8	obj/kernel.asm	/^c0109fd8:	8b 00                	mov    (%eax),%eax$/;"	l
c0109fda	obj/kernel.asm	/^c0109fda:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109fdd	obj/kernel.asm	/^c0109fdd:	e8 d6 44 00 00       	call   c010e4b8 <wakeup_proc>$/;"	l
c0109fe2	obj/kernel.asm	/^c0109fe2:	c9                   	leave  $/;"	l
c0109fe3	obj/kernel.asm	/^c0109fe3:	c3                   	ret    $/;"	l
c0109fe4	obj/kernel.asm	/^c0109fe4 <wakeup_first>:$/;"	l
c0109fe4	obj/kernel.asm	/^c0109fe4:	55                   	push   %ebp$/;"	l
c0109fe5	obj/kernel.asm	/^c0109fe5:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fe7	obj/kernel.asm	/^c0109fe7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109fea	obj/kernel.asm	/^c0109fea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109fed	obj/kernel.asm	/^c0109fed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ff0	obj/kernel.asm	/^c0109ff0:	e8 1d ff ff ff       	call   c0109f12 <wait_queue_first>$/;"	l
c0109ff5	obj/kernel.asm	/^c0109ff5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109ff8	obj/kernel.asm	/^c0109ff8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109ffc	obj/kernel.asm	/^c0109ffc:	74 20                	je     c010a01e <wakeup_first+0x3a>$/;"	l
c0109ffe	obj/kernel.asm	/^c0109ffe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a001	obj/kernel.asm	/^c010a001:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a005	obj/kernel.asm	/^c010a005:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a008	obj/kernel.asm	/^c010a008:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a00c	obj/kernel.asm	/^c010a00c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a00f	obj/kernel.asm	/^c010a00f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a013	obj/kernel.asm	/^c010a013:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a016	obj/kernel.asm	/^c010a016:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a019	obj/kernel.asm	/^c010a019:	e8 90 ff ff ff       	call   c0109fae <wakeup_wait>$/;"	l
c010a01e	obj/kernel.asm	/^c010a01e:	c9                   	leave  $/;"	l
c010a01f	obj/kernel.asm	/^c010a01f:	c3                   	ret    $/;"	l
c010a020	obj/kernel.asm	/^c010a020 <wakeup_queue>:$/;"	l
c010a020	obj/kernel.asm	/^c010a020:	55                   	push   %ebp$/;"	l
c010a021	obj/kernel.asm	/^c010a021:	89 e5                	mov    %esp,%ebp$/;"	l
c010a023	obj/kernel.asm	/^c010a023:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a026	obj/kernel.asm	/^c010a026:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a029	obj/kernel.asm	/^c010a029:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a02c	obj/kernel.asm	/^c010a02c:	e8 e1 fe ff ff       	call   c0109f12 <wait_queue_first>$/;"	l
c010a031	obj/kernel.asm	/^c010a031:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a034	obj/kernel.asm	/^c010a034:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a038	obj/kernel.asm	/^c010a038:	74 79                	je     c010a0b3 <wakeup_queue+0x93>$/;"	l
c010a03a	obj/kernel.asm	/^c010a03a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a03e	obj/kernel.asm	/^c010a03e:	74 37                	je     c010a077 <wakeup_queue+0x57>$/;"	l
c010a040	obj/kernel.asm	/^c010a040:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010a047	obj/kernel.asm	/^c010a047:	00 $/;"	l
c010a048	obj/kernel.asm	/^c010a048:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a04b	obj/kernel.asm	/^c010a04b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a04f	obj/kernel.asm	/^c010a04f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a052	obj/kernel.asm	/^c010a052:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a056	obj/kernel.asm	/^c010a056:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a059	obj/kernel.asm	/^c010a059:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a05c	obj/kernel.asm	/^c010a05c:	e8 4d ff ff ff       	call   c0109fae <wakeup_wait>$/;"	l
c010a061	obj/kernel.asm	/^c010a061:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a064	obj/kernel.asm	/^c010a064:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a067	obj/kernel.asm	/^c010a067:	e8 a6 fe ff ff       	call   c0109f12 <wait_queue_first>$/;"	l
c010a06c	obj/kernel.asm	/^c010a06c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a06f	obj/kernel.asm	/^c010a06f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a073	obj/kernel.asm	/^c010a073:	75 cb                	jne    c010a040 <wakeup_queue+0x20>$/;"	l
c010a075	obj/kernel.asm	/^c010a075:	eb 3c                	jmp    c010a0b3 <wakeup_queue+0x93>$/;"	l
c010a077	obj/kernel.asm	/^c010a077:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010a07e	obj/kernel.asm	/^c010a07e:	00 $/;"	l
c010a07f	obj/kernel.asm	/^c010a07f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a082	obj/kernel.asm	/^c010a082:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a086	obj/kernel.asm	/^c010a086:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a089	obj/kernel.asm	/^c010a089:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a08d	obj/kernel.asm	/^c010a08d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a090	obj/kernel.asm	/^c010a090:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a093	obj/kernel.asm	/^c010a093:	e8 16 ff ff ff       	call   c0109fae <wakeup_wait>$/;"	l
c010a098	obj/kernel.asm	/^c010a098:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a09b	obj/kernel.asm	/^c010a09b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a09f	obj/kernel.asm	/^c010a09f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a0a2	obj/kernel.asm	/^c010a0a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a0a5	obj/kernel.asm	/^c010a0a5:	e8 75 fd ff ff       	call   c0109e1f <wait_queue_next>$/;"	l
c010a0aa	obj/kernel.asm	/^c010a0aa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a0ad	obj/kernel.asm	/^c010a0ad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a0b1	obj/kernel.asm	/^c010a0b1:	75 c4                	jne    c010a077 <wakeup_queue+0x57>$/;"	l
c010a0b3	obj/kernel.asm	/^c010a0b3:	c9                   	leave  $/;"	l
c010a0b4	obj/kernel.asm	/^c010a0b4:	c3                   	ret    $/;"	l
c010a0b5	obj/kernel.asm	/^c010a0b5 <wait_current_set>:$/;"	l
c010a0b5	obj/kernel.asm	/^c010a0b5:	55                   	push   %ebp$/;"	l
c010a0b6	obj/kernel.asm	/^c010a0b6:	89 e5                	mov    %esp,%ebp$/;"	l
c010a0b8	obj/kernel.asm	/^c010a0b8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a0bb	obj/kernel.asm	/^c010a0bb:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010a0c0	obj/kernel.asm	/^c010a0c0:	85 c0                	test   %eax,%eax$/;"	l
c010a0c2	obj/kernel.asm	/^c010a0c2:	75 24                	jne    c010a0e8 <wait_current_set+0x33>$/;"	l
c010a0c4	obj/kernel.asm	/^c010a0c4:	c7 44 24 0c 1d 79 11 	movl   $0xc011791d,0xc(%esp)$/;"	l
c010a0cb	obj/kernel.asm	/^c010a0cb:	c0 $/;"	l
c010a0cc	obj/kernel.asm	/^c010a0cc:	c7 44 24 08 b9 78 11 	movl   $0xc01178b9,0x8(%esp)$/;"	l
c010a0d3	obj/kernel.asm	/^c010a0d3:	c0 $/;"	l
c010a0d4	obj/kernel.asm	/^c010a0d4:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
c010a0db	obj/kernel.asm	/^c010a0db:	00 $/;"	l
c010a0dc	obj/kernel.asm	/^c010a0dc:	c7 04 24 ce 78 11 c0 	movl   $0xc01178ce,(%esp)$/;"	l
c010a0e3	obj/kernel.asm	/^c010a0e3:	e8 e0 6d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a0e8	obj/kernel.asm	/^c010a0e8:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010a0ed	obj/kernel.asm	/^c010a0ed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a0f1	obj/kernel.asm	/^c010a0f1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a0f4	obj/kernel.asm	/^c010a0f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a0f7	obj/kernel.asm	/^c010a0f7:	e8 8b fb ff ff       	call   c0109c87 <wait_init>$/;"	l
c010a0fc	obj/kernel.asm	/^c010a0fc:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010a101	obj/kernel.asm	/^c010a101:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a107	obj/kernel.asm	/^c010a107:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010a10c	obj/kernel.asm	/^c010a10c:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010a10f	obj/kernel.asm	/^c010a10f:	89 90 90 00 00 00    	mov    %edx,0x90(%eax)$/;"	l
c010a115	obj/kernel.asm	/^c010a115:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a118	obj/kernel.asm	/^c010a118:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a11c	obj/kernel.asm	/^c010a11c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a11f	obj/kernel.asm	/^c010a11f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a122	obj/kernel.asm	/^c010a122:	e8 b9 fb ff ff       	call   c0109ce0 <wait_queue_add>$/;"	l
c010a127	obj/kernel.asm	/^c010a127:	c9                   	leave  $/;"	l
c010a128	obj/kernel.asm	/^c010a128:	c3                   	ret    $/;"	l
c010a129	obj/kernel.asm	/^c010a129 <files_count>:$/;"	l
c010a129	obj/kernel.asm	/^c010a129:	55                   	push   %ebp$/;"	l
c010a12a	obj/kernel.asm	/^c010a12a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a12c	obj/kernel.asm	/^c010a12c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a12f	obj/kernel.asm	/^c010a12f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a132	obj/kernel.asm	/^c010a132:	5d                   	pop    %ebp$/;"	l
c010a133	obj/kernel.asm	/^c010a133:	c3                   	ret    $/;"	l
c010a134	obj/kernel.asm	/^c010a134 <fopen_count>:$/;"	l
c010a134	obj/kernel.asm	/^c010a134:	55                   	push   %ebp$/;"	l
c010a135	obj/kernel.asm	/^c010a135:	89 e5                	mov    %esp,%ebp$/;"	l
c010a137	obj/kernel.asm	/^c010a137:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a13a	obj/kernel.asm	/^c010a13a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a13d	obj/kernel.asm	/^c010a13d:	5d                   	pop    %ebp$/;"	l
c010a13e	obj/kernel.asm	/^c010a13e:	c3                   	ret    $/;"	l
c010a13f	obj/kernel.asm	/^c010a13f <fopen_count_inc>:$/;"	l
c010a13f	obj/kernel.asm	/^c010a13f:	55                   	push   %ebp$/;"	l
c010a140	obj/kernel.asm	/^c010a140:	89 e5                	mov    %esp,%ebp$/;"	l
c010a142	obj/kernel.asm	/^c010a142:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a145	obj/kernel.asm	/^c010a145:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a148	obj/kernel.asm	/^c010a148:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a14b	obj/kernel.asm	/^c010a14b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a14e	obj/kernel.asm	/^c010a14e:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a151	obj/kernel.asm	/^c010a151:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a154	obj/kernel.asm	/^c010a154:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a157	obj/kernel.asm	/^c010a157:	5d                   	pop    %ebp$/;"	l
c010a158	obj/kernel.asm	/^c010a158:	c3                   	ret    $/;"	l
c010a159	obj/kernel.asm	/^c010a159 <fopen_count_dec>:$/;"	l
c010a159	obj/kernel.asm	/^c010a159:	55                   	push   %ebp$/;"	l
c010a15a	obj/kernel.asm	/^c010a15a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a15c	obj/kernel.asm	/^c010a15c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a15f	obj/kernel.asm	/^c010a15f:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a162	obj/kernel.asm	/^c010a162:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010a165	obj/kernel.asm	/^c010a165:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a168	obj/kernel.asm	/^c010a168:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a16b	obj/kernel.asm	/^c010a16b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a16e	obj/kernel.asm	/^c010a16e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a171	obj/kernel.asm	/^c010a171:	5d                   	pop    %ebp$/;"	l
c010a172	obj/kernel.asm	/^c010a172:	c3                   	ret    $/;"	l
c010a173	obj/kernel.asm	/^c010a173 <get_fd_array>:$/;"	l
c010a173	obj/kernel.asm	/^c010a173:	55                   	push   %ebp$/;"	l
c010a174	obj/kernel.asm	/^c010a174:	89 e5                	mov    %esp,%ebp$/;"	l
c010a176	obj/kernel.asm	/^c010a176:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a179	obj/kernel.asm	/^c010a179:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010a17e	obj/kernel.asm	/^c010a17e:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010a184	obj/kernel.asm	/^c010a184:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a187	obj/kernel.asm	/^c010a187:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a18b	obj/kernel.asm	/^c010a18b:	74 0f                	je     c010a19c <get_fd_array+0x29>$/;"	l
c010a18d	obj/kernel.asm	/^c010a18d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a190	obj/kernel.asm	/^c010a190:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a193	obj/kernel.asm	/^c010a193:	e8 91 ff ff ff       	call   c010a129 <files_count>$/;"	l
c010a198	obj/kernel.asm	/^c010a198:	85 c0                	test   %eax,%eax$/;"	l
c010a19a	obj/kernel.asm	/^c010a19a:	7f 24                	jg     c010a1c0 <get_fd_array+0x4d>$/;"	l
c010a19c	obj/kernel.asm	/^c010a19c:	c7 44 24 0c 30 79 11 	movl   $0xc0117930,0xc(%esp)$/;"	l
c010a1a3	obj/kernel.asm	/^c010a1a3:	c0 $/;"	l
c010a1a4	obj/kernel.asm	/^c010a1a4:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a1ab	obj/kernel.asm	/^c010a1ab:	c0 $/;"	l
c010a1ac	obj/kernel.asm	/^c010a1ac:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
c010a1b3	obj/kernel.asm	/^c010a1b3:	00 $/;"	l
c010a1b4	obj/kernel.asm	/^c010a1b4:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a1bb	obj/kernel.asm	/^c010a1bb:	e8 08 6d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a1c0	obj/kernel.asm	/^c010a1c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a1c3	obj/kernel.asm	/^c010a1c3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a1c6	obj/kernel.asm	/^c010a1c6:	c9                   	leave  $/;"	l
c010a1c7	obj/kernel.asm	/^c010a1c7:	c3                   	ret    $/;"	l
c010a1c8	obj/kernel.asm	/^c010a1c8 <fd_array_init>:$/;"	l
c010a1c8	obj/kernel.asm	/^c010a1c8:	55                   	push   %ebp$/;"	l
c010a1c9	obj/kernel.asm	/^c010a1c9:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1cb	obj/kernel.asm	/^c010a1cb:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a1ce	obj/kernel.asm	/^c010a1ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1d1	obj/kernel.asm	/^c010a1d1:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010a1d4	obj/kernel.asm	/^c010a1d4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010a1db	obj/kernel.asm	/^c010a1db:	eb 24                	jmp    c010a201 <fd_array_init+0x39>$/;"	l
c010a1dd	obj/kernel.asm	/^c010a1dd:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a1e0	obj/kernel.asm	/^c010a1e0:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010a1e7	obj/kernel.asm	/^c010a1e7:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a1ea	obj/kernel.asm	/^c010a1ea:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a1f0	obj/kernel.asm	/^c010a1f0:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a1f3	obj/kernel.asm	/^c010a1f3:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010a1f6	obj/kernel.asm	/^c010a1f6:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010a1f9	obj/kernel.asm	/^c010a1f9:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010a1fd	obj/kernel.asm	/^c010a1fd:	83 45 f8 1c          	addl   $0x1c,-0x8(%ebp)$/;"	l
c010a201	obj/kernel.asm	/^c010a201:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a204	obj/kernel.asm	/^c010a204:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a209	obj/kernel.asm	/^c010a209:	76 d2                	jbe    c010a1dd <fd_array_init+0x15>$/;"	l
c010a20b	obj/kernel.asm	/^c010a20b:	c9                   	leave  $/;"	l
c010a20c	obj/kernel.asm	/^c010a20c:	c3                   	ret    $/;"	l
c010a20d	obj/kernel.asm	/^c010a20d <fd_array_alloc>:$/;"	l
c010a20d	obj/kernel.asm	/^c010a20d:	55                   	push   %ebp$/;"	l
c010a20e	obj/kernel.asm	/^c010a20e:	89 e5                	mov    %esp,%ebp$/;"	l
c010a210	obj/kernel.asm	/^c010a210:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a213	obj/kernel.asm	/^c010a213:	e8 5b ff ff ff       	call   c010a173 <get_fd_array>$/;"	l
c010a218	obj/kernel.asm	/^c010a218:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a21b	obj/kernel.asm	/^c010a21b:	81 7d 08 d9 6a ff ff 	cmpl   $0xffff6ad9,0x8(%ebp)$/;"	l
c010a222	obj/kernel.asm	/^c010a222:	75 30                	jne    c010a254 <fd_array_alloc+0x47>$/;"	l
c010a224	obj/kernel.asm	/^c010a224:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c010a22b	obj/kernel.asm	/^c010a22b:	eb 13                	jmp    c010a240 <fd_array_alloc+0x33>$/;"	l
c010a22d	obj/kernel.asm	/^c010a22d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a230	obj/kernel.asm	/^c010a230:	8b 00                	mov    (%eax),%eax$/;"	l
c010a232	obj/kernel.asm	/^c010a232:	85 c0                	test   %eax,%eax$/;"	l
c010a234	obj/kernel.asm	/^c010a234:	75 02                	jne    c010a238 <fd_array_alloc+0x2b>$/;"	l
c010a236	obj/kernel.asm	/^c010a236:	eb 59                	jmp    c010a291 <fd_array_alloc+0x84>$/;"	l
c010a238	obj/kernel.asm	/^c010a238:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010a23c	obj/kernel.asm	/^c010a23c:	83 45 f4 1c          	addl   $0x1c,-0xc(%ebp)$/;"	l
c010a240	obj/kernel.asm	/^c010a240:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a243	obj/kernel.asm	/^c010a243:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a248	obj/kernel.asm	/^c010a248:	76 e3                	jbe    c010a22d <fd_array_alloc+0x20>$/;"	l
c010a24a	obj/kernel.asm	/^c010a24a:	b8 ea ff ff ff       	mov    $0xffffffea,%eax$/;"	l
c010a24f	obj/kernel.asm	/^c010a24f:	e9 90 00 00 00       	jmp    c010a2e4 <fd_array_alloc+0xd7>$/;"	l
c010a254	obj/kernel.asm	/^c010a254:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a258	obj/kernel.asm	/^c010a258:	78 30                	js     c010a28a <fd_array_alloc+0x7d>$/;"	l
c010a25a	obj/kernel.asm	/^c010a25a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a25d	obj/kernel.asm	/^c010a25d:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a262	obj/kernel.asm	/^c010a262:	77 26                	ja     c010a28a <fd_array_alloc+0x7d>$/;"	l
c010a264	obj/kernel.asm	/^c010a264:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a267	obj/kernel.asm	/^c010a267:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a26a	obj/kernel.asm	/^c010a26a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010a271	obj/kernel.asm	/^c010a271:	29 c2                	sub    %eax,%edx$/;"	l
c010a273	obj/kernel.asm	/^c010a273:	89 d0                	mov    %edx,%eax$/;"	l
c010a275	obj/kernel.asm	/^c010a275:	01 45 f4             	add    %eax,-0xc(%ebp)$/;"	l
c010a278	obj/kernel.asm	/^c010a278:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a27b	obj/kernel.asm	/^c010a27b:	8b 00                	mov    (%eax),%eax$/;"	l
c010a27d	obj/kernel.asm	/^c010a27d:	85 c0                	test   %eax,%eax$/;"	l
c010a27f	obj/kernel.asm	/^c010a27f:	75 02                	jne    c010a283 <fd_array_alloc+0x76>$/;"	l
c010a281	obj/kernel.asm	/^c010a281:	eb 0e                	jmp    c010a291 <fd_array_alloc+0x84>$/;"	l
c010a283	obj/kernel.asm	/^c010a283:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c010a288	obj/kernel.asm	/^c010a288:	eb 5a                	jmp    c010a2e4 <fd_array_alloc+0xd7>$/;"	l
c010a28a	obj/kernel.asm	/^c010a28a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a28f	obj/kernel.asm	/^c010a28f:	eb 53                	jmp    c010a2e4 <fd_array_alloc+0xd7>$/;"	l
c010a291	obj/kernel.asm	/^c010a291:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a294	obj/kernel.asm	/^c010a294:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a297	obj/kernel.asm	/^c010a297:	e8 98 fe ff ff       	call   c010a134 <fopen_count>$/;"	l
c010a29c	obj/kernel.asm	/^c010a29c:	85 c0                	test   %eax,%eax$/;"	l
c010a29e	obj/kernel.asm	/^c010a29e:	74 24                	je     c010a2c4 <fd_array_alloc+0xb7>$/;"	l
c010a2a0	obj/kernel.asm	/^c010a2a0:	c7 44 24 0c 7e 79 11 	movl   $0xc011797e,0xc(%esp)$/;"	l
c010a2a7	obj/kernel.asm	/^c010a2a7:	c0 $/;"	l
c010a2a8	obj/kernel.asm	/^c010a2a8:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a2af	obj/kernel.asm	/^c010a2af:	c0 $/;"	l
c010a2b0	obj/kernel.asm	/^c010a2b0:	c7 44 24 04 3b 00 00 	movl   $0x3b,0x4(%esp)$/;"	l
c010a2b7	obj/kernel.asm	/^c010a2b7:	00 $/;"	l
c010a2b8	obj/kernel.asm	/^c010a2b8:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a2bf	obj/kernel.asm	/^c010a2bf:	e8 04 6c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a2c4	obj/kernel.asm	/^c010a2c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a2c7	obj/kernel.asm	/^c010a2c7:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a2cd	obj/kernel.asm	/^c010a2cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a2d0	obj/kernel.asm	/^c010a2d0:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010a2d7	obj/kernel.asm	/^c010a2d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a2da	obj/kernel.asm	/^c010a2da:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a2dd	obj/kernel.asm	/^c010a2dd:	89 10                	mov    %edx,(%eax)$/;"	l
c010a2df	obj/kernel.asm	/^c010a2df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a2e4	obj/kernel.asm	/^c010a2e4:	c9                   	leave  $/;"	l
c010a2e5	obj/kernel.asm	/^c010a2e5:	c3                   	ret    $/;"	l
c010a2e6	obj/kernel.asm	/^c010a2e6 <fd_array_free>:$/;"	l
c010a2e6	obj/kernel.asm	/^c010a2e6:	55                   	push   %ebp$/;"	l
c010a2e7	obj/kernel.asm	/^c010a2e7:	89 e5                	mov    %esp,%ebp$/;"	l
c010a2e9	obj/kernel.asm	/^c010a2e9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a2ec	obj/kernel.asm	/^c010a2ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2ef	obj/kernel.asm	/^c010a2ef:	8b 00                	mov    (%eax),%eax$/;"	l
c010a2f1	obj/kernel.asm	/^c010a2f1:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a2f4	obj/kernel.asm	/^c010a2f4:	74 2e                	je     c010a324 <fd_array_free+0x3e>$/;"	l
c010a2f6	obj/kernel.asm	/^c010a2f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2f9	obj/kernel.asm	/^c010a2f9:	8b 00                	mov    (%eax),%eax$/;"	l
c010a2fb	obj/kernel.asm	/^c010a2fb:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a2fe	obj/kernel.asm	/^c010a2fe:	74 24                	je     c010a324 <fd_array_free+0x3e>$/;"	l
c010a300	obj/kernel.asm	/^c010a300:	c7 44 24 0c 98 79 11 	movl   $0xc0117998,0xc(%esp)$/;"	l
c010a307	obj/kernel.asm	/^c010a307:	c0 $/;"	l
c010a308	obj/kernel.asm	/^c010a308:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a30f	obj/kernel.asm	/^c010a30f:	c0 $/;"	l
c010a310	obj/kernel.asm	/^c010a310:	c7 44 24 04 44 00 00 	movl   $0x44,0x4(%esp)$/;"	l
c010a317	obj/kernel.asm	/^c010a317:	00 $/;"	l
c010a318	obj/kernel.asm	/^c010a318:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a31f	obj/kernel.asm	/^c010a31f:	e8 a4 6b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a324	obj/kernel.asm	/^c010a324:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a327	obj/kernel.asm	/^c010a327:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a32a	obj/kernel.asm	/^c010a32a:	e8 05 fe ff ff       	call   c010a134 <fopen_count>$/;"	l
c010a32f	obj/kernel.asm	/^c010a32f:	85 c0                	test   %eax,%eax$/;"	l
c010a331	obj/kernel.asm	/^c010a331:	74 24                	je     c010a357 <fd_array_free+0x71>$/;"	l
c010a333	obj/kernel.asm	/^c010a333:	c7 44 24 0c 7e 79 11 	movl   $0xc011797e,0xc(%esp)$/;"	l
c010a33a	obj/kernel.asm	/^c010a33a:	c0 $/;"	l
c010a33b	obj/kernel.asm	/^c010a33b:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a342	obj/kernel.asm	/^c010a342:	c0 $/;"	l
c010a343	obj/kernel.asm	/^c010a343:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010a34a	obj/kernel.asm	/^c010a34a:	00 $/;"	l
c010a34b	obj/kernel.asm	/^c010a34b:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a352	obj/kernel.asm	/^c010a352:	e8 71 6b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a357	obj/kernel.asm	/^c010a357:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a35a	obj/kernel.asm	/^c010a35a:	8b 00                	mov    (%eax),%eax$/;"	l
c010a35c	obj/kernel.asm	/^c010a35c:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a35f	obj/kernel.asm	/^c010a35f:	75 0e                	jne    c010a36f <fd_array_free+0x89>$/;"	l
c010a361	obj/kernel.asm	/^c010a361:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a364	obj/kernel.asm	/^c010a364:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a367	obj/kernel.asm	/^c010a367:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a36a	obj/kernel.asm	/^c010a36a:	e8 1b 5c 00 00       	call   c010ff8a <vfs_close>$/;"	l
c010a36f	obj/kernel.asm	/^c010a36f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a372	obj/kernel.asm	/^c010a372:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a378	obj/kernel.asm	/^c010a378:	c9                   	leave  $/;"	l
c010a379	obj/kernel.asm	/^c010a379:	c3                   	ret    $/;"	l
c010a37a	obj/kernel.asm	/^c010a37a <fd_array_acquire>:$/;"	l
c010a37a	obj/kernel.asm	/^c010a37a:	55                   	push   %ebp$/;"	l
c010a37b	obj/kernel.asm	/^c010a37b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a37d	obj/kernel.asm	/^c010a37d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a380	obj/kernel.asm	/^c010a380:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a383	obj/kernel.asm	/^c010a383:	8b 00                	mov    (%eax),%eax$/;"	l
c010a385	obj/kernel.asm	/^c010a385:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a388	obj/kernel.asm	/^c010a388:	74 24                	je     c010a3ae <fd_array_acquire+0x34>$/;"	l
c010a38a	obj/kernel.asm	/^c010a38a:	c7 44 24 0c cd 79 11 	movl   $0xc01179cd,0xc(%esp)$/;"	l
c010a391	obj/kernel.asm	/^c010a391:	c0 $/;"	l
c010a392	obj/kernel.asm	/^c010a392:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a399	obj/kernel.asm	/^c010a399:	c0 $/;"	l
c010a39a	obj/kernel.asm	/^c010a39a:	c7 44 24 04 4e 00 00 	movl   $0x4e,0x4(%esp)$/;"	l
c010a3a1	obj/kernel.asm	/^c010a3a1:	00 $/;"	l
c010a3a2	obj/kernel.asm	/^c010a3a2:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a3a9	obj/kernel.asm	/^c010a3a9:	e8 1a 6b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a3ae	obj/kernel.asm	/^c010a3ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3b1	obj/kernel.asm	/^c010a3b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a3b4	obj/kernel.asm	/^c010a3b4:	e8 86 fd ff ff       	call   c010a13f <fopen_count_inc>$/;"	l
c010a3b9	obj/kernel.asm	/^c010a3b9:	c9                   	leave  $/;"	l
c010a3ba	obj/kernel.asm	/^c010a3ba:	c3                   	ret    $/;"	l
c010a3bb	obj/kernel.asm	/^c010a3bb <fd_array_release>:$/;"	l
c010a3bb	obj/kernel.asm	/^c010a3bb:	55                   	push   %ebp$/;"	l
c010a3bc	obj/kernel.asm	/^c010a3bc:	89 e5                	mov    %esp,%ebp$/;"	l
c010a3be	obj/kernel.asm	/^c010a3be:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a3c1	obj/kernel.asm	/^c010a3c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3c4	obj/kernel.asm	/^c010a3c4:	8b 00                	mov    (%eax),%eax$/;"	l
c010a3c6	obj/kernel.asm	/^c010a3c6:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a3c9	obj/kernel.asm	/^c010a3c9:	74 2e                	je     c010a3f9 <fd_array_release+0x3e>$/;"	l
c010a3cb	obj/kernel.asm	/^c010a3cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3ce	obj/kernel.asm	/^c010a3ce:	8b 00                	mov    (%eax),%eax$/;"	l
c010a3d0	obj/kernel.asm	/^c010a3d0:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a3d3	obj/kernel.asm	/^c010a3d3:	74 24                	je     c010a3f9 <fd_array_release+0x3e>$/;"	l
c010a3d5	obj/kernel.asm	/^c010a3d5:	c7 44 24 0c e8 79 11 	movl   $0xc01179e8,0xc(%esp)$/;"	l
c010a3dc	obj/kernel.asm	/^c010a3dc:	c0 $/;"	l
c010a3dd	obj/kernel.asm	/^c010a3dd:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a3e4	obj/kernel.asm	/^c010a3e4:	c0 $/;"	l
c010a3e5	obj/kernel.asm	/^c010a3e5:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c010a3ec	obj/kernel.asm	/^c010a3ec:	00 $/;"	l
c010a3ed	obj/kernel.asm	/^c010a3ed:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a3f4	obj/kernel.asm	/^c010a3f4:	e8 cf 6a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a3f9	obj/kernel.asm	/^c010a3f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3fc	obj/kernel.asm	/^c010a3fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a3ff	obj/kernel.asm	/^c010a3ff:	e8 30 fd ff ff       	call   c010a134 <fopen_count>$/;"	l
c010a404	obj/kernel.asm	/^c010a404:	85 c0                	test   %eax,%eax$/;"	l
c010a406	obj/kernel.asm	/^c010a406:	7f 24                	jg     c010a42c <fd_array_release+0x71>$/;"	l
c010a408	obj/kernel.asm	/^c010a408:	c7 44 24 0c 1f 7a 11 	movl   $0xc0117a1f,0xc(%esp)$/;"	l
c010a40f	obj/kernel.asm	/^c010a40f:	c0 $/;"	l
c010a410	obj/kernel.asm	/^c010a410:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a417	obj/kernel.asm	/^c010a417:	c0 $/;"	l
c010a418	obj/kernel.asm	/^c010a418:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
c010a41f	obj/kernel.asm	/^c010a41f:	00 $/;"	l
c010a420	obj/kernel.asm	/^c010a420:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a427	obj/kernel.asm	/^c010a427:	e8 9c 6a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a42c	obj/kernel.asm	/^c010a42c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a42f	obj/kernel.asm	/^c010a42f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a432	obj/kernel.asm	/^c010a432:	e8 22 fd ff ff       	call   c010a159 <fopen_count_dec>$/;"	l
c010a437	obj/kernel.asm	/^c010a437:	85 c0                	test   %eax,%eax$/;"	l
c010a439	obj/kernel.asm	/^c010a439:	75 0b                	jne    c010a446 <fd_array_release+0x8b>$/;"	l
c010a43b	obj/kernel.asm	/^c010a43b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a43e	obj/kernel.asm	/^c010a43e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a441	obj/kernel.asm	/^c010a441:	e8 a0 fe ff ff       	call   c010a2e6 <fd_array_free>$/;"	l
c010a446	obj/kernel.asm	/^c010a446:	c9                   	leave  $/;"	l
c010a447	obj/kernel.asm	/^c010a447:	c3                   	ret    $/;"	l
c010a448	obj/kernel.asm	/^c010a448 <fd_array_open>:$/;"	l
c010a448	obj/kernel.asm	/^c010a448:	55                   	push   %ebp$/;"	l
c010a449	obj/kernel.asm	/^c010a449:	89 e5                	mov    %esp,%ebp$/;"	l
c010a44b	obj/kernel.asm	/^c010a44b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a44e	obj/kernel.asm	/^c010a44e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a451	obj/kernel.asm	/^c010a451:	8b 00                	mov    (%eax),%eax$/;"	l
c010a453	obj/kernel.asm	/^c010a453:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a456	obj/kernel.asm	/^c010a456:	75 0a                	jne    c010a462 <fd_array_open+0x1a>$/;"	l
c010a458	obj/kernel.asm	/^c010a458:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a45b	obj/kernel.asm	/^c010a45b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a45e	obj/kernel.asm	/^c010a45e:	85 c0                	test   %eax,%eax$/;"	l
c010a460	obj/kernel.asm	/^c010a460:	75 24                	jne    c010a486 <fd_array_open+0x3e>$/;"	l
c010a462	obj/kernel.asm	/^c010a462:	c7 44 24 0c 38 7a 11 	movl   $0xc0117a38,0xc(%esp)$/;"	l
c010a469	obj/kernel.asm	/^c010a469:	c0 $/;"	l
c010a46a	obj/kernel.asm	/^c010a46a:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a471	obj/kernel.asm	/^c010a471:	c0 $/;"	l
c010a472	obj/kernel.asm	/^c010a472:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c010a479	obj/kernel.asm	/^c010a479:	00 $/;"	l
c010a47a	obj/kernel.asm	/^c010a47a:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a481	obj/kernel.asm	/^c010a481:	e8 42 6a ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a486	obj/kernel.asm	/^c010a486:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a489	obj/kernel.asm	/^c010a489:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010a48f	obj/kernel.asm	/^c010a48f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a492	obj/kernel.asm	/^c010a492:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a495	obj/kernel.asm	/^c010a495:	e8 a5 fc ff ff       	call   c010a13f <fopen_count_inc>$/;"	l
c010a49a	obj/kernel.asm	/^c010a49a:	c9                   	leave  $/;"	l
c010a49b	obj/kernel.asm	/^c010a49b:	c3                   	ret    $/;"	l
c010a49c	obj/kernel.asm	/^c010a49c <fd_array_close>:$/;"	l
c010a49c	obj/kernel.asm	/^c010a49c:	55                   	push   %ebp$/;"	l
c010a49d	obj/kernel.asm	/^c010a49d:	89 e5                	mov    %esp,%ebp$/;"	l
c010a49f	obj/kernel.asm	/^c010a49f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a4a2	obj/kernel.asm	/^c010a4a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a4a5	obj/kernel.asm	/^c010a4a5:	8b 00                	mov    (%eax),%eax$/;"	l
c010a4a7	obj/kernel.asm	/^c010a4a7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a4aa	obj/kernel.asm	/^c010a4aa:	74 24                	je     c010a4d0 <fd_array_close+0x34>$/;"	l
c010a4ac	obj/kernel.asm	/^c010a4ac:	c7 44 24 0c cd 79 11 	movl   $0xc01179cd,0xc(%esp)$/;"	l
c010a4b3	obj/kernel.asm	/^c010a4b3:	c0 $/;"	l
c010a4b4	obj/kernel.asm	/^c010a4b4:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a4bb	obj/kernel.asm	/^c010a4bb:	c0 $/;"	l
c010a4bc	obj/kernel.asm	/^c010a4bc:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c010a4c3	obj/kernel.asm	/^c010a4c3:	00 $/;"	l
c010a4c4	obj/kernel.asm	/^c010a4c4:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a4cb	obj/kernel.asm	/^c010a4cb:	e8 f8 69 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a4d0	obj/kernel.asm	/^c010a4d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a4d3	obj/kernel.asm	/^c010a4d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a4d6	obj/kernel.asm	/^c010a4d6:	e8 59 fc ff ff       	call   c010a134 <fopen_count>$/;"	l
c010a4db	obj/kernel.asm	/^c010a4db:	85 c0                	test   %eax,%eax$/;"	l
c010a4dd	obj/kernel.asm	/^c010a4dd:	7f 24                	jg     c010a503 <fd_array_close+0x67>$/;"	l
c010a4df	obj/kernel.asm	/^c010a4df:	c7 44 24 0c 1f 7a 11 	movl   $0xc0117a1f,0xc(%esp)$/;"	l
c010a4e6	obj/kernel.asm	/^c010a4e6:	c0 $/;"	l
c010a4e7	obj/kernel.asm	/^c010a4e7:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a4ee	obj/kernel.asm	/^c010a4ee:	c0 $/;"	l
c010a4ef	obj/kernel.asm	/^c010a4ef:	c7 44 24 04 68 00 00 	movl   $0x68,0x4(%esp)$/;"	l
c010a4f6	obj/kernel.asm	/^c010a4f6:	00 $/;"	l
c010a4f7	obj/kernel.asm	/^c010a4f7:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a4fe	obj/kernel.asm	/^c010a4fe:	e8 c5 69 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a503	obj/kernel.asm	/^c010a503:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a506	obj/kernel.asm	/^c010a506:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010a50c	obj/kernel.asm	/^c010a50c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a50f	obj/kernel.asm	/^c010a50f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a512	obj/kernel.asm	/^c010a512:	e8 42 fc ff ff       	call   c010a159 <fopen_count_dec>$/;"	l
c010a517	obj/kernel.asm	/^c010a517:	85 c0                	test   %eax,%eax$/;"	l
c010a519	obj/kernel.asm	/^c010a519:	75 0b                	jne    c010a526 <fd_array_close+0x8a>$/;"	l
c010a51b	obj/kernel.asm	/^c010a51b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a51e	obj/kernel.asm	/^c010a51e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a521	obj/kernel.asm	/^c010a521:	e8 c0 fd ff ff       	call   c010a2e6 <fd_array_free>$/;"	l
c010a526	obj/kernel.asm	/^c010a526:	c9                   	leave  $/;"	l
c010a527	obj/kernel.asm	/^c010a527:	c3                   	ret    $/;"	l
c010a528	obj/kernel.asm	/^c010a528 <fd_array_dup>:$/;"	l
c010a528	obj/kernel.asm	/^c010a528:	55                   	push   %ebp$/;"	l
c010a529	obj/kernel.asm	/^c010a529:	89 e5                	mov    %esp,%ebp$/;"	l
c010a52b	obj/kernel.asm	/^c010a52b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a52e	obj/kernel.asm	/^c010a52e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a531	obj/kernel.asm	/^c010a531:	8b 00                	mov    (%eax),%eax$/;"	l
c010a533	obj/kernel.asm	/^c010a533:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a536	obj/kernel.asm	/^c010a536:	75 0a                	jne    c010a542 <fd_array_dup+0x1a>$/;"	l
c010a538	obj/kernel.asm	/^c010a538:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a53b	obj/kernel.asm	/^c010a53b:	8b 00                	mov    (%eax),%eax$/;"	l
c010a53d	obj/kernel.asm	/^c010a53d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a540	obj/kernel.asm	/^c010a540:	74 24                	je     c010a566 <fd_array_dup+0x3e>$/;"	l
c010a542	obj/kernel.asm	/^c010a542:	c7 44 24 0c 68 7a 11 	movl   $0xc0117a68,0xc(%esp)$/;"	l
c010a549	obj/kernel.asm	/^c010a549:	c0 $/;"	l
c010a54a	obj/kernel.asm	/^c010a54a:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a551	obj/kernel.asm	/^c010a551:	c0 $/;"	l
c010a552	obj/kernel.asm	/^c010a552:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)$/;"	l
c010a559	obj/kernel.asm	/^c010a559:	00 $/;"	l
c010a55a	obj/kernel.asm	/^c010a55a:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a561	obj/kernel.asm	/^c010a561:	e8 62 69 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a566	obj/kernel.asm	/^c010a566:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a569	obj/kernel.asm	/^c010a569:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010a56c	obj/kernel.asm	/^c010a56c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a56f	obj/kernel.asm	/^c010a56f:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a572	obj/kernel.asm	/^c010a572:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a575	obj/kernel.asm	/^c010a575:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a578	obj/kernel.asm	/^c010a578:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a57b	obj/kernel.asm	/^c010a57b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a57e	obj/kernel.asm	/^c010a57e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a581	obj/kernel.asm	/^c010a581:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a584	obj/kernel.asm	/^c010a584:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a587	obj/kernel.asm	/^c010a587:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a58a	obj/kernel.asm	/^c010a58a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a58d	obj/kernel.asm	/^c010a58d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a590	obj/kernel.asm	/^c010a590:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a593	obj/kernel.asm	/^c010a593:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a596	obj/kernel.asm	/^c010a596:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a599	obj/kernel.asm	/^c010a599:	e8 1b 4a 00 00       	call   c010efb9 <inode_ref_inc>$/;"	l
c010a59e	obj/kernel.asm	/^c010a59e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5a1	obj/kernel.asm	/^c010a5a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5a4	obj/kernel.asm	/^c010a5a4:	e8 17 4b 00 00       	call   c010f0c0 <inode_open_inc>$/;"	l
c010a5a9	obj/kernel.asm	/^c010a5a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5ac	obj/kernel.asm	/^c010a5ac:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a5af	obj/kernel.asm	/^c010a5af:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a5b2	obj/kernel.asm	/^c010a5b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5b5	obj/kernel.asm	/^c010a5b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5b8	obj/kernel.asm	/^c010a5b8:	e8 8b fe ff ff       	call   c010a448 <fd_array_open>$/;"	l
c010a5bd	obj/kernel.asm	/^c010a5bd:	c9                   	leave  $/;"	l
c010a5be	obj/kernel.asm	/^c010a5be:	c3                   	ret    $/;"	l
c010a5bf	obj/kernel.asm	/^c010a5bf <fd2file>:$/;"	l
c010a5bf	obj/kernel.asm	/^c010a5bf:	55                   	push   %ebp$/;"	l
c010a5c0	obj/kernel.asm	/^c010a5c0:	89 e5                	mov    %esp,%ebp$/;"	l
c010a5c2	obj/kernel.asm	/^c010a5c2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a5c5	obj/kernel.asm	/^c010a5c5:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a5c9	obj/kernel.asm	/^c010a5c9:	78 4b                	js     c010a616 <fd2file+0x57>$/;"	l
c010a5cb	obj/kernel.asm	/^c010a5cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5ce	obj/kernel.asm	/^c010a5ce:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a5d3	obj/kernel.asm	/^c010a5d3:	77 41                	ja     c010a616 <fd2file+0x57>$/;"	l
c010a5d5	obj/kernel.asm	/^c010a5d5:	e8 99 fb ff ff       	call   c010a173 <get_fd_array>$/;"	l
c010a5da	obj/kernel.asm	/^c010a5da:	89 c2                	mov    %eax,%edx$/;"	l
c010a5dc	obj/kernel.asm	/^c010a5dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5df	obj/kernel.asm	/^c010a5df:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a5e2	obj/kernel.asm	/^c010a5e2:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
c010a5e9	obj/kernel.asm	/^c010a5e9:	29 c1                	sub    %eax,%ecx$/;"	l
c010a5eb	obj/kernel.asm	/^c010a5eb:	89 c8                	mov    %ecx,%eax$/;"	l
c010a5ed	obj/kernel.asm	/^c010a5ed:	01 d0                	add    %edx,%eax$/;"	l
c010a5ef	obj/kernel.asm	/^c010a5ef:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a5f2	obj/kernel.asm	/^c010a5f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5f5	obj/kernel.asm	/^c010a5f5:	8b 00                	mov    (%eax),%eax$/;"	l
c010a5f7	obj/kernel.asm	/^c010a5f7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a5fa	obj/kernel.asm	/^c010a5fa:	75 1a                	jne    c010a616 <fd2file+0x57>$/;"	l
c010a5fc	obj/kernel.asm	/^c010a5fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5ff	obj/kernel.asm	/^c010a5ff:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a602	obj/kernel.asm	/^c010a602:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010a605	obj/kernel.asm	/^c010a605:	75 0f                	jne    c010a616 <fd2file+0x57>$/;"	l
c010a607	obj/kernel.asm	/^c010a607:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a60a	obj/kernel.asm	/^c010a60a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a60d	obj/kernel.asm	/^c010a60d:	89 10                	mov    %edx,(%eax)$/;"	l
c010a60f	obj/kernel.asm	/^c010a60f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a614	obj/kernel.asm	/^c010a614:	eb 05                	jmp    c010a61b <fd2file+0x5c>$/;"	l
c010a616	obj/kernel.asm	/^c010a616:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a61b	obj/kernel.asm	/^c010a61b:	c9                   	leave  $/;"	l
c010a61c	obj/kernel.asm	/^c010a61c:	c3                   	ret    $/;"	l
c010a61d	obj/kernel.asm	/^c010a61d <file_testfd>:$/;"	l
c010a61d	obj/kernel.asm	/^c010a61d:	55                   	push   %ebp$/;"	l
c010a61e	obj/kernel.asm	/^c010a61e:	89 e5                	mov    %esp,%ebp$/;"	l
c010a620	obj/kernel.asm	/^c010a620:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a623	obj/kernel.asm	/^c010a623:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010a626	obj/kernel.asm	/^c010a626:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a62a	obj/kernel.asm	/^c010a62a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a62d	obj/kernel.asm	/^c010a62d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a630	obj/kernel.asm	/^c010a630:	e8 8a ff ff ff       	call   c010a5bf <fd2file>$/;"	l
c010a635	obj/kernel.asm	/^c010a635:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a638	obj/kernel.asm	/^c010a638:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a63c	obj/kernel.asm	/^c010a63c:	74 07                	je     c010a645 <file_testfd+0x28>$/;"	l
c010a63e	obj/kernel.asm	/^c010a63e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a643	obj/kernel.asm	/^c010a643:	eb 33                	jmp    c010a678 <file_testfd+0x5b>$/;"	l
c010a645	obj/kernel.asm	/^c010a645:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a649	obj/kernel.asm	/^c010a649:	74 11                	je     c010a65c <file_testfd+0x3f>$/;"	l
c010a64b	obj/kernel.asm	/^c010a64b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a64e	obj/kernel.asm	/^c010a64e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a651	obj/kernel.asm	/^c010a651:	85 c0                	test   %eax,%eax$/;"	l
c010a653	obj/kernel.asm	/^c010a653:	75 07                	jne    c010a65c <file_testfd+0x3f>$/;"	l
c010a655	obj/kernel.asm	/^c010a655:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a65a	obj/kernel.asm	/^c010a65a:	eb 1c                	jmp    c010a678 <file_testfd+0x5b>$/;"	l
c010a65c	obj/kernel.asm	/^c010a65c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a660	obj/kernel.asm	/^c010a660:	74 11                	je     c010a673 <file_testfd+0x56>$/;"	l
c010a662	obj/kernel.asm	/^c010a662:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a665	obj/kernel.asm	/^c010a665:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a668	obj/kernel.asm	/^c010a668:	85 c0                	test   %eax,%eax$/;"	l
c010a66a	obj/kernel.asm	/^c010a66a:	75 07                	jne    c010a673 <file_testfd+0x56>$/;"	l
c010a66c	obj/kernel.asm	/^c010a66c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a671	obj/kernel.asm	/^c010a671:	eb 05                	jmp    c010a678 <file_testfd+0x5b>$/;"	l
c010a673	obj/kernel.asm	/^c010a673:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010a678	obj/kernel.asm	/^c010a678:	c9                   	leave  $/;"	l
c010a679	obj/kernel.asm	/^c010a679:	c3                   	ret    $/;"	l
c010a67a	obj/kernel.asm	/^c010a67a <file_open>:$/;"	l
c010a67a	obj/kernel.asm	/^c010a67a:	55                   	push   %ebp$/;"	l
c010a67b	obj/kernel.asm	/^c010a67b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a67d	obj/kernel.asm	/^c010a67d:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010a680	obj/kernel.asm	/^c010a680:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a687	obj/kernel.asm	/^c010a687:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010a68e	obj/kernel.asm	/^c010a68e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a691	obj/kernel.asm	/^c010a691:	83 e0 03             	and    $0x3,%eax$/;"	l
c010a694	obj/kernel.asm	/^c010a694:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a697	obj/kernel.asm	/^c010a697:	74 15                	je     c010a6ae <file_open+0x34>$/;"	l
c010a699	obj/kernel.asm	/^c010a699:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a69c	obj/kernel.asm	/^c010a69c:	72 07                	jb     c010a6a5 <file_open+0x2b>$/;"	l
c010a69e	obj/kernel.asm	/^c010a69e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a6a1	obj/kernel.asm	/^c010a6a1:	74 14                	je     c010a6b7 <file_open+0x3d>$/;"	l
c010a6a3	obj/kernel.asm	/^c010a6a3:	eb 21                	jmp    c010a6c6 <file_open+0x4c>$/;"	l
c010a6a5	obj/kernel.asm	/^c010a6a5:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010a6ac	obj/kernel.asm	/^c010a6ac:	eb 22                	jmp    c010a6d0 <file_open+0x56>$/;"	l
c010a6ae	obj/kernel.asm	/^c010a6ae:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a6b5	obj/kernel.asm	/^c010a6b5:	eb 19                	jmp    c010a6d0 <file_open+0x56>$/;"	l
c010a6b7	obj/kernel.asm	/^c010a6b7:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a6be	obj/kernel.asm	/^c010a6be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a6c1	obj/kernel.asm	/^c010a6c1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a6c4	obj/kernel.asm	/^c010a6c4:	eb 0a                	jmp    c010a6d0 <file_open+0x56>$/;"	l
c010a6c6	obj/kernel.asm	/^c010a6c6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a6cb	obj/kernel.asm	/^c010a6cb:	e9 45 01 00 00       	jmp    c010a815 <file_open+0x19b>$/;"	l
c010a6d0	obj/kernel.asm	/^c010a6d0:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010a6d3	obj/kernel.asm	/^c010a6d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a6d7	obj/kernel.asm	/^c010a6d7:	c7 04 24 d9 6a ff ff 	movl   $0xffff6ad9,(%esp)$/;"	l
c010a6de	obj/kernel.asm	/^c010a6de:	e8 2a fb ff ff       	call   c010a20d <fd_array_alloc>$/;"	l
c010a6e3	obj/kernel.asm	/^c010a6e3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a6e6	obj/kernel.asm	/^c010a6e6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a6ea	obj/kernel.asm	/^c010a6ea:	74 08                	je     c010a6f4 <file_open+0x7a>$/;"	l
c010a6ec	obj/kernel.asm	/^c010a6ec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6ef	obj/kernel.asm	/^c010a6ef:	e9 21 01 00 00       	jmp    c010a815 <file_open+0x19b>$/;"	l
c010a6f4	obj/kernel.asm	/^c010a6f4:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a6f7	obj/kernel.asm	/^c010a6f7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a6fb	obj/kernel.asm	/^c010a6fb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a6fe	obj/kernel.asm	/^c010a6fe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a702	obj/kernel.asm	/^c010a702:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a705	obj/kernel.asm	/^c010a705:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a708	obj/kernel.asm	/^c010a708:	e8 8d 55 00 00       	call   c010fc9a <vfs_open>$/;"	l
c010a70d	obj/kernel.asm	/^c010a70d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a710	obj/kernel.asm	/^c010a710:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a714	obj/kernel.asm	/^c010a714:	74 13                	je     c010a729 <file_open+0xaf>$/;"	l
c010a716	obj/kernel.asm	/^c010a716:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a719	obj/kernel.asm	/^c010a719:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a71c	obj/kernel.asm	/^c010a71c:	e8 c5 fb ff ff       	call   c010a2e6 <fd_array_free>$/;"	l
c010a721	obj/kernel.asm	/^c010a721:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a724	obj/kernel.asm	/^c010a724:	e9 ec 00 00 00       	jmp    c010a815 <file_open+0x19b>$/;"	l
c010a729	obj/kernel.asm	/^c010a729:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a72c	obj/kernel.asm	/^c010a72c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010a733	obj/kernel.asm	/^c010a733:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a736	obj/kernel.asm	/^c010a736:	83 e0 20             	and    $0x20,%eax$/;"	l
c010a739	obj/kernel.asm	/^c010a739:	85 c0                	test   %eax,%eax$/;"	l
c010a73b	obj/kernel.asm	/^c010a73b:	0f 84 a8 00 00 00    	je     c010a7e9 <file_open+0x16f>$/;"	l
c010a741	obj/kernel.asm	/^c010a741:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010a744	obj/kernel.asm	/^c010a744:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a747	obj/kernel.asm	/^c010a747:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a74a	obj/kernel.asm	/^c010a74a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a74d	obj/kernel.asm	/^c010a74d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010a751	obj/kernel.asm	/^c010a751:	74 17                	je     c010a76a <file_open+0xf0>$/;"	l
c010a753	obj/kernel.asm	/^c010a753:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a756	obj/kernel.asm	/^c010a756:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a759	obj/kernel.asm	/^c010a759:	85 c0                	test   %eax,%eax$/;"	l
c010a75b	obj/kernel.asm	/^c010a75b:	74 0d                	je     c010a76a <file_open+0xf0>$/;"	l
c010a75d	obj/kernel.asm	/^c010a75d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a760	obj/kernel.asm	/^c010a760:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a763	obj/kernel.asm	/^c010a763:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a766	obj/kernel.asm	/^c010a766:	85 c0                	test   %eax,%eax$/;"	l
c010a768	obj/kernel.asm	/^c010a768:	75 24                	jne    c010a78e <file_open+0x114>$/;"	l
c010a76a	obj/kernel.asm	/^c010a76a:	c7 44 24 0c 9c 7a 11 	movl   $0xc0117a9c,0xc(%esp)$/;"	l
c010a771	obj/kernel.asm	/^c010a771:	c0 $/;"	l
c010a772	obj/kernel.asm	/^c010a772:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a779	obj/kernel.asm	/^c010a779:	c0 $/;"	l
c010a77a	obj/kernel.asm	/^c010a77a:	c7 44 24 04 b8 00 00 	movl   $0xb8,0x4(%esp)$/;"	l
c010a781	obj/kernel.asm	/^c010a781:	00 $/;"	l
c010a782	obj/kernel.asm	/^c010a782:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a789	obj/kernel.asm	/^c010a789:	e8 3a 67 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a78e	obj/kernel.asm	/^c010a78e:	c7 44 24 04 ea 7a 11 	movl   $0xc0117aea,0x4(%esp)$/;"	l
c010a795	obj/kernel.asm	/^c010a795:	c0 $/;"	l
c010a796	obj/kernel.asm	/^c010a796:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a799	obj/kernel.asm	/^c010a799:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a79c	obj/kernel.asm	/^c010a79c:	e8 20 4a 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010a7a1	obj/kernel.asm	/^c010a7a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a7a4	obj/kernel.asm	/^c010a7a4:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a7a7	obj/kernel.asm	/^c010a7a7:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a7aa	obj/kernel.asm	/^c010a7aa:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a7ad	obj/kernel.asm	/^c010a7ad:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c010a7b0	obj/kernel.asm	/^c010a7b0:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010a7b4	obj/kernel.asm	/^c010a7b4:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a7b7	obj/kernel.asm	/^c010a7b7:	ff d0                	call   *%eax$/;"	l
c010a7b9	obj/kernel.asm	/^c010a7b9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a7bc	obj/kernel.asm	/^c010a7bc:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a7c0	obj/kernel.asm	/^c010a7c0:	74 1b                	je     c010a7dd <file_open+0x163>$/;"	l
c010a7c2	obj/kernel.asm	/^c010a7c2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a7c5	obj/kernel.asm	/^c010a7c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a7c8	obj/kernel.asm	/^c010a7c8:	e8 bd 57 00 00       	call   c010ff8a <vfs_close>$/;"	l
c010a7cd	obj/kernel.asm	/^c010a7cd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7d0	obj/kernel.asm	/^c010a7d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a7d3	obj/kernel.asm	/^c010a7d3:	e8 0e fb ff ff       	call   c010a2e6 <fd_array_free>$/;"	l
c010a7d8	obj/kernel.asm	/^c010a7d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a7db	obj/kernel.asm	/^c010a7db:	eb 38                	jmp    c010a815 <file_open+0x19b>$/;"	l
c010a7dd	obj/kernel.asm	/^c010a7dd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7e0	obj/kernel.asm	/^c010a7e0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a7e3	obj/kernel.asm	/^c010a7e3:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010a7e6	obj/kernel.asm	/^c010a7e6:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a7e9	obj/kernel.asm	/^c010a7e9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7ec	obj/kernel.asm	/^c010a7ec:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a7ef	obj/kernel.asm	/^c010a7ef:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a7f2	obj/kernel.asm	/^c010a7f2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7f5	obj/kernel.asm	/^c010a7f5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a7f8	obj/kernel.asm	/^c010a7f8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a7fb	obj/kernel.asm	/^c010a7fb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7fe	obj/kernel.asm	/^c010a7fe:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010a801	obj/kernel.asm	/^c010a801:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a804	obj/kernel.asm	/^c010a804:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a807	obj/kernel.asm	/^c010a807:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a80a	obj/kernel.asm	/^c010a80a:	e8 39 fc ff ff       	call   c010a448 <fd_array_open>$/;"	l
c010a80f	obj/kernel.asm	/^c010a80f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a812	obj/kernel.asm	/^c010a812:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a815	obj/kernel.asm	/^c010a815:	c9                   	leave  $/;"	l
c010a816	obj/kernel.asm	/^c010a816:	c3                   	ret    $/;"	l
c010a817	obj/kernel.asm	/^c010a817 <file_close>:$/;"	l
c010a817	obj/kernel.asm	/^c010a817:	55                   	push   %ebp$/;"	l
c010a818	obj/kernel.asm	/^c010a818:	89 e5                	mov    %esp,%ebp$/;"	l
c010a81a	obj/kernel.asm	/^c010a81a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a81d	obj/kernel.asm	/^c010a81d:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010a820	obj/kernel.asm	/^c010a820:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a824	obj/kernel.asm	/^c010a824:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a827	obj/kernel.asm	/^c010a827:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a82a	obj/kernel.asm	/^c010a82a:	e8 90 fd ff ff       	call   c010a5bf <fd2file>$/;"	l
c010a82f	obj/kernel.asm	/^c010a82f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a832	obj/kernel.asm	/^c010a832:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a836	obj/kernel.asm	/^c010a836:	74 05                	je     c010a83d <file_close+0x26>$/;"	l
c010a838	obj/kernel.asm	/^c010a838:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a83b	obj/kernel.asm	/^c010a83b:	eb 10                	jmp    c010a84d <file_close+0x36>$/;"	l
c010a83d	obj/kernel.asm	/^c010a83d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a840	obj/kernel.asm	/^c010a840:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a843	obj/kernel.asm	/^c010a843:	e8 54 fc ff ff       	call   c010a49c <fd_array_close>$/;"	l
c010a848	obj/kernel.asm	/^c010a848:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a84d	obj/kernel.asm	/^c010a84d:	c9                   	leave  $/;"	l
c010a84e	obj/kernel.asm	/^c010a84e:	c3                   	ret    $/;"	l
c010a84f	obj/kernel.asm	/^c010a84f <file_read>:$/;"	l
c010a84f	obj/kernel.asm	/^c010a84f:	55                   	push   %ebp$/;"	l
c010a850	obj/kernel.asm	/^c010a850:	89 e5                	mov    %esp,%ebp$/;"	l
c010a852	obj/kernel.asm	/^c010a852:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010a855	obj/kernel.asm	/^c010a855:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a858	obj/kernel.asm	/^c010a858:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a85e	obj/kernel.asm	/^c010a85e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010a861	obj/kernel.asm	/^c010a861:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a865	obj/kernel.asm	/^c010a865:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a868	obj/kernel.asm	/^c010a868:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a86b	obj/kernel.asm	/^c010a86b:	e8 4f fd ff ff       	call   c010a5bf <fd2file>$/;"	l
c010a870	obj/kernel.asm	/^c010a870:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a873	obj/kernel.asm	/^c010a873:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a877	obj/kernel.asm	/^c010a877:	74 08                	je     c010a881 <file_read+0x32>$/;"	l
c010a879	obj/kernel.asm	/^c010a879:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a87c	obj/kernel.asm	/^c010a87c:	e9 06 01 00 00       	jmp    c010a987 <file_read+0x138>$/;"	l
c010a881	obj/kernel.asm	/^c010a881:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a884	obj/kernel.asm	/^c010a884:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a887	obj/kernel.asm	/^c010a887:	85 c0                	test   %eax,%eax$/;"	l
c010a889	obj/kernel.asm	/^c010a889:	75 0a                	jne    c010a895 <file_read+0x46>$/;"	l
c010a88b	obj/kernel.asm	/^c010a88b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a890	obj/kernel.asm	/^c010a890:	e9 f2 00 00 00       	jmp    c010a987 <file_read+0x138>$/;"	l
c010a895	obj/kernel.asm	/^c010a895:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a898	obj/kernel.asm	/^c010a898:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a89b	obj/kernel.asm	/^c010a89b:	e8 da fa ff ff       	call   c010a37a <fd_array_acquire>$/;"	l
c010a8a0	obj/kernel.asm	/^c010a8a0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a8a3	obj/kernel.asm	/^c010a8a3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a8a6	obj/kernel.asm	/^c010a8a6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a8aa	obj/kernel.asm	/^c010a8aa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a8ad	obj/kernel.asm	/^c010a8ad:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a8b1	obj/kernel.asm	/^c010a8b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a8b4	obj/kernel.asm	/^c010a8b4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a8b8	obj/kernel.asm	/^c010a8b8:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010a8bb	obj/kernel.asm	/^c010a8bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a8be	obj/kernel.asm	/^c010a8be:	e8 81 09 00 00       	call   c010b244 <iobuf_init>$/;"	l
c010a8c3	obj/kernel.asm	/^c010a8c3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a8c6	obj/kernel.asm	/^c010a8c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a8c9	obj/kernel.asm	/^c010a8c9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a8cc	obj/kernel.asm	/^c010a8cc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a8cf	obj/kernel.asm	/^c010a8cf:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a8d3	obj/kernel.asm	/^c010a8d3:	74 17                	je     c010a8ec <file_read+0x9d>$/;"	l
c010a8d5	obj/kernel.asm	/^c010a8d5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8d8	obj/kernel.asm	/^c010a8d8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a8db	obj/kernel.asm	/^c010a8db:	85 c0                	test   %eax,%eax$/;"	l
c010a8dd	obj/kernel.asm	/^c010a8dd:	74 0d                	je     c010a8ec <file_read+0x9d>$/;"	l
c010a8df	obj/kernel.asm	/^c010a8df:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8e2	obj/kernel.asm	/^c010a8e2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a8e5	obj/kernel.asm	/^c010a8e5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a8e8	obj/kernel.asm	/^c010a8e8:	85 c0                	test   %eax,%eax$/;"	l
c010a8ea	obj/kernel.asm	/^c010a8ea:	75 24                	jne    c010a910 <file_read+0xc1>$/;"	l
c010a8ec	obj/kernel.asm	/^c010a8ec:	c7 44 24 0c f0 7a 11 	movl   $0xc0117af0,0xc(%esp)$/;"	l
c010a8f3	obj/kernel.asm	/^c010a8f3:	c0 $/;"	l
c010a8f4	obj/kernel.asm	/^c010a8f4:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010a8fb	obj/kernel.asm	/^c010a8fb:	c0 $/;"	l
c010a8fc	obj/kernel.asm	/^c010a8fc:	c7 44 24 04 e2 00 00 	movl   $0xe2,0x4(%esp)$/;"	l
c010a903	obj/kernel.asm	/^c010a903:	00 $/;"	l
c010a904	obj/kernel.asm	/^c010a904:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010a90b	obj/kernel.asm	/^c010a90b:	e8 b8 65 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010a910	obj/kernel.asm	/^c010a910:	c7 44 24 04 3d 7b 11 	movl   $0xc0117b3d,0x4(%esp)$/;"	l
c010a917	obj/kernel.asm	/^c010a917:	c0 $/;"	l
c010a918	obj/kernel.asm	/^c010a918:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a91b	obj/kernel.asm	/^c010a91b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a91e	obj/kernel.asm	/^c010a91e:	e8 9e 48 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010a923	obj/kernel.asm	/^c010a923:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a926	obj/kernel.asm	/^c010a926:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a929	obj/kernel.asm	/^c010a929:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a92c	obj/kernel.asm	/^c010a92c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a92f	obj/kernel.asm	/^c010a92f:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010a932	obj/kernel.asm	/^c010a932:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010a935	obj/kernel.asm	/^c010a935:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010a939	obj/kernel.asm	/^c010a939:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a93c	obj/kernel.asm	/^c010a93c:	ff d0                	call   *%eax$/;"	l
c010a93e	obj/kernel.asm	/^c010a93e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a941	obj/kernel.asm	/^c010a941:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a944	obj/kernel.asm	/^c010a944:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a947	obj/kernel.asm	/^c010a947:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a94a	obj/kernel.asm	/^c010a94a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a94d	obj/kernel.asm	/^c010a94d:	29 c2                	sub    %eax,%edx$/;"	l
c010a94f	obj/kernel.asm	/^c010a94f:	89 d0                	mov    %edx,%eax$/;"	l
c010a951	obj/kernel.asm	/^c010a951:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a954	obj/kernel.asm	/^c010a954:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a957	obj/kernel.asm	/^c010a957:	8b 00                	mov    (%eax),%eax$/;"	l
c010a959	obj/kernel.asm	/^c010a959:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a95c	obj/kernel.asm	/^c010a95c:	75 13                	jne    c010a971 <file_read+0x122>$/;"	l
c010a95e	obj/kernel.asm	/^c010a95e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a961	obj/kernel.asm	/^c010a961:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a964	obj/kernel.asm	/^c010a964:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010a967	obj/kernel.asm	/^c010a967:	89 d1                	mov    %edx,%ecx$/;"	l
c010a969	obj/kernel.asm	/^c010a969:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a96c	obj/kernel.asm	/^c010a96c:	01 ca                	add    %ecx,%edx$/;"	l
c010a96e	obj/kernel.asm	/^c010a96e:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a971	obj/kernel.asm	/^c010a971:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a974	obj/kernel.asm	/^c010a974:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a977	obj/kernel.asm	/^c010a977:	89 10                	mov    %edx,(%eax)$/;"	l
c010a979	obj/kernel.asm	/^c010a979:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a97c	obj/kernel.asm	/^c010a97c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a97f	obj/kernel.asm	/^c010a97f:	e8 37 fa ff ff       	call   c010a3bb <fd_array_release>$/;"	l
c010a984	obj/kernel.asm	/^c010a984:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a987	obj/kernel.asm	/^c010a987:	c9                   	leave  $/;"	l
c010a988	obj/kernel.asm	/^c010a988:	c3                   	ret    $/;"	l
c010a989	obj/kernel.asm	/^c010a989 <file_write>:$/;"	l
c010a989	obj/kernel.asm	/^c010a989:	55                   	push   %ebp$/;"	l
c010a98a	obj/kernel.asm	/^c010a98a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a98c	obj/kernel.asm	/^c010a98c:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010a98f	obj/kernel.asm	/^c010a98f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a992	obj/kernel.asm	/^c010a992:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a998	obj/kernel.asm	/^c010a998:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010a99b	obj/kernel.asm	/^c010a99b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a99f	obj/kernel.asm	/^c010a99f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9a2	obj/kernel.asm	/^c010a9a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a9a5	obj/kernel.asm	/^c010a9a5:	e8 15 fc ff ff       	call   c010a5bf <fd2file>$/;"	l
c010a9aa	obj/kernel.asm	/^c010a9aa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a9ad	obj/kernel.asm	/^c010a9ad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a9b1	obj/kernel.asm	/^c010a9b1:	74 08                	je     c010a9bb <file_write+0x32>$/;"	l
c010a9b3	obj/kernel.asm	/^c010a9b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a9b6	obj/kernel.asm	/^c010a9b6:	e9 06 01 00 00       	jmp    c010aac1 <file_write+0x138>$/;"	l
c010a9bb	obj/kernel.asm	/^c010a9bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9be	obj/kernel.asm	/^c010a9be:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a9c1	obj/kernel.asm	/^c010a9c1:	85 c0                	test   %eax,%eax$/;"	l
c010a9c3	obj/kernel.asm	/^c010a9c3:	75 0a                	jne    c010a9cf <file_write+0x46>$/;"	l
c010a9c5	obj/kernel.asm	/^c010a9c5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a9ca	obj/kernel.asm	/^c010a9ca:	e9 f2 00 00 00       	jmp    c010aac1 <file_write+0x138>$/;"	l
c010a9cf	obj/kernel.asm	/^c010a9cf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9d2	obj/kernel.asm	/^c010a9d2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a9d5	obj/kernel.asm	/^c010a9d5:	e8 a0 f9 ff ff       	call   c010a37a <fd_array_acquire>$/;"	l
c010a9da	obj/kernel.asm	/^c010a9da:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9dd	obj/kernel.asm	/^c010a9dd:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a9e0	obj/kernel.asm	/^c010a9e0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010a9e4	obj/kernel.asm	/^c010a9e4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a9e7	obj/kernel.asm	/^c010a9e7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a9eb	obj/kernel.asm	/^c010a9eb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a9ee	obj/kernel.asm	/^c010a9ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a9f2	obj/kernel.asm	/^c010a9f2:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010a9f5	obj/kernel.asm	/^c010a9f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a9f8	obj/kernel.asm	/^c010a9f8:	e8 47 08 00 00       	call   c010b244 <iobuf_init>$/;"	l
c010a9fd	obj/kernel.asm	/^c010a9fd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aa00	obj/kernel.asm	/^c010aa00:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa03	obj/kernel.asm	/^c010aa03:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010aa06	obj/kernel.asm	/^c010aa06:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010aa09	obj/kernel.asm	/^c010aa09:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010aa0d	obj/kernel.asm	/^c010aa0d:	74 17                	je     c010aa26 <file_write+0x9d>$/;"	l
c010aa0f	obj/kernel.asm	/^c010aa0f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa12	obj/kernel.asm	/^c010aa12:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa15	obj/kernel.asm	/^c010aa15:	85 c0                	test   %eax,%eax$/;"	l
c010aa17	obj/kernel.asm	/^c010aa17:	74 0d                	je     c010aa26 <file_write+0x9d>$/;"	l
c010aa19	obj/kernel.asm	/^c010aa19:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa1c	obj/kernel.asm	/^c010aa1c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa1f	obj/kernel.asm	/^c010aa1f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010aa22	obj/kernel.asm	/^c010aa22:	85 c0                	test   %eax,%eax$/;"	l
c010aa24	obj/kernel.asm	/^c010aa24:	75 24                	jne    c010aa4a <file_write+0xc1>$/;"	l
c010aa26	obj/kernel.asm	/^c010aa26:	c7 44 24 0c 44 7b 11 	movl   $0xc0117b44,0xc(%esp)$/;"	l
c010aa2d	obj/kernel.asm	/^c010aa2d:	c0 $/;"	l
c010aa2e	obj/kernel.asm	/^c010aa2e:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010aa35	obj/kernel.asm	/^c010aa35:	c0 $/;"	l
c010aa36	obj/kernel.asm	/^c010aa36:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c010aa3d	obj/kernel.asm	/^c010aa3d:	00 $/;"	l
c010aa3e	obj/kernel.asm	/^c010aa3e:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010aa45	obj/kernel.asm	/^c010aa45:	e8 7e 64 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010aa4a	obj/kernel.asm	/^c010aa4a:	c7 44 24 04 92 7b 11 	movl   $0xc0117b92,0x4(%esp)$/;"	l
c010aa51	obj/kernel.asm	/^c010aa51:	c0 $/;"	l
c010aa52	obj/kernel.asm	/^c010aa52:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa55	obj/kernel.asm	/^c010aa55:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aa58	obj/kernel.asm	/^c010aa58:	e8 64 47 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010aa5d	obj/kernel.asm	/^c010aa5d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa60	obj/kernel.asm	/^c010aa60:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa63	obj/kernel.asm	/^c010aa63:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010aa66	obj/kernel.asm	/^c010aa66:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010aa69	obj/kernel.asm	/^c010aa69:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010aa6c	obj/kernel.asm	/^c010aa6c:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010aa6f	obj/kernel.asm	/^c010aa6f:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010aa73	obj/kernel.asm	/^c010aa73:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010aa76	obj/kernel.asm	/^c010aa76:	ff d0                	call   *%eax$/;"	l
c010aa78	obj/kernel.asm	/^c010aa78:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aa7b	obj/kernel.asm	/^c010aa7b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa7e	obj/kernel.asm	/^c010aa7e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010aa81	obj/kernel.asm	/^c010aa81:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa84	obj/kernel.asm	/^c010aa84:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aa87	obj/kernel.asm	/^c010aa87:	29 c2                	sub    %eax,%edx$/;"	l
c010aa89	obj/kernel.asm	/^c010aa89:	89 d0                	mov    %edx,%eax$/;"	l
c010aa8b	obj/kernel.asm	/^c010aa8b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010aa8e	obj/kernel.asm	/^c010aa8e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa91	obj/kernel.asm	/^c010aa91:	8b 00                	mov    (%eax),%eax$/;"	l
c010aa93	obj/kernel.asm	/^c010aa93:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010aa96	obj/kernel.asm	/^c010aa96:	75 13                	jne    c010aaab <file_write+0x122>$/;"	l
c010aa98	obj/kernel.asm	/^c010aa98:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa9b	obj/kernel.asm	/^c010aa9b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010aa9e	obj/kernel.asm	/^c010aa9e:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010aaa1	obj/kernel.asm	/^c010aaa1:	89 d1                	mov    %edx,%ecx$/;"	l
c010aaa3	obj/kernel.asm	/^c010aaa3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aaa6	obj/kernel.asm	/^c010aaa6:	01 ca                	add    %ecx,%edx$/;"	l
c010aaa8	obj/kernel.asm	/^c010aaa8:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010aaab	obj/kernel.asm	/^c010aaab:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010aaae	obj/kernel.asm	/^c010aaae:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aab1	obj/kernel.asm	/^c010aab1:	89 10                	mov    %edx,(%eax)$/;"	l
c010aab3	obj/kernel.asm	/^c010aab3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aab6	obj/kernel.asm	/^c010aab6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aab9	obj/kernel.asm	/^c010aab9:	e8 fd f8 ff ff       	call   c010a3bb <fd_array_release>$/;"	l
c010aabe	obj/kernel.asm	/^c010aabe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aac1	obj/kernel.asm	/^c010aac1:	c9                   	leave  $/;"	l
c010aac2	obj/kernel.asm	/^c010aac2:	c3                   	ret    $/;"	l
c010aac3	obj/kernel.asm	/^c010aac3 <file_seek>:$/;"	l
c010aac3	obj/kernel.asm	/^c010aac3:	55                   	push   %ebp$/;"	l
c010aac4	obj/kernel.asm	/^c010aac4:	89 e5                	mov    %esp,%ebp$/;"	l
c010aac6	obj/kernel.asm	/^c010aac6:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010aac9	obj/kernel.asm	/^c010aac9:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010aacc	obj/kernel.asm	/^c010aacc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aacf	obj/kernel.asm	/^c010aacf:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010aad2	obj/kernel.asm	/^c010aad2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aad6	obj/kernel.asm	/^c010aad6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aad9	obj/kernel.asm	/^c010aad9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aadc	obj/kernel.asm	/^c010aadc:	e8 de fa ff ff       	call   c010a5bf <fd2file>$/;"	l
c010aae1	obj/kernel.asm	/^c010aae1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aae4	obj/kernel.asm	/^c010aae4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aae8	obj/kernel.asm	/^c010aae8:	74 08                	je     c010aaf2 <file_seek+0x2f>$/;"	l
c010aaea	obj/kernel.asm	/^c010aaea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aaed	obj/kernel.asm	/^c010aaed:	e9 72 01 00 00       	jmp    c010ac64 <file_seek+0x1a1>$/;"	l
c010aaf2	obj/kernel.asm	/^c010aaf2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010aaf5	obj/kernel.asm	/^c010aaf5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aaf8	obj/kernel.asm	/^c010aaf8:	e8 7d f8 ff ff       	call   c010a37a <fd_array_acquire>$/;"	l
c010aafd	obj/kernel.asm	/^c010aafd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ab00	obj/kernel.asm	/^c010ab00:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010ab03	obj/kernel.asm	/^c010ab03:	74 12                	je     c010ab17 <file_seek+0x54>$/;"	l
c010ab05	obj/kernel.asm	/^c010ab05:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ab08	obj/kernel.asm	/^c010ab08:	74 1b                	je     c010ab25 <file_seek+0x62>$/;"	l
c010ab0a	obj/kernel.asm	/^c010ab0a:	85 c0                	test   %eax,%eax$/;"	l
c010ab0c	obj/kernel.asm	/^c010ab0c:	0f 84 af 00 00 00    	je     c010abc1 <file_seek+0xfe>$/;"	l
c010ab12	obj/kernel.asm	/^c010ab12:	e9 a1 00 00 00       	jmp    c010abb8 <file_seek+0xf5>$/;"	l
c010ab17	obj/kernel.asm	/^c010ab17:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ab1a	obj/kernel.asm	/^c010ab1a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ab1d	obj/kernel.asm	/^c010ab1d:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010ab20	obj/kernel.asm	/^c010ab20:	e9 9d 00 00 00       	jmp    c010abc2 <file_seek+0xff>$/;"	l
c010ab25	obj/kernel.asm	/^c010ab25:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ab28	obj/kernel.asm	/^c010ab28:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab2b	obj/kernel.asm	/^c010ab2b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ab2e	obj/kernel.asm	/^c010ab2e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ab32	obj/kernel.asm	/^c010ab32:	74 17                	je     c010ab4b <file_seek+0x88>$/;"	l
c010ab34	obj/kernel.asm	/^c010ab34:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab37	obj/kernel.asm	/^c010ab37:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab3a	obj/kernel.asm	/^c010ab3a:	85 c0                	test   %eax,%eax$/;"	l
c010ab3c	obj/kernel.asm	/^c010ab3c:	74 0d                	je     c010ab4b <file_seek+0x88>$/;"	l
c010ab3e	obj/kernel.asm	/^c010ab3e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab41	obj/kernel.asm	/^c010ab41:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab44	obj/kernel.asm	/^c010ab44:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab47	obj/kernel.asm	/^c010ab47:	85 c0                	test   %eax,%eax$/;"	l
c010ab49	obj/kernel.asm	/^c010ab49:	75 24                	jne    c010ab6f <file_seek+0xac>$/;"	l
c010ab4b	obj/kernel.asm	/^c010ab4b:	c7 44 24 0c 9c 7a 11 	movl   $0xc0117a9c,0xc(%esp)$/;"	l
c010ab52	obj/kernel.asm	/^c010ab52:	c0 $/;"	l
c010ab53	obj/kernel.asm	/^c010ab53:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010ab5a	obj/kernel.asm	/^c010ab5a:	c0 $/;"	l
c010ab5b	obj/kernel.asm	/^c010ab5b:	c7 44 24 04 16 01 00 	movl   $0x116,0x4(%esp)$/;"	l
c010ab62	obj/kernel.asm	/^c010ab62:	00 $/;"	l
c010ab63	obj/kernel.asm	/^c010ab63:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010ab6a	obj/kernel.asm	/^c010ab6a:	e8 59 63 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ab6f	obj/kernel.asm	/^c010ab6f:	c7 44 24 04 ea 7a 11 	movl   $0xc0117aea,0x4(%esp)$/;"	l
c010ab76	obj/kernel.asm	/^c010ab76:	c0 $/;"	l
c010ab77	obj/kernel.asm	/^c010ab77:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab7a	obj/kernel.asm	/^c010ab7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ab7d	obj/kernel.asm	/^c010ab7d:	e8 3f 46 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010ab82	obj/kernel.asm	/^c010ab82:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab85	obj/kernel.asm	/^c010ab85:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab88	obj/kernel.asm	/^c010ab88:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab8b	obj/kernel.asm	/^c010ab8b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010ab8e	obj/kernel.asm	/^c010ab8e:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ab91	obj/kernel.asm	/^c010ab91:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010ab94	obj/kernel.asm	/^c010ab94:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010ab98	obj/kernel.asm	/^c010ab98:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ab9b	obj/kernel.asm	/^c010ab9b:	ff d0                	call   *%eax$/;"	l
c010ab9d	obj/kernel.asm	/^c010ab9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aba0	obj/kernel.asm	/^c010aba0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aba4	obj/kernel.asm	/^c010aba4:	75 10                	jne    c010abb6 <file_seek+0xf3>$/;"	l
c010aba6	obj/kernel.asm	/^c010aba6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aba9	obj/kernel.asm	/^c010aba9:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010abac	obj/kernel.asm	/^c010abac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010abaf	obj/kernel.asm	/^c010abaf:	01 d0                	add    %edx,%eax$/;"	l
c010abb1	obj/kernel.asm	/^c010abb1:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010abb4	obj/kernel.asm	/^c010abb4:	eb 0c                	jmp    c010abc2 <file_seek+0xff>$/;"	l
c010abb6	obj/kernel.asm	/^c010abb6:	eb 0a                	jmp    c010abc2 <file_seek+0xff>$/;"	l
c010abb8	obj/kernel.asm	/^c010abb8:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010abbf	obj/kernel.asm	/^c010abbf:	eb 01                	jmp    c010abc2 <file_seek+0xff>$/;"	l
c010abc1	obj/kernel.asm	/^c010abc1:	90                   	nop$/;"	l
c010abc2	obj/kernel.asm	/^c010abc2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010abc6	obj/kernel.asm	/^c010abc6:	0f 85 8a 00 00 00    	jne    c010ac56 <file_seek+0x193>$/;"	l
c010abcc	obj/kernel.asm	/^c010abcc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010abcf	obj/kernel.asm	/^c010abcf:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010abd2	obj/kernel.asm	/^c010abd2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010abd5	obj/kernel.asm	/^c010abd5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010abd9	obj/kernel.asm	/^c010abd9:	74 17                	je     c010abf2 <file_seek+0x12f>$/;"	l
c010abdb	obj/kernel.asm	/^c010abdb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010abde	obj/kernel.asm	/^c010abde:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010abe1	obj/kernel.asm	/^c010abe1:	85 c0                	test   %eax,%eax$/;"	l
c010abe3	obj/kernel.asm	/^c010abe3:	74 0d                	je     c010abf2 <file_seek+0x12f>$/;"	l
c010abe5	obj/kernel.asm	/^c010abe5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010abe8	obj/kernel.asm	/^c010abe8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010abeb	obj/kernel.asm	/^c010abeb:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010abee	obj/kernel.asm	/^c010abee:	85 c0                	test   %eax,%eax$/;"	l
c010abf0	obj/kernel.asm	/^c010abf0:	75 24                	jne    c010ac16 <file_seek+0x153>$/;"	l
c010abf2	obj/kernel.asm	/^c010abf2:	c7 44 24 0c 98 7b 11 	movl   $0xc0117b98,0xc(%esp)$/;"	l
c010abf9	obj/kernel.asm	/^c010abf9:	c0 $/;"	l
c010abfa	obj/kernel.asm	/^c010abfa:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010ac01	obj/kernel.asm	/^c010ac01:	c0 $/;"	l
c010ac02	obj/kernel.asm	/^c010ac02:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)$/;"	l
c010ac09	obj/kernel.asm	/^c010ac09:	00 $/;"	l
c010ac0a	obj/kernel.asm	/^c010ac0a:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010ac11	obj/kernel.asm	/^c010ac11:	e8 b2 62 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ac16	obj/kernel.asm	/^c010ac16:	c7 44 24 04 e8 7b 11 	movl   $0xc0117be8,0x4(%esp)$/;"	l
c010ac1d	obj/kernel.asm	/^c010ac1d:	c0 $/;"	l
c010ac1e	obj/kernel.asm	/^c010ac1e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac21	obj/kernel.asm	/^c010ac21:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ac24	obj/kernel.asm	/^c010ac24:	e8 98 45 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010ac29	obj/kernel.asm	/^c010ac29:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac2c	obj/kernel.asm	/^c010ac2c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac2f	obj/kernel.asm	/^c010ac2f:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010ac32	obj/kernel.asm	/^c010ac32:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010ac35	obj/kernel.asm	/^c010ac35:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ac38	obj/kernel.asm	/^c010ac38:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010ac3b	obj/kernel.asm	/^c010ac3b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010ac3f	obj/kernel.asm	/^c010ac3f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ac42	obj/kernel.asm	/^c010ac42:	ff d0                	call   *%eax$/;"	l
c010ac44	obj/kernel.asm	/^c010ac44:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ac47	obj/kernel.asm	/^c010ac47:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ac4b	obj/kernel.asm	/^c010ac4b:	75 09                	jne    c010ac56 <file_seek+0x193>$/;"	l
c010ac4d	obj/kernel.asm	/^c010ac4d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ac50	obj/kernel.asm	/^c010ac50:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ac53	obj/kernel.asm	/^c010ac53:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010ac56	obj/kernel.asm	/^c010ac56:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ac59	obj/kernel.asm	/^c010ac59:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ac5c	obj/kernel.asm	/^c010ac5c:	e8 5a f7 ff ff       	call   c010a3bb <fd_array_release>$/;"	l
c010ac61	obj/kernel.asm	/^c010ac61:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ac64	obj/kernel.asm	/^c010ac64:	c9                   	leave  $/;"	l
c010ac65	obj/kernel.asm	/^c010ac65:	c3                   	ret    $/;"	l
c010ac66	obj/kernel.asm	/^c010ac66 <file_fstat>:$/;"	l
c010ac66	obj/kernel.asm	/^c010ac66:	55                   	push   %ebp$/;"	l
c010ac67	obj/kernel.asm	/^c010ac67:	89 e5                	mov    %esp,%ebp$/;"	l
c010ac69	obj/kernel.asm	/^c010ac69:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ac6c	obj/kernel.asm	/^c010ac6c:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ac6f	obj/kernel.asm	/^c010ac6f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ac73	obj/kernel.asm	/^c010ac73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac76	obj/kernel.asm	/^c010ac76:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ac79	obj/kernel.asm	/^c010ac79:	e8 41 f9 ff ff       	call   c010a5bf <fd2file>$/;"	l
c010ac7e	obj/kernel.asm	/^c010ac7e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ac81	obj/kernel.asm	/^c010ac81:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ac85	obj/kernel.asm	/^c010ac85:	74 08                	je     c010ac8f <file_fstat+0x29>$/;"	l
c010ac87	obj/kernel.asm	/^c010ac87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ac8a	obj/kernel.asm	/^c010ac8a:	e9 94 00 00 00       	jmp    c010ad23 <file_fstat+0xbd>$/;"	l
c010ac8f	obj/kernel.asm	/^c010ac8f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac92	obj/kernel.asm	/^c010ac92:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ac95	obj/kernel.asm	/^c010ac95:	e8 e0 f6 ff ff       	call   c010a37a <fd_array_acquire>$/;"	l
c010ac9a	obj/kernel.asm	/^c010ac9a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac9d	obj/kernel.asm	/^c010ac9d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010aca0	obj/kernel.asm	/^c010aca0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aca3	obj/kernel.asm	/^c010aca3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010aca7	obj/kernel.asm	/^c010aca7:	74 17                	je     c010acc0 <file_fstat+0x5a>$/;"	l
c010aca9	obj/kernel.asm	/^c010aca9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acac	obj/kernel.asm	/^c010acac:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010acaf	obj/kernel.asm	/^c010acaf:	85 c0                	test   %eax,%eax$/;"	l
c010acb1	obj/kernel.asm	/^c010acb1:	74 0d                	je     c010acc0 <file_fstat+0x5a>$/;"	l
c010acb3	obj/kernel.asm	/^c010acb3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acb6	obj/kernel.asm	/^c010acb6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010acb9	obj/kernel.asm	/^c010acb9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010acbc	obj/kernel.asm	/^c010acbc:	85 c0                	test   %eax,%eax$/;"	l
c010acbe	obj/kernel.asm	/^c010acbe:	75 24                	jne    c010ace4 <file_fstat+0x7e>$/;"	l
c010acc0	obj/kernel.asm	/^c010acc0:	c7 44 24 0c 9c 7a 11 	movl   $0xc0117a9c,0xc(%esp)$/;"	l
c010acc7	obj/kernel.asm	/^c010acc7:	c0 $/;"	l
c010acc8	obj/kernel.asm	/^c010acc8:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010accf	obj/kernel.asm	/^c010accf:	c0 $/;"	l
c010acd0	obj/kernel.asm	/^c010acd0:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
c010acd7	obj/kernel.asm	/^c010acd7:	00 $/;"	l
c010acd8	obj/kernel.asm	/^c010acd8:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010acdf	obj/kernel.asm	/^c010acdf:	e8 e4 61 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ace4	obj/kernel.asm	/^c010ace4:	c7 44 24 04 ea 7a 11 	movl   $0xc0117aea,0x4(%esp)$/;"	l
c010aceb	obj/kernel.asm	/^c010aceb:	c0 $/;"	l
c010acec	obj/kernel.asm	/^c010acec:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acef	obj/kernel.asm	/^c010acef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010acf2	obj/kernel.asm	/^c010acf2:	e8 ca 44 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010acf7	obj/kernel.asm	/^c010acf7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acfa	obj/kernel.asm	/^c010acfa:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010acfd	obj/kernel.asm	/^c010acfd:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ad00	obj/kernel.asm	/^c010ad00:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ad03	obj/kernel.asm	/^c010ad03:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ad06	obj/kernel.asm	/^c010ad06:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010ad09	obj/kernel.asm	/^c010ad09:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010ad0d	obj/kernel.asm	/^c010ad0d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ad10	obj/kernel.asm	/^c010ad10:	ff d0                	call   *%eax$/;"	l
c010ad12	obj/kernel.asm	/^c010ad12:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad15	obj/kernel.asm	/^c010ad15:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad18	obj/kernel.asm	/^c010ad18:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad1b	obj/kernel.asm	/^c010ad1b:	e8 9b f6 ff ff       	call   c010a3bb <fd_array_release>$/;"	l
c010ad20	obj/kernel.asm	/^c010ad20:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad23	obj/kernel.asm	/^c010ad23:	c9                   	leave  $/;"	l
c010ad24	obj/kernel.asm	/^c010ad24:	c3                   	ret    $/;"	l
c010ad25	obj/kernel.asm	/^c010ad25 <file_fsync>:$/;"	l
c010ad25	obj/kernel.asm	/^c010ad25:	55                   	push   %ebp$/;"	l
c010ad26	obj/kernel.asm	/^c010ad26:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad28	obj/kernel.asm	/^c010ad28:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ad2b	obj/kernel.asm	/^c010ad2b:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ad2e	obj/kernel.asm	/^c010ad2e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ad32	obj/kernel.asm	/^c010ad32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad35	obj/kernel.asm	/^c010ad35:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad38	obj/kernel.asm	/^c010ad38:	e8 82 f8 ff ff       	call   c010a5bf <fd2file>$/;"	l
c010ad3d	obj/kernel.asm	/^c010ad3d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad40	obj/kernel.asm	/^c010ad40:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ad44	obj/kernel.asm	/^c010ad44:	74 08                	je     c010ad4e <file_fsync+0x29>$/;"	l
c010ad46	obj/kernel.asm	/^c010ad46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad49	obj/kernel.asm	/^c010ad49:	e9 8d 00 00 00       	jmp    c010addb <file_fsync+0xb6>$/;"	l
c010ad4e	obj/kernel.asm	/^c010ad4e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad51	obj/kernel.asm	/^c010ad51:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad54	obj/kernel.asm	/^c010ad54:	e8 21 f6 ff ff       	call   c010a37a <fd_array_acquire>$/;"	l
c010ad59	obj/kernel.asm	/^c010ad59:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad5c	obj/kernel.asm	/^c010ad5c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ad5f	obj/kernel.asm	/^c010ad5f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ad62	obj/kernel.asm	/^c010ad62:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ad66	obj/kernel.asm	/^c010ad66:	74 17                	je     c010ad7f <file_fsync+0x5a>$/;"	l
c010ad68	obj/kernel.asm	/^c010ad68:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad6b	obj/kernel.asm	/^c010ad6b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ad6e	obj/kernel.asm	/^c010ad6e:	85 c0                	test   %eax,%eax$/;"	l
c010ad70	obj/kernel.asm	/^c010ad70:	74 0d                	je     c010ad7f <file_fsync+0x5a>$/;"	l
c010ad72	obj/kernel.asm	/^c010ad72:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad75	obj/kernel.asm	/^c010ad75:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ad78	obj/kernel.asm	/^c010ad78:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ad7b	obj/kernel.asm	/^c010ad7b:	85 c0                	test   %eax,%eax$/;"	l
c010ad7d	obj/kernel.asm	/^c010ad7d:	75 24                	jne    c010ada3 <file_fsync+0x7e>$/;"	l
c010ad7f	obj/kernel.asm	/^c010ad7f:	c7 44 24 0c f0 7b 11 	movl   $0xc0117bf0,0xc(%esp)$/;"	l
c010ad86	obj/kernel.asm	/^c010ad86:	c0 $/;"	l
c010ad87	obj/kernel.asm	/^c010ad87:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010ad8e	obj/kernel.asm	/^c010ad8e:	c0 $/;"	l
c010ad8f	obj/kernel.asm	/^c010ad8f:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
c010ad96	obj/kernel.asm	/^c010ad96:	00 $/;"	l
c010ad97	obj/kernel.asm	/^c010ad97:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010ad9e	obj/kernel.asm	/^c010ad9e:	e8 25 61 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ada3	obj/kernel.asm	/^c010ada3:	c7 44 24 04 3e 7c 11 	movl   $0xc0117c3e,0x4(%esp)$/;"	l
c010adaa	obj/kernel.asm	/^c010adaa:	c0 $/;"	l
c010adab	obj/kernel.asm	/^c010adab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adae	obj/kernel.asm	/^c010adae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010adb1	obj/kernel.asm	/^c010adb1:	e8 0b 44 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010adb6	obj/kernel.asm	/^c010adb6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adb9	obj/kernel.asm	/^c010adb9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010adbc	obj/kernel.asm	/^c010adbc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010adbf	obj/kernel.asm	/^c010adbf:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010adc2	obj/kernel.asm	/^c010adc2:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010adc5	obj/kernel.asm	/^c010adc5:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010adc8	obj/kernel.asm	/^c010adc8:	ff d0                	call   *%eax$/;"	l
c010adca	obj/kernel.asm	/^c010adca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010adcd	obj/kernel.asm	/^c010adcd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010add0	obj/kernel.asm	/^c010add0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010add3	obj/kernel.asm	/^c010add3:	e8 e3 f5 ff ff       	call   c010a3bb <fd_array_release>$/;"	l
c010add8	obj/kernel.asm	/^c010add8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010addb	obj/kernel.asm	/^c010addb:	c9                   	leave  $/;"	l
c010addc	obj/kernel.asm	/^c010addc:	c3                   	ret    $/;"	l
c010addd	obj/kernel.asm	/^c010addd <file_getdirentry>:$/;"	l
c010addd	obj/kernel.asm	/^c010addd:	55                   	push   %ebp$/;"	l
c010adde	obj/kernel.asm	/^c010adde:	89 e5                	mov    %esp,%ebp$/;"	l
c010ade0	obj/kernel.asm	/^c010ade0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010ade3	obj/kernel.asm	/^c010ade3:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010ade6	obj/kernel.asm	/^c010ade6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010adea	obj/kernel.asm	/^c010adea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aded	obj/kernel.asm	/^c010aded:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010adf0	obj/kernel.asm	/^c010adf0:	e8 ca f7 ff ff       	call   c010a5bf <fd2file>$/;"	l
c010adf5	obj/kernel.asm	/^c010adf5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010adf8	obj/kernel.asm	/^c010adf8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010adfc	obj/kernel.asm	/^c010adfc:	74 08                	je     c010ae06 <file_getdirentry+0x29>$/;"	l
c010adfe	obj/kernel.asm	/^c010adfe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae01	obj/kernel.asm	/^c010ae01:	e9 e3 00 00 00       	jmp    c010aee9 <file_getdirentry+0x10c>$/;"	l
c010ae06	obj/kernel.asm	/^c010ae06:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ae09	obj/kernel.asm	/^c010ae09:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae0c	obj/kernel.asm	/^c010ae0c:	e8 69 f5 ff ff       	call   c010a37a <fd_array_acquire>$/;"	l
c010ae11	obj/kernel.asm	/^c010ae11:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ae14	obj/kernel.asm	/^c010ae14:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae16	obj/kernel.asm	/^c010ae16:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ae19	obj/kernel.asm	/^c010ae19:	83 c2 04             	add    $0x4,%edx$/;"	l
c010ae1c	obj/kernel.asm	/^c010ae1c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010ae20	obj/kernel.asm	/^c010ae20:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c010ae27	obj/kernel.asm	/^c010ae27:	00 $/;"	l
c010ae28	obj/kernel.asm	/^c010ae28:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010ae2c	obj/kernel.asm	/^c010ae2c:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010ae2f	obj/kernel.asm	/^c010ae2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae32	obj/kernel.asm	/^c010ae32:	e8 0d 04 00 00       	call   c010b244 <iobuf_init>$/;"	l
c010ae37	obj/kernel.asm	/^c010ae37:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ae3a	obj/kernel.asm	/^c010ae3a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ae3d	obj/kernel.asm	/^c010ae3d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ae40	obj/kernel.asm	/^c010ae40:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ae43	obj/kernel.asm	/^c010ae43:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ae47	obj/kernel.asm	/^c010ae47:	74 17                	je     c010ae60 <file_getdirentry+0x83>$/;"	l
c010ae49	obj/kernel.asm	/^c010ae49:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae4c	obj/kernel.asm	/^c010ae4c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae4f	obj/kernel.asm	/^c010ae4f:	85 c0                	test   %eax,%eax$/;"	l
c010ae51	obj/kernel.asm	/^c010ae51:	74 0d                	je     c010ae60 <file_getdirentry+0x83>$/;"	l
c010ae53	obj/kernel.asm	/^c010ae53:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae56	obj/kernel.asm	/^c010ae56:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae59	obj/kernel.asm	/^c010ae59:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010ae5c	obj/kernel.asm	/^c010ae5c:	85 c0                	test   %eax,%eax$/;"	l
c010ae5e	obj/kernel.asm	/^c010ae5e:	75 24                	jne    c010ae84 <file_getdirentry+0xa7>$/;"	l
c010ae60	obj/kernel.asm	/^c010ae60:	c7 44 24 0c 44 7c 11 	movl   $0xc0117c44,0xc(%esp)$/;"	l
c010ae67	obj/kernel.asm	/^c010ae67:	c0 $/;"	l
c010ae68	obj/kernel.asm	/^c010ae68:	c7 44 24 08 5a 79 11 	movl   $0xc011795a,0x8(%esp)$/;"	l
c010ae6f	obj/kernel.asm	/^c010ae6f:	c0 $/;"	l
c010ae70	obj/kernel.asm	/^c010ae70:	c7 44 24 04 4e 01 00 	movl   $0x14e,0x4(%esp)$/;"	l
c010ae77	obj/kernel.asm	/^c010ae77:	00 $/;"	l
c010ae78	obj/kernel.asm	/^c010ae78:	c7 04 24 6f 79 11 c0 	movl   $0xc011796f,(%esp)$/;"	l
c010ae7f	obj/kernel.asm	/^c010ae7f:	e8 44 60 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ae84	obj/kernel.asm	/^c010ae84:	c7 44 24 04 98 7c 11 	movl   $0xc0117c98,0x4(%esp)$/;"	l
c010ae8b	obj/kernel.asm	/^c010ae8b:	c0 $/;"	l
c010ae8c	obj/kernel.asm	/^c010ae8c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae8f	obj/kernel.asm	/^c010ae8f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae92	obj/kernel.asm	/^c010ae92:	e8 2a 43 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010ae97	obj/kernel.asm	/^c010ae97:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae9a	obj/kernel.asm	/^c010ae9a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae9d	obj/kernel.asm	/^c010ae9d:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010aea0	obj/kernel.asm	/^c010aea0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aea3	obj/kernel.asm	/^c010aea3:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010aea6	obj/kernel.asm	/^c010aea6:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010aea9	obj/kernel.asm	/^c010aea9:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010aead	obj/kernel.asm	/^c010aead:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010aeb0	obj/kernel.asm	/^c010aeb0:	ff d0                	call   *%eax$/;"	l
c010aeb2	obj/kernel.asm	/^c010aeb2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aeb5	obj/kernel.asm	/^c010aeb5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aeb9	obj/kernel.asm	/^c010aeb9:	75 20                	jne    c010aedb <file_getdirentry+0xfe>$/;"	l
c010aebb	obj/kernel.asm	/^c010aebb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aebe	obj/kernel.asm	/^c010aebe:	8b 00                	mov    (%eax),%eax$/;"	l
c010aec0	obj/kernel.asm	/^c010aec0:	89 c2                	mov    %eax,%edx$/;"	l
c010aec2	obj/kernel.asm	/^c010aec2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aec5	obj/kernel.asm	/^c010aec5:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c010aec8	obj/kernel.asm	/^c010aec8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aecb	obj/kernel.asm	/^c010aecb:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aece	obj/kernel.asm	/^c010aece:	29 c1                	sub    %eax,%ecx$/;"	l
c010aed0	obj/kernel.asm	/^c010aed0:	89 c8                	mov    %ecx,%eax$/;"	l
c010aed2	obj/kernel.asm	/^c010aed2:	01 d0                	add    %edx,%eax$/;"	l
c010aed4	obj/kernel.asm	/^c010aed4:	89 c2                	mov    %eax,%edx$/;"	l
c010aed6	obj/kernel.asm	/^c010aed6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aed9	obj/kernel.asm	/^c010aed9:	89 10                	mov    %edx,(%eax)$/;"	l
c010aedb	obj/kernel.asm	/^c010aedb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aede	obj/kernel.asm	/^c010aede:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aee1	obj/kernel.asm	/^c010aee1:	e8 d5 f4 ff ff       	call   c010a3bb <fd_array_release>$/;"	l
c010aee6	obj/kernel.asm	/^c010aee6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aee9	obj/kernel.asm	/^c010aee9:	c9                   	leave  $/;"	l
c010aeea	obj/kernel.asm	/^c010aeea:	c3                   	ret    $/;"	l
c010aeeb	obj/kernel.asm	/^c010aeeb <file_dup>:$/;"	l
c010aeeb	obj/kernel.asm	/^c010aeeb:	55                   	push   %ebp$/;"	l
c010aeec	obj/kernel.asm	/^c010aeec:	89 e5                	mov    %esp,%ebp$/;"	l
c010aeee	obj/kernel.asm	/^c010aeee:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010aef1	obj/kernel.asm	/^c010aef1:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010aef4	obj/kernel.asm	/^c010aef4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aef8	obj/kernel.asm	/^c010aef8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aefb	obj/kernel.asm	/^c010aefb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aefe	obj/kernel.asm	/^c010aefe:	e8 bc f6 ff ff       	call   c010a5bf <fd2file>$/;"	l
c010af03	obj/kernel.asm	/^c010af03:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af06	obj/kernel.asm	/^c010af06:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010af0a	obj/kernel.asm	/^c010af0a:	74 05                	je     c010af11 <file_dup+0x26>$/;"	l
c010af0c	obj/kernel.asm	/^c010af0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af0f	obj/kernel.asm	/^c010af0f:	eb 38                	jmp    c010af49 <file_dup+0x5e>$/;"	l
c010af11	obj/kernel.asm	/^c010af11:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010af14	obj/kernel.asm	/^c010af14:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010af18	obj/kernel.asm	/^c010af18:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010af1b	obj/kernel.asm	/^c010af1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af1e	obj/kernel.asm	/^c010af1e:	e8 ea f2 ff ff       	call   c010a20d <fd_array_alloc>$/;"	l
c010af23	obj/kernel.asm	/^c010af23:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af26	obj/kernel.asm	/^c010af26:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010af2a	obj/kernel.asm	/^c010af2a:	74 05                	je     c010af31 <file_dup+0x46>$/;"	l
c010af2c	obj/kernel.asm	/^c010af2c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af2f	obj/kernel.asm	/^c010af2f:	eb 18                	jmp    c010af49 <file_dup+0x5e>$/;"	l
c010af31	obj/kernel.asm	/^c010af31:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010af34	obj/kernel.asm	/^c010af34:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af37	obj/kernel.asm	/^c010af37:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010af3b	obj/kernel.asm	/^c010af3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af3e	obj/kernel.asm	/^c010af3e:	e8 e5 f5 ff ff       	call   c010a528 <fd_array_dup>$/;"	l
c010af43	obj/kernel.asm	/^c010af43:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af46	obj/kernel.asm	/^c010af46:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010af49	obj/kernel.asm	/^c010af49:	c9                   	leave  $/;"	l
c010af4a	obj/kernel.asm	/^c010af4a:	c3                   	ret    $/;"	l
c010af4b	obj/kernel.asm	/^c010af4b <files_count>:$/;"	l
c010af4b	obj/kernel.asm	/^c010af4b:	55                   	push   %ebp$/;"	l
c010af4c	obj/kernel.asm	/^c010af4c:	89 e5                	mov    %esp,%ebp$/;"	l
c010af4e	obj/kernel.asm	/^c010af4e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af51	obj/kernel.asm	/^c010af51:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010af54	obj/kernel.asm	/^c010af54:	5d                   	pop    %ebp$/;"	l
c010af55	obj/kernel.asm	/^c010af55:	c3                   	ret    $/;"	l
c010af56	obj/kernel.asm	/^c010af56 <fs_init>:$/;"	l
c010af56	obj/kernel.asm	/^c010af56:	55                   	push   %ebp$/;"	l
c010af57	obj/kernel.asm	/^c010af57:	89 e5                	mov    %esp,%ebp$/;"	l
c010af59	obj/kernel.asm	/^c010af59:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af5c	obj/kernel.asm	/^c010af5c:	e8 7c 43 00 00       	call   c010f2dd <vfs_init>$/;"	l
c010af61	obj/kernel.asm	/^c010af61:	e8 b9 5a 00 00       	call   c0110a1f <dev_init>$/;"	l
c010af66	obj/kernel.asm	/^c010af66:	e8 76 68 00 00       	call   c01117e1 <sfs_init>$/;"	l
c010af6b	obj/kernel.asm	/^c010af6b:	c9                   	leave  $/;"	l
c010af6c	obj/kernel.asm	/^c010af6c:	c3                   	ret    $/;"	l
c010af6d	obj/kernel.asm	/^c010af6d <fs_cleanup>:$/;"	l
c010af6d	obj/kernel.asm	/^c010af6d:	55                   	push   %ebp$/;"	l
c010af6e	obj/kernel.asm	/^c010af6e:	89 e5                	mov    %esp,%ebp$/;"	l
c010af70	obj/kernel.asm	/^c010af70:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af73	obj/kernel.asm	/^c010af73:	e8 1e 45 00 00       	call   c010f496 <vfs_cleanup>$/;"	l
c010af78	obj/kernel.asm	/^c010af78:	c9                   	leave  $/;"	l
c010af79	obj/kernel.asm	/^c010af79:	c3                   	ret    $/;"	l
c010af7a	obj/kernel.asm	/^c010af7a <lock_files>:$/;"	l
c010af7a	obj/kernel.asm	/^c010af7a:	55                   	push   %ebp$/;"	l
c010af7b	obj/kernel.asm	/^c010af7b:	89 e5                	mov    %esp,%ebp$/;"	l
c010af7d	obj/kernel.asm	/^c010af7d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010af80	obj/kernel.asm	/^c010af80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af83	obj/kernel.asm	/^c010af83:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010af86	obj/kernel.asm	/^c010af86:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af89	obj/kernel.asm	/^c010af89:	e8 6f ec ff ff       	call   c0109bfd <down>$/;"	l
c010af8e	obj/kernel.asm	/^c010af8e:	c9                   	leave  $/;"	l
c010af8f	obj/kernel.asm	/^c010af8f:	c3                   	ret    $/;"	l
c010af90	obj/kernel.asm	/^c010af90 <unlock_files>:$/;"	l
c010af90	obj/kernel.asm	/^c010af90:	55                   	push   %ebp$/;"	l
c010af91	obj/kernel.asm	/^c010af91:	89 e5                	mov    %esp,%ebp$/;"	l
c010af93	obj/kernel.asm	/^c010af93:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010af96	obj/kernel.asm	/^c010af96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af99	obj/kernel.asm	/^c010af99:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010af9c	obj/kernel.asm	/^c010af9c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af9f	obj/kernel.asm	/^c010af9f:	e8 3e ec ff ff       	call   c0109be2 <up>$/;"	l
c010afa4	obj/kernel.asm	/^c010afa4:	c9                   	leave  $/;"	l
c010afa5	obj/kernel.asm	/^c010afa5:	c3                   	ret    $/;"	l
c010afa6	obj/kernel.asm	/^c010afa6 <files_create>:$/;"	l
c010afa6	obj/kernel.asm	/^c010afa6:	55                   	push   %ebp$/;"	l
c010afa7	obj/kernel.asm	/^c010afa7:	89 e5                	mov    %esp,%ebp$/;"	l
c010afa9	obj/kernel.asm	/^c010afa9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010afac	obj/kernel.asm	/^c010afac:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010afb3	obj/kernel.asm	/^c010afb3:	e8 e3 9c ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010afb8	obj/kernel.asm	/^c010afb8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010afbb	obj/kernel.asm	/^c010afbb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010afbf	obj/kernel.asm	/^c010afbf:	74 43                	je     c010b004 <files_create+0x5e>$/;"	l
c010afc1	obj/kernel.asm	/^c010afc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afc4	obj/kernel.asm	/^c010afc4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010afca	obj/kernel.asm	/^c010afca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afcd	obj/kernel.asm	/^c010afcd:	8d 50 18             	lea    0x18(%eax),%edx$/;"	l
c010afd0	obj/kernel.asm	/^c010afd0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afd3	obj/kernel.asm	/^c010afd3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010afd6	obj/kernel.asm	/^c010afd6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afd9	obj/kernel.asm	/^c010afd9:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010afe0	obj/kernel.asm	/^c010afe0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afe3	obj/kernel.asm	/^c010afe3:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010afe6	obj/kernel.asm	/^c010afe6:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010afed	obj/kernel.asm	/^c010afed:	00 $/;"	l
c010afee	obj/kernel.asm	/^c010afee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aff1	obj/kernel.asm	/^c010aff1:	e8 79 ea ff ff       	call   c0109a6f <sem_init>$/;"	l
c010aff6	obj/kernel.asm	/^c010aff6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aff9	obj/kernel.asm	/^c010aff9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010affc	obj/kernel.asm	/^c010affc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010afff	obj/kernel.asm	/^c010afff:	e8 c4 f1 ff ff       	call   c010a1c8 <fd_array_init>$/;"	l
c010b004	obj/kernel.asm	/^c010b004:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b007	obj/kernel.asm	/^c010b007:	c9                   	leave  $/;"	l
c010b008	obj/kernel.asm	/^c010b008:	c3                   	ret    $/;"	l
c010b009	obj/kernel.asm	/^c010b009 <files_destroy>:$/;"	l
c010b009	obj/kernel.asm	/^c010b009:	55                   	push   %ebp$/;"	l
c010b00a	obj/kernel.asm	/^c010b00a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b00c	obj/kernel.asm	/^c010b00c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b00f	obj/kernel.asm	/^c010b00f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b013	obj/kernel.asm	/^c010b013:	74 0f                	je     c010b024 <files_destroy+0x1b>$/;"	l
c010b015	obj/kernel.asm	/^c010b015:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b018	obj/kernel.asm	/^c010b018:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b01b	obj/kernel.asm	/^c010b01b:	e8 2b ff ff ff       	call   c010af4b <files_count>$/;"	l
c010b020	obj/kernel.asm	/^c010b020:	85 c0                	test   %eax,%eax$/;"	l
c010b022	obj/kernel.asm	/^c010b022:	74 24                	je     c010b048 <files_destroy+0x3f>$/;"	l
c010b024	obj/kernel.asm	/^c010b024:	c7 44 24 0c a4 7c 11 	movl   $0xc0117ca4,0xc(%esp)$/;"	l
c010b02b	obj/kernel.asm	/^c010b02b:	c0 $/;"	l
c010b02c	obj/kernel.asm	/^c010b02c:	c7 44 24 08 cf 7c 11 	movl   $0xc0117ccf,0x8(%esp)$/;"	l
c010b033	obj/kernel.asm	/^c010b033:	c0 $/;"	l
c010b034	obj/kernel.asm	/^c010b034:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c010b03b	obj/kernel.asm	/^c010b03b:	00 $/;"	l
c010b03c	obj/kernel.asm	/^c010b03c:	c7 04 24 e4 7c 11 c0 	movl   $0xc0117ce4,(%esp)$/;"	l
c010b043	obj/kernel.asm	/^c010b043:	e8 80 5e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b048	obj/kernel.asm	/^c010b048:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b04b	obj/kernel.asm	/^c010b04b:	8b 00                	mov    (%eax),%eax$/;"	l
c010b04d	obj/kernel.asm	/^c010b04d:	85 c0                	test   %eax,%eax$/;"	l
c010b04f	obj/kernel.asm	/^c010b04f:	74 0d                	je     c010b05e <files_destroy+0x55>$/;"	l
c010b051	obj/kernel.asm	/^c010b051:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b054	obj/kernel.asm	/^c010b054:	8b 00                	mov    (%eax),%eax$/;"	l
c010b056	obj/kernel.asm	/^c010b056:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b059	obj/kernel.asm	/^c010b059:	e8 75 3f 00 00       	call   c010efd3 <inode_ref_dec>$/;"	l
c010b05e	obj/kernel.asm	/^c010b05e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b061	obj/kernel.asm	/^c010b061:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b064	obj/kernel.asm	/^c010b064:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b067	obj/kernel.asm	/^c010b067:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b06e	obj/kernel.asm	/^c010b06e:	eb 4a                	jmp    c010b0ba <files_destroy+0xb1>$/;"	l
c010b070	obj/kernel.asm	/^c010b070:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b073	obj/kernel.asm	/^c010b073:	8b 00                	mov    (%eax),%eax$/;"	l
c010b075	obj/kernel.asm	/^c010b075:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b078	obj/kernel.asm	/^c010b078:	75 0b                	jne    c010b085 <files_destroy+0x7c>$/;"	l
c010b07a	obj/kernel.asm	/^c010b07a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b07d	obj/kernel.asm	/^c010b07d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b080	obj/kernel.asm	/^c010b080:	e8 17 f4 ff ff       	call   c010a49c <fd_array_close>$/;"	l
c010b085	obj/kernel.asm	/^c010b085:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b088	obj/kernel.asm	/^c010b088:	8b 00                	mov    (%eax),%eax$/;"	l
c010b08a	obj/kernel.asm	/^c010b08a:	85 c0                	test   %eax,%eax$/;"	l
c010b08c	obj/kernel.asm	/^c010b08c:	74 24                	je     c010b0b2 <files_destroy+0xa9>$/;"	l
c010b08e	obj/kernel.asm	/^c010b08e:	c7 44 24 0c f1 7c 11 	movl   $0xc0117cf1,0xc(%esp)$/;"	l
c010b095	obj/kernel.asm	/^c010b095:	c0 $/;"	l
c010b096	obj/kernel.asm	/^c010b096:	c7 44 24 08 cf 7c 11 	movl   $0xc0117ccf,0x8(%esp)$/;"	l
c010b09d	obj/kernel.asm	/^c010b09d:	c0 $/;"	l
c010b09e	obj/kernel.asm	/^c010b09e:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
c010b0a5	obj/kernel.asm	/^c010b0a5:	00 $/;"	l
c010b0a6	obj/kernel.asm	/^c010b0a6:	c7 04 24 e4 7c 11 c0 	movl   $0xc0117ce4,(%esp)$/;"	l
c010b0ad	obj/kernel.asm	/^c010b0ad:	e8 16 5e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b0b2	obj/kernel.asm	/^c010b0b2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b0b6	obj/kernel.asm	/^c010b0b6:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b0ba	obj/kernel.asm	/^c010b0ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b0bd	obj/kernel.asm	/^c010b0bd:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b0c2	obj/kernel.asm	/^c010b0c2:	76 ac                	jbe    c010b070 <files_destroy+0x67>$/;"	l
c010b0c4	obj/kernel.asm	/^c010b0c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0c7	obj/kernel.asm	/^c010b0c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b0ca	obj/kernel.asm	/^c010b0ca:	e8 e7 9b ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b0cf	obj/kernel.asm	/^c010b0cf:	c9                   	leave  $/;"	l
c010b0d0	obj/kernel.asm	/^c010b0d0:	c3                   	ret    $/;"	l
c010b0d1	obj/kernel.asm	/^c010b0d1 <files_closeall>:$/;"	l
c010b0d1	obj/kernel.asm	/^c010b0d1:	55                   	push   %ebp$/;"	l
c010b0d2	obj/kernel.asm	/^c010b0d2:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0d4	obj/kernel.asm	/^c010b0d4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b0d7	obj/kernel.asm	/^c010b0d7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b0db	obj/kernel.asm	/^c010b0db:	74 0f                	je     c010b0ec <files_closeall+0x1b>$/;"	l
c010b0dd	obj/kernel.asm	/^c010b0dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0e0	obj/kernel.asm	/^c010b0e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b0e3	obj/kernel.asm	/^c010b0e3:	e8 63 fe ff ff       	call   c010af4b <files_count>$/;"	l
c010b0e8	obj/kernel.asm	/^c010b0e8:	85 c0                	test   %eax,%eax$/;"	l
c010b0ea	obj/kernel.asm	/^c010b0ea:	7f 24                	jg     c010b110 <files_closeall+0x3f>$/;"	l
c010b0ec	obj/kernel.asm	/^c010b0ec:	c7 44 24 0c 0c 7d 11 	movl   $0xc0117d0c,0xc(%esp)$/;"	l
c010b0f3	obj/kernel.asm	/^c010b0f3:	c0 $/;"	l
c010b0f4	obj/kernel.asm	/^c010b0f4:	c7 44 24 08 cf 7c 11 	movl   $0xc0117ccf,0x8(%esp)$/;"	l
c010b0fb	obj/kernel.asm	/^c010b0fb:	c0 $/;"	l
c010b0fc	obj/kernel.asm	/^c010b0fc:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010b103	obj/kernel.asm	/^c010b103:	00 $/;"	l
c010b104	obj/kernel.asm	/^c010b104:	c7 04 24 e4 7c 11 c0 	movl   $0xc0117ce4,(%esp)$/;"	l
c010b10b	obj/kernel.asm	/^c010b10b:	e8 b8 5d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b110	obj/kernel.asm	/^c010b110:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b113	obj/kernel.asm	/^c010b113:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b116	obj/kernel.asm	/^c010b116:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b119	obj/kernel.asm	/^c010b119:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%ebp)$/;"	l
c010b120	obj/kernel.asm	/^c010b120:	83 45 f0 38          	addl   $0x38,-0x10(%ebp)$/;"	l
c010b124	obj/kernel.asm	/^c010b124:	eb 1d                	jmp    c010b143 <files_closeall+0x72>$/;"	l
c010b126	obj/kernel.asm	/^c010b126:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b129	obj/kernel.asm	/^c010b129:	8b 00                	mov    (%eax),%eax$/;"	l
c010b12b	obj/kernel.asm	/^c010b12b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b12e	obj/kernel.asm	/^c010b12e:	75 0b                	jne    c010b13b <files_closeall+0x6a>$/;"	l
c010b130	obj/kernel.asm	/^c010b130:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b133	obj/kernel.asm	/^c010b133:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b136	obj/kernel.asm	/^c010b136:	e8 61 f3 ff ff       	call   c010a49c <fd_array_close>$/;"	l
c010b13b	obj/kernel.asm	/^c010b13b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b13f	obj/kernel.asm	/^c010b13f:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b143	obj/kernel.asm	/^c010b143:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b146	obj/kernel.asm	/^c010b146:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b14b	obj/kernel.asm	/^c010b14b:	76 d9                	jbe    c010b126 <files_closeall+0x55>$/;"	l
c010b14d	obj/kernel.asm	/^c010b14d:	c9                   	leave  $/;"	l
c010b14e	obj/kernel.asm	/^c010b14e:	c3                   	ret    $/;"	l
c010b14f	obj/kernel.asm	/^c010b14f <dup_files>:$/;"	l
c010b14f	obj/kernel.asm	/^c010b14f:	55                   	push   %ebp$/;"	l
c010b150	obj/kernel.asm	/^c010b150:	89 e5                	mov    %esp,%ebp$/;"	l
c010b152	obj/kernel.asm	/^c010b152:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b155	obj/kernel.asm	/^c010b155:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b159	obj/kernel.asm	/^c010b159:	74 06                	je     c010b161 <dup_files+0x12>$/;"	l
c010b15b	obj/kernel.asm	/^c010b15b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b15f	obj/kernel.asm	/^c010b15f:	75 24                	jne    c010b185 <dup_files+0x36>$/;"	l
c010b161	obj/kernel.asm	/^c010b161:	c7 44 24 0c 36 7d 11 	movl   $0xc0117d36,0xc(%esp)$/;"	l
c010b168	obj/kernel.asm	/^c010b168:	c0 $/;"	l
c010b169	obj/kernel.asm	/^c010b169:	c7 44 24 08 cf 7c 11 	movl   $0xc0117ccf,0x8(%esp)$/;"	l
c010b170	obj/kernel.asm	/^c010b170:	c0 $/;"	l
c010b171	obj/kernel.asm	/^c010b171:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c010b178	obj/kernel.asm	/^c010b178:	00 $/;"	l
c010b179	obj/kernel.asm	/^c010b179:	c7 04 24 e4 7c 11 c0 	movl   $0xc0117ce4,(%esp)$/;"	l
c010b180	obj/kernel.asm	/^c010b180:	e8 43 5d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b185	obj/kernel.asm	/^c010b185:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b188	obj/kernel.asm	/^c010b188:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b18b	obj/kernel.asm	/^c010b18b:	e8 bb fd ff ff       	call   c010af4b <files_count>$/;"	l
c010b190	obj/kernel.asm	/^c010b190:	85 c0                	test   %eax,%eax$/;"	l
c010b192	obj/kernel.asm	/^c010b192:	75 0f                	jne    c010b1a3 <dup_files+0x54>$/;"	l
c010b194	obj/kernel.asm	/^c010b194:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b197	obj/kernel.asm	/^c010b197:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b19a	obj/kernel.asm	/^c010b19a:	e8 ac fd ff ff       	call   c010af4b <files_count>$/;"	l
c010b19f	obj/kernel.asm	/^c010b19f:	85 c0                	test   %eax,%eax$/;"	l
c010b1a1	obj/kernel.asm	/^c010b1a1:	7f 24                	jg     c010b1c7 <dup_files+0x78>$/;"	l
c010b1a3	obj/kernel.asm	/^c010b1a3:	c7 44 24 0c 54 7d 11 	movl   $0xc0117d54,0xc(%esp)$/;"	l
c010b1aa	obj/kernel.asm	/^c010b1aa:	c0 $/;"	l
c010b1ab	obj/kernel.asm	/^c010b1ab:	c7 44 24 08 cf 7c 11 	movl   $0xc0117ccf,0x8(%esp)$/;"	l
c010b1b2	obj/kernel.asm	/^c010b1b2:	c0 $/;"	l
c010b1b3	obj/kernel.asm	/^c010b1b3:	c7 44 24 04 54 00 00 	movl   $0x54,0x4(%esp)$/;"	l
c010b1ba	obj/kernel.asm	/^c010b1ba:	00 $/;"	l
c010b1bb	obj/kernel.asm	/^c010b1bb:	c7 04 24 e4 7c 11 c0 	movl   $0xc0117ce4,(%esp)$/;"	l
c010b1c2	obj/kernel.asm	/^c010b1c2:	e8 01 5d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b1c7	obj/kernel.asm	/^c010b1c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b1ca	obj/kernel.asm	/^c010b1ca:	8b 10                	mov    (%eax),%edx$/;"	l
c010b1cc	obj/kernel.asm	/^c010b1cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1cf	obj/kernel.asm	/^c010b1cf:	89 10                	mov    %edx,(%eax)$/;"	l
c010b1d1	obj/kernel.asm	/^c010b1d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1d4	obj/kernel.asm	/^c010b1d4:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1d6	obj/kernel.asm	/^c010b1d6:	85 c0                	test   %eax,%eax$/;"	l
c010b1d8	obj/kernel.asm	/^c010b1d8:	74 0d                	je     c010b1e7 <dup_files+0x98>$/;"	l
c010b1da	obj/kernel.asm	/^c010b1da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1dd	obj/kernel.asm	/^c010b1dd:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1df	obj/kernel.asm	/^c010b1df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b1e2	obj/kernel.asm	/^c010b1e2:	e8 d2 3d 00 00       	call   c010efb9 <inode_ref_inc>$/;"	l
c010b1e7	obj/kernel.asm	/^c010b1e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1ea	obj/kernel.asm	/^c010b1ea:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b1ed	obj/kernel.asm	/^c010b1ed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b1f0	obj/kernel.asm	/^c010b1f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b1f3	obj/kernel.asm	/^c010b1f3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b1f6	obj/kernel.asm	/^c010b1f6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b1f9	obj/kernel.asm	/^c010b1f9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b200	obj/kernel.asm	/^c010b200:	eb 31                	jmp    c010b233 <dup_files+0xe4>$/;"	l
c010b202	obj/kernel.asm	/^c010b202:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b205	obj/kernel.asm	/^c010b205:	8b 00                	mov    (%eax),%eax$/;"	l
c010b207	obj/kernel.asm	/^c010b207:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b20a	obj/kernel.asm	/^c010b20a:	75 1b                	jne    c010b227 <dup_files+0xd8>$/;"	l
c010b20c	obj/kernel.asm	/^c010b20c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b20f	obj/kernel.asm	/^c010b20f:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010b215	obj/kernel.asm	/^c010b215:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b218	obj/kernel.asm	/^c010b218:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b21c	obj/kernel.asm	/^c010b21c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b21f	obj/kernel.asm	/^c010b21f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b222	obj/kernel.asm	/^c010b222:	e8 01 f3 ff ff       	call   c010a528 <fd_array_dup>$/;"	l
c010b227	obj/kernel.asm	/^c010b227:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b22b	obj/kernel.asm	/^c010b22b:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b22f	obj/kernel.asm	/^c010b22f:	83 45 ec 1c          	addl   $0x1c,-0x14(%ebp)$/;"	l
c010b233	obj/kernel.asm	/^c010b233:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b236	obj/kernel.asm	/^c010b236:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b23b	obj/kernel.asm	/^c010b23b:	76 c5                	jbe    c010b202 <dup_files+0xb3>$/;"	l
c010b23d	obj/kernel.asm	/^c010b23d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b242	obj/kernel.asm	/^c010b242:	c9                   	leave  $/;"	l
c010b243	obj/kernel.asm	/^c010b243:	c3                   	ret    $/;"	l
c010b244	obj/kernel.asm	/^c010b244 <iobuf_init>:$/;"	l
c010b244	obj/kernel.asm	/^c010b244:	55                   	push   %ebp$/;"	l
c010b245	obj/kernel.asm	/^c010b245:	89 e5                	mov    %esp,%ebp$/;"	l
c010b247	obj/kernel.asm	/^c010b247:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b24a	obj/kernel.asm	/^c010b24a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b24d	obj/kernel.asm	/^c010b24d:	89 10                	mov    %edx,(%eax)$/;"	l
c010b24f	obj/kernel.asm	/^c010b24f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b252	obj/kernel.asm	/^c010b252:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010b255	obj/kernel.asm	/^c010b255:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b258	obj/kernel.asm	/^c010b258:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b25b	obj/kernel.asm	/^c010b25b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010b25e	obj/kernel.asm	/^c010b25e:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b261	obj/kernel.asm	/^c010b261:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b264	obj/kernel.asm	/^c010b264:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010b267	obj/kernel.asm	/^c010b267:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b26a	obj/kernel.asm	/^c010b26a:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b26d	obj/kernel.asm	/^c010b26d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b270	obj/kernel.asm	/^c010b270:	5d                   	pop    %ebp$/;"	l
c010b271	obj/kernel.asm	/^c010b271:	c3                   	ret    $/;"	l
c010b272	obj/kernel.asm	/^c010b272 <iobuf_move>:$/;"	l
c010b272	obj/kernel.asm	/^c010b272:	55                   	push   %ebp$/;"	l
c010b273	obj/kernel.asm	/^c010b273:	89 e5                	mov    %esp,%ebp$/;"	l
c010b275	obj/kernel.asm	/^c010b275:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b278	obj/kernel.asm	/^c010b278:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b27b	obj/kernel.asm	/^c010b27b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b27e	obj/kernel.asm	/^c010b27e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b281	obj/kernel.asm	/^c010b281:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b284	obj/kernel.asm	/^c010b284:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b287	obj/kernel.asm	/^c010b287:	76 06                	jbe    c010b28f <iobuf_move+0x1d>$/;"	l
c010b289	obj/kernel.asm	/^c010b289:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b28c	obj/kernel.asm	/^c010b28c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b28f	obj/kernel.asm	/^c010b28f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b293	obj/kernel.asm	/^c010b293:	74 57                	je     c010b2ec <iobuf_move+0x7a>$/;"	l
c010b295	obj/kernel.asm	/^c010b295:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b298	obj/kernel.asm	/^c010b298:	8b 00                	mov    (%eax),%eax$/;"	l
c010b29a	obj/kernel.asm	/^c010b29a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b29d	obj/kernel.asm	/^c010b29d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b2a0	obj/kernel.asm	/^c010b2a0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b2a3	obj/kernel.asm	/^c010b2a3:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010b2a7	obj/kernel.asm	/^c010b2a7:	74 12                	je     c010b2bb <iobuf_move+0x49>$/;"	l
c010b2a9	obj/kernel.asm	/^c010b2a9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b2ac	obj/kernel.asm	/^c010b2ac:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b2af	obj/kernel.asm	/^c010b2af:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b2b2	obj/kernel.asm	/^c010b2b2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b2b5	obj/kernel.asm	/^c010b2b5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b2b8	obj/kernel.asm	/^c010b2b8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b2bb	obj/kernel.asm	/^c010b2bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b2be	obj/kernel.asm	/^c010b2be:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b2c2	obj/kernel.asm	/^c010b2c2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b2c5	obj/kernel.asm	/^c010b2c5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b2c9	obj/kernel.asm	/^c010b2c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b2cc	obj/kernel.asm	/^c010b2cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b2cf	obj/kernel.asm	/^c010b2cf:	e8 84 a1 00 00       	call   c0115458 <memmove>$/;"	l
c010b2d4	obj/kernel.asm	/^c010b2d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b2d7	obj/kernel.asm	/^c010b2d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b2db	obj/kernel.asm	/^c010b2db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2de	obj/kernel.asm	/^c010b2de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b2e1	obj/kernel.asm	/^c010b2e1:	e8 a1 00 00 00       	call   c010b387 <iobuf_skip>$/;"	l
c010b2e6	obj/kernel.asm	/^c010b2e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b2e9	obj/kernel.asm	/^c010b2e9:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010b2ec	obj/kernel.asm	/^c010b2ec:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010b2f0	obj/kernel.asm	/^c010b2f0:	74 08                	je     c010b2fa <iobuf_move+0x88>$/;"	l
c010b2f2	obj/kernel.asm	/^c010b2f2:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b2f5	obj/kernel.asm	/^c010b2f5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b2f8	obj/kernel.asm	/^c010b2f8:	89 10                	mov    %edx,(%eax)$/;"	l
c010b2fa	obj/kernel.asm	/^c010b2fa:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b2fe	obj/kernel.asm	/^c010b2fe:	75 07                	jne    c010b307 <iobuf_move+0x95>$/;"	l
c010b300	obj/kernel.asm	/^c010b300:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b305	obj/kernel.asm	/^c010b305:	eb 05                	jmp    c010b30c <iobuf_move+0x9a>$/;"	l
c010b307	obj/kernel.asm	/^c010b307:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b30c	obj/kernel.asm	/^c010b30c:	c9                   	leave  $/;"	l
c010b30d	obj/kernel.asm	/^c010b30d:	c3                   	ret    $/;"	l
c010b30e	obj/kernel.asm	/^c010b30e <iobuf_move_zeros>:$/;"	l
c010b30e	obj/kernel.asm	/^c010b30e:	55                   	push   %ebp$/;"	l
c010b30f	obj/kernel.asm	/^c010b30f:	89 e5                	mov    %esp,%ebp$/;"	l
c010b311	obj/kernel.asm	/^c010b311:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b314	obj/kernel.asm	/^c010b314:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b317	obj/kernel.asm	/^c010b317:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b31a	obj/kernel.asm	/^c010b31a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b31d	obj/kernel.asm	/^c010b31d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b320	obj/kernel.asm	/^c010b320:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010b323	obj/kernel.asm	/^c010b323:	76 06                	jbe    c010b32b <iobuf_move_zeros+0x1d>$/;"	l
c010b325	obj/kernel.asm	/^c010b325:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b328	obj/kernel.asm	/^c010b328:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b32b	obj/kernel.asm	/^c010b32b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b32f	obj/kernel.asm	/^c010b32f:	74 34                	je     c010b365 <iobuf_move_zeros+0x57>$/;"	l
c010b331	obj/kernel.asm	/^c010b331:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b334	obj/kernel.asm	/^c010b334:	8b 00                	mov    (%eax),%eax$/;"	l
c010b336	obj/kernel.asm	/^c010b336:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b339	obj/kernel.asm	/^c010b339:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010b33d	obj/kernel.asm	/^c010b33d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010b344	obj/kernel.asm	/^c010b344:	00 $/;"	l
c010b345	obj/kernel.asm	/^c010b345:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b348	obj/kernel.asm	/^c010b348:	e8 cc a0 00 00       	call   c0115419 <memset>$/;"	l
c010b34d	obj/kernel.asm	/^c010b34d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b350	obj/kernel.asm	/^c010b350:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b354	obj/kernel.asm	/^c010b354:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b357	obj/kernel.asm	/^c010b357:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b35a	obj/kernel.asm	/^c010b35a:	e8 28 00 00 00       	call   c010b387 <iobuf_skip>$/;"	l
c010b35f	obj/kernel.asm	/^c010b35f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b362	obj/kernel.asm	/^c010b362:	29 45 0c             	sub    %eax,0xc(%ebp)$/;"	l
c010b365	obj/kernel.asm	/^c010b365:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b369	obj/kernel.asm	/^c010b369:	74 08                	je     c010b373 <iobuf_move_zeros+0x65>$/;"	l
c010b36b	obj/kernel.asm	/^c010b36b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b36e	obj/kernel.asm	/^c010b36e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b371	obj/kernel.asm	/^c010b371:	89 10                	mov    %edx,(%eax)$/;"	l
c010b373	obj/kernel.asm	/^c010b373:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b377	obj/kernel.asm	/^c010b377:	75 07                	jne    c010b380 <iobuf_move_zeros+0x72>$/;"	l
c010b379	obj/kernel.asm	/^c010b379:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b37e	obj/kernel.asm	/^c010b37e:	eb 05                	jmp    c010b385 <iobuf_move_zeros+0x77>$/;"	l
c010b380	obj/kernel.asm	/^c010b380:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b385	obj/kernel.asm	/^c010b385:	c9                   	leave  $/;"	l
c010b386	obj/kernel.asm	/^c010b386:	c3                   	ret    $/;"	l
c010b387	obj/kernel.asm	/^c010b387 <iobuf_skip>:$/;"	l
c010b387	obj/kernel.asm	/^c010b387:	55                   	push   %ebp$/;"	l
c010b388	obj/kernel.asm	/^c010b388:	89 e5                	mov    %esp,%ebp$/;"	l
c010b38a	obj/kernel.asm	/^c010b38a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b38d	obj/kernel.asm	/^c010b38d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b390	obj/kernel.asm	/^c010b390:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b393	obj/kernel.asm	/^c010b393:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010b396	obj/kernel.asm	/^c010b396:	73 24                	jae    c010b3bc <iobuf_skip+0x35>$/;"	l
c010b398	obj/kernel.asm	/^c010b398:	c7 44 24 0c 82 7d 11 	movl   $0xc0117d82,0xc(%esp)$/;"	l
c010b39f	obj/kernel.asm	/^c010b39f:	c0 $/;"	l
c010b3a0	obj/kernel.asm	/^c010b3a0:	c7 44 24 08 95 7d 11 	movl   $0xc0117d95,0x8(%esp)$/;"	l
c010b3a7	obj/kernel.asm	/^c010b3a7:	c0 $/;"	l
c010b3a8	obj/kernel.asm	/^c010b3a8:	c7 44 24 04 4a 00 00 	movl   $0x4a,0x4(%esp)$/;"	l
c010b3af	obj/kernel.asm	/^c010b3af:	00 $/;"	l
c010b3b0	obj/kernel.asm	/^c010b3b0:	c7 04 24 aa 7d 11 c0 	movl   $0xc0117daa,(%esp)$/;"	l
c010b3b7	obj/kernel.asm	/^c010b3b7:	e8 0c 5b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b3bc	obj/kernel.asm	/^c010b3bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3bf	obj/kernel.asm	/^c010b3bf:	8b 10                	mov    (%eax),%edx$/;"	l
c010b3c1	obj/kernel.asm	/^c010b3c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b3c4	obj/kernel.asm	/^c010b3c4:	01 c2                	add    %eax,%edx$/;"	l
c010b3c6	obj/kernel.asm	/^c010b3c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3c9	obj/kernel.asm	/^c010b3c9:	89 10                	mov    %edx,(%eax)$/;"	l
c010b3cb	obj/kernel.asm	/^c010b3cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3ce	obj/kernel.asm	/^c010b3ce:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b3d1	obj/kernel.asm	/^c010b3d1:	89 c2                	mov    %eax,%edx$/;"	l
c010b3d3	obj/kernel.asm	/^c010b3d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b3d6	obj/kernel.asm	/^c010b3d6:	01 d0                	add    %edx,%eax$/;"	l
c010b3d8	obj/kernel.asm	/^c010b3d8:	89 c2                	mov    %eax,%edx$/;"	l
c010b3da	obj/kernel.asm	/^c010b3da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3dd	obj/kernel.asm	/^c010b3dd:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b3e0	obj/kernel.asm	/^c010b3e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3e3	obj/kernel.asm	/^c010b3e3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b3e6	obj/kernel.asm	/^c010b3e6:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010b3e9	obj/kernel.asm	/^c010b3e9:	89 c2                	mov    %eax,%edx$/;"	l
c010b3eb	obj/kernel.asm	/^c010b3eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3ee	obj/kernel.asm	/^c010b3ee:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b3f1	obj/kernel.asm	/^c010b3f1:	c9                   	leave  $/;"	l
c010b3f2	obj/kernel.asm	/^c010b3f2:	c3                   	ret    $/;"	l
c010b3f3	obj/kernel.asm	/^c010b3f3 <lock_mm>:$/;"	l
c010b3f3	obj/kernel.asm	/^c010b3f3:	55                   	push   %ebp$/;"	l
c010b3f4	obj/kernel.asm	/^c010b3f4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b3f6	obj/kernel.asm	/^c010b3f6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b3f9	obj/kernel.asm	/^c010b3f9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b3fd	obj/kernel.asm	/^c010b3fd:	74 25                	je     c010b424 <lock_mm+0x31>$/;"	l
c010b3ff	obj/kernel.asm	/^c010b3ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b402	obj/kernel.asm	/^c010b402:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b405	obj/kernel.asm	/^c010b405:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b408	obj/kernel.asm	/^c010b408:	e8 f0 e7 ff ff       	call   c0109bfd <down>$/;"	l
c010b40d	obj/kernel.asm	/^c010b40d:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010b412	obj/kernel.asm	/^c010b412:	85 c0                	test   %eax,%eax$/;"	l
c010b414	obj/kernel.asm	/^c010b414:	74 0e                	je     c010b424 <lock_mm+0x31>$/;"	l
c010b416	obj/kernel.asm	/^c010b416:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010b41b	obj/kernel.asm	/^c010b41b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b41e	obj/kernel.asm	/^c010b41e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b421	obj/kernel.asm	/^c010b421:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c010b424	obj/kernel.asm	/^c010b424:	c9                   	leave  $/;"	l
c010b425	obj/kernel.asm	/^c010b425:	c3                   	ret    $/;"	l
c010b426	obj/kernel.asm	/^c010b426 <unlock_mm>:$/;"	l
c010b426	obj/kernel.asm	/^c010b426:	55                   	push   %ebp$/;"	l
c010b427	obj/kernel.asm	/^c010b427:	89 e5                	mov    %esp,%ebp$/;"	l
c010b429	obj/kernel.asm	/^c010b429:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b42c	obj/kernel.asm	/^c010b42c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b430	obj/kernel.asm	/^c010b430:	74 18                	je     c010b44a <unlock_mm+0x24>$/;"	l
c010b432	obj/kernel.asm	/^c010b432:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b435	obj/kernel.asm	/^c010b435:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b438	obj/kernel.asm	/^c010b438:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b43b	obj/kernel.asm	/^c010b43b:	e8 a2 e7 ff ff       	call   c0109be2 <up>$/;"	l
c010b440	obj/kernel.asm	/^c010b440:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b443	obj/kernel.asm	/^c010b443:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c010b44a	obj/kernel.asm	/^c010b44a:	c9                   	leave  $/;"	l
c010b44b	obj/kernel.asm	/^c010b44b:	c3                   	ret    $/;"	l
c010b44c	obj/kernel.asm	/^c010b44c <copy_path>:$/;"	l
c010b44c	obj/kernel.asm	/^c010b44c:	55                   	push   %ebp$/;"	l
c010b44d	obj/kernel.asm	/^c010b44d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b44f	obj/kernel.asm	/^c010b44f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b452	obj/kernel.asm	/^c010b452:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010b457	obj/kernel.asm	/^c010b457:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b45a	obj/kernel.asm	/^c010b45a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b45d	obj/kernel.asm	/^c010b45d:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b464	obj/kernel.asm	/^c010b464:	e8 32 98 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010b469	obj/kernel.asm	/^c010b469:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b46c	obj/kernel.asm	/^c010b46c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b470	obj/kernel.asm	/^c010b470:	75 07                	jne    c010b479 <copy_path+0x2d>$/;"	l
c010b472	obj/kernel.asm	/^c010b472:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b477	obj/kernel.asm	/^c010b477:	eb 66                	jmp    c010b4df <copy_path+0x93>$/;"	l
c010b479	obj/kernel.asm	/^c010b479:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b47c	obj/kernel.asm	/^c010b47c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b47f	obj/kernel.asm	/^c010b47f:	e8 6f ff ff ff       	call   c010b3f3 <lock_mm>$/;"	l
c010b484	obj/kernel.asm	/^c010b484:	c7 44 24 0c 00 10 00 	movl   $0x1000,0xc(%esp)$/;"	l
c010b48b	obj/kernel.asm	/^c010b48b:	00 $/;"	l
c010b48c	obj/kernel.asm	/^c010b48c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b48f	obj/kernel.asm	/^c010b48f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b493	obj/kernel.asm	/^c010b493:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b496	obj/kernel.asm	/^c010b496:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b49a	obj/kernel.asm	/^c010b49a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b49d	obj/kernel.asm	/^c010b49d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4a0	obj/kernel.asm	/^c010b4a0:	e8 cb db ff ff       	call   c0109070 <copy_string>$/;"	l
c010b4a5	obj/kernel.asm	/^c010b4a5:	85 c0                	test   %eax,%eax$/;"	l
c010b4a7	obj/kernel.asm	/^c010b4a7:	75 1e                	jne    c010b4c7 <copy_path+0x7b>$/;"	l
c010b4a9	obj/kernel.asm	/^c010b4a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4ac	obj/kernel.asm	/^c010b4ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4af	obj/kernel.asm	/^c010b4af:	e8 72 ff ff ff       	call   c010b426 <unlock_mm>$/;"	l
c010b4b4	obj/kernel.asm	/^c010b4b4:	90                   	nop$/;"	l
c010b4b5	obj/kernel.asm	/^c010b4b5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b4b8	obj/kernel.asm	/^c010b4b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4bb	obj/kernel.asm	/^c010b4bb:	e8 f6 97 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b4c0	obj/kernel.asm	/^c010b4c0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b4c5	obj/kernel.asm	/^c010b4c5:	eb 18                	jmp    c010b4df <copy_path+0x93>$/;"	l
c010b4c7	obj/kernel.asm	/^c010b4c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4ca	obj/kernel.asm	/^c010b4ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4cd	obj/kernel.asm	/^c010b4cd:	e8 54 ff ff ff       	call   c010b426 <unlock_mm>$/;"	l
c010b4d2	obj/kernel.asm	/^c010b4d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4d5	obj/kernel.asm	/^c010b4d5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b4d8	obj/kernel.asm	/^c010b4d8:	89 10                	mov    %edx,(%eax)$/;"	l
c010b4da	obj/kernel.asm	/^c010b4da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b4df	obj/kernel.asm	/^c010b4df:	c9                   	leave  $/;"	l
c010b4e0	obj/kernel.asm	/^c010b4e0:	c3                   	ret    $/;"	l
c010b4e1	obj/kernel.asm	/^c010b4e1 <sysfile_open>:$/;"	l
c010b4e1	obj/kernel.asm	/^c010b4e1:	55                   	push   %ebp$/;"	l
c010b4e2	obj/kernel.asm	/^c010b4e2:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4e4	obj/kernel.asm	/^c010b4e4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b4e7	obj/kernel.asm	/^c010b4e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4ea	obj/kernel.asm	/^c010b4ea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b4ee	obj/kernel.asm	/^c010b4ee:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b4f1	obj/kernel.asm	/^c010b4f1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4f4	obj/kernel.asm	/^c010b4f4:	e8 53 ff ff ff       	call   c010b44c <copy_path>$/;"	l
c010b4f9	obj/kernel.asm	/^c010b4f9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b4fc	obj/kernel.asm	/^c010b4fc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b500	obj/kernel.asm	/^c010b500:	74 05                	je     c010b507 <sysfile_open+0x26>$/;"	l
c010b502	obj/kernel.asm	/^c010b502:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b505	obj/kernel.asm	/^c010b505:	eb 23                	jmp    c010b52a <sysfile_open+0x49>$/;"	l
c010b507	obj/kernel.asm	/^c010b507:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b50a	obj/kernel.asm	/^c010b50a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b50d	obj/kernel.asm	/^c010b50d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b511	obj/kernel.asm	/^c010b511:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b514	obj/kernel.asm	/^c010b514:	e8 61 f1 ff ff       	call   c010a67a <file_open>$/;"	l
c010b519	obj/kernel.asm	/^c010b519:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b51c	obj/kernel.asm	/^c010b51c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b51f	obj/kernel.asm	/^c010b51f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b522	obj/kernel.asm	/^c010b522:	e8 8f 97 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b527	obj/kernel.asm	/^c010b527:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b52a	obj/kernel.asm	/^c010b52a:	c9                   	leave  $/;"	l
c010b52b	obj/kernel.asm	/^c010b52b:	c3                   	ret    $/;"	l
c010b52c	obj/kernel.asm	/^c010b52c <sysfile_close>:$/;"	l
c010b52c	obj/kernel.asm	/^c010b52c:	55                   	push   %ebp$/;"	l
c010b52d	obj/kernel.asm	/^c010b52d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b52f	obj/kernel.asm	/^c010b52f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b532	obj/kernel.asm	/^c010b532:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b535	obj/kernel.asm	/^c010b535:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b538	obj/kernel.asm	/^c010b538:	e8 da f2 ff ff       	call   c010a817 <file_close>$/;"	l
c010b53d	obj/kernel.asm	/^c010b53d:	c9                   	leave  $/;"	l
c010b53e	obj/kernel.asm	/^c010b53e:	c3                   	ret    $/;"	l
c010b53f	obj/kernel.asm	/^c010b53f <sysfile_read>:$/;"	l
c010b53f	obj/kernel.asm	/^c010b53f:	55                   	push   %ebp$/;"	l
c010b540	obj/kernel.asm	/^c010b540:	89 e5                	mov    %esp,%ebp$/;"	l
c010b542	obj/kernel.asm	/^c010b542:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b545	obj/kernel.asm	/^c010b545:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010b54a	obj/kernel.asm	/^c010b54a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b54d	obj/kernel.asm	/^c010b54d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b550	obj/kernel.asm	/^c010b550:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b554	obj/kernel.asm	/^c010b554:	75 0a                	jne    c010b560 <sysfile_read+0x21>$/;"	l
c010b556	obj/kernel.asm	/^c010b556:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b55b	obj/kernel.asm	/^c010b55b:	e9 55 01 00 00       	jmp    c010b6b5 <sysfile_read+0x176>$/;"	l
c010b560	obj/kernel.asm	/^c010b560:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010b567	obj/kernel.asm	/^c010b567:	00 $/;"	l
c010b568	obj/kernel.asm	/^c010b568:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010b56f	obj/kernel.asm	/^c010b56f:	00 $/;"	l
c010b570	obj/kernel.asm	/^c010b570:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b573	obj/kernel.asm	/^c010b573:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b576	obj/kernel.asm	/^c010b576:	e8 a2 f0 ff ff       	call   c010a61d <file_testfd>$/;"	l
c010b57b	obj/kernel.asm	/^c010b57b:	85 c0                	test   %eax,%eax$/;"	l
c010b57d	obj/kernel.asm	/^c010b57d:	75 0a                	jne    c010b589 <sysfile_read+0x4a>$/;"	l
c010b57f	obj/kernel.asm	/^c010b57f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b584	obj/kernel.asm	/^c010b584:	e9 2c 01 00 00       	jmp    c010b6b5 <sysfile_read+0x176>$/;"	l
c010b589	obj/kernel.asm	/^c010b589:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b590	obj/kernel.asm	/^c010b590:	e8 06 97 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010b595	obj/kernel.asm	/^c010b595:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b598	obj/kernel.asm	/^c010b598:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b59c	obj/kernel.asm	/^c010b59c:	75 0a                	jne    c010b5a8 <sysfile_read+0x69>$/;"	l
c010b59e	obj/kernel.asm	/^c010b59e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b5a3	obj/kernel.asm	/^c010b5a3:	e9 0d 01 00 00       	jmp    c010b6b5 <sysfile_read+0x176>$/;"	l
c010b5a8	obj/kernel.asm	/^c010b5a8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b5af	obj/kernel.asm	/^c010b5af:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010b5b6	obj/kernel.asm	/^c010b5b6:	e9 d7 00 00 00       	jmp    c010b692 <sysfile_read+0x153>$/;"	l
c010b5bb	obj/kernel.asm	/^c010b5bb:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c010b5c2	obj/kernel.asm	/^c010b5c2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b5c5	obj/kernel.asm	/^c010b5c5:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b5c8	obj/kernel.asm	/^c010b5c8:	76 06                	jbe    c010b5d0 <sysfile_read+0x91>$/;"	l
c010b5ca	obj/kernel.asm	/^c010b5ca:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b5cd	obj/kernel.asm	/^c010b5cd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b5d0	obj/kernel.asm	/^c010b5d0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b5d3	obj/kernel.asm	/^c010b5d3:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c010b5d6	obj/kernel.asm	/^c010b5d6:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b5da	obj/kernel.asm	/^c010b5da:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b5de	obj/kernel.asm	/^c010b5de:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b5e1	obj/kernel.asm	/^c010b5e1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b5e5	obj/kernel.asm	/^c010b5e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5e8	obj/kernel.asm	/^c010b5e8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5eb	obj/kernel.asm	/^c010b5eb:	e8 5f f2 ff ff       	call   c010a84f <file_read>$/;"	l
c010b5f0	obj/kernel.asm	/^c010b5f0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b5f3	obj/kernel.asm	/^c010b5f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b5f6	obj/kernel.asm	/^c010b5f6:	85 c0                	test   %eax,%eax$/;"	l
c010b5f8	obj/kernel.asm	/^c010b5f8:	0f 84 87 00 00 00    	je     c010b685 <sysfile_read+0x146>$/;"	l
c010b5fe	obj/kernel.asm	/^c010b5fe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b601	obj/kernel.asm	/^c010b601:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b604	obj/kernel.asm	/^c010b604:	e8 ea fd ff ff       	call   c010b3f3 <lock_mm>$/;"	l
c010b609	obj/kernel.asm	/^c010b609:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b60c	obj/kernel.asm	/^c010b60c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b610	obj/kernel.asm	/^c010b610:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b613	obj/kernel.asm	/^c010b613:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b617	obj/kernel.asm	/^c010b617:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b61a	obj/kernel.asm	/^c010b61a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b61e	obj/kernel.asm	/^c010b61e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b621	obj/kernel.asm	/^c010b621:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b624	obj/kernel.asm	/^c010b624:	e8 f8 cf ff ff       	call   c0108621 <copy_to_user>$/;"	l
c010b629	obj/kernel.asm	/^c010b629:	85 c0                	test   %eax,%eax$/;"	l
c010b62b	obj/kernel.asm	/^c010b62b:	74 40                	je     c010b66d <sysfile_read+0x12e>$/;"	l
c010b62d	obj/kernel.asm	/^c010b62d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b630	obj/kernel.asm	/^c010b630:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c010b633	obj/kernel.asm	/^c010b633:	73 24                	jae    c010b659 <sysfile_read+0x11a>$/;"	l
c010b635	obj/kernel.asm	/^c010b635:	c7 44 24 0c ba 7d 11 	movl   $0xc0117dba,0xc(%esp)$/;"	l
c010b63c	obj/kernel.asm	/^c010b63c:	c0 $/;"	l
c010b63d	obj/kernel.asm	/^c010b63d:	c7 44 24 08 c6 7d 11 	movl   $0xc0117dc6,0x8(%esp)$/;"	l
c010b644	obj/kernel.asm	/^c010b644:	c0 $/;"	l
c010b645	obj/kernel.asm	/^c010b645:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c010b64c	obj/kernel.asm	/^c010b64c:	00 $/;"	l
c010b64d	obj/kernel.asm	/^c010b64d:	c7 04 24 db 7d 11 c0 	movl   $0xc0117ddb,(%esp)$/;"	l
c010b654	obj/kernel.asm	/^c010b654:	e8 6f 58 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b659	obj/kernel.asm	/^c010b659:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b65c	obj/kernel.asm	/^c010b65c:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010b65f	obj/kernel.asm	/^c010b65f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b662	obj/kernel.asm	/^c010b662:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010b665	obj/kernel.asm	/^c010b665:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b668	obj/kernel.asm	/^c010b668:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c010b66b	obj/kernel.asm	/^c010b66b:	eb 0d                	jmp    c010b67a <sysfile_read+0x13b>$/;"	l
c010b66d	obj/kernel.asm	/^c010b66d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b671	obj/kernel.asm	/^c010b671:	75 07                	jne    c010b67a <sysfile_read+0x13b>$/;"	l
c010b673	obj/kernel.asm	/^c010b673:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b67a	obj/kernel.asm	/^c010b67a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b67d	obj/kernel.asm	/^c010b67d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b680	obj/kernel.asm	/^c010b680:	e8 a1 fd ff ff       	call   c010b426 <unlock_mm>$/;"	l
c010b685	obj/kernel.asm	/^c010b685:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b689	obj/kernel.asm	/^c010b689:	75 11                	jne    c010b69c <sysfile_read+0x15d>$/;"	l
c010b68b	obj/kernel.asm	/^c010b68b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b68e	obj/kernel.asm	/^c010b68e:	85 c0                	test   %eax,%eax$/;"	l
c010b690	obj/kernel.asm	/^c010b690:	74 0a                	je     c010b69c <sysfile_read+0x15d>$/;"	l
c010b692	obj/kernel.asm	/^c010b692:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b696	obj/kernel.asm	/^c010b696:	0f 85 1f ff ff ff    	jne    c010b5bb <sysfile_read+0x7c>$/;"	l
c010b69c	obj/kernel.asm	/^c010b69c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b69f	obj/kernel.asm	/^c010b69f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6a2	obj/kernel.asm	/^c010b6a2:	e8 0f 96 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b6a7	obj/kernel.asm	/^c010b6a7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b6ab	obj/kernel.asm	/^c010b6ab:	74 05                	je     c010b6b2 <sysfile_read+0x173>$/;"	l
c010b6ad	obj/kernel.asm	/^c010b6ad:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b6b0	obj/kernel.asm	/^c010b6b0:	eb 03                	jmp    c010b6b5 <sysfile_read+0x176>$/;"	l
c010b6b2	obj/kernel.asm	/^c010b6b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6b5	obj/kernel.asm	/^c010b6b5:	c9                   	leave  $/;"	l
c010b6b6	obj/kernel.asm	/^c010b6b6:	c3                   	ret    $/;"	l
c010b6b7	obj/kernel.asm	/^c010b6b7 <sysfile_write>:$/;"	l
c010b6b7	obj/kernel.asm	/^c010b6b7:	55                   	push   %ebp$/;"	l
c010b6b8	obj/kernel.asm	/^c010b6b8:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6ba	obj/kernel.asm	/^c010b6ba:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010b6bd	obj/kernel.asm	/^c010b6bd:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010b6c2	obj/kernel.asm	/^c010b6c2:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b6c5	obj/kernel.asm	/^c010b6c5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b6c8	obj/kernel.asm	/^c010b6c8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b6cc	obj/kernel.asm	/^c010b6cc:	75 0a                	jne    c010b6d8 <sysfile_write+0x21>$/;"	l
c010b6ce	obj/kernel.asm	/^c010b6ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b6d3	obj/kernel.asm	/^c010b6d3:	e9 57 01 00 00       	jmp    c010b82f <sysfile_write+0x178>$/;"	l
c010b6d8	obj/kernel.asm	/^c010b6d8:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c010b6df	obj/kernel.asm	/^c010b6df:	00 $/;"	l
c010b6e0	obj/kernel.asm	/^c010b6e0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010b6e7	obj/kernel.asm	/^c010b6e7:	00 $/;"	l
c010b6e8	obj/kernel.asm	/^c010b6e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6eb	obj/kernel.asm	/^c010b6eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6ee	obj/kernel.asm	/^c010b6ee:	e8 2a ef ff ff       	call   c010a61d <file_testfd>$/;"	l
c010b6f3	obj/kernel.asm	/^c010b6f3:	85 c0                	test   %eax,%eax$/;"	l
c010b6f5	obj/kernel.asm	/^c010b6f5:	75 0a                	jne    c010b701 <sysfile_write+0x4a>$/;"	l
c010b6f7	obj/kernel.asm	/^c010b6f7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b6fc	obj/kernel.asm	/^c010b6fc:	e9 2e 01 00 00       	jmp    c010b82f <sysfile_write+0x178>$/;"	l
c010b701	obj/kernel.asm	/^c010b701:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b708	obj/kernel.asm	/^c010b708:	e8 8e 95 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010b70d	obj/kernel.asm	/^c010b70d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b710	obj/kernel.asm	/^c010b710:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b714	obj/kernel.asm	/^c010b714:	75 0a                	jne    c010b720 <sysfile_write+0x69>$/;"	l
c010b716	obj/kernel.asm	/^c010b716:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b71b	obj/kernel.asm	/^c010b71b:	e9 0f 01 00 00       	jmp    c010b82f <sysfile_write+0x178>$/;"	l
c010b720	obj/kernel.asm	/^c010b720:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b727	obj/kernel.asm	/^c010b727:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010b72e	obj/kernel.asm	/^c010b72e:	e9 d9 00 00 00       	jmp    c010b80c <sysfile_write+0x155>$/;"	l
c010b733	obj/kernel.asm	/^c010b733:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c010b73a	obj/kernel.asm	/^c010b73a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b73d	obj/kernel.asm	/^c010b73d:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b740	obj/kernel.asm	/^c010b740:	76 06                	jbe    c010b748 <sysfile_write+0x91>$/;"	l
c010b742	obj/kernel.asm	/^c010b742:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b745	obj/kernel.asm	/^c010b745:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b748	obj/kernel.asm	/^c010b748:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b74b	obj/kernel.asm	/^c010b74b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b74e	obj/kernel.asm	/^c010b74e:	e8 a0 fc ff ff       	call   c010b3f3 <lock_mm>$/;"	l
c010b753	obj/kernel.asm	/^c010b753:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b756	obj/kernel.asm	/^c010b756:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010b75d	obj/kernel.asm	/^c010b75d:	00 $/;"	l
c010b75e	obj/kernel.asm	/^c010b75e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b762	obj/kernel.asm	/^c010b762:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b765	obj/kernel.asm	/^c010b765:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b769	obj/kernel.asm	/^c010b769:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b76c	obj/kernel.asm	/^c010b76c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b770	obj/kernel.asm	/^c010b770:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b773	obj/kernel.asm	/^c010b773:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b776	obj/kernel.asm	/^c010b776:	e8 55 ce ff ff       	call   c01085d0 <copy_from_user>$/;"	l
c010b77b	obj/kernel.asm	/^c010b77b:	85 c0                	test   %eax,%eax$/;"	l
c010b77d	obj/kernel.asm	/^c010b77d:	75 07                	jne    c010b786 <sysfile_write+0xcf>$/;"	l
c010b77f	obj/kernel.asm	/^c010b77f:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b786	obj/kernel.asm	/^c010b786:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b789	obj/kernel.asm	/^c010b789:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b78c	obj/kernel.asm	/^c010b78c:	e8 95 fc ff ff       	call   c010b426 <unlock_mm>$/;"	l
c010b791	obj/kernel.asm	/^c010b791:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b795	obj/kernel.asm	/^c010b795:	75 68                	jne    c010b7ff <sysfile_write+0x148>$/;"	l
c010b797	obj/kernel.asm	/^c010b797:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b79a	obj/kernel.asm	/^c010b79a:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c010b79d	obj/kernel.asm	/^c010b79d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b7a1	obj/kernel.asm	/^c010b7a1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b7a5	obj/kernel.asm	/^c010b7a5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b7a8	obj/kernel.asm	/^c010b7a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b7ac	obj/kernel.asm	/^c010b7ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7af	obj/kernel.asm	/^c010b7af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b7b2	obj/kernel.asm	/^c010b7b2:	e8 d2 f1 ff ff       	call   c010a989 <file_write>$/;"	l
c010b7b7	obj/kernel.asm	/^c010b7b7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b7ba	obj/kernel.asm	/^c010b7ba:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b7bd	obj/kernel.asm	/^c010b7bd:	85 c0                	test   %eax,%eax$/;"	l
c010b7bf	obj/kernel.asm	/^c010b7bf:	74 3e                	je     c010b7ff <sysfile_write+0x148>$/;"	l
c010b7c1	obj/kernel.asm	/^c010b7c1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b7c4	obj/kernel.asm	/^c010b7c4:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c010b7c7	obj/kernel.asm	/^c010b7c7:	73 24                	jae    c010b7ed <sysfile_write+0x136>$/;"	l
c010b7c9	obj/kernel.asm	/^c010b7c9:	c7 44 24 0c ba 7d 11 	movl   $0xc0117dba,0xc(%esp)$/;"	l
c010b7d0	obj/kernel.asm	/^c010b7d0:	c0 $/;"	l
c010b7d1	obj/kernel.asm	/^c010b7d1:	c7 44 24 08 c6 7d 11 	movl   $0xc0117dc6,0x8(%esp)$/;"	l
c010b7d8	obj/kernel.asm	/^c010b7d8:	c0 $/;"	l
c010b7d9	obj/kernel.asm	/^c010b7d9:	c7 44 24 04 8a 00 00 	movl   $0x8a,0x4(%esp)$/;"	l
c010b7e0	obj/kernel.asm	/^c010b7e0:	00 $/;"	l
c010b7e1	obj/kernel.asm	/^c010b7e1:	c7 04 24 db 7d 11 c0 	movl   $0xc0117ddb,(%esp)$/;"	l
c010b7e8	obj/kernel.asm	/^c010b7e8:	e8 db 56 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010b7ed	obj/kernel.asm	/^c010b7ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b7f0	obj/kernel.asm	/^c010b7f0:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010b7f3	obj/kernel.asm	/^c010b7f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b7f6	obj/kernel.asm	/^c010b7f6:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010b7f9	obj/kernel.asm	/^c010b7f9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b7fc	obj/kernel.asm	/^c010b7fc:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c010b7ff	obj/kernel.asm	/^c010b7ff:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b803	obj/kernel.asm	/^c010b803:	75 11                	jne    c010b816 <sysfile_write+0x15f>$/;"	l
c010b805	obj/kernel.asm	/^c010b805:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b808	obj/kernel.asm	/^c010b808:	85 c0                	test   %eax,%eax$/;"	l
c010b80a	obj/kernel.asm	/^c010b80a:	74 0a                	je     c010b816 <sysfile_write+0x15f>$/;"	l
c010b80c	obj/kernel.asm	/^c010b80c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b810	obj/kernel.asm	/^c010b810:	0f 85 1d ff ff ff    	jne    c010b733 <sysfile_write+0x7c>$/;"	l
c010b816	obj/kernel.asm	/^c010b816:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b819	obj/kernel.asm	/^c010b819:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b81c	obj/kernel.asm	/^c010b81c:	e8 95 94 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b821	obj/kernel.asm	/^c010b821:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b825	obj/kernel.asm	/^c010b825:	74 05                	je     c010b82c <sysfile_write+0x175>$/;"	l
c010b827	obj/kernel.asm	/^c010b827:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b82a	obj/kernel.asm	/^c010b82a:	eb 03                	jmp    c010b82f <sysfile_write+0x178>$/;"	l
c010b82c	obj/kernel.asm	/^c010b82c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b82f	obj/kernel.asm	/^c010b82f:	c9                   	leave  $/;"	l
c010b830	obj/kernel.asm	/^c010b830:	c3                   	ret    $/;"	l
c010b831	obj/kernel.asm	/^c010b831 <sysfile_seek>:$/;"	l
c010b831	obj/kernel.asm	/^c010b831:	55                   	push   %ebp$/;"	l
c010b832	obj/kernel.asm	/^c010b832:	89 e5                	mov    %esp,%ebp$/;"	l
c010b834	obj/kernel.asm	/^c010b834:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b837	obj/kernel.asm	/^c010b837:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b83a	obj/kernel.asm	/^c010b83a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b83e	obj/kernel.asm	/^c010b83e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b841	obj/kernel.asm	/^c010b841:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b845	obj/kernel.asm	/^c010b845:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b848	obj/kernel.asm	/^c010b848:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b84b	obj/kernel.asm	/^c010b84b:	e8 73 f2 ff ff       	call   c010aac3 <file_seek>$/;"	l
c010b850	obj/kernel.asm	/^c010b850:	c9                   	leave  $/;"	l
c010b851	obj/kernel.asm	/^c010b851:	c3                   	ret    $/;"	l
c010b852	obj/kernel.asm	/^c010b852 <sysfile_fstat>:$/;"	l
c010b852	obj/kernel.asm	/^c010b852:	55                   	push   %ebp$/;"	l
c010b853	obj/kernel.asm	/^c010b853:	89 e5                	mov    %esp,%ebp$/;"	l
c010b855	obj/kernel.asm	/^c010b855:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b858	obj/kernel.asm	/^c010b858:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010b85d	obj/kernel.asm	/^c010b85d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b860	obj/kernel.asm	/^c010b860:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b863	obj/kernel.asm	/^c010b863:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010b866	obj/kernel.asm	/^c010b866:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b869	obj/kernel.asm	/^c010b869:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b86c	obj/kernel.asm	/^c010b86c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b870	obj/kernel.asm	/^c010b870:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b873	obj/kernel.asm	/^c010b873:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b876	obj/kernel.asm	/^c010b876:	e8 eb f3 ff ff       	call   c010ac66 <file_fstat>$/;"	l
c010b87b	obj/kernel.asm	/^c010b87b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b87e	obj/kernel.asm	/^c010b87e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b882	obj/kernel.asm	/^c010b882:	74 05                	je     c010b889 <sysfile_fstat+0x37>$/;"	l
c010b884	obj/kernel.asm	/^c010b884:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b887	obj/kernel.asm	/^c010b887:	eb 45                	jmp    c010b8ce <sysfile_fstat+0x7c>$/;"	l
c010b889	obj/kernel.asm	/^c010b889:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b88c	obj/kernel.asm	/^c010b88c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b88f	obj/kernel.asm	/^c010b88f:	e8 5f fb ff ff       	call   c010b3f3 <lock_mm>$/;"	l
c010b894	obj/kernel.asm	/^c010b894:	c7 44 24 0c 10 00 00 	movl   $0x10,0xc(%esp)$/;"	l
c010b89b	obj/kernel.asm	/^c010b89b:	00 $/;"	l
c010b89c	obj/kernel.asm	/^c010b89c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b89f	obj/kernel.asm	/^c010b89f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b8a3	obj/kernel.asm	/^c010b8a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b8a6	obj/kernel.asm	/^c010b8a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b8aa	obj/kernel.asm	/^c010b8aa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b8ad	obj/kernel.asm	/^c010b8ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b8b0	obj/kernel.asm	/^c010b8b0:	e8 6c cd ff ff       	call   c0108621 <copy_to_user>$/;"	l
c010b8b5	obj/kernel.asm	/^c010b8b5:	85 c0                	test   %eax,%eax$/;"	l
c010b8b7	obj/kernel.asm	/^c010b8b7:	75 07                	jne    c010b8c0 <sysfile_fstat+0x6e>$/;"	l
c010b8b9	obj/kernel.asm	/^c010b8b9:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b8c0	obj/kernel.asm	/^c010b8c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b8c3	obj/kernel.asm	/^c010b8c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b8c6	obj/kernel.asm	/^c010b8c6:	e8 5b fb ff ff       	call   c010b426 <unlock_mm>$/;"	l
c010b8cb	obj/kernel.asm	/^c010b8cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b8ce	obj/kernel.asm	/^c010b8ce:	c9                   	leave  $/;"	l
c010b8cf	obj/kernel.asm	/^c010b8cf:	c3                   	ret    $/;"	l
c010b8d0	obj/kernel.asm	/^c010b8d0 <sysfile_fsync>:$/;"	l
c010b8d0	obj/kernel.asm	/^c010b8d0:	55                   	push   %ebp$/;"	l
c010b8d1	obj/kernel.asm	/^c010b8d1:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8d3	obj/kernel.asm	/^c010b8d3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b8d6	obj/kernel.asm	/^c010b8d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8d9	obj/kernel.asm	/^c010b8d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b8dc	obj/kernel.asm	/^c010b8dc:	e8 44 f4 ff ff       	call   c010ad25 <file_fsync>$/;"	l
c010b8e1	obj/kernel.asm	/^c010b8e1:	c9                   	leave  $/;"	l
c010b8e2	obj/kernel.asm	/^c010b8e2:	c3                   	ret    $/;"	l
c010b8e3	obj/kernel.asm	/^c010b8e3 <sysfile_chdir>:$/;"	l
c010b8e3	obj/kernel.asm	/^c010b8e3:	55                   	push   %ebp$/;"	l
c010b8e4	obj/kernel.asm	/^c010b8e4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8e6	obj/kernel.asm	/^c010b8e6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b8e9	obj/kernel.asm	/^c010b8e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8ec	obj/kernel.asm	/^c010b8ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b8f0	obj/kernel.asm	/^c010b8f0:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b8f3	obj/kernel.asm	/^c010b8f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b8f6	obj/kernel.asm	/^c010b8f6:	e8 51 fb ff ff       	call   c010b44c <copy_path>$/;"	l
c010b8fb	obj/kernel.asm	/^c010b8fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b8fe	obj/kernel.asm	/^c010b8fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b902	obj/kernel.asm	/^c010b902:	74 05                	je     c010b909 <sysfile_chdir+0x26>$/;"	l
c010b904	obj/kernel.asm	/^c010b904:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b907	obj/kernel.asm	/^c010b907:	eb 1c                	jmp    c010b925 <sysfile_chdir+0x42>$/;"	l
c010b909	obj/kernel.asm	/^c010b909:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b90c	obj/kernel.asm	/^c010b90c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b90f	obj/kernel.asm	/^c010b90f:	e8 2c 4b 00 00       	call   c0110440 <vfs_chdir>$/;"	l
c010b914	obj/kernel.asm	/^c010b914:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b917	obj/kernel.asm	/^c010b917:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b91a	obj/kernel.asm	/^c010b91a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b91d	obj/kernel.asm	/^c010b91d:	e8 94 93 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b922	obj/kernel.asm	/^c010b922:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b925	obj/kernel.asm	/^c010b925:	c9                   	leave  $/;"	l
c010b926	obj/kernel.asm	/^c010b926:	c3                   	ret    $/;"	l
c010b927	obj/kernel.asm	/^c010b927 <sysfile_link>:$/;"	l
c010b927	obj/kernel.asm	/^c010b927:	55                   	push   %ebp$/;"	l
c010b928	obj/kernel.asm	/^c010b928:	89 e5                	mov    %esp,%ebp$/;"	l
c010b92a	obj/kernel.asm	/^c010b92a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b92d	obj/kernel.asm	/^c010b92d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b930	obj/kernel.asm	/^c010b930:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b934	obj/kernel.asm	/^c010b934:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b937	obj/kernel.asm	/^c010b937:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b93a	obj/kernel.asm	/^c010b93a:	e8 0d fb ff ff       	call   c010b44c <copy_path>$/;"	l
c010b93f	obj/kernel.asm	/^c010b93f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b942	obj/kernel.asm	/^c010b942:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b946	obj/kernel.asm	/^c010b946:	74 05                	je     c010b94d <sysfile_link+0x26>$/;"	l
c010b948	obj/kernel.asm	/^c010b948:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b94b	obj/kernel.asm	/^c010b94b:	eb 59                	jmp    c010b9a6 <sysfile_link+0x7f>$/;"	l
c010b94d	obj/kernel.asm	/^c010b94d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b950	obj/kernel.asm	/^c010b950:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b954	obj/kernel.asm	/^c010b954:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010b957	obj/kernel.asm	/^c010b957:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b95a	obj/kernel.asm	/^c010b95a:	e8 ed fa ff ff       	call   c010b44c <copy_path>$/;"	l
c010b95f	obj/kernel.asm	/^c010b95f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b962	obj/kernel.asm	/^c010b962:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b966	obj/kernel.asm	/^c010b966:	74 10                	je     c010b978 <sysfile_link+0x51>$/;"	l
c010b968	obj/kernel.asm	/^c010b968:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b96b	obj/kernel.asm	/^c010b96b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b96e	obj/kernel.asm	/^c010b96e:	e8 43 93 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b973	obj/kernel.asm	/^c010b973:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b976	obj/kernel.asm	/^c010b976:	eb 2e                	jmp    c010b9a6 <sysfile_link+0x7f>$/;"	l
c010b978	obj/kernel.asm	/^c010b978:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b97b	obj/kernel.asm	/^c010b97b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b97e	obj/kernel.asm	/^c010b97e:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b982	obj/kernel.asm	/^c010b982:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b985	obj/kernel.asm	/^c010b985:	e8 37 46 00 00       	call   c010ffc1 <vfs_link>$/;"	l
c010b98a	obj/kernel.asm	/^c010b98a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b98d	obj/kernel.asm	/^c010b98d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b990	obj/kernel.asm	/^c010b990:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b993	obj/kernel.asm	/^c010b993:	e8 1e 93 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b998	obj/kernel.asm	/^c010b998:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b99b	obj/kernel.asm	/^c010b99b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b99e	obj/kernel.asm	/^c010b99e:	e8 13 93 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b9a3	obj/kernel.asm	/^c010b9a3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9a6	obj/kernel.asm	/^c010b9a6:	c9                   	leave  $/;"	l
c010b9a7	obj/kernel.asm	/^c010b9a7:	c3                   	ret    $/;"	l
c010b9a8	obj/kernel.asm	/^c010b9a8 <sysfile_rename>:$/;"	l
c010b9a8	obj/kernel.asm	/^c010b9a8:	55                   	push   %ebp$/;"	l
c010b9a9	obj/kernel.asm	/^c010b9a9:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9ab	obj/kernel.asm	/^c010b9ab:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b9ae	obj/kernel.asm	/^c010b9ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9b1	obj/kernel.asm	/^c010b9b1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b9b5	obj/kernel.asm	/^c010b9b5:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b9b8	obj/kernel.asm	/^c010b9b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b9bb	obj/kernel.asm	/^c010b9bb:	e8 8c fa ff ff       	call   c010b44c <copy_path>$/;"	l
c010b9c0	obj/kernel.asm	/^c010b9c0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b9c3	obj/kernel.asm	/^c010b9c3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b9c7	obj/kernel.asm	/^c010b9c7:	74 05                	je     c010b9ce <sysfile_rename+0x26>$/;"	l
c010b9c9	obj/kernel.asm	/^c010b9c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9cc	obj/kernel.asm	/^c010b9cc:	eb 59                	jmp    c010ba27 <sysfile_rename+0x7f>$/;"	l
c010b9ce	obj/kernel.asm	/^c010b9ce:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b9d1	obj/kernel.asm	/^c010b9d1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b9d5	obj/kernel.asm	/^c010b9d5:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010b9d8	obj/kernel.asm	/^c010b9d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b9db	obj/kernel.asm	/^c010b9db:	e8 6c fa ff ff       	call   c010b44c <copy_path>$/;"	l
c010b9e0	obj/kernel.asm	/^c010b9e0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b9e3	obj/kernel.asm	/^c010b9e3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b9e7	obj/kernel.asm	/^c010b9e7:	74 10                	je     c010b9f9 <sysfile_rename+0x51>$/;"	l
c010b9e9	obj/kernel.asm	/^c010b9e9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b9ec	obj/kernel.asm	/^c010b9ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b9ef	obj/kernel.asm	/^c010b9ef:	e8 c2 92 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010b9f4	obj/kernel.asm	/^c010b9f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9f7	obj/kernel.asm	/^c010b9f7:	eb 2e                	jmp    c010ba27 <sysfile_rename+0x7f>$/;"	l
c010b9f9	obj/kernel.asm	/^c010b9f9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b9fc	obj/kernel.asm	/^c010b9fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b9ff	obj/kernel.asm	/^c010b9ff:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010ba03	obj/kernel.asm	/^c010ba03:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba06	obj/kernel.asm	/^c010ba06:	e8 ac 45 00 00       	call   c010ffb7 <vfs_rename>$/;"	l
c010ba0b	obj/kernel.asm	/^c010ba0b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba0e	obj/kernel.asm	/^c010ba0e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba11	obj/kernel.asm	/^c010ba11:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba14	obj/kernel.asm	/^c010ba14:	e8 9d 92 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010ba19	obj/kernel.asm	/^c010ba19:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ba1c	obj/kernel.asm	/^c010ba1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba1f	obj/kernel.asm	/^c010ba1f:	e8 92 92 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010ba24	obj/kernel.asm	/^c010ba24:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba27	obj/kernel.asm	/^c010ba27:	c9                   	leave  $/;"	l
c010ba28	obj/kernel.asm	/^c010ba28:	c3                   	ret    $/;"	l
c010ba29	obj/kernel.asm	/^c010ba29 <sysfile_unlink>:$/;"	l
c010ba29	obj/kernel.asm	/^c010ba29:	55                   	push   %ebp$/;"	l
c010ba2a	obj/kernel.asm	/^c010ba2a:	89 e5                	mov    %esp,%ebp$/;"	l
c010ba2c	obj/kernel.asm	/^c010ba2c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ba2f	obj/kernel.asm	/^c010ba2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba32	obj/kernel.asm	/^c010ba32:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ba36	obj/kernel.asm	/^c010ba36:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010ba39	obj/kernel.asm	/^c010ba39:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba3c	obj/kernel.asm	/^c010ba3c:	e8 0b fa ff ff       	call   c010b44c <copy_path>$/;"	l
c010ba41	obj/kernel.asm	/^c010ba41:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba44	obj/kernel.asm	/^c010ba44:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ba48	obj/kernel.asm	/^c010ba48:	74 05                	je     c010ba4f <sysfile_unlink+0x26>$/;"	l
c010ba4a	obj/kernel.asm	/^c010ba4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba4d	obj/kernel.asm	/^c010ba4d:	eb 1c                	jmp    c010ba6b <sysfile_unlink+0x42>$/;"	l
c010ba4f	obj/kernel.asm	/^c010ba4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba52	obj/kernel.asm	/^c010ba52:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba55	obj/kernel.asm	/^c010ba55:	e8 53 45 00 00       	call   c010ffad <vfs_unlink>$/;"	l
c010ba5a	obj/kernel.asm	/^c010ba5a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba5d	obj/kernel.asm	/^c010ba5d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba60	obj/kernel.asm	/^c010ba60:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba63	obj/kernel.asm	/^c010ba63:	e8 4e 92 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010ba68	obj/kernel.asm	/^c010ba68:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba6b	obj/kernel.asm	/^c010ba6b:	c9                   	leave  $/;"	l
c010ba6c	obj/kernel.asm	/^c010ba6c:	c3                   	ret    $/;"	l
c010ba6d	obj/kernel.asm	/^c010ba6d <sysfile_getcwd>:$/;"	l
c010ba6d	obj/kernel.asm	/^c010ba6d:	55                   	push   %ebp$/;"	l
c010ba6e	obj/kernel.asm	/^c010ba6e:	89 e5                	mov    %esp,%ebp$/;"	l
c010ba70	obj/kernel.asm	/^c010ba70:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010ba73	obj/kernel.asm	/^c010ba73:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010ba78	obj/kernel.asm	/^c010ba78:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ba7b	obj/kernel.asm	/^c010ba7b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ba7e	obj/kernel.asm	/^c010ba7e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ba82	obj/kernel.asm	/^c010ba82:	75 07                	jne    c010ba8b <sysfile_getcwd+0x1e>$/;"	l
c010ba84	obj/kernel.asm	/^c010ba84:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ba89	obj/kernel.asm	/^c010ba89:	eb 77                	jmp    c010bb02 <sysfile_getcwd+0x95>$/;"	l
c010ba8b	obj/kernel.asm	/^c010ba8b:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010ba92	obj/kernel.asm	/^c010ba92:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba95	obj/kernel.asm	/^c010ba95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba98	obj/kernel.asm	/^c010ba98:	e8 56 f9 ff ff       	call   c010b3f3 <lock_mm>$/;"	l
c010ba9d	obj/kernel.asm	/^c010ba9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010baa0	obj/kernel.asm	/^c010baa0:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010baa7	obj/kernel.asm	/^c010baa7:	00 $/;"	l
c010baa8	obj/kernel.asm	/^c010baa8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010baab	obj/kernel.asm	/^c010baab:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010baaf	obj/kernel.asm	/^c010baaf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bab3	obj/kernel.asm	/^c010bab3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bab6	obj/kernel.asm	/^c010bab6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bab9	obj/kernel.asm	/^c010bab9:	e8 8f d4 ff ff       	call   c0108f4d <user_mem_check>$/;"	l
c010babe	obj/kernel.asm	/^c010babe:	85 c0                	test   %eax,%eax$/;"	l
c010bac0	obj/kernel.asm	/^c010bac0:	74 32                	je     c010baf4 <sysfile_getcwd+0x87>$/;"	l
c010bac2	obj/kernel.asm	/^c010bac2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010bac9	obj/kernel.asm	/^c010bac9:	00 $/;"	l
c010baca	obj/kernel.asm	/^c010baca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bacd	obj/kernel.asm	/^c010bacd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010bad1	obj/kernel.asm	/^c010bad1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bad4	obj/kernel.asm	/^c010bad4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bad8	obj/kernel.asm	/^c010bad8:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010badb	obj/kernel.asm	/^c010badb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bade	obj/kernel.asm	/^c010bade:	e8 61 f7 ff ff       	call   c010b244 <iobuf_init>$/;"	l
c010bae3	obj/kernel.asm	/^c010bae3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bae6	obj/kernel.asm	/^c010bae6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bae9	obj/kernel.asm	/^c010bae9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010baec	obj/kernel.asm	/^c010baec:	e8 8e 49 00 00       	call   c011047f <vfs_getcwd>$/;"	l
c010baf1	obj/kernel.asm	/^c010baf1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010baf4	obj/kernel.asm	/^c010baf4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010baf7	obj/kernel.asm	/^c010baf7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bafa	obj/kernel.asm	/^c010bafa:	e8 27 f9 ff ff       	call   c010b426 <unlock_mm>$/;"	l
c010baff	obj/kernel.asm	/^c010baff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bb02	obj/kernel.asm	/^c010bb02:	c9                   	leave  $/;"	l
c010bb03	obj/kernel.asm	/^c010bb03:	c3                   	ret    $/;"	l
c010bb04	obj/kernel.asm	/^c010bb04 <sysfile_getdirentry>:$/;"	l
c010bb04	obj/kernel.asm	/^c010bb04:	55                   	push   %ebp$/;"	l
c010bb05	obj/kernel.asm	/^c010bb05:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb07	obj/kernel.asm	/^c010bb07:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010bb0a	obj/kernel.asm	/^c010bb0a:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010bb0f	obj/kernel.asm	/^c010bb0f:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bb12	obj/kernel.asm	/^c010bb12:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bb15	obj/kernel.asm	/^c010bb15:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c010bb1c	obj/kernel.asm	/^c010bb1c:	e8 7a 91 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010bb21	obj/kernel.asm	/^c010bb21:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bb24	obj/kernel.asm	/^c010bb24:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010bb28	obj/kernel.asm	/^c010bb28:	75 0a                	jne    c010bb34 <sysfile_getdirentry+0x30>$/;"	l
c010bb2a	obj/kernel.asm	/^c010bb2a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010bb2f	obj/kernel.asm	/^c010bb2f:	e9 c2 00 00 00       	jmp    c010bbf6 <sysfile_getdirentry+0xf2>$/;"	l
c010bb34	obj/kernel.asm	/^c010bb34:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010bb3b	obj/kernel.asm	/^c010bb3b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb3e	obj/kernel.asm	/^c010bb3e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb41	obj/kernel.asm	/^c010bb41:	e8 ad f8 ff ff       	call   c010b3f3 <lock_mm>$/;"	l
c010bb46	obj/kernel.asm	/^c010bb46:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bb49	obj/kernel.asm	/^c010bb49:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bb4c	obj/kernel.asm	/^c010bb4c:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c010bb53	obj/kernel.asm	/^c010bb53:	00 $/;"	l
c010bb54	obj/kernel.asm	/^c010bb54:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
c010bb5b	obj/kernel.asm	/^c010bb5b:	00 $/;"	l
c010bb5c	obj/kernel.asm	/^c010bb5c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010bb60	obj/kernel.asm	/^c010bb60:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bb64	obj/kernel.asm	/^c010bb64:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb67	obj/kernel.asm	/^c010bb67:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb6a	obj/kernel.asm	/^c010bb6a:	e8 61 ca ff ff       	call   c01085d0 <copy_from_user>$/;"	l
c010bb6f	obj/kernel.asm	/^c010bb6f:	85 c0                	test   %eax,%eax$/;"	l
c010bb71	obj/kernel.asm	/^c010bb71:	75 07                	jne    c010bb7a <sysfile_getdirentry+0x76>$/;"	l
c010bb73	obj/kernel.asm	/^c010bb73:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010bb7a	obj/kernel.asm	/^c010bb7a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb7d	obj/kernel.asm	/^c010bb7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb80	obj/kernel.asm	/^c010bb80:	e8 a1 f8 ff ff       	call   c010b426 <unlock_mm>$/;"	l
c010bb85	obj/kernel.asm	/^c010bb85:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bb89	obj/kernel.asm	/^c010bb89:	75 5d                	jne    c010bbe8 <sysfile_getdirentry+0xe4>$/;"	l
c010bb8b	obj/kernel.asm	/^c010bb8b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bb8e	obj/kernel.asm	/^c010bb8e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bb92	obj/kernel.asm	/^c010bb92:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb95	obj/kernel.asm	/^c010bb95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb98	obj/kernel.asm	/^c010bb98:	e8 40 f2 ff ff       	call   c010addd <file_getdirentry>$/;"	l
c010bb9d	obj/kernel.asm	/^c010bb9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bba0	obj/kernel.asm	/^c010bba0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bba4	obj/kernel.asm	/^c010bba4:	75 42                	jne    c010bbe8 <sysfile_getdirentry+0xe4>$/;"	l
c010bba6	obj/kernel.asm	/^c010bba6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bba9	obj/kernel.asm	/^c010bba9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbac	obj/kernel.asm	/^c010bbac:	e8 42 f8 ff ff       	call   c010b3f3 <lock_mm>$/;"	l
c010bbb1	obj/kernel.asm	/^c010bbb1:	c7 44 24 0c 04 01 00 	movl   $0x104,0xc(%esp)$/;"	l
c010bbb8	obj/kernel.asm	/^c010bbb8:	00 $/;"	l
c010bbb9	obj/kernel.asm	/^c010bbb9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bbbc	obj/kernel.asm	/^c010bbbc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010bbc0	obj/kernel.asm	/^c010bbc0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bbc3	obj/kernel.asm	/^c010bbc3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bbc7	obj/kernel.asm	/^c010bbc7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bbca	obj/kernel.asm	/^c010bbca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbcd	obj/kernel.asm	/^c010bbcd:	e8 4f ca ff ff       	call   c0108621 <copy_to_user>$/;"	l
c010bbd2	obj/kernel.asm	/^c010bbd2:	85 c0                	test   %eax,%eax$/;"	l
c010bbd4	obj/kernel.asm	/^c010bbd4:	75 07                	jne    c010bbdd <sysfile_getdirentry+0xd9>$/;"	l
c010bbd6	obj/kernel.asm	/^c010bbd6:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010bbdd	obj/kernel.asm	/^c010bbdd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bbe0	obj/kernel.asm	/^c010bbe0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbe3	obj/kernel.asm	/^c010bbe3:	e8 3e f8 ff ff       	call   c010b426 <unlock_mm>$/;"	l
c010bbe8	obj/kernel.asm	/^c010bbe8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bbeb	obj/kernel.asm	/^c010bbeb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbee	obj/kernel.asm	/^c010bbee:	e8 c3 90 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010bbf3	obj/kernel.asm	/^c010bbf3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bbf6	obj/kernel.asm	/^c010bbf6:	c9                   	leave  $/;"	l
c010bbf7	obj/kernel.asm	/^c010bbf7:	c3                   	ret    $/;"	l
c010bbf8	obj/kernel.asm	/^c010bbf8 <sysfile_dup>:$/;"	l
c010bbf8	obj/kernel.asm	/^c010bbf8:	55                   	push   %ebp$/;"	l
c010bbf9	obj/kernel.asm	/^c010bbf9:	89 e5                	mov    %esp,%ebp$/;"	l
c010bbfb	obj/kernel.asm	/^c010bbfb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bbfe	obj/kernel.asm	/^c010bbfe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc01	obj/kernel.asm	/^c010bc01:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bc05	obj/kernel.asm	/^c010bc05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc08	obj/kernel.asm	/^c010bc08:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bc0b	obj/kernel.asm	/^c010bc0b:	e8 db f2 ff ff       	call   c010aeeb <file_dup>$/;"	l
c010bc10	obj/kernel.asm	/^c010bc10:	c9                   	leave  $/;"	l
c010bc11	obj/kernel.asm	/^c010bc11:	c3                   	ret    $/;"	l
c010bc12	obj/kernel.asm	/^c010bc12 <sysfile_pipe>:$/;"	l
c010bc12	obj/kernel.asm	/^c010bc12:	55                   	push   %ebp$/;"	l
c010bc13	obj/kernel.asm	/^c010bc13:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc15	obj/kernel.asm	/^c010bc15:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010bc1a	obj/kernel.asm	/^c010bc1a:	5d                   	pop    %ebp$/;"	l
c010bc1b	obj/kernel.asm	/^c010bc1b:	c3                   	ret    $/;"	l
c010bc1c	obj/kernel.asm	/^c010bc1c <sysfile_mkfifo>:$/;"	l
c010bc1c	obj/kernel.asm	/^c010bc1c:	55                   	push   %ebp$/;"	l
c010bc1d	obj/kernel.asm	/^c010bc1d:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc1f	obj/kernel.asm	/^c010bc1f:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010bc24	obj/kernel.asm	/^c010bc24:	5d                   	pop    %ebp$/;"	l
c010bc25	obj/kernel.asm	/^c010bc25:	c3                   	ret    $/;"	l
c010bc26	obj/kernel.asm	/^c010bc26 <kernel_thread_entry>:$/;"	l
c010bc26	obj/kernel.asm	/^c010bc26:	52                   	push   %edx$/;"	l
c010bc27	obj/kernel.asm	/^c010bc27:	ff d3                	call   *%ebx$/;"	l
c010bc29	obj/kernel.asm	/^c010bc29:	50                   	push   %eax$/;"	l
c010bc2a	obj/kernel.asm	/^c010bc2a:	e8 39 0e 00 00       	call   c010ca68 <do_exit>$/;"	l
c010bc2f	obj/kernel.asm	/^c010bc2f <timer_init>:$/;"	l
c010bc2f	obj/kernel.asm	/^c010bc2f:	55                   	push   %ebp$/;"	l
c010bc30	obj/kernel.asm	/^c010bc30:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc32	obj/kernel.asm	/^c010bc32:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bc35	obj/kernel.asm	/^c010bc35:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010bc38	obj/kernel.asm	/^c010bc38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc3b	obj/kernel.asm	/^c010bc3b:	89 10                	mov    %edx,(%eax)$/;"	l
c010bc3d	obj/kernel.asm	/^c010bc3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc40	obj/kernel.asm	/^c010bc40:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bc43	obj/kernel.asm	/^c010bc43:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bc46	obj/kernel.asm	/^c010bc46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc49	obj/kernel.asm	/^c010bc49:	83 c0 08             	add    $0x8,%eax$/;"	l
c010bc4c	obj/kernel.asm	/^c010bc4c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010bc4f	obj/kernel.asm	/^c010bc4f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bc52	obj/kernel.asm	/^c010bc52:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010bc55	obj/kernel.asm	/^c010bc55:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bc58	obj/kernel.asm	/^c010bc58:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bc5b	obj/kernel.asm	/^c010bc5b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010bc5e	obj/kernel.asm	/^c010bc5e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bc61	obj/kernel.asm	/^c010bc61:	89 10                	mov    %edx,(%eax)$/;"	l
c010bc63	obj/kernel.asm	/^c010bc63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc66	obj/kernel.asm	/^c010bc66:	c9                   	leave  $/;"	l
c010bc67	obj/kernel.asm	/^c010bc67:	c3                   	ret    $/;"	l
c010bc68	obj/kernel.asm	/^c010bc68 <__intr_save>:$/;"	l
c010bc68	obj/kernel.asm	/^c010bc68:	55                   	push   %ebp$/;"	l
c010bc69	obj/kernel.asm	/^c010bc69:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc6b	obj/kernel.asm	/^c010bc6b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bc6e	obj/kernel.asm	/^c010bc6e:	9c                   	pushf  $/;"	l
c010bc6f	obj/kernel.asm	/^c010bc6f:	58                   	pop    %eax$/;"	l
c010bc70	obj/kernel.asm	/^c010bc70:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bc73	obj/kernel.asm	/^c010bc73:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bc76	obj/kernel.asm	/^c010bc76:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010bc7b	obj/kernel.asm	/^c010bc7b:	85 c0                	test   %eax,%eax$/;"	l
c010bc7d	obj/kernel.asm	/^c010bc7d:	74 0c                	je     c010bc8b <__intr_save+0x23>$/;"	l
c010bc7f	obj/kernel.asm	/^c010bc7f:	e8 a6 64 ff ff       	call   c010212a <intr_disable>$/;"	l
c010bc84	obj/kernel.asm	/^c010bc84:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010bc89	obj/kernel.asm	/^c010bc89:	eb 05                	jmp    c010bc90 <__intr_save+0x28>$/;"	l
c010bc8b	obj/kernel.asm	/^c010bc8b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bc90	obj/kernel.asm	/^c010bc90:	c9                   	leave  $/;"	l
c010bc91	obj/kernel.asm	/^c010bc91:	c3                   	ret    $/;"	l
c010bc92	obj/kernel.asm	/^c010bc92 <__intr_restore>:$/;"	l
c010bc92	obj/kernel.asm	/^c010bc92:	55                   	push   %ebp$/;"	l
c010bc93	obj/kernel.asm	/^c010bc93:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc95	obj/kernel.asm	/^c010bc95:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bc98	obj/kernel.asm	/^c010bc98:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010bc9c	obj/kernel.asm	/^c010bc9c:	74 05                	je     c010bca3 <__intr_restore+0x11>$/;"	l
c010bc9e	obj/kernel.asm	/^c010bc9e:	e8 81 64 ff ff       	call   c0102124 <intr_enable>$/;"	l
c010bca3	obj/kernel.asm	/^c010bca3:	c9                   	leave  $/;"	l
c010bca4	obj/kernel.asm	/^c010bca4:	c3                   	ret    $/;"	l
c010bca5	obj/kernel.asm	/^c010bca5 <page2ppn>:$/;"	l
c010bca5	obj/kernel.asm	/^c010bca5:	55                   	push   %ebp$/;"	l
c010bca6	obj/kernel.asm	/^c010bca6:	89 e5                	mov    %esp,%ebp$/;"	l
c010bca8	obj/kernel.asm	/^c010bca8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bcab	obj/kernel.asm	/^c010bcab:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c010bcb0	obj/kernel.asm	/^c010bcb0:	29 c2                	sub    %eax,%edx$/;"	l
c010bcb2	obj/kernel.asm	/^c010bcb2:	89 d0                	mov    %edx,%eax$/;"	l
c010bcb4	obj/kernel.asm	/^c010bcb4:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010bcb7	obj/kernel.asm	/^c010bcb7:	5d                   	pop    %ebp$/;"	l
c010bcb8	obj/kernel.asm	/^c010bcb8:	c3                   	ret    $/;"	l
c010bcb9	obj/kernel.asm	/^c010bcb9 <page2pa>:$/;"	l
c010bcb9	obj/kernel.asm	/^c010bcb9:	55                   	push   %ebp$/;"	l
c010bcba	obj/kernel.asm	/^c010bcba:	89 e5                	mov    %esp,%ebp$/;"	l
c010bcbc	obj/kernel.asm	/^c010bcbc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bcbf	obj/kernel.asm	/^c010bcbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bcc2	obj/kernel.asm	/^c010bcc2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bcc5	obj/kernel.asm	/^c010bcc5:	e8 db ff ff ff       	call   c010bca5 <page2ppn>$/;"	l
c010bcca	obj/kernel.asm	/^c010bcca:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010bccd	obj/kernel.asm	/^c010bccd:	c9                   	leave  $/;"	l
c010bcce	obj/kernel.asm	/^c010bcce:	c3                   	ret    $/;"	l
c010bccf	obj/kernel.asm	/^c010bccf <pa2page>:$/;"	l
c010bccf	obj/kernel.asm	/^c010bccf:	55                   	push   %ebp$/;"	l
c010bcd0	obj/kernel.asm	/^c010bcd0:	89 e5                	mov    %esp,%ebp$/;"	l
c010bcd2	obj/kernel.asm	/^c010bcd2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bcd5	obj/kernel.asm	/^c010bcd5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bcd8	obj/kernel.asm	/^c010bcd8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010bcdb	obj/kernel.asm	/^c010bcdb:	89 c2                	mov    %eax,%edx$/;"	l
c010bcdd	obj/kernel.asm	/^c010bcdd:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c010bce2	obj/kernel.asm	/^c010bce2:	39 c2                	cmp    %eax,%edx$/;"	l
c010bce4	obj/kernel.asm	/^c010bce4:	72 1c                	jb     c010bd02 <pa2page+0x33>$/;"	l
c010bce6	obj/kernel.asm	/^c010bce6:	c7 44 24 08 f0 7d 11 	movl   $0xc0117df0,0x8(%esp)$/;"	l
c010bced	obj/kernel.asm	/^c010bced:	c0 $/;"	l
c010bcee	obj/kernel.asm	/^c010bcee:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c010bcf5	obj/kernel.asm	/^c010bcf5:	00 $/;"	l
c010bcf6	obj/kernel.asm	/^c010bcf6:	c7 04 24 0f 7e 11 c0 	movl   $0xc0117e0f,(%esp)$/;"	l
c010bcfd	obj/kernel.asm	/^c010bcfd:	e8 c6 51 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010bd02	obj/kernel.asm	/^c010bd02:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c010bd07	obj/kernel.asm	/^c010bd07:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bd0a	obj/kernel.asm	/^c010bd0a:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010bd0d	obj/kernel.asm	/^c010bd0d:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010bd10	obj/kernel.asm	/^c010bd10:	01 d0                	add    %edx,%eax$/;"	l
c010bd12	obj/kernel.asm	/^c010bd12:	c9                   	leave  $/;"	l
c010bd13	obj/kernel.asm	/^c010bd13:	c3                   	ret    $/;"	l
c010bd14	obj/kernel.asm	/^c010bd14 <page2kva>:$/;"	l
c010bd14	obj/kernel.asm	/^c010bd14:	55                   	push   %ebp$/;"	l
c010bd15	obj/kernel.asm	/^c010bd15:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd17	obj/kernel.asm	/^c010bd17:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bd1a	obj/kernel.asm	/^c010bd1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd1d	obj/kernel.asm	/^c010bd1d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bd20	obj/kernel.asm	/^c010bd20:	e8 94 ff ff ff       	call   c010bcb9 <page2pa>$/;"	l
c010bd25	obj/kernel.asm	/^c010bd25:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bd28	obj/kernel.asm	/^c010bd28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd2b	obj/kernel.asm	/^c010bd2b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010bd2e	obj/kernel.asm	/^c010bd2e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bd31	obj/kernel.asm	/^c010bd31:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c010bd36	obj/kernel.asm	/^c010bd36:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010bd39	obj/kernel.asm	/^c010bd39:	72 23                	jb     c010bd5e <page2kva+0x4a>$/;"	l
c010bd3b	obj/kernel.asm	/^c010bd3b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd3e	obj/kernel.asm	/^c010bd3e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010bd42	obj/kernel.asm	/^c010bd42:	c7 44 24 08 20 7e 11 	movl   $0xc0117e20,0x8(%esp)$/;"	l
c010bd49	obj/kernel.asm	/^c010bd49:	c0 $/;"	l
c010bd4a	obj/kernel.asm	/^c010bd4a:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c010bd51	obj/kernel.asm	/^c010bd51:	00 $/;"	l
c010bd52	obj/kernel.asm	/^c010bd52:	c7 04 24 0f 7e 11 c0 	movl   $0xc0117e0f,(%esp)$/;"	l
c010bd59	obj/kernel.asm	/^c010bd59:	e8 6a 51 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010bd5e	obj/kernel.asm	/^c010bd5e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd61	obj/kernel.asm	/^c010bd61:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010bd66	obj/kernel.asm	/^c010bd66:	c9                   	leave  $/;"	l
c010bd67	obj/kernel.asm	/^c010bd67:	c3                   	ret    $/;"	l
c010bd68	obj/kernel.asm	/^c010bd68 <kva2page>:$/;"	l
c010bd68	obj/kernel.asm	/^c010bd68:	55                   	push   %ebp$/;"	l
c010bd69	obj/kernel.asm	/^c010bd69:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd6b	obj/kernel.asm	/^c010bd6b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bd6e	obj/kernel.asm	/^c010bd6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd71	obj/kernel.asm	/^c010bd71:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bd74	obj/kernel.asm	/^c010bd74:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010bd7b	obj/kernel.asm	/^c010bd7b:	77 23                	ja     c010bda0 <kva2page+0x38>$/;"	l
c010bd7d	obj/kernel.asm	/^c010bd7d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd80	obj/kernel.asm	/^c010bd80:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010bd84	obj/kernel.asm	/^c010bd84:	c7 44 24 08 44 7e 11 	movl   $0xc0117e44,0x8(%esp)$/;"	l
c010bd8b	obj/kernel.asm	/^c010bd8b:	c0 $/;"	l
c010bd8c	obj/kernel.asm	/^c010bd8c:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c010bd93	obj/kernel.asm	/^c010bd93:	00 $/;"	l
c010bd94	obj/kernel.asm	/^c010bd94:	c7 04 24 0f 7e 11 c0 	movl   $0xc0117e0f,(%esp)$/;"	l
c010bd9b	obj/kernel.asm	/^c010bd9b:	e8 28 51 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010bda0	obj/kernel.asm	/^c010bda0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bda3	obj/kernel.asm	/^c010bda3:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010bda8	obj/kernel.asm	/^c010bda8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bdab	obj/kernel.asm	/^c010bdab:	e8 1f ff ff ff       	call   c010bccf <pa2page>$/;"	l
c010bdb0	obj/kernel.asm	/^c010bdb0:	c9                   	leave  $/;"	l
c010bdb1	obj/kernel.asm	/^c010bdb1:	c3                   	ret    $/;"	l
c010bdb2	obj/kernel.asm	/^c010bdb2 <mm_count_inc>:$/;"	l
c010bdb2	obj/kernel.asm	/^c010bdb2:	55                   	push   %ebp$/;"	l
c010bdb3	obj/kernel.asm	/^c010bdb3:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdb5	obj/kernel.asm	/^c010bdb5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdb8	obj/kernel.asm	/^c010bdb8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bdbb	obj/kernel.asm	/^c010bdbb:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010bdbe	obj/kernel.asm	/^c010bdbe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdc1	obj/kernel.asm	/^c010bdc1:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010bdc4	obj/kernel.asm	/^c010bdc4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdc7	obj/kernel.asm	/^c010bdc7:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bdca	obj/kernel.asm	/^c010bdca:	5d                   	pop    %ebp$/;"	l
c010bdcb	obj/kernel.asm	/^c010bdcb:	c3                   	ret    $/;"	l
c010bdcc	obj/kernel.asm	/^c010bdcc <mm_count_dec>:$/;"	l
c010bdcc	obj/kernel.asm	/^c010bdcc:	55                   	push   %ebp$/;"	l
c010bdcd	obj/kernel.asm	/^c010bdcd:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdcf	obj/kernel.asm	/^c010bdcf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdd2	obj/kernel.asm	/^c010bdd2:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bdd5	obj/kernel.asm	/^c010bdd5:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010bdd8	obj/kernel.asm	/^c010bdd8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bddb	obj/kernel.asm	/^c010bddb:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010bdde	obj/kernel.asm	/^c010bdde:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bde1	obj/kernel.asm	/^c010bde1:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bde4	obj/kernel.asm	/^c010bde4:	5d                   	pop    %ebp$/;"	l
c010bde5	obj/kernel.asm	/^c010bde5:	c3                   	ret    $/;"	l
c010bde6	obj/kernel.asm	/^c010bde6 <lock_mm>:$/;"	l
c010bde6	obj/kernel.asm	/^c010bde6:	55                   	push   %ebp$/;"	l
c010bde7	obj/kernel.asm	/^c010bde7:	89 e5                	mov    %esp,%ebp$/;"	l
c010bde9	obj/kernel.asm	/^c010bde9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bdec	obj/kernel.asm	/^c010bdec:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010bdf0	obj/kernel.asm	/^c010bdf0:	74 25                	je     c010be17 <lock_mm+0x31>$/;"	l
c010bdf2	obj/kernel.asm	/^c010bdf2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdf5	obj/kernel.asm	/^c010bdf5:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010bdf8	obj/kernel.asm	/^c010bdf8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bdfb	obj/kernel.asm	/^c010bdfb:	e8 fd dd ff ff       	call   c0109bfd <down>$/;"	l
c010be00	obj/kernel.asm	/^c010be00:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010be05	obj/kernel.asm	/^c010be05:	85 c0                	test   %eax,%eax$/;"	l
c010be07	obj/kernel.asm	/^c010be07:	74 0e                	je     c010be17 <lock_mm+0x31>$/;"	l
c010be09	obj/kernel.asm	/^c010be09:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010be0e	obj/kernel.asm	/^c010be0e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010be11	obj/kernel.asm	/^c010be11:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be14	obj/kernel.asm	/^c010be14:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c010be17	obj/kernel.asm	/^c010be17:	c9                   	leave  $/;"	l
c010be18	obj/kernel.asm	/^c010be18:	c3                   	ret    $/;"	l
c010be19	obj/kernel.asm	/^c010be19 <unlock_mm>:$/;"	l
c010be19	obj/kernel.asm	/^c010be19:	55                   	push   %ebp$/;"	l
c010be1a	obj/kernel.asm	/^c010be1a:	89 e5                	mov    %esp,%ebp$/;"	l
c010be1c	obj/kernel.asm	/^c010be1c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010be1f	obj/kernel.asm	/^c010be1f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010be23	obj/kernel.asm	/^c010be23:	74 18                	je     c010be3d <unlock_mm+0x24>$/;"	l
c010be25	obj/kernel.asm	/^c010be25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be28	obj/kernel.asm	/^c010be28:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010be2b	obj/kernel.asm	/^c010be2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010be2e	obj/kernel.asm	/^c010be2e:	e8 af dd ff ff       	call   c0109be2 <up>$/;"	l
c010be33	obj/kernel.asm	/^c010be33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be36	obj/kernel.asm	/^c010be36:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c010be3d	obj/kernel.asm	/^c010be3d:	c9                   	leave  $/;"	l
c010be3e	obj/kernel.asm	/^c010be3e:	c3                   	ret    $/;"	l
c010be3f	obj/kernel.asm	/^c010be3f <files_count_inc>:$/;"	l
c010be3f	obj/kernel.asm	/^c010be3f:	55                   	push   %ebp$/;"	l
c010be40	obj/kernel.asm	/^c010be40:	89 e5                	mov    %esp,%ebp$/;"	l
c010be42	obj/kernel.asm	/^c010be42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be45	obj/kernel.asm	/^c010be45:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010be48	obj/kernel.asm	/^c010be48:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010be4b	obj/kernel.asm	/^c010be4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be4e	obj/kernel.asm	/^c010be4e:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010be51	obj/kernel.asm	/^c010be51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be54	obj/kernel.asm	/^c010be54:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010be57	obj/kernel.asm	/^c010be57:	5d                   	pop    %ebp$/;"	l
c010be58	obj/kernel.asm	/^c010be58:	c3                   	ret    $/;"	l
c010be59	obj/kernel.asm	/^c010be59 <files_count_dec>:$/;"	l
c010be59	obj/kernel.asm	/^c010be59:	55                   	push   %ebp$/;"	l
c010be5a	obj/kernel.asm	/^c010be5a:	89 e5                	mov    %esp,%ebp$/;"	l
c010be5c	obj/kernel.asm	/^c010be5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be5f	obj/kernel.asm	/^c010be5f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010be62	obj/kernel.asm	/^c010be62:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010be65	obj/kernel.asm	/^c010be65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be68	obj/kernel.asm	/^c010be68:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010be6b	obj/kernel.asm	/^c010be6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be6e	obj/kernel.asm	/^c010be6e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010be71	obj/kernel.asm	/^c010be71:	5d                   	pop    %ebp$/;"	l
c010be72	obj/kernel.asm	/^c010be72:	c3                   	ret    $/;"	l
c010be73	obj/kernel.asm	/^c010be73 <alloc_proc>:$/;"	l
c010be73	obj/kernel.asm	/^c010be73:	55                   	push   %ebp$/;"	l
c010be74	obj/kernel.asm	/^c010be74:	89 e5                	mov    %esp,%ebp$/;"	l
c010be76	obj/kernel.asm	/^c010be76:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010be79	obj/kernel.asm	/^c010be79:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
c010be80	obj/kernel.asm	/^c010be80:	e8 16 8e ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010be85	obj/kernel.asm	/^c010be85:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be88	obj/kernel.asm	/^c010be88:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010be8c	obj/kernel.asm	/^c010be8c:	0f 84 8b 01 00 00    	je     c010c01d <alloc_proc+0x1aa>$/;"	l
c010be92	obj/kernel.asm	/^c010be92:	c7 44 24 08 c8 00 00 	movl   $0xc8,0x8(%esp)$/;"	l
c010be99	obj/kernel.asm	/^c010be99:	00 $/;"	l
c010be9a	obj/kernel.asm	/^c010be9a:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010bea1	obj/kernel.asm	/^c010bea1:	00 $/;"	l
c010bea2	obj/kernel.asm	/^c010bea2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bea5	obj/kernel.asm	/^c010bea5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bea8	obj/kernel.asm	/^c010bea8:	e8 6c 95 00 00       	call   c0115419 <memset>$/;"	l
c010bead	obj/kernel.asm	/^c010bead:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010beb0	obj/kernel.asm	/^c010beb0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010beb6	obj/kernel.asm	/^c010beb6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010beb9	obj/kernel.asm	/^c010beb9:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c010bec0	obj/kernel.asm	/^c010bec0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bec3	obj/kernel.asm	/^c010bec3:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010beca	obj/kernel.asm	/^c010beca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010becd	obj/kernel.asm	/^c010becd:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c010bed4	obj/kernel.asm	/^c010bed4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bed7	obj/kernel.asm	/^c010bed7:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010bede	obj/kernel.asm	/^c010bede:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bee1	obj/kernel.asm	/^c010bee1:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010bee8	obj/kernel.asm	/^c010bee8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010beeb	obj/kernel.asm	/^c010beeb:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010bef2	obj/kernel.asm	/^c010bef2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bef5	obj/kernel.asm	/^c010bef5:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010bef8	obj/kernel.asm	/^c010bef8:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)$/;"	l
c010beff	obj/kernel.asm	/^c010beff:	00 $/;"	l
c010bf00	obj/kernel.asm	/^c010bf00:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010bf07	obj/kernel.asm	/^c010bf07:	00 $/;"	l
c010bf08	obj/kernel.asm	/^c010bf08:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bf0b	obj/kernel.asm	/^c010bf0b:	e8 09 95 00 00       	call   c0115419 <memset>$/;"	l
c010bf10	obj/kernel.asm	/^c010bf10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf13	obj/kernel.asm	/^c010bf13:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c010bf1a	obj/kernel.asm	/^c010bf1a:	8b 15 24 30 15 c0    	mov    0xc0153024,%edx$/;"	l
c010bf20	obj/kernel.asm	/^c010bf20:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf23	obj/kernel.asm	/^c010bf23:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010bf26	obj/kernel.asm	/^c010bf26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf29	obj/kernel.asm	/^c010bf29:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c010bf30	obj/kernel.asm	/^c010bf30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf33	obj/kernel.asm	/^c010bf33:	83 c0 48             	add    $0x48,%eax$/;"	l
c010bf36	obj/kernel.asm	/^c010bf36:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010bf3d	obj/kernel.asm	/^c010bf3d:	00 $/;"	l
c010bf3e	obj/kernel.asm	/^c010bf3e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010bf45	obj/kernel.asm	/^c010bf45:	00 $/;"	l
c010bf46	obj/kernel.asm	/^c010bf46:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bf49	obj/kernel.asm	/^c010bf49:	e8 cb 94 00 00       	call   c0115419 <memset>$/;"	l
c010bf4e	obj/kernel.asm	/^c010bf4e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf51	obj/kernel.asm	/^c010bf51:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010bf58	obj/kernel.asm	/^c010bf58:	00 00 00 $/;"	l
c010bf5b	obj/kernel.asm	/^c010bf5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf5e	obj/kernel.asm	/^c010bf5e:	c7 80 9c 00 00 00 00 	movl   $0x0,0x9c(%eax)$/;"	l
c010bf65	obj/kernel.asm	/^c010bf65:	00 00 00 $/;"	l
c010bf68	obj/kernel.asm	/^c010bf68:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf6b	obj/kernel.asm	/^c010bf6b:	8b 90 9c 00 00 00    	mov    0x9c(%eax),%edx$/;"	l
c010bf71	obj/kernel.asm	/^c010bf71:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf74	obj/kernel.asm	/^c010bf74:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010bf7a	obj/kernel.asm	/^c010bf7a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf7d	obj/kernel.asm	/^c010bf7d:	8b 90 98 00 00 00    	mov    0x98(%eax),%edx$/;"	l
c010bf83	obj/kernel.asm	/^c010bf83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf86	obj/kernel.asm	/^c010bf86:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010bf8c	obj/kernel.asm	/^c010bf8c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf8f	obj/kernel.asm	/^c010bf8f:	c7 80 a0 00 00 00 00 	movl   $0x0,0xa0(%eax)$/;"	l
c010bf96	obj/kernel.asm	/^c010bf96:	00 00 00 $/;"	l
c010bf99	obj/kernel.asm	/^c010bf99:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf9c	obj/kernel.asm	/^c010bf9c:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%eax)$/;"	l
c010bfa3	obj/kernel.asm	/^c010bfa3:	00 00 00 $/;"	l
c010bfa6	obj/kernel.asm	/^c010bfa6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfa9	obj/kernel.asm	/^c010bfa9:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx$/;"	l
c010bfaf	obj/kernel.asm	/^c010bfaf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfb2	obj/kernel.asm	/^c010bfb2:	89 90 a4 00 00 00    	mov    %edx,0xa4(%eax)$/;"	l
c010bfb8	obj/kernel.asm	/^c010bfb8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfbb	obj/kernel.asm	/^c010bfbb:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%eax)$/;"	l
c010bfc2	obj/kernel.asm	/^c010bfc2:	00 00 00 $/;"	l
c010bfc5	obj/kernel.asm	/^c010bfc5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfc8	obj/kernel.asm	/^c010bfc8:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)$/;"	l
c010bfcf	obj/kernel.asm	/^c010bfcf:	00 00 00 $/;"	l
c010bfd2	obj/kernel.asm	/^c010bfd2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfd5	obj/kernel.asm	/^c010bfd5:	8b 90 b0 00 00 00    	mov    0xb0(%eax),%edx$/;"	l
c010bfdb	obj/kernel.asm	/^c010bfdb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfde	obj/kernel.asm	/^c010bfde:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)$/;"	l
c010bfe4	obj/kernel.asm	/^c010bfe4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfe7	obj/kernel.asm	/^c010bfe7:	8b 90 b8 00 00 00    	mov    0xb8(%eax),%edx$/;"	l
c010bfed	obj/kernel.asm	/^c010bfed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bff0	obj/kernel.asm	/^c010bff0:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)$/;"	l
c010bff6	obj/kernel.asm	/^c010bff6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bff9	obj/kernel.asm	/^c010bff9:	c7 80 bc 00 00 00 00 	movl   $0x0,0xbc(%eax)$/;"	l
c010c000	obj/kernel.asm	/^c010c000:	00 00 00 $/;"	l
c010c003	obj/kernel.asm	/^c010c003:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c006	obj/kernel.asm	/^c010c006:	c7 80 c0 00 00 00 00 	movl   $0x0,0xc0(%eax)$/;"	l
c010c00d	obj/kernel.asm	/^c010c00d:	00 00 00 $/;"	l
c010c010	obj/kernel.asm	/^c010c010:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c013	obj/kernel.asm	/^c010c013:	c7 80 c4 00 00 00 00 	movl   $0x0,0xc4(%eax)$/;"	l
c010c01a	obj/kernel.asm	/^c010c01a:	00 00 00 $/;"	l
c010c01d	obj/kernel.asm	/^c010c01d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c020	obj/kernel.asm	/^c010c020:	c9                   	leave  $/;"	l
c010c021	obj/kernel.asm	/^c010c021:	c3                   	ret    $/;"	l
c010c022	obj/kernel.asm	/^c010c022 <set_proc_name>:$/;"	l
c010c022	obj/kernel.asm	/^c010c022:	55                   	push   %ebp$/;"	l
c010c023	obj/kernel.asm	/^c010c023:	89 e5                	mov    %esp,%ebp$/;"	l
c010c025	obj/kernel.asm	/^c010c025:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c028	obj/kernel.asm	/^c010c028:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c02b	obj/kernel.asm	/^c010c02b:	83 c0 48             	add    $0x48,%eax$/;"	l
c010c02e	obj/kernel.asm	/^c010c02e:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010c035	obj/kernel.asm	/^c010c035:	00 $/;"	l
c010c036	obj/kernel.asm	/^c010c036:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c03d	obj/kernel.asm	/^c010c03d:	00 $/;"	l
c010c03e	obj/kernel.asm	/^c010c03e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c041	obj/kernel.asm	/^c010c041:	e8 d3 93 00 00       	call   c0115419 <memset>$/;"	l
c010c046	obj/kernel.asm	/^c010c046:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c049	obj/kernel.asm	/^c010c049:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010c04c	obj/kernel.asm	/^c010c04c:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010c053	obj/kernel.asm	/^c010c053:	00 $/;"	l
c010c054	obj/kernel.asm	/^c010c054:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c057	obj/kernel.asm	/^c010c057:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c05b	obj/kernel.asm	/^c010c05b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c05e	obj/kernel.asm	/^c010c05e:	e8 98 94 00 00       	call   c01154fb <memcpy>$/;"	l
c010c063	obj/kernel.asm	/^c010c063:	c9                   	leave  $/;"	l
c010c064	obj/kernel.asm	/^c010c064:	c3                   	ret    $/;"	l
c010c065	obj/kernel.asm	/^c010c065 <get_proc_name>:$/;"	l
c010c065	obj/kernel.asm	/^c010c065:	55                   	push   %ebp$/;"	l
c010c066	obj/kernel.asm	/^c010c066:	89 e5                	mov    %esp,%ebp$/;"	l
c010c068	obj/kernel.asm	/^c010c068:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c06b	obj/kernel.asm	/^c010c06b:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010c072	obj/kernel.asm	/^c010c072:	00 $/;"	l
c010c073	obj/kernel.asm	/^c010c073:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c07a	obj/kernel.asm	/^c010c07a:	00 $/;"	l
c010c07b	obj/kernel.asm	/^c010c07b:	c7 04 24 60 1f 15 c0 	movl   $0xc0151f60,(%esp)$/;"	l
c010c082	obj/kernel.asm	/^c010c082:	e8 92 93 00 00       	call   c0115419 <memset>$/;"	l
c010c087	obj/kernel.asm	/^c010c087:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c08a	obj/kernel.asm	/^c010c08a:	83 c0 48             	add    $0x48,%eax$/;"	l
c010c08d	obj/kernel.asm	/^c010c08d:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010c094	obj/kernel.asm	/^c010c094:	00 $/;"	l
c010c095	obj/kernel.asm	/^c010c095:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c099	obj/kernel.asm	/^c010c099:	c7 04 24 60 1f 15 c0 	movl   $0xc0151f60,(%esp)$/;"	l
c010c0a0	obj/kernel.asm	/^c010c0a0:	e8 56 94 00 00       	call   c01154fb <memcpy>$/;"	l
c010c0a5	obj/kernel.asm	/^c010c0a5:	c9                   	leave  $/;"	l
c010c0a6	obj/kernel.asm	/^c010c0a6:	c3                   	ret    $/;"	l
c010c0a7	obj/kernel.asm	/^c010c0a7 <set_links>:$/;"	l
c010c0a7	obj/kernel.asm	/^c010c0a7:	55                   	push   %ebp$/;"	l
c010c0a8	obj/kernel.asm	/^c010c0a8:	89 e5                	mov    %esp,%ebp$/;"	l
c010c0aa	obj/kernel.asm	/^c010c0aa:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010c0ad	obj/kernel.asm	/^c010c0ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c0b0	obj/kernel.asm	/^c010c0b0:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010c0b3	obj/kernel.asm	/^c010c0b3:	c7 45 fc fc 31 15 c0 	movl   $0xc01531fc,-0x4(%ebp)$/;"	l
c010c0ba	obj/kernel.asm	/^c010c0ba:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010c0bd	obj/kernel.asm	/^c010c0bd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c0c0	obj/kernel.asm	/^c010c0c0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c0c3	obj/kernel.asm	/^c010c0c3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c0c6	obj/kernel.asm	/^c010c0c6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c0c9	obj/kernel.asm	/^c010c0c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c0cc	obj/kernel.asm	/^c010c0cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c0cf	obj/kernel.asm	/^c010c0cf:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010c0d2	obj/kernel.asm	/^c010c0d2:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010c0d5	obj/kernel.asm	/^c010c0d5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c0d8	obj/kernel.asm	/^c010c0d8:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010c0db	obj/kernel.asm	/^c010c0db:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c0de	obj/kernel.asm	/^c010c0de:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c0e1	obj/kernel.asm	/^c010c0e1:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c0e4	obj/kernel.asm	/^c010c0e4:	89 10                	mov    %edx,(%eax)$/;"	l
c010c0e6	obj/kernel.asm	/^c010c0e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c0e9	obj/kernel.asm	/^c010c0e9:	8b 10                	mov    (%eax),%edx$/;"	l
c010c0eb	obj/kernel.asm	/^c010c0eb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c0ee	obj/kernel.asm	/^c010c0ee:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c0f1	obj/kernel.asm	/^c010c0f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c0f4	obj/kernel.asm	/^c010c0f4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c0f7	obj/kernel.asm	/^c010c0f7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c0fa	obj/kernel.asm	/^c010c0fa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c0fd	obj/kernel.asm	/^c010c0fd:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c100	obj/kernel.asm	/^c010c100:	89 10                	mov    %edx,(%eax)$/;"	l
c010c102	obj/kernel.asm	/^c010c102:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c105	obj/kernel.asm	/^c010c105:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010c10c	obj/kernel.asm	/^c010c10c:	00 00 00 $/;"	l
c010c10f	obj/kernel.asm	/^c010c10f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c112	obj/kernel.asm	/^c010c112:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c115	obj/kernel.asm	/^c010c115:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010c11b	obj/kernel.asm	/^c010c11b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c11e	obj/kernel.asm	/^c010c11e:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010c124	obj/kernel.asm	/^c010c124:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c127	obj/kernel.asm	/^c010c127:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c12d	obj/kernel.asm	/^c010c12d:	85 c0                	test   %eax,%eax$/;"	l
c010c12f	obj/kernel.asm	/^c010c12f:	74 12                	je     c010c143 <set_links+0x9c>$/;"	l
c010c131	obj/kernel.asm	/^c010c131:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c134	obj/kernel.asm	/^c010c134:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c13a	obj/kernel.asm	/^c010c13a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c13d	obj/kernel.asm	/^c010c13d:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010c143	obj/kernel.asm	/^c010c143:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c146	obj/kernel.asm	/^c010c146:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c149	obj/kernel.asm	/^c010c149:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c14c	obj/kernel.asm	/^c010c14c:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c152	obj/kernel.asm	/^c010c152:	a1 40 1f 15 c0       	mov    0xc0151f40,%eax$/;"	l
c010c157	obj/kernel.asm	/^c010c157:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c15a	obj/kernel.asm	/^c010c15a:	a3 40 1f 15 c0       	mov    %eax,0xc0151f40$/;"	l
c010c15f	obj/kernel.asm	/^c010c15f:	c9                   	leave  $/;"	l
c010c160	obj/kernel.asm	/^c010c160:	c3                   	ret    $/;"	l
c010c161	obj/kernel.asm	/^c010c161 <remove_links>:$/;"	l
c010c161	obj/kernel.asm	/^c010c161:	55                   	push   %ebp$/;"	l
c010c162	obj/kernel.asm	/^c010c162:	89 e5                	mov    %esp,%ebp$/;"	l
c010c164	obj/kernel.asm	/^c010c164:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c167	obj/kernel.asm	/^c010c167:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c16a	obj/kernel.asm	/^c010c16a:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010c16d	obj/kernel.asm	/^c010c16d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c170	obj/kernel.asm	/^c010c170:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c173	obj/kernel.asm	/^c010c173:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c176	obj/kernel.asm	/^c010c176:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010c179	obj/kernel.asm	/^c010c179:	8b 12                	mov    (%edx),%edx$/;"	l
c010c17b	obj/kernel.asm	/^c010c17b:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010c17e	obj/kernel.asm	/^c010c17e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c181	obj/kernel.asm	/^c010c181:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c184	obj/kernel.asm	/^c010c184:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c187	obj/kernel.asm	/^c010c187:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c18a	obj/kernel.asm	/^c010c18a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c18d	obj/kernel.asm	/^c010c18d:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010c190	obj/kernel.asm	/^c010c190:	89 10                	mov    %edx,(%eax)$/;"	l
c010c192	obj/kernel.asm	/^c010c192:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c195	obj/kernel.asm	/^c010c195:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c19b	obj/kernel.asm	/^c010c19b:	85 c0                	test   %eax,%eax$/;"	l
c010c19d	obj/kernel.asm	/^c010c19d:	74 18                	je     c010c1b7 <remove_links+0x56>$/;"	l
c010c19f	obj/kernel.asm	/^c010c19f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1a2	obj/kernel.asm	/^c010c1a2:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c1a8	obj/kernel.asm	/^c010c1a8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c1ab	obj/kernel.asm	/^c010c1ab:	8b 92 98 00 00 00    	mov    0x98(%edx),%edx$/;"	l
c010c1b1	obj/kernel.asm	/^c010c1b1:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010c1b7	obj/kernel.asm	/^c010c1b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1ba	obj/kernel.asm	/^c010c1ba:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010c1c0	obj/kernel.asm	/^c010c1c0:	85 c0                	test   %eax,%eax$/;"	l
c010c1c2	obj/kernel.asm	/^c010c1c2:	74 1a                	je     c010c1de <remove_links+0x7d>$/;"	l
c010c1c4	obj/kernel.asm	/^c010c1c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1c7	obj/kernel.asm	/^c010c1c7:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010c1cd	obj/kernel.asm	/^c010c1cd:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c1d0	obj/kernel.asm	/^c010c1d0:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010c1d6	obj/kernel.asm	/^c010c1d6:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010c1dc	obj/kernel.asm	/^c010c1dc:	eb 15                	jmp    c010c1f3 <remove_links+0x92>$/;"	l
c010c1de	obj/kernel.asm	/^c010c1de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1e1	obj/kernel.asm	/^c010c1e1:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c1e4	obj/kernel.asm	/^c010c1e4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c1e7	obj/kernel.asm	/^c010c1e7:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010c1ed	obj/kernel.asm	/^c010c1ed:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c1f3	obj/kernel.asm	/^c010c1f3:	a1 40 1f 15 c0       	mov    0xc0151f40,%eax$/;"	l
c010c1f8	obj/kernel.asm	/^c010c1f8:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010c1fb	obj/kernel.asm	/^c010c1fb:	a3 40 1f 15 c0       	mov    %eax,0xc0151f40$/;"	l
c010c200	obj/kernel.asm	/^c010c200:	c9                   	leave  $/;"	l
c010c201	obj/kernel.asm	/^c010c201:	c3                   	ret    $/;"	l
c010c202	obj/kernel.asm	/^c010c202 <get_pid>:$/;"	l
c010c202	obj/kernel.asm	/^c010c202:	55                   	push   %ebp$/;"	l
c010c203	obj/kernel.asm	/^c010c203:	89 e5                	mov    %esp,%ebp$/;"	l
c010c205	obj/kernel.asm	/^c010c205:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c208	obj/kernel.asm	/^c010c208:	c7 45 f8 fc 31 15 c0 	movl   $0xc01531fc,-0x8(%ebp)$/;"	l
c010c20f	obj/kernel.asm	/^c010c20f:	a1 84 ea 14 c0       	mov    0xc014ea84,%eax$/;"	l
c010c214	obj/kernel.asm	/^c010c214:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c217	obj/kernel.asm	/^c010c217:	a3 84 ea 14 c0       	mov    %eax,0xc014ea84$/;"	l
c010c21c	obj/kernel.asm	/^c010c21c:	a1 84 ea 14 c0       	mov    0xc014ea84,%eax$/;"	l
c010c221	obj/kernel.asm	/^c010c221:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010c226	obj/kernel.asm	/^c010c226:	7e 0c                	jle    c010c234 <get_pid+0x32>$/;"	l
c010c228	obj/kernel.asm	/^c010c228:	c7 05 84 ea 14 c0 01 	movl   $0x1,0xc014ea84$/;"	l
c010c22f	obj/kernel.asm	/^c010c22f:	00 00 00 $/;"	l
c010c232	obj/kernel.asm	/^c010c232:	eb 13                	jmp    c010c247 <get_pid+0x45>$/;"	l
c010c234	obj/kernel.asm	/^c010c234:	8b 15 84 ea 14 c0    	mov    0xc014ea84,%edx$/;"	l
c010c23a	obj/kernel.asm	/^c010c23a:	a1 88 ea 14 c0       	mov    0xc014ea88,%eax$/;"	l
c010c23f	obj/kernel.asm	/^c010c23f:	39 c2                	cmp    %eax,%edx$/;"	l
c010c241	obj/kernel.asm	/^c010c241:	0f 8c ac 00 00 00    	jl     c010c2f3 <get_pid+0xf1>$/;"	l
c010c247	obj/kernel.asm	/^c010c247:	c7 05 88 ea 14 c0 00 	movl   $0x2000,0xc014ea88$/;"	l
c010c24e	obj/kernel.asm	/^c010c24e:	20 00 00 $/;"	l
c010c251	obj/kernel.asm	/^c010c251:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c254	obj/kernel.asm	/^c010c254:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c257	obj/kernel.asm	/^c010c257:	eb 7f                	jmp    c010c2d8 <get_pid+0xd6>$/;"	l
c010c259	obj/kernel.asm	/^c010c259:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c25c	obj/kernel.asm	/^c010c25c:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
c010c25f	obj/kernel.asm	/^c010c25f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c262	obj/kernel.asm	/^c010c262:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c265	obj/kernel.asm	/^c010c265:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010c268	obj/kernel.asm	/^c010c268:	a1 84 ea 14 c0       	mov    0xc014ea84,%eax$/;"	l
c010c26d	obj/kernel.asm	/^c010c26d:	39 c2                	cmp    %eax,%edx$/;"	l
c010c26f	obj/kernel.asm	/^c010c26f:	75 3e                	jne    c010c2af <get_pid+0xad>$/;"	l
c010c271	obj/kernel.asm	/^c010c271:	a1 84 ea 14 c0       	mov    0xc014ea84,%eax$/;"	l
c010c276	obj/kernel.asm	/^c010c276:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c279	obj/kernel.asm	/^c010c279:	a3 84 ea 14 c0       	mov    %eax,0xc014ea84$/;"	l
c010c27e	obj/kernel.asm	/^c010c27e:	8b 15 84 ea 14 c0    	mov    0xc014ea84,%edx$/;"	l
c010c284	obj/kernel.asm	/^c010c284:	a1 88 ea 14 c0       	mov    0xc014ea88,%eax$/;"	l
c010c289	obj/kernel.asm	/^c010c289:	39 c2                	cmp    %eax,%edx$/;"	l
c010c28b	obj/kernel.asm	/^c010c28b:	7c 4b                	jl     c010c2d8 <get_pid+0xd6>$/;"	l
c010c28d	obj/kernel.asm	/^c010c28d:	a1 84 ea 14 c0       	mov    0xc014ea84,%eax$/;"	l
c010c292	obj/kernel.asm	/^c010c292:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010c297	obj/kernel.asm	/^c010c297:	7e 0a                	jle    c010c2a3 <get_pid+0xa1>$/;"	l
c010c299	obj/kernel.asm	/^c010c299:	c7 05 84 ea 14 c0 01 	movl   $0x1,0xc014ea84$/;"	l
c010c2a0	obj/kernel.asm	/^c010c2a0:	00 00 00 $/;"	l
c010c2a3	obj/kernel.asm	/^c010c2a3:	c7 05 88 ea 14 c0 00 	movl   $0x2000,0xc014ea88$/;"	l
c010c2aa	obj/kernel.asm	/^c010c2aa:	20 00 00 $/;"	l
c010c2ad	obj/kernel.asm	/^c010c2ad:	eb a2                	jmp    c010c251 <get_pid+0x4f>$/;"	l
c010c2af	obj/kernel.asm	/^c010c2af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c2b2	obj/kernel.asm	/^c010c2b2:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010c2b5	obj/kernel.asm	/^c010c2b5:	a1 84 ea 14 c0       	mov    0xc014ea84,%eax$/;"	l
c010c2ba	obj/kernel.asm	/^c010c2ba:	39 c2                	cmp    %eax,%edx$/;"	l
c010c2bc	obj/kernel.asm	/^c010c2bc:	7e 1a                	jle    c010c2d8 <get_pid+0xd6>$/;"	l
c010c2be	obj/kernel.asm	/^c010c2be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c2c1	obj/kernel.asm	/^c010c2c1:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010c2c4	obj/kernel.asm	/^c010c2c4:	a1 88 ea 14 c0       	mov    0xc014ea88,%eax$/;"	l
c010c2c9	obj/kernel.asm	/^c010c2c9:	39 c2                	cmp    %eax,%edx$/;"	l
c010c2cb	obj/kernel.asm	/^c010c2cb:	7d 0b                	jge    c010c2d8 <get_pid+0xd6>$/;"	l
c010c2cd	obj/kernel.asm	/^c010c2cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c2d0	obj/kernel.asm	/^c010c2d0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c2d3	obj/kernel.asm	/^c010c2d3:	a3 88 ea 14 c0       	mov    %eax,0xc014ea88$/;"	l
c010c2d8	obj/kernel.asm	/^c010c2d8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c2db	obj/kernel.asm	/^c010c2db:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c2de	obj/kernel.asm	/^c010c2de:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c2e1	obj/kernel.asm	/^c010c2e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c2e4	obj/kernel.asm	/^c010c2e4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c2e7	obj/kernel.asm	/^c010c2e7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c2ea	obj/kernel.asm	/^c010c2ea:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c010c2ed	obj/kernel.asm	/^c010c2ed:	0f 85 66 ff ff ff    	jne    c010c259 <get_pid+0x57>$/;"	l
c010c2f3	obj/kernel.asm	/^c010c2f3:	a1 84 ea 14 c0       	mov    0xc014ea84,%eax$/;"	l
c010c2f8	obj/kernel.asm	/^c010c2f8:	c9                   	leave  $/;"	l
c010c2f9	obj/kernel.asm	/^c010c2f9:	c3                   	ret    $/;"	l
c010c2fa	obj/kernel.asm	/^c010c2fa <proc_run>:$/;"	l
c010c2fa	obj/kernel.asm	/^c010c2fa:	55                   	push   %ebp$/;"	l
c010c2fb	obj/kernel.asm	/^c010c2fb:	89 e5                	mov    %esp,%ebp$/;"	l
c010c2fd	obj/kernel.asm	/^c010c2fd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c300	obj/kernel.asm	/^c010c300:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010c305	obj/kernel.asm	/^c010c305:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010c308	obj/kernel.asm	/^c010c308:	74 63                	je     c010c36d <proc_run+0x73>$/;"	l
c010c30a	obj/kernel.asm	/^c010c30a:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010c30f	obj/kernel.asm	/^c010c30f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c312	obj/kernel.asm	/^c010c312:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c315	obj/kernel.asm	/^c010c315:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c318	obj/kernel.asm	/^c010c318:	e8 4b f9 ff ff       	call   c010bc68 <__intr_save>$/;"	l
c010c31d	obj/kernel.asm	/^c010c31d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c320	obj/kernel.asm	/^c010c320:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c323	obj/kernel.asm	/^c010c323:	a3 28 ff 14 c0       	mov    %eax,0xc014ff28$/;"	l
c010c328	obj/kernel.asm	/^c010c328:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c32b	obj/kernel.asm	/^c010c32b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c32e	obj/kernel.asm	/^c010c32e:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c010c333	obj/kernel.asm	/^c010c333:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c336	obj/kernel.asm	/^c010c336:	e8 87 8c ff ff       	call   c0104fc2 <load_esp0>$/;"	l
c010c33b	obj/kernel.asm	/^c010c33b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c33e	obj/kernel.asm	/^c010c33e:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010c341	obj/kernel.asm	/^c010c341:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c344	obj/kernel.asm	/^c010c344:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c347	obj/kernel.asm	/^c010c347:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010c34a	obj/kernel.asm	/^c010c34a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c34d	obj/kernel.asm	/^c010c34d:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c010c350	obj/kernel.asm	/^c010c350:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c353	obj/kernel.asm	/^c010c353:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010c356	obj/kernel.asm	/^c010c356:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010c35a	obj/kernel.asm	/^c010c35a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c35d	obj/kernel.asm	/^c010c35d:	e8 60 1c 00 00       	call   c010dfc2 <switch_to>$/;"	l
c010c362	obj/kernel.asm	/^c010c362:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c365	obj/kernel.asm	/^c010c365:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c368	obj/kernel.asm	/^c010c368:	e8 25 f9 ff ff       	call   c010bc92 <__intr_restore>$/;"	l
c010c36d	obj/kernel.asm	/^c010c36d:	c9                   	leave  $/;"	l
c010c36e	obj/kernel.asm	/^c010c36e:	c3                   	ret    $/;"	l
c010c36f	obj/kernel.asm	/^c010c36f <forkret>:$/;"	l
c010c36f	obj/kernel.asm	/^c010c36f:	55                   	push   %ebp$/;"	l
c010c370	obj/kernel.asm	/^c010c370:	89 e5                	mov    %esp,%ebp$/;"	l
c010c372	obj/kernel.asm	/^c010c372:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c375	obj/kernel.asm	/^c010c375:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010c37a	obj/kernel.asm	/^c010c37a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c37d	obj/kernel.asm	/^c010c37d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c380	obj/kernel.asm	/^c010c380:	e8 9d 67 ff ff       	call   c0102b22 <forkrets>$/;"	l
c010c385	obj/kernel.asm	/^c010c385:	c9                   	leave  $/;"	l
c010c386	obj/kernel.asm	/^c010c386:	c3                   	ret    $/;"	l
c010c387	obj/kernel.asm	/^c010c387 <hash_proc>:$/;"	l
c010c387	obj/kernel.asm	/^c010c387:	55                   	push   %ebp$/;"	l
c010c388	obj/kernel.asm	/^c010c388:	89 e5                	mov    %esp,%ebp$/;"	l
c010c38a	obj/kernel.asm	/^c010c38a:	53                   	push   %ebx$/;"	l
c010c38b	obj/kernel.asm	/^c010c38b:	83 ec 34             	sub    $0x34,%esp$/;"	l
c010c38e	obj/kernel.asm	/^c010c38e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c391	obj/kernel.asm	/^c010c391:	8d 98 84 00 00 00    	lea    0x84(%eax),%ebx$/;"	l
c010c397	obj/kernel.asm	/^c010c397:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c39a	obj/kernel.asm	/^c010c39a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c39d	obj/kernel.asm	/^c010c39d:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c010c3a4	obj/kernel.asm	/^c010c3a4:	00 $/;"	l
c010c3a5	obj/kernel.asm	/^c010c3a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c3a8	obj/kernel.asm	/^c010c3a8:	e8 12 85 00 00       	call   c01148bf <hash32>$/;"	l
c010c3ad	obj/kernel.asm	/^c010c3ad:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010c3b0	obj/kernel.asm	/^c010c3b0:	05 40 ff 14 c0       	add    $0xc014ff40,%eax$/;"	l
c010c3b5	obj/kernel.asm	/^c010c3b5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c3b8	obj/kernel.asm	/^c010c3b8:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c010c3bb	obj/kernel.asm	/^c010c3bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c3be	obj/kernel.asm	/^c010c3be:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c3c1	obj/kernel.asm	/^c010c3c1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c3c4	obj/kernel.asm	/^c010c3c4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c3c7	obj/kernel.asm	/^c010c3c7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c3ca	obj/kernel.asm	/^c010c3ca:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c3cd	obj/kernel.asm	/^c010c3cd:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c3d0	obj/kernel.asm	/^c010c3d0:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010c3d3	obj/kernel.asm	/^c010c3d3:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c3d6	obj/kernel.asm	/^c010c3d6:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c010c3d9	obj/kernel.asm	/^c010c3d9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010c3dc	obj/kernel.asm	/^c010c3dc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c3df	obj/kernel.asm	/^c010c3df:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c3e2	obj/kernel.asm	/^c010c3e2:	89 10                	mov    %edx,(%eax)$/;"	l
c010c3e4	obj/kernel.asm	/^c010c3e4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c3e7	obj/kernel.asm	/^c010c3e7:	8b 10                	mov    (%eax),%edx$/;"	l
c010c3e9	obj/kernel.asm	/^c010c3e9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010c3ec	obj/kernel.asm	/^c010c3ec:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c3ef	obj/kernel.asm	/^c010c3ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c3f2	obj/kernel.asm	/^c010c3f2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010c3f5	obj/kernel.asm	/^c010c3f5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c3f8	obj/kernel.asm	/^c010c3f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c3fb	obj/kernel.asm	/^c010c3fb:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010c3fe	obj/kernel.asm	/^c010c3fe:	89 10                	mov    %edx,(%eax)$/;"	l
c010c400	obj/kernel.asm	/^c010c400:	83 c4 34             	add    $0x34,%esp$/;"	l
c010c403	obj/kernel.asm	/^c010c403:	5b                   	pop    %ebx$/;"	l
c010c404	obj/kernel.asm	/^c010c404:	5d                   	pop    %ebp$/;"	l
c010c405	obj/kernel.asm	/^c010c405:	c3                   	ret    $/;"	l
c010c406	obj/kernel.asm	/^c010c406 <unhash_proc>:$/;"	l
c010c406	obj/kernel.asm	/^c010c406:	55                   	push   %ebp$/;"	l
c010c407	obj/kernel.asm	/^c010c407:	89 e5                	mov    %esp,%ebp$/;"	l
c010c409	obj/kernel.asm	/^c010c409:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c40c	obj/kernel.asm	/^c010c40c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c40f	obj/kernel.asm	/^c010c40f:	05 84 00 00 00       	add    $0x84,%eax$/;"	l
c010c414	obj/kernel.asm	/^c010c414:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c417	obj/kernel.asm	/^c010c417:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c41a	obj/kernel.asm	/^c010c41a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c41d	obj/kernel.asm	/^c010c41d:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010c420	obj/kernel.asm	/^c010c420:	8b 12                	mov    (%edx),%edx$/;"	l
c010c422	obj/kernel.asm	/^c010c422:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010c425	obj/kernel.asm	/^c010c425:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c428	obj/kernel.asm	/^c010c428:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c42b	obj/kernel.asm	/^c010c42b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c42e	obj/kernel.asm	/^c010c42e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c431	obj/kernel.asm	/^c010c431:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c434	obj/kernel.asm	/^c010c434:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010c437	obj/kernel.asm	/^c010c437:	89 10                	mov    %edx,(%eax)$/;"	l
c010c439	obj/kernel.asm	/^c010c439:	c9                   	leave  $/;"	l
c010c43a	obj/kernel.asm	/^c010c43a:	c3                   	ret    $/;"	l
c010c43b	obj/kernel.asm	/^c010c43b <find_proc>:$/;"	l
c010c43b	obj/kernel.asm	/^c010c43b:	55                   	push   %ebp$/;"	l
c010c43c	obj/kernel.asm	/^c010c43c:	89 e5                	mov    %esp,%ebp$/;"	l
c010c43e	obj/kernel.asm	/^c010c43e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c441	obj/kernel.asm	/^c010c441:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010c445	obj/kernel.asm	/^c010c445:	7e 61                	jle    c010c4a8 <find_proc+0x6d>$/;"	l
c010c447	obj/kernel.asm	/^c010c447:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c010c44e	obj/kernel.asm	/^c010c44e:	7f 58                	jg     c010c4a8 <find_proc+0x6d>$/;"	l
c010c450	obj/kernel.asm	/^c010c450:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c453	obj/kernel.asm	/^c010c453:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c010c45a	obj/kernel.asm	/^c010c45a:	00 $/;"	l
c010c45b	obj/kernel.asm	/^c010c45b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c45e	obj/kernel.asm	/^c010c45e:	e8 5c 84 00 00       	call   c01148bf <hash32>$/;"	l
c010c463	obj/kernel.asm	/^c010c463:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010c466	obj/kernel.asm	/^c010c466:	05 40 ff 14 c0       	add    $0xc014ff40,%eax$/;"	l
c010c46b	obj/kernel.asm	/^c010c46b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c46e	obj/kernel.asm	/^c010c46e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c471	obj/kernel.asm	/^c010c471:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c474	obj/kernel.asm	/^c010c474:	eb 1b                	jmp    c010c491 <find_proc+0x56>$/;"	l
c010c476	obj/kernel.asm	/^c010c476:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c479	obj/kernel.asm	/^c010c479:	2d 84 00 00 00       	sub    $0x84,%eax$/;"	l
c010c47e	obj/kernel.asm	/^c010c47e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c481	obj/kernel.asm	/^c010c481:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c484	obj/kernel.asm	/^c010c484:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c487	obj/kernel.asm	/^c010c487:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010c48a	obj/kernel.asm	/^c010c48a:	75 05                	jne    c010c491 <find_proc+0x56>$/;"	l
c010c48c	obj/kernel.asm	/^c010c48c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c48f	obj/kernel.asm	/^c010c48f:	eb 1c                	jmp    c010c4ad <find_proc+0x72>$/;"	l
c010c491	obj/kernel.asm	/^c010c491:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c494	obj/kernel.asm	/^c010c494:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c497	obj/kernel.asm	/^c010c497:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c49a	obj/kernel.asm	/^c010c49a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c49d	obj/kernel.asm	/^c010c49d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c4a0	obj/kernel.asm	/^c010c4a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c4a3	obj/kernel.asm	/^c010c4a3:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010c4a6	obj/kernel.asm	/^c010c4a6:	75 ce                	jne    c010c476 <find_proc+0x3b>$/;"	l
c010c4a8	obj/kernel.asm	/^c010c4a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c4ad	obj/kernel.asm	/^c010c4ad:	c9                   	leave  $/;"	l
c010c4ae	obj/kernel.asm	/^c010c4ae:	c3                   	ret    $/;"	l
c010c4af	obj/kernel.asm	/^c010c4af <kernel_thread>:$/;"	l
c010c4af	obj/kernel.asm	/^c010c4af:	55                   	push   %ebp$/;"	l
c010c4b0	obj/kernel.asm	/^c010c4b0:	89 e5                	mov    %esp,%ebp$/;"	l
c010c4b2	obj/kernel.asm	/^c010c4b2:	83 ec 68             	sub    $0x68,%esp$/;"	l
c010c4b5	obj/kernel.asm	/^c010c4b5:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010c4bc	obj/kernel.asm	/^c010c4bc:	00 $/;"	l
c010c4bd	obj/kernel.asm	/^c010c4bd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c4c4	obj/kernel.asm	/^c010c4c4:	00 $/;"	l
c010c4c5	obj/kernel.asm	/^c010c4c5:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010c4c8	obj/kernel.asm	/^c010c4c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c4cb	obj/kernel.asm	/^c010c4cb:	e8 49 8f 00 00       	call   c0115419 <memset>$/;"	l
c010c4d0	obj/kernel.asm	/^c010c4d0:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c010c4d6	obj/kernel.asm	/^c010c4d6:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c010c4dc	obj/kernel.asm	/^c010c4dc:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010c4e0	obj/kernel.asm	/^c010c4e0:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c010c4e4	obj/kernel.asm	/^c010c4e4:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c010c4e8	obj/kernel.asm	/^c010c4e8:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c010c4ec	obj/kernel.asm	/^c010c4ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c4ef	obj/kernel.asm	/^c010c4ef:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010c4f2	obj/kernel.asm	/^c010c4f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c4f5	obj/kernel.asm	/^c010c4f5:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010c4f8	obj/kernel.asm	/^c010c4f8:	b8 26 bc 10 c0       	mov    $0xc010bc26,%eax$/;"	l
c010c4fd	obj/kernel.asm	/^c010c4fd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c500	obj/kernel.asm	/^c010c500:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c503	obj/kernel.asm	/^c010c503:	80 cc 01             	or     $0x1,%ah$/;"	l
c010c506	obj/kernel.asm	/^c010c506:	89 c2                	mov    %eax,%edx$/;"	l
c010c508	obj/kernel.asm	/^c010c508:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010c50b	obj/kernel.asm	/^c010c50b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010c50f	obj/kernel.asm	/^c010c50f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c516	obj/kernel.asm	/^c010c516:	00 $/;"	l
c010c517	obj/kernel.asm	/^c010c517:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c51a	obj/kernel.asm	/^c010c51a:	e8 0e 04 00 00       	call   c010c92d <do_fork>$/;"	l
c010c51f	obj/kernel.asm	/^c010c51f:	c9                   	leave  $/;"	l
c010c520	obj/kernel.asm	/^c010c520:	c3                   	ret    $/;"	l
c010c521	obj/kernel.asm	/^c010c521 <setup_kstack>:$/;"	l
c010c521	obj/kernel.asm	/^c010c521:	55                   	push   %ebp$/;"	l
c010c522	obj/kernel.asm	/^c010c522:	89 e5                	mov    %esp,%ebp$/;"	l
c010c524	obj/kernel.asm	/^c010c524:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c527	obj/kernel.asm	/^c010c527:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c010c52e	obj/kernel.asm	/^c010c52e:	e8 dd 8b ff ff       	call   c0105110 <alloc_pages>$/;"	l
c010c533	obj/kernel.asm	/^c010c533:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c536	obj/kernel.asm	/^c010c536:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c53a	obj/kernel.asm	/^c010c53a:	74 1a                	je     c010c556 <setup_kstack+0x35>$/;"	l
c010c53c	obj/kernel.asm	/^c010c53c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c53f	obj/kernel.asm	/^c010c53f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c542	obj/kernel.asm	/^c010c542:	e8 cd f7 ff ff       	call   c010bd14 <page2kva>$/;"	l
c010c547	obj/kernel.asm	/^c010c547:	89 c2                	mov    %eax,%edx$/;"	l
c010c549	obj/kernel.asm	/^c010c549:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c54c	obj/kernel.asm	/^c010c54c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010c54f	obj/kernel.asm	/^c010c54f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c554	obj/kernel.asm	/^c010c554:	eb 05                	jmp    c010c55b <setup_kstack+0x3a>$/;"	l
c010c556	obj/kernel.asm	/^c010c556:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010c55b	obj/kernel.asm	/^c010c55b:	c9                   	leave  $/;"	l
c010c55c	obj/kernel.asm	/^c010c55c:	c3                   	ret    $/;"	l
c010c55d	obj/kernel.asm	/^c010c55d <put_kstack>:$/;"	l
c010c55d	obj/kernel.asm	/^c010c55d:	55                   	push   %ebp$/;"	l
c010c55e	obj/kernel.asm	/^c010c55e:	89 e5                	mov    %esp,%ebp$/;"	l
c010c560	obj/kernel.asm	/^c010c560:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c563	obj/kernel.asm	/^c010c563:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c566	obj/kernel.asm	/^c010c566:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c569	obj/kernel.asm	/^c010c569:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c56c	obj/kernel.asm	/^c010c56c:	e8 f7 f7 ff ff       	call   c010bd68 <kva2page>$/;"	l
c010c571	obj/kernel.asm	/^c010c571:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c010c578	obj/kernel.asm	/^c010c578:	00 $/;"	l
c010c579	obj/kernel.asm	/^c010c579:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c57c	obj/kernel.asm	/^c010c57c:	e8 fa 8b ff ff       	call   c010517b <free_pages>$/;"	l
c010c581	obj/kernel.asm	/^c010c581:	c9                   	leave  $/;"	l
c010c582	obj/kernel.asm	/^c010c582:	c3                   	ret    $/;"	l
c010c583	obj/kernel.asm	/^c010c583 <setup_pgdir>:$/;"	l
c010c583	obj/kernel.asm	/^c010c583:	55                   	push   %ebp$/;"	l
c010c584	obj/kernel.asm	/^c010c584:	89 e5                	mov    %esp,%ebp$/;"	l
c010c586	obj/kernel.asm	/^c010c586:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c589	obj/kernel.asm	/^c010c589:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010c590	obj/kernel.asm	/^c010c590:	e8 7b 8b ff ff       	call   c0105110 <alloc_pages>$/;"	l
c010c595	obj/kernel.asm	/^c010c595:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c598	obj/kernel.asm	/^c010c598:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c59c	obj/kernel.asm	/^c010c59c:	75 0a                	jne    c010c5a8 <setup_pgdir+0x25>$/;"	l
c010c59e	obj/kernel.asm	/^c010c59e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010c5a3	obj/kernel.asm	/^c010c5a3:	e9 80 00 00 00       	jmp    c010c628 <setup_pgdir+0xa5>$/;"	l
c010c5a8	obj/kernel.asm	/^c010c5a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c5ab	obj/kernel.asm	/^c010c5ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c5ae	obj/kernel.asm	/^c010c5ae:	e8 61 f7 ff ff       	call   c010bd14 <page2kva>$/;"	l
c010c5b3	obj/kernel.asm	/^c010c5b3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c5b6	obj/kernel.asm	/^c010c5b6:	a1 84 fe 14 c0       	mov    0xc014fe84,%eax$/;"	l
c010c5bb	obj/kernel.asm	/^c010c5bb:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c010c5c2	obj/kernel.asm	/^c010c5c2:	00 $/;"	l
c010c5c3	obj/kernel.asm	/^c010c5c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c5c7	obj/kernel.asm	/^c010c5c7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c5ca	obj/kernel.asm	/^c010c5ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c5cd	obj/kernel.asm	/^c010c5cd:	e8 29 8f 00 00       	call   c01154fb <memcpy>$/;"	l
c010c5d2	obj/kernel.asm	/^c010c5d2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c5d5	obj/kernel.asm	/^c010c5d5:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c010c5db	obj/kernel.asm	/^c010c5db:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c5de	obj/kernel.asm	/^c010c5de:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c5e1	obj/kernel.asm	/^c010c5e1:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c010c5e8	obj/kernel.asm	/^c010c5e8:	77 23                	ja     c010c60d <setup_pgdir+0x8a>$/;"	l
c010c5ea	obj/kernel.asm	/^c010c5ea:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c5ed	obj/kernel.asm	/^c010c5ed:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010c5f1	obj/kernel.asm	/^c010c5f1:	c7 44 24 08 44 7e 11 	movl   $0xc0117e44,0x8(%esp)$/;"	l
c010c5f8	obj/kernel.asm	/^c010c5f8:	c0 $/;"	l
c010c5f9	obj/kernel.asm	/^c010c5f9:	c7 44 24 04 46 01 00 	movl   $0x146,0x4(%esp)$/;"	l
c010c600	obj/kernel.asm	/^c010c600:	00 $/;"	l
c010c601	obj/kernel.asm	/^c010c601:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010c608	obj/kernel.asm	/^c010c608:	e8 bb 48 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010c60d	obj/kernel.asm	/^c010c60d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c610	obj/kernel.asm	/^c010c610:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010c615	obj/kernel.asm	/^c010c615:	83 c8 03             	or     $0x3,%eax$/;"	l
c010c618	obj/kernel.asm	/^c010c618:	89 02                	mov    %eax,(%edx)$/;"	l
c010c61a	obj/kernel.asm	/^c010c61a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c61d	obj/kernel.asm	/^c010c61d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010c620	obj/kernel.asm	/^c010c620:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010c623	obj/kernel.asm	/^c010c623:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c628	obj/kernel.asm	/^c010c628:	c9                   	leave  $/;"	l
c010c629	obj/kernel.asm	/^c010c629:	c3                   	ret    $/;"	l
c010c62a	obj/kernel.asm	/^c010c62a <put_pgdir>:$/;"	l
c010c62a	obj/kernel.asm	/^c010c62a:	55                   	push   %ebp$/;"	l
c010c62b	obj/kernel.asm	/^c010c62b:	89 e5                	mov    %esp,%ebp$/;"	l
c010c62d	obj/kernel.asm	/^c010c62d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c630	obj/kernel.asm	/^c010c630:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c633	obj/kernel.asm	/^c010c633:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c636	obj/kernel.asm	/^c010c636:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c639	obj/kernel.asm	/^c010c639:	e8 2a f7 ff ff       	call   c010bd68 <kva2page>$/;"	l
c010c63e	obj/kernel.asm	/^c010c63e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010c645	obj/kernel.asm	/^c010c645:	00 $/;"	l
c010c646	obj/kernel.asm	/^c010c646:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c649	obj/kernel.asm	/^c010c649:	e8 2d 8b ff ff       	call   c010517b <free_pages>$/;"	l
c010c64e	obj/kernel.asm	/^c010c64e:	c9                   	leave  $/;"	l
c010c64f	obj/kernel.asm	/^c010c64f:	c3                   	ret    $/;"	l
c010c650	obj/kernel.asm	/^c010c650 <copy_mm>:$/;"	l
c010c650	obj/kernel.asm	/^c010c650:	55                   	push   %ebp$/;"	l
c010c651	obj/kernel.asm	/^c010c651:	89 e5                	mov    %esp,%ebp$/;"	l
c010c653	obj/kernel.asm	/^c010c653:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c656	obj/kernel.asm	/^c010c656:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010c65b	obj/kernel.asm	/^c010c65b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c65e	obj/kernel.asm	/^c010c65e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c661	obj/kernel.asm	/^c010c661:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c665	obj/kernel.asm	/^c010c665:	75 0a                	jne    c010c671 <copy_mm+0x21>$/;"	l
c010c667	obj/kernel.asm	/^c010c667:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c66c	obj/kernel.asm	/^c010c66c:	e9 f9 00 00 00       	jmp    c010c76a <copy_mm+0x11a>$/;"	l
c010c671	obj/kernel.asm	/^c010c671:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c674	obj/kernel.asm	/^c010c674:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c010c679	obj/kernel.asm	/^c010c679:	85 c0                	test   %eax,%eax$/;"	l
c010c67b	obj/kernel.asm	/^c010c67b:	74 08                	je     c010c685 <copy_mm+0x35>$/;"	l
c010c67d	obj/kernel.asm	/^c010c67d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c680	obj/kernel.asm	/^c010c680:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c683	obj/kernel.asm	/^c010c683:	eb 78                	jmp    c010c6fd <copy_mm+0xad>$/;"	l
c010c685	obj/kernel.asm	/^c010c685:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010c68c	obj/kernel.asm	/^c010c68c:	e8 43 b8 ff ff       	call   c0107ed4 <mm_create>$/;"	l
c010c691	obj/kernel.asm	/^c010c691:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c694	obj/kernel.asm	/^c010c694:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c698	obj/kernel.asm	/^c010c698:	75 05                	jne    c010c69f <copy_mm+0x4f>$/;"	l
c010c69a	obj/kernel.asm	/^c010c69a:	e9 c8 00 00 00       	jmp    c010c767 <copy_mm+0x117>$/;"	l
c010c69f	obj/kernel.asm	/^c010c69f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c6a2	obj/kernel.asm	/^c010c6a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6a5	obj/kernel.asm	/^c010c6a5:	e8 d9 fe ff ff       	call   c010c583 <setup_pgdir>$/;"	l
c010c6aa	obj/kernel.asm	/^c010c6aa:	85 c0                	test   %eax,%eax$/;"	l
c010c6ac	obj/kernel.asm	/^c010c6ac:	74 05                	je     c010c6b3 <copy_mm+0x63>$/;"	l
c010c6ae	obj/kernel.asm	/^c010c6ae:	e9 a9 00 00 00       	jmp    c010c75c <copy_mm+0x10c>$/;"	l
c010c6b3	obj/kernel.asm	/^c010c6b3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c6b6	obj/kernel.asm	/^c010c6b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6b9	obj/kernel.asm	/^c010c6b9:	e8 28 f7 ff ff       	call   c010bde6 <lock_mm>$/;"	l
c010c6be	obj/kernel.asm	/^c010c6be:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c6c1	obj/kernel.asm	/^c010c6c1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c6c5	obj/kernel.asm	/^c010c6c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c6c8	obj/kernel.asm	/^c010c6c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6cb	obj/kernel.asm	/^c010c6cb:	e8 27 bd ff ff       	call   c01083f7 <dup_mmap>$/;"	l
c010c6d0	obj/kernel.asm	/^c010c6d0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c6d3	obj/kernel.asm	/^c010c6d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c6d6	obj/kernel.asm	/^c010c6d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6d9	obj/kernel.asm	/^c010c6d9:	e8 3b f7 ff ff       	call   c010be19 <unlock_mm>$/;"	l
c010c6de	obj/kernel.asm	/^c010c6de:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c6e2	obj/kernel.asm	/^c010c6e2:	74 19                	je     c010c6fd <copy_mm+0xad>$/;"	l
c010c6e4	obj/kernel.asm	/^c010c6e4:	90                   	nop$/;"	l
c010c6e5	obj/kernel.asm	/^c010c6e5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c6e8	obj/kernel.asm	/^c010c6e8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6eb	obj/kernel.asm	/^c010c6eb:	e8 08 be ff ff       	call   c01084f8 <exit_mmap>$/;"	l
c010c6f0	obj/kernel.asm	/^c010c6f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c6f3	obj/kernel.asm	/^c010c6f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6f6	obj/kernel.asm	/^c010c6f6:	e8 2f ff ff ff       	call   c010c62a <put_pgdir>$/;"	l
c010c6fb	obj/kernel.asm	/^c010c6fb:	eb 5f                	jmp    c010c75c <copy_mm+0x10c>$/;"	l
c010c6fd	obj/kernel.asm	/^c010c6fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c700	obj/kernel.asm	/^c010c700:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c703	obj/kernel.asm	/^c010c703:	e8 aa f6 ff ff       	call   c010bdb2 <mm_count_inc>$/;"	l
c010c708	obj/kernel.asm	/^c010c708:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c70b	obj/kernel.asm	/^c010c70b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c70e	obj/kernel.asm	/^c010c70e:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010c711	obj/kernel.asm	/^c010c711:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c714	obj/kernel.asm	/^c010c714:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c717	obj/kernel.asm	/^c010c717:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c71a	obj/kernel.asm	/^c010c71a:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c010c721	obj/kernel.asm	/^c010c721:	77 23                	ja     c010c746 <copy_mm+0xf6>$/;"	l
c010c723	obj/kernel.asm	/^c010c723:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c726	obj/kernel.asm	/^c010c726:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010c72a	obj/kernel.asm	/^c010c72a:	c7 44 24 08 44 7e 11 	movl   $0xc0117e44,0x8(%esp)$/;"	l
c010c731	obj/kernel.asm	/^c010c731:	c0 $/;"	l
c010c732	obj/kernel.asm	/^c010c732:	c7 44 24 04 75 01 00 	movl   $0x175,0x4(%esp)$/;"	l
c010c739	obj/kernel.asm	/^c010c739:	00 $/;"	l
c010c73a	obj/kernel.asm	/^c010c73a:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010c741	obj/kernel.asm	/^c010c741:	e8 82 47 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010c746	obj/kernel.asm	/^c010c746:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c749	obj/kernel.asm	/^c010c749:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c010c74f	obj/kernel.asm	/^c010c74f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c752	obj/kernel.asm	/^c010c752:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010c755	obj/kernel.asm	/^c010c755:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c75a	obj/kernel.asm	/^c010c75a:	eb 0e                	jmp    c010c76a <copy_mm+0x11a>$/;"	l
c010c75c	obj/kernel.asm	/^c010c75c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c75f	obj/kernel.asm	/^c010c75f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c762	obj/kernel.asm	/^c010c762:	e8 d2 ba ff ff       	call   c0108239 <mm_destroy>$/;"	l
c010c767	obj/kernel.asm	/^c010c767:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c76a	obj/kernel.asm	/^c010c76a:	c9                   	leave  $/;"	l
c010c76b	obj/kernel.asm	/^c010c76b:	c3                   	ret    $/;"	l
c010c76c	obj/kernel.asm	/^c010c76c <copy_thread>:$/;"	l
c010c76c	obj/kernel.asm	/^c010c76c:	55                   	push   %ebp$/;"	l
c010c76d	obj/kernel.asm	/^c010c76d:	89 e5                	mov    %esp,%ebp$/;"	l
c010c76f	obj/kernel.asm	/^c010c76f:	57                   	push   %edi$/;"	l
c010c770	obj/kernel.asm	/^c010c770:	56                   	push   %esi$/;"	l
c010c771	obj/kernel.asm	/^c010c771:	53                   	push   %ebx$/;"	l
c010c772	obj/kernel.asm	/^c010c772:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c775	obj/kernel.asm	/^c010c775:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c778	obj/kernel.asm	/^c010c778:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c010c77d	obj/kernel.asm	/^c010c77d:	89 c2                	mov    %eax,%edx$/;"	l
c010c77f	obj/kernel.asm	/^c010c77f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c782	obj/kernel.asm	/^c010c782:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010c785	obj/kernel.asm	/^c010c785:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c788	obj/kernel.asm	/^c010c788:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c78b	obj/kernel.asm	/^c010c78b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010c78e	obj/kernel.asm	/^c010c78e:	bb 4c 00 00 00       	mov    $0x4c,%ebx$/;"	l
c010c793	obj/kernel.asm	/^c010c793:	89 c1                	mov    %eax,%ecx$/;"	l
c010c795	obj/kernel.asm	/^c010c795:	83 e1 01             	and    $0x1,%ecx$/;"	l
c010c798	obj/kernel.asm	/^c010c798:	85 c9                	test   %ecx,%ecx$/;"	l
c010c79a	obj/kernel.asm	/^c010c79a:	74 0e                	je     c010c7aa <copy_thread+0x3e>$/;"	l
c010c79c	obj/kernel.asm	/^c010c79c:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
c010c79f	obj/kernel.asm	/^c010c79f:	88 08                	mov    %cl,(%eax)$/;"	l
c010c7a1	obj/kernel.asm	/^c010c7a1:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c7a4	obj/kernel.asm	/^c010c7a4:	83 c2 01             	add    $0x1,%edx$/;"	l
c010c7a7	obj/kernel.asm	/^c010c7a7:	83 eb 01             	sub    $0x1,%ebx$/;"	l
c010c7aa	obj/kernel.asm	/^c010c7aa:	89 c1                	mov    %eax,%ecx$/;"	l
c010c7ac	obj/kernel.asm	/^c010c7ac:	83 e1 02             	and    $0x2,%ecx$/;"	l
c010c7af	obj/kernel.asm	/^c010c7af:	85 c9                	test   %ecx,%ecx$/;"	l
c010c7b1	obj/kernel.asm	/^c010c7b1:	74 0f                	je     c010c7c2 <copy_thread+0x56>$/;"	l
c010c7b3	obj/kernel.asm	/^c010c7b3:	0f b7 0a             	movzwl (%edx),%ecx$/;"	l
c010c7b6	obj/kernel.asm	/^c010c7b6:	66 89 08             	mov    %cx,(%eax)$/;"	l
c010c7b9	obj/kernel.asm	/^c010c7b9:	83 c0 02             	add    $0x2,%eax$/;"	l
c010c7bc	obj/kernel.asm	/^c010c7bc:	83 c2 02             	add    $0x2,%edx$/;"	l
c010c7bf	obj/kernel.asm	/^c010c7bf:	83 eb 02             	sub    $0x2,%ebx$/;"	l
c010c7c2	obj/kernel.asm	/^c010c7c2:	89 d9                	mov    %ebx,%ecx$/;"	l
c010c7c4	obj/kernel.asm	/^c010c7c4:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
c010c7c7	obj/kernel.asm	/^c010c7c7:	89 c7                	mov    %eax,%edi$/;"	l
c010c7c9	obj/kernel.asm	/^c010c7c9:	89 d6                	mov    %edx,%esi$/;"	l
c010c7cb	obj/kernel.asm	/^c010c7cb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010c7cd	obj/kernel.asm	/^c010c7cd:	89 f2                	mov    %esi,%edx$/;"	l
c010c7cf	obj/kernel.asm	/^c010c7cf:	89 f8                	mov    %edi,%eax$/;"	l
c010c7d1	obj/kernel.asm	/^c010c7d1:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
c010c7d6	obj/kernel.asm	/^c010c7d6:	89 de                	mov    %ebx,%esi$/;"	l
c010c7d8	obj/kernel.asm	/^c010c7d8:	83 e6 02             	and    $0x2,%esi$/;"	l
c010c7db	obj/kernel.asm	/^c010c7db:	85 f6                	test   %esi,%esi$/;"	l
c010c7dd	obj/kernel.asm	/^c010c7dd:	74 0b                	je     c010c7ea <copy_thread+0x7e>$/;"	l
c010c7df	obj/kernel.asm	/^c010c7df:	0f b7 34 0a          	movzwl (%edx,%ecx,1),%esi$/;"	l
c010c7e3	obj/kernel.asm	/^c010c7e3:	66 89 34 08          	mov    %si,(%eax,%ecx,1)$/;"	l
c010c7e7	obj/kernel.asm	/^c010c7e7:	83 c1 02             	add    $0x2,%ecx$/;"	l
c010c7ea	obj/kernel.asm	/^c010c7ea:	83 e3 01             	and    $0x1,%ebx$/;"	l
c010c7ed	obj/kernel.asm	/^c010c7ed:	85 db                	test   %ebx,%ebx$/;"	l
c010c7ef	obj/kernel.asm	/^c010c7ef:	74 07                	je     c010c7f8 <copy_thread+0x8c>$/;"	l
c010c7f1	obj/kernel.asm	/^c010c7f1:	0f b6 14 0a          	movzbl (%edx,%ecx,1),%edx$/;"	l
c010c7f5	obj/kernel.asm	/^c010c7f5:	88 14 08             	mov    %dl,(%eax,%ecx,1)$/;"	l
c010c7f8	obj/kernel.asm	/^c010c7f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c7fb	obj/kernel.asm	/^c010c7fb:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c7fe	obj/kernel.asm	/^c010c7fe:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c010c805	obj/kernel.asm	/^c010c805:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c808	obj/kernel.asm	/^c010c808:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c80b	obj/kernel.asm	/^c010c80b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010c80e	obj/kernel.asm	/^c010c80e:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010c811	obj/kernel.asm	/^c010c811:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c814	obj/kernel.asm	/^c010c814:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c817	obj/kernel.asm	/^c010c817:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c81a	obj/kernel.asm	/^c010c81a:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c010c81d	obj/kernel.asm	/^c010c81d:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c010c820	obj/kernel.asm	/^c010c820:	80 ce 02             	or     $0x2,%dh$/;"	l
c010c823	obj/kernel.asm	/^c010c823:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010c826	obj/kernel.asm	/^c010c826:	ba 6f c3 10 c0       	mov    $0xc010c36f,%edx$/;"	l
c010c82b	obj/kernel.asm	/^c010c82b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c82e	obj/kernel.asm	/^c010c82e:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010c831	obj/kernel.asm	/^c010c831:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c834	obj/kernel.asm	/^c010c834:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c837	obj/kernel.asm	/^c010c837:	89 c2                	mov    %eax,%edx$/;"	l
c010c839	obj/kernel.asm	/^c010c839:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c83c	obj/kernel.asm	/^c010c83c:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c010c83f	obj/kernel.asm	/^c010c83f:	5b                   	pop    %ebx$/;"	l
c010c840	obj/kernel.asm	/^c010c840:	5e                   	pop    %esi$/;"	l
c010c841	obj/kernel.asm	/^c010c841:	5f                   	pop    %edi$/;"	l
c010c842	obj/kernel.asm	/^c010c842:	5d                   	pop    %ebp$/;"	l
c010c843	obj/kernel.asm	/^c010c843:	c3                   	ret    $/;"	l
c010c844	obj/kernel.asm	/^c010c844 <copy_files>:$/;"	l
c010c844	obj/kernel.asm	/^c010c844:	55                   	push   %ebp$/;"	l
c010c845	obj/kernel.asm	/^c010c845:	89 e5                	mov    %esp,%ebp$/;"	l
c010c847	obj/kernel.asm	/^c010c847:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c84a	obj/kernel.asm	/^c010c84a:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010c84f	obj/kernel.asm	/^c010c84f:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010c855	obj/kernel.asm	/^c010c855:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c858	obj/kernel.asm	/^c010c858:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c85c	obj/kernel.asm	/^c010c85c:	75 24                	jne    c010c882 <copy_files+0x3e>$/;"	l
c010c85e	obj/kernel.asm	/^c010c85e:	c7 44 24 0c 7c 7e 11 	movl   $0xc0117e7c,0xc(%esp)$/;"	l
c010c865	obj/kernel.asm	/^c010c865:	c0 $/;"	l
c010c866	obj/kernel.asm	/^c010c866:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010c86d	obj/kernel.asm	/^c010c86d:	c0 $/;"	l
c010c86e	obj/kernel.asm	/^c010c86e:	c7 44 24 04 93 01 00 	movl   $0x193,0x4(%esp)$/;"	l
c010c875	obj/kernel.asm	/^c010c875:	00 $/;"	l
c010c876	obj/kernel.asm	/^c010c876:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010c87d	obj/kernel.asm	/^c010c87d:	e8 46 46 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010c882	obj/kernel.asm	/^c010c882:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c885	obj/kernel.asm	/^c010c885:	25 00 08 00 00       	and    $0x800,%eax$/;"	l
c010c88a	obj/kernel.asm	/^c010c88a:	85 c0                	test   %eax,%eax$/;"	l
c010c88c	obj/kernel.asm	/^c010c88c:	74 08                	je     c010c896 <copy_files+0x52>$/;"	l
c010c88e	obj/kernel.asm	/^c010c88e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c891	obj/kernel.asm	/^c010c891:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c894	obj/kernel.asm	/^c010c894:	eb 40                	jmp    c010c8d6 <copy_files+0x92>$/;"	l
c010c896	obj/kernel.asm	/^c010c896:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010c89d	obj/kernel.asm	/^c010c89d:	e8 04 e7 ff ff       	call   c010afa6 <files_create>$/;"	l
c010c8a2	obj/kernel.asm	/^c010c8a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c8a5	obj/kernel.asm	/^c010c8a5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c8a9	obj/kernel.asm	/^c010c8a9:	75 02                	jne    c010c8ad <copy_files+0x69>$/;"	l
c010c8ab	obj/kernel.asm	/^c010c8ab:	eb 47                	jmp    c010c8f4 <copy_files+0xb0>$/;"	l
c010c8ad	obj/kernel.asm	/^c010c8ad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c8b0	obj/kernel.asm	/^c010c8b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c8b4	obj/kernel.asm	/^c010c8b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c8b7	obj/kernel.asm	/^c010c8b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c8ba	obj/kernel.asm	/^c010c8ba:	e8 90 e8 ff ff       	call   c010b14f <dup_files>$/;"	l
c010c8bf	obj/kernel.asm	/^c010c8bf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c8c2	obj/kernel.asm	/^c010c8c2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c8c6	obj/kernel.asm	/^c010c8c6:	74 0e                	je     c010c8d6 <copy_files+0x92>$/;"	l
c010c8c8	obj/kernel.asm	/^c010c8c8:	90                   	nop$/;"	l
c010c8c9	obj/kernel.asm	/^c010c8c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c8cc	obj/kernel.asm	/^c010c8cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c8cf	obj/kernel.asm	/^c010c8cf:	e8 35 e7 ff ff       	call   c010b009 <files_destroy>$/;"	l
c010c8d4	obj/kernel.asm	/^c010c8d4:	eb 1e                	jmp    c010c8f4 <copy_files+0xb0>$/;"	l
c010c8d6	obj/kernel.asm	/^c010c8d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c8d9	obj/kernel.asm	/^c010c8d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c8dc	obj/kernel.asm	/^c010c8dc:	e8 5e f5 ff ff       	call   c010be3f <files_count_inc>$/;"	l
c010c8e1	obj/kernel.asm	/^c010c8e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c8e4	obj/kernel.asm	/^c010c8e4:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c8e7	obj/kernel.asm	/^c010c8e7:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)$/;"	l
c010c8ed	obj/kernel.asm	/^c010c8ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c8f2	obj/kernel.asm	/^c010c8f2:	eb 03                	jmp    c010c8f7 <copy_files+0xb3>$/;"	l
c010c8f4	obj/kernel.asm	/^c010c8f4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c8f7	obj/kernel.asm	/^c010c8f7:	c9                   	leave  $/;"	l
c010c8f8	obj/kernel.asm	/^c010c8f8:	c3                   	ret    $/;"	l
c010c8f9	obj/kernel.asm	/^c010c8f9 <put_files>:$/;"	l
c010c8f9	obj/kernel.asm	/^c010c8f9:	55                   	push   %ebp$/;"	l
c010c8fa	obj/kernel.asm	/^c010c8fa:	89 e5                	mov    %esp,%ebp$/;"	l
c010c8fc	obj/kernel.asm	/^c010c8fc:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c8ff	obj/kernel.asm	/^c010c8ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c902	obj/kernel.asm	/^c010c902:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010c908	obj/kernel.asm	/^c010c908:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c90b	obj/kernel.asm	/^c010c90b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c90f	obj/kernel.asm	/^c010c90f:	74 1a                	je     c010c92b <put_files+0x32>$/;"	l
c010c911	obj/kernel.asm	/^c010c911:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c914	obj/kernel.asm	/^c010c914:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c917	obj/kernel.asm	/^c010c917:	e8 3d f5 ff ff       	call   c010be59 <files_count_dec>$/;"	l
c010c91c	obj/kernel.asm	/^c010c91c:	85 c0                	test   %eax,%eax$/;"	l
c010c91e	obj/kernel.asm	/^c010c91e:	75 0b                	jne    c010c92b <put_files+0x32>$/;"	l
c010c920	obj/kernel.asm	/^c010c920:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c923	obj/kernel.asm	/^c010c923:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c926	obj/kernel.asm	/^c010c926:	e8 de e6 ff ff       	call   c010b009 <files_destroy>$/;"	l
c010c92b	obj/kernel.asm	/^c010c92b:	c9                   	leave  $/;"	l
c010c92c	obj/kernel.asm	/^c010c92c:	c3                   	ret    $/;"	l
c010c92d	obj/kernel.asm	/^c010c92d <do_fork>:$/;"	l
c010c92d	obj/kernel.asm	/^c010c92d:	55                   	push   %ebp$/;"	l
c010c92e	obj/kernel.asm	/^c010c92e:	89 e5                	mov    %esp,%ebp$/;"	l
c010c930	obj/kernel.asm	/^c010c930:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c933	obj/kernel.asm	/^c010c933:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c010c93a	obj/kernel.asm	/^c010c93a:	a1 40 1f 15 c0       	mov    0xc0151f40,%eax$/;"	l
c010c93f	obj/kernel.asm	/^c010c93f:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010c944	obj/kernel.asm	/^c010c944:	7e 05                	jle    c010c94b <do_fork+0x1e>$/;"	l
c010c946	obj/kernel.asm	/^c010c946:	e9 fe 00 00 00       	jmp    c010ca49 <do_fork+0x11c>$/;"	l
c010c94b	obj/kernel.asm	/^c010c94b:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010c952	obj/kernel.asm	/^c010c952:	e8 1c f5 ff ff       	call   c010be73 <alloc_proc>$/;"	l
c010c957	obj/kernel.asm	/^c010c957:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c95a	obj/kernel.asm	/^c010c95a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c95e	obj/kernel.asm	/^c010c95e:	75 05                	jne    c010c965 <do_fork+0x38>$/;"	l
c010c960	obj/kernel.asm	/^c010c960:	e9 e4 00 00 00       	jmp    c010ca49 <do_fork+0x11c>$/;"	l
c010c965	obj/kernel.asm	/^c010c965:	8b 15 28 ff 14 c0    	mov    0xc014ff28,%edx$/;"	l
c010c96b	obj/kernel.asm	/^c010c96b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c96e	obj/kernel.asm	/^c010c96e:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010c971	obj/kernel.asm	/^c010c971:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010c976	obj/kernel.asm	/^c010c976:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010c97c	obj/kernel.asm	/^c010c97c:	85 c0                	test   %eax,%eax$/;"	l
c010c97e	obj/kernel.asm	/^c010c97e:	74 24                	je     c010c9a4 <do_fork+0x77>$/;"	l
c010c980	obj/kernel.asm	/^c010c980:	c7 44 24 0c a4 7e 11 	movl   $0xc0117ea4,0xc(%esp)$/;"	l
c010c987	obj/kernel.asm	/^c010c987:	c0 $/;"	l
c010c988	obj/kernel.asm	/^c010c988:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010c98f	obj/kernel.asm	/^c010c98f:	c0 $/;"	l
c010c990	obj/kernel.asm	/^c010c990:	c7 44 24 04 e5 01 00 	movl   $0x1e5,0x4(%esp)$/;"	l
c010c997	obj/kernel.asm	/^c010c997:	00 $/;"	l
c010c998	obj/kernel.asm	/^c010c998:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010c99f	obj/kernel.asm	/^c010c99f:	e8 24 45 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010c9a4	obj/kernel.asm	/^c010c9a4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9a7	obj/kernel.asm	/^c010c9a7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c9aa	obj/kernel.asm	/^c010c9aa:	e8 72 fb ff ff       	call   c010c521 <setup_kstack>$/;"	l
c010c9af	obj/kernel.asm	/^c010c9af:	85 c0                	test   %eax,%eax$/;"	l
c010c9b1	obj/kernel.asm	/^c010c9b1:	74 05                	je     c010c9b8 <do_fork+0x8b>$/;"	l
c010c9b3	obj/kernel.asm	/^c010c9b3:	e9 a1 00 00 00       	jmp    c010ca59 <do_fork+0x12c>$/;"	l
c010c9b8	obj/kernel.asm	/^c010c9b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9bb	obj/kernel.asm	/^c010c9bb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c9bf	obj/kernel.asm	/^c010c9bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c9c2	obj/kernel.asm	/^c010c9c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c9c5	obj/kernel.asm	/^c010c9c5:	e8 7a fe ff ff       	call   c010c844 <copy_files>$/;"	l
c010c9ca	obj/kernel.asm	/^c010c9ca:	85 c0                	test   %eax,%eax$/;"	l
c010c9cc	obj/kernel.asm	/^c010c9cc:	74 02                	je     c010c9d0 <do_fork+0xa3>$/;"	l
c010c9ce	obj/kernel.asm	/^c010c9ce:	eb 7e                	jmp    c010ca4e <do_fork+0x121>$/;"	l
c010c9d0	obj/kernel.asm	/^c010c9d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9d3	obj/kernel.asm	/^c010c9d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c9d7	obj/kernel.asm	/^c010c9d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c9da	obj/kernel.asm	/^c010c9da:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c9dd	obj/kernel.asm	/^c010c9dd:	e8 6e fc ff ff       	call   c010c650 <copy_mm>$/;"	l
c010c9e2	obj/kernel.asm	/^c010c9e2:	85 c0                	test   %eax,%eax$/;"	l
c010c9e4	obj/kernel.asm	/^c010c9e4:	74 02                	je     c010c9e8 <do_fork+0xbb>$/;"	l
c010c9e6	obj/kernel.asm	/^c010c9e6:	eb 66                	jmp    c010ca4e <do_fork+0x121>$/;"	l
c010c9e8	obj/kernel.asm	/^c010c9e8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c9eb	obj/kernel.asm	/^c010c9eb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010c9ef	obj/kernel.asm	/^c010c9ef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c9f2	obj/kernel.asm	/^c010c9f2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c9f6	obj/kernel.asm	/^c010c9f6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9f9	obj/kernel.asm	/^c010c9f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c9fc	obj/kernel.asm	/^c010c9fc:	e8 6b fd ff ff       	call   c010c76c <copy_thread>$/;"	l
c010ca01	obj/kernel.asm	/^c010ca01:	e8 62 f2 ff ff       	call   c010bc68 <__intr_save>$/;"	l
c010ca06	obj/kernel.asm	/^c010ca06:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ca09	obj/kernel.asm	/^c010ca09:	e8 f4 f7 ff ff       	call   c010c202 <get_pid>$/;"	l
c010ca0e	obj/kernel.asm	/^c010ca0e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010ca11	obj/kernel.asm	/^c010ca11:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c010ca14	obj/kernel.asm	/^c010ca14:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca17	obj/kernel.asm	/^c010ca17:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca1a	obj/kernel.asm	/^c010ca1a:	e8 68 f9 ff ff       	call   c010c387 <hash_proc>$/;"	l
c010ca1f	obj/kernel.asm	/^c010ca1f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca22	obj/kernel.asm	/^c010ca22:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca25	obj/kernel.asm	/^c010ca25:	e8 7d f6 ff ff       	call   c010c0a7 <set_links>$/;"	l
c010ca2a	obj/kernel.asm	/^c010ca2a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ca2d	obj/kernel.asm	/^c010ca2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca30	obj/kernel.asm	/^c010ca30:	e8 5d f2 ff ff       	call   c010bc92 <__intr_restore>$/;"	l
c010ca35	obj/kernel.asm	/^c010ca35:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca38	obj/kernel.asm	/^c010ca38:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca3b	obj/kernel.asm	/^c010ca3b:	e8 78 1a 00 00       	call   c010e4b8 <wakeup_proc>$/;"	l
c010ca40	obj/kernel.asm	/^c010ca40:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca43	obj/kernel.asm	/^c010ca43:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ca46	obj/kernel.asm	/^c010ca46:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ca49	obj/kernel.asm	/^c010ca49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca4c	obj/kernel.asm	/^c010ca4c:	eb 18                	jmp    c010ca66 <do_fork+0x139>$/;"	l
c010ca4e	obj/kernel.asm	/^c010ca4e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca51	obj/kernel.asm	/^c010ca51:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca54	obj/kernel.asm	/^c010ca54:	e8 04 fb ff ff       	call   c010c55d <put_kstack>$/;"	l
c010ca59	obj/kernel.asm	/^c010ca59:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca5c	obj/kernel.asm	/^c010ca5c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca5f	obj/kernel.asm	/^c010ca5f:	e8 52 82 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010ca64	obj/kernel.asm	/^c010ca64:	eb e3                	jmp    c010ca49 <do_fork+0x11c>$/;"	l
c010ca66	obj/kernel.asm	/^c010ca66:	c9                   	leave  $/;"	l
c010ca67	obj/kernel.asm	/^c010ca67:	c3                   	ret    $/;"	l
c010ca68	obj/kernel.asm	/^c010ca68 <do_exit>:$/;"	l
c010ca68	obj/kernel.asm	/^c010ca68:	55                   	push   %ebp$/;"	l
c010ca69	obj/kernel.asm	/^c010ca69:	89 e5                	mov    %esp,%ebp$/;"	l
c010ca6b	obj/kernel.asm	/^c010ca6b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ca6e	obj/kernel.asm	/^c010ca6e:	8b 15 28 ff 14 c0    	mov    0xc014ff28,%edx$/;"	l
c010ca74	obj/kernel.asm	/^c010ca74:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010ca79	obj/kernel.asm	/^c010ca79:	39 c2                	cmp    %eax,%edx$/;"	l
c010ca7b	obj/kernel.asm	/^c010ca7b:	75 1c                	jne    c010ca99 <do_exit+0x31>$/;"	l
c010ca7d	obj/kernel.asm	/^c010ca7d:	c7 44 24 08 bd 7e 11 	movl   $0xc0117ebd,0x8(%esp)$/;"	l
c010ca84	obj/kernel.asm	/^c010ca84:	c0 $/;"	l
c010ca85	obj/kernel.asm	/^c010ca85:	c7 44 24 04 1b 02 00 	movl   $0x21b,0x4(%esp)$/;"	l
c010ca8c	obj/kernel.asm	/^c010ca8c:	00 $/;"	l
c010ca8d	obj/kernel.asm	/^c010ca8d:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010ca94	obj/kernel.asm	/^c010ca94:	e8 2f 44 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ca99	obj/kernel.asm	/^c010ca99:	8b 15 28 ff 14 c0    	mov    0xc014ff28,%edx$/;"	l
c010ca9f	obj/kernel.asm	/^c010ca9f:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010caa4	obj/kernel.asm	/^c010caa4:	39 c2                	cmp    %eax,%edx$/;"	l
c010caa6	obj/kernel.asm	/^c010caa6:	75 1c                	jne    c010cac4 <do_exit+0x5c>$/;"	l
c010caa8	obj/kernel.asm	/^c010caa8:	c7 44 24 08 cd 7e 11 	movl   $0xc0117ecd,0x8(%esp)$/;"	l
c010caaf	obj/kernel.asm	/^c010caaf:	c0 $/;"	l
c010cab0	obj/kernel.asm	/^c010cab0:	c7 44 24 04 1e 02 00 	movl   $0x21e,0x4(%esp)$/;"	l
c010cab7	obj/kernel.asm	/^c010cab7:	00 $/;"	l
c010cab8	obj/kernel.asm	/^c010cab8:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010cabf	obj/kernel.asm	/^c010cabf:	e8 04 44 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010cac4	obj/kernel.asm	/^c010cac4:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cac9	obj/kernel.asm	/^c010cac9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cacc	obj/kernel.asm	/^c010cacc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cacf	obj/kernel.asm	/^c010cacf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cad3	obj/kernel.asm	/^c010cad3:	74 4a                	je     c010cb1f <do_exit+0xb7>$/;"	l
c010cad5	obj/kernel.asm	/^c010cad5:	a1 24 30 15 c0       	mov    0xc0153024,%eax$/;"	l
c010cada	obj/kernel.asm	/^c010cada:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010cadd	obj/kernel.asm	/^c010cadd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cae0	obj/kernel.asm	/^c010cae0:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010cae3	obj/kernel.asm	/^c010cae3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cae6	obj/kernel.asm	/^c010cae6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cae9	obj/kernel.asm	/^c010cae9:	e8 de f2 ff ff       	call   c010bdcc <mm_count_dec>$/;"	l
c010caee	obj/kernel.asm	/^c010caee:	85 c0                	test   %eax,%eax$/;"	l
c010caf0	obj/kernel.asm	/^c010caf0:	75 21                	jne    c010cb13 <do_exit+0xab>$/;"	l
c010caf2	obj/kernel.asm	/^c010caf2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010caf5	obj/kernel.asm	/^c010caf5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010caf8	obj/kernel.asm	/^c010caf8:	e8 fb b9 ff ff       	call   c01084f8 <exit_mmap>$/;"	l
c010cafd	obj/kernel.asm	/^c010cafd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cb00	obj/kernel.asm	/^c010cb00:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb03	obj/kernel.asm	/^c010cb03:	e8 22 fb ff ff       	call   c010c62a <put_pgdir>$/;"	l
c010cb08	obj/kernel.asm	/^c010cb08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cb0b	obj/kernel.asm	/^c010cb0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb0e	obj/kernel.asm	/^c010cb0e:	e8 26 b7 ff ff       	call   c0108239 <mm_destroy>$/;"	l
c010cb13	obj/kernel.asm	/^c010cb13:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cb18	obj/kernel.asm	/^c010cb18:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010cb1f	obj/kernel.asm	/^c010cb1f:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cb24	obj/kernel.asm	/^c010cb24:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb27	obj/kernel.asm	/^c010cb27:	e8 cd fd ff ff       	call   c010c8f9 <put_files>$/;"	l
c010cb2c	obj/kernel.asm	/^c010cb2c:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cb31	obj/kernel.asm	/^c010cb31:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010cb37	obj/kernel.asm	/^c010cb37:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cb3c	obj/kernel.asm	/^c010cb3c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010cb3f	obj/kernel.asm	/^c010cb3f:	89 90 8c 00 00 00    	mov    %edx,0x8c(%eax)$/;"	l
c010cb45	obj/kernel.asm	/^c010cb45:	e8 1e f1 ff ff       	call   c010bc68 <__intr_save>$/;"	l
c010cb4a	obj/kernel.asm	/^c010cb4a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010cb4d	obj/kernel.asm	/^c010cb4d:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cb52	obj/kernel.asm	/^c010cb52:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010cb55	obj/kernel.asm	/^c010cb55:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cb58	obj/kernel.asm	/^c010cb58:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cb5b	obj/kernel.asm	/^c010cb5b:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010cb61	obj/kernel.asm	/^c010cb61:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010cb66	obj/kernel.asm	/^c010cb66:	75 10                	jne    c010cb78 <do_exit+0x110>$/;"	l
c010cb68	obj/kernel.asm	/^c010cb68:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cb6b	obj/kernel.asm	/^c010cb6b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb6e	obj/kernel.asm	/^c010cb6e:	e8 45 19 00 00       	call   c010e4b8 <wakeup_proc>$/;"	l
c010cb73	obj/kernel.asm	/^c010cb73:	e9 ac 00 00 00       	jmp    c010cc24 <do_exit+0x1bc>$/;"	l
c010cb78	obj/kernel.asm	/^c010cb78:	e9 a7 00 00 00       	jmp    c010cc24 <do_exit+0x1bc>$/;"	l
c010cb7d	obj/kernel.asm	/^c010cb7d:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cb82	obj/kernel.asm	/^c010cb82:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010cb88	obj/kernel.asm	/^c010cb88:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cb8b	obj/kernel.asm	/^c010cb8b:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cb90	obj/kernel.asm	/^c010cb90:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010cb93	obj/kernel.asm	/^c010cb93:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010cb99	obj/kernel.asm	/^c010cb99:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010cb9f	obj/kernel.asm	/^c010cb9f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cba2	obj/kernel.asm	/^c010cba2:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010cba9	obj/kernel.asm	/^c010cba9:	00 00 00 $/;"	l
c010cbac	obj/kernel.asm	/^c010cbac:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010cbb1	obj/kernel.asm	/^c010cbb1:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010cbb7	obj/kernel.asm	/^c010cbb7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cbba	obj/kernel.asm	/^c010cbba:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010cbc0	obj/kernel.asm	/^c010cbc0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cbc3	obj/kernel.asm	/^c010cbc3:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010cbc9	obj/kernel.asm	/^c010cbc9:	85 c0                	test   %eax,%eax$/;"	l
c010cbcb	obj/kernel.asm	/^c010cbcb:	74 14                	je     c010cbe1 <do_exit+0x179>$/;"	l
c010cbcd	obj/kernel.asm	/^c010cbcd:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010cbd2	obj/kernel.asm	/^c010cbd2:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010cbd8	obj/kernel.asm	/^c010cbd8:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010cbdb	obj/kernel.asm	/^c010cbdb:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010cbe1	obj/kernel.asm	/^c010cbe1:	8b 15 24 ff 14 c0    	mov    0xc014ff24,%edx$/;"	l
c010cbe7	obj/kernel.asm	/^c010cbe7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cbea	obj/kernel.asm	/^c010cbea:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010cbed	obj/kernel.asm	/^c010cbed:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010cbf2	obj/kernel.asm	/^c010cbf2:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010cbf5	obj/kernel.asm	/^c010cbf5:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010cbfb	obj/kernel.asm	/^c010cbfb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cbfe	obj/kernel.asm	/^c010cbfe:	8b 00                	mov    (%eax),%eax$/;"	l
c010cc00	obj/kernel.asm	/^c010cc00:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010cc03	obj/kernel.asm	/^c010cc03:	75 1f                	jne    c010cc24 <do_exit+0x1bc>$/;"	l
c010cc05	obj/kernel.asm	/^c010cc05:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010cc0a	obj/kernel.asm	/^c010cc0a:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010cc10	obj/kernel.asm	/^c010cc10:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010cc15	obj/kernel.asm	/^c010cc15:	75 0d                	jne    c010cc24 <do_exit+0x1bc>$/;"	l
c010cc17	obj/kernel.asm	/^c010cc17:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010cc1c	obj/kernel.asm	/^c010cc1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cc1f	obj/kernel.asm	/^c010cc1f:	e8 94 18 00 00       	call   c010e4b8 <wakeup_proc>$/;"	l
c010cc24	obj/kernel.asm	/^c010cc24:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cc29	obj/kernel.asm	/^c010cc29:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010cc2f	obj/kernel.asm	/^c010cc2f:	85 c0                	test   %eax,%eax$/;"	l
c010cc31	obj/kernel.asm	/^c010cc31:	0f 85 46 ff ff ff    	jne    c010cb7d <do_exit+0x115>$/;"	l
c010cc37	obj/kernel.asm	/^c010cc37:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cc3a	obj/kernel.asm	/^c010cc3a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cc3d	obj/kernel.asm	/^c010cc3d:	e8 50 f0 ff ff       	call   c010bc92 <__intr_restore>$/;"	l
c010cc42	obj/kernel.asm	/^c010cc42:	e8 0d 19 00 00       	call   c010e554 <schedule>$/;"	l
c010cc47	obj/kernel.asm	/^c010cc47:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cc4c	obj/kernel.asm	/^c010cc4c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cc4f	obj/kernel.asm	/^c010cc4f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010cc53	obj/kernel.asm	/^c010cc53:	c7 44 24 08 e0 7e 11 	movl   $0xc0117ee0,0x8(%esp)$/;"	l
c010cc5a	obj/kernel.asm	/^c010cc5a:	c0 $/;"	l
c010cc5b	obj/kernel.asm	/^c010cc5b:	c7 44 24 04 4b 02 00 	movl   $0x24b,0x4(%esp)$/;"	l
c010cc62	obj/kernel.asm	/^c010cc62:	00 $/;"	l
c010cc63	obj/kernel.asm	/^c010cc63:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010cc6a	obj/kernel.asm	/^c010cc6a:	e8 59 42 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010cc6f	obj/kernel.asm	/^c010cc6f <load_icode_read>:$/;"	l
c010cc6f	obj/kernel.asm	/^c010cc6f:	55                   	push   %ebp$/;"	l
c010cc70	obj/kernel.asm	/^c010cc70:	89 e5                	mov    %esp,%ebp$/;"	l
c010cc72	obj/kernel.asm	/^c010cc72:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010cc75	obj/kernel.asm	/^c010cc75:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010cc7c	obj/kernel.asm	/^c010cc7c:	00 $/;"	l
c010cc7d	obj/kernel.asm	/^c010cc7d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010cc80	obj/kernel.asm	/^c010cc80:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cc84	obj/kernel.asm	/^c010cc84:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cc87	obj/kernel.asm	/^c010cc87:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cc8a	obj/kernel.asm	/^c010cc8a:	e8 a2 eb ff ff       	call   c010b831 <sysfile_seek>$/;"	l
c010cc8f	obj/kernel.asm	/^c010cc8f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cc92	obj/kernel.asm	/^c010cc92:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cc96	obj/kernel.asm	/^c010cc96:	74 05                	je     c010cc9d <load_icode_read+0x2e>$/;"	l
c010cc98	obj/kernel.asm	/^c010cc98:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cc9b	obj/kernel.asm	/^c010cc9b:	eb 38                	jmp    c010ccd5 <load_icode_read+0x66>$/;"	l
c010cc9d	obj/kernel.asm	/^c010cc9d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010cca0	obj/kernel.asm	/^c010cca0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010cca4	obj/kernel.asm	/^c010cca4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cca7	obj/kernel.asm	/^c010cca7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ccab	obj/kernel.asm	/^c010ccab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ccae	obj/kernel.asm	/^c010ccae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ccb1	obj/kernel.asm	/^c010ccb1:	e8 89 e8 ff ff       	call   c010b53f <sysfile_read>$/;"	l
c010ccb6	obj/kernel.asm	/^c010ccb6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ccb9	obj/kernel.asm	/^c010ccb9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ccbc	obj/kernel.asm	/^c010ccbc:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010ccbf	obj/kernel.asm	/^c010ccbf:	74 0f                	je     c010ccd0 <load_icode_read+0x61>$/;"	l
c010ccc1	obj/kernel.asm	/^c010ccc1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010ccc6	obj/kernel.asm	/^c010ccc6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ccca	obj/kernel.asm	/^c010ccca:	0f 48 45 f4          	cmovs  -0xc(%ebp),%eax$/;"	l
c010ccce	obj/kernel.asm	/^c010ccce:	eb 05                	jmp    c010ccd5 <load_icode_read+0x66>$/;"	l
c010ccd0	obj/kernel.asm	/^c010ccd0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ccd5	obj/kernel.asm	/^c010ccd5:	c9                   	leave  $/;"	l
c010ccd6	obj/kernel.asm	/^c010ccd6:	c3                   	ret    $/;"	l
c010ccd7	obj/kernel.asm	/^c010ccd7 <load_icode>:$/;"	l
c010ccd7	obj/kernel.asm	/^c010ccd7:	55                   	push   %ebp$/;"	l
c010ccd8	obj/kernel.asm	/^c010ccd8:	89 e5                	mov    %esp,%ebp$/;"	l
c010ccda	obj/kernel.asm	/^c010ccda:	53                   	push   %ebx$/;"	l
c010ccdb	obj/kernel.asm	/^c010ccdb:	81 ec e4 00 00 00    	sub    $0xe4,%esp$/;"	l
c010cce1	obj/kernel.asm	/^c010cce1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010cce5	obj/kernel.asm	/^c010cce5:	78 06                	js     c010cced <load_icode+0x16>$/;"	l
c010cce7	obj/kernel.asm	/^c010cce7:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010cceb	obj/kernel.asm	/^c010cceb:	7e 24                	jle    c010cd11 <load_icode+0x3a>$/;"	l
c010cced	obj/kernel.asm	/^c010cced:	c7 44 24 0c 00 7f 11 	movl   $0xc0117f00,0xc(%esp)$/;"	l
c010ccf4	obj/kernel.asm	/^c010ccf4:	c0 $/;"	l
c010ccf5	obj/kernel.asm	/^c010ccf5:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010ccfc	obj/kernel.asm	/^c010ccfc:	c0 $/;"	l
c010ccfd	obj/kernel.asm	/^c010ccfd:	c7 44 24 04 77 02 00 	movl   $0x277,0x4(%esp)$/;"	l
c010cd04	obj/kernel.asm	/^c010cd04:	00 $/;"	l
c010cd05	obj/kernel.asm	/^c010cd05:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010cd0c	obj/kernel.asm	/^c010cd0c:	e8 b7 41 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010cd11	obj/kernel.asm	/^c010cd11:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010cd16	obj/kernel.asm	/^c010cd16:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cd19	obj/kernel.asm	/^c010cd19:	85 c0                	test   %eax,%eax$/;"	l
c010cd1b	obj/kernel.asm	/^c010cd1b:	74 1c                	je     c010cd39 <load_icode+0x62>$/;"	l
c010cd1d	obj/kernel.asm	/^c010cd1d:	c7 44 24 08 28 7f 11 	movl   $0xc0117f28,0x8(%esp)$/;"	l
c010cd24	obj/kernel.asm	/^c010cd24:	c0 $/;"	l
c010cd25	obj/kernel.asm	/^c010cd25:	c7 44 24 04 7a 02 00 	movl   $0x27a,0x4(%esp)$/;"	l
c010cd2c	obj/kernel.asm	/^c010cd2c:	00 $/;"	l
c010cd2d	obj/kernel.asm	/^c010cd2d:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010cd34	obj/kernel.asm	/^c010cd34:	e8 8f 41 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010cd39	obj/kernel.asm	/^c010cd39:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010cd40	obj/kernel.asm	/^c010cd40:	e8 8f b1 ff ff       	call   c0107ed4 <mm_create>$/;"	l
c010cd45	obj/kernel.asm	/^c010cd45:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010cd48	obj/kernel.asm	/^c010cd48:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010cd4c	obj/kernel.asm	/^c010cd4c:	75 06                	jne    c010cd54 <load_icode+0x7d>$/;"	l
c010cd4e	obj/kernel.asm	/^c010cd4e:	90                   	nop$/;"	l
c010cd4f	obj/kernel.asm	/^c010cd4f:	e9 85 07 00 00       	jmp    c010d4d9 <load_icode+0x802>$/;"	l
c010cd54	obj/kernel.asm	/^c010cd54:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010cd57	obj/kernel.asm	/^c010cd57:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cd5a	obj/kernel.asm	/^c010cd5a:	e8 24 f8 ff ff       	call   c010c583 <setup_pgdir>$/;"	l
c010cd5f	obj/kernel.asm	/^c010cd5f:	85 c0                	test   %eax,%eax$/;"	l
c010cd61	obj/kernel.asm	/^c010cd61:	74 05                	je     c010cd68 <load_icode+0x91>$/;"	l
c010cd63	obj/kernel.asm	/^c010cd63:	e9 8c 07 00 00       	jmp    c010d4f4 <load_icode+0x81d>$/;"	l
c010cd68	obj/kernel.asm	/^c010cd68:	8d 85 64 ff ff ff    	lea    -0x9c(%ebp),%eax$/;"	l
c010cd6e	obj/kernel.asm	/^c010cd6e:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010cd71	obj/kernel.asm	/^c010cd71:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010cd78	obj/kernel.asm	/^c010cd78:	00 $/;"	l
c010cd79	obj/kernel.asm	/^c010cd79:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
c010cd80	obj/kernel.asm	/^c010cd80:	00 $/;"	l
c010cd81	obj/kernel.asm	/^c010cd81:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010cd84	obj/kernel.asm	/^c010cd84:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cd88	obj/kernel.asm	/^c010cd88:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd8b	obj/kernel.asm	/^c010cd8b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cd8e	obj/kernel.asm	/^c010cd8e:	e8 dc fe ff ff       	call   c010cc6f <load_icode_read>$/;"	l
c010cd93	obj/kernel.asm	/^c010cd93:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cd96	obj/kernel.asm	/^c010cd96:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cd9a	obj/kernel.asm	/^c010cd9a:	74 05                	je     c010cda1 <load_icode+0xca>$/;"	l
c010cd9c	obj/kernel.asm	/^c010cd9c:	e9 48 07 00 00       	jmp    c010d4e9 <load_icode+0x812>$/;"	l
c010cda1	obj/kernel.asm	/^c010cda1:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010cda4	obj/kernel.asm	/^c010cda4:	8b 00                	mov    (%eax),%eax$/;"	l
c010cda6	obj/kernel.asm	/^c010cda6:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c010cdab	obj/kernel.asm	/^c010cdab:	74 0c                	je     c010cdb9 <load_icode+0xe2>$/;"	l
c010cdad	obj/kernel.asm	/^c010cdad:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010cdb4	obj/kernel.asm	/^c010cdb4:	e9 30 07 00 00       	jmp    c010d4e9 <load_icode+0x812>$/;"	l
c010cdb9	obj/kernel.asm	/^c010cdb9:	8d 85 44 ff ff ff    	lea    -0xbc(%ebp),%eax$/;"	l
c010cdbf	obj/kernel.asm	/^c010cdbf:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010cdc2	obj/kernel.asm	/^c010cdc2:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010cdc9	obj/kernel.asm	/^c010cdc9:	e9 76 03 00 00       	jmp    c010d144 <load_icode+0x46d>$/;"	l
c010cdce	obj/kernel.asm	/^c010cdce:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010cdd1	obj/kernel.asm	/^c010cdd1:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010cdd4	obj/kernel.asm	/^c010cdd4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010cdd7	obj/kernel.asm	/^c010cdd7:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010cdda	obj/kernel.asm	/^c010cdda:	01 d0                	add    %edx,%eax$/;"	l
c010cddc	obj/kernel.asm	/^c010cddc:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010cddf	obj/kernel.asm	/^c010cddf:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010cde2	obj/kernel.asm	/^c010cde2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010cde6	obj/kernel.asm	/^c010cde6:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)$/;"	l
c010cded	obj/kernel.asm	/^c010cded:	00 $/;"	l
c010cdee	obj/kernel.asm	/^c010cdee:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cdf1	obj/kernel.asm	/^c010cdf1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cdf5	obj/kernel.asm	/^c010cdf5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cdf8	obj/kernel.asm	/^c010cdf8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cdfb	obj/kernel.asm	/^c010cdfb:	e8 6f fe ff ff       	call   c010cc6f <load_icode_read>$/;"	l
c010ce00	obj/kernel.asm	/^c010ce00:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ce03	obj/kernel.asm	/^c010ce03:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ce07	obj/kernel.asm	/^c010ce07:	74 05                	je     c010ce0e <load_icode+0x137>$/;"	l
c010ce09	obj/kernel.asm	/^c010ce09:	e9 d0 06 00 00       	jmp    c010d4de <load_icode+0x807>$/;"	l
c010ce0e	obj/kernel.asm	/^c010ce0e:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ce11	obj/kernel.asm	/^c010ce11:	8b 00                	mov    (%eax),%eax$/;"	l
c010ce13	obj/kernel.asm	/^c010ce13:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010ce16	obj/kernel.asm	/^c010ce16:	74 05                	je     c010ce1d <load_icode+0x146>$/;"	l
c010ce18	obj/kernel.asm	/^c010ce18:	e9 23 03 00 00       	jmp    c010d140 <load_icode+0x469>$/;"	l
c010ce1d	obj/kernel.asm	/^c010ce1d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ce20	obj/kernel.asm	/^c010ce20:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010ce23	obj/kernel.asm	/^c010ce23:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ce26	obj/kernel.asm	/^c010ce26:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ce29	obj/kernel.asm	/^c010ce29:	39 c2                	cmp    %eax,%edx$/;"	l
c010ce2b	obj/kernel.asm	/^c010ce2b:	76 0c                	jbe    c010ce39 <load_icode+0x162>$/;"	l
c010ce2d	obj/kernel.asm	/^c010ce2d:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010ce34	obj/kernel.asm	/^c010ce34:	e9 a5 06 00 00       	jmp    c010d4de <load_icode+0x807>$/;"	l
c010ce39	obj/kernel.asm	/^c010ce39:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ce3c	obj/kernel.asm	/^c010ce3c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ce3f	obj/kernel.asm	/^c010ce3f:	85 c0                	test   %eax,%eax$/;"	l
c010ce41	obj/kernel.asm	/^c010ce41:	75 05                	jne    c010ce48 <load_icode+0x171>$/;"	l
c010ce43	obj/kernel.asm	/^c010ce43:	e9 f8 02 00 00       	jmp    c010d140 <load_icode+0x469>$/;"	l
c010ce48	obj/kernel.asm	/^c010ce48:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010ce4f	obj/kernel.asm	/^c010ce4f:	c7 45 e8 04 00 00 00 	movl   $0x4,-0x18(%ebp)$/;"	l
c010ce56	obj/kernel.asm	/^c010ce56:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ce59	obj/kernel.asm	/^c010ce59:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ce5c	obj/kernel.asm	/^c010ce5c:	83 e0 01             	and    $0x1,%eax$/;"	l
c010ce5f	obj/kernel.asm	/^c010ce5f:	85 c0                	test   %eax,%eax$/;"	l
c010ce61	obj/kernel.asm	/^c010ce61:	74 04                	je     c010ce67 <load_icode+0x190>$/;"	l
c010ce63	obj/kernel.asm	/^c010ce63:	83 4d ec 04          	orl    $0x4,-0x14(%ebp)$/;"	l
c010ce67	obj/kernel.asm	/^c010ce67:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ce6a	obj/kernel.asm	/^c010ce6a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ce6d	obj/kernel.asm	/^c010ce6d:	83 e0 02             	and    $0x2,%eax$/;"	l
c010ce70	obj/kernel.asm	/^c010ce70:	85 c0                	test   %eax,%eax$/;"	l
c010ce72	obj/kernel.asm	/^c010ce72:	74 04                	je     c010ce78 <load_icode+0x1a1>$/;"	l
c010ce74	obj/kernel.asm	/^c010ce74:	83 4d ec 02          	orl    $0x2,-0x14(%ebp)$/;"	l
c010ce78	obj/kernel.asm	/^c010ce78:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ce7b	obj/kernel.asm	/^c010ce7b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ce7e	obj/kernel.asm	/^c010ce7e:	83 e0 04             	and    $0x4,%eax$/;"	l
c010ce81	obj/kernel.asm	/^c010ce81:	85 c0                	test   %eax,%eax$/;"	l
c010ce83	obj/kernel.asm	/^c010ce83:	74 04                	je     c010ce89 <load_icode+0x1b2>$/;"	l
c010ce85	obj/kernel.asm	/^c010ce85:	83 4d ec 01          	orl    $0x1,-0x14(%ebp)$/;"	l
c010ce89	obj/kernel.asm	/^c010ce89:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ce8c	obj/kernel.asm	/^c010ce8c:	83 e0 02             	and    $0x2,%eax$/;"	l
c010ce8f	obj/kernel.asm	/^c010ce8f:	85 c0                	test   %eax,%eax$/;"	l
c010ce91	obj/kernel.asm	/^c010ce91:	74 04                	je     c010ce97 <load_icode+0x1c0>$/;"	l
c010ce93	obj/kernel.asm	/^c010ce93:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c010ce97	obj/kernel.asm	/^c010ce97:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ce9a	obj/kernel.asm	/^c010ce9a:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010ce9d	obj/kernel.asm	/^c010ce9d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cea0	obj/kernel.asm	/^c010cea0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010cea3	obj/kernel.asm	/^c010cea3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010ceaa	obj/kernel.asm	/^c010ceaa:	00 $/;"	l
c010ceab	obj/kernel.asm	/^c010ceab:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010ceae	obj/kernel.asm	/^c010ceae:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c010ceb2	obj/kernel.asm	/^c010ceb2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010ceb6	obj/kernel.asm	/^c010ceb6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ceba	obj/kernel.asm	/^c010ceba:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010cebd	obj/kernel.asm	/^c010cebd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cec0	obj/kernel.asm	/^c010cec0:	e8 16 b4 ff ff       	call   c01082db <mm_map>$/;"	l
c010cec5	obj/kernel.asm	/^c010cec5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cec8	obj/kernel.asm	/^c010cec8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cecc	obj/kernel.asm	/^c010cecc:	74 05                	je     c010ced3 <load_icode+0x1fc>$/;"	l
c010cece	obj/kernel.asm	/^c010cece:	e9 0b 06 00 00       	jmp    c010d4de <load_icode+0x807>$/;"	l
c010ced3	obj/kernel.asm	/^c010ced3:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ced6	obj/kernel.asm	/^c010ced6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ced9	obj/kernel.asm	/^c010ced9:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010cedc	obj/kernel.asm	/^c010cedc:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cedf	obj/kernel.asm	/^c010cedf:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010cee2	obj/kernel.asm	/^c010cee2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010cee5	obj/kernel.asm	/^c010cee5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010cee8	obj/kernel.asm	/^c010cee8:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010ceeb	obj/kernel.asm	/^c010ceeb:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010ceee	obj/kernel.asm	/^c010ceee:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010cef3	obj/kernel.asm	/^c010cef3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010cef6	obj/kernel.asm	/^c010cef6:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010cefd	obj/kernel.asm	/^c010cefd:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf00	obj/kernel.asm	/^c010cf00:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010cf03	obj/kernel.asm	/^c010cf03:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cf06	obj/kernel.asm	/^c010cf06:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010cf09	obj/kernel.asm	/^c010cf09:	01 d0                	add    %edx,%eax$/;"	l
c010cf0b	obj/kernel.asm	/^c010cf0b:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010cf0e	obj/kernel.asm	/^c010cf0e:	e9 b1 00 00 00       	jmp    c010cfc4 <load_icode+0x2ed>$/;"	l
c010cf13	obj/kernel.asm	/^c010cf13:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010cf16	obj/kernel.asm	/^c010cf16:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010cf19	obj/kernel.asm	/^c010cf19:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010cf1c	obj/kernel.asm	/^c010cf1c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010cf20	obj/kernel.asm	/^c010cf20:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010cf23	obj/kernel.asm	/^c010cf23:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010cf27	obj/kernel.asm	/^c010cf27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cf2a	obj/kernel.asm	/^c010cf2a:	e8 ad 90 ff ff       	call   c0105fdc <pgdir_alloc_page>$/;"	l
c010cf2f	obj/kernel.asm	/^c010cf2f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010cf32	obj/kernel.asm	/^c010cf32:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010cf36	obj/kernel.asm	/^c010cf36:	75 0c                	jne    c010cf44 <load_icode+0x26d>$/;"	l
c010cf38	obj/kernel.asm	/^c010cf38:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010cf3f	obj/kernel.asm	/^c010cf3f:	e9 9a 05 00 00       	jmp    c010d4de <load_icode+0x807>$/;"	l
c010cf44	obj/kernel.asm	/^c010cf44:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010cf47	obj/kernel.asm	/^c010cf47:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010cf4a	obj/kernel.asm	/^c010cf4a:	29 c2                	sub    %eax,%edx$/;"	l
c010cf4c	obj/kernel.asm	/^c010cf4c:	89 d0                	mov    %edx,%eax$/;"	l
c010cf4e	obj/kernel.asm	/^c010cf4e:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010cf51	obj/kernel.asm	/^c010cf51:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010cf56	obj/kernel.asm	/^c010cf56:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010cf59	obj/kernel.asm	/^c010cf59:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010cf5c	obj/kernel.asm	/^c010cf5c:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010cf63	obj/kernel.asm	/^c010cf63:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010cf66	obj/kernel.asm	/^c010cf66:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010cf69	obj/kernel.asm	/^c010cf69:	73 0d                	jae    c010cf78 <load_icode+0x2a1>$/;"	l
c010cf6b	obj/kernel.asm	/^c010cf6b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010cf6e	obj/kernel.asm	/^c010cf6e:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010cf71	obj/kernel.asm	/^c010cf71:	29 c2                	sub    %eax,%edx$/;"	l
c010cf73	obj/kernel.asm	/^c010cf73:	89 d0                	mov    %edx,%eax$/;"	l
c010cf75	obj/kernel.asm	/^c010cf75:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010cf78	obj/kernel.asm	/^c010cf78:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cf7b	obj/kernel.asm	/^c010cf7b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cf7e	obj/kernel.asm	/^c010cf7e:	e8 91 ed ff ff       	call   c010bd14 <page2kva>$/;"	l
c010cf83	obj/kernel.asm	/^c010cf83:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010cf86	obj/kernel.asm	/^c010cf86:	01 c2                	add    %eax,%edx$/;"	l
c010cf88	obj/kernel.asm	/^c010cf88:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010cf8b	obj/kernel.asm	/^c010cf8b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010cf8f	obj/kernel.asm	/^c010cf8f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010cf92	obj/kernel.asm	/^c010cf92:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010cf96	obj/kernel.asm	/^c010cf96:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010cf9a	obj/kernel.asm	/^c010cf9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cf9d	obj/kernel.asm	/^c010cf9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cfa0	obj/kernel.asm	/^c010cfa0:	e8 ca fc ff ff       	call   c010cc6f <load_icode_read>$/;"	l
c010cfa5	obj/kernel.asm	/^c010cfa5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cfa8	obj/kernel.asm	/^c010cfa8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cfac	obj/kernel.asm	/^c010cfac:	74 05                	je     c010cfb3 <load_icode+0x2dc>$/;"	l
c010cfae	obj/kernel.asm	/^c010cfae:	e9 2b 05 00 00       	jmp    c010d4de <load_icode+0x807>$/;"	l
c010cfb3	obj/kernel.asm	/^c010cfb3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010cfb6	obj/kernel.asm	/^c010cfb6:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010cfb9	obj/kernel.asm	/^c010cfb9:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010cfbc	obj/kernel.asm	/^c010cfbc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010cfbf	obj/kernel.asm	/^c010cfbf:	01 d0                	add    %edx,%eax$/;"	l
c010cfc1	obj/kernel.asm	/^c010cfc1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010cfc4	obj/kernel.asm	/^c010cfc4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010cfc7	obj/kernel.asm	/^c010cfc7:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010cfca	obj/kernel.asm	/^c010cfca:	0f 82 43 ff ff ff    	jb     c010cf13 <load_icode+0x23c>$/;"	l
c010cfd0	obj/kernel.asm	/^c010cfd0:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cfd3	obj/kernel.asm	/^c010cfd3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010cfd6	obj/kernel.asm	/^c010cfd6:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010cfd9	obj/kernel.asm	/^c010cfd9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010cfdc	obj/kernel.asm	/^c010cfdc:	01 d0                	add    %edx,%eax$/;"	l
c010cfde	obj/kernel.asm	/^c010cfde:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010cfe1	obj/kernel.asm	/^c010cfe1:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010cfe4	obj/kernel.asm	/^c010cfe4:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010cfe7	obj/kernel.asm	/^c010cfe7:	0f 83 b0 00 00 00    	jae    c010d09d <load_icode+0x3c6>$/;"	l
c010cfed	obj/kernel.asm	/^c010cfed:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010cff0	obj/kernel.asm	/^c010cff0:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010cff3	obj/kernel.asm	/^c010cff3:	75 05                	jne    c010cffa <load_icode+0x323>$/;"	l
c010cff5	obj/kernel.asm	/^c010cff5:	e9 46 01 00 00       	jmp    c010d140 <load_icode+0x469>$/;"	l
c010cffa	obj/kernel.asm	/^c010cffa:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010cffd	obj/kernel.asm	/^c010cffd:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d000	obj/kernel.asm	/^c010d000:	29 c2                	sub    %eax,%edx$/;"	l
c010d002	obj/kernel.asm	/^c010d002:	89 d0                	mov    %edx,%eax$/;"	l
c010d004	obj/kernel.asm	/^c010d004:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010d009	obj/kernel.asm	/^c010d009:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010d00c	obj/kernel.asm	/^c010d00c:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010d011	obj/kernel.asm	/^c010d011:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010d014	obj/kernel.asm	/^c010d014:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d017	obj/kernel.asm	/^c010d017:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d01a	obj/kernel.asm	/^c010d01a:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d01d	obj/kernel.asm	/^c010d01d:	73 0d                	jae    c010d02c <load_icode+0x355>$/;"	l
c010d01f	obj/kernel.asm	/^c010d01f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d022	obj/kernel.asm	/^c010d022:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010d025	obj/kernel.asm	/^c010d025:	29 c2                	sub    %eax,%edx$/;"	l
c010d027	obj/kernel.asm	/^c010d027:	89 d0                	mov    %edx,%eax$/;"	l
c010d029	obj/kernel.asm	/^c010d029:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010d02c	obj/kernel.asm	/^c010d02c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d02f	obj/kernel.asm	/^c010d02f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d032	obj/kernel.asm	/^c010d032:	e8 dd ec ff ff       	call   c010bd14 <page2kva>$/;"	l
c010d037	obj/kernel.asm	/^c010d037:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010d03a	obj/kernel.asm	/^c010d03a:	01 c2                	add    %eax,%edx$/;"	l
c010d03c	obj/kernel.asm	/^c010d03c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d03f	obj/kernel.asm	/^c010d03f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d043	obj/kernel.asm	/^c010d043:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d04a	obj/kernel.asm	/^c010d04a:	00 $/;"	l
c010d04b	obj/kernel.asm	/^c010d04b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010d04e	obj/kernel.asm	/^c010d04e:	e8 c6 83 00 00       	call   c0115419 <memset>$/;"	l
c010d053	obj/kernel.asm	/^c010d053:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d056	obj/kernel.asm	/^c010d056:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010d059	obj/kernel.asm	/^c010d059:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d05c	obj/kernel.asm	/^c010d05c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d05f	obj/kernel.asm	/^c010d05f:	73 08                	jae    c010d069 <load_icode+0x392>$/;"	l
c010d061	obj/kernel.asm	/^c010d061:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d064	obj/kernel.asm	/^c010d064:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010d067	obj/kernel.asm	/^c010d067:	74 34                	je     c010d09d <load_icode+0x3c6>$/;"	l
c010d069	obj/kernel.asm	/^c010d069:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d06c	obj/kernel.asm	/^c010d06c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d06f	obj/kernel.asm	/^c010d06f:	72 08                	jb     c010d079 <load_icode+0x3a2>$/;"	l
c010d071	obj/kernel.asm	/^c010d071:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d074	obj/kernel.asm	/^c010d074:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d077	obj/kernel.asm	/^c010d077:	74 24                	je     c010d09d <load_icode+0x3c6>$/;"	l
c010d079	obj/kernel.asm	/^c010d079:	c7 44 24 0c 50 7f 11 	movl   $0xc0117f50,0xc(%esp)$/;"	l
c010d080	obj/kernel.asm	/^c010d080:	c0 $/;"	l
c010d081	obj/kernel.asm	/^c010d081:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010d088	obj/kernel.asm	/^c010d088:	c0 $/;"	l
c010d089	obj/kernel.asm	/^c010d089:	c7 44 24 04 cd 02 00 	movl   $0x2cd,0x4(%esp)$/;"	l
c010d090	obj/kernel.asm	/^c010d090:	00 $/;"	l
c010d091	obj/kernel.asm	/^c010d091:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d098	obj/kernel.asm	/^c010d098:	e8 2b 3e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d09d	obj/kernel.asm	/^c010d09d:	e9 92 00 00 00       	jmp    c010d134 <load_icode+0x45d>$/;"	l
c010d0a2	obj/kernel.asm	/^c010d0a2:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d0a5	obj/kernel.asm	/^c010d0a5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d0a8	obj/kernel.asm	/^c010d0a8:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010d0ab	obj/kernel.asm	/^c010d0ab:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010d0af	obj/kernel.asm	/^c010d0af:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010d0b2	obj/kernel.asm	/^c010d0b2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d0b6	obj/kernel.asm	/^c010d0b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d0b9	obj/kernel.asm	/^c010d0b9:	e8 1e 8f ff ff       	call   c0105fdc <pgdir_alloc_page>$/;"	l
c010d0be	obj/kernel.asm	/^c010d0be:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d0c1	obj/kernel.asm	/^c010d0c1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d0c5	obj/kernel.asm	/^c010d0c5:	75 0c                	jne    c010d0d3 <load_icode+0x3fc>$/;"	l
c010d0c7	obj/kernel.asm	/^c010d0c7:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010d0ce	obj/kernel.asm	/^c010d0ce:	e9 0b 04 00 00       	jmp    c010d4de <load_icode+0x807>$/;"	l
c010d0d3	obj/kernel.asm	/^c010d0d3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d0d6	obj/kernel.asm	/^c010d0d6:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d0d9	obj/kernel.asm	/^c010d0d9:	29 c2                	sub    %eax,%edx$/;"	l
c010d0db	obj/kernel.asm	/^c010d0db:	89 d0                	mov    %edx,%eax$/;"	l
c010d0dd	obj/kernel.asm	/^c010d0dd:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010d0e0	obj/kernel.asm	/^c010d0e0:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010d0e5	obj/kernel.asm	/^c010d0e5:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010d0e8	obj/kernel.asm	/^c010d0e8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d0eb	obj/kernel.asm	/^c010d0eb:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010d0f2	obj/kernel.asm	/^c010d0f2:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010d0f5	obj/kernel.asm	/^c010d0f5:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010d0f8	obj/kernel.asm	/^c010d0f8:	73 0d                	jae    c010d107 <load_icode+0x430>$/;"	l
c010d0fa	obj/kernel.asm	/^c010d0fa:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d0fd	obj/kernel.asm	/^c010d0fd:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010d100	obj/kernel.asm	/^c010d100:	29 c2                	sub    %eax,%edx$/;"	l
c010d102	obj/kernel.asm	/^c010d102:	89 d0                	mov    %edx,%eax$/;"	l
c010d104	obj/kernel.asm	/^c010d104:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010d107	obj/kernel.asm	/^c010d107:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d10a	obj/kernel.asm	/^c010d10a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d10d	obj/kernel.asm	/^c010d10d:	e8 02 ec ff ff       	call   c010bd14 <page2kva>$/;"	l
c010d112	obj/kernel.asm	/^c010d112:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010d115	obj/kernel.asm	/^c010d115:	01 c2                	add    %eax,%edx$/;"	l
c010d117	obj/kernel.asm	/^c010d117:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d11a	obj/kernel.asm	/^c010d11a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d11e	obj/kernel.asm	/^c010d11e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d125	obj/kernel.asm	/^c010d125:	00 $/;"	l
c010d126	obj/kernel.asm	/^c010d126:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010d129	obj/kernel.asm	/^c010d129:	e8 eb 82 00 00       	call   c0115419 <memset>$/;"	l
c010d12e	obj/kernel.asm	/^c010d12e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d131	obj/kernel.asm	/^c010d131:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010d134	obj/kernel.asm	/^c010d134:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d137	obj/kernel.asm	/^c010d137:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010d13a	obj/kernel.asm	/^c010d13a:	0f 82 62 ff ff ff    	jb     c010d0a2 <load_icode+0x3cb>$/;"	l
c010d140	obj/kernel.asm	/^c010d140:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
c010d144	obj/kernel.asm	/^c010d144:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010d147	obj/kernel.asm	/^c010d147:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010d14b	obj/kernel.asm	/^c010d14b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010d14e	obj/kernel.asm	/^c010d14e:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
c010d151	obj/kernel.asm	/^c010d151:	0f 87 77 fc ff ff    	ja     c010cdce <load_icode+0xf7>$/;"	l
c010d157	obj/kernel.asm	/^c010d157:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d15a	obj/kernel.asm	/^c010d15a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d15d	obj/kernel.asm	/^c010d15d:	e8 ca e3 ff ff       	call   c010b52c <sysfile_close>$/;"	l
c010d162	obj/kernel.asm	/^c010d162:	c7 45 ec 0b 00 00 00 	movl   $0xb,-0x14(%ebp)$/;"	l
c010d169	obj/kernel.asm	/^c010d169:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010d170	obj/kernel.asm	/^c010d170:	00 $/;"	l
c010d171	obj/kernel.asm	/^c010d171:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d174	obj/kernel.asm	/^c010d174:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d178	obj/kernel.asm	/^c010d178:	c7 44 24 08 00 00 10 	movl   $0x100000,0x8(%esp)$/;"	l
c010d17f	obj/kernel.asm	/^c010d17f:	00 $/;"	l
c010d180	obj/kernel.asm	/^c010d180:	c7 44 24 04 00 00 f0 	movl   $0xaff00000,0x4(%esp)$/;"	l
c010d187	obj/kernel.asm	/^c010d187:	af $/;"	l
c010d188	obj/kernel.asm	/^c010d188:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d18b	obj/kernel.asm	/^c010d18b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d18e	obj/kernel.asm	/^c010d18e:	e8 48 b1 ff ff       	call   c01082db <mm_map>$/;"	l
c010d193	obj/kernel.asm	/^c010d193:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d196	obj/kernel.asm	/^c010d196:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d19a	obj/kernel.asm	/^c010d19a:	74 05                	je     c010d1a1 <load_icode+0x4ca>$/;"	l
c010d19c	obj/kernel.asm	/^c010d19c:	e9 3d 03 00 00       	jmp    c010d4de <load_icode+0x807>$/;"	l
c010d1a1	obj/kernel.asm	/^c010d1a1:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d1a4	obj/kernel.asm	/^c010d1a4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d1a7	obj/kernel.asm	/^c010d1a7:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010d1ae	obj/kernel.asm	/^c010d1ae:	00 $/;"	l
c010d1af	obj/kernel.asm	/^c010d1af:	c7 44 24 04 00 f0 ff 	movl   $0xaffff000,0x4(%esp)$/;"	l
c010d1b6	obj/kernel.asm	/^c010d1b6:	af $/;"	l
c010d1b7	obj/kernel.asm	/^c010d1b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d1ba	obj/kernel.asm	/^c010d1ba:	e8 1d 8e ff ff       	call   c0105fdc <pgdir_alloc_page>$/;"	l
c010d1bf	obj/kernel.asm	/^c010d1bf:	85 c0                	test   %eax,%eax$/;"	l
c010d1c1	obj/kernel.asm	/^c010d1c1:	75 24                	jne    c010d1e7 <load_icode+0x510>$/;"	l
c010d1c3	obj/kernel.asm	/^c010d1c3:	c7 44 24 0c 8c 7f 11 	movl   $0xc0117f8c,0xc(%esp)$/;"	l
c010d1ca	obj/kernel.asm	/^c010d1ca:	c0 $/;"	l
c010d1cb	obj/kernel.asm	/^c010d1cb:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010d1d2	obj/kernel.asm	/^c010d1d2:	c0 $/;"	l
c010d1d3	obj/kernel.asm	/^c010d1d3:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
c010d1da	obj/kernel.asm	/^c010d1da:	00 $/;"	l
c010d1db	obj/kernel.asm	/^c010d1db:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d1e2	obj/kernel.asm	/^c010d1e2:	e8 e1 3c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d1e7	obj/kernel.asm	/^c010d1e7:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d1ea	obj/kernel.asm	/^c010d1ea:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d1ed	obj/kernel.asm	/^c010d1ed:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010d1f4	obj/kernel.asm	/^c010d1f4:	00 $/;"	l
c010d1f5	obj/kernel.asm	/^c010d1f5:	c7 44 24 04 00 e0 ff 	movl   $0xafffe000,0x4(%esp)$/;"	l
c010d1fc	obj/kernel.asm	/^c010d1fc:	af $/;"	l
c010d1fd	obj/kernel.asm	/^c010d1fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d200	obj/kernel.asm	/^c010d200:	e8 d7 8d ff ff       	call   c0105fdc <pgdir_alloc_page>$/;"	l
c010d205	obj/kernel.asm	/^c010d205:	85 c0                	test   %eax,%eax$/;"	l
c010d207	obj/kernel.asm	/^c010d207:	75 24                	jne    c010d22d <load_icode+0x556>$/;"	l
c010d209	obj/kernel.asm	/^c010d209:	c7 44 24 0c d0 7f 11 	movl   $0xc0117fd0,0xc(%esp)$/;"	l
c010d210	obj/kernel.asm	/^c010d210:	c0 $/;"	l
c010d211	obj/kernel.asm	/^c010d211:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010d218	obj/kernel.asm	/^c010d218:	c0 $/;"	l
c010d219	obj/kernel.asm	/^c010d219:	c7 44 24 04 e3 02 00 	movl   $0x2e3,0x4(%esp)$/;"	l
c010d220	obj/kernel.asm	/^c010d220:	00 $/;"	l
c010d221	obj/kernel.asm	/^c010d221:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d228	obj/kernel.asm	/^c010d228:	e8 9b 3c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d22d	obj/kernel.asm	/^c010d22d:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d230	obj/kernel.asm	/^c010d230:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d233	obj/kernel.asm	/^c010d233:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010d23a	obj/kernel.asm	/^c010d23a:	00 $/;"	l
c010d23b	obj/kernel.asm	/^c010d23b:	c7 44 24 04 00 d0 ff 	movl   $0xafffd000,0x4(%esp)$/;"	l
c010d242	obj/kernel.asm	/^c010d242:	af $/;"	l
c010d243	obj/kernel.asm	/^c010d243:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d246	obj/kernel.asm	/^c010d246:	e8 91 8d ff ff       	call   c0105fdc <pgdir_alloc_page>$/;"	l
c010d24b	obj/kernel.asm	/^c010d24b:	85 c0                	test   %eax,%eax$/;"	l
c010d24d	obj/kernel.asm	/^c010d24d:	75 24                	jne    c010d273 <load_icode+0x59c>$/;"	l
c010d24f	obj/kernel.asm	/^c010d24f:	c7 44 24 0c 14 80 11 	movl   $0xc0118014,0xc(%esp)$/;"	l
c010d256	obj/kernel.asm	/^c010d256:	c0 $/;"	l
c010d257	obj/kernel.asm	/^c010d257:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010d25e	obj/kernel.asm	/^c010d25e:	c0 $/;"	l
c010d25f	obj/kernel.asm	/^c010d25f:	c7 44 24 04 e4 02 00 	movl   $0x2e4,0x4(%esp)$/;"	l
c010d266	obj/kernel.asm	/^c010d266:	00 $/;"	l
c010d267	obj/kernel.asm	/^c010d267:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d26e	obj/kernel.asm	/^c010d26e:	e8 55 3c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d273	obj/kernel.asm	/^c010d273:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d276	obj/kernel.asm	/^c010d276:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d279	obj/kernel.asm	/^c010d279:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010d280	obj/kernel.asm	/^c010d280:	00 $/;"	l
c010d281	obj/kernel.asm	/^c010d281:	c7 44 24 04 00 c0 ff 	movl   $0xafffc000,0x4(%esp)$/;"	l
c010d288	obj/kernel.asm	/^c010d288:	af $/;"	l
c010d289	obj/kernel.asm	/^c010d289:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d28c	obj/kernel.asm	/^c010d28c:	e8 4b 8d ff ff       	call   c0105fdc <pgdir_alloc_page>$/;"	l
c010d291	obj/kernel.asm	/^c010d291:	85 c0                	test   %eax,%eax$/;"	l
c010d293	obj/kernel.asm	/^c010d293:	75 24                	jne    c010d2b9 <load_icode+0x5e2>$/;"	l
c010d295	obj/kernel.asm	/^c010d295:	c7 44 24 0c 58 80 11 	movl   $0xc0118058,0xc(%esp)$/;"	l
c010d29c	obj/kernel.asm	/^c010d29c:	c0 $/;"	l
c010d29d	obj/kernel.asm	/^c010d29d:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010d2a4	obj/kernel.asm	/^c010d2a4:	c0 $/;"	l
c010d2a5	obj/kernel.asm	/^c010d2a5:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
c010d2ac	obj/kernel.asm	/^c010d2ac:	00 $/;"	l
c010d2ad	obj/kernel.asm	/^c010d2ad:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d2b4	obj/kernel.asm	/^c010d2b4:	e8 0f 3c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d2b9	obj/kernel.asm	/^c010d2b9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d2bc	obj/kernel.asm	/^c010d2bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d2bf	obj/kernel.asm	/^c010d2bf:	e8 ee ea ff ff       	call   c010bdb2 <mm_count_inc>$/;"	l
c010d2c4	obj/kernel.asm	/^c010d2c4:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d2c9	obj/kernel.asm	/^c010d2c9:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010d2cc	obj/kernel.asm	/^c010d2cc:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010d2cf	obj/kernel.asm	/^c010d2cf:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d2d4	obj/kernel.asm	/^c010d2d4:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010d2d7	obj/kernel.asm	/^c010d2d7:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010d2da	obj/kernel.asm	/^c010d2da:	89 55 ac             	mov    %edx,-0x54(%ebp)$/;"	l
c010d2dd	obj/kernel.asm	/^c010d2dd:	81 7d ac ff ff ff bf 	cmpl   $0xbfffffff,-0x54(%ebp)$/;"	l
c010d2e4	obj/kernel.asm	/^c010d2e4:	77 23                	ja     c010d309 <load_icode+0x632>$/;"	l
c010d2e6	obj/kernel.asm	/^c010d2e6:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c010d2e9	obj/kernel.asm	/^c010d2e9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d2ed	obj/kernel.asm	/^c010d2ed:	c7 44 24 08 44 7e 11 	movl   $0xc0117e44,0x8(%esp)$/;"	l
c010d2f4	obj/kernel.asm	/^c010d2f4:	c0 $/;"	l
c010d2f5	obj/kernel.asm	/^c010d2f5:	c7 44 24 04 e9 02 00 	movl   $0x2e9,0x4(%esp)$/;"	l
c010d2fc	obj/kernel.asm	/^c010d2fc:	00 $/;"	l
c010d2fd	obj/kernel.asm	/^c010d2fd:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d304	obj/kernel.asm	/^c010d304:	e8 bf 3b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d309	obj/kernel.asm	/^c010d309:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c010d30c	obj/kernel.asm	/^c010d30c:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c010d312	obj/kernel.asm	/^c010d312:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010d315	obj/kernel.asm	/^c010d315:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d318	obj/kernel.asm	/^c010d318:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d31b	obj/kernel.asm	/^c010d31b:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c010d31e	obj/kernel.asm	/^c010d31e:	81 7d a8 ff ff ff bf 	cmpl   $0xbfffffff,-0x58(%ebp)$/;"	l
c010d325	obj/kernel.asm	/^c010d325:	77 23                	ja     c010d34a <load_icode+0x673>$/;"	l
c010d327	obj/kernel.asm	/^c010d327:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010d32a	obj/kernel.asm	/^c010d32a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d32e	obj/kernel.asm	/^c010d32e:	c7 44 24 08 44 7e 11 	movl   $0xc0117e44,0x8(%esp)$/;"	l
c010d335	obj/kernel.asm	/^c010d335:	c0 $/;"	l
c010d336	obj/kernel.asm	/^c010d336:	c7 44 24 04 ea 02 00 	movl   $0x2ea,0x4(%esp)$/;"	l
c010d33d	obj/kernel.asm	/^c010d33d:	00 $/;"	l
c010d33e	obj/kernel.asm	/^c010d33e:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d345	obj/kernel.asm	/^c010d345:	e8 7e 3b ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d34a	obj/kernel.asm	/^c010d34a:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010d34d	obj/kernel.asm	/^c010d34d:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010d352	obj/kernel.asm	/^c010d352:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010d355	obj/kernel.asm	/^c010d355:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c010d358	obj/kernel.asm	/^c010d358:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010d35b	obj/kernel.asm	/^c010d35b:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
c010d362	obj/kernel.asm	/^c010d362:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010d369	obj/kernel.asm	/^c010d369:	eb 30                	jmp    c010d39b <load_icode+0x6c4>$/;"	l
c010d36b	obj/kernel.asm	/^c010d36b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d36e	obj/kernel.asm	/^c010d36e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d375	obj/kernel.asm	/^c010d375:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d378	obj/kernel.asm	/^c010d378:	01 d0                	add    %edx,%eax$/;"	l
c010d37a	obj/kernel.asm	/^c010d37a:	8b 00                	mov    (%eax),%eax$/;"	l
c010d37c	obj/kernel.asm	/^c010d37c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010d383	obj/kernel.asm	/^c010d383:	00 $/;"	l
c010d384	obj/kernel.asm	/^c010d384:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d387	obj/kernel.asm	/^c010d387:	e8 5f 7d 00 00       	call   c01150eb <strnlen>$/;"	l
c010d38c	obj/kernel.asm	/^c010d38c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010d38f	obj/kernel.asm	/^c010d38f:	01 d0                	add    %edx,%eax$/;"	l
c010d391	obj/kernel.asm	/^c010d391:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d394	obj/kernel.asm	/^c010d394:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010d397	obj/kernel.asm	/^c010d397:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
c010d39b	obj/kernel.asm	/^c010d39b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d39e	obj/kernel.asm	/^c010d39e:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c010d3a1	obj/kernel.asm	/^c010d3a1:	77 c8                	ja     c010d36b <load_icode+0x694>$/;"	l
c010d3a3	obj/kernel.asm	/^c010d3a3:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d3a6	obj/kernel.asm	/^c010d3a6:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010d3a9	obj/kernel.asm	/^c010d3a9:	89 c2                	mov    %eax,%edx$/;"	l
c010d3ab	obj/kernel.asm	/^c010d3ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d3b0	obj/kernel.asm	/^c010d3b0:	29 d0                	sub    %edx,%eax$/;"	l
c010d3b2	obj/kernel.asm	/^c010d3b2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010d3b5	obj/kernel.asm	/^c010d3b5:	2d 04 00 00 50       	sub    $0x50000004,%eax$/;"	l
c010d3ba	obj/kernel.asm	/^c010d3ba:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010d3bd	obj/kernel.asm	/^c010d3bd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d3c0	obj/kernel.asm	/^c010d3c0:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d3c7	obj/kernel.asm	/^c010d3c7:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010d3ca	obj/kernel.asm	/^c010d3ca:	29 d0                	sub    %edx,%eax$/;"	l
c010d3cc	obj/kernel.asm	/^c010d3cc:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c010d3cf	obj/kernel.asm	/^c010d3cf:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
c010d3d6	obj/kernel.asm	/^c010d3d6:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010d3dd	obj/kernel.asm	/^c010d3dd:	eb 67                	jmp    c010d446 <load_icode+0x76f>$/;"	l
c010d3df	obj/kernel.asm	/^c010d3df:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d3e2	obj/kernel.asm	/^c010d3e2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d3e9	obj/kernel.asm	/^c010d3e9:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010d3ec	obj/kernel.asm	/^c010d3ec:	8d 1c 02             	lea    (%edx,%eax,1),%ebx$/;"	l
c010d3ef	obj/kernel.asm	/^c010d3ef:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d3f2	obj/kernel.asm	/^c010d3f2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d3f9	obj/kernel.asm	/^c010d3f9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d3fc	obj/kernel.asm	/^c010d3fc:	01 d0                	add    %edx,%eax$/;"	l
c010d3fe	obj/kernel.asm	/^c010d3fe:	8b 10                	mov    (%eax),%edx$/;"	l
c010d400	obj/kernel.asm	/^c010d400:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d403	obj/kernel.asm	/^c010d403:	8b 4d a4             	mov    -0x5c(%ebp),%ecx$/;"	l
c010d406	obj/kernel.asm	/^c010d406:	01 c8                	add    %ecx,%eax$/;"	l
c010d408	obj/kernel.asm	/^c010d408:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d40c	obj/kernel.asm	/^c010d40c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d40f	obj/kernel.asm	/^c010d40f:	e8 2e 7d 00 00       	call   c0115142 <strcpy>$/;"	l
c010d414	obj/kernel.asm	/^c010d414:	89 03                	mov    %eax,(%ebx)$/;"	l
c010d416	obj/kernel.asm	/^c010d416:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d419	obj/kernel.asm	/^c010d419:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d420	obj/kernel.asm	/^c010d420:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d423	obj/kernel.asm	/^c010d423:	01 d0                	add    %edx,%eax$/;"	l
c010d425	obj/kernel.asm	/^c010d425:	8b 00                	mov    (%eax),%eax$/;"	l
c010d427	obj/kernel.asm	/^c010d427:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010d42e	obj/kernel.asm	/^c010d42e:	00 $/;"	l
c010d42f	obj/kernel.asm	/^c010d42f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d432	obj/kernel.asm	/^c010d432:	e8 b4 7c 00 00       	call   c01150eb <strnlen>$/;"	l
c010d437	obj/kernel.asm	/^c010d437:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010d43a	obj/kernel.asm	/^c010d43a:	01 d0                	add    %edx,%eax$/;"	l
c010d43c	obj/kernel.asm	/^c010d43c:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d43f	obj/kernel.asm	/^c010d43f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010d442	obj/kernel.asm	/^c010d442:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
c010d446	obj/kernel.asm	/^c010d446:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d449	obj/kernel.asm	/^c010d449:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c010d44c	obj/kernel.asm	/^c010d44c:	77 91                	ja     c010d3df <load_icode+0x708>$/;"	l
c010d44e	obj/kernel.asm	/^c010d44e:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010d451	obj/kernel.asm	/^c010d451:	83 e8 04             	sub    $0x4,%eax$/;"	l
c010d454	obj/kernel.asm	/^c010d454:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010d457	obj/kernel.asm	/^c010d457:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010d45a	obj/kernel.asm	/^c010d45a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010d45d	obj/kernel.asm	/^c010d45d:	89 10                	mov    %edx,(%eax)$/;"	l
c010d45f	obj/kernel.asm	/^c010d45f:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d464	obj/kernel.asm	/^c010d464:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d467	obj/kernel.asm	/^c010d467:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c010d46a	obj/kernel.asm	/^c010d46a:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010d471	obj/kernel.asm	/^c010d471:	00 $/;"	l
c010d472	obj/kernel.asm	/^c010d472:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d479	obj/kernel.asm	/^c010d479:	00 $/;"	l
c010d47a	obj/kernel.asm	/^c010d47a:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d47d	obj/kernel.asm	/^c010d47d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d480	obj/kernel.asm	/^c010d480:	e8 94 7f 00 00       	call   c0115419 <memset>$/;"	l
c010d485	obj/kernel.asm	/^c010d485:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d488	obj/kernel.asm	/^c010d488:	66 c7 40 3c 1b 00    	movw   $0x1b,0x3c(%eax)$/;"	l
c010d48e	obj/kernel.asm	/^c010d48e:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d491	obj/kernel.asm	/^c010d491:	66 c7 40 48 23 00    	movw   $0x23,0x48(%eax)$/;"	l
c010d497	obj/kernel.asm	/^c010d497:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d49a	obj/kernel.asm	/^c010d49a:	0f b7 50 48          	movzwl 0x48(%eax),%edx$/;"	l
c010d49e	obj/kernel.asm	/^c010d49e:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d4a1	obj/kernel.asm	/^c010d4a1:	66 89 50 28          	mov    %dx,0x28(%eax)$/;"	l
c010d4a5	obj/kernel.asm	/^c010d4a5:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d4a8	obj/kernel.asm	/^c010d4a8:	0f b7 50 28          	movzwl 0x28(%eax),%edx$/;"	l
c010d4ac	obj/kernel.asm	/^c010d4ac:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d4af	obj/kernel.asm	/^c010d4af:	66 89 50 2c          	mov    %dx,0x2c(%eax)$/;"	l
c010d4b3	obj/kernel.asm	/^c010d4b3:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d4b6	obj/kernel.asm	/^c010d4b6:	8b 55 a4             	mov    -0x5c(%ebp),%edx$/;"	l
c010d4b9	obj/kernel.asm	/^c010d4b9:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010d4bc	obj/kernel.asm	/^c010d4bc:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010d4bf	obj/kernel.asm	/^c010d4bf:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010d4c2	obj/kernel.asm	/^c010d4c2:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d4c5	obj/kernel.asm	/^c010d4c5:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010d4c8	obj/kernel.asm	/^c010d4c8:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010d4cb	obj/kernel.asm	/^c010d4cb:	c7 40 40 00 02 00 00 	movl   $0x200,0x40(%eax)$/;"	l
c010d4d2	obj/kernel.asm	/^c010d4d2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010d4d9	obj/kernel.asm	/^c010d4d9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d4dc	obj/kernel.asm	/^c010d4dc:	eb 23                	jmp    c010d501 <load_icode+0x82a>$/;"	l
c010d4de	obj/kernel.asm	/^c010d4de:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d4e1	obj/kernel.asm	/^c010d4e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d4e4	obj/kernel.asm	/^c010d4e4:	e8 0f b0 ff ff       	call   c01084f8 <exit_mmap>$/;"	l
c010d4e9	obj/kernel.asm	/^c010d4e9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d4ec	obj/kernel.asm	/^c010d4ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d4ef	obj/kernel.asm	/^c010d4ef:	e8 36 f1 ff ff       	call   c010c62a <put_pgdir>$/;"	l
c010d4f4	obj/kernel.asm	/^c010d4f4:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010d4f7	obj/kernel.asm	/^c010d4f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d4fa	obj/kernel.asm	/^c010d4fa:	e8 3a ad ff ff       	call   c0108239 <mm_destroy>$/;"	l
c010d4ff	obj/kernel.asm	/^c010d4ff:	eb d8                	jmp    c010d4d9 <load_icode+0x802>$/;"	l
c010d501	obj/kernel.asm	/^c010d501:	81 c4 e4 00 00 00    	add    $0xe4,%esp$/;"	l
c010d507	obj/kernel.asm	/^c010d507:	5b                   	pop    %ebx$/;"	l
c010d508	obj/kernel.asm	/^c010d508:	5d                   	pop    %ebp$/;"	l
c010d509	obj/kernel.asm	/^c010d509:	c3                   	ret    $/;"	l
c010d50a	obj/kernel.asm	/^c010d50a <put_kargv>:$/;"	l
c010d50a	obj/kernel.asm	/^c010d50a:	55                   	push   %ebp$/;"	l
c010d50b	obj/kernel.asm	/^c010d50b:	89 e5                	mov    %esp,%ebp$/;"	l
c010d50d	obj/kernel.asm	/^c010d50d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d510	obj/kernel.asm	/^c010d510:	eb 1d                	jmp    c010d52f <put_kargv+0x25>$/;"	l
c010d512	obj/kernel.asm	/^c010d512:	83 6d 08 01          	subl   $0x1,0x8(%ebp)$/;"	l
c010d516	obj/kernel.asm	/^c010d516:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d519	obj/kernel.asm	/^c010d519:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d520	obj/kernel.asm	/^c010d520:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d523	obj/kernel.asm	/^c010d523:	01 d0                	add    %edx,%eax$/;"	l
c010d525	obj/kernel.asm	/^c010d525:	8b 00                	mov    (%eax),%eax$/;"	l
c010d527	obj/kernel.asm	/^c010d527:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d52a	obj/kernel.asm	/^c010d52a:	e8 87 77 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010d52f	obj/kernel.asm	/^c010d52f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d533	obj/kernel.asm	/^c010d533:	7f dd                	jg     c010d512 <put_kargv+0x8>$/;"	l
c010d535	obj/kernel.asm	/^c010d535:	c9                   	leave  $/;"	l
c010d536	obj/kernel.asm	/^c010d536:	c3                   	ret    $/;"	l
c010d537	obj/kernel.asm	/^c010d537 <copy_kargv>:$/;"	l
c010d537	obj/kernel.asm	/^c010d537:	55                   	push   %ebp$/;"	l
c010d538	obj/kernel.asm	/^c010d538:	89 e5                	mov    %esp,%ebp$/;"	l
c010d53a	obj/kernel.asm	/^c010d53a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d53d	obj/kernel.asm	/^c010d53d:	c7 45 f0 fd ff ff ff 	movl   $0xfffffffd,-0x10(%ebp)$/;"	l
c010d544	obj/kernel.asm	/^c010d544:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d547	obj/kernel.asm	/^c010d547:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d54e	obj/kernel.asm	/^c010d54e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010d551	obj/kernel.asm	/^c010d551:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010d558	obj/kernel.asm	/^c010d558:	00 $/;"	l
c010d559	obj/kernel.asm	/^c010d559:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010d55d	obj/kernel.asm	/^c010d55d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d561	obj/kernel.asm	/^c010d561:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d564	obj/kernel.asm	/^c010d564:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d567	obj/kernel.asm	/^c010d567:	e8 e1 b9 ff ff       	call   c0108f4d <user_mem_check>$/;"	l
c010d56c	obj/kernel.asm	/^c010d56c:	85 c0                	test   %eax,%eax$/;"	l
c010d56e	obj/kernel.asm	/^c010d56e:	75 08                	jne    c010d578 <copy_kargv+0x41>$/;"	l
c010d570	obj/kernel.asm	/^c010d570:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d573	obj/kernel.asm	/^c010d573:	e9 a4 00 00 00       	jmp    c010d61c <copy_kargv+0xe5>$/;"	l
c010d578	obj/kernel.asm	/^c010d578:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010d57f	obj/kernel.asm	/^c010d57f:	eb 77                	jmp    c010d5f8 <copy_kargv+0xc1>$/;"	l
c010d581	obj/kernel.asm	/^c010d581:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010d588	obj/kernel.asm	/^c010d588:	e8 0e 77 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010d58d	obj/kernel.asm	/^c010d58d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d590	obj/kernel.asm	/^c010d590:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010d594	obj/kernel.asm	/^c010d594:	75 0a                	jne    c010d5a0 <copy_kargv+0x69>$/;"	l
c010d596	obj/kernel.asm	/^c010d596:	90                   	nop$/;"	l
c010d597	obj/kernel.asm	/^c010d597:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010d59e	obj/kernel.asm	/^c010d59e:	eb 67                	jmp    c010d607 <copy_kargv+0xd0>$/;"	l
c010d5a0	obj/kernel.asm	/^c010d5a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d5a3	obj/kernel.asm	/^c010d5a3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d5aa	obj/kernel.asm	/^c010d5aa:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010d5ad	obj/kernel.asm	/^c010d5ad:	01 d0                	add    %edx,%eax$/;"	l
c010d5af	obj/kernel.asm	/^c010d5af:	8b 00                	mov    (%eax),%eax$/;"	l
c010d5b1	obj/kernel.asm	/^c010d5b1:	c7 44 24 0c 00 10 00 	movl   $0x1000,0xc(%esp)$/;"	l
c010d5b8	obj/kernel.asm	/^c010d5b8:	00 $/;"	l
c010d5b9	obj/kernel.asm	/^c010d5b9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d5bd	obj/kernel.asm	/^c010d5bd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d5c0	obj/kernel.asm	/^c010d5c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d5c4	obj/kernel.asm	/^c010d5c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d5c7	obj/kernel.asm	/^c010d5c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d5ca	obj/kernel.asm	/^c010d5ca:	e8 a1 ba ff ff       	call   c0109070 <copy_string>$/;"	l
c010d5cf	obj/kernel.asm	/^c010d5cf:	85 c0                	test   %eax,%eax$/;"	l
c010d5d1	obj/kernel.asm	/^c010d5d1:	75 0d                	jne    c010d5e0 <copy_kargv+0xa9>$/;"	l
c010d5d3	obj/kernel.asm	/^c010d5d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d5d6	obj/kernel.asm	/^c010d5d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d5d9	obj/kernel.asm	/^c010d5d9:	e8 d8 76 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010d5de	obj/kernel.asm	/^c010d5de:	eb 27                	jmp    c010d607 <copy_kargv+0xd0>$/;"	l
c010d5e0	obj/kernel.asm	/^c010d5e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d5e3	obj/kernel.asm	/^c010d5e3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010d5ea	obj/kernel.asm	/^c010d5ea:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d5ed	obj/kernel.asm	/^c010d5ed:	01 c2                	add    %eax,%edx$/;"	l
c010d5ef	obj/kernel.asm	/^c010d5ef:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d5f2	obj/kernel.asm	/^c010d5f2:	89 02                	mov    %eax,(%edx)$/;"	l
c010d5f4	obj/kernel.asm	/^c010d5f4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010d5f8	obj/kernel.asm	/^c010d5f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d5fb	obj/kernel.asm	/^c010d5fb:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010d5fe	obj/kernel.asm	/^c010d5fe:	7c 81                	jl     c010d581 <copy_kargv+0x4a>$/;"	l
c010d600	obj/kernel.asm	/^c010d600:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d605	obj/kernel.asm	/^c010d605:	eb 15                	jmp    c010d61c <copy_kargv+0xe5>$/;"	l
c010d607	obj/kernel.asm	/^c010d607:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d60a	obj/kernel.asm	/^c010d60a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d60e	obj/kernel.asm	/^c010d60e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d611	obj/kernel.asm	/^c010d611:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d614	obj/kernel.asm	/^c010d614:	e8 f1 fe ff ff       	call   c010d50a <put_kargv>$/;"	l
c010d619	obj/kernel.asm	/^c010d619:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d61c	obj/kernel.asm	/^c010d61c:	c9                   	leave  $/;"	l
c010d61d	obj/kernel.asm	/^c010d61d:	c3                   	ret    $/;"	l
c010d61e	obj/kernel.asm	/^c010d61e <do_execve>:$/;"	l
c010d61e	obj/kernel.asm	/^c010d61e:	55                   	push   %ebp$/;"	l
c010d61f	obj/kernel.asm	/^c010d61f:	89 e5                	mov    %esp,%ebp$/;"	l
c010d621	obj/kernel.asm	/^c010d621:	81 ec e8 00 00 00    	sub    $0xe8,%esp$/;"	l
c010d627	obj/kernel.asm	/^c010d627:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d62c	obj/kernel.asm	/^c010d62c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010d62f	obj/kernel.asm	/^c010d62f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d632	obj/kernel.asm	/^c010d632:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010d636	obj/kernel.asm	/^c010d636:	7e 06                	jle    c010d63e <do_execve+0x20>$/;"	l
c010d638	obj/kernel.asm	/^c010d638:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010d63c	obj/kernel.asm	/^c010d63c:	7e 0a                	jle    c010d648 <do_execve+0x2a>$/;"	l
c010d63e	obj/kernel.asm	/^c010d63e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010d643	obj/kernel.asm	/^c010d643:	e9 11 02 00 00       	jmp    c010d859 <do_execve+0x23b>$/;"	l
c010d648	obj/kernel.asm	/^c010d648:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010d64f	obj/kernel.asm	/^c010d64f:	00 $/;"	l
c010d650	obj/kernel.asm	/^c010d650:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d657	obj/kernel.asm	/^c010d657:	00 $/;"	l
c010d658	obj/kernel.asm	/^c010d658:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010d65b	obj/kernel.asm	/^c010d65b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d65e	obj/kernel.asm	/^c010d65e:	e8 b6 7d 00 00       	call   c0115419 <memset>$/;"	l
c010d663	obj/kernel.asm	/^c010d663:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010d66a	obj/kernel.asm	/^c010d66a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d66d	obj/kernel.asm	/^c010d66d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d670	obj/kernel.asm	/^c010d670:	e8 71 e7 ff ff       	call   c010bde6 <lock_mm>$/;"	l
c010d675	obj/kernel.asm	/^c010d675:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d679	obj/kernel.asm	/^c010d679:	75 29                	jne    c010d6a4 <do_execve+0x86>$/;"	l
c010d67b	obj/kernel.asm	/^c010d67b:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d680	obj/kernel.asm	/^c010d680:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d683	obj/kernel.asm	/^c010d683:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d687	obj/kernel.asm	/^c010d687:	c7 44 24 08 9b 80 11 	movl   $0xc011809b,0x8(%esp)$/;"	l
c010d68e	obj/kernel.asm	/^c010d68e:	c0 $/;"	l
c010d68f	obj/kernel.asm	/^c010d68f:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c010d696	obj/kernel.asm	/^c010d696:	00 $/;"	l
c010d697	obj/kernel.asm	/^c010d697:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010d69a	obj/kernel.asm	/^c010d69a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d69d	obj/kernel.asm	/^c010d69d:	e8 a9 78 00 00       	call   c0114f4b <snprintf>$/;"	l
c010d6a2	obj/kernel.asm	/^c010d6a2:	eb 38                	jmp    c010d6dc <do_execve+0xbe>$/;"	l
c010d6a4	obj/kernel.asm	/^c010d6a4:	c7 44 24 0c 33 00 00 	movl   $0x33,0xc(%esp)$/;"	l
c010d6ab	obj/kernel.asm	/^c010d6ab:	00 $/;"	l
c010d6ac	obj/kernel.asm	/^c010d6ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d6af	obj/kernel.asm	/^c010d6af:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d6b3	obj/kernel.asm	/^c010d6b3:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010d6b6	obj/kernel.asm	/^c010d6b6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d6ba	obj/kernel.asm	/^c010d6ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d6bd	obj/kernel.asm	/^c010d6bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d6c0	obj/kernel.asm	/^c010d6c0:	e8 ab b9 ff ff       	call   c0109070 <copy_string>$/;"	l
c010d6c5	obj/kernel.asm	/^c010d6c5:	85 c0                	test   %eax,%eax$/;"	l
c010d6c7	obj/kernel.asm	/^c010d6c7:	75 13                	jne    c010d6dc <do_execve+0xbe>$/;"	l
c010d6c9	obj/kernel.asm	/^c010d6c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d6cc	obj/kernel.asm	/^c010d6cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d6cf	obj/kernel.asm	/^c010d6cf:	e8 45 e7 ff ff       	call   c010be19 <unlock_mm>$/;"	l
c010d6d4	obj/kernel.asm	/^c010d6d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d6d7	obj/kernel.asm	/^c010d6d7:	e9 7d 01 00 00       	jmp    c010d859 <do_execve+0x23b>$/;"	l
c010d6dc	obj/kernel.asm	/^c010d6dc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d6df	obj/kernel.asm	/^c010d6df:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d6e3	obj/kernel.asm	/^c010d6e3:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010d6e9	obj/kernel.asm	/^c010d6e9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d6ed	obj/kernel.asm	/^c010d6ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d6f0	obj/kernel.asm	/^c010d6f0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d6f4	obj/kernel.asm	/^c010d6f4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d6f7	obj/kernel.asm	/^c010d6f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d6fa	obj/kernel.asm	/^c010d6fa:	e8 38 fe ff ff       	call   c010d537 <copy_kargv>$/;"	l
c010d6ff	obj/kernel.asm	/^c010d6ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d702	obj/kernel.asm	/^c010d702:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d706	obj/kernel.asm	/^c010d706:	74 13                	je     c010d71b <do_execve+0xfd>$/;"	l
c010d708	obj/kernel.asm	/^c010d708:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d70b	obj/kernel.asm	/^c010d70b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d70e	obj/kernel.asm	/^c010d70e:	e8 06 e7 ff ff       	call   c010be19 <unlock_mm>$/;"	l
c010d713	obj/kernel.asm	/^c010d713:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d716	obj/kernel.asm	/^c010d716:	e9 3e 01 00 00       	jmp    c010d859 <do_execve+0x23b>$/;"	l
c010d71b	obj/kernel.asm	/^c010d71b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d71e	obj/kernel.asm	/^c010d71e:	8b 00                	mov    (%eax),%eax$/;"	l
c010d720	obj/kernel.asm	/^c010d720:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d723	obj/kernel.asm	/^c010d723:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d726	obj/kernel.asm	/^c010d726:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d729	obj/kernel.asm	/^c010d729:	e8 eb e6 ff ff       	call   c010be19 <unlock_mm>$/;"	l
c010d72e	obj/kernel.asm	/^c010d72e:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d733	obj/kernel.asm	/^c010d733:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010d739	obj/kernel.asm	/^c010d739:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d73c	obj/kernel.asm	/^c010d73c:	e8 90 d9 ff ff       	call   c010b0d1 <files_closeall>$/;"	l
c010d741	obj/kernel.asm	/^c010d741:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d748	obj/kernel.asm	/^c010d748:	00 $/;"	l
c010d749	obj/kernel.asm	/^c010d749:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d74c	obj/kernel.asm	/^c010d74c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d74f	obj/kernel.asm	/^c010d74f:	e8 8d dd ff ff       	call   c010b4e1 <sysfile_open>$/;"	l
c010d754	obj/kernel.asm	/^c010d754:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d757	obj/kernel.asm	/^c010d757:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d75a	obj/kernel.asm	/^c010d75a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d75d	obj/kernel.asm	/^c010d75d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d761	obj/kernel.asm	/^c010d761:	79 05                	jns    c010d768 <do_execve+0x14a>$/;"	l
c010d763	obj/kernel.asm	/^c010d763:	e9 ae 00 00 00       	jmp    c010d816 <do_execve+0x1f8>$/;"	l
c010d768	obj/kernel.asm	/^c010d768:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d76c	obj/kernel.asm	/^c010d76c:	74 4a                	je     c010d7b8 <do_execve+0x19a>$/;"	l
c010d76e	obj/kernel.asm	/^c010d76e:	a1 24 30 15 c0       	mov    0xc0153024,%eax$/;"	l
c010d773	obj/kernel.asm	/^c010d773:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010d776	obj/kernel.asm	/^c010d776:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d779	obj/kernel.asm	/^c010d779:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010d77c	obj/kernel.asm	/^c010d77c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d77f	obj/kernel.asm	/^c010d77f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d782	obj/kernel.asm	/^c010d782:	e8 45 e6 ff ff       	call   c010bdcc <mm_count_dec>$/;"	l
c010d787	obj/kernel.asm	/^c010d787:	85 c0                	test   %eax,%eax$/;"	l
c010d789	obj/kernel.asm	/^c010d789:	75 21                	jne    c010d7ac <do_execve+0x18e>$/;"	l
c010d78b	obj/kernel.asm	/^c010d78b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d78e	obj/kernel.asm	/^c010d78e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d791	obj/kernel.asm	/^c010d791:	e8 62 ad ff ff       	call   c01084f8 <exit_mmap>$/;"	l
c010d796	obj/kernel.asm	/^c010d796:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d799	obj/kernel.asm	/^c010d799:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d79c	obj/kernel.asm	/^c010d79c:	e8 89 ee ff ff       	call   c010c62a <put_pgdir>$/;"	l
c010d7a1	obj/kernel.asm	/^c010d7a1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d7a4	obj/kernel.asm	/^c010d7a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d7a7	obj/kernel.asm	/^c010d7a7:	e8 8d aa ff ff       	call   c0108239 <mm_destroy>$/;"	l
c010d7ac	obj/kernel.asm	/^c010d7ac:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d7b1	obj/kernel.asm	/^c010d7b1:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010d7b8	obj/kernel.asm	/^c010d7b8:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010d7bf	obj/kernel.asm	/^c010d7bf:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010d7c5	obj/kernel.asm	/^c010d7c5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d7c9	obj/kernel.asm	/^c010d7c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d7cc	obj/kernel.asm	/^c010d7cc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d7d0	obj/kernel.asm	/^c010d7d0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d7d3	obj/kernel.asm	/^c010d7d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d7d6	obj/kernel.asm	/^c010d7d6:	e8 fc f4 ff ff       	call   c010ccd7 <load_icode>$/;"	l
c010d7db	obj/kernel.asm	/^c010d7db:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d7de	obj/kernel.asm	/^c010d7de:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d7e2	obj/kernel.asm	/^c010d7e2:	74 02                	je     c010d7e6 <do_execve+0x1c8>$/;"	l
c010d7e4	obj/kernel.asm	/^c010d7e4:	eb 30                	jmp    c010d816 <do_execve+0x1f8>$/;"	l
c010d7e6	obj/kernel.asm	/^c010d7e6:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010d7ec	obj/kernel.asm	/^c010d7ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d7f0	obj/kernel.asm	/^c010d7f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d7f3	obj/kernel.asm	/^c010d7f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d7f6	obj/kernel.asm	/^c010d7f6:	e8 0f fd ff ff       	call   c010d50a <put_kargv>$/;"	l
c010d7fb	obj/kernel.asm	/^c010d7fb:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d800	obj/kernel.asm	/^c010d800:	8d 55 b1             	lea    -0x4f(%ebp),%edx$/;"	l
c010d803	obj/kernel.asm	/^c010d803:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d807	obj/kernel.asm	/^c010d807:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d80a	obj/kernel.asm	/^c010d80a:	e8 13 e8 ff ff       	call   c010c022 <set_proc_name>$/;"	l
c010d80f	obj/kernel.asm	/^c010d80f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d814	obj/kernel.asm	/^c010d814:	eb 43                	jmp    c010d859 <do_execve+0x23b>$/;"	l
c010d816	obj/kernel.asm	/^c010d816:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010d81c	obj/kernel.asm	/^c010d81c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d820	obj/kernel.asm	/^c010d820:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d823	obj/kernel.asm	/^c010d823:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d826	obj/kernel.asm	/^c010d826:	e8 df fc ff ff       	call   c010d50a <put_kargv>$/;"	l
c010d82b	obj/kernel.asm	/^c010d82b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d82e	obj/kernel.asm	/^c010d82e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d831	obj/kernel.asm	/^c010d831:	e8 32 f2 ff ff       	call   c010ca68 <do_exit>$/;"	l
c010d836	obj/kernel.asm	/^c010d836:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d839	obj/kernel.asm	/^c010d839:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d83d	obj/kernel.asm	/^c010d83d:	c7 44 24 08 a5 80 11 	movl   $0xc01180a5,0x8(%esp)$/;"	l
c010d844	obj/kernel.asm	/^c010d844:	c0 $/;"	l
c010d845	obj/kernel.asm	/^c010d845:	c7 44 24 04 71 03 00 	movl   $0x371,0x4(%esp)$/;"	l
c010d84c	obj/kernel.asm	/^c010d84c:	00 $/;"	l
c010d84d	obj/kernel.asm	/^c010d84d:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d854	obj/kernel.asm	/^c010d854:	e8 6f 36 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d859	obj/kernel.asm	/^c010d859:	c9                   	leave  $/;"	l
c010d85a	obj/kernel.asm	/^c010d85a:	c3                   	ret    $/;"	l
c010d85b	obj/kernel.asm	/^c010d85b <do_yield>:$/;"	l
c010d85b	obj/kernel.asm	/^c010d85b:	55                   	push   %ebp$/;"	l
c010d85c	obj/kernel.asm	/^c010d85c:	89 e5                	mov    %esp,%ebp$/;"	l
c010d85e	obj/kernel.asm	/^c010d85e:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d863	obj/kernel.asm	/^c010d863:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010d86a	obj/kernel.asm	/^c010d86a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d86f	obj/kernel.asm	/^c010d86f:	5d                   	pop    %ebp$/;"	l
c010d870	obj/kernel.asm	/^c010d870:	c3                   	ret    $/;"	l
c010d871	obj/kernel.asm	/^c010d871 <do_wait>:$/;"	l
c010d871	obj/kernel.asm	/^c010d871:	55                   	push   %ebp$/;"	l
c010d872	obj/kernel.asm	/^c010d872:	89 e5                	mov    %esp,%ebp$/;"	l
c010d874	obj/kernel.asm	/^c010d874:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d877	obj/kernel.asm	/^c010d877:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d87c	obj/kernel.asm	/^c010d87c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010d87f	obj/kernel.asm	/^c010d87f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d882	obj/kernel.asm	/^c010d882:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010d886	obj/kernel.asm	/^c010d886:	74 30                	je     c010d8b8 <do_wait+0x47>$/;"	l
c010d888	obj/kernel.asm	/^c010d888:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d88b	obj/kernel.asm	/^c010d88b:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010d892	obj/kernel.asm	/^c010d892:	00 $/;"	l
c010d893	obj/kernel.asm	/^c010d893:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c010d89a	obj/kernel.asm	/^c010d89a:	00 $/;"	l
c010d89b	obj/kernel.asm	/^c010d89b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d89f	obj/kernel.asm	/^c010d89f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d8a2	obj/kernel.asm	/^c010d8a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d8a5	obj/kernel.asm	/^c010d8a5:	e8 a3 b6 ff ff       	call   c0108f4d <user_mem_check>$/;"	l
c010d8aa	obj/kernel.asm	/^c010d8aa:	85 c0                	test   %eax,%eax$/;"	l
c010d8ac	obj/kernel.asm	/^c010d8ac:	75 0a                	jne    c010d8b8 <do_wait+0x47>$/;"	l
c010d8ae	obj/kernel.asm	/^c010d8ae:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010d8b3	obj/kernel.asm	/^c010d8b3:	e9 57 01 00 00       	jmp    c010da0f <do_wait+0x19e>$/;"	l
c010d8b8	obj/kernel.asm	/^c010d8b8:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010d8bf	obj/kernel.asm	/^c010d8bf:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d8c3	obj/kernel.asm	/^c010d8c3:	74 39                	je     c010d8fe <do_wait+0x8d>$/;"	l
c010d8c5	obj/kernel.asm	/^c010d8c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d8c8	obj/kernel.asm	/^c010d8c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d8cb	obj/kernel.asm	/^c010d8cb:	e8 6b eb ff ff       	call   c010c43b <find_proc>$/;"	l
c010d8d0	obj/kernel.asm	/^c010d8d0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d8d3	obj/kernel.asm	/^c010d8d3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d8d7	obj/kernel.asm	/^c010d8d7:	74 5a                	je     c010d933 <do_wait+0xc2>$/;"	l
c010d8d9	obj/kernel.asm	/^c010d8d9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d8dc	obj/kernel.asm	/^c010d8dc:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010d8df	obj/kernel.asm	/^c010d8df:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d8e4	obj/kernel.asm	/^c010d8e4:	39 c2                	cmp    %eax,%edx$/;"	l
c010d8e6	obj/kernel.asm	/^c010d8e6:	75 4b                	jne    c010d933 <do_wait+0xc2>$/;"	l
c010d8e8	obj/kernel.asm	/^c010d8e8:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010d8ef	obj/kernel.asm	/^c010d8ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d8f2	obj/kernel.asm	/^c010d8f2:	8b 00                	mov    (%eax),%eax$/;"	l
c010d8f4	obj/kernel.asm	/^c010d8f4:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010d8f7	obj/kernel.asm	/^c010d8f7:	75 3a                	jne    c010d933 <do_wait+0xc2>$/;"	l
c010d8f9	obj/kernel.asm	/^c010d8f9:	e9 89 00 00 00       	jmp    c010d987 <do_wait+0x116>$/;"	l
c010d8fe	obj/kernel.asm	/^c010d8fe:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d903	obj/kernel.asm	/^c010d903:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010d909	obj/kernel.asm	/^c010d909:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d90c	obj/kernel.asm	/^c010d90c:	eb 1f                	jmp    c010d92d <do_wait+0xbc>$/;"	l
c010d90e	obj/kernel.asm	/^c010d90e:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010d915	obj/kernel.asm	/^c010d915:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d918	obj/kernel.asm	/^c010d918:	8b 00                	mov    (%eax),%eax$/;"	l
c010d91a	obj/kernel.asm	/^c010d91a:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010d91d	obj/kernel.asm	/^c010d91d:	75 02                	jne    c010d921 <do_wait+0xb0>$/;"	l
c010d91f	obj/kernel.asm	/^c010d91f:	eb 66                	jmp    c010d987 <do_wait+0x116>$/;"	l
c010d921	obj/kernel.asm	/^c010d921:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d924	obj/kernel.asm	/^c010d924:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010d92a	obj/kernel.asm	/^c010d92a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d92d	obj/kernel.asm	/^c010d92d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d931	obj/kernel.asm	/^c010d931:	75 db                	jne    c010d90e <do_wait+0x9d>$/;"	l
c010d933	obj/kernel.asm	/^c010d933:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d937	obj/kernel.asm	/^c010d937:	74 44                	je     c010d97d <do_wait+0x10c>$/;"	l
c010d939	obj/kernel.asm	/^c010d939:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d93e	obj/kernel.asm	/^c010d93e:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010d944	obj/kernel.asm	/^c010d944:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d949	obj/kernel.asm	/^c010d949:	c7 80 90 00 00 00 01 	movl   $0x80000001,0x90(%eax)$/;"	l
c010d950	obj/kernel.asm	/^c010d950:	00 00 80 $/;"	l
c010d953	obj/kernel.asm	/^c010d953:	e8 fc 0b 00 00       	call   c010e554 <schedule>$/;"	l
c010d958	obj/kernel.asm	/^c010d958:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010d95d	obj/kernel.asm	/^c010d95d:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010d960	obj/kernel.asm	/^c010d960:	83 e0 01             	and    $0x1,%eax$/;"	l
c010d963	obj/kernel.asm	/^c010d963:	85 c0                	test   %eax,%eax$/;"	l
c010d965	obj/kernel.asm	/^c010d965:	74 11                	je     c010d978 <do_wait+0x107>$/;"	l
c010d967	obj/kernel.asm	/^c010d967:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c010d96e	obj/kernel.asm	/^c010d96e:	e8 f5 f0 ff ff       	call   c010ca68 <do_exit>$/;"	l
c010d973	obj/kernel.asm	/^c010d973:	e9 40 ff ff ff       	jmp    c010d8b8 <do_wait+0x47>$/;"	l
c010d978	obj/kernel.asm	/^c010d978:	e9 3b ff ff ff       	jmp    c010d8b8 <do_wait+0x47>$/;"	l
c010d97d	obj/kernel.asm	/^c010d97d:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010d982	obj/kernel.asm	/^c010d982:	e9 88 00 00 00       	jmp    c010da0f <do_wait+0x19e>$/;"	l
c010d987	obj/kernel.asm	/^c010d987:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010d98c	obj/kernel.asm	/^c010d98c:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010d98f	obj/kernel.asm	/^c010d98f:	74 0a                	je     c010d99b <do_wait+0x12a>$/;"	l
c010d991	obj/kernel.asm	/^c010d991:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010d996	obj/kernel.asm	/^c010d996:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010d999	obj/kernel.asm	/^c010d999:	75 1c                	jne    c010d9b7 <do_wait+0x146>$/;"	l
c010d99b	obj/kernel.asm	/^c010d99b:	c7 44 24 08 b8 80 11 	movl   $0xc01180b8,0x8(%esp)$/;"	l
c010d9a2	obj/kernel.asm	/^c010d9a2:	c0 $/;"	l
c010d9a3	obj/kernel.asm	/^c010d9a3:	c7 44 24 04 aa 03 00 	movl   $0x3aa,0x4(%esp)$/;"	l
c010d9aa	obj/kernel.asm	/^c010d9aa:	00 $/;"	l
c010d9ab	obj/kernel.asm	/^c010d9ab:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010d9b2	obj/kernel.asm	/^c010d9b2:	e8 11 35 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010d9b7	obj/kernel.asm	/^c010d9b7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010d9bb	obj/kernel.asm	/^c010d9bb:	74 0e                	je     c010d9cb <do_wait+0x15a>$/;"	l
c010d9bd	obj/kernel.asm	/^c010d9bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d9c0	obj/kernel.asm	/^c010d9c0:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx$/;"	l
c010d9c6	obj/kernel.asm	/^c010d9c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d9c9	obj/kernel.asm	/^c010d9c9:	89 10                	mov    %edx,(%eax)$/;"	l
c010d9cb	obj/kernel.asm	/^c010d9cb:	e8 98 e2 ff ff       	call   c010bc68 <__intr_save>$/;"	l
c010d9d0	obj/kernel.asm	/^c010d9d0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d9d3	obj/kernel.asm	/^c010d9d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d9d6	obj/kernel.asm	/^c010d9d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9d9	obj/kernel.asm	/^c010d9d9:	e8 28 ea ff ff       	call   c010c406 <unhash_proc>$/;"	l
c010d9de	obj/kernel.asm	/^c010d9de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d9e1	obj/kernel.asm	/^c010d9e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9e4	obj/kernel.asm	/^c010d9e4:	e8 78 e7 ff ff       	call   c010c161 <remove_links>$/;"	l
c010d9e9	obj/kernel.asm	/^c010d9e9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d9ec	obj/kernel.asm	/^c010d9ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9ef	obj/kernel.asm	/^c010d9ef:	e8 9e e2 ff ff       	call   c010bc92 <__intr_restore>$/;"	l
c010d9f4	obj/kernel.asm	/^c010d9f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d9f7	obj/kernel.asm	/^c010d9f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9fa	obj/kernel.asm	/^c010d9fa:	e8 5e eb ff ff       	call   c010c55d <put_kstack>$/;"	l
c010d9ff	obj/kernel.asm	/^c010d9ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da02	obj/kernel.asm	/^c010da02:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010da05	obj/kernel.asm	/^c010da05:	e8 ac 72 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010da0a	obj/kernel.asm	/^c010da0a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010da0f	obj/kernel.asm	/^c010da0f:	c9                   	leave  $/;"	l
c010da10	obj/kernel.asm	/^c010da10:	c3                   	ret    $/;"	l
c010da11	obj/kernel.asm	/^c010da11 <do_kill>:$/;"	l
c010da11	obj/kernel.asm	/^c010da11:	55                   	push   %ebp$/;"	l
c010da12	obj/kernel.asm	/^c010da12:	89 e5                	mov    %esp,%ebp$/;"	l
c010da14	obj/kernel.asm	/^c010da14:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010da17	obj/kernel.asm	/^c010da17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010da1a	obj/kernel.asm	/^c010da1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010da1d	obj/kernel.asm	/^c010da1d:	e8 19 ea ff ff       	call   c010c43b <find_proc>$/;"	l
c010da22	obj/kernel.asm	/^c010da22:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010da25	obj/kernel.asm	/^c010da25:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010da29	obj/kernel.asm	/^c010da29:	74 44                	je     c010da6f <do_kill+0x5e>$/;"	l
c010da2b	obj/kernel.asm	/^c010da2b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da2e	obj/kernel.asm	/^c010da2e:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010da31	obj/kernel.asm	/^c010da31:	83 e0 01             	and    $0x1,%eax$/;"	l
c010da34	obj/kernel.asm	/^c010da34:	85 c0                	test   %eax,%eax$/;"	l
c010da36	obj/kernel.asm	/^c010da36:	75 30                	jne    c010da68 <do_kill+0x57>$/;"	l
c010da38	obj/kernel.asm	/^c010da38:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da3b	obj/kernel.asm	/^c010da3b:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010da3e	obj/kernel.asm	/^c010da3e:	83 c8 01             	or     $0x1,%eax$/;"	l
c010da41	obj/kernel.asm	/^c010da41:	89 c2                	mov    %eax,%edx$/;"	l
c010da43	obj/kernel.asm	/^c010da43:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da46	obj/kernel.asm	/^c010da46:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010da49	obj/kernel.asm	/^c010da49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da4c	obj/kernel.asm	/^c010da4c:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010da52	obj/kernel.asm	/^c010da52:	85 c0                	test   %eax,%eax$/;"	l
c010da54	obj/kernel.asm	/^c010da54:	79 0b                	jns    c010da61 <do_kill+0x50>$/;"	l
c010da56	obj/kernel.asm	/^c010da56:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da59	obj/kernel.asm	/^c010da59:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010da5c	obj/kernel.asm	/^c010da5c:	e8 57 0a 00 00       	call   c010e4b8 <wakeup_proc>$/;"	l
c010da61	obj/kernel.asm	/^c010da61:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010da66	obj/kernel.asm	/^c010da66:	eb 0c                	jmp    c010da74 <do_kill+0x63>$/;"	l
c010da68	obj/kernel.asm	/^c010da68:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010da6d	obj/kernel.asm	/^c010da6d:	eb 05                	jmp    c010da74 <do_kill+0x63>$/;"	l
c010da6f	obj/kernel.asm	/^c010da6f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010da74	obj/kernel.asm	/^c010da74:	c9                   	leave  $/;"	l
c010da75	obj/kernel.asm	/^c010da75:	c3                   	ret    $/;"	l
c010da76	obj/kernel.asm	/^c010da76 <kernel_execve>:$/;"	l
c010da76	obj/kernel.asm	/^c010da76:	55                   	push   %ebp$/;"	l
c010da77	obj/kernel.asm	/^c010da77:	89 e5                	mov    %esp,%ebp$/;"	l
c010da79	obj/kernel.asm	/^c010da79:	53                   	push   %ebx$/;"	l
c010da7a	obj/kernel.asm	/^c010da7a:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010da7d	obj/kernel.asm	/^c010da7d:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010da84	obj/kernel.asm	/^c010da84:	eb 04                	jmp    c010da8a <kernel_execve+0x14>$/;"	l
c010da86	obj/kernel.asm	/^c010da86:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010da8a	obj/kernel.asm	/^c010da8a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010da8d	obj/kernel.asm	/^c010da8d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010da94	obj/kernel.asm	/^c010da94:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010da97	obj/kernel.asm	/^c010da97:	01 d0                	add    %edx,%eax$/;"	l
c010da99	obj/kernel.asm	/^c010da99:	8b 00                	mov    (%eax),%eax$/;"	l
c010da9b	obj/kernel.asm	/^c010da9b:	85 c0                	test   %eax,%eax$/;"	l
c010da9d	obj/kernel.asm	/^c010da9d:	75 e7                	jne    c010da86 <kernel_execve+0x10>$/;"	l
c010da9f	obj/kernel.asm	/^c010da9f:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010daa4	obj/kernel.asm	/^c010daa4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010daa7	obj/kernel.asm	/^c010daa7:	8b 4d f8             	mov    -0x8(%ebp),%ecx$/;"	l
c010daaa	obj/kernel.asm	/^c010daaa:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010daad	obj/kernel.asm	/^c010daad:	cd 80                	int    $0x80$/;"	l
c010daaf	obj/kernel.asm	/^c010daaf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dab2	obj/kernel.asm	/^c010dab2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dab5	obj/kernel.asm	/^c010dab5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dab8	obj/kernel.asm	/^c010dab8:	5b                   	pop    %ebx$/;"	l
c010dab9	obj/kernel.asm	/^c010dab9:	5d                   	pop    %ebp$/;"	l
c010daba	obj/kernel.asm	/^c010daba:	c3                   	ret    $/;"	l
c010dabb	obj/kernel.asm	/^c010dabb <user_main>:$/;"	l
c010dabb	obj/kernel.asm	/^c010dabb:	55                   	push   %ebp$/;"	l
c010dabc	obj/kernel.asm	/^c010dabc:	89 e5                	mov    %esp,%ebp$/;"	l
c010dabe	obj/kernel.asm	/^c010dabe:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010dac1	obj/kernel.asm	/^c010dac1:	c7 45 f0 d4 80 11 c0 	movl   $0xc01180d4,-0x10(%ebp)$/;"	l
c010dac8	obj/kernel.asm	/^c010dac8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010dacf	obj/kernel.asm	/^c010dacf:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010dad4	obj/kernel.asm	/^c010dad4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dad7	obj/kernel.asm	/^c010dad7:	c7 44 24 08 d4 80 11 	movl   $0xc01180d4,0x8(%esp)$/;"	l
c010dade	obj/kernel.asm	/^c010dade:	c0 $/;"	l
c010dadf	obj/kernel.asm	/^c010dadf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010dae3	obj/kernel.asm	/^c010dae3:	c7 04 24 d8 80 11 c0 	movl   $0xc01180d8,(%esp)$/;"	l
c010daea	obj/kernel.asm	/^c010daea:	e8 76 28 ff ff       	call   c0100365 <cprintf>$/;"	l
c010daef	obj/kernel.asm	/^c010daef:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010daf2	obj/kernel.asm	/^c010daf2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010daf6	obj/kernel.asm	/^c010daf6:	c7 04 24 d4 80 11 c0 	movl   $0xc01180d4,(%esp)$/;"	l
c010dafd	obj/kernel.asm	/^c010dafd:	e8 74 ff ff ff       	call   c010da76 <kernel_execve>$/;"	l
c010db02	obj/kernel.asm	/^c010db02:	c7 44 24 08 ff 80 11 	movl   $0xc01180ff,0x8(%esp)$/;"	l
c010db09	obj/kernel.asm	/^c010db09:	c0 $/;"	l
c010db0a	obj/kernel.asm	/^c010db0a:	c7 44 24 04 f5 03 00 	movl   $0x3f5,0x4(%esp)$/;"	l
c010db11	obj/kernel.asm	/^c010db11:	00 $/;"	l
c010db12	obj/kernel.asm	/^c010db12:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010db19	obj/kernel.asm	/^c010db19:	e8 aa 33 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010db1e	obj/kernel.asm	/^c010db1e <init_main>:$/;"	l
c010db1e	obj/kernel.asm	/^c010db1e:	55                   	push   %ebp$/;"	l
c010db1f	obj/kernel.asm	/^c010db1f:	89 e5                	mov    %esp,%ebp$/;"	l
c010db21	obj/kernel.asm	/^c010db21:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010db24	obj/kernel.asm	/^c010db24:	c7 04 24 19 81 11 c0 	movl   $0xc0118119,(%esp)$/;"	l
c010db2b	obj/kernel.asm	/^c010db2b:	e8 29 18 00 00       	call   c010f359 <vfs_set_bootfs>$/;"	l
c010db30	obj/kernel.asm	/^c010db30:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010db33	obj/kernel.asm	/^c010db33:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010db37	obj/kernel.asm	/^c010db37:	74 23                	je     c010db5c <init_main+0x3e>$/;"	l
c010db39	obj/kernel.asm	/^c010db39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010db3c	obj/kernel.asm	/^c010db3c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010db40	obj/kernel.asm	/^c010db40:	c7 44 24 08 20 81 11 	movl   $0xc0118120,0x8(%esp)$/;"	l
c010db47	obj/kernel.asm	/^c010db47:	c0 $/;"	l
c010db48	obj/kernel.asm	/^c010db48:	c7 44 24 04 fd 03 00 	movl   $0x3fd,0x4(%esp)$/;"	l
c010db4f	obj/kernel.asm	/^c010db4f:	00 $/;"	l
c010db50	obj/kernel.asm	/^c010db50:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010db57	obj/kernel.asm	/^c010db57:	e8 6c 33 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010db5c	obj/kernel.asm	/^c010db5c:	e8 4c 76 ff ff       	call   c01051ad <nr_free_pages>$/;"	l
c010db61	obj/kernel.asm	/^c010db61:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010db64	obj/kernel.asm	/^c010db64:	e8 15 70 ff ff       	call   c0104b7e <kallocated>$/;"	l
c010db69	obj/kernel.asm	/^c010db69:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010db6c	obj/kernel.asm	/^c010db6c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010db73	obj/kernel.asm	/^c010db73:	00 $/;"	l
c010db74	obj/kernel.asm	/^c010db74:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010db7b	obj/kernel.asm	/^c010db7b:	00 $/;"	l
c010db7c	obj/kernel.asm	/^c010db7c:	c7 04 24 bb da 10 c0 	movl   $0xc010dabb,(%esp)$/;"	l
c010db83	obj/kernel.asm	/^c010db83:	e8 27 e9 ff ff       	call   c010c4af <kernel_thread>$/;"	l
c010db88	obj/kernel.asm	/^c010db88:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010db8b	obj/kernel.asm	/^c010db8b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010db8f	obj/kernel.asm	/^c010db8f:	7f 1c                	jg     c010dbad <init_main+0x8f>$/;"	l
c010db91	obj/kernel.asm	/^c010db91:	c7 44 24 08 39 81 11 	movl   $0xc0118139,0x8(%esp)$/;"	l
c010db98	obj/kernel.asm	/^c010db98:	c0 $/;"	l
c010db99	obj/kernel.asm	/^c010db99:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)$/;"	l
c010dba0	obj/kernel.asm	/^c010dba0:	00 $/;"	l
c010dba1	obj/kernel.asm	/^c010dba1:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010dba8	obj/kernel.asm	/^c010dba8:	e8 1b 33 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dbad	obj/kernel.asm	/^c010dbad:	e8 92 ba ff ff       	call   c0109644 <check_sync>$/;"	l
c010dbb2	obj/kernel.asm	/^c010dbb2:	eb 05                	jmp    c010dbb9 <init_main+0x9b>$/;"	l
c010dbb4	obj/kernel.asm	/^c010dbb4:	e8 9b 09 00 00       	call   c010e554 <schedule>$/;"	l
c010dbb9	obj/kernel.asm	/^c010dbb9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010dbc0	obj/kernel.asm	/^c010dbc0:	00 $/;"	l
c010dbc1	obj/kernel.asm	/^c010dbc1:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010dbc8	obj/kernel.asm	/^c010dbc8:	e8 a4 fc ff ff       	call   c010d871 <do_wait>$/;"	l
c010dbcd	obj/kernel.asm	/^c010dbcd:	85 c0                	test   %eax,%eax$/;"	l
c010dbcf	obj/kernel.asm	/^c010dbcf:	74 e3                	je     c010dbb4 <init_main+0x96>$/;"	l
c010dbd1	obj/kernel.asm	/^c010dbd1:	e8 97 d3 ff ff       	call   c010af6d <fs_cleanup>$/;"	l
c010dbd6	obj/kernel.asm	/^c010dbd6:	c7 04 24 54 81 11 c0 	movl   $0xc0118154,(%esp)$/;"	l
c010dbdd	obj/kernel.asm	/^c010dbdd:	e8 83 27 ff ff       	call   c0100365 <cprintf>$/;"	l
c010dbe2	obj/kernel.asm	/^c010dbe2:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010dbe7	obj/kernel.asm	/^c010dbe7:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010dbed	obj/kernel.asm	/^c010dbed:	85 c0                	test   %eax,%eax$/;"	l
c010dbef	obj/kernel.asm	/^c010dbef:	75 1e                	jne    c010dc0f <init_main+0xf1>$/;"	l
c010dbf1	obj/kernel.asm	/^c010dbf1:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010dbf6	obj/kernel.asm	/^c010dbf6:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010dbfc	obj/kernel.asm	/^c010dbfc:	85 c0                	test   %eax,%eax$/;"	l
c010dbfe	obj/kernel.asm	/^c010dbfe:	75 0f                	jne    c010dc0f <init_main+0xf1>$/;"	l
c010dc00	obj/kernel.asm	/^c010dc00:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010dc05	obj/kernel.asm	/^c010dc05:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010dc0b	obj/kernel.asm	/^c010dc0b:	85 c0                	test   %eax,%eax$/;"	l
c010dc0d	obj/kernel.asm	/^c010dc0d:	74 24                	je     c010dc33 <init_main+0x115>$/;"	l
c010dc0f	obj/kernel.asm	/^c010dc0f:	c7 44 24 0c 78 81 11 	movl   $0xc0118178,0xc(%esp)$/;"	l
c010dc16	obj/kernel.asm	/^c010dc16:	c0 $/;"	l
c010dc17	obj/kernel.asm	/^c010dc17:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010dc1e	obj/kernel.asm	/^c010dc1e:	c0 $/;"	l
c010dc1f	obj/kernel.asm	/^c010dc1f:	c7 44 24 04 11 04 00 	movl   $0x411,0x4(%esp)$/;"	l
c010dc26	obj/kernel.asm	/^c010dc26:	00 $/;"	l
c010dc27	obj/kernel.asm	/^c010dc27:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010dc2e	obj/kernel.asm	/^c010dc2e:	e8 95 32 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dc33	obj/kernel.asm	/^c010dc33:	a1 40 1f 15 c0       	mov    0xc0151f40,%eax$/;"	l
c010dc38	obj/kernel.asm	/^c010dc38:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010dc3b	obj/kernel.asm	/^c010dc3b:	74 24                	je     c010dc61 <init_main+0x143>$/;"	l
c010dc3d	obj/kernel.asm	/^c010dc3d:	c7 44 24 0c c3 81 11 	movl   $0xc01181c3,0xc(%esp)$/;"	l
c010dc44	obj/kernel.asm	/^c010dc44:	c0 $/;"	l
c010dc45	obj/kernel.asm	/^c010dc45:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010dc4c	obj/kernel.asm	/^c010dc4c:	c0 $/;"	l
c010dc4d	obj/kernel.asm	/^c010dc4d:	c7 44 24 04 12 04 00 	movl   $0x412,0x4(%esp)$/;"	l
c010dc54	obj/kernel.asm	/^c010dc54:	00 $/;"	l
c010dc55	obj/kernel.asm	/^c010dc55:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010dc5c	obj/kernel.asm	/^c010dc5c:	e8 67 32 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dc61	obj/kernel.asm	/^c010dc61:	c7 45 e4 fc 31 15 c0 	movl   $0xc01531fc,-0x1c(%ebp)$/;"	l
c010dc68	obj/kernel.asm	/^c010dc68:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dc6b	obj/kernel.asm	/^c010dc6b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dc6e	obj/kernel.asm	/^c010dc6e:	8b 15 24 ff 14 c0    	mov    0xc014ff24,%edx$/;"	l
c010dc74	obj/kernel.asm	/^c010dc74:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010dc77	obj/kernel.asm	/^c010dc77:	39 d0                	cmp    %edx,%eax$/;"	l
c010dc79	obj/kernel.asm	/^c010dc79:	74 24                	je     c010dc9f <init_main+0x181>$/;"	l
c010dc7b	obj/kernel.asm	/^c010dc7b:	c7 44 24 0c d4 81 11 	movl   $0xc01181d4,0xc(%esp)$/;"	l
c010dc82	obj/kernel.asm	/^c010dc82:	c0 $/;"	l
c010dc83	obj/kernel.asm	/^c010dc83:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010dc8a	obj/kernel.asm	/^c010dc8a:	c0 $/;"	l
c010dc8b	obj/kernel.asm	/^c010dc8b:	c7 44 24 04 13 04 00 	movl   $0x413,0x4(%esp)$/;"	l
c010dc92	obj/kernel.asm	/^c010dc92:	00 $/;"	l
c010dc93	obj/kernel.asm	/^c010dc93:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010dc9a	obj/kernel.asm	/^c010dc9a:	e8 29 32 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dc9f	obj/kernel.asm	/^c010dc9f:	c7 45 e0 fc 31 15 c0 	movl   $0xc01531fc,-0x20(%ebp)$/;"	l
c010dca6	obj/kernel.asm	/^c010dca6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010dca9	obj/kernel.asm	/^c010dca9:	8b 00                	mov    (%eax),%eax$/;"	l
c010dcab	obj/kernel.asm	/^c010dcab:	8b 15 24 ff 14 c0    	mov    0xc014ff24,%edx$/;"	l
c010dcb1	obj/kernel.asm	/^c010dcb1:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010dcb4	obj/kernel.asm	/^c010dcb4:	39 d0                	cmp    %edx,%eax$/;"	l
c010dcb6	obj/kernel.asm	/^c010dcb6:	74 24                	je     c010dcdc <init_main+0x1be>$/;"	l
c010dcb8	obj/kernel.asm	/^c010dcb8:	c7 44 24 0c 04 82 11 	movl   $0xc0118204,0xc(%esp)$/;"	l
c010dcbf	obj/kernel.asm	/^c010dcbf:	c0 $/;"	l
c010dcc0	obj/kernel.asm	/^c010dcc0:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010dcc7	obj/kernel.asm	/^c010dcc7:	c0 $/;"	l
c010dcc8	obj/kernel.asm	/^c010dcc8:	c7 44 24 04 14 04 00 	movl   $0x414,0x4(%esp)$/;"	l
c010dccf	obj/kernel.asm	/^c010dccf:	00 $/;"	l
c010dcd0	obj/kernel.asm	/^c010dcd0:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010dcd7	obj/kernel.asm	/^c010dcd7:	e8 ec 31 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dcdc	obj/kernel.asm	/^c010dcdc:	c7 04 24 34 82 11 c0 	movl   $0xc0118234,(%esp)$/;"	l
c010dce3	obj/kernel.asm	/^c010dce3:	e8 7d 26 ff ff       	call   c0100365 <cprintf>$/;"	l
c010dce8	obj/kernel.asm	/^c010dce8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010dced	obj/kernel.asm	/^c010dced:	c9                   	leave  $/;"	l
c010dcee	obj/kernel.asm	/^c010dcee:	c3                   	ret    $/;"	l
c010dcef	obj/kernel.asm	/^c010dcef <proc_init>:$/;"	l
c010dcef	obj/kernel.asm	/^c010dcef:	55                   	push   %ebp$/;"	l
c010dcf0	obj/kernel.asm	/^c010dcf0:	89 e5                	mov    %esp,%ebp$/;"	l
c010dcf2	obj/kernel.asm	/^c010dcf2:	53                   	push   %ebx$/;"	l
c010dcf3	obj/kernel.asm	/^c010dcf3:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010dcf6	obj/kernel.asm	/^c010dcf6:	c7 45 ec fc 31 15 c0 	movl   $0xc01531fc,-0x14(%ebp)$/;"	l
c010dcfd	obj/kernel.asm	/^c010dcfd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dd00	obj/kernel.asm	/^c010dd00:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010dd03	obj/kernel.asm	/^c010dd03:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010dd06	obj/kernel.asm	/^c010dd06:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dd09	obj/kernel.asm	/^c010dd09:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010dd0c	obj/kernel.asm	/^c010dd0c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dd0f	obj/kernel.asm	/^c010dd0f:	89 10                	mov    %edx,(%eax)$/;"	l
c010dd11	obj/kernel.asm	/^c010dd11:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010dd18	obj/kernel.asm	/^c010dd18:	eb 26                	jmp    c010dd40 <proc_init+0x51>$/;"	l
c010dd1a	obj/kernel.asm	/^c010dd1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dd1d	obj/kernel.asm	/^c010dd1d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010dd20	obj/kernel.asm	/^c010dd20:	05 40 ff 14 c0       	add    $0xc014ff40,%eax$/;"	l
c010dd25	obj/kernel.asm	/^c010dd25:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010dd28	obj/kernel.asm	/^c010dd28:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dd2b	obj/kernel.asm	/^c010dd2b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010dd2e	obj/kernel.asm	/^c010dd2e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010dd31	obj/kernel.asm	/^c010dd31:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dd34	obj/kernel.asm	/^c010dd34:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010dd37	obj/kernel.asm	/^c010dd37:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dd3a	obj/kernel.asm	/^c010dd3a:	89 10                	mov    %edx,(%eax)$/;"	l
c010dd3c	obj/kernel.asm	/^c010dd3c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010dd40	obj/kernel.asm	/^c010dd40:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010dd47	obj/kernel.asm	/^c010dd47:	7e d1                	jle    c010dd1a <proc_init+0x2b>$/;"	l
c010dd49	obj/kernel.asm	/^c010dd49:	e8 25 e1 ff ff       	call   c010be73 <alloc_proc>$/;"	l
c010dd4e	obj/kernel.asm	/^c010dd4e:	a3 20 ff 14 c0       	mov    %eax,0xc014ff20$/;"	l
c010dd53	obj/kernel.asm	/^c010dd53:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010dd58	obj/kernel.asm	/^c010dd58:	85 c0                	test   %eax,%eax$/;"	l
c010dd5a	obj/kernel.asm	/^c010dd5a:	75 1c                	jne    c010dd78 <proc_init+0x89>$/;"	l
c010dd5c	obj/kernel.asm	/^c010dd5c:	c7 44 24 08 4d 82 11 	movl   $0xc011824d,0x8(%esp)$/;"	l
c010dd63	obj/kernel.asm	/^c010dd63:	c0 $/;"	l
c010dd64	obj/kernel.asm	/^c010dd64:	c7 44 24 04 26 04 00 	movl   $0x426,0x4(%esp)$/;"	l
c010dd6b	obj/kernel.asm	/^c010dd6b:	00 $/;"	l
c010dd6c	obj/kernel.asm	/^c010dd6c:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010dd73	obj/kernel.asm	/^c010dd73:	e8 50 31 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dd78	obj/kernel.asm	/^c010dd78:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010dd7d	obj/kernel.asm	/^c010dd7d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010dd84	obj/kernel.asm	/^c010dd84:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010dd89	obj/kernel.asm	/^c010dd89:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010dd8f	obj/kernel.asm	/^c010dd8f:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010dd94	obj/kernel.asm	/^c010dd94:	ba 00 c0 14 c0       	mov    $0xc014c000,%edx$/;"	l
c010dd99	obj/kernel.asm	/^c010dd99:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010dd9c	obj/kernel.asm	/^c010dd9c:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010dda1	obj/kernel.asm	/^c010dda1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010dda8	obj/kernel.asm	/^c010dda8:	8b 1d 20 ff 14 c0    	mov    0xc014ff20,%ebx$/;"	l
c010ddae	obj/kernel.asm	/^c010ddae:	e8 f3 d1 ff ff       	call   c010afa6 <files_create>$/;"	l
c010ddb3	obj/kernel.asm	/^c010ddb3:	89 83 c4 00 00 00    	mov    %eax,0xc4(%ebx)$/;"	l
c010ddb9	obj/kernel.asm	/^c010ddb9:	8b 83 c4 00 00 00    	mov    0xc4(%ebx),%eax$/;"	l
c010ddbf	obj/kernel.asm	/^c010ddbf:	85 c0                	test   %eax,%eax$/;"	l
c010ddc1	obj/kernel.asm	/^c010ddc1:	75 1c                	jne    c010dddf <proc_init+0xf0>$/;"	l
c010ddc3	obj/kernel.asm	/^c010ddc3:	c7 44 24 08 68 82 11 	movl   $0xc0118268,0x8(%esp)$/;"	l
c010ddca	obj/kernel.asm	/^c010ddca:	c0 $/;"	l
c010ddcb	obj/kernel.asm	/^c010ddcb:	c7 44 24 04 2f 04 00 	movl   $0x42f,0x4(%esp)$/;"	l
c010ddd2	obj/kernel.asm	/^c010ddd2:	00 $/;"	l
c010ddd3	obj/kernel.asm	/^c010ddd3:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010ddda	obj/kernel.asm	/^c010ddda:	e8 e9 30 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010dddf	obj/kernel.asm	/^c010dddf:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010dde4	obj/kernel.asm	/^c010dde4:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010ddea	obj/kernel.asm	/^c010ddea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dded	obj/kernel.asm	/^c010dded:	e8 4d e0 ff ff       	call   c010be3f <files_count_inc>$/;"	l
c010ddf2	obj/kernel.asm	/^c010ddf2:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010ddf7	obj/kernel.asm	/^c010ddf7:	c7 44 24 04 8a 82 11 	movl   $0xc011828a,0x4(%esp)$/;"	l
c010ddfe	obj/kernel.asm	/^c010ddfe:	c0 $/;"	l
c010ddff	obj/kernel.asm	/^c010ddff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010de02	obj/kernel.asm	/^c010de02:	e8 1b e2 ff ff       	call   c010c022 <set_proc_name>$/;"	l
c010de07	obj/kernel.asm	/^c010de07:	a1 40 1f 15 c0       	mov    0xc0151f40,%eax$/;"	l
c010de0c	obj/kernel.asm	/^c010de0c:	83 c0 01             	add    $0x1,%eax$/;"	l
c010de0f	obj/kernel.asm	/^c010de0f:	a3 40 1f 15 c0       	mov    %eax,0xc0151f40$/;"	l
c010de14	obj/kernel.asm	/^c010de14:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010de19	obj/kernel.asm	/^c010de19:	a3 28 ff 14 c0       	mov    %eax,0xc014ff28$/;"	l
c010de1e	obj/kernel.asm	/^c010de1e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010de25	obj/kernel.asm	/^c010de25:	00 $/;"	l
c010de26	obj/kernel.asm	/^c010de26:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010de2d	obj/kernel.asm	/^c010de2d:	00 $/;"	l
c010de2e	obj/kernel.asm	/^c010de2e:	c7 04 24 1e db 10 c0 	movl   $0xc010db1e,(%esp)$/;"	l
c010de35	obj/kernel.asm	/^c010de35:	e8 75 e6 ff ff       	call   c010c4af <kernel_thread>$/;"	l
c010de3a	obj/kernel.asm	/^c010de3a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010de3d	obj/kernel.asm	/^c010de3d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010de41	obj/kernel.asm	/^c010de41:	7f 1c                	jg     c010de5f <proc_init+0x170>$/;"	l
c010de43	obj/kernel.asm	/^c010de43:	c7 44 24 08 8f 82 11 	movl   $0xc011828f,0x8(%esp)$/;"	l
c010de4a	obj/kernel.asm	/^c010de4a:	c0 $/;"	l
c010de4b	obj/kernel.asm	/^c010de4b:	c7 44 24 04 3a 04 00 	movl   $0x43a,0x4(%esp)$/;"	l
c010de52	obj/kernel.asm	/^c010de52:	00 $/;"	l
c010de53	obj/kernel.asm	/^c010de53:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010de5a	obj/kernel.asm	/^c010de5a:	e8 69 30 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010de5f	obj/kernel.asm	/^c010de5f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010de62	obj/kernel.asm	/^c010de62:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010de65	obj/kernel.asm	/^c010de65:	e8 d1 e5 ff ff       	call   c010c43b <find_proc>$/;"	l
c010de6a	obj/kernel.asm	/^c010de6a:	a3 24 ff 14 c0       	mov    %eax,0xc014ff24$/;"	l
c010de6f	obj/kernel.asm	/^c010de6f:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010de74	obj/kernel.asm	/^c010de74:	c7 44 24 04 a9 82 11 	movl   $0xc01182a9,0x4(%esp)$/;"	l
c010de7b	obj/kernel.asm	/^c010de7b:	c0 $/;"	l
c010de7c	obj/kernel.asm	/^c010de7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010de7f	obj/kernel.asm	/^c010de7f:	e8 9e e1 ff ff       	call   c010c022 <set_proc_name>$/;"	l
c010de84	obj/kernel.asm	/^c010de84:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010de89	obj/kernel.asm	/^c010de89:	85 c0                	test   %eax,%eax$/;"	l
c010de8b	obj/kernel.asm	/^c010de8b:	74 0c                	je     c010de99 <proc_init+0x1aa>$/;"	l
c010de8d	obj/kernel.asm	/^c010de8d:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010de92	obj/kernel.asm	/^c010de92:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010de95	obj/kernel.asm	/^c010de95:	85 c0                	test   %eax,%eax$/;"	l
c010de97	obj/kernel.asm	/^c010de97:	74 24                	je     c010debd <proc_init+0x1ce>$/;"	l
c010de99	obj/kernel.asm	/^c010de99:	c7 44 24 0c b0 82 11 	movl   $0xc01182b0,0xc(%esp)$/;"	l
c010dea0	obj/kernel.asm	/^c010dea0:	c0 $/;"	l
c010dea1	obj/kernel.asm	/^c010dea1:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010dea8	obj/kernel.asm	/^c010dea8:	c0 $/;"	l
c010dea9	obj/kernel.asm	/^c010dea9:	c7 44 24 04 40 04 00 	movl   $0x440,0x4(%esp)$/;"	l
c010deb0	obj/kernel.asm	/^c010deb0:	00 $/;"	l
c010deb1	obj/kernel.asm	/^c010deb1:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010deb8	obj/kernel.asm	/^c010deb8:	e8 0b 30 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010debd	obj/kernel.asm	/^c010debd:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010dec2	obj/kernel.asm	/^c010dec2:	85 c0                	test   %eax,%eax$/;"	l
c010dec4	obj/kernel.asm	/^c010dec4:	74 0d                	je     c010ded3 <proc_init+0x1e4>$/;"	l
c010dec6	obj/kernel.asm	/^c010dec6:	a1 24 ff 14 c0       	mov    0xc014ff24,%eax$/;"	l
c010decb	obj/kernel.asm	/^c010decb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dece	obj/kernel.asm	/^c010dece:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010ded1	obj/kernel.asm	/^c010ded1:	74 24                	je     c010def7 <proc_init+0x208>$/;"	l
c010ded3	obj/kernel.asm	/^c010ded3:	c7 44 24 0c d8 82 11 	movl   $0xc01182d8,0xc(%esp)$/;"	l
c010deda	obj/kernel.asm	/^c010deda:	c0 $/;"	l
c010dedb	obj/kernel.asm	/^c010dedb:	c7 44 24 08 8f 7e 11 	movl   $0xc0117e8f,0x8(%esp)$/;"	l
c010dee2	obj/kernel.asm	/^c010dee2:	c0 $/;"	l
c010dee3	obj/kernel.asm	/^c010dee3:	c7 44 24 04 41 04 00 	movl   $0x441,0x4(%esp)$/;"	l
c010deea	obj/kernel.asm	/^c010deea:	00 $/;"	l
c010deeb	obj/kernel.asm	/^c010deeb:	c7 04 24 68 7e 11 c0 	movl   $0xc0117e68,(%esp)$/;"	l
c010def2	obj/kernel.asm	/^c010def2:	e8 d1 2f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010def7	obj/kernel.asm	/^c010def7:	83 c4 24             	add    $0x24,%esp$/;"	l
c010defa	obj/kernel.asm	/^c010defa:	5b                   	pop    %ebx$/;"	l
c010defb	obj/kernel.asm	/^c010defb:	5d                   	pop    %ebp$/;"	l
c010defc	obj/kernel.asm	/^c010defc:	c3                   	ret    $/;"	l
c010defd	obj/kernel.asm	/^c010defd <cpu_idle>:$/;"	l
c010defd	obj/kernel.asm	/^c010defd:	55                   	push   %ebp$/;"	l
c010defe	obj/kernel.asm	/^c010defe:	89 e5                	mov    %esp,%ebp$/;"	l
c010df00	obj/kernel.asm	/^c010df00:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010df03	obj/kernel.asm	/^c010df03:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010df08	obj/kernel.asm	/^c010df08:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010df0b	obj/kernel.asm	/^c010df0b:	85 c0                	test   %eax,%eax$/;"	l
c010df0d	obj/kernel.asm	/^c010df0d:	74 07                	je     c010df16 <cpu_idle+0x19>$/;"	l
c010df0f	obj/kernel.asm	/^c010df0f:	e8 40 06 00 00       	call   c010e554 <schedule>$/;"	l
c010df14	obj/kernel.asm	/^c010df14:	eb ed                	jmp    c010df03 <cpu_idle+0x6>$/;"	l
c010df16	obj/kernel.asm	/^c010df16:	eb eb                	jmp    c010df03 <cpu_idle+0x6>$/;"	l
c010df18	obj/kernel.asm	/^c010df18 <lab6_set_priority>:$/;"	l
c010df18	obj/kernel.asm	/^c010df18:	55                   	push   %ebp$/;"	l
c010df19	obj/kernel.asm	/^c010df19:	89 e5                	mov    %esp,%ebp$/;"	l
c010df1b	obj/kernel.asm	/^c010df1b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010df1f	obj/kernel.asm	/^c010df1f:	75 11                	jne    c010df32 <lab6_set_priority+0x1a>$/;"	l
c010df21	obj/kernel.asm	/^c010df21:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010df26	obj/kernel.asm	/^c010df26:	c7 80 c0 00 00 00 01 	movl   $0x1,0xc0(%eax)$/;"	l
c010df2d	obj/kernel.asm	/^c010df2d:	00 00 00 $/;"	l
c010df30	obj/kernel.asm	/^c010df30:	eb 0e                	jmp    c010df40 <lab6_set_priority+0x28>$/;"	l
c010df32	obj/kernel.asm	/^c010df32:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010df37	obj/kernel.asm	/^c010df37:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010df3a	obj/kernel.asm	/^c010df3a:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)$/;"	l
c010df40	obj/kernel.asm	/^c010df40:	5d                   	pop    %ebp$/;"	l
c010df41	obj/kernel.asm	/^c010df41:	c3                   	ret    $/;"	l
c010df42	obj/kernel.asm	/^c010df42 <do_sleep>:$/;"	l
c010df42	obj/kernel.asm	/^c010df42:	55                   	push   %ebp$/;"	l
c010df43	obj/kernel.asm	/^c010df43:	89 e5                	mov    %esp,%ebp$/;"	l
c010df45	obj/kernel.asm	/^c010df45:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010df48	obj/kernel.asm	/^c010df48:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010df4c	obj/kernel.asm	/^c010df4c:	75 07                	jne    c010df55 <do_sleep+0x13>$/;"	l
c010df4e	obj/kernel.asm	/^c010df4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010df53	obj/kernel.asm	/^c010df53:	eb 6b                	jmp    c010dfc0 <do_sleep+0x7e>$/;"	l
c010df55	obj/kernel.asm	/^c010df55:	e8 0e dd ff ff       	call   c010bc68 <__intr_save>$/;"	l
c010df5a	obj/kernel.asm	/^c010df5a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010df5d	obj/kernel.asm	/^c010df5d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010df60	obj/kernel.asm	/^c010df60:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010df65	obj/kernel.asm	/^c010df65:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010df69	obj/kernel.asm	/^c010df69:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010df6d	obj/kernel.asm	/^c010df6d:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010df70	obj/kernel.asm	/^c010df70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010df73	obj/kernel.asm	/^c010df73:	e8 b7 dc ff ff       	call   c010bc2f <timer_init>$/;"	l
c010df78	obj/kernel.asm	/^c010df78:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010df7b	obj/kernel.asm	/^c010df7b:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010df80	obj/kernel.asm	/^c010df80:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010df86	obj/kernel.asm	/^c010df86:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010df8b	obj/kernel.asm	/^c010df8b:	c7 80 90 00 00 00 02 	movl   $0x80000002,0x90(%eax)$/;"	l
c010df92	obj/kernel.asm	/^c010df92:	00 00 80 $/;"	l
c010df95	obj/kernel.asm	/^c010df95:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010df98	obj/kernel.asm	/^c010df98:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010df9b	obj/kernel.asm	/^c010df9b:	e8 3f 06 00 00       	call   c010e5df <add_timer>$/;"	l
c010dfa0	obj/kernel.asm	/^c010dfa0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dfa3	obj/kernel.asm	/^c010dfa3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dfa6	obj/kernel.asm	/^c010dfa6:	e8 e7 dc ff ff       	call   c010bc92 <__intr_restore>$/;"	l
c010dfab	obj/kernel.asm	/^c010dfab:	e8 a4 05 00 00       	call   c010e554 <schedule>$/;"	l
c010dfb0	obj/kernel.asm	/^c010dfb0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dfb3	obj/kernel.asm	/^c010dfb3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dfb6	obj/kernel.asm	/^c010dfb6:	e8 62 07 00 00       	call   c010e71d <del_timer>$/;"	l
c010dfbb	obj/kernel.asm	/^c010dfbb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010dfc0	obj/kernel.asm	/^c010dfc0:	c9                   	leave  $/;"	l
c010dfc1	obj/kernel.asm	/^c010dfc1:	c3                   	ret    $/;"	l
c010dfc2	obj/kernel.asm	/^c010dfc2 <switch_to>:$/;"	l
c010dfc2	obj/kernel.asm	/^c010dfc2:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010dfc6	obj/kernel.asm	/^c010dfc6:	8f 00                	popl   (%eax)$/;"	l
c010dfc8	obj/kernel.asm	/^c010dfc8:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c010dfcb	obj/kernel.asm	/^c010dfcb:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c010dfce	obj/kernel.asm	/^c010dfce:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c010dfd1	obj/kernel.asm	/^c010dfd1:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010dfd4	obj/kernel.asm	/^c010dfd4:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c010dfd7	obj/kernel.asm	/^c010dfd7:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c010dfda	obj/kernel.asm	/^c010dfda:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c010dfdd	obj/kernel.asm	/^c010dfdd:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010dfe1	obj/kernel.asm	/^c010dfe1:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c010dfe4	obj/kernel.asm	/^c010dfe4:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c010dfe7	obj/kernel.asm	/^c010dfe7:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c010dfea	obj/kernel.asm	/^c010dfea:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010dfed	obj/kernel.asm	/^c010dfed:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010dff0	obj/kernel.asm	/^c010dff0:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c010dff3	obj/kernel.asm	/^c010dff3:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c010dff6	obj/kernel.asm	/^c010dff6:	ff 30                	pushl  (%eax)$/;"	l
c010dff8	obj/kernel.asm	/^c010dff8:	c3                   	ret    $/;"	l
c010dff9	obj/kernel.asm	/^c010dff9 <skew_heap_merge>:$/;"	l
c010dff9	obj/kernel.asm	/^c010dff9:	55                   	push   %ebp$/;"	l
c010dffa	obj/kernel.asm	/^c010dffa:	89 e5                	mov    %esp,%ebp$/;"	l
c010dffc	obj/kernel.asm	/^c010dffc:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010dfff	obj/kernel.asm	/^c010dfff:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e003	obj/kernel.asm	/^c010e003:	75 08                	jne    c010e00d <skew_heap_merge+0x14>$/;"	l
c010e005	obj/kernel.asm	/^c010e005:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e008	obj/kernel.asm	/^c010e008:	e9 bd 00 00 00       	jmp    c010e0ca <skew_heap_merge+0xd1>$/;"	l
c010e00d	obj/kernel.asm	/^c010e00d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010e011	obj/kernel.asm	/^c010e011:	75 08                	jne    c010e01b <skew_heap_merge+0x22>$/;"	l
c010e013	obj/kernel.asm	/^c010e013:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e016	obj/kernel.asm	/^c010e016:	e9 af 00 00 00       	jmp    c010e0ca <skew_heap_merge+0xd1>$/;"	l
c010e01b	obj/kernel.asm	/^c010e01b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e01e	obj/kernel.asm	/^c010e01e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e022	obj/kernel.asm	/^c010e022:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e025	obj/kernel.asm	/^c010e025:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e028	obj/kernel.asm	/^c010e028:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e02b	obj/kernel.asm	/^c010e02b:	ff d0                	call   *%eax$/;"	l
c010e02d	obj/kernel.asm	/^c010e02d:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
c010e030	obj/kernel.asm	/^c010e030:	75 4d                	jne    c010e07f <skew_heap_merge+0x86>$/;"	l
c010e032	obj/kernel.asm	/^c010e032:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e035	obj/kernel.asm	/^c010e035:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e038	obj/kernel.asm	/^c010e038:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e03b	obj/kernel.asm	/^c010e03b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e03e	obj/kernel.asm	/^c010e03e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e041	obj/kernel.asm	/^c010e041:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010e044	obj/kernel.asm	/^c010e044:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010e048	obj/kernel.asm	/^c010e048:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010e04b	obj/kernel.asm	/^c010e04b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010e04f	obj/kernel.asm	/^c010e04f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e052	obj/kernel.asm	/^c010e052:	e8 a2 ff ff ff       	call   c010dff9 <skew_heap_merge>$/;"	l
c010e057	obj/kernel.asm	/^c010e057:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e05a	obj/kernel.asm	/^c010e05a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e05d	obj/kernel.asm	/^c010e05d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e060	obj/kernel.asm	/^c010e060:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e063	obj/kernel.asm	/^c010e063:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e066	obj/kernel.asm	/^c010e066:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e069	obj/kernel.asm	/^c010e069:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e06c	obj/kernel.asm	/^c010e06c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e070	obj/kernel.asm	/^c010e070:	74 08                	je     c010e07a <skew_heap_merge+0x81>$/;"	l
c010e072	obj/kernel.asm	/^c010e072:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e075	obj/kernel.asm	/^c010e075:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e078	obj/kernel.asm	/^c010e078:	89 10                	mov    %edx,(%eax)$/;"	l
c010e07a	obj/kernel.asm	/^c010e07a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e07d	obj/kernel.asm	/^c010e07d:	eb 4b                	jmp    c010e0ca <skew_heap_merge+0xd1>$/;"	l
c010e07f	obj/kernel.asm	/^c010e07f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e082	obj/kernel.asm	/^c010e082:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e085	obj/kernel.asm	/^c010e085:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e088	obj/kernel.asm	/^c010e088:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e08b	obj/kernel.asm	/^c010e08b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e08e	obj/kernel.asm	/^c010e08e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010e091	obj/kernel.asm	/^c010e091:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010e095	obj/kernel.asm	/^c010e095:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e099	obj/kernel.asm	/^c010e099:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e09c	obj/kernel.asm	/^c010e09c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e09f	obj/kernel.asm	/^c010e09f:	e8 55 ff ff ff       	call   c010dff9 <skew_heap_merge>$/;"	l
c010e0a4	obj/kernel.asm	/^c010e0a4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e0a7	obj/kernel.asm	/^c010e0a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e0aa	obj/kernel.asm	/^c010e0aa:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e0ad	obj/kernel.asm	/^c010e0ad:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e0b0	obj/kernel.asm	/^c010e0b0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e0b3	obj/kernel.asm	/^c010e0b3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e0b6	obj/kernel.asm	/^c010e0b6:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e0b9	obj/kernel.asm	/^c010e0b9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e0bd	obj/kernel.asm	/^c010e0bd:	74 08                	je     c010e0c7 <skew_heap_merge+0xce>$/;"	l
c010e0bf	obj/kernel.asm	/^c010e0bf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e0c2	obj/kernel.asm	/^c010e0c2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010e0c5	obj/kernel.asm	/^c010e0c5:	89 10                	mov    %edx,(%eax)$/;"	l
c010e0c7	obj/kernel.asm	/^c010e0c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e0ca	obj/kernel.asm	/^c010e0ca:	c9                   	leave  $/;"	l
c010e0cb	obj/kernel.asm	/^c010e0cb:	c3                   	ret    $/;"	l
c010e0cc	obj/kernel.asm	/^c010e0cc <proc_stride_comp_f>:$/;"	l
c010e0cc	obj/kernel.asm	/^c010e0cc:	55                   	push   %ebp$/;"	l
c010e0cd	obj/kernel.asm	/^c010e0cd:	89 e5                	mov    %esp,%ebp$/;"	l
c010e0cf	obj/kernel.asm	/^c010e0cf:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010e0d2	obj/kernel.asm	/^c010e0d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e0d5	obj/kernel.asm	/^c010e0d5:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010e0da	obj/kernel.asm	/^c010e0da:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010e0dd	obj/kernel.asm	/^c010e0dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e0e0	obj/kernel.asm	/^c010e0e0:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010e0e5	obj/kernel.asm	/^c010e0e5:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010e0e8	obj/kernel.asm	/^c010e0e8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010e0eb	obj/kernel.asm	/^c010e0eb:	8b 90 bc 00 00 00    	mov    0xbc(%eax),%edx$/;"	l
c010e0f1	obj/kernel.asm	/^c010e0f1:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e0f4	obj/kernel.asm	/^c010e0f4:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010e0fa	obj/kernel.asm	/^c010e0fa:	29 c2                	sub    %eax,%edx$/;"	l
c010e0fc	obj/kernel.asm	/^c010e0fc:	89 d0                	mov    %edx,%eax$/;"	l
c010e0fe	obj/kernel.asm	/^c010e0fe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e101	obj/kernel.asm	/^c010e101:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e105	obj/kernel.asm	/^c010e105:	7e 07                	jle    c010e10e <proc_stride_comp_f+0x42>$/;"	l
c010e107	obj/kernel.asm	/^c010e107:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010e10c	obj/kernel.asm	/^c010e10c:	eb 12                	jmp    c010e120 <proc_stride_comp_f+0x54>$/;"	l
c010e10e	obj/kernel.asm	/^c010e10e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e112	obj/kernel.asm	/^c010e112:	75 07                	jne    c010e11b <proc_stride_comp_f+0x4f>$/;"	l
c010e114	obj/kernel.asm	/^c010e114:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e119	obj/kernel.asm	/^c010e119:	eb 05                	jmp    c010e120 <proc_stride_comp_f+0x54>$/;"	l
c010e11b	obj/kernel.asm	/^c010e11b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010e120	obj/kernel.asm	/^c010e120:	c9                   	leave  $/;"	l
c010e121	obj/kernel.asm	/^c010e121:	c3                   	ret    $/;"	l
c010e122	obj/kernel.asm	/^c010e122 <stride_init>:$/;"	l
c010e122	obj/kernel.asm	/^c010e122:	55                   	push   %ebp$/;"	l
c010e123	obj/kernel.asm	/^c010e123:	89 e5                	mov    %esp,%ebp$/;"	l
c010e125	obj/kernel.asm	/^c010e125:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010e128	obj/kernel.asm	/^c010e128:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e12b	obj/kernel.asm	/^c010e12b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010e12e	obj/kernel.asm	/^c010e12e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010e131	obj/kernel.asm	/^c010e131:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010e134	obj/kernel.asm	/^c010e134:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e137	obj/kernel.asm	/^c010e137:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010e13a	obj/kernel.asm	/^c010e13a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010e13d	obj/kernel.asm	/^c010e13d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010e140	obj/kernel.asm	/^c010e140:	89 10                	mov    %edx,(%eax)$/;"	l
c010e142	obj/kernel.asm	/^c010e142:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e145	obj/kernel.asm	/^c010e145:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010e14c	obj/kernel.asm	/^c010e14c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e14f	obj/kernel.asm	/^c010e14f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010e156	obj/kernel.asm	/^c010e156:	c9                   	leave  $/;"	l
c010e157	obj/kernel.asm	/^c010e157:	c3                   	ret    $/;"	l
c010e158	obj/kernel.asm	/^c010e158 <stride_enqueue>:$/;"	l
c010e158	obj/kernel.asm	/^c010e158:	55                   	push   %ebp$/;"	l
c010e159	obj/kernel.asm	/^c010e159:	89 e5                	mov    %esp,%ebp$/;"	l
c010e15b	obj/kernel.asm	/^c010e15b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e15e	obj/kernel.asm	/^c010e15e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e161	obj/kernel.asm	/^c010e161:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010e167	obj/kernel.asm	/^c010e167:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e16a	obj/kernel.asm	/^c010e16a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e16d	obj/kernel.asm	/^c010e16d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e170	obj/kernel.asm	/^c010e170:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010e173	obj/kernel.asm	/^c010e173:	c7 45 ec cc e0 10 c0 	movl   $0xc010e0cc,-0x14(%ebp)$/;"	l
c010e17a	obj/kernel.asm	/^c010e17a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e17d	obj/kernel.asm	/^c010e17d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e180	obj/kernel.asm	/^c010e180:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e183	obj/kernel.asm	/^c010e183:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010e189	obj/kernel.asm	/^c010e189:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e18c	obj/kernel.asm	/^c010e18c:	8b 10                	mov    (%eax),%edx$/;"	l
c010e18e	obj/kernel.asm	/^c010e18e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e191	obj/kernel.asm	/^c010e191:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e194	obj/kernel.asm	/^c010e194:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e197	obj/kernel.asm	/^c010e197:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010e19a	obj/kernel.asm	/^c010e19a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e19d	obj/kernel.asm	/^c010e19d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e1a0	obj/kernel.asm	/^c010e1a0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e1a3	obj/kernel.asm	/^c010e1a3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e1a7	obj/kernel.asm	/^c010e1a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e1aa	obj/kernel.asm	/^c010e1aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e1ae	obj/kernel.asm	/^c010e1ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e1b1	obj/kernel.asm	/^c010e1b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e1b4	obj/kernel.asm	/^c010e1b4:	e8 40 fe ff ff       	call   c010dff9 <skew_heap_merge>$/;"	l
c010e1b9	obj/kernel.asm	/^c010e1b9:	89 c2                	mov    %eax,%edx$/;"	l
c010e1bb	obj/kernel.asm	/^c010e1bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1be	obj/kernel.asm	/^c010e1be:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010e1c1	obj/kernel.asm	/^c010e1c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e1c4	obj/kernel.asm	/^c010e1c4:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010e1ca	obj/kernel.asm	/^c010e1ca:	85 c0                	test   %eax,%eax$/;"	l
c010e1cc	obj/kernel.asm	/^c010e1cc:	74 13                	je     c010e1e1 <stride_enqueue+0x89>$/;"	l
c010e1ce	obj/kernel.asm	/^c010e1ce:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e1d1	obj/kernel.asm	/^c010e1d1:	8b 90 ac 00 00 00    	mov    0xac(%eax),%edx$/;"	l
c010e1d7	obj/kernel.asm	/^c010e1d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1da	obj/kernel.asm	/^c010e1da:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e1dd	obj/kernel.asm	/^c010e1dd:	39 c2                	cmp    %eax,%edx$/;"	l
c010e1df	obj/kernel.asm	/^c010e1df:	7e 0f                	jle    c010e1f0 <stride_enqueue+0x98>$/;"	l
c010e1e1	obj/kernel.asm	/^c010e1e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1e4	obj/kernel.asm	/^c010e1e4:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010e1e7	obj/kernel.asm	/^c010e1e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e1ea	obj/kernel.asm	/^c010e1ea:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010e1f0	obj/kernel.asm	/^c010e1f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e1f3	obj/kernel.asm	/^c010e1f3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e1f6	obj/kernel.asm	/^c010e1f6:	89 90 a0 00 00 00    	mov    %edx,0xa0(%eax)$/;"	l
c010e1fc	obj/kernel.asm	/^c010e1fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1ff	obj/kernel.asm	/^c010e1ff:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e202	obj/kernel.asm	/^c010e202:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010e205	obj/kernel.asm	/^c010e205:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e208	obj/kernel.asm	/^c010e208:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e20b	obj/kernel.asm	/^c010e20b:	c9                   	leave  $/;"	l
c010e20c	obj/kernel.asm	/^c010e20c:	c3                   	ret    $/;"	l
c010e20d	obj/kernel.asm	/^c010e20d <stride_dequeue>:$/;"	l
c010e20d	obj/kernel.asm	/^c010e20d:	55                   	push   %ebp$/;"	l
c010e20e	obj/kernel.asm	/^c010e20e:	89 e5                	mov    %esp,%ebp$/;"	l
c010e210	obj/kernel.asm	/^c010e210:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010e213	obj/kernel.asm	/^c010e213:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e216	obj/kernel.asm	/^c010e216:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010e21c	obj/kernel.asm	/^c010e21c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e21f	obj/kernel.asm	/^c010e21f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e222	obj/kernel.asm	/^c010e222:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e225	obj/kernel.asm	/^c010e225:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010e228	obj/kernel.asm	/^c010e228:	c7 45 ec cc e0 10 c0 	movl   $0xc010e0cc,-0x14(%ebp)$/;"	l
c010e22f	obj/kernel.asm	/^c010e22f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e232	obj/kernel.asm	/^c010e232:	8b 00                	mov    (%eax),%eax$/;"	l
c010e234	obj/kernel.asm	/^c010e234:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e237	obj/kernel.asm	/^c010e237:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e23a	obj/kernel.asm	/^c010e23a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010e23d	obj/kernel.asm	/^c010e23d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e240	obj/kernel.asm	/^c010e240:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e243	obj/kernel.asm	/^c010e243:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010e246	obj/kernel.asm	/^c010e246:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c010e24a	obj/kernel.asm	/^c010e24a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010e24e	obj/kernel.asm	/^c010e24e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e251	obj/kernel.asm	/^c010e251:	e8 a3 fd ff ff       	call   c010dff9 <skew_heap_merge>$/;"	l
c010e256	obj/kernel.asm	/^c010e256:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e259	obj/kernel.asm	/^c010e259:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010e25d	obj/kernel.asm	/^c010e25d:	74 08                	je     c010e267 <stride_dequeue+0x5a>$/;"	l
c010e25f	obj/kernel.asm	/^c010e25f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e262	obj/kernel.asm	/^c010e262:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010e265	obj/kernel.asm	/^c010e265:	89 10                	mov    %edx,(%eax)$/;"	l
c010e267	obj/kernel.asm	/^c010e267:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010e26b	obj/kernel.asm	/^c010e26b:	74 24                	je     c010e291 <stride_dequeue+0x84>$/;"	l
c010e26d	obj/kernel.asm	/^c010e26d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e270	obj/kernel.asm	/^c010e270:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e273	obj/kernel.asm	/^c010e273:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010e276	obj/kernel.asm	/^c010e276:	75 0b                	jne    c010e283 <stride_dequeue+0x76>$/;"	l
c010e278	obj/kernel.asm	/^c010e278:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e27b	obj/kernel.asm	/^c010e27b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010e27e	obj/kernel.asm	/^c010e27e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e281	obj/kernel.asm	/^c010e281:	eb 09                	jmp    c010e28c <stride_dequeue+0x7f>$/;"	l
c010e283	obj/kernel.asm	/^c010e283:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e286	obj/kernel.asm	/^c010e286:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010e289	obj/kernel.asm	/^c010e289:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e28c	obj/kernel.asm	/^c010e28c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e28f	obj/kernel.asm	/^c010e28f:	eb 03                	jmp    c010e294 <stride_dequeue+0x87>$/;"	l
c010e291	obj/kernel.asm	/^c010e291:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e294	obj/kernel.asm	/^c010e294:	89 c2                	mov    %eax,%edx$/;"	l
c010e296	obj/kernel.asm	/^c010e296:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e299	obj/kernel.asm	/^c010e299:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010e29c	obj/kernel.asm	/^c010e29c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e29f	obj/kernel.asm	/^c010e29f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e2a2	obj/kernel.asm	/^c010e2a2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010e2a5	obj/kernel.asm	/^c010e2a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e2a8	obj/kernel.asm	/^c010e2a8:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e2ab	obj/kernel.asm	/^c010e2ab:	c9                   	leave  $/;"	l
c010e2ac	obj/kernel.asm	/^c010e2ac:	c3                   	ret    $/;"	l
c010e2ad	obj/kernel.asm	/^c010e2ad <stride_pick_next>:$/;"	l
c010e2ad	obj/kernel.asm	/^c010e2ad:	55                   	push   %ebp$/;"	l
c010e2ae	obj/kernel.asm	/^c010e2ae:	89 e5                	mov    %esp,%ebp$/;"	l
c010e2b0	obj/kernel.asm	/^c010e2b0:	53                   	push   %ebx$/;"	l
c010e2b1	obj/kernel.asm	/^c010e2b1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010e2b4	obj/kernel.asm	/^c010e2b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e2b7	obj/kernel.asm	/^c010e2b7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e2ba	obj/kernel.asm	/^c010e2ba:	85 c0                	test   %eax,%eax$/;"	l
c010e2bc	obj/kernel.asm	/^c010e2bc:	75 07                	jne    c010e2c5 <stride_pick_next+0x18>$/;"	l
c010e2be	obj/kernel.asm	/^c010e2be:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e2c3	obj/kernel.asm	/^c010e2c3:	eb 62                	jmp    c010e327 <stride_pick_next+0x7a>$/;"	l
c010e2c5	obj/kernel.asm	/^c010e2c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e2c8	obj/kernel.asm	/^c010e2c8:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e2cb	obj/kernel.asm	/^c010e2cb:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010e2d0	obj/kernel.asm	/^c010e2d0:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010e2d3	obj/kernel.asm	/^c010e2d3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e2d6	obj/kernel.asm	/^c010e2d6:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax$/;"	l
c010e2dc	obj/kernel.asm	/^c010e2dc:	85 c0                	test   %eax,%eax$/;"	l
c010e2de	obj/kernel.asm	/^c010e2de:	75 1a                	jne    c010e2fa <stride_pick_next+0x4d>$/;"	l
c010e2e0	obj/kernel.asm	/^c010e2e0:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e2e3	obj/kernel.asm	/^c010e2e3:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010e2e9	obj/kernel.asm	/^c010e2e9:	8d 90 ff ff ff 7f    	lea    0x7fffffff(%eax),%edx$/;"	l
c010e2ef	obj/kernel.asm	/^c010e2ef:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e2f2	obj/kernel.asm	/^c010e2f2:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010e2f8	obj/kernel.asm	/^c010e2f8:	eb 2a                	jmp    c010e324 <stride_pick_next+0x77>$/;"	l
c010e2fa	obj/kernel.asm	/^c010e2fa:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e2fd	obj/kernel.asm	/^c010e2fd:	8b 88 bc 00 00 00    	mov    0xbc(%eax),%ecx$/;"	l
c010e303	obj/kernel.asm	/^c010e303:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e306	obj/kernel.asm	/^c010e306:	8b 98 c0 00 00 00    	mov    0xc0(%eax),%ebx$/;"	l
c010e30c	obj/kernel.asm	/^c010e30c:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax$/;"	l
c010e311	obj/kernel.asm	/^c010e311:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010e316	obj/kernel.asm	/^c010e316:	f7 f3                	div    %ebx$/;"	l
c010e318	obj/kernel.asm	/^c010e318:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c010e31b	obj/kernel.asm	/^c010e31b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e31e	obj/kernel.asm	/^c010e31e:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010e324	obj/kernel.asm	/^c010e324:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010e327	obj/kernel.asm	/^c010e327:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e32a	obj/kernel.asm	/^c010e32a:	5b                   	pop    %ebx$/;"	l
c010e32b	obj/kernel.asm	/^c010e32b:	5d                   	pop    %ebp$/;"	l
c010e32c	obj/kernel.asm	/^c010e32c:	c3                   	ret    $/;"	l
c010e32d	obj/kernel.asm	/^c010e32d <stride_proc_tick>:$/;"	l
c010e32d	obj/kernel.asm	/^c010e32d:	55                   	push   %ebp$/;"	l
c010e32e	obj/kernel.asm	/^c010e32e:	89 e5                	mov    %esp,%ebp$/;"	l
c010e330	obj/kernel.asm	/^c010e330:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e333	obj/kernel.asm	/^c010e333:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010e339	obj/kernel.asm	/^c010e339:	85 c0                	test   %eax,%eax$/;"	l
c010e33b	obj/kernel.asm	/^c010e33b:	7e 17                	jle    c010e354 <stride_proc_tick+0x27>$/;"	l
c010e33d	obj/kernel.asm	/^c010e33d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e340	obj/kernel.asm	/^c010e340:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010e346	obj/kernel.asm	/^c010e346:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010e349	obj/kernel.asm	/^c010e349:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e34c	obj/kernel.asm	/^c010e34c:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010e352	obj/kernel.asm	/^c010e352:	eb 17                	jmp    c010e36b <stride_proc_tick+0x3e>$/;"	l
c010e354	obj/kernel.asm	/^c010e354:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e357	obj/kernel.asm	/^c010e357:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010e35d	obj/kernel.asm	/^c010e35d:	85 c0                	test   %eax,%eax$/;"	l
c010e35f	obj/kernel.asm	/^c010e35f:	75 0a                	jne    c010e36b <stride_proc_tick+0x3e>$/;"	l
c010e361	obj/kernel.asm	/^c010e361:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e364	obj/kernel.asm	/^c010e364:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010e36b	obj/kernel.asm	/^c010e36b:	5d                   	pop    %ebp$/;"	l
c010e36c	obj/kernel.asm	/^c010e36c:	c3                   	ret    $/;"	l
c010e36d	obj/kernel.asm	/^c010e36d <__intr_save>:$/;"	l
c010e36d	obj/kernel.asm	/^c010e36d:	55                   	push   %ebp$/;"	l
c010e36e	obj/kernel.asm	/^c010e36e:	89 e5                	mov    %esp,%ebp$/;"	l
c010e370	obj/kernel.asm	/^c010e370:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e373	obj/kernel.asm	/^c010e373:	9c                   	pushf  $/;"	l
c010e374	obj/kernel.asm	/^c010e374:	58                   	pop    %eax$/;"	l
c010e375	obj/kernel.asm	/^c010e375:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e378	obj/kernel.asm	/^c010e378:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e37b	obj/kernel.asm	/^c010e37b:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010e380	obj/kernel.asm	/^c010e380:	85 c0                	test   %eax,%eax$/;"	l
c010e382	obj/kernel.asm	/^c010e382:	74 0c                	je     c010e390 <__intr_save+0x23>$/;"	l
c010e384	obj/kernel.asm	/^c010e384:	e8 a1 3d ff ff       	call   c010212a <intr_disable>$/;"	l
c010e389	obj/kernel.asm	/^c010e389:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010e38e	obj/kernel.asm	/^c010e38e:	eb 05                	jmp    c010e395 <__intr_save+0x28>$/;"	l
c010e390	obj/kernel.asm	/^c010e390:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e395	obj/kernel.asm	/^c010e395:	c9                   	leave  $/;"	l
c010e396	obj/kernel.asm	/^c010e396:	c3                   	ret    $/;"	l
c010e397	obj/kernel.asm	/^c010e397 <__intr_restore>:$/;"	l
c010e397	obj/kernel.asm	/^c010e397:	55                   	push   %ebp$/;"	l
c010e398	obj/kernel.asm	/^c010e398:	89 e5                	mov    %esp,%ebp$/;"	l
c010e39a	obj/kernel.asm	/^c010e39a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e39d	obj/kernel.asm	/^c010e39d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e3a1	obj/kernel.asm	/^c010e3a1:	74 05                	je     c010e3a8 <__intr_restore+0x11>$/;"	l
c010e3a3	obj/kernel.asm	/^c010e3a3:	e8 7c 3d ff ff       	call   c0102124 <intr_enable>$/;"	l
c010e3a8	obj/kernel.asm	/^c010e3a8:	c9                   	leave  $/;"	l
c010e3a9	obj/kernel.asm	/^c010e3a9:	c3                   	ret    $/;"	l
c010e3aa	obj/kernel.asm	/^c010e3aa <sched_class_enqueue>:$/;"	l
c010e3aa	obj/kernel.asm	/^c010e3aa:	55                   	push   %ebp$/;"	l
c010e3ab	obj/kernel.asm	/^c010e3ab:	89 e5                	mov    %esp,%ebp$/;"	l
c010e3ad	obj/kernel.asm	/^c010e3ad:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e3b0	obj/kernel.asm	/^c010e3b0:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010e3b5	obj/kernel.asm	/^c010e3b5:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010e3b8	obj/kernel.asm	/^c010e3b8:	74 1a                	je     c010e3d4 <sched_class_enqueue+0x2a>$/;"	l
c010e3ba	obj/kernel.asm	/^c010e3ba:	a1 9c 1f 15 c0       	mov    0xc0151f9c,%eax$/;"	l
c010e3bf	obj/kernel.asm	/^c010e3bf:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e3c2	obj/kernel.asm	/^c010e3c2:	8b 15 a0 1f 15 c0    	mov    0xc0151fa0,%edx$/;"	l
c010e3c8	obj/kernel.asm	/^c010e3c8:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010e3cb	obj/kernel.asm	/^c010e3cb:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010e3cf	obj/kernel.asm	/^c010e3cf:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e3d2	obj/kernel.asm	/^c010e3d2:	ff d0                	call   *%eax$/;"	l
c010e3d4	obj/kernel.asm	/^c010e3d4:	c9                   	leave  $/;"	l
c010e3d5	obj/kernel.asm	/^c010e3d5:	c3                   	ret    $/;"	l
c010e3d6	obj/kernel.asm	/^c010e3d6 <sched_class_dequeue>:$/;"	l
c010e3d6	obj/kernel.asm	/^c010e3d6:	55                   	push   %ebp$/;"	l
c010e3d7	obj/kernel.asm	/^c010e3d7:	89 e5                	mov    %esp,%ebp$/;"	l
c010e3d9	obj/kernel.asm	/^c010e3d9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e3dc	obj/kernel.asm	/^c010e3dc:	a1 9c 1f 15 c0       	mov    0xc0151f9c,%eax$/;"	l
c010e3e1	obj/kernel.asm	/^c010e3e1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e3e4	obj/kernel.asm	/^c010e3e4:	8b 15 a0 1f 15 c0    	mov    0xc0151fa0,%edx$/;"	l
c010e3ea	obj/kernel.asm	/^c010e3ea:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010e3ed	obj/kernel.asm	/^c010e3ed:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010e3f1	obj/kernel.asm	/^c010e3f1:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e3f4	obj/kernel.asm	/^c010e3f4:	ff d0                	call   *%eax$/;"	l
c010e3f6	obj/kernel.asm	/^c010e3f6:	c9                   	leave  $/;"	l
c010e3f7	obj/kernel.asm	/^c010e3f7:	c3                   	ret    $/;"	l
c010e3f8	obj/kernel.asm	/^c010e3f8 <sched_class_pick_next>:$/;"	l
c010e3f8	obj/kernel.asm	/^c010e3f8:	55                   	push   %ebp$/;"	l
c010e3f9	obj/kernel.asm	/^c010e3f9:	89 e5                	mov    %esp,%ebp$/;"	l
c010e3fb	obj/kernel.asm	/^c010e3fb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e3fe	obj/kernel.asm	/^c010e3fe:	a1 9c 1f 15 c0       	mov    0xc0151f9c,%eax$/;"	l
c010e403	obj/kernel.asm	/^c010e403:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e406	obj/kernel.asm	/^c010e406:	8b 15 a0 1f 15 c0    	mov    0xc0151fa0,%edx$/;"	l
c010e40c	obj/kernel.asm	/^c010e40c:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e40f	obj/kernel.asm	/^c010e40f:	ff d0                	call   *%eax$/;"	l
c010e411	obj/kernel.asm	/^c010e411:	c9                   	leave  $/;"	l
c010e412	obj/kernel.asm	/^c010e412:	c3                   	ret    $/;"	l
c010e413	obj/kernel.asm	/^c010e413 <sched_class_proc_tick>:$/;"	l
c010e413	obj/kernel.asm	/^c010e413:	55                   	push   %ebp$/;"	l
c010e414	obj/kernel.asm	/^c010e414:	89 e5                	mov    %esp,%ebp$/;"	l
c010e416	obj/kernel.asm	/^c010e416:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e419	obj/kernel.asm	/^c010e419:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010e41e	obj/kernel.asm	/^c010e41e:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010e421	obj/kernel.asm	/^c010e421:	74 1c                	je     c010e43f <sched_class_proc_tick+0x2c>$/;"	l
c010e423	obj/kernel.asm	/^c010e423:	a1 9c 1f 15 c0       	mov    0xc0151f9c,%eax$/;"	l
c010e428	obj/kernel.asm	/^c010e428:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010e42b	obj/kernel.asm	/^c010e42b:	8b 15 a0 1f 15 c0    	mov    0xc0151fa0,%edx$/;"	l
c010e431	obj/kernel.asm	/^c010e431:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010e434	obj/kernel.asm	/^c010e434:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010e438	obj/kernel.asm	/^c010e438:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e43b	obj/kernel.asm	/^c010e43b:	ff d0                	call   *%eax$/;"	l
c010e43d	obj/kernel.asm	/^c010e43d:	eb 0a                	jmp    c010e449 <sched_class_proc_tick+0x36>$/;"	l
c010e43f	obj/kernel.asm	/^c010e43f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e442	obj/kernel.asm	/^c010e442:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010e449	obj/kernel.asm	/^c010e449:	c9                   	leave  $/;"	l
c010e44a	obj/kernel.asm	/^c010e44a:	c3                   	ret    $/;"	l
c010e44b	obj/kernel.asm	/^c010e44b <sched_init>:$/;"	l
c010e44b	obj/kernel.asm	/^c010e44b:	55                   	push   %ebp$/;"	l
c010e44c	obj/kernel.asm	/^c010e44c:	89 e5                	mov    %esp,%ebp$/;"	l
c010e44e	obj/kernel.asm	/^c010e44e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e451	obj/kernel.asm	/^c010e451:	c7 45 f4 94 1f 15 c0 	movl   $0xc0151f94,-0xc(%ebp)$/;"	l
c010e458	obj/kernel.asm	/^c010e458:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e45b	obj/kernel.asm	/^c010e45b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e45e	obj/kernel.asm	/^c010e45e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e461	obj/kernel.asm	/^c010e461:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e464	obj/kernel.asm	/^c010e464:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010e467	obj/kernel.asm	/^c010e467:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e46a	obj/kernel.asm	/^c010e46a:	89 10                	mov    %edx,(%eax)$/;"	l
c010e46c	obj/kernel.asm	/^c010e46c:	c7 05 9c 1f 15 c0 8c 	movl   $0xc014ea8c,0xc0151f9c$/;"	l
c010e473	obj/kernel.asm	/^c010e473:	ea 14 c0 $/;"	l
c010e476	obj/kernel.asm	/^c010e476:	c7 05 a0 1f 15 c0 a4 	movl   $0xc0151fa4,0xc0151fa0$/;"	l
c010e47d	obj/kernel.asm	/^c010e47d:	1f 15 c0 $/;"	l
c010e480	obj/kernel.asm	/^c010e480:	a1 a0 1f 15 c0       	mov    0xc0151fa0,%eax$/;"	l
c010e485	obj/kernel.asm	/^c010e485:	c7 40 0c 05 00 00 00 	movl   $0x5,0xc(%eax)$/;"	l
c010e48c	obj/kernel.asm	/^c010e48c:	a1 9c 1f 15 c0       	mov    0xc0151f9c,%eax$/;"	l
c010e491	obj/kernel.asm	/^c010e491:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e494	obj/kernel.asm	/^c010e494:	8b 15 a0 1f 15 c0    	mov    0xc0151fa0,%edx$/;"	l
c010e49a	obj/kernel.asm	/^c010e49a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e49d	obj/kernel.asm	/^c010e49d:	ff d0                	call   *%eax$/;"	l
c010e49f	obj/kernel.asm	/^c010e49f:	a1 9c 1f 15 c0       	mov    0xc0151f9c,%eax$/;"	l
c010e4a4	obj/kernel.asm	/^c010e4a4:	8b 00                	mov    (%eax),%eax$/;"	l
c010e4a6	obj/kernel.asm	/^c010e4a6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e4aa	obj/kernel.asm	/^c010e4aa:	c7 04 24 10 83 11 c0 	movl   $0xc0118310,(%esp)$/;"	l
c010e4b1	obj/kernel.asm	/^c010e4b1:	e8 af 1e ff ff       	call   c0100365 <cprintf>$/;"	l
c010e4b6	obj/kernel.asm	/^c010e4b6:	c9                   	leave  $/;"	l
c010e4b7	obj/kernel.asm	/^c010e4b7:	c3                   	ret    $/;"	l
c010e4b8	obj/kernel.asm	/^c010e4b8 <wakeup_proc>:$/;"	l
c010e4b8	obj/kernel.asm	/^c010e4b8:	55                   	push   %ebp$/;"	l
c010e4b9	obj/kernel.asm	/^c010e4b9:	89 e5                	mov    %esp,%ebp$/;"	l
c010e4bb	obj/kernel.asm	/^c010e4bb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e4be	obj/kernel.asm	/^c010e4be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e4c1	obj/kernel.asm	/^c010e4c1:	8b 00                	mov    (%eax),%eax$/;"	l
c010e4c3	obj/kernel.asm	/^c010e4c3:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010e4c6	obj/kernel.asm	/^c010e4c6:	75 24                	jne    c010e4ec <wakeup_proc+0x34>$/;"	l
c010e4c8	obj/kernel.asm	/^c010e4c8:	c7 44 24 0c 21 83 11 	movl   $0xc0118321,0xc(%esp)$/;"	l
c010e4cf	obj/kernel.asm	/^c010e4cf:	c0 $/;"	l
c010e4d0	obj/kernel.asm	/^c010e4d0:	c7 44 24 08 3c 83 11 	movl   $0xc011833c,0x8(%esp)$/;"	l
c010e4d7	obj/kernel.asm	/^c010e4d7:	c0 $/;"	l
c010e4d8	obj/kernel.asm	/^c010e4d8:	c7 44 24 04 3c 00 00 	movl   $0x3c,0x4(%esp)$/;"	l
c010e4df	obj/kernel.asm	/^c010e4df:	00 $/;"	l
c010e4e0	obj/kernel.asm	/^c010e4e0:	c7 04 24 51 83 11 c0 	movl   $0xc0118351,(%esp)$/;"	l
c010e4e7	obj/kernel.asm	/^c010e4e7:	e8 dc 29 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e4ec	obj/kernel.asm	/^c010e4ec:	e8 7c fe ff ff       	call   c010e36d <__intr_save>$/;"	l
c010e4f1	obj/kernel.asm	/^c010e4f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e4f4	obj/kernel.asm	/^c010e4f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e4f7	obj/kernel.asm	/^c010e4f7:	8b 00                	mov    (%eax),%eax$/;"	l
c010e4f9	obj/kernel.asm	/^c010e4f9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010e4fc	obj/kernel.asm	/^c010e4fc:	74 2d                	je     c010e52b <wakeup_proc+0x73>$/;"	l
c010e4fe	obj/kernel.asm	/^c010e4fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e501	obj/kernel.asm	/^c010e501:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010e507	obj/kernel.asm	/^c010e507:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e50a	obj/kernel.asm	/^c010e50a:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010e511	obj/kernel.asm	/^c010e511:	00 00 00 $/;"	l
c010e514	obj/kernel.asm	/^c010e514:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010e519	obj/kernel.asm	/^c010e519:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010e51c	obj/kernel.asm	/^c010e51c:	74 29                	je     c010e547 <wakeup_proc+0x8f>$/;"	l
c010e51e	obj/kernel.asm	/^c010e51e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e521	obj/kernel.asm	/^c010e521:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e524	obj/kernel.asm	/^c010e524:	e8 81 fe ff ff       	call   c010e3aa <sched_class_enqueue>$/;"	l
c010e529	obj/kernel.asm	/^c010e529:	eb 1c                	jmp    c010e547 <wakeup_proc+0x8f>$/;"	l
c010e52b	obj/kernel.asm	/^c010e52b:	c7 44 24 08 67 83 11 	movl   $0xc0118367,0x8(%esp)$/;"	l
c010e532	obj/kernel.asm	/^c010e532:	c0 $/;"	l
c010e533	obj/kernel.asm	/^c010e533:	c7 44 24 04 48 00 00 	movl   $0x48,0x4(%esp)$/;"	l
c010e53a	obj/kernel.asm	/^c010e53a:	00 $/;"	l
c010e53b	obj/kernel.asm	/^c010e53b:	c7 04 24 51 83 11 c0 	movl   $0xc0118351,(%esp)$/;"	l
c010e542	obj/kernel.asm	/^c010e542:	e8 ed 29 ff ff       	call   c0100f34 <__warn>$/;"	l
c010e547	obj/kernel.asm	/^c010e547:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e54a	obj/kernel.asm	/^c010e54a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e54d	obj/kernel.asm	/^c010e54d:	e8 45 fe ff ff       	call   c010e397 <__intr_restore>$/;"	l
c010e552	obj/kernel.asm	/^c010e552:	c9                   	leave  $/;"	l
c010e553	obj/kernel.asm	/^c010e553:	c3                   	ret    $/;"	l
c010e554	obj/kernel.asm	/^c010e554 <schedule>:$/;"	l
c010e554	obj/kernel.asm	/^c010e554:	55                   	push   %ebp$/;"	l
c010e555	obj/kernel.asm	/^c010e555:	89 e5                	mov    %esp,%ebp$/;"	l
c010e557	obj/kernel.asm	/^c010e557:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e55a	obj/kernel.asm	/^c010e55a:	e8 0e fe ff ff       	call   c010e36d <__intr_save>$/;"	l
c010e55f	obj/kernel.asm	/^c010e55f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e562	obj/kernel.asm	/^c010e562:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010e567	obj/kernel.asm	/^c010e567:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010e56e	obj/kernel.asm	/^c010e56e:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010e573	obj/kernel.asm	/^c010e573:	8b 00                	mov    (%eax),%eax$/;"	l
c010e575	obj/kernel.asm	/^c010e575:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010e578	obj/kernel.asm	/^c010e578:	75 0d                	jne    c010e587 <schedule+0x33>$/;"	l
c010e57a	obj/kernel.asm	/^c010e57a:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010e57f	obj/kernel.asm	/^c010e57f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e582	obj/kernel.asm	/^c010e582:	e8 23 fe ff ff       	call   c010e3aa <sched_class_enqueue>$/;"	l
c010e587	obj/kernel.asm	/^c010e587:	e8 6c fe ff ff       	call   c010e3f8 <sched_class_pick_next>$/;"	l
c010e58c	obj/kernel.asm	/^c010e58c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e58f	obj/kernel.asm	/^c010e58f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e593	obj/kernel.asm	/^c010e593:	74 0b                	je     c010e5a0 <schedule+0x4c>$/;"	l
c010e595	obj/kernel.asm	/^c010e595:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e598	obj/kernel.asm	/^c010e598:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e59b	obj/kernel.asm	/^c010e59b:	e8 36 fe ff ff       	call   c010e3d6 <sched_class_dequeue>$/;"	l
c010e5a0	obj/kernel.asm	/^c010e5a0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e5a4	obj/kernel.asm	/^c010e5a4:	75 08                	jne    c010e5ae <schedule+0x5a>$/;"	l
c010e5a6	obj/kernel.asm	/^c010e5a6:	a1 20 ff 14 c0       	mov    0xc014ff20,%eax$/;"	l
c010e5ab	obj/kernel.asm	/^c010e5ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e5ae	obj/kernel.asm	/^c010e5ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e5b1	obj/kernel.asm	/^c010e5b1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e5b4	obj/kernel.asm	/^c010e5b4:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010e5b7	obj/kernel.asm	/^c010e5b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e5ba	obj/kernel.asm	/^c010e5ba:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e5bd	obj/kernel.asm	/^c010e5bd:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010e5c2	obj/kernel.asm	/^c010e5c2:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010e5c5	obj/kernel.asm	/^c010e5c5:	74 0b                	je     c010e5d2 <schedule+0x7e>$/;"	l
c010e5c7	obj/kernel.asm	/^c010e5c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e5ca	obj/kernel.asm	/^c010e5ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e5cd	obj/kernel.asm	/^c010e5cd:	e8 28 dd ff ff       	call   c010c2fa <proc_run>$/;"	l
c010e5d2	obj/kernel.asm	/^c010e5d2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e5d5	obj/kernel.asm	/^c010e5d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e5d8	obj/kernel.asm	/^c010e5d8:	e8 ba fd ff ff       	call   c010e397 <__intr_restore>$/;"	l
c010e5dd	obj/kernel.asm	/^c010e5dd:	c9                   	leave  $/;"	l
c010e5de	obj/kernel.asm	/^c010e5de:	c3                   	ret    $/;"	l
c010e5df	obj/kernel.asm	/^c010e5df <add_timer>:$/;"	l
c010e5df	obj/kernel.asm	/^c010e5df:	55                   	push   %ebp$/;"	l
c010e5e0	obj/kernel.asm	/^c010e5e0:	89 e5                	mov    %esp,%ebp$/;"	l
c010e5e2	obj/kernel.asm	/^c010e5e2:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010e5e5	obj/kernel.asm	/^c010e5e5:	e8 83 fd ff ff       	call   c010e36d <__intr_save>$/;"	l
c010e5ea	obj/kernel.asm	/^c010e5ea:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e5ed	obj/kernel.asm	/^c010e5ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e5f0	obj/kernel.asm	/^c010e5f0:	8b 00                	mov    (%eax),%eax$/;"	l
c010e5f2	obj/kernel.asm	/^c010e5f2:	85 c0                	test   %eax,%eax$/;"	l
c010e5f4	obj/kernel.asm	/^c010e5f4:	74 0a                	je     c010e600 <add_timer+0x21>$/;"	l
c010e5f6	obj/kernel.asm	/^c010e5f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e5f9	obj/kernel.asm	/^c010e5f9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e5fc	obj/kernel.asm	/^c010e5fc:	85 c0                	test   %eax,%eax$/;"	l
c010e5fe	obj/kernel.asm	/^c010e5fe:	75 24                	jne    c010e624 <add_timer+0x45>$/;"	l
c010e600	obj/kernel.asm	/^c010e600:	c7 44 24 0c 84 83 11 	movl   $0xc0118384,0xc(%esp)$/;"	l
c010e607	obj/kernel.asm	/^c010e607:	c0 $/;"	l
c010e608	obj/kernel.asm	/^c010e608:	c7 44 24 08 3c 83 11 	movl   $0xc011833c,0x8(%esp)$/;"	l
c010e60f	obj/kernel.asm	/^c010e60f:	c0 $/;"	l
c010e610	obj/kernel.asm	/^c010e610:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c010e617	obj/kernel.asm	/^c010e617:	00 $/;"	l
c010e618	obj/kernel.asm	/^c010e618:	c7 04 24 51 83 11 c0 	movl   $0xc0118351,(%esp)$/;"	l
c010e61f	obj/kernel.asm	/^c010e61f:	e8 a4 28 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e624	obj/kernel.asm	/^c010e624:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e627	obj/kernel.asm	/^c010e627:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e62a	obj/kernel.asm	/^c010e62a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e62d	obj/kernel.asm	/^c010e62d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e630	obj/kernel.asm	/^c010e630:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e633	obj/kernel.asm	/^c010e633:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010e636	obj/kernel.asm	/^c010e636:	0f 94 c0             	sete   %al$/;"	l
c010e639	obj/kernel.asm	/^c010e639:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010e63c	obj/kernel.asm	/^c010e63c:	85 c0                	test   %eax,%eax$/;"	l
c010e63e	obj/kernel.asm	/^c010e63e:	75 24                	jne    c010e664 <add_timer+0x85>$/;"	l
c010e640	obj/kernel.asm	/^c010e640:	c7 44 24 0c b0 83 11 	movl   $0xc01183b0,0xc(%esp)$/;"	l
c010e647	obj/kernel.asm	/^c010e647:	c0 $/;"	l
c010e648	obj/kernel.asm	/^c010e648:	c7 44 24 08 3c 83 11 	movl   $0xc011833c,0x8(%esp)$/;"	l
c010e64f	obj/kernel.asm	/^c010e64f:	c0 $/;"	l
c010e650	obj/kernel.asm	/^c010e650:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)$/;"	l
c010e657	obj/kernel.asm	/^c010e657:	00 $/;"	l
c010e658	obj/kernel.asm	/^c010e658:	c7 04 24 51 83 11 c0 	movl   $0xc0118351,(%esp)$/;"	l
c010e65f	obj/kernel.asm	/^c010e65f:	e8 64 28 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e664	obj/kernel.asm	/^c010e664:	c7 45 e4 94 1f 15 c0 	movl   $0xc0151f94,-0x1c(%ebp)$/;"	l
c010e66b	obj/kernel.asm	/^c010e66b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e66e	obj/kernel.asm	/^c010e66e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e671	obj/kernel.asm	/^c010e671:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e674	obj/kernel.asm	/^c010e674:	eb 4a                	jmp    c010e6c0 <add_timer+0xe1>$/;"	l
c010e676	obj/kernel.asm	/^c010e676:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e679	obj/kernel.asm	/^c010e679:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010e67c	obj/kernel.asm	/^c010e67c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e67f	obj/kernel.asm	/^c010e67f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e682	obj/kernel.asm	/^c010e682:	8b 10                	mov    (%eax),%edx$/;"	l
c010e684	obj/kernel.asm	/^c010e684:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e687	obj/kernel.asm	/^c010e687:	8b 00                	mov    (%eax),%eax$/;"	l
c010e689	obj/kernel.asm	/^c010e689:	39 c2                	cmp    %eax,%edx$/;"	l
c010e68b	obj/kernel.asm	/^c010e68b:	73 13                	jae    c010e6a0 <add_timer+0xc1>$/;"	l
c010e68d	obj/kernel.asm	/^c010e68d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e690	obj/kernel.asm	/^c010e690:	8b 10                	mov    (%eax),%edx$/;"	l
c010e692	obj/kernel.asm	/^c010e692:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e695	obj/kernel.asm	/^c010e695:	8b 00                	mov    (%eax),%eax$/;"	l
c010e697	obj/kernel.asm	/^c010e697:	29 c2                	sub    %eax,%edx$/;"	l
c010e699	obj/kernel.asm	/^c010e699:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e69c	obj/kernel.asm	/^c010e69c:	89 10                	mov    %edx,(%eax)$/;"	l
c010e69e	obj/kernel.asm	/^c010e69e:	eb 29                	jmp    c010e6c9 <add_timer+0xea>$/;"	l
c010e6a0	obj/kernel.asm	/^c010e6a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e6a3	obj/kernel.asm	/^c010e6a3:	8b 10                	mov    (%eax),%edx$/;"	l
c010e6a5	obj/kernel.asm	/^c010e6a5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e6a8	obj/kernel.asm	/^c010e6a8:	8b 00                	mov    (%eax),%eax$/;"	l
c010e6aa	obj/kernel.asm	/^c010e6aa:	29 c2                	sub    %eax,%edx$/;"	l
c010e6ac	obj/kernel.asm	/^c010e6ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e6af	obj/kernel.asm	/^c010e6af:	89 10                	mov    %edx,(%eax)$/;"	l
c010e6b1	obj/kernel.asm	/^c010e6b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e6b4	obj/kernel.asm	/^c010e6b4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e6b7	obj/kernel.asm	/^c010e6b7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e6ba	obj/kernel.asm	/^c010e6ba:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e6bd	obj/kernel.asm	/^c010e6bd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e6c0	obj/kernel.asm	/^c010e6c0:	81 7d f4 94 1f 15 c0 	cmpl   $0xc0151f94,-0xc(%ebp)$/;"	l
c010e6c7	obj/kernel.asm	/^c010e6c7:	75 ad                	jne    c010e676 <add_timer+0x97>$/;"	l
c010e6c9	obj/kernel.asm	/^c010e6c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e6cc	obj/kernel.asm	/^c010e6cc:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010e6cf	obj/kernel.asm	/^c010e6cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e6d2	obj/kernel.asm	/^c010e6d2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010e6d5	obj/kernel.asm	/^c010e6d5:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010e6d8	obj/kernel.asm	/^c010e6d8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e6db	obj/kernel.asm	/^c010e6db:	8b 00                	mov    (%eax),%eax$/;"	l
c010e6dd	obj/kernel.asm	/^c010e6dd:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010e6e0	obj/kernel.asm	/^c010e6e0:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010e6e3	obj/kernel.asm	/^c010e6e3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010e6e6	obj/kernel.asm	/^c010e6e6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e6e9	obj/kernel.asm	/^c010e6e9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010e6ec	obj/kernel.asm	/^c010e6ec:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010e6ef	obj/kernel.asm	/^c010e6ef:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010e6f2	obj/kernel.asm	/^c010e6f2:	89 10                	mov    %edx,(%eax)$/;"	l
c010e6f4	obj/kernel.asm	/^c010e6f4:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010e6f7	obj/kernel.asm	/^c010e6f7:	8b 10                	mov    (%eax),%edx$/;"	l
c010e6f9	obj/kernel.asm	/^c010e6f9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e6fc	obj/kernel.asm	/^c010e6fc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e6ff	obj/kernel.asm	/^c010e6ff:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e702	obj/kernel.asm	/^c010e702:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010e705	obj/kernel.asm	/^c010e705:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e708	obj/kernel.asm	/^c010e708:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e70b	obj/kernel.asm	/^c010e70b:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010e70e	obj/kernel.asm	/^c010e70e:	89 10                	mov    %edx,(%eax)$/;"	l
c010e710	obj/kernel.asm	/^c010e710:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e713	obj/kernel.asm	/^c010e713:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e716	obj/kernel.asm	/^c010e716:	e8 7c fc ff ff       	call   c010e397 <__intr_restore>$/;"	l
c010e71b	obj/kernel.asm	/^c010e71b:	c9                   	leave  $/;"	l
c010e71c	obj/kernel.asm	/^c010e71c:	c3                   	ret    $/;"	l
c010e71d	obj/kernel.asm	/^c010e71d <del_timer>:$/;"	l
c010e71d	obj/kernel.asm	/^c010e71d:	55                   	push   %ebp$/;"	l
c010e71e	obj/kernel.asm	/^c010e71e:	89 e5                	mov    %esp,%ebp$/;"	l
c010e720	obj/kernel.asm	/^c010e720:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010e723	obj/kernel.asm	/^c010e723:	e8 45 fc ff ff       	call   c010e36d <__intr_save>$/;"	l
c010e728	obj/kernel.asm	/^c010e728:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e72b	obj/kernel.asm	/^c010e72b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e72e	obj/kernel.asm	/^c010e72e:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e731	obj/kernel.asm	/^c010e731:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e734	obj/kernel.asm	/^c010e734:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e737	obj/kernel.asm	/^c010e737:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e73a	obj/kernel.asm	/^c010e73a:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010e73d	obj/kernel.asm	/^c010e73d:	0f 94 c0             	sete   %al$/;"	l
c010e740	obj/kernel.asm	/^c010e740:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010e743	obj/kernel.asm	/^c010e743:	85 c0                	test   %eax,%eax$/;"	l
c010e745	obj/kernel.asm	/^c010e745:	0f 85 89 00 00 00    	jne    c010e7d4 <del_timer+0xb7>$/;"	l
c010e74b	obj/kernel.asm	/^c010e74b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e74e	obj/kernel.asm	/^c010e74e:	8b 00                	mov    (%eax),%eax$/;"	l
c010e750	obj/kernel.asm	/^c010e750:	85 c0                	test   %eax,%eax$/;"	l
c010e752	obj/kernel.asm	/^c010e752:	74 35                	je     c010e789 <del_timer+0x6c>$/;"	l
c010e754	obj/kernel.asm	/^c010e754:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e757	obj/kernel.asm	/^c010e757:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e75a	obj/kernel.asm	/^c010e75a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e75d	obj/kernel.asm	/^c010e75d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e760	obj/kernel.asm	/^c010e760:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e763	obj/kernel.asm	/^c010e763:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e766	obj/kernel.asm	/^c010e766:	81 7d f0 94 1f 15 c0 	cmpl   $0xc0151f94,-0x10(%ebp)$/;"	l
c010e76d	obj/kernel.asm	/^c010e76d:	74 1a                	je     c010e789 <del_timer+0x6c>$/;"	l
c010e76f	obj/kernel.asm	/^c010e76f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e772	obj/kernel.asm	/^c010e772:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010e775	obj/kernel.asm	/^c010e775:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e778	obj/kernel.asm	/^c010e778:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e77b	obj/kernel.asm	/^c010e77b:	8b 10                	mov    (%eax),%edx$/;"	l
c010e77d	obj/kernel.asm	/^c010e77d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e780	obj/kernel.asm	/^c010e780:	8b 00                	mov    (%eax),%eax$/;"	l
c010e782	obj/kernel.asm	/^c010e782:	01 c2                	add    %eax,%edx$/;"	l
c010e784	obj/kernel.asm	/^c010e784:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e787	obj/kernel.asm	/^c010e787:	89 10                	mov    %edx,(%eax)$/;"	l
c010e789	obj/kernel.asm	/^c010e789:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e78c	obj/kernel.asm	/^c010e78c:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e78f	obj/kernel.asm	/^c010e78f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e792	obj/kernel.asm	/^c010e792:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e795	obj/kernel.asm	/^c010e795:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010e798	obj/kernel.asm	/^c010e798:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e79b	obj/kernel.asm	/^c010e79b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e79e	obj/kernel.asm	/^c010e79e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010e7a1	obj/kernel.asm	/^c010e7a1:	8b 12                	mov    (%edx),%edx$/;"	l
c010e7a3	obj/kernel.asm	/^c010e7a3:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010e7a6	obj/kernel.asm	/^c010e7a6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010e7a9	obj/kernel.asm	/^c010e7a9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010e7ac	obj/kernel.asm	/^c010e7ac:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010e7af	obj/kernel.asm	/^c010e7af:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e7b2	obj/kernel.asm	/^c010e7b2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e7b5	obj/kernel.asm	/^c010e7b5:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010e7b8	obj/kernel.asm	/^c010e7b8:	89 10                	mov    %edx,(%eax)$/;"	l
c010e7ba	obj/kernel.asm	/^c010e7ba:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e7bd	obj/kernel.asm	/^c010e7bd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010e7c0	obj/kernel.asm	/^c010e7c0:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e7c3	obj/kernel.asm	/^c010e7c3:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010e7c6	obj/kernel.asm	/^c010e7c6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e7c9	obj/kernel.asm	/^c010e7c9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e7cc	obj/kernel.asm	/^c010e7cc:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010e7cf	obj/kernel.asm	/^c010e7cf:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e7d2	obj/kernel.asm	/^c010e7d2:	89 10                	mov    %edx,(%eax)$/;"	l
c010e7d4	obj/kernel.asm	/^c010e7d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e7d7	obj/kernel.asm	/^c010e7d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e7da	obj/kernel.asm	/^c010e7da:	e8 b8 fb ff ff       	call   c010e397 <__intr_restore>$/;"	l
c010e7df	obj/kernel.asm	/^c010e7df:	c9                   	leave  $/;"	l
c010e7e0	obj/kernel.asm	/^c010e7e0:	c3                   	ret    $/;"	l
c010e7e1	obj/kernel.asm	/^c010e7e1 <run_timer_list>:$/;"	l
c010e7e1	obj/kernel.asm	/^c010e7e1:	55                   	push   %ebp$/;"	l
c010e7e2	obj/kernel.asm	/^c010e7e2:	89 e5                	mov    %esp,%ebp$/;"	l
c010e7e4	obj/kernel.asm	/^c010e7e4:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010e7e7	obj/kernel.asm	/^c010e7e7:	e8 81 fb ff ff       	call   c010e36d <__intr_save>$/;"	l
c010e7ec	obj/kernel.asm	/^c010e7ec:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e7ef	obj/kernel.asm	/^c010e7ef:	c7 45 e4 94 1f 15 c0 	movl   $0xc0151f94,-0x1c(%ebp)$/;"	l
c010e7f6	obj/kernel.asm	/^c010e7f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e7f9	obj/kernel.asm	/^c010e7f9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e7fc	obj/kernel.asm	/^c010e7fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e7ff	obj/kernel.asm	/^c010e7ff:	81 7d f4 94 1f 15 c0 	cmpl   $0xc0151f94,-0xc(%ebp)$/;"	l
c010e806	obj/kernel.asm	/^c010e806:	0f 84 fb 00 00 00    	je     c010e907 <run_timer_list+0x126>$/;"	l
c010e80c	obj/kernel.asm	/^c010e80c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e80f	obj/kernel.asm	/^c010e80f:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010e812	obj/kernel.asm	/^c010e812:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e815	obj/kernel.asm	/^c010e815:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e818	obj/kernel.asm	/^c010e818:	8b 00                	mov    (%eax),%eax$/;"	l
c010e81a	obj/kernel.asm	/^c010e81a:	85 c0                	test   %eax,%eax$/;"	l
c010e81c	obj/kernel.asm	/^c010e81c:	75 24                	jne    c010e842 <run_timer_list+0x61>$/;"	l
c010e81e	obj/kernel.asm	/^c010e81e:	c7 44 24 0c d1 83 11 	movl   $0xc01183d1,0xc(%esp)$/;"	l
c010e825	obj/kernel.asm	/^c010e825:	c0 $/;"	l
c010e826	obj/kernel.asm	/^c010e826:	c7 44 24 08 3c 83 11 	movl   $0xc011833c,0x8(%esp)$/;"	l
c010e82d	obj/kernel.asm	/^c010e82d:	c0 $/;"	l
c010e82e	obj/kernel.asm	/^c010e82e:	c7 44 24 04 99 00 00 	movl   $0x99,0x4(%esp)$/;"	l
c010e835	obj/kernel.asm	/^c010e835:	00 $/;"	l
c010e836	obj/kernel.asm	/^c010e836:	c7 04 24 51 83 11 c0 	movl   $0xc0118351,(%esp)$/;"	l
c010e83d	obj/kernel.asm	/^c010e83d:	e8 86 26 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e842	obj/kernel.asm	/^c010e842:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e845	obj/kernel.asm	/^c010e845:	8b 00                	mov    (%eax),%eax$/;"	l
c010e847	obj/kernel.asm	/^c010e847:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010e84a	obj/kernel.asm	/^c010e84a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e84d	obj/kernel.asm	/^c010e84d:	89 10                	mov    %edx,(%eax)$/;"	l
c010e84f	obj/kernel.asm	/^c010e84f:	e9 a6 00 00 00       	jmp    c010e8fa <run_timer_list+0x119>$/;"	l
c010e854	obj/kernel.asm	/^c010e854:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e857	obj/kernel.asm	/^c010e857:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e85a	obj/kernel.asm	/^c010e85a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e85d	obj/kernel.asm	/^c010e85d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e860	obj/kernel.asm	/^c010e860:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e863	obj/kernel.asm	/^c010e863:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e866	obj/kernel.asm	/^c010e866:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e869	obj/kernel.asm	/^c010e869:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e86c	obj/kernel.asm	/^c010e86c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e86f	obj/kernel.asm	/^c010e86f:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010e875	obj/kernel.asm	/^c010e875:	85 c0                	test   %eax,%eax$/;"	l
c010e877	obj/kernel.asm	/^c010e877:	74 31                	je     c010e8aa <run_timer_list+0xc9>$/;"	l
c010e879	obj/kernel.asm	/^c010e879:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e87c	obj/kernel.asm	/^c010e87c:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010e882	obj/kernel.asm	/^c010e882:	85 c0                	test   %eax,%eax$/;"	l
c010e884	obj/kernel.asm	/^c010e884:	78 4a                	js     c010e8d0 <run_timer_list+0xef>$/;"	l
c010e886	obj/kernel.asm	/^c010e886:	c7 44 24 0c e8 83 11 	movl   $0xc01183e8,0xc(%esp)$/;"	l
c010e88d	obj/kernel.asm	/^c010e88d:	c0 $/;"	l
c010e88e	obj/kernel.asm	/^c010e88e:	c7 44 24 08 3c 83 11 	movl   $0xc011833c,0x8(%esp)$/;"	l
c010e895	obj/kernel.asm	/^c010e895:	c0 $/;"	l
c010e896	obj/kernel.asm	/^c010e896:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
c010e89d	obj/kernel.asm	/^c010e89d:	00 $/;"	l
c010e89e	obj/kernel.asm	/^c010e89e:	c7 04 24 51 83 11 c0 	movl   $0xc0118351,(%esp)$/;"	l
c010e8a5	obj/kernel.asm	/^c010e8a5:	e8 1e 26 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010e8aa	obj/kernel.asm	/^c010e8aa:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e8ad	obj/kernel.asm	/^c010e8ad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e8b0	obj/kernel.asm	/^c010e8b0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010e8b4	obj/kernel.asm	/^c010e8b4:	c7 44 24 08 0c 84 11 	movl   $0xc011840c,0x8(%esp)$/;"	l
c010e8bb	obj/kernel.asm	/^c010e8bb:	c0 $/;"	l
c010e8bc	obj/kernel.asm	/^c010e8bc:	c7 44 24 04 a2 00 00 	movl   $0xa2,0x4(%esp)$/;"	l
c010e8c3	obj/kernel.asm	/^c010e8c3:	00 $/;"	l
c010e8c4	obj/kernel.asm	/^c010e8c4:	c7 04 24 51 83 11 c0 	movl   $0xc0118351,(%esp)$/;"	l
c010e8cb	obj/kernel.asm	/^c010e8cb:	e8 64 26 ff ff       	call   c0100f34 <__warn>$/;"	l
c010e8d0	obj/kernel.asm	/^c010e8d0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e8d3	obj/kernel.asm	/^c010e8d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e8d6	obj/kernel.asm	/^c010e8d6:	e8 dd fb ff ff       	call   c010e4b8 <wakeup_proc>$/;"	l
c010e8db	obj/kernel.asm	/^c010e8db:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8de	obj/kernel.asm	/^c010e8de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e8e1	obj/kernel.asm	/^c010e8e1:	e8 37 fe ff ff       	call   c010e71d <del_timer>$/;"	l
c010e8e6	obj/kernel.asm	/^c010e8e6:	81 7d f4 94 1f 15 c0 	cmpl   $0xc0151f94,-0xc(%ebp)$/;"	l
c010e8ed	obj/kernel.asm	/^c010e8ed:	75 02                	jne    c010e8f1 <run_timer_list+0x110>$/;"	l
c010e8ef	obj/kernel.asm	/^c010e8ef:	eb 16                	jmp    c010e907 <run_timer_list+0x126>$/;"	l
c010e8f1	obj/kernel.asm	/^c010e8f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e8f4	obj/kernel.asm	/^c010e8f4:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010e8f7	obj/kernel.asm	/^c010e8f7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e8fa	obj/kernel.asm	/^c010e8fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8fd	obj/kernel.asm	/^c010e8fd:	8b 00                	mov    (%eax),%eax$/;"	l
c010e8ff	obj/kernel.asm	/^c010e8ff:	85 c0                	test   %eax,%eax$/;"	l
c010e901	obj/kernel.asm	/^c010e901:	0f 84 4d ff ff ff    	je     c010e854 <run_timer_list+0x73>$/;"	l
c010e907	obj/kernel.asm	/^c010e907:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010e90c	obj/kernel.asm	/^c010e90c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e90f	obj/kernel.asm	/^c010e90f:	e8 ff fa ff ff       	call   c010e413 <sched_class_proc_tick>$/;"	l
c010e914	obj/kernel.asm	/^c010e914:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e917	obj/kernel.asm	/^c010e917:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e91a	obj/kernel.asm	/^c010e91a:	e8 78 fa ff ff       	call   c010e397 <__intr_restore>$/;"	l
c010e91f	obj/kernel.asm	/^c010e91f:	c9                   	leave  $/;"	l
c010e920	obj/kernel.asm	/^c010e920:	c3                   	ret    $/;"	l
c010e921	obj/kernel.asm	/^c010e921 <sys_exit>:$/;"	l
c010e921	obj/kernel.asm	/^c010e921:	55                   	push   %ebp$/;"	l
c010e922	obj/kernel.asm	/^c010e922:	89 e5                	mov    %esp,%ebp$/;"	l
c010e924	obj/kernel.asm	/^c010e924:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e927	obj/kernel.asm	/^c010e927:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e92a	obj/kernel.asm	/^c010e92a:	8b 00                	mov    (%eax),%eax$/;"	l
c010e92c	obj/kernel.asm	/^c010e92c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e92f	obj/kernel.asm	/^c010e92f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e932	obj/kernel.asm	/^c010e932:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e935	obj/kernel.asm	/^c010e935:	e8 2e e1 ff ff       	call   c010ca68 <do_exit>$/;"	l
c010e93a	obj/kernel.asm	/^c010e93a:	c9                   	leave  $/;"	l
c010e93b	obj/kernel.asm	/^c010e93b:	c3                   	ret    $/;"	l
c010e93c	obj/kernel.asm	/^c010e93c <sys_fork>:$/;"	l
c010e93c	obj/kernel.asm	/^c010e93c:	55                   	push   %ebp$/;"	l
c010e93d	obj/kernel.asm	/^c010e93d:	89 e5                	mov    %esp,%ebp$/;"	l
c010e93f	obj/kernel.asm	/^c010e93f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e942	obj/kernel.asm	/^c010e942:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010e947	obj/kernel.asm	/^c010e947:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e94a	obj/kernel.asm	/^c010e94a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e94d	obj/kernel.asm	/^c010e94d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e950	obj/kernel.asm	/^c010e950:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010e953	obj/kernel.asm	/^c010e953:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e956	obj/kernel.asm	/^c010e956:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e959	obj/kernel.asm	/^c010e959:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e95d	obj/kernel.asm	/^c010e95d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e960	obj/kernel.asm	/^c010e960:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e964	obj/kernel.asm	/^c010e964:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010e96b	obj/kernel.asm	/^c010e96b:	e8 bd df ff ff       	call   c010c92d <do_fork>$/;"	l
c010e970	obj/kernel.asm	/^c010e970:	c9                   	leave  $/;"	l
c010e971	obj/kernel.asm	/^c010e971:	c3                   	ret    $/;"	l
c010e972	obj/kernel.asm	/^c010e972 <sys_wait>:$/;"	l
c010e972	obj/kernel.asm	/^c010e972:	55                   	push   %ebp$/;"	l
c010e973	obj/kernel.asm	/^c010e973:	89 e5                	mov    %esp,%ebp$/;"	l
c010e975	obj/kernel.asm	/^c010e975:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e978	obj/kernel.asm	/^c010e978:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e97b	obj/kernel.asm	/^c010e97b:	8b 00                	mov    (%eax),%eax$/;"	l
c010e97d	obj/kernel.asm	/^c010e97d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e980	obj/kernel.asm	/^c010e980:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e983	obj/kernel.asm	/^c010e983:	83 c0 04             	add    $0x4,%eax$/;"	l
c010e986	obj/kernel.asm	/^c010e986:	8b 00                	mov    (%eax),%eax$/;"	l
c010e988	obj/kernel.asm	/^c010e988:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e98b	obj/kernel.asm	/^c010e98b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e98e	obj/kernel.asm	/^c010e98e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e992	obj/kernel.asm	/^c010e992:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e995	obj/kernel.asm	/^c010e995:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e998	obj/kernel.asm	/^c010e998:	e8 d4 ee ff ff       	call   c010d871 <do_wait>$/;"	l
c010e99d	obj/kernel.asm	/^c010e99d:	c9                   	leave  $/;"	l
c010e99e	obj/kernel.asm	/^c010e99e:	c3                   	ret    $/;"	l
c010e99f	obj/kernel.asm	/^c010e99f <sys_exec>:$/;"	l
c010e99f	obj/kernel.asm	/^c010e99f:	55                   	push   %ebp$/;"	l
c010e9a0	obj/kernel.asm	/^c010e9a0:	89 e5                	mov    %esp,%ebp$/;"	l
c010e9a2	obj/kernel.asm	/^c010e9a2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e9a5	obj/kernel.asm	/^c010e9a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e9a8	obj/kernel.asm	/^c010e9a8:	8b 00                	mov    (%eax),%eax$/;"	l
c010e9aa	obj/kernel.asm	/^c010e9aa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e9ad	obj/kernel.asm	/^c010e9ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e9b0	obj/kernel.asm	/^c010e9b0:	83 c0 04             	add    $0x4,%eax$/;"	l
c010e9b3	obj/kernel.asm	/^c010e9b3:	8b 00                	mov    (%eax),%eax$/;"	l
c010e9b5	obj/kernel.asm	/^c010e9b5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e9b8	obj/kernel.asm	/^c010e9b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e9bb	obj/kernel.asm	/^c010e9bb:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e9be	obj/kernel.asm	/^c010e9be:	8b 00                	mov    (%eax),%eax$/;"	l
c010e9c0	obj/kernel.asm	/^c010e9c0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e9c3	obj/kernel.asm	/^c010e9c3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e9c6	obj/kernel.asm	/^c010e9c6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e9ca	obj/kernel.asm	/^c010e9ca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e9cd	obj/kernel.asm	/^c010e9cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e9d1	obj/kernel.asm	/^c010e9d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9d4	obj/kernel.asm	/^c010e9d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e9d7	obj/kernel.asm	/^c010e9d7:	e8 42 ec ff ff       	call   c010d61e <do_execve>$/;"	l
c010e9dc	obj/kernel.asm	/^c010e9dc:	c9                   	leave  $/;"	l
c010e9dd	obj/kernel.asm	/^c010e9dd:	c3                   	ret    $/;"	l
c010e9de	obj/kernel.asm	/^c010e9de <sys_yield>:$/;"	l
c010e9de	obj/kernel.asm	/^c010e9de:	55                   	push   %ebp$/;"	l
c010e9df	obj/kernel.asm	/^c010e9df:	89 e5                	mov    %esp,%ebp$/;"	l
c010e9e1	obj/kernel.asm	/^c010e9e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e9e4	obj/kernel.asm	/^c010e9e4:	e8 72 ee ff ff       	call   c010d85b <do_yield>$/;"	l
c010e9e9	obj/kernel.asm	/^c010e9e9:	c9                   	leave  $/;"	l
c010e9ea	obj/kernel.asm	/^c010e9ea:	c3                   	ret    $/;"	l
c010e9eb	obj/kernel.asm	/^c010e9eb <sys_kill>:$/;"	l
c010e9eb	obj/kernel.asm	/^c010e9eb:	55                   	push   %ebp$/;"	l
c010e9ec	obj/kernel.asm	/^c010e9ec:	89 e5                	mov    %esp,%ebp$/;"	l
c010e9ee	obj/kernel.asm	/^c010e9ee:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e9f1	obj/kernel.asm	/^c010e9f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e9f4	obj/kernel.asm	/^c010e9f4:	8b 00                	mov    (%eax),%eax$/;"	l
c010e9f6	obj/kernel.asm	/^c010e9f6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e9f9	obj/kernel.asm	/^c010e9f9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9fc	obj/kernel.asm	/^c010e9fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e9ff	obj/kernel.asm	/^c010e9ff:	e8 0d f0 ff ff       	call   c010da11 <do_kill>$/;"	l
c010ea04	obj/kernel.asm	/^c010ea04:	c9                   	leave  $/;"	l
c010ea05	obj/kernel.asm	/^c010ea05:	c3                   	ret    $/;"	l
c010ea06	obj/kernel.asm	/^c010ea06 <sys_getpid>:$/;"	l
c010ea06	obj/kernel.asm	/^c010ea06:	55                   	push   %ebp$/;"	l
c010ea07	obj/kernel.asm	/^c010ea07:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea09	obj/kernel.asm	/^c010ea09:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010ea0e	obj/kernel.asm	/^c010ea0e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ea11	obj/kernel.asm	/^c010ea11:	5d                   	pop    %ebp$/;"	l
c010ea12	obj/kernel.asm	/^c010ea12:	c3                   	ret    $/;"	l
c010ea13	obj/kernel.asm	/^c010ea13 <sys_putc>:$/;"	l
c010ea13	obj/kernel.asm	/^c010ea13:	55                   	push   %ebp$/;"	l
c010ea14	obj/kernel.asm	/^c010ea14:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea16	obj/kernel.asm	/^c010ea16:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ea19	obj/kernel.asm	/^c010ea19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea1c	obj/kernel.asm	/^c010ea1c:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea1e	obj/kernel.asm	/^c010ea1e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ea21	obj/kernel.asm	/^c010ea21:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ea24	obj/kernel.asm	/^c010ea24:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ea27	obj/kernel.asm	/^c010ea27:	e8 5f 19 ff ff       	call   c010038b <cputchar>$/;"	l
c010ea2c	obj/kernel.asm	/^c010ea2c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ea31	obj/kernel.asm	/^c010ea31:	c9                   	leave  $/;"	l
c010ea32	obj/kernel.asm	/^c010ea32:	c3                   	ret    $/;"	l
c010ea33	obj/kernel.asm	/^c010ea33 <sys_pgdir>:$/;"	l
c010ea33	obj/kernel.asm	/^c010ea33:	55                   	push   %ebp$/;"	l
c010ea34	obj/kernel.asm	/^c010ea34:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea36	obj/kernel.asm	/^c010ea36:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ea39	obj/kernel.asm	/^c010ea39:	e8 b8 81 ff ff       	call   c0106bf6 <print_pgdir>$/;"	l
c010ea3e	obj/kernel.asm	/^c010ea3e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ea43	obj/kernel.asm	/^c010ea43:	c9                   	leave  $/;"	l
c010ea44	obj/kernel.asm	/^c010ea44:	c3                   	ret    $/;"	l
c010ea45	obj/kernel.asm	/^c010ea45 <sys_gettime>:$/;"	l
c010ea45	obj/kernel.asm	/^c010ea45:	55                   	push   %ebp$/;"	l
c010ea46	obj/kernel.asm	/^c010ea46:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea48	obj/kernel.asm	/^c010ea48:	a1 10 30 15 c0       	mov    0xc0153010,%eax$/;"	l
c010ea4d	obj/kernel.asm	/^c010ea4d:	5d                   	pop    %ebp$/;"	l
c010ea4e	obj/kernel.asm	/^c010ea4e:	c3                   	ret    $/;"	l
c010ea4f	obj/kernel.asm	/^c010ea4f <sys_lab6_set_priority>:$/;"	l
c010ea4f	obj/kernel.asm	/^c010ea4f:	55                   	push   %ebp$/;"	l
c010ea50	obj/kernel.asm	/^c010ea50:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea52	obj/kernel.asm	/^c010ea52:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ea55	obj/kernel.asm	/^c010ea55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea58	obj/kernel.asm	/^c010ea58:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea5a	obj/kernel.asm	/^c010ea5a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ea5d	obj/kernel.asm	/^c010ea5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ea60	obj/kernel.asm	/^c010ea60:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ea63	obj/kernel.asm	/^c010ea63:	e8 b0 f4 ff ff       	call   c010df18 <lab6_set_priority>$/;"	l
c010ea68	obj/kernel.asm	/^c010ea68:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ea6d	obj/kernel.asm	/^c010ea6d:	c9                   	leave  $/;"	l
c010ea6e	obj/kernel.asm	/^c010ea6e:	c3                   	ret    $/;"	l
c010ea6f	obj/kernel.asm	/^c010ea6f <sys_sleep>:$/;"	l
c010ea6f	obj/kernel.asm	/^c010ea6f:	55                   	push   %ebp$/;"	l
c010ea70	obj/kernel.asm	/^c010ea70:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea72	obj/kernel.asm	/^c010ea72:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ea75	obj/kernel.asm	/^c010ea75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea78	obj/kernel.asm	/^c010ea78:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea7a	obj/kernel.asm	/^c010ea7a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ea7d	obj/kernel.asm	/^c010ea7d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ea80	obj/kernel.asm	/^c010ea80:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ea83	obj/kernel.asm	/^c010ea83:	e8 ba f4 ff ff       	call   c010df42 <do_sleep>$/;"	l
c010ea88	obj/kernel.asm	/^c010ea88:	c9                   	leave  $/;"	l
c010ea89	obj/kernel.asm	/^c010ea89:	c3                   	ret    $/;"	l
c010ea8a	obj/kernel.asm	/^c010ea8a <sys_open>:$/;"	l
c010ea8a	obj/kernel.asm	/^c010ea8a:	55                   	push   %ebp$/;"	l
c010ea8b	obj/kernel.asm	/^c010ea8b:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea8d	obj/kernel.asm	/^c010ea8d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ea90	obj/kernel.asm	/^c010ea90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea93	obj/kernel.asm	/^c010ea93:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea95	obj/kernel.asm	/^c010ea95:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ea98	obj/kernel.asm	/^c010ea98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea9b	obj/kernel.asm	/^c010ea9b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ea9e	obj/kernel.asm	/^c010ea9e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eaa1	obj/kernel.asm	/^c010eaa1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eaa4	obj/kernel.asm	/^c010eaa4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eaa8	obj/kernel.asm	/^c010eaa8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eaab	obj/kernel.asm	/^c010eaab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eaae	obj/kernel.asm	/^c010eaae:	e8 2e ca ff ff       	call   c010b4e1 <sysfile_open>$/;"	l
c010eab3	obj/kernel.asm	/^c010eab3:	c9                   	leave  $/;"	l
c010eab4	obj/kernel.asm	/^c010eab4:	c3                   	ret    $/;"	l
c010eab5	obj/kernel.asm	/^c010eab5 <sys_close>:$/;"	l
c010eab5	obj/kernel.asm	/^c010eab5:	55                   	push   %ebp$/;"	l
c010eab6	obj/kernel.asm	/^c010eab6:	89 e5                	mov    %esp,%ebp$/;"	l
c010eab8	obj/kernel.asm	/^c010eab8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eabb	obj/kernel.asm	/^c010eabb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eabe	obj/kernel.asm	/^c010eabe:	8b 00                	mov    (%eax),%eax$/;"	l
c010eac0	obj/kernel.asm	/^c010eac0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eac3	obj/kernel.asm	/^c010eac3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eac6	obj/kernel.asm	/^c010eac6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eac9	obj/kernel.asm	/^c010eac9:	e8 5e ca ff ff       	call   c010b52c <sysfile_close>$/;"	l
c010eace	obj/kernel.asm	/^c010eace:	c9                   	leave  $/;"	l
c010eacf	obj/kernel.asm	/^c010eacf:	c3                   	ret    $/;"	l
c010ead0	obj/kernel.asm	/^c010ead0 <sys_read>:$/;"	l
c010ead0	obj/kernel.asm	/^c010ead0:	55                   	push   %ebp$/;"	l
c010ead1	obj/kernel.asm	/^c010ead1:	89 e5                	mov    %esp,%ebp$/;"	l
c010ead3	obj/kernel.asm	/^c010ead3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ead6	obj/kernel.asm	/^c010ead6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ead9	obj/kernel.asm	/^c010ead9:	8b 00                	mov    (%eax),%eax$/;"	l
c010eadb	obj/kernel.asm	/^c010eadb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eade	obj/kernel.asm	/^c010eade:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eae1	obj/kernel.asm	/^c010eae1:	83 c0 04             	add    $0x4,%eax$/;"	l
c010eae4	obj/kernel.asm	/^c010eae4:	8b 00                	mov    (%eax),%eax$/;"	l
c010eae6	obj/kernel.asm	/^c010eae6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eae9	obj/kernel.asm	/^c010eae9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eaec	obj/kernel.asm	/^c010eaec:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010eaef	obj/kernel.asm	/^c010eaef:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010eaf2	obj/kernel.asm	/^c010eaf2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010eaf5	obj/kernel.asm	/^c010eaf5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010eaf9	obj/kernel.asm	/^c010eaf9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eafc	obj/kernel.asm	/^c010eafc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eb00	obj/kernel.asm	/^c010eb00:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eb03	obj/kernel.asm	/^c010eb03:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eb06	obj/kernel.asm	/^c010eb06:	e8 34 ca ff ff       	call   c010b53f <sysfile_read>$/;"	l
c010eb0b	obj/kernel.asm	/^c010eb0b:	c9                   	leave  $/;"	l
c010eb0c	obj/kernel.asm	/^c010eb0c:	c3                   	ret    $/;"	l
c010eb0d	obj/kernel.asm	/^c010eb0d <sys_write>:$/;"	l
c010eb0d	obj/kernel.asm	/^c010eb0d:	55                   	push   %ebp$/;"	l
c010eb0e	obj/kernel.asm	/^c010eb0e:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb10	obj/kernel.asm	/^c010eb10:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eb13	obj/kernel.asm	/^c010eb13:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb16	obj/kernel.asm	/^c010eb16:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb18	obj/kernel.asm	/^c010eb18:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eb1b	obj/kernel.asm	/^c010eb1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb1e	obj/kernel.asm	/^c010eb1e:	83 c0 04             	add    $0x4,%eax$/;"	l
c010eb21	obj/kernel.asm	/^c010eb21:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb23	obj/kernel.asm	/^c010eb23:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eb26	obj/kernel.asm	/^c010eb26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb29	obj/kernel.asm	/^c010eb29:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010eb2c	obj/kernel.asm	/^c010eb2c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010eb2f	obj/kernel.asm	/^c010eb2f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010eb32	obj/kernel.asm	/^c010eb32:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010eb36	obj/kernel.asm	/^c010eb36:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eb39	obj/kernel.asm	/^c010eb39:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eb3d	obj/kernel.asm	/^c010eb3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eb40	obj/kernel.asm	/^c010eb40:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eb43	obj/kernel.asm	/^c010eb43:	e8 6f cb ff ff       	call   c010b6b7 <sysfile_write>$/;"	l
c010eb48	obj/kernel.asm	/^c010eb48:	c9                   	leave  $/;"	l
c010eb49	obj/kernel.asm	/^c010eb49:	c3                   	ret    $/;"	l
c010eb4a	obj/kernel.asm	/^c010eb4a <sys_seek>:$/;"	l
c010eb4a	obj/kernel.asm	/^c010eb4a:	55                   	push   %ebp$/;"	l
c010eb4b	obj/kernel.asm	/^c010eb4b:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb4d	obj/kernel.asm	/^c010eb4d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eb50	obj/kernel.asm	/^c010eb50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb53	obj/kernel.asm	/^c010eb53:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb55	obj/kernel.asm	/^c010eb55:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eb58	obj/kernel.asm	/^c010eb58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb5b	obj/kernel.asm	/^c010eb5b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010eb5e	obj/kernel.asm	/^c010eb5e:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb60	obj/kernel.asm	/^c010eb60:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eb63	obj/kernel.asm	/^c010eb63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb66	obj/kernel.asm	/^c010eb66:	83 c0 08             	add    $0x8,%eax$/;"	l
c010eb69	obj/kernel.asm	/^c010eb69:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb6b	obj/kernel.asm	/^c010eb6b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010eb6e	obj/kernel.asm	/^c010eb6e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010eb71	obj/kernel.asm	/^c010eb71:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010eb75	obj/kernel.asm	/^c010eb75:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eb78	obj/kernel.asm	/^c010eb78:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eb7c	obj/kernel.asm	/^c010eb7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eb7f	obj/kernel.asm	/^c010eb7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010eb82	obj/kernel.asm	/^c010eb82:	e8 aa cc ff ff       	call   c010b831 <sysfile_seek>$/;"	l
c010eb87	obj/kernel.asm	/^c010eb87:	c9                   	leave  $/;"	l
c010eb88	obj/kernel.asm	/^c010eb88:	c3                   	ret    $/;"	l
c010eb89	obj/kernel.asm	/^c010eb89 <sys_fstat>:$/;"	l
c010eb89	obj/kernel.asm	/^c010eb89:	55                   	push   %ebp$/;"	l
c010eb8a	obj/kernel.asm	/^c010eb8a:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb8c	obj/kernel.asm	/^c010eb8c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eb8f	obj/kernel.asm	/^c010eb8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb92	obj/kernel.asm	/^c010eb92:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb94	obj/kernel.asm	/^c010eb94:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eb97	obj/kernel.asm	/^c010eb97:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb9a	obj/kernel.asm	/^c010eb9a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010eb9d	obj/kernel.asm	/^c010eb9d:	8b 00                	mov    (%eax),%eax$/;"	l
c010eb9f	obj/kernel.asm	/^c010eb9f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eba2	obj/kernel.asm	/^c010eba2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eba5	obj/kernel.asm	/^c010eba5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010eba9	obj/kernel.asm	/^c010eba9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ebac	obj/kernel.asm	/^c010ebac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ebaf	obj/kernel.asm	/^c010ebaf:	e8 9e cc ff ff       	call   c010b852 <sysfile_fstat>$/;"	l
c010ebb4	obj/kernel.asm	/^c010ebb4:	c9                   	leave  $/;"	l
c010ebb5	obj/kernel.asm	/^c010ebb5:	c3                   	ret    $/;"	l
c010ebb6	obj/kernel.asm	/^c010ebb6 <sys_fsync>:$/;"	l
c010ebb6	obj/kernel.asm	/^c010ebb6:	55                   	push   %ebp$/;"	l
c010ebb7	obj/kernel.asm	/^c010ebb7:	89 e5                	mov    %esp,%ebp$/;"	l
c010ebb9	obj/kernel.asm	/^c010ebb9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ebbc	obj/kernel.asm	/^c010ebbc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebbf	obj/kernel.asm	/^c010ebbf:	8b 00                	mov    (%eax),%eax$/;"	l
c010ebc1	obj/kernel.asm	/^c010ebc1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ebc4	obj/kernel.asm	/^c010ebc4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ebc7	obj/kernel.asm	/^c010ebc7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ebca	obj/kernel.asm	/^c010ebca:	e8 01 cd ff ff       	call   c010b8d0 <sysfile_fsync>$/;"	l
c010ebcf	obj/kernel.asm	/^c010ebcf:	c9                   	leave  $/;"	l
c010ebd0	obj/kernel.asm	/^c010ebd0:	c3                   	ret    $/;"	l
c010ebd1	obj/kernel.asm	/^c010ebd1 <sys_getcwd>:$/;"	l
c010ebd1	obj/kernel.asm	/^c010ebd1:	55                   	push   %ebp$/;"	l
c010ebd2	obj/kernel.asm	/^c010ebd2:	89 e5                	mov    %esp,%ebp$/;"	l
c010ebd4	obj/kernel.asm	/^c010ebd4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ebd7	obj/kernel.asm	/^c010ebd7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebda	obj/kernel.asm	/^c010ebda:	8b 00                	mov    (%eax),%eax$/;"	l
c010ebdc	obj/kernel.asm	/^c010ebdc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ebdf	obj/kernel.asm	/^c010ebdf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebe2	obj/kernel.asm	/^c010ebe2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ebe5	obj/kernel.asm	/^c010ebe5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ebe8	obj/kernel.asm	/^c010ebe8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ebeb	obj/kernel.asm	/^c010ebeb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ebef	obj/kernel.asm	/^c010ebef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ebf2	obj/kernel.asm	/^c010ebf2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ebf5	obj/kernel.asm	/^c010ebf5:	e8 73 ce ff ff       	call   c010ba6d <sysfile_getcwd>$/;"	l
c010ebfa	obj/kernel.asm	/^c010ebfa:	c9                   	leave  $/;"	l
c010ebfb	obj/kernel.asm	/^c010ebfb:	c3                   	ret    $/;"	l
c010ebfc	obj/kernel.asm	/^c010ebfc <sys_getdirentry>:$/;"	l
c010ebfc	obj/kernel.asm	/^c010ebfc:	55                   	push   %ebp$/;"	l
c010ebfd	obj/kernel.asm	/^c010ebfd:	89 e5                	mov    %esp,%ebp$/;"	l
c010ebff	obj/kernel.asm	/^c010ebff:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ec02	obj/kernel.asm	/^c010ec02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec05	obj/kernel.asm	/^c010ec05:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec07	obj/kernel.asm	/^c010ec07:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ec0a	obj/kernel.asm	/^c010ec0a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec0d	obj/kernel.asm	/^c010ec0d:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ec10	obj/kernel.asm	/^c010ec10:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec12	obj/kernel.asm	/^c010ec12:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ec15	obj/kernel.asm	/^c010ec15:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ec18	obj/kernel.asm	/^c010ec18:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ec1c	obj/kernel.asm	/^c010ec1c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec1f	obj/kernel.asm	/^c010ec1f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ec22	obj/kernel.asm	/^c010ec22:	e8 dd ce ff ff       	call   c010bb04 <sysfile_getdirentry>$/;"	l
c010ec27	obj/kernel.asm	/^c010ec27:	c9                   	leave  $/;"	l
c010ec28	obj/kernel.asm	/^c010ec28:	c3                   	ret    $/;"	l
c010ec29	obj/kernel.asm	/^c010ec29 <sys_dup>:$/;"	l
c010ec29	obj/kernel.asm	/^c010ec29:	55                   	push   %ebp$/;"	l
c010ec2a	obj/kernel.asm	/^c010ec2a:	89 e5                	mov    %esp,%ebp$/;"	l
c010ec2c	obj/kernel.asm	/^c010ec2c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ec2f	obj/kernel.asm	/^c010ec2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec32	obj/kernel.asm	/^c010ec32:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec34	obj/kernel.asm	/^c010ec34:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ec37	obj/kernel.asm	/^c010ec37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec3a	obj/kernel.asm	/^c010ec3a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ec3d	obj/kernel.asm	/^c010ec3d:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec3f	obj/kernel.asm	/^c010ec3f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ec42	obj/kernel.asm	/^c010ec42:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ec45	obj/kernel.asm	/^c010ec45:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ec49	obj/kernel.asm	/^c010ec49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec4c	obj/kernel.asm	/^c010ec4c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ec4f	obj/kernel.asm	/^c010ec4f:	e8 a4 cf ff ff       	call   c010bbf8 <sysfile_dup>$/;"	l
c010ec54	obj/kernel.asm	/^c010ec54:	c9                   	leave  $/;"	l
c010ec55	obj/kernel.asm	/^c010ec55:	c3                   	ret    $/;"	l
c010ec56	obj/kernel.asm	/^c010ec56 <syscall>:$/;"	l
c010ec56	obj/kernel.asm	/^c010ec56:	55                   	push   %ebp$/;"	l
c010ec57	obj/kernel.asm	/^c010ec57:	89 e5                	mov    %esp,%ebp$/;"	l
c010ec59	obj/kernel.asm	/^c010ec59:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010ec5c	obj/kernel.asm	/^c010ec5c:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010ec61	obj/kernel.asm	/^c010ec61:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ec64	obj/kernel.asm	/^c010ec64:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ec67	obj/kernel.asm	/^c010ec67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec6a	obj/kernel.asm	/^c010ec6a:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010ec6d	obj/kernel.asm	/^c010ec6d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ec70	obj/kernel.asm	/^c010ec70:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ec74	obj/kernel.asm	/^c010ec74:	78 60                	js     c010ecd6 <syscall+0x80>$/;"	l
c010ec76	obj/kernel.asm	/^c010ec76:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ec79	obj/kernel.asm	/^c010ec79:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c010ec7e	obj/kernel.asm	/^c010ec7e:	77 56                	ja     c010ecd6 <syscall+0x80>$/;"	l
c010ec80	obj/kernel.asm	/^c010ec80:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ec83	obj/kernel.asm	/^c010ec83:	8b 04 85 c0 ea 14 c0 	mov    -0x3feb1540(,%eax,4),%eax$/;"	l
c010ec8a	obj/kernel.asm	/^c010ec8a:	85 c0                	test   %eax,%eax$/;"	l
c010ec8c	obj/kernel.asm	/^c010ec8c:	74 48                	je     c010ecd6 <syscall+0x80>$/;"	l
c010ec8e	obj/kernel.asm	/^c010ec8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec91	obj/kernel.asm	/^c010ec91:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ec94	obj/kernel.asm	/^c010ec94:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010ec97	obj/kernel.asm	/^c010ec97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec9a	obj/kernel.asm	/^c010ec9a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ec9d	obj/kernel.asm	/^c010ec9d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010eca0	obj/kernel.asm	/^c010eca0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eca3	obj/kernel.asm	/^c010eca3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010eca6	obj/kernel.asm	/^c010eca6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010eca9	obj/kernel.asm	/^c010eca9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ecac	obj/kernel.asm	/^c010ecac:	8b 00                	mov    (%eax),%eax$/;"	l
c010ecae	obj/kernel.asm	/^c010ecae:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ecb1	obj/kernel.asm	/^c010ecb1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ecb4	obj/kernel.asm	/^c010ecb4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ecb7	obj/kernel.asm	/^c010ecb7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ecba	obj/kernel.asm	/^c010ecba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ecbd	obj/kernel.asm	/^c010ecbd:	8b 04 85 c0 ea 14 c0 	mov    -0x3feb1540(,%eax,4),%eax$/;"	l
c010ecc4	obj/kernel.asm	/^c010ecc4:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010ecc7	obj/kernel.asm	/^c010ecc7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ecca	obj/kernel.asm	/^c010ecca:	ff d0                	call   *%eax$/;"	l
c010eccc	obj/kernel.asm	/^c010eccc:	89 c2                	mov    %eax,%edx$/;"	l
c010ecce	obj/kernel.asm	/^c010ecce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ecd1	obj/kernel.asm	/^c010ecd1:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010ecd4	obj/kernel.asm	/^c010ecd4:	eb 46                	jmp    c010ed1c <syscall+0xc6>$/;"	l
c010ecd6	obj/kernel.asm	/^c010ecd6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ecd9	obj/kernel.asm	/^c010ecd9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ecdc	obj/kernel.asm	/^c010ecdc:	e8 e1 37 ff ff       	call   c01024c2 <print_trapframe>$/;"	l
c010ece1	obj/kernel.asm	/^c010ece1:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010ece6	obj/kernel.asm	/^c010ece6:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010ece9	obj/kernel.asm	/^c010ece9:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c010ecee	obj/kernel.asm	/^c010ecee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ecf1	obj/kernel.asm	/^c010ecf1:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010ecf5	obj/kernel.asm	/^c010ecf5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010ecf9	obj/kernel.asm	/^c010ecf9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ecfc	obj/kernel.asm	/^c010ecfc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010ed00	obj/kernel.asm	/^c010ed00:	c7 44 24 08 2c 84 11 	movl   $0xc011842c,0x8(%esp)$/;"	l
c010ed07	obj/kernel.asm	/^c010ed07:	c0 $/;"	l
c010ed08	obj/kernel.asm	/^c010ed08:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c010ed0f	obj/kernel.asm	/^c010ed0f:	00 $/;"	l
c010ed10	obj/kernel.asm	/^c010ed10:	c7 04 24 58 84 11 c0 	movl   $0xc0118458,(%esp)$/;"	l
c010ed17	obj/kernel.asm	/^c010ed17:	e8 ac 21 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ed1c	obj/kernel.asm	/^c010ed1c:	c9                   	leave  $/;"	l
c010ed1d	obj/kernel.asm	/^c010ed1d:	c3                   	ret    $/;"	l
c010ed1e	obj/kernel.asm	/^c010ed1e <page2ppn>:$/;"	l
c010ed1e	obj/kernel.asm	/^c010ed1e:	55                   	push   %ebp$/;"	l
c010ed1f	obj/kernel.asm	/^c010ed1f:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed21	obj/kernel.asm	/^c010ed21:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ed24	obj/kernel.asm	/^c010ed24:	a1 28 30 15 c0       	mov    0xc0153028,%eax$/;"	l
c010ed29	obj/kernel.asm	/^c010ed29:	29 c2                	sub    %eax,%edx$/;"	l
c010ed2b	obj/kernel.asm	/^c010ed2b:	89 d0                	mov    %edx,%eax$/;"	l
c010ed2d	obj/kernel.asm	/^c010ed2d:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010ed30	obj/kernel.asm	/^c010ed30:	5d                   	pop    %ebp$/;"	l
c010ed31	obj/kernel.asm	/^c010ed31:	c3                   	ret    $/;"	l
c010ed32	obj/kernel.asm	/^c010ed32 <page2pa>:$/;"	l
c010ed32	obj/kernel.asm	/^c010ed32:	55                   	push   %ebp$/;"	l
c010ed33	obj/kernel.asm	/^c010ed33:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed35	obj/kernel.asm	/^c010ed35:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ed38	obj/kernel.asm	/^c010ed38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed3b	obj/kernel.asm	/^c010ed3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ed3e	obj/kernel.asm	/^c010ed3e:	e8 db ff ff ff       	call   c010ed1e <page2ppn>$/;"	l
c010ed43	obj/kernel.asm	/^c010ed43:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010ed46	obj/kernel.asm	/^c010ed46:	c9                   	leave  $/;"	l
c010ed47	obj/kernel.asm	/^c010ed47:	c3                   	ret    $/;"	l
c010ed48	obj/kernel.asm	/^c010ed48 <page2kva>:$/;"	l
c010ed48	obj/kernel.asm	/^c010ed48:	55                   	push   %ebp$/;"	l
c010ed49	obj/kernel.asm	/^c010ed49:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed4b	obj/kernel.asm	/^c010ed4b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ed4e	obj/kernel.asm	/^c010ed4e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed51	obj/kernel.asm	/^c010ed51:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ed54	obj/kernel.asm	/^c010ed54:	e8 d9 ff ff ff       	call   c010ed32 <page2pa>$/;"	l
c010ed59	obj/kernel.asm	/^c010ed59:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ed5c	obj/kernel.asm	/^c010ed5c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed5f	obj/kernel.asm	/^c010ed5f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010ed62	obj/kernel.asm	/^c010ed62:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ed65	obj/kernel.asm	/^c010ed65:	a1 80 fe 14 c0       	mov    0xc014fe80,%eax$/;"	l
c010ed6a	obj/kernel.asm	/^c010ed6a:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010ed6d	obj/kernel.asm	/^c010ed6d:	72 23                	jb     c010ed92 <page2kva+0x4a>$/;"	l
c010ed6f	obj/kernel.asm	/^c010ed6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed72	obj/kernel.asm	/^c010ed72:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010ed76	obj/kernel.asm	/^c010ed76:	c7 44 24 08 70 84 11 	movl   $0xc0118470,0x8(%esp)$/;"	l
c010ed7d	obj/kernel.asm	/^c010ed7d:	c0 $/;"	l
c010ed7e	obj/kernel.asm	/^c010ed7e:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c010ed85	obj/kernel.asm	/^c010ed85:	00 $/;"	l
c010ed86	obj/kernel.asm	/^c010ed86:	c7 04 24 93 84 11 c0 	movl   $0xc0118493,(%esp)$/;"	l
c010ed8d	obj/kernel.asm	/^c010ed8d:	e8 36 21 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ed92	obj/kernel.asm	/^c010ed92:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed95	obj/kernel.asm	/^c010ed95:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010ed9a	obj/kernel.asm	/^c010ed9a:	c9                   	leave  $/;"	l
c010ed9b	obj/kernel.asm	/^c010ed9b:	c3                   	ret    $/;"	l
c010ed9c	obj/kernel.asm	/^c010ed9c <swapfs_init>:$/;"	l
c010ed9c	obj/kernel.asm	/^c010ed9c:	55                   	push   %ebp$/;"	l
c010ed9d	obj/kernel.asm	/^c010ed9d:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed9f	obj/kernel.asm	/^c010ed9f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010eda2	obj/kernel.asm	/^c010eda2:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010eda9	obj/kernel.asm	/^c010eda9:	e8 74 2e ff ff       	call   c0101c22 <ide_device_valid>$/;"	l
c010edae	obj/kernel.asm	/^c010edae:	85 c0                	test   %eax,%eax$/;"	l
c010edb0	obj/kernel.asm	/^c010edb0:	75 1c                	jne    c010edce <swapfs_init+0x32>$/;"	l
c010edb2	obj/kernel.asm	/^c010edb2:	c7 44 24 08 a1 84 11 	movl   $0xc01184a1,0x8(%esp)$/;"	l
c010edb9	obj/kernel.asm	/^c010edb9:	c0 $/;"	l
c010edba	obj/kernel.asm	/^c010edba:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)$/;"	l
c010edc1	obj/kernel.asm	/^c010edc1:	00 $/;"	l
c010edc2	obj/kernel.asm	/^c010edc2:	c7 04 24 bb 84 11 c0 	movl   $0xc01184bb,(%esp)$/;"	l
c010edc9	obj/kernel.asm	/^c010edc9:	e8 fa 20 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010edce	obj/kernel.asm	/^c010edce:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010edd5	obj/kernel.asm	/^c010edd5:	e8 87 2e ff ff       	call   c0101c61 <ide_device_size>$/;"	l
c010edda	obj/kernel.asm	/^c010edda:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010eddd	obj/kernel.asm	/^c010eddd:	a3 dc 30 15 c0       	mov    %eax,0xc01530dc$/;"	l
c010ede2	obj/kernel.asm	/^c010ede2:	c9                   	leave  $/;"	l
c010ede3	obj/kernel.asm	/^c010ede3:	c3                   	ret    $/;"	l
c010ede4	obj/kernel.asm	/^c010ede4 <swapfs_read>:$/;"	l
c010ede4	obj/kernel.asm	/^c010ede4:	55                   	push   %ebp$/;"	l
c010ede5	obj/kernel.asm	/^c010ede5:	89 e5                	mov    %esp,%ebp$/;"	l
c010ede7	obj/kernel.asm	/^c010ede7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010edea	obj/kernel.asm	/^c010edea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010eded	obj/kernel.asm	/^c010eded:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010edf0	obj/kernel.asm	/^c010edf0:	e8 53 ff ff ff       	call   c010ed48 <page2kva>$/;"	l
c010edf5	obj/kernel.asm	/^c010edf5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010edf8	obj/kernel.asm	/^c010edf8:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c010edfb	obj/kernel.asm	/^c010edfb:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010edfe	obj/kernel.asm	/^c010edfe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ee02	obj/kernel.asm	/^c010ee02:	74 0b                	je     c010ee0f <swapfs_read+0x2b>$/;"	l
c010ee04	obj/kernel.asm	/^c010ee04:	8b 15 dc 30 15 c0    	mov    0xc01530dc,%edx$/;"	l
c010ee0a	obj/kernel.asm	/^c010ee0a:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010ee0d	obj/kernel.asm	/^c010ee0d:	72 23                	jb     c010ee32 <swapfs_read+0x4e>$/;"	l
c010ee0f	obj/kernel.asm	/^c010ee0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ee12	obj/kernel.asm	/^c010ee12:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010ee16	obj/kernel.asm	/^c010ee16:	c7 44 24 08 d1 84 11 	movl   $0xc01184d1,0x8(%esp)$/;"	l
c010ee1d	obj/kernel.asm	/^c010ee1d:	c0 $/;"	l
c010ee1e	obj/kernel.asm	/^c010ee1e:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
c010ee25	obj/kernel.asm	/^c010ee25:	00 $/;"	l
c010ee26	obj/kernel.asm	/^c010ee26:	c7 04 24 bb 84 11 c0 	movl   $0xc01184bb,(%esp)$/;"	l
c010ee2d	obj/kernel.asm	/^c010ee2d:	e8 96 20 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ee32	obj/kernel.asm	/^c010ee32:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ee35	obj/kernel.asm	/^c010ee35:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c010ee38	obj/kernel.asm	/^c010ee38:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c010ee3f	obj/kernel.asm	/^c010ee3f:	00 $/;"	l
c010ee40	obj/kernel.asm	/^c010ee40:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010ee44	obj/kernel.asm	/^c010ee44:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010ee48	obj/kernel.asm	/^c010ee48:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010ee4f	obj/kernel.asm	/^c010ee4f:	e8 4c 2e ff ff       	call   c0101ca0 <ide_read_secs>$/;"	l
c010ee54	obj/kernel.asm	/^c010ee54:	c9                   	leave  $/;"	l
c010ee55	obj/kernel.asm	/^c010ee55:	c3                   	ret    $/;"	l
c010ee56	obj/kernel.asm	/^c010ee56 <swapfs_write>:$/;"	l
c010ee56	obj/kernel.asm	/^c010ee56:	55                   	push   %ebp$/;"	l
c010ee57	obj/kernel.asm	/^c010ee57:	89 e5                	mov    %esp,%ebp$/;"	l
c010ee59	obj/kernel.asm	/^c010ee59:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ee5c	obj/kernel.asm	/^c010ee5c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ee5f	obj/kernel.asm	/^c010ee5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ee62	obj/kernel.asm	/^c010ee62:	e8 e1 fe ff ff       	call   c010ed48 <page2kva>$/;"	l
c010ee67	obj/kernel.asm	/^c010ee67:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ee6a	obj/kernel.asm	/^c010ee6a:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c010ee6d	obj/kernel.asm	/^c010ee6d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010ee70	obj/kernel.asm	/^c010ee70:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ee74	obj/kernel.asm	/^c010ee74:	74 0b                	je     c010ee81 <swapfs_write+0x2b>$/;"	l
c010ee76	obj/kernel.asm	/^c010ee76:	8b 15 dc 30 15 c0    	mov    0xc01530dc,%edx$/;"	l
c010ee7c	obj/kernel.asm	/^c010ee7c:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010ee7f	obj/kernel.asm	/^c010ee7f:	72 23                	jb     c010eea4 <swapfs_write+0x4e>$/;"	l
c010ee81	obj/kernel.asm	/^c010ee81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ee84	obj/kernel.asm	/^c010ee84:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010ee88	obj/kernel.asm	/^c010ee88:	c7 44 24 08 d1 84 11 	movl   $0xc01184d1,0x8(%esp)$/;"	l
c010ee8f	obj/kernel.asm	/^c010ee8f:	c0 $/;"	l
c010ee90	obj/kernel.asm	/^c010ee90:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
c010ee97	obj/kernel.asm	/^c010ee97:	00 $/;"	l
c010ee98	obj/kernel.asm	/^c010ee98:	c7 04 24 bb 84 11 c0 	movl   $0xc01184bb,(%esp)$/;"	l
c010ee9f	obj/kernel.asm	/^c010ee9f:	e8 24 20 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010eea4	obj/kernel.asm	/^c010eea4:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010eea7	obj/kernel.asm	/^c010eea7:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c010eeaa	obj/kernel.asm	/^c010eeaa:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c010eeb1	obj/kernel.asm	/^c010eeb1:	00 $/;"	l
c010eeb2	obj/kernel.asm	/^c010eeb2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010eeb6	obj/kernel.asm	/^c010eeb6:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010eeba	obj/kernel.asm	/^c010eeba:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010eec1	obj/kernel.asm	/^c010eec1:	e8 1c 30 ff ff       	call   c0101ee2 <ide_write_secs>$/;"	l
c010eec6	obj/kernel.asm	/^c010eec6:	c9                   	leave  $/;"	l
c010eec7	obj/kernel.asm	/^c010eec7:	c3                   	ret    $/;"	l
c010eec8	obj/kernel.asm	/^c010eec8 <inode_ref_count>:$/;"	l
c010eec8	obj/kernel.asm	/^c010eec8:	55                   	push   %ebp$/;"	l
c010eec9	obj/kernel.asm	/^c010eec9:	89 e5                	mov    %esp,%ebp$/;"	l
c010eecb	obj/kernel.asm	/^c010eecb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eece	obj/kernel.asm	/^c010eece:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010eed1	obj/kernel.asm	/^c010eed1:	5d                   	pop    %ebp$/;"	l
c010eed2	obj/kernel.asm	/^c010eed2:	c3                   	ret    $/;"	l
c010eed3	obj/kernel.asm	/^c010eed3 <inode_open_count>:$/;"	l
c010eed3	obj/kernel.asm	/^c010eed3:	55                   	push   %ebp$/;"	l
c010eed4	obj/kernel.asm	/^c010eed4:	89 e5                	mov    %esp,%ebp$/;"	l
c010eed6	obj/kernel.asm	/^c010eed6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eed9	obj/kernel.asm	/^c010eed9:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010eedc	obj/kernel.asm	/^c010eedc:	5d                   	pop    %ebp$/;"	l
c010eedd	obj/kernel.asm	/^c010eedd:	c3                   	ret    $/;"	l
c010eede	obj/kernel.asm	/^c010eede <__alloc_inode>:$/;"	l
c010eede	obj/kernel.asm	/^c010eede:	55                   	push   %ebp$/;"	l
c010eedf	obj/kernel.asm	/^c010eedf:	89 e5                	mov    %esp,%ebp$/;"	l
c010eee1	obj/kernel.asm	/^c010eee1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010eee4	obj/kernel.asm	/^c010eee4:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)$/;"	l
c010eeeb	obj/kernel.asm	/^c010eeeb:	e8 ab 5d ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010eef0	obj/kernel.asm	/^c010eef0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eef3	obj/kernel.asm	/^c010eef3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010eef7	obj/kernel.asm	/^c010eef7:	74 09                	je     c010ef02 <__alloc_inode+0x24>$/;"	l
c010eef9	obj/kernel.asm	/^c010eef9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010eefc	obj/kernel.asm	/^c010eefc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eeff	obj/kernel.asm	/^c010eeff:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c010ef02	obj/kernel.asm	/^c010ef02:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ef05	obj/kernel.asm	/^c010ef05:	c9                   	leave  $/;"	l
c010ef06	obj/kernel.asm	/^c010ef06:	c3                   	ret    $/;"	l
c010ef07	obj/kernel.asm	/^c010ef07 <inode_init>:$/;"	l
c010ef07	obj/kernel.asm	/^c010ef07:	55                   	push   %ebp$/;"	l
c010ef08	obj/kernel.asm	/^c010ef08:	89 e5                	mov    %esp,%ebp$/;"	l
c010ef0a	obj/kernel.asm	/^c010ef0a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ef0d	obj/kernel.asm	/^c010ef0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef10	obj/kernel.asm	/^c010ef10:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)$/;"	l
c010ef17	obj/kernel.asm	/^c010ef17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef1a	obj/kernel.asm	/^c010ef1a:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c010ef21	obj/kernel.asm	/^c010ef21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef24	obj/kernel.asm	/^c010ef24:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ef27	obj/kernel.asm	/^c010ef27:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010ef2a	obj/kernel.asm	/^c010ef2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef2d	obj/kernel.asm	/^c010ef2d:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010ef30	obj/kernel.asm	/^c010ef30:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010ef33	obj/kernel.asm	/^c010ef33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef36	obj/kernel.asm	/^c010ef36:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ef39	obj/kernel.asm	/^c010ef39:	e8 7b 00 00 00       	call   c010efb9 <inode_ref_inc>$/;"	l
c010ef3e	obj/kernel.asm	/^c010ef3e:	c9                   	leave  $/;"	l
c010ef3f	obj/kernel.asm	/^c010ef3f:	c3                   	ret    $/;"	l
c010ef40	obj/kernel.asm	/^c010ef40 <inode_kill>:$/;"	l
c010ef40	obj/kernel.asm	/^c010ef40:	55                   	push   %ebp$/;"	l
c010ef41	obj/kernel.asm	/^c010ef41:	89 e5                	mov    %esp,%ebp$/;"	l
c010ef43	obj/kernel.asm	/^c010ef43:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ef46	obj/kernel.asm	/^c010ef46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef49	obj/kernel.asm	/^c010ef49:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ef4c	obj/kernel.asm	/^c010ef4c:	e8 77 ff ff ff       	call   c010eec8 <inode_ref_count>$/;"	l
c010ef51	obj/kernel.asm	/^c010ef51:	85 c0                	test   %eax,%eax$/;"	l
c010ef53	obj/kernel.asm	/^c010ef53:	74 24                	je     c010ef79 <inode_kill+0x39>$/;"	l
c010ef55	obj/kernel.asm	/^c010ef55:	c7 44 24 0c f0 84 11 	movl   $0xc01184f0,0xc(%esp)$/;"	l
c010ef5c	obj/kernel.asm	/^c010ef5c:	c0 $/;"	l
c010ef5d	obj/kernel.asm	/^c010ef5d:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010ef64	obj/kernel.asm	/^c010ef64:	c0 $/;"	l
c010ef65	obj/kernel.asm	/^c010ef65:	c7 44 24 04 29 00 00 	movl   $0x29,0x4(%esp)$/;"	l
c010ef6c	obj/kernel.asm	/^c010ef6c:	00 $/;"	l
c010ef6d	obj/kernel.asm	/^c010ef6d:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010ef74	obj/kernel.asm	/^c010ef74:	e8 4f 1f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ef79	obj/kernel.asm	/^c010ef79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef7c	obj/kernel.asm	/^c010ef7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ef7f	obj/kernel.asm	/^c010ef7f:	e8 4f ff ff ff       	call   c010eed3 <inode_open_count>$/;"	l
c010ef84	obj/kernel.asm	/^c010ef84:	85 c0                	test   %eax,%eax$/;"	l
c010ef86	obj/kernel.asm	/^c010ef86:	74 24                	je     c010efac <inode_kill+0x6c>$/;"	l
c010ef88	obj/kernel.asm	/^c010ef88:	c7 44 24 0c 34 85 11 	movl   $0xc0118534,0xc(%esp)$/;"	l
c010ef8f	obj/kernel.asm	/^c010ef8f:	c0 $/;"	l
c010ef90	obj/kernel.asm	/^c010ef90:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010ef97	obj/kernel.asm	/^c010ef97:	c0 $/;"	l
c010ef98	obj/kernel.asm	/^c010ef98:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%esp)$/;"	l
c010ef9f	obj/kernel.asm	/^c010ef9f:	00 $/;"	l
c010efa0	obj/kernel.asm	/^c010efa0:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010efa7	obj/kernel.asm	/^c010efa7:	e8 1c 1f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010efac	obj/kernel.asm	/^c010efac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010efaf	obj/kernel.asm	/^c010efaf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010efb2	obj/kernel.asm	/^c010efb2:	e8 ff 5c ff ff       	call   c0104cb6 <kfree>$/;"	l
c010efb7	obj/kernel.asm	/^c010efb7:	c9                   	leave  $/;"	l
c010efb8	obj/kernel.asm	/^c010efb8:	c3                   	ret    $/;"	l
c010efb9	obj/kernel.asm	/^c010efb9 <inode_ref_inc>:$/;"	l
c010efb9	obj/kernel.asm	/^c010efb9:	55                   	push   %ebp$/;"	l
c010efba	obj/kernel.asm	/^c010efba:	89 e5                	mov    %esp,%ebp$/;"	l
c010efbc	obj/kernel.asm	/^c010efbc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010efbf	obj/kernel.asm	/^c010efbf:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010efc2	obj/kernel.asm	/^c010efc2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010efc5	obj/kernel.asm	/^c010efc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010efc8	obj/kernel.asm	/^c010efc8:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c010efcb	obj/kernel.asm	/^c010efcb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010efce	obj/kernel.asm	/^c010efce:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010efd1	obj/kernel.asm	/^c010efd1:	5d                   	pop    %ebp$/;"	l
c010efd2	obj/kernel.asm	/^c010efd2:	c3                   	ret    $/;"	l
c010efd3	obj/kernel.asm	/^c010efd3 <inode_ref_dec>:$/;"	l
c010efd3	obj/kernel.asm	/^c010efd3:	55                   	push   %ebp$/;"	l
c010efd4	obj/kernel.asm	/^c010efd4:	89 e5                	mov    %esp,%ebp$/;"	l
c010efd6	obj/kernel.asm	/^c010efd6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010efd9	obj/kernel.asm	/^c010efd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010efdc	obj/kernel.asm	/^c010efdc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010efdf	obj/kernel.asm	/^c010efdf:	e8 e4 fe ff ff       	call   c010eec8 <inode_ref_count>$/;"	l
c010efe4	obj/kernel.asm	/^c010efe4:	85 c0                	test   %eax,%eax$/;"	l
c010efe6	obj/kernel.asm	/^c010efe6:	7f 24                	jg     c010f00c <inode_ref_dec+0x39>$/;"	l
c010efe8	obj/kernel.asm	/^c010efe8:	c7 44 24 0c 50 85 11 	movl   $0xc0118550,0xc(%esp)$/;"	l
c010efef	obj/kernel.asm	/^c010efef:	c0 $/;"	l
c010eff0	obj/kernel.asm	/^c010eff0:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010eff7	obj/kernel.asm	/^c010eff7:	c0 $/;"	l
c010eff8	obj/kernel.asm	/^c010eff8:	c7 44 24 04 3f 00 00 	movl   $0x3f,0x4(%esp)$/;"	l
c010efff	obj/kernel.asm	/^c010efff:	00 $/;"	l
c010f000	obj/kernel.asm	/^c010f000:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010f007	obj/kernel.asm	/^c010f007:	e8 bc 1e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f00c	obj/kernel.asm	/^c010f00c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f00f	obj/kernel.asm	/^c010f00f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f012	obj/kernel.asm	/^c010f012:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f015	obj/kernel.asm	/^c010f015:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f018	obj/kernel.asm	/^c010f018:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c010f01b	obj/kernel.asm	/^c010f01b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f01e	obj/kernel.asm	/^c010f01e:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f021	obj/kernel.asm	/^c010f021:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f024	obj/kernel.asm	/^c010f024:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f028	obj/kernel.asm	/^c010f028:	0f 85 8d 00 00 00    	jne    c010f0bb <inode_ref_dec+0xe8>$/;"	l
c010f02e	obj/kernel.asm	/^c010f02e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f031	obj/kernel.asm	/^c010f031:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f034	obj/kernel.asm	/^c010f034:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f038	obj/kernel.asm	/^c010f038:	74 17                	je     c010f051 <inode_ref_dec+0x7e>$/;"	l
c010f03a	obj/kernel.asm	/^c010f03a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f03d	obj/kernel.asm	/^c010f03d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f040	obj/kernel.asm	/^c010f040:	85 c0                	test   %eax,%eax$/;"	l
c010f042	obj/kernel.asm	/^c010f042:	74 0d                	je     c010f051 <inode_ref_dec+0x7e>$/;"	l
c010f044	obj/kernel.asm	/^c010f044:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f047	obj/kernel.asm	/^c010f047:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f04a	obj/kernel.asm	/^c010f04a:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c010f04d	obj/kernel.asm	/^c010f04d:	85 c0                	test   %eax,%eax$/;"	l
c010f04f	obj/kernel.asm	/^c010f04f:	75 24                	jne    c010f075 <inode_ref_dec+0xa2>$/;"	l
c010f051	obj/kernel.asm	/^c010f051:	c7 44 24 0c 6c 85 11 	movl   $0xc011856c,0xc(%esp)$/;"	l
c010f058	obj/kernel.asm	/^c010f058:	c0 $/;"	l
c010f059	obj/kernel.asm	/^c010f059:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010f060	obj/kernel.asm	/^c010f060:	c0 $/;"	l
c010f061	obj/kernel.asm	/^c010f061:	c7 44 24 04 44 00 00 	movl   $0x44,0x4(%esp)$/;"	l
c010f068	obj/kernel.asm	/^c010f068:	00 $/;"	l
c010f069	obj/kernel.asm	/^c010f069:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010f070	obj/kernel.asm	/^c010f070:	e8 53 1e ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f075	obj/kernel.asm	/^c010f075:	c7 44 24 04 bc 85 11 	movl   $0xc01185bc,0x4(%esp)$/;"	l
c010f07c	obj/kernel.asm	/^c010f07c:	c0 $/;"	l
c010f07d	obj/kernel.asm	/^c010f07d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f080	obj/kernel.asm	/^c010f080:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f083	obj/kernel.asm	/^c010f083:	e8 39 01 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010f088	obj/kernel.asm	/^c010f088:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f08b	obj/kernel.asm	/^c010f08b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f08e	obj/kernel.asm	/^c010f08e:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c010f091	obj/kernel.asm	/^c010f091:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f094	obj/kernel.asm	/^c010f094:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f097	obj/kernel.asm	/^c010f097:	ff d0                	call   *%eax$/;"	l
c010f099	obj/kernel.asm	/^c010f099:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f09c	obj/kernel.asm	/^c010f09c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f0a0	obj/kernel.asm	/^c010f0a0:	74 19                	je     c010f0bb <inode_ref_dec+0xe8>$/;"	l
c010f0a2	obj/kernel.asm	/^c010f0a2:	83 7d ec f1          	cmpl   $0xfffffff1,-0x14(%ebp)$/;"	l
c010f0a6	obj/kernel.asm	/^c010f0a6:	74 13                	je     c010f0bb <inode_ref_dec+0xe8>$/;"	l
c010f0a8	obj/kernel.asm	/^c010f0a8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f0ab	obj/kernel.asm	/^c010f0ab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f0af	obj/kernel.asm	/^c010f0af:	c7 04 24 c4 85 11 c0 	movl   $0xc01185c4,(%esp)$/;"	l
c010f0b6	obj/kernel.asm	/^c010f0b6:	e8 aa 12 ff ff       	call   c0100365 <cprintf>$/;"	l
c010f0bb	obj/kernel.asm	/^c010f0bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f0be	obj/kernel.asm	/^c010f0be:	c9                   	leave  $/;"	l
c010f0bf	obj/kernel.asm	/^c010f0bf:	c3                   	ret    $/;"	l
c010f0c0	obj/kernel.asm	/^c010f0c0 <inode_open_inc>:$/;"	l
c010f0c0	obj/kernel.asm	/^c010f0c0:	55                   	push   %ebp$/;"	l
c010f0c1	obj/kernel.asm	/^c010f0c1:	89 e5                	mov    %esp,%ebp$/;"	l
c010f0c3	obj/kernel.asm	/^c010f0c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0c6	obj/kernel.asm	/^c010f0c6:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f0c9	obj/kernel.asm	/^c010f0c9:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f0cc	obj/kernel.asm	/^c010f0cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0cf	obj/kernel.asm	/^c010f0cf:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c010f0d2	obj/kernel.asm	/^c010f0d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0d5	obj/kernel.asm	/^c010f0d5:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f0d8	obj/kernel.asm	/^c010f0d8:	5d                   	pop    %ebp$/;"	l
c010f0d9	obj/kernel.asm	/^c010f0d9:	c3                   	ret    $/;"	l
c010f0da	obj/kernel.asm	/^c010f0da <inode_open_dec>:$/;"	l
c010f0da	obj/kernel.asm	/^c010f0da:	55                   	push   %ebp$/;"	l
c010f0db	obj/kernel.asm	/^c010f0db:	89 e5                	mov    %esp,%ebp$/;"	l
c010f0dd	obj/kernel.asm	/^c010f0dd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f0e0	obj/kernel.asm	/^c010f0e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0e3	obj/kernel.asm	/^c010f0e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f0e6	obj/kernel.asm	/^c010f0e6:	e8 e8 fd ff ff       	call   c010eed3 <inode_open_count>$/;"	l
c010f0eb	obj/kernel.asm	/^c010f0eb:	85 c0                	test   %eax,%eax$/;"	l
c010f0ed	obj/kernel.asm	/^c010f0ed:	7f 24                	jg     c010f113 <inode_open_dec+0x39>$/;"	l
c010f0ef	obj/kernel.asm	/^c010f0ef:	c7 44 24 0c e4 85 11 	movl   $0xc01185e4,0xc(%esp)$/;"	l
c010f0f6	obj/kernel.asm	/^c010f0f6:	c0 $/;"	l
c010f0f7	obj/kernel.asm	/^c010f0f7:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010f0fe	obj/kernel.asm	/^c010f0fe:	c0 $/;"	l
c010f0ff	obj/kernel.asm	/^c010f0ff:	c7 44 24 04 5c 00 00 	movl   $0x5c,0x4(%esp)$/;"	l
c010f106	obj/kernel.asm	/^c010f106:	00 $/;"	l
c010f107	obj/kernel.asm	/^c010f107:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010f10e	obj/kernel.asm	/^c010f10e:	e8 b5 1d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f113	obj/kernel.asm	/^c010f113:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f116	obj/kernel.asm	/^c010f116:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f119	obj/kernel.asm	/^c010f119:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f11c	obj/kernel.asm	/^c010f11c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f11f	obj/kernel.asm	/^c010f11f:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c010f122	obj/kernel.asm	/^c010f122:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f125	obj/kernel.asm	/^c010f125:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f128	obj/kernel.asm	/^c010f128:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f12b	obj/kernel.asm	/^c010f12b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f12f	obj/kernel.asm	/^c010f12f:	0f 85 87 00 00 00    	jne    c010f1bc <inode_open_dec+0xe2>$/;"	l
c010f135	obj/kernel.asm	/^c010f135:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f138	obj/kernel.asm	/^c010f138:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f13b	obj/kernel.asm	/^c010f13b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f13f	obj/kernel.asm	/^c010f13f:	74 17                	je     c010f158 <inode_open_dec+0x7e>$/;"	l
c010f141	obj/kernel.asm	/^c010f141:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f144	obj/kernel.asm	/^c010f144:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f147	obj/kernel.asm	/^c010f147:	85 c0                	test   %eax,%eax$/;"	l
c010f149	obj/kernel.asm	/^c010f149:	74 0d                	je     c010f158 <inode_open_dec+0x7e>$/;"	l
c010f14b	obj/kernel.asm	/^c010f14b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f14e	obj/kernel.asm	/^c010f14e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f151	obj/kernel.asm	/^c010f151:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f154	obj/kernel.asm	/^c010f154:	85 c0                	test   %eax,%eax$/;"	l
c010f156	obj/kernel.asm	/^c010f156:	75 24                	jne    c010f17c <inode_open_dec+0xa2>$/;"	l
c010f158	obj/kernel.asm	/^c010f158:	c7 44 24 0c 00 86 11 	movl   $0xc0118600,0xc(%esp)$/;"	l
c010f15f	obj/kernel.asm	/^c010f15f:	c0 $/;"	l
c010f160	obj/kernel.asm	/^c010f160:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010f167	obj/kernel.asm	/^c010f167:	c0 $/;"	l
c010f168	obj/kernel.asm	/^c010f168:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c010f16f	obj/kernel.asm	/^c010f16f:	00 $/;"	l
c010f170	obj/kernel.asm	/^c010f170:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010f177	obj/kernel.asm	/^c010f177:	e8 4c 1d ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f17c	obj/kernel.asm	/^c010f17c:	c7 44 24 04 4e 86 11 	movl   $0xc011864e,0x4(%esp)$/;"	l
c010f183	obj/kernel.asm	/^c010f183:	c0 $/;"	l
c010f184	obj/kernel.asm	/^c010f184:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f187	obj/kernel.asm	/^c010f187:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f18a	obj/kernel.asm	/^c010f18a:	e8 32 00 00 00       	call   c010f1c1 <inode_check>$/;"	l
c010f18f	obj/kernel.asm	/^c010f18f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f192	obj/kernel.asm	/^c010f192:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f195	obj/kernel.asm	/^c010f195:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f198	obj/kernel.asm	/^c010f198:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f19b	obj/kernel.asm	/^c010f19b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f19e	obj/kernel.asm	/^c010f19e:	ff d0                	call   *%eax$/;"	l
c010f1a0	obj/kernel.asm	/^c010f1a0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f1a3	obj/kernel.asm	/^c010f1a3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f1a7	obj/kernel.asm	/^c010f1a7:	74 13                	je     c010f1bc <inode_open_dec+0xe2>$/;"	l
c010f1a9	obj/kernel.asm	/^c010f1a9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f1ac	obj/kernel.asm	/^c010f1ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f1b0	obj/kernel.asm	/^c010f1b0:	c7 04 24 54 86 11 c0 	movl   $0xc0118654,(%esp)$/;"	l
c010f1b7	obj/kernel.asm	/^c010f1b7:	e8 a9 11 ff ff       	call   c0100365 <cprintf>$/;"	l
c010f1bc	obj/kernel.asm	/^c010f1bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f1bf	obj/kernel.asm	/^c010f1bf:	c9                   	leave  $/;"	l
c010f1c0	obj/kernel.asm	/^c010f1c0:	c3                   	ret    $/;"	l
c010f1c1	obj/kernel.asm	/^c010f1c1 <inode_check>:$/;"	l
c010f1c1	obj/kernel.asm	/^c010f1c1:	55                   	push   %ebp$/;"	l
c010f1c2	obj/kernel.asm	/^c010f1c2:	89 e5                	mov    %esp,%ebp$/;"	l
c010f1c4	obj/kernel.asm	/^c010f1c4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f1c7	obj/kernel.asm	/^c010f1c7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f1cb	obj/kernel.asm	/^c010f1cb:	74 0a                	je     c010f1d7 <inode_check+0x16>$/;"	l
c010f1cd	obj/kernel.asm	/^c010f1cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f1d0	obj/kernel.asm	/^c010f1d0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f1d3	obj/kernel.asm	/^c010f1d3:	85 c0                	test   %eax,%eax$/;"	l
c010f1d5	obj/kernel.asm	/^c010f1d5:	75 24                	jne    c010f1fb <inode_check+0x3a>$/;"	l
c010f1d7	obj/kernel.asm	/^c010f1d7:	c7 44 24 0c 74 86 11 	movl   $0xc0118674,0xc(%esp)$/;"	l
c010f1de	obj/kernel.asm	/^c010f1de:	c0 $/;"	l
c010f1df	obj/kernel.asm	/^c010f1df:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010f1e6	obj/kernel.asm	/^c010f1e6:	c0 $/;"	l
c010f1e7	obj/kernel.asm	/^c010f1e7:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
c010f1ee	obj/kernel.asm	/^c010f1ee:	00 $/;"	l
c010f1ef	obj/kernel.asm	/^c010f1ef:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010f1f6	obj/kernel.asm	/^c010f1f6:	e8 cd 1c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f1fb	obj/kernel.asm	/^c010f1fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f1fe	obj/kernel.asm	/^c010f1fe:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f201	obj/kernel.asm	/^c010f201:	8b 00                	mov    (%eax),%eax$/;"	l
c010f203	obj/kernel.asm	/^c010f203:	3d 76 a4 4b 8c       	cmp    $0x8c4ba476,%eax$/;"	l
c010f208	obj/kernel.asm	/^c010f208:	74 24                	je     c010f22e <inode_check+0x6d>$/;"	l
c010f20a	obj/kernel.asm	/^c010f20a:	c7 44 24 0c 9c 86 11 	movl   $0xc011869c,0xc(%esp)$/;"	l
c010f211	obj/kernel.asm	/^c010f211:	c0 $/;"	l
c010f212	obj/kernel.asm	/^c010f212:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010f219	obj/kernel.asm	/^c010f219:	c0 $/;"	l
c010f21a	obj/kernel.asm	/^c010f21a:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
c010f221	obj/kernel.asm	/^c010f221:	00 $/;"	l
c010f222	obj/kernel.asm	/^c010f222:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010f229	obj/kernel.asm	/^c010f229:	e8 9a 1c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f22e	obj/kernel.asm	/^c010f22e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f231	obj/kernel.asm	/^c010f231:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f234	obj/kernel.asm	/^c010f234:	e8 8f fc ff ff       	call   c010eec8 <inode_ref_count>$/;"	l
c010f239	obj/kernel.asm	/^c010f239:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f23c	obj/kernel.asm	/^c010f23c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f23f	obj/kernel.asm	/^c010f23f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f242	obj/kernel.asm	/^c010f242:	e8 8c fc ff ff       	call   c010eed3 <inode_open_count>$/;"	l
c010f247	obj/kernel.asm	/^c010f247:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f24a	obj/kernel.asm	/^c010f24a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f24d	obj/kernel.asm	/^c010f24d:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f250	obj/kernel.asm	/^c010f250:	7c 06                	jl     c010f258 <inode_check+0x97>$/;"	l
c010f252	obj/kernel.asm	/^c010f252:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f256	obj/kernel.asm	/^c010f256:	79 24                	jns    c010f27c <inode_check+0xbb>$/;"	l
c010f258	obj/kernel.asm	/^c010f258:	c7 44 24 0c c4 86 11 	movl   $0xc01186c4,0xc(%esp)$/;"	l
c010f25f	obj/kernel.asm	/^c010f25f:	c0 $/;"	l
c010f260	obj/kernel.asm	/^c010f260:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010f267	obj/kernel.asm	/^c010f267:	c0 $/;"	l
c010f268	obj/kernel.asm	/^c010f268:	c7 44 24 04 71 00 00 	movl   $0x71,0x4(%esp)$/;"	l
c010f26f	obj/kernel.asm	/^c010f26f:	00 $/;"	l
c010f270	obj/kernel.asm	/^c010f270:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010f277	obj/kernel.asm	/^c010f277:	e8 4c 1c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f27c	obj/kernel.asm	/^c010f27c:	81 7d f4 ff ff 00 00 	cmpl   $0xffff,-0xc(%ebp)$/;"	l
c010f283	obj/kernel.asm	/^c010f283:	7f 09                	jg     c010f28e <inode_check+0xcd>$/;"	l
c010f285	obj/kernel.asm	/^c010f285:	81 7d f0 ff ff 00 00 	cmpl   $0xffff,-0x10(%ebp)$/;"	l
c010f28c	obj/kernel.asm	/^c010f28c:	7e 24                	jle    c010f2b2 <inode_check+0xf1>$/;"	l
c010f28e	obj/kernel.asm	/^c010f28e:	c7 44 24 0c f0 86 11 	movl   $0xc01186f0,0xc(%esp)$/;"	l
c010f295	obj/kernel.asm	/^c010f295:	c0 $/;"	l
c010f296	obj/kernel.asm	/^c010f296:	c7 44 24 08 0b 85 11 	movl   $0xc011850b,0x8(%esp)$/;"	l
c010f29d	obj/kernel.asm	/^c010f29d:	c0 $/;"	l
c010f29e	obj/kernel.asm	/^c010f29e:	c7 44 24 04 72 00 00 	movl   $0x72,0x4(%esp)$/;"	l
c010f2a5	obj/kernel.asm	/^c010f2a5:	00 $/;"	l
c010f2a6	obj/kernel.asm	/^c010f2a6:	c7 04 24 20 85 11 c0 	movl   $0xc0118520,(%esp)$/;"	l
c010f2ad	obj/kernel.asm	/^c010f2ad:	e8 16 1c ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f2b2	obj/kernel.asm	/^c010f2b2:	c9                   	leave  $/;"	l
c010f2b3	obj/kernel.asm	/^c010f2b3:	c3                   	ret    $/;"	l
c010f2b4	obj/kernel.asm	/^c010f2b4 <__alloc_fs>:$/;"	l
c010f2b4	obj/kernel.asm	/^c010f2b4:	55                   	push   %ebp$/;"	l
c010f2b5	obj/kernel.asm	/^c010f2b5:	89 e5                	mov    %esp,%ebp$/;"	l
c010f2b7	obj/kernel.asm	/^c010f2b7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f2ba	obj/kernel.asm	/^c010f2ba:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)$/;"	l
c010f2c1	obj/kernel.asm	/^c010f2c1:	e8 d5 59 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010f2c6	obj/kernel.asm	/^c010f2c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f2c9	obj/kernel.asm	/^c010f2c9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f2cd	obj/kernel.asm	/^c010f2cd:	74 09                	je     c010f2d8 <__alloc_fs+0x24>$/;"	l
c010f2cf	obj/kernel.asm	/^c010f2cf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f2d2	obj/kernel.asm	/^c010f2d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f2d5	obj/kernel.asm	/^c010f2d5:	89 50 6c             	mov    %edx,0x6c(%eax)$/;"	l
c010f2d8	obj/kernel.asm	/^c010f2d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f2db	obj/kernel.asm	/^c010f2db:	c9                   	leave  $/;"	l
c010f2dc	obj/kernel.asm	/^c010f2dc:	c3                   	ret    $/;"	l
c010f2dd	obj/kernel.asm	/^c010f2dd <vfs_init>:$/;"	l
c010f2dd	obj/kernel.asm	/^c010f2dd:	55                   	push   %ebp$/;"	l
c010f2de	obj/kernel.asm	/^c010f2de:	89 e5                	mov    %esp,%ebp$/;"	l
c010f2e0	obj/kernel.asm	/^c010f2e0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f2e3	obj/kernel.asm	/^c010f2e3:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010f2ea	obj/kernel.asm	/^c010f2ea:	00 $/;"	l
c010f2eb	obj/kernel.asm	/^c010f2eb:	c7 04 24 b8 1f 15 c0 	movl   $0xc0151fb8,(%esp)$/;"	l
c010f2f2	obj/kernel.asm	/^c010f2f2:	e8 78 a7 ff ff       	call   c0109a6f <sem_init>$/;"	l
c010f2f7	obj/kernel.asm	/^c010f2f7:	e8 63 01 00 00       	call   c010f45f <vfs_devlist_init>$/;"	l
c010f2fc	obj/kernel.asm	/^c010f2fc:	c9                   	leave  $/;"	l
c010f2fd	obj/kernel.asm	/^c010f2fd:	c3                   	ret    $/;"	l
c010f2fe	obj/kernel.asm	/^c010f2fe <lock_bootfs>:$/;"	l
c010f2fe	obj/kernel.asm	/^c010f2fe:	55                   	push   %ebp$/;"	l
c010f2ff	obj/kernel.asm	/^c010f2ff:	89 e5                	mov    %esp,%ebp$/;"	l
c010f301	obj/kernel.asm	/^c010f301:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f304	obj/kernel.asm	/^c010f304:	c7 04 24 b8 1f 15 c0 	movl   $0xc0151fb8,(%esp)$/;"	l
c010f30b	obj/kernel.asm	/^c010f30b:	e8 ed a8 ff ff       	call   c0109bfd <down>$/;"	l
c010f310	obj/kernel.asm	/^c010f310:	c9                   	leave  $/;"	l
c010f311	obj/kernel.asm	/^c010f311:	c3                   	ret    $/;"	l
c010f312	obj/kernel.asm	/^c010f312 <unlock_bootfs>:$/;"	l
c010f312	obj/kernel.asm	/^c010f312:	55                   	push   %ebp$/;"	l
c010f313	obj/kernel.asm	/^c010f313:	89 e5                	mov    %esp,%ebp$/;"	l
c010f315	obj/kernel.asm	/^c010f315:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f318	obj/kernel.asm	/^c010f318:	c7 04 24 b8 1f 15 c0 	movl   $0xc0151fb8,(%esp)$/;"	l
c010f31f	obj/kernel.asm	/^c010f31f:	e8 be a8 ff ff       	call   c0109be2 <up>$/;"	l
c010f324	obj/kernel.asm	/^c010f324:	c9                   	leave  $/;"	l
c010f325	obj/kernel.asm	/^c010f325:	c3                   	ret    $/;"	l
c010f326	obj/kernel.asm	/^c010f326 <change_bootfs>:$/;"	l
c010f326	obj/kernel.asm	/^c010f326:	55                   	push   %ebp$/;"	l
c010f327	obj/kernel.asm	/^c010f327:	89 e5                	mov    %esp,%ebp$/;"	l
c010f329	obj/kernel.asm	/^c010f329:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f32c	obj/kernel.asm	/^c010f32c:	e8 cd ff ff ff       	call   c010f2fe <lock_bootfs>$/;"	l
c010f331	obj/kernel.asm	/^c010f331:	a1 c4 1f 15 c0       	mov    0xc0151fc4,%eax$/;"	l
c010f336	obj/kernel.asm	/^c010f336:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f339	obj/kernel.asm	/^c010f339:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f33c	obj/kernel.asm	/^c010f33c:	a3 c4 1f 15 c0       	mov    %eax,0xc0151fc4$/;"	l
c010f341	obj/kernel.asm	/^c010f341:	e8 cc ff ff ff       	call   c010f312 <unlock_bootfs>$/;"	l
c010f346	obj/kernel.asm	/^c010f346:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f34a	obj/kernel.asm	/^c010f34a:	74 0b                	je     c010f357 <change_bootfs+0x31>$/;"	l
c010f34c	obj/kernel.asm	/^c010f34c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f34f	obj/kernel.asm	/^c010f34f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f352	obj/kernel.asm	/^c010f352:	e8 7c fc ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c010f357	obj/kernel.asm	/^c010f357:	c9                   	leave  $/;"	l
c010f358	obj/kernel.asm	/^c010f358:	c3                   	ret    $/;"	l
c010f359	obj/kernel.asm	/^c010f359 <vfs_set_bootfs>:$/;"	l
c010f359	obj/kernel.asm	/^c010f359:	55                   	push   %ebp$/;"	l
c010f35a	obj/kernel.asm	/^c010f35a:	89 e5                	mov    %esp,%ebp$/;"	l
c010f35c	obj/kernel.asm	/^c010f35c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f35f	obj/kernel.asm	/^c010f35f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010f366	obj/kernel.asm	/^c010f366:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f36a	obj/kernel.asm	/^c010f36a:	74 62                	je     c010f3ce <vfs_set_bootfs+0x75>$/;"	l
c010f36c	obj/kernel.asm	/^c010f36c:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c010f373	obj/kernel.asm	/^c010f373:	00 $/;"	l
c010f374	obj/kernel.asm	/^c010f374:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f377	obj/kernel.asm	/^c010f377:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f37a	obj/kernel.asm	/^c010f37a:	e8 db 5e 00 00       	call   c011525a <strchr>$/;"	l
c010f37f	obj/kernel.asm	/^c010f37f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f382	obj/kernel.asm	/^c010f382:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f386	obj/kernel.asm	/^c010f386:	74 0d                	je     c010f395 <vfs_set_bootfs+0x3c>$/;"	l
c010f388	obj/kernel.asm	/^c010f388:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f38b	obj/kernel.asm	/^c010f38b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010f38e	obj/kernel.asm	/^c010f38e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010f391	obj/kernel.asm	/^c010f391:	84 c0                	test   %al,%al$/;"	l
c010f393	obj/kernel.asm	/^c010f393:	74 07                	je     c010f39c <vfs_set_bootfs+0x43>$/;"	l
c010f395	obj/kernel.asm	/^c010f395:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f39a	obj/kernel.asm	/^c010f39a:	eb 42                	jmp    c010f3de <vfs_set_bootfs+0x85>$/;"	l
c010f39c	obj/kernel.asm	/^c010f39c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f39f	obj/kernel.asm	/^c010f39f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f3a2	obj/kernel.asm	/^c010f3a2:	e8 99 10 00 00       	call   c0110440 <vfs_chdir>$/;"	l
c010f3a7	obj/kernel.asm	/^c010f3a7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f3aa	obj/kernel.asm	/^c010f3aa:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f3ae	obj/kernel.asm	/^c010f3ae:	74 05                	je     c010f3b5 <vfs_set_bootfs+0x5c>$/;"	l
c010f3b0	obj/kernel.asm	/^c010f3b0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f3b3	obj/kernel.asm	/^c010f3b3:	eb 29                	jmp    c010f3de <vfs_set_bootfs+0x85>$/;"	l
c010f3b5	obj/kernel.asm	/^c010f3b5:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010f3b8	obj/kernel.asm	/^c010f3b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f3bb	obj/kernel.asm	/^c010f3bb:	e8 54 0f 00 00       	call   c0110314 <vfs_get_curdir>$/;"	l
c010f3c0	obj/kernel.asm	/^c010f3c0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f3c3	obj/kernel.asm	/^c010f3c3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f3c7	obj/kernel.asm	/^c010f3c7:	74 05                	je     c010f3ce <vfs_set_bootfs+0x75>$/;"	l
c010f3c9	obj/kernel.asm	/^c010f3c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f3cc	obj/kernel.asm	/^c010f3cc:	eb 10                	jmp    c010f3de <vfs_set_bootfs+0x85>$/;"	l
c010f3ce	obj/kernel.asm	/^c010f3ce:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f3d1	obj/kernel.asm	/^c010f3d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f3d4	obj/kernel.asm	/^c010f3d4:	e8 4d ff ff ff       	call   c010f326 <change_bootfs>$/;"	l
c010f3d9	obj/kernel.asm	/^c010f3d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f3de	obj/kernel.asm	/^c010f3de:	c9                   	leave  $/;"	l
c010f3df	obj/kernel.asm	/^c010f3df:	c3                   	ret    $/;"	l
c010f3e0	obj/kernel.asm	/^c010f3e0 <vfs_get_bootfs>:$/;"	l
c010f3e0	obj/kernel.asm	/^c010f3e0:	55                   	push   %ebp$/;"	l
c010f3e1	obj/kernel.asm	/^c010f3e1:	89 e5                	mov    %esp,%ebp$/;"	l
c010f3e3	obj/kernel.asm	/^c010f3e3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f3e6	obj/kernel.asm	/^c010f3e6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f3ed	obj/kernel.asm	/^c010f3ed:	a1 c4 1f 15 c0       	mov    0xc0151fc4,%eax$/;"	l
c010f3f2	obj/kernel.asm	/^c010f3f2:	85 c0                	test   %eax,%eax$/;"	l
c010f3f4	obj/kernel.asm	/^c010f3f4:	74 25                	je     c010f41b <vfs_get_bootfs+0x3b>$/;"	l
c010f3f6	obj/kernel.asm	/^c010f3f6:	e8 03 ff ff ff       	call   c010f2fe <lock_bootfs>$/;"	l
c010f3fb	obj/kernel.asm	/^c010f3fb:	a1 c4 1f 15 c0       	mov    0xc0151fc4,%eax$/;"	l
c010f400	obj/kernel.asm	/^c010f400:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f403	obj/kernel.asm	/^c010f403:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f407	obj/kernel.asm	/^c010f407:	74 0d                	je     c010f416 <vfs_get_bootfs+0x36>$/;"	l
c010f409	obj/kernel.asm	/^c010f409:	a1 c4 1f 15 c0       	mov    0xc0151fc4,%eax$/;"	l
c010f40e	obj/kernel.asm	/^c010f40e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f411	obj/kernel.asm	/^c010f411:	e8 a3 fb ff ff       	call   c010efb9 <inode_ref_inc>$/;"	l
c010f416	obj/kernel.asm	/^c010f416:	e8 f7 fe ff ff       	call   c010f312 <unlock_bootfs>$/;"	l
c010f41b	obj/kernel.asm	/^c010f41b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f41f	obj/kernel.asm	/^c010f41f:	75 07                	jne    c010f428 <vfs_get_bootfs+0x48>$/;"	l
c010f421	obj/kernel.asm	/^c010f421:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c010f426	obj/kernel.asm	/^c010f426:	eb 0d                	jmp    c010f435 <vfs_get_bootfs+0x55>$/;"	l
c010f428	obj/kernel.asm	/^c010f428:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f42b	obj/kernel.asm	/^c010f42b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f42e	obj/kernel.asm	/^c010f42e:	89 10                	mov    %edx,(%eax)$/;"	l
c010f430	obj/kernel.asm	/^c010f430:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f435	obj/kernel.asm	/^c010f435:	c9                   	leave  $/;"	l
c010f436	obj/kernel.asm	/^c010f436:	c3                   	ret    $/;"	l
c010f437	obj/kernel.asm	/^c010f437 <lock_vdev_list>:$/;"	l
c010f437	obj/kernel.asm	/^c010f437:	55                   	push   %ebp$/;"	l
c010f438	obj/kernel.asm	/^c010f438:	89 e5                	mov    %esp,%ebp$/;"	l
c010f43a	obj/kernel.asm	/^c010f43a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f43d	obj/kernel.asm	/^c010f43d:	c7 04 24 d0 1f 15 c0 	movl   $0xc0151fd0,(%esp)$/;"	l
c010f444	obj/kernel.asm	/^c010f444:	e8 b4 a7 ff ff       	call   c0109bfd <down>$/;"	l
c010f449	obj/kernel.asm	/^c010f449:	c9                   	leave  $/;"	l
c010f44a	obj/kernel.asm	/^c010f44a:	c3                   	ret    $/;"	l
c010f44b	obj/kernel.asm	/^c010f44b <unlock_vdev_list>:$/;"	l
c010f44b	obj/kernel.asm	/^c010f44b:	55                   	push   %ebp$/;"	l
c010f44c	obj/kernel.asm	/^c010f44c:	89 e5                	mov    %esp,%ebp$/;"	l
c010f44e	obj/kernel.asm	/^c010f44e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f451	obj/kernel.asm	/^c010f451:	c7 04 24 d0 1f 15 c0 	movl   $0xc0151fd0,(%esp)$/;"	l
c010f458	obj/kernel.asm	/^c010f458:	e8 85 a7 ff ff       	call   c0109be2 <up>$/;"	l
c010f45d	obj/kernel.asm	/^c010f45d:	c9                   	leave  $/;"	l
c010f45e	obj/kernel.asm	/^c010f45e:	c3                   	ret    $/;"	l
c010f45f	obj/kernel.asm	/^c010f45f <vfs_devlist_init>:$/;"	l
c010f45f	obj/kernel.asm	/^c010f45f:	55                   	push   %ebp$/;"	l
c010f460	obj/kernel.asm	/^c010f460:	89 e5                	mov    %esp,%ebp$/;"	l
c010f462	obj/kernel.asm	/^c010f462:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f465	obj/kernel.asm	/^c010f465:	c7 45 f4 c8 1f 15 c0 	movl   $0xc0151fc8,-0xc(%ebp)$/;"	l
c010f46c	obj/kernel.asm	/^c010f46c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f46f	obj/kernel.asm	/^c010f46f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f472	obj/kernel.asm	/^c010f472:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f475	obj/kernel.asm	/^c010f475:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f478	obj/kernel.asm	/^c010f478:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010f47b	obj/kernel.asm	/^c010f47b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f47e	obj/kernel.asm	/^c010f47e:	89 10                	mov    %edx,(%eax)$/;"	l
c010f480	obj/kernel.asm	/^c010f480:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010f487	obj/kernel.asm	/^c010f487:	00 $/;"	l
c010f488	obj/kernel.asm	/^c010f488:	c7 04 24 d0 1f 15 c0 	movl   $0xc0151fd0,(%esp)$/;"	l
c010f48f	obj/kernel.asm	/^c010f48f:	e8 db a5 ff ff       	call   c0109a6f <sem_init>$/;"	l
c010f494	obj/kernel.asm	/^c010f494:	c9                   	leave  $/;"	l
c010f495	obj/kernel.asm	/^c010f495:	c3                   	ret    $/;"	l
c010f496	obj/kernel.asm	/^c010f496 <vfs_cleanup>:$/;"	l
c010f496	obj/kernel.asm	/^c010f496:	55                   	push   %ebp$/;"	l
c010f497	obj/kernel.asm	/^c010f497:	89 e5                	mov    %esp,%ebp$/;"	l
c010f499	obj/kernel.asm	/^c010f499:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010f49c	obj/kernel.asm	/^c010f49c:	c7 45 e8 c8 1f 15 c0 	movl   $0xc0151fc8,-0x18(%ebp)$/;"	l
c010f4a3	obj/kernel.asm	/^c010f4a3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f4a6	obj/kernel.asm	/^c010f4a6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f4a9	obj/kernel.asm	/^c010f4a9:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010f4ac	obj/kernel.asm	/^c010f4ac:	0f 94 c0             	sete   %al$/;"	l
c010f4af	obj/kernel.asm	/^c010f4af:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010f4b2	obj/kernel.asm	/^c010f4b2:	85 c0                	test   %eax,%eax$/;"	l
c010f4b4	obj/kernel.asm	/^c010f4b4:	75 57                	jne    c010f50d <vfs_cleanup+0x77>$/;"	l
c010f4b6	obj/kernel.asm	/^c010f4b6:	e8 7c ff ff ff       	call   c010f437 <lock_vdev_list>$/;"	l
c010f4bb	obj/kernel.asm	/^c010f4bb:	c7 45 f0 c8 1f 15 c0 	movl   $0xc0151fc8,-0x10(%ebp)$/;"	l
c010f4c2	obj/kernel.asm	/^c010f4c2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f4c5	obj/kernel.asm	/^c010f4c5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f4c8	obj/kernel.asm	/^c010f4c8:	eb 27                	jmp    c010f4f1 <vfs_cleanup+0x5b>$/;"	l
c010f4ca	obj/kernel.asm	/^c010f4ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f4cd	obj/kernel.asm	/^c010f4cd:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f4d0	obj/kernel.asm	/^c010f4d0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f4d3	obj/kernel.asm	/^c010f4d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f4d6	obj/kernel.asm	/^c010f4d6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f4d9	obj/kernel.asm	/^c010f4d9:	85 c0                	test   %eax,%eax$/;"	l
c010f4db	obj/kernel.asm	/^c010f4db:	74 14                	je     c010f4f1 <vfs_cleanup+0x5b>$/;"	l
c010f4dd	obj/kernel.asm	/^c010f4dd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f4e0	obj/kernel.asm	/^c010f4e0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f4e3	obj/kernel.asm	/^c010f4e3:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
c010f4e6	obj/kernel.asm	/^c010f4e6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010f4e9	obj/kernel.asm	/^c010f4e9:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010f4ec	obj/kernel.asm	/^c010f4ec:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f4ef	obj/kernel.asm	/^c010f4ef:	ff d0                	call   *%eax$/;"	l
c010f4f1	obj/kernel.asm	/^c010f4f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f4f4	obj/kernel.asm	/^c010f4f4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f4f7	obj/kernel.asm	/^c010f4f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f4fa	obj/kernel.asm	/^c010f4fa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f4fd	obj/kernel.asm	/^c010f4fd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f500	obj/kernel.asm	/^c010f500:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f503	obj/kernel.asm	/^c010f503:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f506	obj/kernel.asm	/^c010f506:	75 c2                	jne    c010f4ca <vfs_cleanup+0x34>$/;"	l
c010f508	obj/kernel.asm	/^c010f508:	e8 3e ff ff ff       	call   c010f44b <unlock_vdev_list>$/;"	l
c010f50d	obj/kernel.asm	/^c010f50d:	c9                   	leave  $/;"	l
c010f50e	obj/kernel.asm	/^c010f50e:	c3                   	ret    $/;"	l
c010f50f	obj/kernel.asm	/^c010f50f <vfs_get_root>:$/;"	l
c010f50f	obj/kernel.asm	/^c010f50f:	55                   	push   %ebp$/;"	l
c010f510	obj/kernel.asm	/^c010f510:	89 e5                	mov    %esp,%ebp$/;"	l
c010f512	obj/kernel.asm	/^c010f512:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010f515	obj/kernel.asm	/^c010f515:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f519	obj/kernel.asm	/^c010f519:	75 24                	jne    c010f53f <vfs_get_root+0x30>$/;"	l
c010f51b	obj/kernel.asm	/^c010f51b:	c7 44 24 0c 2c 87 11 	movl   $0xc011872c,0xc(%esp)$/;"	l
c010f522	obj/kernel.asm	/^c010f522:	c0 $/;"	l
c010f523	obj/kernel.asm	/^c010f523:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010f52a	obj/kernel.asm	/^c010f52a:	c0 $/;"	l
c010f52b	obj/kernel.asm	/^c010f52b:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010f532	obj/kernel.asm	/^c010f532:	00 $/;"	l
c010f533	obj/kernel.asm	/^c010f533:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010f53a	obj/kernel.asm	/^c010f53a:	e8 89 19 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f53f	obj/kernel.asm	/^c010f53f:	c7 45 f4 f3 ff ff ff 	movl   $0xfffffff3,-0xc(%ebp)$/;"	l
c010f546	obj/kernel.asm	/^c010f546:	c7 45 e0 c8 1f 15 c0 	movl   $0xc0151fc8,-0x20(%ebp)$/;"	l
c010f54d	obj/kernel.asm	/^c010f54d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f550	obj/kernel.asm	/^c010f550:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f553	obj/kernel.asm	/^c010f553:	39 45 e0             	cmp    %eax,-0x20(%ebp)$/;"	l
c010f556	obj/kernel.asm	/^c010f556:	0f 94 c0             	sete   %al$/;"	l
c010f559	obj/kernel.asm	/^c010f559:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010f55c	obj/kernel.asm	/^c010f55c:	85 c0                	test   %eax,%eax$/;"	l
c010f55e	obj/kernel.asm	/^c010f55e:	0f 85 c3 00 00 00    	jne    c010f627 <vfs_get_root+0x118>$/;"	l
c010f564	obj/kernel.asm	/^c010f564:	e8 ce fe ff ff       	call   c010f437 <lock_vdev_list>$/;"	l
c010f569	obj/kernel.asm	/^c010f569:	c7 45 e8 c8 1f 15 c0 	movl   $0xc0151fc8,-0x18(%ebp)$/;"	l
c010f570	obj/kernel.asm	/^c010f570:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f573	obj/kernel.asm	/^c010f573:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f576	obj/kernel.asm	/^c010f576:	e9 8c 00 00 00       	jmp    c010f607 <vfs_get_root+0xf8>$/;"	l
c010f57b	obj/kernel.asm	/^c010f57b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f57e	obj/kernel.asm	/^c010f57e:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f581	obj/kernel.asm	/^c010f581:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f584	obj/kernel.asm	/^c010f584:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f587	obj/kernel.asm	/^c010f587:	8b 00                	mov    (%eax),%eax$/;"	l
c010f589	obj/kernel.asm	/^c010f589:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f58d	obj/kernel.asm	/^c010f58d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f590	obj/kernel.asm	/^c010f590:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f593	obj/kernel.asm	/^c010f593:	e8 23 5c 00 00       	call   c01151bb <strcmp>$/;"	l
c010f598	obj/kernel.asm	/^c010f598:	85 c0                	test   %eax,%eax$/;"	l
c010f59a	obj/kernel.asm	/^c010f59a:	75 6b                	jne    c010f607 <vfs_get_root+0xf8>$/;"	l
c010f59c	obj/kernel.asm	/^c010f59c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010f5a3	obj/kernel.asm	/^c010f5a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f5a6	obj/kernel.asm	/^c010f5a6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f5a9	obj/kernel.asm	/^c010f5a9:	85 c0                	test   %eax,%eax$/;"	l
c010f5ab	obj/kernel.asm	/^c010f5ab:	74 19                	je     c010f5c6 <vfs_get_root+0xb7>$/;"	l
c010f5ad	obj/kernel.asm	/^c010f5ad:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f5b0	obj/kernel.asm	/^c010f5b0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f5b3	obj/kernel.asm	/^c010f5b3:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010f5b6	obj/kernel.asm	/^c010f5b6:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010f5b9	obj/kernel.asm	/^c010f5b9:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010f5bc	obj/kernel.asm	/^c010f5bc:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f5bf	obj/kernel.asm	/^c010f5bf:	ff d0                	call   *%eax$/;"	l
c010f5c1	obj/kernel.asm	/^c010f5c1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f5c4	obj/kernel.asm	/^c010f5c4:	eb 21                	jmp    c010f5e7 <vfs_get_root+0xd8>$/;"	l
c010f5c6	obj/kernel.asm	/^c010f5c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f5c9	obj/kernel.asm	/^c010f5c9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f5cc	obj/kernel.asm	/^c010f5cc:	85 c0                	test   %eax,%eax$/;"	l
c010f5ce	obj/kernel.asm	/^c010f5ce:	75 17                	jne    c010f5e7 <vfs_get_root+0xd8>$/;"	l
c010f5d0	obj/kernel.asm	/^c010f5d0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f5d3	obj/kernel.asm	/^c010f5d3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f5d6	obj/kernel.asm	/^c010f5d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f5d9	obj/kernel.asm	/^c010f5d9:	e8 db f9 ff ff       	call   c010efb9 <inode_ref_inc>$/;"	l
c010f5de	obj/kernel.asm	/^c010f5de:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f5e1	obj/kernel.asm	/^c010f5e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f5e4	obj/kernel.asm	/^c010f5e4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f5e7	obj/kernel.asm	/^c010f5e7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f5eb	obj/kernel.asm	/^c010f5eb:	74 11                	je     c010f5fe <vfs_get_root+0xef>$/;"	l
c010f5ed	obj/kernel.asm	/^c010f5ed:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f5f4	obj/kernel.asm	/^c010f5f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f5f7	obj/kernel.asm	/^c010f5f7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010f5fa	obj/kernel.asm	/^c010f5fa:	89 10                	mov    %edx,(%eax)$/;"	l
c010f5fc	obj/kernel.asm	/^c010f5fc:	eb 24                	jmp    c010f622 <vfs_get_root+0x113>$/;"	l
c010f5fe	obj/kernel.asm	/^c010f5fe:	c7 45 f4 f2 ff ff ff 	movl   $0xfffffff2,-0xc(%ebp)$/;"	l
c010f605	obj/kernel.asm	/^c010f605:	eb 1b                	jmp    c010f622 <vfs_get_root+0x113>$/;"	l
c010f607	obj/kernel.asm	/^c010f607:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f60a	obj/kernel.asm	/^c010f60a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010f60d	obj/kernel.asm	/^c010f60d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010f610	obj/kernel.asm	/^c010f610:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f613	obj/kernel.asm	/^c010f613:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f616	obj/kernel.asm	/^c010f616:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f619	obj/kernel.asm	/^c010f619:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010f61c	obj/kernel.asm	/^c010f61c:	0f 85 59 ff ff ff    	jne    c010f57b <vfs_get_root+0x6c>$/;"	l
c010f622	obj/kernel.asm	/^c010f622:	e8 24 fe ff ff       	call   c010f44b <unlock_vdev_list>$/;"	l
c010f627	obj/kernel.asm	/^c010f627:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f62a	obj/kernel.asm	/^c010f62a:	c9                   	leave  $/;"	l
c010f62b	obj/kernel.asm	/^c010f62b:	c3                   	ret    $/;"	l
c010f62c	obj/kernel.asm	/^c010f62c <vfs_get_devname>:$/;"	l
c010f62c	obj/kernel.asm	/^c010f62c:	55                   	push   %ebp$/;"	l
c010f62d	obj/kernel.asm	/^c010f62d:	89 e5                	mov    %esp,%ebp$/;"	l
c010f62f	obj/kernel.asm	/^c010f62f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f632	obj/kernel.asm	/^c010f632:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f636	obj/kernel.asm	/^c010f636:	75 24                	jne    c010f65c <vfs_get_devname+0x30>$/;"	l
c010f638	obj/kernel.asm	/^c010f638:	c7 44 24 0c 66 87 11 	movl   $0xc0118766,0xc(%esp)$/;"	l
c010f63f	obj/kernel.asm	/^c010f63f:	c0 $/;"	l
c010f640	obj/kernel.asm	/^c010f640:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010f647	obj/kernel.asm	/^c010f647:	c0 $/;"	l
c010f648	obj/kernel.asm	/^c010f648:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c010f64f	obj/kernel.asm	/^c010f64f:	00 $/;"	l
c010f650	obj/kernel.asm	/^c010f650:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010f657	obj/kernel.asm	/^c010f657:	e8 6c 18 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f65c	obj/kernel.asm	/^c010f65c:	c7 45 f0 c8 1f 15 c0 	movl   $0xc0151fc8,-0x10(%ebp)$/;"	l
c010f663	obj/kernel.asm	/^c010f663:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f666	obj/kernel.asm	/^c010f666:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f669	obj/kernel.asm	/^c010f669:	eb 1b                	jmp    c010f686 <vfs_get_devname+0x5a>$/;"	l
c010f66b	obj/kernel.asm	/^c010f66b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f66e	obj/kernel.asm	/^c010f66e:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f671	obj/kernel.asm	/^c010f671:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f674	obj/kernel.asm	/^c010f674:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f677	obj/kernel.asm	/^c010f677:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f67a	obj/kernel.asm	/^c010f67a:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010f67d	obj/kernel.asm	/^c010f67d:	75 07                	jne    c010f686 <vfs_get_devname+0x5a>$/;"	l
c010f67f	obj/kernel.asm	/^c010f67f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f682	obj/kernel.asm	/^c010f682:	8b 00                	mov    (%eax),%eax$/;"	l
c010f684	obj/kernel.asm	/^c010f684:	eb 1c                	jmp    c010f6a2 <vfs_get_devname+0x76>$/;"	l
c010f686	obj/kernel.asm	/^c010f686:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f689	obj/kernel.asm	/^c010f689:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f68c	obj/kernel.asm	/^c010f68c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f68f	obj/kernel.asm	/^c010f68f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f692	obj/kernel.asm	/^c010f692:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f695	obj/kernel.asm	/^c010f695:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f698	obj/kernel.asm	/^c010f698:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f69b	obj/kernel.asm	/^c010f69b:	75 ce                	jne    c010f66b <vfs_get_devname+0x3f>$/;"	l
c010f69d	obj/kernel.asm	/^c010f69d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f6a2	obj/kernel.asm	/^c010f6a2:	c9                   	leave  $/;"	l
c010f6a3	obj/kernel.asm	/^c010f6a3:	c3                   	ret    $/;"	l
c010f6a4	obj/kernel.asm	/^c010f6a4 <check_devname_conflict>:$/;"	l
c010f6a4	obj/kernel.asm	/^c010f6a4:	55                   	push   %ebp$/;"	l
c010f6a5	obj/kernel.asm	/^c010f6a5:	89 e5                	mov    %esp,%ebp$/;"	l
c010f6a7	obj/kernel.asm	/^c010f6a7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f6aa	obj/kernel.asm	/^c010f6aa:	c7 45 f0 c8 1f 15 c0 	movl   $0xc0151fc8,-0x10(%ebp)$/;"	l
c010f6b1	obj/kernel.asm	/^c010f6b1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f6b4	obj/kernel.asm	/^c010f6b4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f6b7	obj/kernel.asm	/^c010f6b7:	eb 28                	jmp    c010f6e1 <check_devname_conflict+0x3d>$/;"	l
c010f6b9	obj/kernel.asm	/^c010f6b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f6bc	obj/kernel.asm	/^c010f6bc:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f6bf	obj/kernel.asm	/^c010f6bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f6c2	obj/kernel.asm	/^c010f6c2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f6c5	obj/kernel.asm	/^c010f6c5:	8b 00                	mov    (%eax),%eax$/;"	l
c010f6c7	obj/kernel.asm	/^c010f6c7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f6ca	obj/kernel.asm	/^c010f6ca:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010f6ce	obj/kernel.asm	/^c010f6ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f6d1	obj/kernel.asm	/^c010f6d1:	e8 e5 5a 00 00       	call   c01151bb <strcmp>$/;"	l
c010f6d6	obj/kernel.asm	/^c010f6d6:	85 c0                	test   %eax,%eax$/;"	l
c010f6d8	obj/kernel.asm	/^c010f6d8:	75 07                	jne    c010f6e1 <check_devname_conflict+0x3d>$/;"	l
c010f6da	obj/kernel.asm	/^c010f6da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f6df	obj/kernel.asm	/^c010f6df:	eb 1c                	jmp    c010f6fd <check_devname_conflict+0x59>$/;"	l
c010f6e1	obj/kernel.asm	/^c010f6e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f6e4	obj/kernel.asm	/^c010f6e4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f6e7	obj/kernel.asm	/^c010f6e7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f6ea	obj/kernel.asm	/^c010f6ea:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f6ed	obj/kernel.asm	/^c010f6ed:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f6f0	obj/kernel.asm	/^c010f6f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f6f3	obj/kernel.asm	/^c010f6f3:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f6f6	obj/kernel.asm	/^c010f6f6:	75 c1                	jne    c010f6b9 <check_devname_conflict+0x15>$/;"	l
c010f6f8	obj/kernel.asm	/^c010f6f8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010f6fd	obj/kernel.asm	/^c010f6fd:	c9                   	leave  $/;"	l
c010f6fe	obj/kernel.asm	/^c010f6fe:	c3                   	ret    $/;"	l
c010f6ff	obj/kernel.asm	/^c010f6ff <vfs_do_add>:$/;"	l
c010f6ff	obj/kernel.asm	/^c010f6ff:	55                   	push   %ebp$/;"	l
c010f700	obj/kernel.asm	/^c010f700:	89 e5                	mov    %esp,%ebp$/;"	l
c010f702	obj/kernel.asm	/^c010f702:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010f705	obj/kernel.asm	/^c010f705:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f709	obj/kernel.asm	/^c010f709:	75 24                	jne    c010f72f <vfs_do_add+0x30>$/;"	l
c010f70b	obj/kernel.asm	/^c010f70b:	c7 44 24 0c 2c 87 11 	movl   $0xc011872c,0xc(%esp)$/;"	l
c010f712	obj/kernel.asm	/^c010f712:	c0 $/;"	l
c010f713	obj/kernel.asm	/^c010f713:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010f71a	obj/kernel.asm	/^c010f71a:	c0 $/;"	l
c010f71b	obj/kernel.asm	/^c010f71b:	c7 44 24 04 8e 00 00 	movl   $0x8e,0x4(%esp)$/;"	l
c010f722	obj/kernel.asm	/^c010f722:	00 $/;"	l
c010f723	obj/kernel.asm	/^c010f723:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010f72a	obj/kernel.asm	/^c010f72a:	e8 99 17 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f72f	obj/kernel.asm	/^c010f72f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010f733	obj/kernel.asm	/^c010f733:	75 06                	jne    c010f73b <vfs_do_add+0x3c>$/;"	l
c010f735	obj/kernel.asm	/^c010f735:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010f739	obj/kernel.asm	/^c010f739:	74 37                	je     c010f772 <vfs_do_add+0x73>$/;"	l
c010f73b	obj/kernel.asm	/^c010f73b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010f73f	obj/kernel.asm	/^c010f73f:	74 0d                	je     c010f74e <vfs_do_add+0x4f>$/;"	l
c010f741	obj/kernel.asm	/^c010f741:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f744	obj/kernel.asm	/^c010f744:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010f747	obj/kernel.asm	/^c010f747:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010f74c	obj/kernel.asm	/^c010f74c:	74 24                	je     c010f772 <vfs_do_add+0x73>$/;"	l
c010f74e	obj/kernel.asm	/^c010f74e:	c7 44 24 0c 74 87 11 	movl   $0xc0118774,0xc(%esp)$/;"	l
c010f755	obj/kernel.asm	/^c010f755:	c0 $/;"	l
c010f756	obj/kernel.asm	/^c010f756:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010f75d	obj/kernel.asm	/^c010f75d:	c0 $/;"	l
c010f75e	obj/kernel.asm	/^c010f75e:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
c010f765	obj/kernel.asm	/^c010f765:	00 $/;"	l
c010f766	obj/kernel.asm	/^c010f766:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010f76d	obj/kernel.asm	/^c010f76d:	e8 56 17 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f772	obj/kernel.asm	/^c010f772:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f775	obj/kernel.asm	/^c010f775:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f778	obj/kernel.asm	/^c010f778:	e8 46 59 00 00       	call   c01150c3 <strlen>$/;"	l
c010f77d	obj/kernel.asm	/^c010f77d:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
c010f780	obj/kernel.asm	/^c010f780:	76 0a                	jbe    c010f78c <vfs_do_add+0x8d>$/;"	l
c010f782	obj/kernel.asm	/^c010f782:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax$/;"	l
c010f787	obj/kernel.asm	/^c010f787:	e9 00 01 00 00       	jmp    c010f88c <vfs_do_add+0x18d>$/;"	l
c010f78c	obj/kernel.asm	/^c010f78c:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010f793	obj/kernel.asm	/^c010f793:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f796	obj/kernel.asm	/^c010f796:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f799	obj/kernel.asm	/^c010f799:	e8 68 0c ff ff       	call   c0100406 <strdup>$/;"	l
c010f79e	obj/kernel.asm	/^c010f79e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f7a1	obj/kernel.asm	/^c010f7a1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f7a5	obj/kernel.asm	/^c010f7a5:	75 08                	jne    c010f7af <vfs_do_add+0xb0>$/;"	l
c010f7a7	obj/kernel.asm	/^c010f7a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f7aa	obj/kernel.asm	/^c010f7aa:	e9 dd 00 00 00       	jmp    c010f88c <vfs_do_add+0x18d>$/;"	l
c010f7af	obj/kernel.asm	/^c010f7af:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
c010f7b6	obj/kernel.asm	/^c010f7b6:	e8 e0 54 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c010f7bb	obj/kernel.asm	/^c010f7bb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f7be	obj/kernel.asm	/^c010f7be:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f7c2	obj/kernel.asm	/^c010f7c2:	75 05                	jne    c010f7c9 <vfs_do_add+0xca>$/;"	l
c010f7c4	obj/kernel.asm	/^c010f7c4:	e9 b5 00 00 00       	jmp    c010f87e <vfs_do_add+0x17f>$/;"	l
c010f7c9	obj/kernel.asm	/^c010f7c9:	c7 45 f4 e9 ff ff ff 	movl   $0xffffffe9,-0xc(%ebp)$/;"	l
c010f7d0	obj/kernel.asm	/^c010f7d0:	e8 62 fc ff ff       	call   c010f437 <lock_vdev_list>$/;"	l
c010f7d5	obj/kernel.asm	/^c010f7d5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f7d8	obj/kernel.asm	/^c010f7d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f7db	obj/kernel.asm	/^c010f7db:	e8 c4 fe ff ff       	call   c010f6a4 <check_devname_conflict>$/;"	l
c010f7e0	obj/kernel.asm	/^c010f7e0:	85 c0                	test   %eax,%eax$/;"	l
c010f7e2	obj/kernel.asm	/^c010f7e2:	75 16                	jne    c010f7fa <vfs_do_add+0xfb>$/;"	l
c010f7e4	obj/kernel.asm	/^c010f7e4:	e8 62 fc ff ff       	call   c010f44b <unlock_vdev_list>$/;"	l
c010f7e9	obj/kernel.asm	/^c010f7e9:	90                   	nop$/;"	l
c010f7ea	obj/kernel.asm	/^c010f7ea:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f7ed	obj/kernel.asm	/^c010f7ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f7f0	obj/kernel.asm	/^c010f7f0:	e8 c1 54 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010f7f5	obj/kernel.asm	/^c010f7f5:	e9 84 00 00 00       	jmp    c010f87e <vfs_do_add+0x17f>$/;"	l
c010f7fa	obj/kernel.asm	/^c010f7fa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f7fd	obj/kernel.asm	/^c010f7fd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010f800	obj/kernel.asm	/^c010f800:	89 10                	mov    %edx,(%eax)$/;"	l
c010f802	obj/kernel.asm	/^c010f802:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f805	obj/kernel.asm	/^c010f805:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010f808	obj/kernel.asm	/^c010f808:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f80b	obj/kernel.asm	/^c010f80b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f80e	obj/kernel.asm	/^c010f80e:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010f811	obj/kernel.asm	/^c010f811:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010f814	obj/kernel.asm	/^c010f814:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f817	obj/kernel.asm	/^c010f817:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010f81a	obj/kernel.asm	/^c010f81a:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f81d	obj/kernel.asm	/^c010f81d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f820	obj/kernel.asm	/^c010f820:	83 c0 10             	add    $0x10,%eax$/;"	l
c010f823	obj/kernel.asm	/^c010f823:	c7 45 e8 c8 1f 15 c0 	movl   $0xc0151fc8,-0x18(%ebp)$/;"	l
c010f82a	obj/kernel.asm	/^c010f82a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f82d	obj/kernel.asm	/^c010f82d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f830	obj/kernel.asm	/^c010f830:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010f833	obj/kernel.asm	/^c010f833:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f836	obj/kernel.asm	/^c010f836:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010f839	obj/kernel.asm	/^c010f839:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f83c	obj/kernel.asm	/^c010f83c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f83f	obj/kernel.asm	/^c010f83f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010f842	obj/kernel.asm	/^c010f842:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010f845	obj/kernel.asm	/^c010f845:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010f848	obj/kernel.asm	/^c010f848:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010f84b	obj/kernel.asm	/^c010f84b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010f84e	obj/kernel.asm	/^c010f84e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f851	obj/kernel.asm	/^c010f851:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010f854	obj/kernel.asm	/^c010f854:	89 10                	mov    %edx,(%eax)$/;"	l
c010f856	obj/kernel.asm	/^c010f856:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f859	obj/kernel.asm	/^c010f859:	8b 10                	mov    (%eax),%edx$/;"	l
c010f85b	obj/kernel.asm	/^c010f85b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010f85e	obj/kernel.asm	/^c010f85e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f861	obj/kernel.asm	/^c010f861:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f864	obj/kernel.asm	/^c010f864:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010f867	obj/kernel.asm	/^c010f867:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f86a	obj/kernel.asm	/^c010f86a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f86d	obj/kernel.asm	/^c010f86d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010f870	obj/kernel.asm	/^c010f870:	89 10                	mov    %edx,(%eax)$/;"	l
c010f872	obj/kernel.asm	/^c010f872:	e8 d4 fb ff ff       	call   c010f44b <unlock_vdev_list>$/;"	l
c010f877	obj/kernel.asm	/^c010f877:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f87c	obj/kernel.asm	/^c010f87c:	eb 0e                	jmp    c010f88c <vfs_do_add+0x18d>$/;"	l
c010f87e	obj/kernel.asm	/^c010f87e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f881	obj/kernel.asm	/^c010f881:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f884	obj/kernel.asm	/^c010f884:	e8 2d 54 ff ff       	call   c0104cb6 <kfree>$/;"	l
c010f889	obj/kernel.asm	/^c010f889:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f88c	obj/kernel.asm	/^c010f88c:	c9                   	leave  $/;"	l
c010f88d	obj/kernel.asm	/^c010f88d:	c3                   	ret    $/;"	l
c010f88e	obj/kernel.asm	/^c010f88e <vfs_add_fs>:$/;"	l
c010f88e	obj/kernel.asm	/^c010f88e:	55                   	push   %ebp$/;"	l
c010f88f	obj/kernel.asm	/^c010f88f:	89 e5                	mov    %esp,%ebp$/;"	l
c010f891	obj/kernel.asm	/^c010f891:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f894	obj/kernel.asm	/^c010f894:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010f89b	obj/kernel.asm	/^c010f89b:	00 $/;"	l
c010f89c	obj/kernel.asm	/^c010f89c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f89f	obj/kernel.asm	/^c010f89f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010f8a3	obj/kernel.asm	/^c010f8a3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010f8aa	obj/kernel.asm	/^c010f8aa:	00 $/;"	l
c010f8ab	obj/kernel.asm	/^c010f8ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f8ae	obj/kernel.asm	/^c010f8ae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f8b1	obj/kernel.asm	/^c010f8b1:	e8 49 fe ff ff       	call   c010f6ff <vfs_do_add>$/;"	l
c010f8b6	obj/kernel.asm	/^c010f8b6:	c9                   	leave  $/;"	l
c010f8b7	obj/kernel.asm	/^c010f8b7:	c3                   	ret    $/;"	l
c010f8b8	obj/kernel.asm	/^c010f8b8 <vfs_add_dev>:$/;"	l
c010f8b8	obj/kernel.asm	/^c010f8b8:	55                   	push   %ebp$/;"	l
c010f8b9	obj/kernel.asm	/^c010f8b9:	89 e5                	mov    %esp,%ebp$/;"	l
c010f8bb	obj/kernel.asm	/^c010f8bb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f8be	obj/kernel.asm	/^c010f8be:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010f8c1	obj/kernel.asm	/^c010f8c1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010f8c5	obj/kernel.asm	/^c010f8c5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010f8cc	obj/kernel.asm	/^c010f8cc:	00 $/;"	l
c010f8cd	obj/kernel.asm	/^c010f8cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f8d0	obj/kernel.asm	/^c010f8d0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f8d4	obj/kernel.asm	/^c010f8d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f8d7	obj/kernel.asm	/^c010f8d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f8da	obj/kernel.asm	/^c010f8da:	e8 20 fe ff ff       	call   c010f6ff <vfs_do_add>$/;"	l
c010f8df	obj/kernel.asm	/^c010f8df:	c9                   	leave  $/;"	l
c010f8e0	obj/kernel.asm	/^c010f8e0:	c3                   	ret    $/;"	l
c010f8e1	obj/kernel.asm	/^c010f8e1 <find_mount>:$/;"	l
c010f8e1	obj/kernel.asm	/^c010f8e1:	55                   	push   %ebp$/;"	l
c010f8e2	obj/kernel.asm	/^c010f8e2:	89 e5                	mov    %esp,%ebp$/;"	l
c010f8e4	obj/kernel.asm	/^c010f8e4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f8e7	obj/kernel.asm	/^c010f8e7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f8eb	obj/kernel.asm	/^c010f8eb:	75 24                	jne    c010f911 <find_mount+0x30>$/;"	l
c010f8ed	obj/kernel.asm	/^c010f8ed:	c7 44 24 0c 2c 87 11 	movl   $0xc011872c,0xc(%esp)$/;"	l
c010f8f4	obj/kernel.asm	/^c010f8f4:	c0 $/;"	l
c010f8f5	obj/kernel.asm	/^c010f8f5:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010f8fc	obj/kernel.asm	/^c010f8fc:	c0 $/;"	l
c010f8fd	obj/kernel.asm	/^c010f8fd:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c010f904	obj/kernel.asm	/^c010f904:	00 $/;"	l
c010f905	obj/kernel.asm	/^c010f905:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010f90c	obj/kernel.asm	/^c010f90c:	e8 b7 15 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f911	obj/kernel.asm	/^c010f911:	c7 45 f0 c8 1f 15 c0 	movl   $0xc0151fc8,-0x10(%ebp)$/;"	l
c010f918	obj/kernel.asm	/^c010f918:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f91b	obj/kernel.asm	/^c010f91b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f91e	obj/kernel.asm	/^c010f91e:	eb 3a                	jmp    c010f95a <find_mount+0x79>$/;"	l
c010f920	obj/kernel.asm	/^c010f920:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f923	obj/kernel.asm	/^c010f923:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010f926	obj/kernel.asm	/^c010f926:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f929	obj/kernel.asm	/^c010f929:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f92c	obj/kernel.asm	/^c010f92c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f92f	obj/kernel.asm	/^c010f92f:	85 c0                	test   %eax,%eax$/;"	l
c010f931	obj/kernel.asm	/^c010f931:	74 27                	je     c010f95a <find_mount+0x79>$/;"	l
c010f933	obj/kernel.asm	/^c010f933:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f936	obj/kernel.asm	/^c010f936:	8b 00                	mov    (%eax),%eax$/;"	l
c010f938	obj/kernel.asm	/^c010f938:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f93b	obj/kernel.asm	/^c010f93b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010f93f	obj/kernel.asm	/^c010f93f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f942	obj/kernel.asm	/^c010f942:	e8 74 58 00 00       	call   c01151bb <strcmp>$/;"	l
c010f947	obj/kernel.asm	/^c010f947:	85 c0                	test   %eax,%eax$/;"	l
c010f949	obj/kernel.asm	/^c010f949:	75 0f                	jne    c010f95a <find_mount+0x79>$/;"	l
c010f94b	obj/kernel.asm	/^c010f94b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f94e	obj/kernel.asm	/^c010f94e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010f951	obj/kernel.asm	/^c010f951:	89 10                	mov    %edx,(%eax)$/;"	l
c010f953	obj/kernel.asm	/^c010f953:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f958	obj/kernel.asm	/^c010f958:	eb 1c                	jmp    c010f976 <find_mount+0x95>$/;"	l
c010f95a	obj/kernel.asm	/^c010f95a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f95d	obj/kernel.asm	/^c010f95d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f960	obj/kernel.asm	/^c010f960:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f963	obj/kernel.asm	/^c010f963:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f966	obj/kernel.asm	/^c010f966:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f969	obj/kernel.asm	/^c010f969:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f96c	obj/kernel.asm	/^c010f96c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f96f	obj/kernel.asm	/^c010f96f:	75 af                	jne    c010f920 <find_mount+0x3f>$/;"	l
c010f971	obj/kernel.asm	/^c010f971:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax$/;"	l
c010f976	obj/kernel.asm	/^c010f976:	c9                   	leave  $/;"	l
c010f977	obj/kernel.asm	/^c010f977:	c3                   	ret    $/;"	l
c010f978	obj/kernel.asm	/^c010f978 <vfs_mount>:$/;"	l
c010f978	obj/kernel.asm	/^c010f978:	55                   	push   %ebp$/;"	l
c010f979	obj/kernel.asm	/^c010f979:	89 e5                	mov    %esp,%ebp$/;"	l
c010f97b	obj/kernel.asm	/^c010f97b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f97e	obj/kernel.asm	/^c010f97e:	e8 b4 fa ff ff       	call   c010f437 <lock_vdev_list>$/;"	l
c010f983	obj/kernel.asm	/^c010f983:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010f986	obj/kernel.asm	/^c010f986:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f98a	obj/kernel.asm	/^c010f98a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f98d	obj/kernel.asm	/^c010f98d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f990	obj/kernel.asm	/^c010f990:	e8 4c ff ff ff       	call   c010f8e1 <find_mount>$/;"	l
c010f995	obj/kernel.asm	/^c010f995:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f998	obj/kernel.asm	/^c010f998:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f99c	obj/kernel.asm	/^c010f99c:	74 05                	je     c010f9a3 <vfs_mount+0x2b>$/;"	l
c010f99e	obj/kernel.asm	/^c010f99e:	e9 f4 00 00 00       	jmp    c010fa97 <vfs_mount+0x11f>$/;"	l
c010f9a3	obj/kernel.asm	/^c010f9a3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f9a6	obj/kernel.asm	/^c010f9a6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f9a9	obj/kernel.asm	/^c010f9a9:	85 c0                	test   %eax,%eax$/;"	l
c010f9ab	obj/kernel.asm	/^c010f9ab:	74 0c                	je     c010f9b9 <vfs_mount+0x41>$/;"	l
c010f9ad	obj/kernel.asm	/^c010f9ad:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c010f9b4	obj/kernel.asm	/^c010f9b4:	e9 de 00 00 00       	jmp    c010fa97 <vfs_mount+0x11f>$/;"	l
c010f9b9	obj/kernel.asm	/^c010f9b9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f9bc	obj/kernel.asm	/^c010f9bc:	8b 00                	mov    (%eax),%eax$/;"	l
c010f9be	obj/kernel.asm	/^c010f9be:	85 c0                	test   %eax,%eax$/;"	l
c010f9c0	obj/kernel.asm	/^c010f9c0:	74 0a                	je     c010f9cc <vfs_mount+0x54>$/;"	l
c010f9c2	obj/kernel.asm	/^c010f9c2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f9c5	obj/kernel.asm	/^c010f9c5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f9c8	obj/kernel.asm	/^c010f9c8:	85 c0                	test   %eax,%eax$/;"	l
c010f9ca	obj/kernel.asm	/^c010f9ca:	75 24                	jne    c010f9f0 <vfs_mount+0x78>$/;"	l
c010f9cc	obj/kernel.asm	/^c010f9cc:	c7 44 24 0c d0 87 11 	movl   $0xc01187d0,0xc(%esp)$/;"	l
c010f9d3	obj/kernel.asm	/^c010f9d3:	c0 $/;"	l
c010f9d4	obj/kernel.asm	/^c010f9d4:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010f9db	obj/kernel.asm	/^c010f9db:	c0 $/;"	l
c010f9dc	obj/kernel.asm	/^c010f9dc:	c7 44 24 04 eb 00 00 	movl   $0xeb,0x4(%esp)$/;"	l
c010f9e3	obj/kernel.asm	/^c010f9e3:	00 $/;"	l
c010f9e4	obj/kernel.asm	/^c010f9e4:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010f9eb	obj/kernel.asm	/^c010f9eb:	e8 d8 14 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010f9f0	obj/kernel.asm	/^c010f9f0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f9f3	obj/kernel.asm	/^c010f9f3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f9f6	obj/kernel.asm	/^c010f9f6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f9f9	obj/kernel.asm	/^c010f9f9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f9fd	obj/kernel.asm	/^c010f9fd:	74 0d                	je     c010fa0c <vfs_mount+0x94>$/;"	l
c010f9ff	obj/kernel.asm	/^c010f9ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fa02	obj/kernel.asm	/^c010fa02:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fa05	obj/kernel.asm	/^c010fa05:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fa0a	obj/kernel.asm	/^c010fa0a:	74 24                	je     c010fa30 <vfs_mount+0xb8>$/;"	l
c010fa0c	obj/kernel.asm	/^c010fa0c:	c7 44 24 0c fc 87 11 	movl   $0xc01187fc,0xc(%esp)$/;"	l
c010fa13	obj/kernel.asm	/^c010fa13:	c0 $/;"	l
c010fa14	obj/kernel.asm	/^c010fa14:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010fa1b	obj/kernel.asm	/^c010fa1b:	c0 $/;"	l
c010fa1c	obj/kernel.asm	/^c010fa1c:	c7 44 24 04 ed 00 00 	movl   $0xed,0x4(%esp)$/;"	l
c010fa23	obj/kernel.asm	/^c010fa23:	00 $/;"	l
c010fa24	obj/kernel.asm	/^c010fa24:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010fa2b	obj/kernel.asm	/^c010fa2b:	e8 98 14 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fa30	obj/kernel.asm	/^c010fa30:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fa33	obj/kernel.asm	/^c010fa33:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fa36	obj/kernel.asm	/^c010fa36:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fa39	obj/kernel.asm	/^c010fa39:	83 c0 08             	add    $0x8,%eax$/;"	l
c010fa3c	obj/kernel.asm	/^c010fa3c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fa40	obj/kernel.asm	/^c010fa40:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fa43	obj/kernel.asm	/^c010fa43:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fa46	obj/kernel.asm	/^c010fa46:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fa49	obj/kernel.asm	/^c010fa49:	ff d0                	call   *%eax$/;"	l
c010fa4b	obj/kernel.asm	/^c010fa4b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa4e	obj/kernel.asm	/^c010fa4e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fa52	obj/kernel.asm	/^c010fa52:	75 43                	jne    c010fa97 <vfs_mount+0x11f>$/;"	l
c010fa54	obj/kernel.asm	/^c010fa54:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fa57	obj/kernel.asm	/^c010fa57:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fa5a	obj/kernel.asm	/^c010fa5a:	85 c0                	test   %eax,%eax$/;"	l
c010fa5c	obj/kernel.asm	/^c010fa5c:	75 24                	jne    c010fa82 <vfs_mount+0x10a>$/;"	l
c010fa5e	obj/kernel.asm	/^c010fa5e:	c7 44 24 0c 2f 88 11 	movl   $0xc011882f,0xc(%esp)$/;"	l
c010fa65	obj/kernel.asm	/^c010fa65:	c0 $/;"	l
c010fa66	obj/kernel.asm	/^c010fa66:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010fa6d	obj/kernel.asm	/^c010fa6d:	c0 $/;"	l
c010fa6e	obj/kernel.asm	/^c010fa6e:	c7 44 24 04 ef 00 00 	movl   $0xef,0x4(%esp)$/;"	l
c010fa75	obj/kernel.asm	/^c010fa75:	00 $/;"	l
c010fa76	obj/kernel.asm	/^c010fa76:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010fa7d	obj/kernel.asm	/^c010fa7d:	e8 46 14 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fa82	obj/kernel.asm	/^c010fa82:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fa85	obj/kernel.asm	/^c010fa85:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa87	obj/kernel.asm	/^c010fa87:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fa8b	obj/kernel.asm	/^c010fa8b:	c7 04 24 40 88 11 c0 	movl   $0xc0118840,(%esp)$/;"	l
c010fa92	obj/kernel.asm	/^c010fa92:	e8 ce 08 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fa97	obj/kernel.asm	/^c010fa97:	e8 af f9 ff ff       	call   c010f44b <unlock_vdev_list>$/;"	l
c010fa9c	obj/kernel.asm	/^c010fa9c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa9f	obj/kernel.asm	/^c010fa9f:	c9                   	leave  $/;"	l
c010faa0	obj/kernel.asm	/^c010faa0:	c3                   	ret    $/;"	l
c010faa1	obj/kernel.asm	/^c010faa1 <vfs_unmount>:$/;"	l
c010faa1	obj/kernel.asm	/^c010faa1:	55                   	push   %ebp$/;"	l
c010faa2	obj/kernel.asm	/^c010faa2:	89 e5                	mov    %esp,%ebp$/;"	l
c010faa4	obj/kernel.asm	/^c010faa4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010faa7	obj/kernel.asm	/^c010faa7:	e8 8b f9 ff ff       	call   c010f437 <lock_vdev_list>$/;"	l
c010faac	obj/kernel.asm	/^c010faac:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010faaf	obj/kernel.asm	/^c010faaf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fab3	obj/kernel.asm	/^c010fab3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fab6	obj/kernel.asm	/^c010fab6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fab9	obj/kernel.asm	/^c010fab9:	e8 23 fe ff ff       	call   c010f8e1 <find_mount>$/;"	l
c010fabe	obj/kernel.asm	/^c010fabe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fac1	obj/kernel.asm	/^c010fac1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fac5	obj/kernel.asm	/^c010fac5:	74 05                	je     c010facc <vfs_unmount+0x2b>$/;"	l
c010fac7	obj/kernel.asm	/^c010fac7:	e9 a8 00 00 00       	jmp    c010fb74 <vfs_unmount+0xd3>$/;"	l
c010facc	obj/kernel.asm	/^c010facc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010facf	obj/kernel.asm	/^c010facf:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fad2	obj/kernel.asm	/^c010fad2:	85 c0                	test   %eax,%eax$/;"	l
c010fad4	obj/kernel.asm	/^c010fad4:	75 0c                	jne    c010fae2 <vfs_unmount+0x41>$/;"	l
c010fad6	obj/kernel.asm	/^c010fad6:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010fadd	obj/kernel.asm	/^c010fadd:	e9 92 00 00 00       	jmp    c010fb74 <vfs_unmount+0xd3>$/;"	l
c010fae2	obj/kernel.asm	/^c010fae2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fae5	obj/kernel.asm	/^c010fae5:	8b 00                	mov    (%eax),%eax$/;"	l
c010fae7	obj/kernel.asm	/^c010fae7:	85 c0                	test   %eax,%eax$/;"	l
c010fae9	obj/kernel.asm	/^c010fae9:	74 0a                	je     c010faf5 <vfs_unmount+0x54>$/;"	l
c010faeb	obj/kernel.asm	/^c010faeb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010faee	obj/kernel.asm	/^c010faee:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010faf1	obj/kernel.asm	/^c010faf1:	85 c0                	test   %eax,%eax$/;"	l
c010faf3	obj/kernel.asm	/^c010faf3:	75 24                	jne    c010fb19 <vfs_unmount+0x78>$/;"	l
c010faf5	obj/kernel.asm	/^c010faf5:	c7 44 24 0c d0 87 11 	movl   $0xc01187d0,0xc(%esp)$/;"	l
c010fafc	obj/kernel.asm	/^c010fafc:	c0 $/;"	l
c010fafd	obj/kernel.asm	/^c010fafd:	c7 44 24 08 3c 87 11 	movl   $0xc011873c,0x8(%esp)$/;"	l
c010fb04	obj/kernel.asm	/^c010fb04:	c0 $/;"	l
c010fb05	obj/kernel.asm	/^c010fb05:	c7 44 24 04 08 01 00 	movl   $0x108,0x4(%esp)$/;"	l
c010fb0c	obj/kernel.asm	/^c010fb0c:	00 $/;"	l
c010fb0d	obj/kernel.asm	/^c010fb0d:	c7 04 24 51 87 11 c0 	movl   $0xc0118751,(%esp)$/;"	l
c010fb14	obj/kernel.asm	/^c010fb14:	e8 af 13 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fb19	obj/kernel.asm	/^c010fb19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb1c	obj/kernel.asm	/^c010fb1c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fb1f	obj/kernel.asm	/^c010fb1f:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010fb22	obj/kernel.asm	/^c010fb22:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010fb25	obj/kernel.asm	/^c010fb25:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010fb28	obj/kernel.asm	/^c010fb28:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fb2b	obj/kernel.asm	/^c010fb2b:	ff d0                	call   *%eax$/;"	l
c010fb2d	obj/kernel.asm	/^c010fb2d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fb30	obj/kernel.asm	/^c010fb30:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fb34	obj/kernel.asm	/^c010fb34:	74 02                	je     c010fb38 <vfs_unmount+0x97>$/;"	l
c010fb36	obj/kernel.asm	/^c010fb36:	eb 3c                	jmp    c010fb74 <vfs_unmount+0xd3>$/;"	l
c010fb38	obj/kernel.asm	/^c010fb38:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb3b	obj/kernel.asm	/^c010fb3b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fb3e	obj/kernel.asm	/^c010fb3e:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010fb41	obj/kernel.asm	/^c010fb41:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010fb44	obj/kernel.asm	/^c010fb44:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010fb47	obj/kernel.asm	/^c010fb47:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fb4a	obj/kernel.asm	/^c010fb4a:	ff d0                	call   *%eax$/;"	l
c010fb4c	obj/kernel.asm	/^c010fb4c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fb4f	obj/kernel.asm	/^c010fb4f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fb53	obj/kernel.asm	/^c010fb53:	75 1f                	jne    c010fb74 <vfs_unmount+0xd3>$/;"	l
c010fb55	obj/kernel.asm	/^c010fb55:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb58	obj/kernel.asm	/^c010fb58:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010fb5f	obj/kernel.asm	/^c010fb5f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb62	obj/kernel.asm	/^c010fb62:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb64	obj/kernel.asm	/^c010fb64:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fb68	obj/kernel.asm	/^c010fb68:	c7 04 24 50 88 11 c0 	movl   $0xc0118850,(%esp)$/;"	l
c010fb6f	obj/kernel.asm	/^c010fb6f:	e8 f1 07 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fb74	obj/kernel.asm	/^c010fb74:	e8 d2 f8 ff ff       	call   c010f44b <unlock_vdev_list>$/;"	l
c010fb79	obj/kernel.asm	/^c010fb79:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fb7c	obj/kernel.asm	/^c010fb7c:	c9                   	leave  $/;"	l
c010fb7d	obj/kernel.asm	/^c010fb7d:	c3                   	ret    $/;"	l
c010fb7e	obj/kernel.asm	/^c010fb7e <vfs_unmount_all>:$/;"	l
c010fb7e	obj/kernel.asm	/^c010fb7e:	55                   	push   %ebp$/;"	l
c010fb7f	obj/kernel.asm	/^c010fb7f:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb81	obj/kernel.asm	/^c010fb81:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010fb84	obj/kernel.asm	/^c010fb84:	c7 45 e4 c8 1f 15 c0 	movl   $0xc0151fc8,-0x1c(%ebp)$/;"	l
c010fb8b	obj/kernel.asm	/^c010fb8b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fb8e	obj/kernel.asm	/^c010fb8e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fb91	obj/kernel.asm	/^c010fb91:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010fb94	obj/kernel.asm	/^c010fb94:	0f 94 c0             	sete   %al$/;"	l
c010fb97	obj/kernel.asm	/^c010fb97:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010fb9a	obj/kernel.asm	/^c010fb9a:	85 c0                	test   %eax,%eax$/;"	l
c010fb9c	obj/kernel.asm	/^c010fb9c:	0f 85 f1 00 00 00    	jne    c010fc93 <vfs_unmount_all+0x115>$/;"	l
c010fba2	obj/kernel.asm	/^c010fba2:	e8 90 f8 ff ff       	call   c010f437 <lock_vdev_list>$/;"	l
c010fba7	obj/kernel.asm	/^c010fba7:	c7 45 f0 c8 1f 15 c0 	movl   $0xc0151fc8,-0x10(%ebp)$/;"	l
c010fbae	obj/kernel.asm	/^c010fbae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fbb1	obj/kernel.asm	/^c010fbb1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fbb4	obj/kernel.asm	/^c010fbb4:	e9 ba 00 00 00       	jmp    c010fc73 <vfs_unmount_all+0xf5>$/;"	l
c010fbb9	obj/kernel.asm	/^c010fbb9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fbbc	obj/kernel.asm	/^c010fbbc:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010fbbf	obj/kernel.asm	/^c010fbbf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fbc2	obj/kernel.asm	/^c010fbc2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fbc5	obj/kernel.asm	/^c010fbc5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010fbc8	obj/kernel.asm	/^c010fbc8:	85 c0                	test   %eax,%eax$/;"	l
c010fbca	obj/kernel.asm	/^c010fbca:	0f 84 a3 00 00 00    	je     c010fc73 <vfs_unmount_all+0xf5>$/;"	l
c010fbd0	obj/kernel.asm	/^c010fbd0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fbd3	obj/kernel.asm	/^c010fbd3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fbd6	obj/kernel.asm	/^c010fbd6:	85 c0                	test   %eax,%eax$/;"	l
c010fbd8	obj/kernel.asm	/^c010fbd8:	0f 84 95 00 00 00    	je     c010fc73 <vfs_unmount_all+0xf5>$/;"	l
c010fbde	obj/kernel.asm	/^c010fbde:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fbe1	obj/kernel.asm	/^c010fbe1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fbe4	obj/kernel.asm	/^c010fbe4:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010fbe7	obj/kernel.asm	/^c010fbe7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010fbea	obj/kernel.asm	/^c010fbea:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010fbed	obj/kernel.asm	/^c010fbed:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fbf0	obj/kernel.asm	/^c010fbf0:	ff d0                	call   *%eax$/;"	l
c010fbf2	obj/kernel.asm	/^c010fbf2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fbf5	obj/kernel.asm	/^c010fbf5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010fbf9	obj/kernel.asm	/^c010fbf9:	74 1e                	je     c010fc19 <vfs_unmount_all+0x9b>$/;"	l
c010fbfb	obj/kernel.asm	/^c010fbfb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fbfe	obj/kernel.asm	/^c010fbfe:	8b 00                	mov    (%eax),%eax$/;"	l
c010fc00	obj/kernel.asm	/^c010fc00:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010fc03	obj/kernel.asm	/^c010fc03:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010fc07	obj/kernel.asm	/^c010fc07:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fc0b	obj/kernel.asm	/^c010fc0b:	c7 04 24 64 88 11 c0 	movl   $0xc0118864,(%esp)$/;"	l
c010fc12	obj/kernel.asm	/^c010fc12:	e8 4e 07 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fc17	obj/kernel.asm	/^c010fc17:	eb 5a                	jmp    c010fc73 <vfs_unmount_all+0xf5>$/;"	l
c010fc19	obj/kernel.asm	/^c010fc19:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fc1c	obj/kernel.asm	/^c010fc1c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fc1f	obj/kernel.asm	/^c010fc1f:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010fc22	obj/kernel.asm	/^c010fc22:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010fc25	obj/kernel.asm	/^c010fc25:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010fc28	obj/kernel.asm	/^c010fc28:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fc2b	obj/kernel.asm	/^c010fc2b:	ff d0                	call   *%eax$/;"	l
c010fc2d	obj/kernel.asm	/^c010fc2d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fc30	obj/kernel.asm	/^c010fc30:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010fc34	obj/kernel.asm	/^c010fc34:	74 1e                	je     c010fc54 <vfs_unmount_all+0xd6>$/;"	l
c010fc36	obj/kernel.asm	/^c010fc36:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fc39	obj/kernel.asm	/^c010fc39:	8b 00                	mov    (%eax),%eax$/;"	l
c010fc3b	obj/kernel.asm	/^c010fc3b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010fc3e	obj/kernel.asm	/^c010fc3e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010fc42	obj/kernel.asm	/^c010fc42:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fc46	obj/kernel.asm	/^c010fc46:	c7 04 24 8c 88 11 c0 	movl   $0xc011888c,(%esp)$/;"	l
c010fc4d	obj/kernel.asm	/^c010fc4d:	e8 13 07 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fc52	obj/kernel.asm	/^c010fc52:	eb 1f                	jmp    c010fc73 <vfs_unmount_all+0xf5>$/;"	l
c010fc54	obj/kernel.asm	/^c010fc54:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fc57	obj/kernel.asm	/^c010fc57:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010fc5e	obj/kernel.asm	/^c010fc5e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fc61	obj/kernel.asm	/^c010fc61:	8b 00                	mov    (%eax),%eax$/;"	l
c010fc63	obj/kernel.asm	/^c010fc63:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fc67	obj/kernel.asm	/^c010fc67:	c7 04 24 50 88 11 c0 	movl   $0xc0118850,(%esp)$/;"	l
c010fc6e	obj/kernel.asm	/^c010fc6e:	e8 f2 06 ff ff       	call   c0100365 <cprintf>$/;"	l
c010fc73	obj/kernel.asm	/^c010fc73:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc76	obj/kernel.asm	/^c010fc76:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010fc79	obj/kernel.asm	/^c010fc79:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fc7c	obj/kernel.asm	/^c010fc7c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fc7f	obj/kernel.asm	/^c010fc7f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fc82	obj/kernel.asm	/^c010fc82:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc85	obj/kernel.asm	/^c010fc85:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010fc88	obj/kernel.asm	/^c010fc88:	0f 85 2b ff ff ff    	jne    c010fbb9 <vfs_unmount_all+0x3b>$/;"	l
c010fc8e	obj/kernel.asm	/^c010fc8e:	e8 b8 f7 ff ff       	call   c010f44b <unlock_vdev_list>$/;"	l
c010fc93	obj/kernel.asm	/^c010fc93:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fc98	obj/kernel.asm	/^c010fc98:	c9                   	leave  $/;"	l
c010fc99	obj/kernel.asm	/^c010fc99:	c3                   	ret    $/;"	l
c010fc9a	obj/kernel.asm	/^c010fc9a <vfs_open>:$/;"	l
c010fc9a	obj/kernel.asm	/^c010fc9a:	55                   	push   %ebp$/;"	l
c010fc9b	obj/kernel.asm	/^c010fc9b:	89 e5                	mov    %esp,%ebp$/;"	l
c010fc9d	obj/kernel.asm	/^c010fc9d:	53                   	push   %ebx$/;"	l
c010fc9e	obj/kernel.asm	/^c010fc9e:	83 ec 44             	sub    $0x44,%esp$/;"	l
c010fca1	obj/kernel.asm	/^c010fca1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010fca8	obj/kernel.asm	/^c010fca8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fcab	obj/kernel.asm	/^c010fcab:	83 e0 03             	and    $0x3,%eax$/;"	l
c010fcae	obj/kernel.asm	/^c010fcae:	85 c0                	test   %eax,%eax$/;"	l
c010fcb0	obj/kernel.asm	/^c010fcb0:	74 18                	je     c010fcca <vfs_open+0x30>$/;"	l
c010fcb2	obj/kernel.asm	/^c010fcb2:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010fcb5	obj/kernel.asm	/^c010fcb5:	77 09                	ja     c010fcc0 <vfs_open+0x26>$/;"	l
c010fcb7	obj/kernel.asm	/^c010fcb7:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010fcbe	obj/kernel.asm	/^c010fcbe:	eb 0b                	jmp    c010fccb <vfs_open+0x31>$/;"	l
c010fcc0	obj/kernel.asm	/^c010fcc0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fcc5	obj/kernel.asm	/^c010fcc5:	e9 ba 02 00 00       	jmp    c010ff84 <vfs_open+0x2ea>$/;"	l
c010fcca	obj/kernel.asm	/^c010fcca:	90                   	nop$/;"	l
c010fccb	obj/kernel.asm	/^c010fccb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fcce	obj/kernel.asm	/^c010fcce:	83 e0 10             	and    $0x10,%eax$/;"	l
c010fcd1	obj/kernel.asm	/^c010fcd1:	85 c0                	test   %eax,%eax$/;"	l
c010fcd3	obj/kernel.asm	/^c010fcd3:	74 10                	je     c010fce5 <vfs_open+0x4b>$/;"	l
c010fcd5	obj/kernel.asm	/^c010fcd5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fcd9	obj/kernel.asm	/^c010fcd9:	75 0a                	jne    c010fce5 <vfs_open+0x4b>$/;"	l
c010fcdb	obj/kernel.asm	/^c010fcdb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fce0	obj/kernel.asm	/^c010fce0:	e9 9f 02 00 00       	jmp    c010ff84 <vfs_open+0x2ea>$/;"	l
c010fce5	obj/kernel.asm	/^c010fce5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fce8	obj/kernel.asm	/^c010fce8:	83 e0 08             	and    $0x8,%eax$/;"	l
c010fceb	obj/kernel.asm	/^c010fceb:	85 c0                	test   %eax,%eax$/;"	l
c010fced	obj/kernel.asm	/^c010fced:	0f 95 c0             	setne  %al$/;"	l
c010fcf0	obj/kernel.asm	/^c010fcf0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010fcf3	obj/kernel.asm	/^c010fcf3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fcf6	obj/kernel.asm	/^c010fcf6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fcf9	obj/kernel.asm	/^c010fcf9:	83 e0 04             	and    $0x4,%eax$/;"	l
c010fcfc	obj/kernel.asm	/^c010fcfc:	85 c0                	test   %eax,%eax$/;"	l
c010fcfe	obj/kernel.asm	/^c010fcfe:	0f 95 c0             	setne  %al$/;"	l
c010fd01	obj/kernel.asm	/^c010fd01:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010fd04	obj/kernel.asm	/^c010fd04:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fd07	obj/kernel.asm	/^c010fd07:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010fd0a	obj/kernel.asm	/^c010fd0a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fd0e	obj/kernel.asm	/^c010fd0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fd11	obj/kernel.asm	/^c010fd11:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fd14	obj/kernel.asm	/^c010fd14:	e8 7a 04 00 00       	call   c0110193 <vfs_lookup>$/;"	l
c010fd19	obj/kernel.asm	/^c010fd19:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fd1c	obj/kernel.asm	/^c010fd1c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010fd20	obj/kernel.asm	/^c010fd20:	0f 84 cc 00 00 00    	je     c010fdf2 <vfs_open+0x158>$/;"	l
c010fd26	obj/kernel.asm	/^c010fd26:	83 7d e8 f0          	cmpl   $0xfffffff0,-0x18(%ebp)$/;"	l
c010fd2a	obj/kernel.asm	/^c010fd2a:	0f 85 ba 00 00 00    	jne    c010fdea <vfs_open+0x150>$/;"	l
c010fd30	obj/kernel.asm	/^c010fd30:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fd34	obj/kernel.asm	/^c010fd34:	0f 84 b0 00 00 00    	je     c010fdea <vfs_open+0x150>$/;"	l
c010fd3a	obj/kernel.asm	/^c010fd3a:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010fd3d	obj/kernel.asm	/^c010fd3d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010fd41	obj/kernel.asm	/^c010fd41:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c010fd44	obj/kernel.asm	/^c010fd44:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fd48	obj/kernel.asm	/^c010fd48:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fd4b	obj/kernel.asm	/^c010fd4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fd4e	obj/kernel.asm	/^c010fd4e:	e8 20 05 00 00       	call   c0110273 <vfs_lookup_parent>$/;"	l
c010fd53	obj/kernel.asm	/^c010fd53:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fd56	obj/kernel.asm	/^c010fd56:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010fd5a	obj/kernel.asm	/^c010fd5a:	74 08                	je     c010fd64 <vfs_open+0xca>$/;"	l
c010fd5c	obj/kernel.asm	/^c010fd5c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fd5f	obj/kernel.asm	/^c010fd5f:	e9 20 02 00 00       	jmp    c010ff84 <vfs_open+0x2ea>$/;"	l
c010fd64	obj/kernel.asm	/^c010fd64:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010fd67	obj/kernel.asm	/^c010fd67:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010fd6a	obj/kernel.asm	/^c010fd6a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010fd6e	obj/kernel.asm	/^c010fd6e:	74 17                	je     c010fd87 <vfs_open+0xed>$/;"	l
c010fd70	obj/kernel.asm	/^c010fd70:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fd73	obj/kernel.asm	/^c010fd73:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fd76	obj/kernel.asm	/^c010fd76:	85 c0                	test   %eax,%eax$/;"	l
c010fd78	obj/kernel.asm	/^c010fd78:	74 0d                	je     c010fd87 <vfs_open+0xed>$/;"	l
c010fd7a	obj/kernel.asm	/^c010fd7a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fd7d	obj/kernel.asm	/^c010fd7d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fd80	obj/kernel.asm	/^c010fd80:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010fd83	obj/kernel.asm	/^c010fd83:	85 c0                	test   %eax,%eax$/;"	l
c010fd85	obj/kernel.asm	/^c010fd85:	75 24                	jne    c010fdab <vfs_open+0x111>$/;"	l
c010fd87	obj/kernel.asm	/^c010fd87:	c7 44 24 0c b8 88 11 	movl   $0xc01188b8,0xc(%esp)$/;"	l
c010fd8e	obj/kernel.asm	/^c010fd8e:	c0 $/;"	l
c010fd8f	obj/kernel.asm	/^c010fd8f:	c7 44 24 08 07 89 11 	movl   $0xc0118907,0x8(%esp)$/;"	l
c010fd96	obj/kernel.asm	/^c010fd96:	c0 $/;"	l
c010fd97	obj/kernel.asm	/^c010fd97:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c010fd9e	obj/kernel.asm	/^c010fd9e:	00 $/;"	l
c010fd9f	obj/kernel.asm	/^c010fd9f:	c7 04 24 1c 89 11 c0 	movl   $0xc011891c,(%esp)$/;"	l
c010fda6	obj/kernel.asm	/^c010fda6:	e8 1d 11 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fdab	obj/kernel.asm	/^c010fdab:	c7 44 24 04 32 89 11 	movl   $0xc0118932,0x4(%esp)$/;"	l
c010fdb2	obj/kernel.asm	/^c010fdb2:	c0 $/;"	l
c010fdb3	obj/kernel.asm	/^c010fdb3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fdb6	obj/kernel.asm	/^c010fdb6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fdb9	obj/kernel.asm	/^c010fdb9:	e8 03 f4 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c010fdbe	obj/kernel.asm	/^c010fdbe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fdc1	obj/kernel.asm	/^c010fdc1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fdc4	obj/kernel.asm	/^c010fdc4:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010fdc7	obj/kernel.asm	/^c010fdc7:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c010fdca	obj/kernel.asm	/^c010fdca:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010fdcd	obj/kernel.asm	/^c010fdcd:	8d 5d d8             	lea    -0x28(%ebp),%ebx$/;"	l
c010fdd0	obj/kernel.asm	/^c010fdd0:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c010fdd4	obj/kernel.asm	/^c010fdd4:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c010fdd7	obj/kernel.asm	/^c010fdd7:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c010fddb	obj/kernel.asm	/^c010fddb:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010fddf	obj/kernel.asm	/^c010fddf:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fde2	obj/kernel.asm	/^c010fde2:	ff d0                	call   *%eax$/;"	l
c010fde4	obj/kernel.asm	/^c010fde4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fde7	obj/kernel.asm	/^c010fde7:	90                   	nop$/;"	l
c010fde8	obj/kernel.asm	/^c010fde8:	eb 1e                	jmp    c010fe08 <vfs_open+0x16e>$/;"	l
c010fdea	obj/kernel.asm	/^c010fdea:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fded	obj/kernel.asm	/^c010fded:	e9 92 01 00 00       	jmp    c010ff84 <vfs_open+0x2ea>$/;"	l
c010fdf2	obj/kernel.asm	/^c010fdf2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010fdf6	obj/kernel.asm	/^c010fdf6:	74 10                	je     c010fe08 <vfs_open+0x16e>$/;"	l
c010fdf8	obj/kernel.asm	/^c010fdf8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fdfc	obj/kernel.asm	/^c010fdfc:	74 0a                	je     c010fe08 <vfs_open+0x16e>$/;"	l
c010fdfe	obj/kernel.asm	/^c010fdfe:	b8 e9 ff ff ff       	mov    $0xffffffe9,%eax$/;"	l
c010fe03	obj/kernel.asm	/^c010fe03:	e9 7c 01 00 00       	jmp    c010ff84 <vfs_open+0x2ea>$/;"	l
c010fe08	obj/kernel.asm	/^c010fe08:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010fe0b	obj/kernel.asm	/^c010fe0b:	85 c0                	test   %eax,%eax$/;"	l
c010fe0d	obj/kernel.asm	/^c010fe0d:	75 24                	jne    c010fe33 <vfs_open+0x199>$/;"	l
c010fe0f	obj/kernel.asm	/^c010fe0f:	c7 44 24 0c 39 89 11 	movl   $0xc0118939,0xc(%esp)$/;"	l
c010fe16	obj/kernel.asm	/^c010fe16:	c0 $/;"	l
c010fe17	obj/kernel.asm	/^c010fe17:	c7 44 24 08 07 89 11 	movl   $0xc0118907,0x8(%esp)$/;"	l
c010fe1e	obj/kernel.asm	/^c010fe1e:	c0 $/;"	l
c010fe1f	obj/kernel.asm	/^c010fe1f:	c7 44 24 04 31 00 00 	movl   $0x31,0x4(%esp)$/;"	l
c010fe26	obj/kernel.asm	/^c010fe26:	00 $/;"	l
c010fe27	obj/kernel.asm	/^c010fe27:	c7 04 24 1c 89 11 c0 	movl   $0xc011891c,(%esp)$/;"	l
c010fe2e	obj/kernel.asm	/^c010fe2e:	e8 95 10 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fe33	obj/kernel.asm	/^c010fe33:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010fe36	obj/kernel.asm	/^c010fe36:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010fe39	obj/kernel.asm	/^c010fe39:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010fe3d	obj/kernel.asm	/^c010fe3d:	74 17                	je     c010fe56 <vfs_open+0x1bc>$/;"	l
c010fe3f	obj/kernel.asm	/^c010fe3f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fe42	obj/kernel.asm	/^c010fe42:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fe45	obj/kernel.asm	/^c010fe45:	85 c0                	test   %eax,%eax$/;"	l
c010fe47	obj/kernel.asm	/^c010fe47:	74 0d                	je     c010fe56 <vfs_open+0x1bc>$/;"	l
c010fe49	obj/kernel.asm	/^c010fe49:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fe4c	obj/kernel.asm	/^c010fe4c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fe4f	obj/kernel.asm	/^c010fe4f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fe52	obj/kernel.asm	/^c010fe52:	85 c0                	test   %eax,%eax$/;"	l
c010fe54	obj/kernel.asm	/^c010fe54:	75 24                	jne    c010fe7a <vfs_open+0x1e0>$/;"	l
c010fe56	obj/kernel.asm	/^c010fe56:	c7 44 24 0c 48 89 11 	movl   $0xc0118948,0xc(%esp)$/;"	l
c010fe5d	obj/kernel.asm	/^c010fe5d:	c0 $/;"	l
c010fe5e	obj/kernel.asm	/^c010fe5e:	c7 44 24 08 07 89 11 	movl   $0xc0118907,0x8(%esp)$/;"	l
c010fe65	obj/kernel.asm	/^c010fe65:	c0 $/;"	l
c010fe66	obj/kernel.asm	/^c010fe66:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c010fe6d	obj/kernel.asm	/^c010fe6d:	00 $/;"	l
c010fe6e	obj/kernel.asm	/^c010fe6e:	c7 04 24 1c 89 11 c0 	movl   $0xc011891c,(%esp)$/;"	l
c010fe75	obj/kernel.asm	/^c010fe75:	e8 4e 10 ff ff       	call   c0100ec8 <__panic>$/;"	l
c010fe7a	obj/kernel.asm	/^c010fe7a:	c7 44 24 04 95 89 11 	movl   $0xc0118995,0x4(%esp)$/;"	l
c010fe81	obj/kernel.asm	/^c010fe81:	c0 $/;"	l
c010fe82	obj/kernel.asm	/^c010fe82:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fe85	obj/kernel.asm	/^c010fe85:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fe88	obj/kernel.asm	/^c010fe88:	e8 34 f3 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c010fe8d	obj/kernel.asm	/^c010fe8d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fe90	obj/kernel.asm	/^c010fe90:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fe93	obj/kernel.asm	/^c010fe93:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fe96	obj/kernel.asm	/^c010fe96:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010fe99	obj/kernel.asm	/^c010fe99:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010fe9c	obj/kernel.asm	/^c010fe9c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010fea0	obj/kernel.asm	/^c010fea0:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fea3	obj/kernel.asm	/^c010fea3:	ff d0                	call   *%eax$/;"	l
c010fea5	obj/kernel.asm	/^c010fea5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fea8	obj/kernel.asm	/^c010fea8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010feac	obj/kernel.asm	/^c010feac:	74 13                	je     c010fec1 <vfs_open+0x227>$/;"	l
c010feae	obj/kernel.asm	/^c010feae:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010feb1	obj/kernel.asm	/^c010feb1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010feb4	obj/kernel.asm	/^c010feb4:	e8 1a f1 ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c010feb9	obj/kernel.asm	/^c010feb9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010febc	obj/kernel.asm	/^c010febc:	e9 c3 00 00 00       	jmp    c010ff84 <vfs_open+0x2ea>$/;"	l
c010fec1	obj/kernel.asm	/^c010fec1:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010fec4	obj/kernel.asm	/^c010fec4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fec7	obj/kernel.asm	/^c010fec7:	e8 f4 f1 ff ff       	call   c010f0c0 <inode_open_inc>$/;"	l
c010fecc	obj/kernel.asm	/^c010fecc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fecf	obj/kernel.asm	/^c010fecf:	83 e0 10             	and    $0x10,%eax$/;"	l
c010fed2	obj/kernel.asm	/^c010fed2:	85 c0                	test   %eax,%eax$/;"	l
c010fed4	obj/kernel.asm	/^c010fed4:	75 0a                	jne    c010fee0 <vfs_open+0x246>$/;"	l
c010fed6	obj/kernel.asm	/^c010fed6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010feda	obj/kernel.asm	/^c010feda:	0f 84 97 00 00 00    	je     c010ff77 <vfs_open+0x2dd>$/;"	l
c010fee0	obj/kernel.asm	/^c010fee0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010fee3	obj/kernel.asm	/^c010fee3:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010fee6	obj/kernel.asm	/^c010fee6:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010feea	obj/kernel.asm	/^c010feea:	74 17                	je     c010ff03 <vfs_open+0x269>$/;"	l
c010feec	obj/kernel.asm	/^c010feec:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010feef	obj/kernel.asm	/^c010feef:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fef2	obj/kernel.asm	/^c010fef2:	85 c0                	test   %eax,%eax$/;"	l
c010fef4	obj/kernel.asm	/^c010fef4:	74 0d                	je     c010ff03 <vfs_open+0x269>$/;"	l
c010fef6	obj/kernel.asm	/^c010fef6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010fef9	obj/kernel.asm	/^c010fef9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fefc	obj/kernel.asm	/^c010fefc:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010feff	obj/kernel.asm	/^c010feff:	85 c0                	test   %eax,%eax$/;"	l
c010ff01	obj/kernel.asm	/^c010ff01:	75 24                	jne    c010ff27 <vfs_open+0x28d>$/;"	l
c010ff03	obj/kernel.asm	/^c010ff03:	c7 44 24 0c 9c 89 11 	movl   $0xc011899c,0xc(%esp)$/;"	l
c010ff0a	obj/kernel.asm	/^c010ff0a:	c0 $/;"	l
c010ff0b	obj/kernel.asm	/^c010ff0b:	c7 44 24 08 07 89 11 	movl   $0xc0118907,0x8(%esp)$/;"	l
c010ff12	obj/kernel.asm	/^c010ff12:	c0 $/;"	l
c010ff13	obj/kernel.asm	/^c010ff13:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c010ff1a	obj/kernel.asm	/^c010ff1a:	00 $/;"	l
c010ff1b	obj/kernel.asm	/^c010ff1b:	c7 04 24 1c 89 11 c0 	movl   $0xc011891c,(%esp)$/;"	l
c010ff22	obj/kernel.asm	/^c010ff22:	e8 a1 0f ff ff       	call   c0100ec8 <__panic>$/;"	l
c010ff27	obj/kernel.asm	/^c010ff27:	c7 44 24 04 ed 89 11 	movl   $0xc01189ed,0x4(%esp)$/;"	l
c010ff2e	obj/kernel.asm	/^c010ff2e:	c0 $/;"	l
c010ff2f	obj/kernel.asm	/^c010ff2f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ff32	obj/kernel.asm	/^c010ff32:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ff35	obj/kernel.asm	/^c010ff35:	e8 87 f2 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c010ff3a	obj/kernel.asm	/^c010ff3a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ff3d	obj/kernel.asm	/^c010ff3d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ff40	obj/kernel.asm	/^c010ff40:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010ff43	obj/kernel.asm	/^c010ff43:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010ff46	obj/kernel.asm	/^c010ff46:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010ff4d	obj/kernel.asm	/^c010ff4d:	00 $/;"	l
c010ff4e	obj/kernel.asm	/^c010ff4e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ff51	obj/kernel.asm	/^c010ff51:	ff d0                	call   *%eax$/;"	l
c010ff53	obj/kernel.asm	/^c010ff53:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ff56	obj/kernel.asm	/^c010ff56:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010ff5a	obj/kernel.asm	/^c010ff5a:	74 1b                	je     c010ff77 <vfs_open+0x2dd>$/;"	l
c010ff5c	obj/kernel.asm	/^c010ff5c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ff5f	obj/kernel.asm	/^c010ff5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ff62	obj/kernel.asm	/^c010ff62:	e8 73 f1 ff ff       	call   c010f0da <inode_open_dec>$/;"	l
c010ff67	obj/kernel.asm	/^c010ff67:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ff6a	obj/kernel.asm	/^c010ff6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ff6d	obj/kernel.asm	/^c010ff6d:	e8 61 f0 ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c010ff72	obj/kernel.asm	/^c010ff72:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ff75	obj/kernel.asm	/^c010ff75:	eb 0d                	jmp    c010ff84 <vfs_open+0x2ea>$/;"	l
c010ff77	obj/kernel.asm	/^c010ff77:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010ff7a	obj/kernel.asm	/^c010ff7a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ff7d	obj/kernel.asm	/^c010ff7d:	89 10                	mov    %edx,(%eax)$/;"	l
c010ff7f	obj/kernel.asm	/^c010ff7f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ff84	obj/kernel.asm	/^c010ff84:	83 c4 44             	add    $0x44,%esp$/;"	l
c010ff87	obj/kernel.asm	/^c010ff87:	5b                   	pop    %ebx$/;"	l
c010ff88	obj/kernel.asm	/^c010ff88:	5d                   	pop    %ebp$/;"	l
c010ff89	obj/kernel.asm	/^c010ff89:	c3                   	ret    $/;"	l
c010ff8a	obj/kernel.asm	/^c010ff8a <vfs_close>:$/;"	l
c010ff8a	obj/kernel.asm	/^c010ff8a:	55                   	push   %ebp$/;"	l
c010ff8b	obj/kernel.asm	/^c010ff8b:	89 e5                	mov    %esp,%ebp$/;"	l
c010ff8d	obj/kernel.asm	/^c010ff8d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ff90	obj/kernel.asm	/^c010ff90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ff93	obj/kernel.asm	/^c010ff93:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ff96	obj/kernel.asm	/^c010ff96:	e8 3f f1 ff ff       	call   c010f0da <inode_open_dec>$/;"	l
c010ff9b	obj/kernel.asm	/^c010ff9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ff9e	obj/kernel.asm	/^c010ff9e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ffa1	obj/kernel.asm	/^c010ffa1:	e8 2d f0 ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c010ffa6	obj/kernel.asm	/^c010ffa6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ffab	obj/kernel.asm	/^c010ffab:	c9                   	leave  $/;"	l
c010ffac	obj/kernel.asm	/^c010ffac:	c3                   	ret    $/;"	l
c010ffad	obj/kernel.asm	/^c010ffad <vfs_unlink>:$/;"	l
c010ffad	obj/kernel.asm	/^c010ffad:	55                   	push   %ebp$/;"	l
c010ffae	obj/kernel.asm	/^c010ffae:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffb0	obj/kernel.asm	/^c010ffb0:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010ffb5	obj/kernel.asm	/^c010ffb5:	5d                   	pop    %ebp$/;"	l
c010ffb6	obj/kernel.asm	/^c010ffb6:	c3                   	ret    $/;"	l
c010ffb7	obj/kernel.asm	/^c010ffb7 <vfs_rename>:$/;"	l
c010ffb7	obj/kernel.asm	/^c010ffb7:	55                   	push   %ebp$/;"	l
c010ffb8	obj/kernel.asm	/^c010ffb8:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffba	obj/kernel.asm	/^c010ffba:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010ffbf	obj/kernel.asm	/^c010ffbf:	5d                   	pop    %ebp$/;"	l
c010ffc0	obj/kernel.asm	/^c010ffc0:	c3                   	ret    $/;"	l
c010ffc1	obj/kernel.asm	/^c010ffc1 <vfs_link>:$/;"	l
c010ffc1	obj/kernel.asm	/^c010ffc1:	55                   	push   %ebp$/;"	l
c010ffc2	obj/kernel.asm	/^c010ffc2:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffc4	obj/kernel.asm	/^c010ffc4:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010ffc9	obj/kernel.asm	/^c010ffc9:	5d                   	pop    %ebp$/;"	l
c010ffca	obj/kernel.asm	/^c010ffca:	c3                   	ret    $/;"	l
c010ffcb	obj/kernel.asm	/^c010ffcb <vfs_symlink>:$/;"	l
c010ffcb	obj/kernel.asm	/^c010ffcb:	55                   	push   %ebp$/;"	l
c010ffcc	obj/kernel.asm	/^c010ffcc:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffce	obj/kernel.asm	/^c010ffce:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010ffd3	obj/kernel.asm	/^c010ffd3:	5d                   	pop    %ebp$/;"	l
c010ffd4	obj/kernel.asm	/^c010ffd4:	c3                   	ret    $/;"	l
c010ffd5	obj/kernel.asm	/^c010ffd5 <vfs_readlink>:$/;"	l
c010ffd5	obj/kernel.asm	/^c010ffd5:	55                   	push   %ebp$/;"	l
c010ffd6	obj/kernel.asm	/^c010ffd6:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffd8	obj/kernel.asm	/^c010ffd8:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010ffdd	obj/kernel.asm	/^c010ffdd:	5d                   	pop    %ebp$/;"	l
c010ffde	obj/kernel.asm	/^c010ffde:	c3                   	ret    $/;"	l
c010ffdf	obj/kernel.asm	/^c010ffdf <vfs_mkdir>:$/;"	l
c010ffdf	obj/kernel.asm	/^c010ffdf:	55                   	push   %ebp$/;"	l
c010ffe0	obj/kernel.asm	/^c010ffe0:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffe2	obj/kernel.asm	/^c010ffe2:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010ffe7	obj/kernel.asm	/^c010ffe7:	5d                   	pop    %ebp$/;"	l
c010ffe8	obj/kernel.asm	/^c010ffe8:	c3                   	ret    $/;"	l
c010ffe9	obj/kernel.asm	/^c010ffe9 <get_device>:$/;"	l
c010ffe9	obj/kernel.asm	/^c010ffe9:	55                   	push   %ebp$/;"	l
c010ffea	obj/kernel.asm	/^c010ffea:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffec	obj/kernel.asm	/^c010ffec:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010ffef	obj/kernel.asm	/^c010ffef:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)$/;"	l
c010fff6	obj/kernel.asm	/^c010fff6:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)$/;"	l
c010fffd	obj/kernel.asm	/^c010fffd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0110004	obj/kernel.asm	/^c0110004:	eb 32                	jmp    c0110038 <get_device+0x4f>$/;"	l
c0110006	obj/kernel.asm	/^c0110006:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110009	obj/kernel.asm	/^c0110009:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011000c	obj/kernel.asm	/^c011000c:	01 d0                	add    %edx,%eax$/;"	l
c011000e	obj/kernel.asm	/^c011000e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110011	obj/kernel.asm	/^c0110011:	3c 3a                	cmp    $0x3a,%al$/;"	l
c0110013	obj/kernel.asm	/^c0110013:	75 08                	jne    c011001d <get_device+0x34>$/;"	l
c0110015	obj/kernel.asm	/^c0110015:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110018	obj/kernel.asm	/^c0110018:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011001b	obj/kernel.asm	/^c011001b:	eb 2a                	jmp    c0110047 <get_device+0x5e>$/;"	l
c011001d	obj/kernel.asm	/^c011001d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110020	obj/kernel.asm	/^c0110020:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110023	obj/kernel.asm	/^c0110023:	01 d0                	add    %edx,%eax$/;"	l
c0110025	obj/kernel.asm	/^c0110025:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110028	obj/kernel.asm	/^c0110028:	3c 2f                	cmp    $0x2f,%al$/;"	l
c011002a	obj/kernel.asm	/^c011002a:	75 08                	jne    c0110034 <get_device+0x4b>$/;"	l
c011002c	obj/kernel.asm	/^c011002c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011002f	obj/kernel.asm	/^c011002f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110032	obj/kernel.asm	/^c0110032:	eb 13                	jmp    c0110047 <get_device+0x5e>$/;"	l
c0110034	obj/kernel.asm	/^c0110034:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0110038	obj/kernel.asm	/^c0110038:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c011003b	obj/kernel.asm	/^c011003b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011003e	obj/kernel.asm	/^c011003e:	01 d0                	add    %edx,%eax$/;"	l
c0110040	obj/kernel.asm	/^c0110040:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110043	obj/kernel.asm	/^c0110043:	84 c0                	test   %al,%al$/;"	l
c0110045	obj/kernel.asm	/^c0110045:	75 bf                	jne    c0110006 <get_device+0x1d>$/;"	l
c0110047	obj/kernel.asm	/^c0110047:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011004b	obj/kernel.asm	/^c011004b:	79 1e                	jns    c011006b <get_device+0x82>$/;"	l
c011004d	obj/kernel.asm	/^c011004d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110051	obj/kernel.asm	/^c0110051:	74 18                	je     c011006b <get_device+0x82>$/;"	l
c0110053	obj/kernel.asm	/^c0110053:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110056	obj/kernel.asm	/^c0110056:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110059	obj/kernel.asm	/^c0110059:	89 10                	mov    %edx,(%eax)$/;"	l
c011005b	obj/kernel.asm	/^c011005b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011005e	obj/kernel.asm	/^c011005e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110061	obj/kernel.asm	/^c0110061:	e8 ae 02 00 00       	call   c0110314 <vfs_get_curdir>$/;"	l
c0110066	obj/kernel.asm	/^c0110066:	e9 26 01 00 00       	jmp    c0110191 <get_device+0x1a8>$/;"	l
c011006b	obj/kernel.asm	/^c011006b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011006f	obj/kernel.asm	/^c011006f:	7e 42                	jle    c01100b3 <get_device+0xca>$/;"	l
c0110071	obj/kernel.asm	/^c0110071:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110074	obj/kernel.asm	/^c0110074:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110077	obj/kernel.asm	/^c0110077:	01 d0                	add    %edx,%eax$/;"	l
c0110079	obj/kernel.asm	/^c0110079:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c011007c	obj/kernel.asm	/^c011007c:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0110080	obj/kernel.asm	/^c0110080:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110083	obj/kernel.asm	/^c0110083:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110086	obj/kernel.asm	/^c0110086:	01 d0                	add    %edx,%eax$/;"	l
c0110088	obj/kernel.asm	/^c0110088:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011008b	obj/kernel.asm	/^c011008b:	3c 2f                	cmp    $0x2f,%al$/;"	l
c011008d	obj/kernel.asm	/^c011008d:	74 ed                	je     c011007c <get_device+0x93>$/;"	l
c011008f	obj/kernel.asm	/^c011008f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110092	obj/kernel.asm	/^c0110092:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110095	obj/kernel.asm	/^c0110095:	01 c2                	add    %eax,%edx$/;"	l
c0110097	obj/kernel.asm	/^c0110097:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011009a	obj/kernel.asm	/^c011009a:	89 10                	mov    %edx,(%eax)$/;"	l
c011009c	obj/kernel.asm	/^c011009c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011009f	obj/kernel.asm	/^c011009f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01100a3	obj/kernel.asm	/^c01100a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01100a6	obj/kernel.asm	/^c01100a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01100a9	obj/kernel.asm	/^c01100a9:	e8 61 f4 ff ff       	call   c010f50f <vfs_get_root>$/;"	l
c01100ae	obj/kernel.asm	/^c01100ae:	e9 de 00 00 00       	jmp    c0110191 <get_device+0x1a8>$/;"	l
c01100b3	obj/kernel.asm	/^c01100b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01100b6	obj/kernel.asm	/^c01100b6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01100b9	obj/kernel.asm	/^c01100b9:	3c 2f                	cmp    $0x2f,%al$/;"	l
c01100bb	obj/kernel.asm	/^c01100bb:	75 20                	jne    c01100dd <get_device+0xf4>$/;"	l
c01100bd	obj/kernel.asm	/^c01100bd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01100c0	obj/kernel.asm	/^c01100c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01100c3	obj/kernel.asm	/^c01100c3:	e8 18 f3 ff ff       	call   c010f3e0 <vfs_get_bootfs>$/;"	l
c01100c8	obj/kernel.asm	/^c01100c8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01100cb	obj/kernel.asm	/^c01100cb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01100cf	obj/kernel.asm	/^c01100cf:	0f 84 a1 00 00 00    	je     c0110176 <get_device+0x18d>$/;"	l
c01100d5	obj/kernel.asm	/^c01100d5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01100d8	obj/kernel.asm	/^c01100d8:	e9 b4 00 00 00       	jmp    c0110191 <get_device+0x1a8>$/;"	l
c01100dd	obj/kernel.asm	/^c01100dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01100e0	obj/kernel.asm	/^c01100e0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01100e3	obj/kernel.asm	/^c01100e3:	3c 3a                	cmp    $0x3a,%al$/;"	l
c01100e5	obj/kernel.asm	/^c01100e5:	74 24                	je     c011010b <get_device+0x122>$/;"	l
c01100e7	obj/kernel.asm	/^c01100e7:	c7 44 24 0c f8 89 11 	movl   $0xc01189f8,0xc(%esp)$/;"	l
c01100ee	obj/kernel.asm	/^c01100ee:	c0 $/;"	l
c01100ef	obj/kernel.asm	/^c01100ef:	c7 44 24 08 05 8a 11 	movl   $0xc0118a05,0x8(%esp)$/;"	l
c01100f6	obj/kernel.asm	/^c01100f6:	c0 $/;"	l
c01100f7	obj/kernel.asm	/^c01100f7:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c01100fe	obj/kernel.asm	/^c01100fe:	00 $/;"	l
c01100ff	obj/kernel.asm	/^c01100ff:	c7 04 24 1a 8a 11 c0 	movl   $0xc0118a1a,(%esp)$/;"	l
c0110106	obj/kernel.asm	/^c0110106:	e8 bd 0d ff ff       	call   c0100ec8 <__panic>$/;"	l
c011010b	obj/kernel.asm	/^c011010b:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c011010e	obj/kernel.asm	/^c011010e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110111	obj/kernel.asm	/^c0110111:	e8 fe 01 00 00       	call   c0110314 <vfs_get_curdir>$/;"	l
c0110116	obj/kernel.asm	/^c0110116:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110119	obj/kernel.asm	/^c0110119:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011011d	obj/kernel.asm	/^c011011d:	74 05                	je     c0110124 <get_device+0x13b>$/;"	l
c011011f	obj/kernel.asm	/^c011011f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110122	obj/kernel.asm	/^c0110122:	eb 6d                	jmp    c0110191 <get_device+0x1a8>$/;"	l
c0110124	obj/kernel.asm	/^c0110124:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110127	obj/kernel.asm	/^c0110127:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011012a	obj/kernel.asm	/^c011012a:	85 c0                	test   %eax,%eax$/;"	l
c011012c	obj/kernel.asm	/^c011012c:	75 24                	jne    c0110152 <get_device+0x169>$/;"	l
c011012e	obj/kernel.asm	/^c011012e:	c7 44 24 0c 32 8a 11 	movl   $0xc0118a32,0xc(%esp)$/;"	l
c0110135	obj/kernel.asm	/^c0110135:	c0 $/;"	l
c0110136	obj/kernel.asm	/^c0110136:	c7 44 24 08 05 8a 11 	movl   $0xc0118a05,0x8(%esp)$/;"	l
c011013d	obj/kernel.asm	/^c011013d:	c0 $/;"	l
c011013e	obj/kernel.asm	/^c011013e:	c7 44 24 04 39 00 00 	movl   $0x39,0x4(%esp)$/;"	l
c0110145	obj/kernel.asm	/^c0110145:	00 $/;"	l
c0110146	obj/kernel.asm	/^c0110146:	c7 04 24 1a 8a 11 c0 	movl   $0xc0118a1a,(%esp)$/;"	l
c011014d	obj/kernel.asm	/^c011014d:	e8 76 0d ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110152	obj/kernel.asm	/^c0110152:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110155	obj/kernel.asm	/^c0110155:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110158	obj/kernel.asm	/^c0110158:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c011015b	obj/kernel.asm	/^c011015b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c011015e	obj/kernel.asm	/^c011015e:	8b 52 38             	mov    0x38(%edx),%edx$/;"	l
c0110161	obj/kernel.asm	/^c0110161:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110164	obj/kernel.asm	/^c0110164:	ff d0                	call   *%eax$/;"	l
c0110166	obj/kernel.asm	/^c0110166:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0110169	obj/kernel.asm	/^c0110169:	89 02                	mov    %eax,(%edx)$/;"	l
c011016b	obj/kernel.asm	/^c011016b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011016e	obj/kernel.asm	/^c011016e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110171	obj/kernel.asm	/^c0110171:	e8 5d ee ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c0110176	obj/kernel.asm	/^c0110176:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011017a	obj/kernel.asm	/^c011017a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011017d	obj/kernel.asm	/^c011017d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110180	obj/kernel.asm	/^c0110180:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0110182	obj/kernel.asm	/^c0110182:	74 f2                	je     c0110176 <get_device+0x18d>$/;"	l
c0110184	obj/kernel.asm	/^c0110184:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110187	obj/kernel.asm	/^c0110187:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011018a	obj/kernel.asm	/^c011018a:	89 10                	mov    %edx,(%eax)$/;"	l
c011018c	obj/kernel.asm	/^c011018c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110191	obj/kernel.asm	/^c0110191:	c9                   	leave  $/;"	l
c0110192	obj/kernel.asm	/^c0110192:	c3                   	ret    $/;"	l
c0110193	obj/kernel.asm	/^c0110193 <vfs_lookup>:$/;"	l
c0110193	obj/kernel.asm	/^c0110193:	55                   	push   %ebp$/;"	l
c0110194	obj/kernel.asm	/^c0110194:	89 e5                	mov    %esp,%ebp$/;"	l
c0110196	obj/kernel.asm	/^c0110196:	56                   	push   %esi$/;"	l
c0110197	obj/kernel.asm	/^c0110197:	53                   	push   %ebx$/;"	l
c0110198	obj/kernel.asm	/^c0110198:	83 ec 20             	sub    $0x20,%esp$/;"	l
c011019b	obj/kernel.asm	/^c011019b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011019e	obj/kernel.asm	/^c011019e:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c01101a1	obj/kernel.asm	/^c01101a1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01101a5	obj/kernel.asm	/^c01101a5:	8d 75 08             	lea    0x8(%ebp),%esi$/;"	l
c01101a8	obj/kernel.asm	/^c01101a8:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c01101ac	obj/kernel.asm	/^c01101ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01101af	obj/kernel.asm	/^c01101af:	e8 35 fe ff ff       	call   c010ffe9 <get_device>$/;"	l
c01101b4	obj/kernel.asm	/^c01101b4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01101b7	obj/kernel.asm	/^c01101b7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01101bb	obj/kernel.asm	/^c01101bb:	74 08                	je     c01101c5 <vfs_lookup+0x32>$/;"	l
c01101bd	obj/kernel.asm	/^c01101bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01101c0	obj/kernel.asm	/^c01101c0:	e9 a7 00 00 00       	jmp    c011026c <vfs_lookup+0xd9>$/;"	l
c01101c5	obj/kernel.asm	/^c01101c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101c8	obj/kernel.asm	/^c01101c8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01101cb	obj/kernel.asm	/^c01101cb:	84 c0                	test   %al,%al$/;"	l
c01101cd	obj/kernel.asm	/^c01101cd:	0f 84 8c 00 00 00    	je     c011025f <vfs_lookup+0xcc>$/;"	l
c01101d3	obj/kernel.asm	/^c01101d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01101d6	obj/kernel.asm	/^c01101d6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01101d9	obj/kernel.asm	/^c01101d9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01101dd	obj/kernel.asm	/^c01101dd:	74 17                	je     c01101f6 <vfs_lookup+0x63>$/;"	l
c01101df	obj/kernel.asm	/^c01101df:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01101e2	obj/kernel.asm	/^c01101e2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01101e5	obj/kernel.asm	/^c01101e5:	85 c0                	test   %eax,%eax$/;"	l
c01101e7	obj/kernel.asm	/^c01101e7:	74 0d                	je     c01101f6 <vfs_lookup+0x63>$/;"	l
c01101e9	obj/kernel.asm	/^c01101e9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01101ec	obj/kernel.asm	/^c01101ec:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01101ef	obj/kernel.asm	/^c01101ef:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01101f2	obj/kernel.asm	/^c01101f2:	85 c0                	test   %eax,%eax$/;"	l
c01101f4	obj/kernel.asm	/^c01101f4:	75 24                	jne    c011021a <vfs_lookup+0x87>$/;"	l
c01101f6	obj/kernel.asm	/^c01101f6:	c7 44 24 0c 48 8a 11 	movl   $0xc0118a48,0xc(%esp)$/;"	l
c01101fd	obj/kernel.asm	/^c01101fd:	c0 $/;"	l
c01101fe	obj/kernel.asm	/^c01101fe:	c7 44 24 08 05 8a 11 	movl   $0xc0118a05,0x8(%esp)$/;"	l
c0110205	obj/kernel.asm	/^c0110205:	c0 $/;"	l
c0110206	obj/kernel.asm	/^c0110206:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
c011020d	obj/kernel.asm	/^c011020d:	00 $/;"	l
c011020e	obj/kernel.asm	/^c011020e:	c7 04 24 1a 8a 11 c0 	movl   $0xc0118a1a,(%esp)$/;"	l
c0110215	obj/kernel.asm	/^c0110215:	e8 ae 0c ff ff       	call   c0100ec8 <__panic>$/;"	l
c011021a	obj/kernel.asm	/^c011021a:	c7 44 24 04 97 8a 11 	movl   $0xc0118a97,0x4(%esp)$/;"	l
c0110221	obj/kernel.asm	/^c0110221:	c0 $/;"	l
c0110222	obj/kernel.asm	/^c0110222:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110225	obj/kernel.asm	/^c0110225:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110228	obj/kernel.asm	/^c0110228:	e8 94 ef ff ff       	call   c010f1c1 <inode_check>$/;"	l
c011022d	obj/kernel.asm	/^c011022d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110230	obj/kernel.asm	/^c0110230:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110233	obj/kernel.asm	/^c0110233:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110236	obj/kernel.asm	/^c0110236:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c0110239	obj/kernel.asm	/^c0110239:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c011023c	obj/kernel.asm	/^c011023c:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c011023f	obj/kernel.asm	/^c011023f:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c0110243	obj/kernel.asm	/^c0110243:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0110247	obj/kernel.asm	/^c0110247:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011024a	obj/kernel.asm	/^c011024a:	ff d0                	call   *%eax$/;"	l
c011024c	obj/kernel.asm	/^c011024c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011024f	obj/kernel.asm	/^c011024f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110252	obj/kernel.asm	/^c0110252:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110255	obj/kernel.asm	/^c0110255:	e8 79 ed ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c011025a	obj/kernel.asm	/^c011025a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011025d	obj/kernel.asm	/^c011025d:	eb 0d                	jmp    c011026c <vfs_lookup+0xd9>$/;"	l
c011025f	obj/kernel.asm	/^c011025f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110262	obj/kernel.asm	/^c0110262:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110265	obj/kernel.asm	/^c0110265:	89 10                	mov    %edx,(%eax)$/;"	l
c0110267	obj/kernel.asm	/^c0110267:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011026c	obj/kernel.asm	/^c011026c:	83 c4 20             	add    $0x20,%esp$/;"	l
c011026f	obj/kernel.asm	/^c011026f:	5b                   	pop    %ebx$/;"	l
c0110270	obj/kernel.asm	/^c0110270:	5e                   	pop    %esi$/;"	l
c0110271	obj/kernel.asm	/^c0110271:	5d                   	pop    %ebp$/;"	l
c0110272	obj/kernel.asm	/^c0110272:	c3                   	ret    $/;"	l
c0110273	obj/kernel.asm	/^c0110273 <vfs_lookup_parent>:$/;"	l
c0110273	obj/kernel.asm	/^c0110273:	55                   	push   %ebp$/;"	l
c0110274	obj/kernel.asm	/^c0110274:	89 e5                	mov    %esp,%ebp$/;"	l
c0110276	obj/kernel.asm	/^c0110276:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110279	obj/kernel.asm	/^c0110279:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011027c	obj/kernel.asm	/^c011027c:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c011027f	obj/kernel.asm	/^c011027f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0110283	obj/kernel.asm	/^c0110283:	8d 4d 08             	lea    0x8(%ebp),%ecx$/;"	l
c0110286	obj/kernel.asm	/^c0110286:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c011028a	obj/kernel.asm	/^c011028a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011028d	obj/kernel.asm	/^c011028d:	e8 57 fd ff ff       	call   c010ffe9 <get_device>$/;"	l
c0110292	obj/kernel.asm	/^c0110292:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110295	obj/kernel.asm	/^c0110295:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110299	obj/kernel.asm	/^c0110299:	74 05                	je     c01102a0 <vfs_lookup_parent+0x2d>$/;"	l
c011029b	obj/kernel.asm	/^c011029b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011029e	obj/kernel.asm	/^c011029e:	eb 15                	jmp    c01102b5 <vfs_lookup_parent+0x42>$/;"	l
c01102a0	obj/kernel.asm	/^c01102a0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01102a3	obj/kernel.asm	/^c01102a3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01102a6	obj/kernel.asm	/^c01102a6:	89 10                	mov    %edx,(%eax)$/;"	l
c01102a8	obj/kernel.asm	/^c01102a8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01102ab	obj/kernel.asm	/^c01102ab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01102ae	obj/kernel.asm	/^c01102ae:	89 10                	mov    %edx,(%eax)$/;"	l
c01102b0	obj/kernel.asm	/^c01102b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01102b5	obj/kernel.asm	/^c01102b5:	c9                   	leave  $/;"	l
c01102b6	obj/kernel.asm	/^c01102b6:	c3                   	ret    $/;"	l
c01102b7	obj/kernel.asm	/^c01102b7 <get_cwd_nolock>:$/;"	l
c01102b7	obj/kernel.asm	/^c01102b7:	55                   	push   %ebp$/;"	l
c01102b8	obj/kernel.asm	/^c01102b8:	89 e5                	mov    %esp,%ebp$/;"	l
c01102ba	obj/kernel.asm	/^c01102ba:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c01102bf	obj/kernel.asm	/^c01102bf:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c01102c5	obj/kernel.asm	/^c01102c5:	8b 00                	mov    (%eax),%eax$/;"	l
c01102c7	obj/kernel.asm	/^c01102c7:	5d                   	pop    %ebp$/;"	l
c01102c8	obj/kernel.asm	/^c01102c8:	c3                   	ret    $/;"	l
c01102c9	obj/kernel.asm	/^c01102c9 <set_cwd_nolock>:$/;"	l
c01102c9	obj/kernel.asm	/^c01102c9:	55                   	push   %ebp$/;"	l
c01102ca	obj/kernel.asm	/^c01102ca:	89 e5                	mov    %esp,%ebp$/;"	l
c01102cc	obj/kernel.asm	/^c01102cc:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c01102d1	obj/kernel.asm	/^c01102d1:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c01102d7	obj/kernel.asm	/^c01102d7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01102da	obj/kernel.asm	/^c01102da:	89 10                	mov    %edx,(%eax)$/;"	l
c01102dc	obj/kernel.asm	/^c01102dc:	5d                   	pop    %ebp$/;"	l
c01102dd	obj/kernel.asm	/^c01102dd:	c3                   	ret    $/;"	l
c01102de	obj/kernel.asm	/^c01102de <lock_cfs>:$/;"	l
c01102de	obj/kernel.asm	/^c01102de:	55                   	push   %ebp$/;"	l
c01102df	obj/kernel.asm	/^c01102df:	89 e5                	mov    %esp,%ebp$/;"	l
c01102e1	obj/kernel.asm	/^c01102e1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01102e4	obj/kernel.asm	/^c01102e4:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c01102e9	obj/kernel.asm	/^c01102e9:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c01102ef	obj/kernel.asm	/^c01102ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01102f2	obj/kernel.asm	/^c01102f2:	e8 83 ac ff ff       	call   c010af7a <lock_files>$/;"	l
c01102f7	obj/kernel.asm	/^c01102f7:	c9                   	leave  $/;"	l
c01102f8	obj/kernel.asm	/^c01102f8:	c3                   	ret    $/;"	l
c01102f9	obj/kernel.asm	/^c01102f9 <unlock_cfs>:$/;"	l
c01102f9	obj/kernel.asm	/^c01102f9:	55                   	push   %ebp$/;"	l
c01102fa	obj/kernel.asm	/^c01102fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01102fc	obj/kernel.asm	/^c01102fc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01102ff	obj/kernel.asm	/^c01102ff:	a1 28 ff 14 c0       	mov    0xc014ff28,%eax$/;"	l
c0110304	obj/kernel.asm	/^c0110304:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c011030a	obj/kernel.asm	/^c011030a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011030d	obj/kernel.asm	/^c011030d:	e8 7e ac ff ff       	call   c010af90 <unlock_files>$/;"	l
c0110312	obj/kernel.asm	/^c0110312:	c9                   	leave  $/;"	l
c0110313	obj/kernel.asm	/^c0110313:	c3                   	ret    $/;"	l
c0110314	obj/kernel.asm	/^c0110314 <vfs_get_curdir>:$/;"	l
c0110314	obj/kernel.asm	/^c0110314:	55                   	push   %ebp$/;"	l
c0110315	obj/kernel.asm	/^c0110315:	89 e5                	mov    %esp,%ebp$/;"	l
c0110317	obj/kernel.asm	/^c0110317:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011031a	obj/kernel.asm	/^c011031a:	e8 98 ff ff ff       	call   c01102b7 <get_cwd_nolock>$/;"	l
c011031f	obj/kernel.asm	/^c011031f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110322	obj/kernel.asm	/^c0110322:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110326	obj/kernel.asm	/^c0110326:	74 1a                	je     c0110342 <vfs_get_curdir+0x2e>$/;"	l
c0110328	obj/kernel.asm	/^c0110328:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011032b	obj/kernel.asm	/^c011032b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011032e	obj/kernel.asm	/^c011032e:	e8 86 ec ff ff       	call   c010efb9 <inode_ref_inc>$/;"	l
c0110333	obj/kernel.asm	/^c0110333:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110336	obj/kernel.asm	/^c0110336:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110339	obj/kernel.asm	/^c0110339:	89 10                	mov    %edx,(%eax)$/;"	l
c011033b	obj/kernel.asm	/^c011033b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110340	obj/kernel.asm	/^c0110340:	eb 05                	jmp    c0110347 <vfs_get_curdir+0x33>$/;"	l
c0110342	obj/kernel.asm	/^c0110342:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0110347	obj/kernel.asm	/^c0110347:	c9                   	leave  $/;"	l
c0110348	obj/kernel.asm	/^c0110348:	c3                   	ret    $/;"	l
c0110349	obj/kernel.asm	/^c0110349 <vfs_set_curdir>:$/;"	l
c0110349	obj/kernel.asm	/^c0110349:	55                   	push   %ebp$/;"	l
c011034a	obj/kernel.asm	/^c011034a:	89 e5                	mov    %esp,%ebp$/;"	l
c011034c	obj/kernel.asm	/^c011034c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011034f	obj/kernel.asm	/^c011034f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0110356	obj/kernel.asm	/^c0110356:	e8 83 ff ff ff       	call   c01102de <lock_cfs>$/;"	l
c011035b	obj/kernel.asm	/^c011035b:	e8 57 ff ff ff       	call   c01102b7 <get_cwd_nolock>$/;"	l
c0110360	obj/kernel.asm	/^c0110360:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110363	obj/kernel.asm	/^c0110363:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110366	obj/kernel.asm	/^c0110366:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0110369	obj/kernel.asm	/^c0110369:	0f 84 c7 00 00 00    	je     c0110436 <vfs_set_curdir+0xed>$/;"	l
c011036f	obj/kernel.asm	/^c011036f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0110373	obj/kernel.asm	/^c0110373:	0f 84 a1 00 00 00    	je     c011041a <vfs_set_curdir+0xd1>$/;"	l
c0110379	obj/kernel.asm	/^c0110379:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011037c	obj/kernel.asm	/^c011037c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011037f	obj/kernel.asm	/^c011037f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110383	obj/kernel.asm	/^c0110383:	74 17                	je     c011039c <vfs_set_curdir+0x53>$/;"	l
c0110385	obj/kernel.asm	/^c0110385:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110388	obj/kernel.asm	/^c0110388:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011038b	obj/kernel.asm	/^c011038b:	85 c0                	test   %eax,%eax$/;"	l
c011038d	obj/kernel.asm	/^c011038d:	74 0d                	je     c011039c <vfs_set_curdir+0x53>$/;"	l
c011038f	obj/kernel.asm	/^c011038f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110392	obj/kernel.asm	/^c0110392:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110395	obj/kernel.asm	/^c0110395:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0110398	obj/kernel.asm	/^c0110398:	85 c0                	test   %eax,%eax$/;"	l
c011039a	obj/kernel.asm	/^c011039a:	75 24                	jne    c01103c0 <vfs_set_curdir+0x77>$/;"	l
c011039c	obj/kernel.asm	/^c011039c:	c7 44 24 0c a0 8a 11 	movl   $0xc0118aa0,0xc(%esp)$/;"	l
c01103a3	obj/kernel.asm	/^c01103a3:	c0 $/;"	l
c01103a4	obj/kernel.asm	/^c01103a4:	c7 44 24 08 f0 8a 11 	movl   $0xc0118af0,0x8(%esp)$/;"	l
c01103ab	obj/kernel.asm	/^c01103ab:	c0 $/;"	l
c01103ac	obj/kernel.asm	/^c01103ac:	c7 44 24 04 43 00 00 	movl   $0x43,0x4(%esp)$/;"	l
c01103b3	obj/kernel.asm	/^c01103b3:	00 $/;"	l
c01103b4	obj/kernel.asm	/^c01103b4:	c7 04 24 05 8b 11 c0 	movl   $0xc0118b05,(%esp)$/;"	l
c01103bb	obj/kernel.asm	/^c01103bb:	e8 08 0b ff ff       	call   c0100ec8 <__panic>$/;"	l
c01103c0	obj/kernel.asm	/^c01103c0:	c7 44 24 04 1b 8b 11 	movl   $0xc0118b1b,0x4(%esp)$/;"	l
c01103c7	obj/kernel.asm	/^c01103c7:	c0 $/;"	l
c01103c8	obj/kernel.asm	/^c01103c8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01103cb	obj/kernel.asm	/^c01103cb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01103ce	obj/kernel.asm	/^c01103ce:	e8 ee ed ff ff       	call   c010f1c1 <inode_check>$/;"	l
c01103d3	obj/kernel.asm	/^c01103d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01103d6	obj/kernel.asm	/^c01103d6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01103d9	obj/kernel.asm	/^c01103d9:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01103dc	obj/kernel.asm	/^c01103dc:	8d 55 e8             	lea    -0x18(%ebp),%edx$/;"	l
c01103df	obj/kernel.asm	/^c01103df:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01103e3	obj/kernel.asm	/^c01103e3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01103e6	obj/kernel.asm	/^c01103e6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01103e9	obj/kernel.asm	/^c01103e9:	ff d0                	call   *%eax$/;"	l
c01103eb	obj/kernel.asm	/^c01103eb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01103ee	obj/kernel.asm	/^c01103ee:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01103f2	obj/kernel.asm	/^c01103f2:	74 02                	je     c01103f6 <vfs_set_curdir+0xad>$/;"	l
c01103f4	obj/kernel.asm	/^c01103f4:	eb 40                	jmp    c0110436 <vfs_set_curdir+0xed>$/;"	l
c01103f6	obj/kernel.asm	/^c01103f6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01103f9	obj/kernel.asm	/^c01103f9:	25 00 70 00 00       	and    $0x7000,%eax$/;"	l
c01103fe	obj/kernel.asm	/^c01103fe:	3d 00 20 00 00       	cmp    $0x2000,%eax$/;"	l
c0110403	obj/kernel.asm	/^c0110403:	74 0a                	je     c011040f <vfs_set_curdir+0xc6>$/;"	l
c0110405	obj/kernel.asm	/^c0110405:	c7 45 f4 ee ff ff ff 	movl   $0xffffffee,-0xc(%ebp)$/;"	l
c011040c	obj/kernel.asm	/^c011040c:	90                   	nop$/;"	l
c011040d	obj/kernel.asm	/^c011040d:	eb 27                	jmp    c0110436 <vfs_set_curdir+0xed>$/;"	l
c011040f	obj/kernel.asm	/^c011040f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110412	obj/kernel.asm	/^c0110412:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110415	obj/kernel.asm	/^c0110415:	e8 9f eb ff ff       	call   c010efb9 <inode_ref_inc>$/;"	l
c011041a	obj/kernel.asm	/^c011041a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011041d	obj/kernel.asm	/^c011041d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110420	obj/kernel.asm	/^c0110420:	e8 a4 fe ff ff       	call   c01102c9 <set_cwd_nolock>$/;"	l
c0110425	obj/kernel.asm	/^c0110425:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110429	obj/kernel.asm	/^c0110429:	74 0b                	je     c0110436 <vfs_set_curdir+0xed>$/;"	l
c011042b	obj/kernel.asm	/^c011042b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011042e	obj/kernel.asm	/^c011042e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110431	obj/kernel.asm	/^c0110431:	e8 9d eb ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c0110436	obj/kernel.asm	/^c0110436:	e8 be fe ff ff       	call   c01102f9 <unlock_cfs>$/;"	l
c011043b	obj/kernel.asm	/^c011043b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011043e	obj/kernel.asm	/^c011043e:	c9                   	leave  $/;"	l
c011043f	obj/kernel.asm	/^c011043f:	c3                   	ret    $/;"	l
c0110440	obj/kernel.asm	/^c0110440 <vfs_chdir>:$/;"	l
c0110440	obj/kernel.asm	/^c0110440:	55                   	push   %ebp$/;"	l
c0110441	obj/kernel.asm	/^c0110441:	89 e5                	mov    %esp,%ebp$/;"	l
c0110443	obj/kernel.asm	/^c0110443:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110446	obj/kernel.asm	/^c0110446:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0110449	obj/kernel.asm	/^c0110449:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011044d	obj/kernel.asm	/^c011044d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110450	obj/kernel.asm	/^c0110450:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110453	obj/kernel.asm	/^c0110453:	e8 3b fd ff ff       	call   c0110193 <vfs_lookup>$/;"	l
c0110458	obj/kernel.asm	/^c0110458:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011045b	obj/kernel.asm	/^c011045b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011045f	obj/kernel.asm	/^c011045f:	75 19                	jne    c011047a <vfs_chdir+0x3a>$/;"	l
c0110461	obj/kernel.asm	/^c0110461:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110464	obj/kernel.asm	/^c0110464:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110467	obj/kernel.asm	/^c0110467:	e8 dd fe ff ff       	call   c0110349 <vfs_set_curdir>$/;"	l
c011046c	obj/kernel.asm	/^c011046c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011046f	obj/kernel.asm	/^c011046f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110472	obj/kernel.asm	/^c0110472:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110475	obj/kernel.asm	/^c0110475:	e8 59 eb ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c011047a	obj/kernel.asm	/^c011047a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011047d	obj/kernel.asm	/^c011047d:	c9                   	leave  $/;"	l
c011047e	obj/kernel.asm	/^c011047e:	c3                   	ret    $/;"	l
c011047f	obj/kernel.asm	/^c011047f <vfs_getcwd>:$/;"	l
c011047f	obj/kernel.asm	/^c011047f:	55                   	push   %ebp$/;"	l
c0110480	obj/kernel.asm	/^c0110480:	89 e5                	mov    %esp,%ebp$/;"	l
c0110482	obj/kernel.asm	/^c0110482:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0110485	obj/kernel.asm	/^c0110485:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0110488	obj/kernel.asm	/^c0110488:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011048b	obj/kernel.asm	/^c011048b:	e8 84 fe ff ff       	call   c0110314 <vfs_get_curdir>$/;"	l
c0110490	obj/kernel.asm	/^c0110490:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110493	obj/kernel.asm	/^c0110493:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110497	obj/kernel.asm	/^c0110497:	74 08                	je     c01104a1 <vfs_getcwd+0x22>$/;"	l
c0110499	obj/kernel.asm	/^c0110499:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011049c	obj/kernel.asm	/^c011049c:	e9 3a 01 00 00       	jmp    c01105db <vfs_getcwd+0x15c>$/;"	l
c01104a1	obj/kernel.asm	/^c01104a1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01104a4	obj/kernel.asm	/^c01104a4:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01104a7	obj/kernel.asm	/^c01104a7:	85 c0                	test   %eax,%eax$/;"	l
c01104a9	obj/kernel.asm	/^c01104a9:	75 24                	jne    c01104cf <vfs_getcwd+0x50>$/;"	l
c01104ab	obj/kernel.asm	/^c01104ab:	c7 44 24 0c 23 8b 11 	movl   $0xc0118b23,0xc(%esp)$/;"	l
c01104b2	obj/kernel.asm	/^c01104b2:	c0 $/;"	l
c01104b3	obj/kernel.asm	/^c01104b3:	c7 44 24 08 f0 8a 11 	movl   $0xc0118af0,0x8(%esp)$/;"	l
c01104ba	obj/kernel.asm	/^c01104ba:	c0 $/;"	l
c01104bb	obj/kernel.asm	/^c01104bb:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
c01104c2	obj/kernel.asm	/^c01104c2:	00 $/;"	l
c01104c3	obj/kernel.asm	/^c01104c3:	c7 04 24 05 8b 11 c0 	movl   $0xc0118b05,(%esp)$/;"	l
c01104ca	obj/kernel.asm	/^c01104ca:	e8 f9 09 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01104cf	obj/kernel.asm	/^c01104cf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01104d2	obj/kernel.asm	/^c01104d2:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01104d5	obj/kernel.asm	/^c01104d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01104d8	obj/kernel.asm	/^c01104d8:	e8 4f f1 ff ff       	call   c010f62c <vfs_get_devname>$/;"	l
c01104dd	obj/kernel.asm	/^c01104dd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01104e0	obj/kernel.asm	/^c01104e0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01104e3	obj/kernel.asm	/^c01104e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01104e6	obj/kernel.asm	/^c01104e6:	e8 d8 4b 00 00       	call   c01150c3 <strlen>$/;"	l
c01104eb	obj/kernel.asm	/^c01104eb:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c01104f2	obj/kernel.asm	/^c01104f2:	00 $/;"	l
c01104f3	obj/kernel.asm	/^c01104f3:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c01104fa	obj/kernel.asm	/^c01104fa:	00 $/;"	l
c01104fb	obj/kernel.asm	/^c01104fb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01104ff	obj/kernel.asm	/^c01104ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110502	obj/kernel.asm	/^c0110502:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110506	obj/kernel.asm	/^c0110506:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110509	obj/kernel.asm	/^c0110509:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011050c	obj/kernel.asm	/^c011050c:	e8 61 ad ff ff       	call   c010b272 <iobuf_move>$/;"	l
c0110511	obj/kernel.asm	/^c0110511:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110514	obj/kernel.asm	/^c0110514:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110518	obj/kernel.asm	/^c0110518:	74 05                	je     c011051f <vfs_getcwd+0xa0>$/;"	l
c011051a	obj/kernel.asm	/^c011051a:	e9 ae 00 00 00       	jmp    c01105cd <vfs_getcwd+0x14e>$/;"	l
c011051f	obj/kernel.asm	/^c011051f:	c6 45 e7 3a          	movb   $0x3a,-0x19(%ebp)$/;"	l
c0110523	obj/kernel.asm	/^c0110523:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c011052a	obj/kernel.asm	/^c011052a:	00 $/;"	l
c011052b	obj/kernel.asm	/^c011052b:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0110532	obj/kernel.asm	/^c0110532:	00 $/;"	l
c0110533	obj/kernel.asm	/^c0110533:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c011053a	obj/kernel.asm	/^c011053a:	00 $/;"	l
c011053b	obj/kernel.asm	/^c011053b:	8d 45 e7             	lea    -0x19(%ebp),%eax$/;"	l
c011053e	obj/kernel.asm	/^c011053e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110542	obj/kernel.asm	/^c0110542:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110545	obj/kernel.asm	/^c0110545:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110548	obj/kernel.asm	/^c0110548:	e8 25 ad ff ff       	call   c010b272 <iobuf_move>$/;"	l
c011054d	obj/kernel.asm	/^c011054d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110550	obj/kernel.asm	/^c0110550:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110554	obj/kernel.asm	/^c0110554:	74 02                	je     c0110558 <vfs_getcwd+0xd9>$/;"	l
c0110556	obj/kernel.asm	/^c0110556:	eb 75                	jmp    c01105cd <vfs_getcwd+0x14e>$/;"	l
c0110558	obj/kernel.asm	/^c0110558:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011055b	obj/kernel.asm	/^c011055b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011055e	obj/kernel.asm	/^c011055e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110562	obj/kernel.asm	/^c0110562:	74 17                	je     c011057b <vfs_getcwd+0xfc>$/;"	l
c0110564	obj/kernel.asm	/^c0110564:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110567	obj/kernel.asm	/^c0110567:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011056a	obj/kernel.asm	/^c011056a:	85 c0                	test   %eax,%eax$/;"	l
c011056c	obj/kernel.asm	/^c011056c:	74 0d                	je     c011057b <vfs_getcwd+0xfc>$/;"	l
c011056e	obj/kernel.asm	/^c011056e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110571	obj/kernel.asm	/^c0110571:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110574	obj/kernel.asm	/^c0110574:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0110577	obj/kernel.asm	/^c0110577:	85 c0                	test   %eax,%eax$/;"	l
c0110579	obj/kernel.asm	/^c0110579:	75 24                	jne    c011059f <vfs_getcwd+0x120>$/;"	l
c011057b	obj/kernel.asm	/^c011057b:	c7 44 24 0c 38 8b 11 	movl   $0xc0118b38,0xc(%esp)$/;"	l
c0110582	obj/kernel.asm	/^c0110582:	c0 $/;"	l
c0110583	obj/kernel.asm	/^c0110583:	c7 44 24 08 f0 8a 11 	movl   $0xc0118af0,0x8(%esp)$/;"	l
c011058a	obj/kernel.asm	/^c011058a:	c0 $/;"	l
c011058b	obj/kernel.asm	/^c011058b:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
c0110592	obj/kernel.asm	/^c0110592:	00 $/;"	l
c0110593	obj/kernel.asm	/^c0110593:	c7 04 24 05 8b 11 c0 	movl   $0xc0118b05,(%esp)$/;"	l
c011059a	obj/kernel.asm	/^c011059a:	e8 29 09 ff ff       	call   c0100ec8 <__panic>$/;"	l
c011059f	obj/kernel.asm	/^c011059f:	c7 44 24 04 89 8b 11 	movl   $0xc0118b89,0x4(%esp)$/;"	l
c01105a6	obj/kernel.asm	/^c01105a6:	c0 $/;"	l
c01105a7	obj/kernel.asm	/^c01105a7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01105aa	obj/kernel.asm	/^c01105aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01105ad	obj/kernel.asm	/^c01105ad:	e8 0f ec ff ff       	call   c010f1c1 <inode_check>$/;"	l
c01105b2	obj/kernel.asm	/^c01105b2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01105b5	obj/kernel.asm	/^c01105b5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01105b8	obj/kernel.asm	/^c01105b8:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01105bb	obj/kernel.asm	/^c01105bb:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01105be	obj/kernel.asm	/^c01105be:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c01105c1	obj/kernel.asm	/^c01105c1:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01105c5	obj/kernel.asm	/^c01105c5:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01105c8	obj/kernel.asm	/^c01105c8:	ff d0                	call   *%eax$/;"	l
c01105ca	obj/kernel.asm	/^c01105ca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01105cd	obj/kernel.asm	/^c01105cd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01105d0	obj/kernel.asm	/^c01105d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01105d3	obj/kernel.asm	/^c01105d3:	e8 fb e9 ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c01105d8	obj/kernel.asm	/^c01105d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01105db	obj/kernel.asm	/^c01105db:	c9                   	leave  $/;"	l
c01105dc	obj/kernel.asm	/^c01105dc:	c3                   	ret    $/;"	l
c01105dd	obj/kernel.asm	/^c01105dd <dev_open>:$/;"	l
c01105dd	obj/kernel.asm	/^c01105dd:	55                   	push   %ebp$/;"	l
c01105de	obj/kernel.asm	/^c01105de:	89 e5                	mov    %esp,%ebp$/;"	l
c01105e0	obj/kernel.asm	/^c01105e0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01105e3	obj/kernel.asm	/^c01105e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01105e6	obj/kernel.asm	/^c01105e6:	83 e0 3c             	and    $0x3c,%eax$/;"	l
c01105e9	obj/kernel.asm	/^c01105e9:	85 c0                	test   %eax,%eax$/;"	l
c01105eb	obj/kernel.asm	/^c01105eb:	74 07                	je     c01105f4 <dev_open+0x17>$/;"	l
c01105ed	obj/kernel.asm	/^c01105ed:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01105f2	obj/kernel.asm	/^c01105f2:	eb 58                	jmp    c011064c <dev_open+0x6f>$/;"	l
c01105f4	obj/kernel.asm	/^c01105f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01105f7	obj/kernel.asm	/^c01105f7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01105fa	obj/kernel.asm	/^c01105fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01105fe	obj/kernel.asm	/^c01105fe:	74 0d                	je     c011060d <dev_open+0x30>$/;"	l
c0110600	obj/kernel.asm	/^c0110600:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110603	obj/kernel.asm	/^c0110603:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110606	obj/kernel.asm	/^c0110606:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011060b	obj/kernel.asm	/^c011060b:	74 24                	je     c0110631 <dev_open+0x54>$/;"	l
c011060d	obj/kernel.asm	/^c011060d:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c0110614	obj/kernel.asm	/^c0110614:	c0 $/;"	l
c0110615	obj/kernel.asm	/^c0110615:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c011061c	obj/kernel.asm	/^c011061c:	c0 $/;"	l
c011061d	obj/kernel.asm	/^c011061d:	c7 44 24 04 11 00 00 	movl   $0x11,0x4(%esp)$/;"	l
c0110624	obj/kernel.asm	/^c0110624:	00 $/;"	l
c0110625	obj/kernel.asm	/^c0110625:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c011062c	obj/kernel.asm	/^c011062c:	e8 97 08 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110631	obj/kernel.asm	/^c0110631:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110634	obj/kernel.asm	/^c0110634:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110637	obj/kernel.asm	/^c0110637:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011063a	obj/kernel.asm	/^c011063a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011063d	obj/kernel.asm	/^c011063d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110640	obj/kernel.asm	/^c0110640:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0110644	obj/kernel.asm	/^c0110644:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110647	obj/kernel.asm	/^c0110647:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011064a	obj/kernel.asm	/^c011064a:	ff d0                	call   *%eax$/;"	l
c011064c	obj/kernel.asm	/^c011064c:	c9                   	leave  $/;"	l
c011064d	obj/kernel.asm	/^c011064d:	c3                   	ret    $/;"	l
c011064e	obj/kernel.asm	/^c011064e <dev_close>:$/;"	l
c011064e	obj/kernel.asm	/^c011064e:	55                   	push   %ebp$/;"	l
c011064f	obj/kernel.asm	/^c011064f:	89 e5                	mov    %esp,%ebp$/;"	l
c0110651	obj/kernel.asm	/^c0110651:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110654	obj/kernel.asm	/^c0110654:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110657	obj/kernel.asm	/^c0110657:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011065a	obj/kernel.asm	/^c011065a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011065e	obj/kernel.asm	/^c011065e:	74 0d                	je     c011066d <dev_close+0x1f>$/;"	l
c0110660	obj/kernel.asm	/^c0110660:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110663	obj/kernel.asm	/^c0110663:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110666	obj/kernel.asm	/^c0110666:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011066b	obj/kernel.asm	/^c011066b:	74 24                	je     c0110691 <dev_close+0x43>$/;"	l
c011066d	obj/kernel.asm	/^c011066d:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c0110674	obj/kernel.asm	/^c0110674:	c0 $/;"	l
c0110675	obj/kernel.asm	/^c0110675:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c011067c	obj/kernel.asm	/^c011067c:	c0 $/;"	l
c011067d	obj/kernel.asm	/^c011067d:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
c0110684	obj/kernel.asm	/^c0110684:	00 $/;"	l
c0110685	obj/kernel.asm	/^c0110685:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c011068c	obj/kernel.asm	/^c011068c:	e8 37 08 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110691	obj/kernel.asm	/^c0110691:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110694	obj/kernel.asm	/^c0110694:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110697	obj/kernel.asm	/^c0110697:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011069a	obj/kernel.asm	/^c011069a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c011069d	obj/kernel.asm	/^c011069d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01106a0	obj/kernel.asm	/^c01106a0:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01106a3	obj/kernel.asm	/^c01106a3:	ff d0                	call   *%eax$/;"	l
c01106a5	obj/kernel.asm	/^c01106a5:	c9                   	leave  $/;"	l
c01106a6	obj/kernel.asm	/^c01106a6:	c3                   	ret    $/;"	l
c01106a7	obj/kernel.asm	/^c01106a7 <dev_read>:$/;"	l
c01106a7	obj/kernel.asm	/^c01106a7:	55                   	push   %ebp$/;"	l
c01106a8	obj/kernel.asm	/^c01106a8:	89 e5                	mov    %esp,%ebp$/;"	l
c01106aa	obj/kernel.asm	/^c01106aa:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01106ad	obj/kernel.asm	/^c01106ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01106b0	obj/kernel.asm	/^c01106b0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01106b3	obj/kernel.asm	/^c01106b3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01106b7	obj/kernel.asm	/^c01106b7:	74 0d                	je     c01106c6 <dev_read+0x1f>$/;"	l
c01106b9	obj/kernel.asm	/^c01106b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01106bc	obj/kernel.asm	/^c01106bc:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01106bf	obj/kernel.asm	/^c01106bf:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01106c4	obj/kernel.asm	/^c01106c4:	74 24                	je     c01106ea <dev_read+0x43>$/;"	l
c01106c6	obj/kernel.asm	/^c01106c6:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c01106cd	obj/kernel.asm	/^c01106cd:	c0 $/;"	l
c01106ce	obj/kernel.asm	/^c01106ce:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c01106d5	obj/kernel.asm	/^c01106d5:	c0 $/;"	l
c01106d6	obj/kernel.asm	/^c01106d6:	c7 44 24 04 23 00 00 	movl   $0x23,0x4(%esp)$/;"	l
c01106dd	obj/kernel.asm	/^c01106dd:	00 $/;"	l
c01106de	obj/kernel.asm	/^c01106de:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c01106e5	obj/kernel.asm	/^c01106e5:	e8 de 07 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01106ea	obj/kernel.asm	/^c01106ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01106ed	obj/kernel.asm	/^c01106ed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01106f0	obj/kernel.asm	/^c01106f0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01106f3	obj/kernel.asm	/^c01106f3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01106f6	obj/kernel.asm	/^c01106f6:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01106fd	obj/kernel.asm	/^c01106fd:	00 $/;"	l
c01106fe	obj/kernel.asm	/^c01106fe:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110701	obj/kernel.asm	/^c0110701:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0110705	obj/kernel.asm	/^c0110705:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110708	obj/kernel.asm	/^c0110708:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011070b	obj/kernel.asm	/^c011070b:	ff d0                	call   *%eax$/;"	l
c011070d	obj/kernel.asm	/^c011070d:	c9                   	leave  $/;"	l
c011070e	obj/kernel.asm	/^c011070e:	c3                   	ret    $/;"	l
c011070f	obj/kernel.asm	/^c011070f <dev_write>:$/;"	l
c011070f	obj/kernel.asm	/^c011070f:	55                   	push   %ebp$/;"	l
c0110710	obj/kernel.asm	/^c0110710:	89 e5                	mov    %esp,%ebp$/;"	l
c0110712	obj/kernel.asm	/^c0110712:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110715	obj/kernel.asm	/^c0110715:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110718	obj/kernel.asm	/^c0110718:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011071b	obj/kernel.asm	/^c011071b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011071f	obj/kernel.asm	/^c011071f:	74 0d                	je     c011072e <dev_write+0x1f>$/;"	l
c0110721	obj/kernel.asm	/^c0110721:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110724	obj/kernel.asm	/^c0110724:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110727	obj/kernel.asm	/^c0110727:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011072c	obj/kernel.asm	/^c011072c:	74 24                	je     c0110752 <dev_write+0x43>$/;"	l
c011072e	obj/kernel.asm	/^c011072e:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c0110735	obj/kernel.asm	/^c0110735:	c0 $/;"	l
c0110736	obj/kernel.asm	/^c0110736:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c011073d	obj/kernel.asm	/^c011073d:	c0 $/;"	l
c011073e	obj/kernel.asm	/^c011073e:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c0110745	obj/kernel.asm	/^c0110745:	00 $/;"	l
c0110746	obj/kernel.asm	/^c0110746:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c011074d	obj/kernel.asm	/^c011074d:	e8 76 07 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110752	obj/kernel.asm	/^c0110752:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110755	obj/kernel.asm	/^c0110755:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110758	obj/kernel.asm	/^c0110758:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011075b	obj/kernel.asm	/^c011075b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c011075e	obj/kernel.asm	/^c011075e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0110765	obj/kernel.asm	/^c0110765:	00 $/;"	l
c0110766	obj/kernel.asm	/^c0110766:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110769	obj/kernel.asm	/^c0110769:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011076d	obj/kernel.asm	/^c011076d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110770	obj/kernel.asm	/^c0110770:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110773	obj/kernel.asm	/^c0110773:	ff d0                	call   *%eax$/;"	l
c0110775	obj/kernel.asm	/^c0110775:	c9                   	leave  $/;"	l
c0110776	obj/kernel.asm	/^c0110776:	c3                   	ret    $/;"	l
c0110777	obj/kernel.asm	/^c0110777 <dev_ioctl>:$/;"	l
c0110777	obj/kernel.asm	/^c0110777:	55                   	push   %ebp$/;"	l
c0110778	obj/kernel.asm	/^c0110778:	89 e5                	mov    %esp,%ebp$/;"	l
c011077a	obj/kernel.asm	/^c011077a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011077d	obj/kernel.asm	/^c011077d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110780	obj/kernel.asm	/^c0110780:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110783	obj/kernel.asm	/^c0110783:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110787	obj/kernel.asm	/^c0110787:	74 0d                	je     c0110796 <dev_ioctl+0x1f>$/;"	l
c0110789	obj/kernel.asm	/^c0110789:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011078c	obj/kernel.asm	/^c011078c:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011078f	obj/kernel.asm	/^c011078f:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110794	obj/kernel.asm	/^c0110794:	74 24                	je     c01107ba <dev_ioctl+0x43>$/;"	l
c0110796	obj/kernel.asm	/^c0110796:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c011079d	obj/kernel.asm	/^c011079d:	c0 $/;"	l
c011079e	obj/kernel.asm	/^c011079e:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c01107a5	obj/kernel.asm	/^c01107a5:	c0 $/;"	l
c01107a6	obj/kernel.asm	/^c01107a6:	c7 44 24 04 35 00 00 	movl   $0x35,0x4(%esp)$/;"	l
c01107ad	obj/kernel.asm	/^c01107ad:	00 $/;"	l
c01107ae	obj/kernel.asm	/^c01107ae:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c01107b5	obj/kernel.asm	/^c01107b5:	e8 0e 07 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01107ba	obj/kernel.asm	/^c01107ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01107bd	obj/kernel.asm	/^c01107bd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01107c0	obj/kernel.asm	/^c01107c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01107c3	obj/kernel.asm	/^c01107c3:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01107c6	obj/kernel.asm	/^c01107c6:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01107c9	obj/kernel.asm	/^c01107c9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01107cd	obj/kernel.asm	/^c01107cd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01107d0	obj/kernel.asm	/^c01107d0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01107d4	obj/kernel.asm	/^c01107d4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01107d7	obj/kernel.asm	/^c01107d7:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01107da	obj/kernel.asm	/^c01107da:	ff d0                	call   *%eax$/;"	l
c01107dc	obj/kernel.asm	/^c01107dc:	c9                   	leave  $/;"	l
c01107dd	obj/kernel.asm	/^c01107dd:	c3                   	ret    $/;"	l
c01107de	obj/kernel.asm	/^c01107de <dev_fstat>:$/;"	l
c01107de	obj/kernel.asm	/^c01107de:	55                   	push   %ebp$/;"	l
c01107df	obj/kernel.asm	/^c01107df:	89 e5                	mov    %esp,%ebp$/;"	l
c01107e1	obj/kernel.asm	/^c01107e1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01107e4	obj/kernel.asm	/^c01107e4:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c01107eb	obj/kernel.asm	/^c01107eb:	00 $/;"	l
c01107ec	obj/kernel.asm	/^c01107ec:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01107f3	obj/kernel.asm	/^c01107f3:	00 $/;"	l
c01107f4	obj/kernel.asm	/^c01107f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01107f7	obj/kernel.asm	/^c01107f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01107fa	obj/kernel.asm	/^c01107fa:	e8 1a 4c 00 00       	call   c0115419 <memset>$/;"	l
c01107ff	obj/kernel.asm	/^c01107ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110802	obj/kernel.asm	/^c0110802:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110805	obj/kernel.asm	/^c0110805:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110809	obj/kernel.asm	/^c0110809:	74 17                	je     c0110822 <dev_fstat+0x44>$/;"	l
c011080b	obj/kernel.asm	/^c011080b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011080e	obj/kernel.asm	/^c011080e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110811	obj/kernel.asm	/^c0110811:	85 c0                	test   %eax,%eax$/;"	l
c0110813	obj/kernel.asm	/^c0110813:	74 0d                	je     c0110822 <dev_fstat+0x44>$/;"	l
c0110815	obj/kernel.asm	/^c0110815:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110818	obj/kernel.asm	/^c0110818:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011081b	obj/kernel.asm	/^c011081b:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c011081e	obj/kernel.asm	/^c011081e:	85 c0                	test   %eax,%eax$/;"	l
c0110820	obj/kernel.asm	/^c0110820:	75 24                	jne    c0110846 <dev_fstat+0x68>$/;"	l
c0110822	obj/kernel.asm	/^c0110822:	c7 44 24 0c fc 8b 11 	movl   $0xc0118bfc,0xc(%esp)$/;"	l
c0110829	obj/kernel.asm	/^c0110829:	c0 $/;"	l
c011082a	obj/kernel.asm	/^c011082a:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c0110831	obj/kernel.asm	/^c0110831:	c0 $/;"	l
c0110832	obj/kernel.asm	/^c0110832:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c0110839	obj/kernel.asm	/^c0110839:	00 $/;"	l
c011083a	obj/kernel.asm	/^c011083a:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c0110841	obj/kernel.asm	/^c0110841:	e8 82 06 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110846	obj/kernel.asm	/^c0110846:	c7 44 24 04 4c 8c 11 	movl   $0xc0118c4c,0x4(%esp)$/;"	l
c011084d	obj/kernel.asm	/^c011084d:	c0 $/;"	l
c011084e	obj/kernel.asm	/^c011084e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110851	obj/kernel.asm	/^c0110851:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110854	obj/kernel.asm	/^c0110854:	e8 68 e9 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c0110859	obj/kernel.asm	/^c0110859:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011085c	obj/kernel.asm	/^c011085c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011085f	obj/kernel.asm	/^c011085f:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0110862	obj/kernel.asm	/^c0110862:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110865	obj/kernel.asm	/^c0110865:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0110869	obj/kernel.asm	/^c0110869:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011086c	obj/kernel.asm	/^c011086c:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011086f	obj/kernel.asm	/^c011086f:	ff d0                	call   *%eax$/;"	l
c0110871	obj/kernel.asm	/^c0110871:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110874	obj/kernel.asm	/^c0110874:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110878	obj/kernel.asm	/^c0110878:	74 05                	je     c011087f <dev_fstat+0xa1>$/;"	l
c011087a	obj/kernel.asm	/^c011087a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011087d	obj/kernel.asm	/^c011087d:	eb 72                	jmp    c01108f1 <dev_fstat+0x113>$/;"	l
c011087f	obj/kernel.asm	/^c011087f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110882	obj/kernel.asm	/^c0110882:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110885	obj/kernel.asm	/^c0110885:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110889	obj/kernel.asm	/^c0110889:	74 0d                	je     c0110898 <dev_fstat+0xba>$/;"	l
c011088b	obj/kernel.asm	/^c011088b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011088e	obj/kernel.asm	/^c011088e:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110891	obj/kernel.asm	/^c0110891:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110896	obj/kernel.asm	/^c0110896:	74 24                	je     c01108bc <dev_fstat+0xde>$/;"	l
c0110898	obj/kernel.asm	/^c0110898:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c011089f	obj/kernel.asm	/^c011089f:	c0 $/;"	l
c01108a0	obj/kernel.asm	/^c01108a0:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c01108a7	obj/kernel.asm	/^c01108a7:	c0 $/;"	l
c01108a8	obj/kernel.asm	/^c01108a8:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c01108af	obj/kernel.asm	/^c01108af:	00 $/;"	l
c01108b0	obj/kernel.asm	/^c01108b0:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c01108b7	obj/kernel.asm	/^c01108b7:	e8 0c 06 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01108bc	obj/kernel.asm	/^c01108bc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01108bf	obj/kernel.asm	/^c01108bf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01108c2	obj/kernel.asm	/^c01108c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01108c5	obj/kernel.asm	/^c01108c5:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c01108cc	obj/kernel.asm	/^c01108cc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01108cf	obj/kernel.asm	/^c01108cf:	8b 10                	mov    (%eax),%edx$/;"	l
c01108d1	obj/kernel.asm	/^c01108d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01108d4	obj/kernel.asm	/^c01108d4:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01108d7	obj/kernel.asm	/^c01108d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01108da	obj/kernel.asm	/^c01108da:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01108dd	obj/kernel.asm	/^c01108dd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01108e0	obj/kernel.asm	/^c01108e0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01108e3	obj/kernel.asm	/^c01108e3:	0f af d0             	imul   %eax,%edx$/;"	l
c01108e6	obj/kernel.asm	/^c01108e6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01108e9	obj/kernel.asm	/^c01108e9:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01108ec	obj/kernel.asm	/^c01108ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01108f1	obj/kernel.asm	/^c01108f1:	c9                   	leave  $/;"	l
c01108f2	obj/kernel.asm	/^c01108f2:	c3                   	ret    $/;"	l
c01108f3	obj/kernel.asm	/^c01108f3 <dev_gettype>:$/;"	l
c01108f3	obj/kernel.asm	/^c01108f3:	55                   	push   %ebp$/;"	l
c01108f4	obj/kernel.asm	/^c01108f4:	89 e5                	mov    %esp,%ebp$/;"	l
c01108f6	obj/kernel.asm	/^c01108f6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01108f9	obj/kernel.asm	/^c01108f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01108fc	obj/kernel.asm	/^c01108fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01108ff	obj/kernel.asm	/^c01108ff:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110903	obj/kernel.asm	/^c0110903:	74 0d                	je     c0110912 <dev_gettype+0x1f>$/;"	l
c0110905	obj/kernel.asm	/^c0110905:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110908	obj/kernel.asm	/^c0110908:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011090b	obj/kernel.asm	/^c011090b:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110910	obj/kernel.asm	/^c0110910:	74 24                	je     c0110936 <dev_gettype+0x43>$/;"	l
c0110912	obj/kernel.asm	/^c0110912:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c0110919	obj/kernel.asm	/^c0110919:	c0 $/;"	l
c011091a	obj/kernel.asm	/^c011091a:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c0110921	obj/kernel.asm	/^c0110921:	c0 $/;"	l
c0110922	obj/kernel.asm	/^c0110922:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c0110929	obj/kernel.asm	/^c0110929:	00 $/;"	l
c011092a	obj/kernel.asm	/^c011092a:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c0110931	obj/kernel.asm	/^c0110931:	e8 92 05 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110936	obj/kernel.asm	/^c0110936:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110939	obj/kernel.asm	/^c0110939:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011093c	obj/kernel.asm	/^c011093c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011093f	obj/kernel.asm	/^c011093f:	8b 00                	mov    (%eax),%eax$/;"	l
c0110941	obj/kernel.asm	/^c0110941:	85 c0                	test   %eax,%eax$/;"	l
c0110943	obj/kernel.asm	/^c0110943:	74 07                	je     c011094c <dev_gettype+0x59>$/;"	l
c0110945	obj/kernel.asm	/^c0110945:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c011094a	obj/kernel.asm	/^c011094a:	eb 05                	jmp    c0110951 <dev_gettype+0x5e>$/;"	l
c011094c	obj/kernel.asm	/^c011094c:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0110951	obj/kernel.asm	/^c0110951:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110954	obj/kernel.asm	/^c0110954:	89 02                	mov    %eax,(%edx)$/;"	l
c0110956	obj/kernel.asm	/^c0110956:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011095b	obj/kernel.asm	/^c011095b:	c9                   	leave  $/;"	l
c011095c	obj/kernel.asm	/^c011095c:	c3                   	ret    $/;"	l
c011095d	obj/kernel.asm	/^c011095d <dev_tryseek>:$/;"	l
c011095d	obj/kernel.asm	/^c011095d:	55                   	push   %ebp$/;"	l
c011095e	obj/kernel.asm	/^c011095e:	89 e5                	mov    %esp,%ebp$/;"	l
c0110960	obj/kernel.asm	/^c0110960:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110963	obj/kernel.asm	/^c0110963:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110966	obj/kernel.asm	/^c0110966:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110969	obj/kernel.asm	/^c0110969:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011096d	obj/kernel.asm	/^c011096d:	74 0d                	je     c011097c <dev_tryseek+0x1f>$/;"	l
c011096f	obj/kernel.asm	/^c011096f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110972	obj/kernel.asm	/^c0110972:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110975	obj/kernel.asm	/^c0110975:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011097a	obj/kernel.asm	/^c011097a:	74 24                	je     c01109a0 <dev_tryseek+0x43>$/;"	l
c011097c	obj/kernel.asm	/^c011097c:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c0110983	obj/kernel.asm	/^c0110983:	c0 $/;"	l
c0110984	obj/kernel.asm	/^c0110984:	c7 44 24 08 d3 8b 11 	movl   $0xc0118bd3,0x8(%esp)$/;"	l
c011098b	obj/kernel.asm	/^c011098b:	c0 $/;"	l
c011098c	obj/kernel.asm	/^c011098c:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c0110993	obj/kernel.asm	/^c0110993:	00 $/;"	l
c0110994	obj/kernel.asm	/^c0110994:	c7 04 24 e8 8b 11 c0 	movl   $0xc0118be8,(%esp)$/;"	l
c011099b	obj/kernel.asm	/^c011099b:	e8 28 05 ff ff       	call   c0100ec8 <__panic>$/;"	l
c01109a0	obj/kernel.asm	/^c01109a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01109a3	obj/kernel.asm	/^c01109a3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01109a6	obj/kernel.asm	/^c01109a6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01109a9	obj/kernel.asm	/^c01109a9:	8b 00                	mov    (%eax),%eax$/;"	l
c01109ab	obj/kernel.asm	/^c01109ab:	85 c0                	test   %eax,%eax$/;"	l
c01109ad	obj/kernel.asm	/^c01109ad:	74 38                	je     c01109e7 <dev_tryseek+0x8a>$/;"	l
c01109af	obj/kernel.asm	/^c01109af:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01109b2	obj/kernel.asm	/^c01109b2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01109b5	obj/kernel.asm	/^c01109b5:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c01109b8	obj/kernel.asm	/^c01109b8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01109bd	obj/kernel.asm	/^c01109bd:	f7 f1                	div    %ecx$/;"	l
c01109bf	obj/kernel.asm	/^c01109bf:	89 d0                	mov    %edx,%eax$/;"	l
c01109c1	obj/kernel.asm	/^c01109c1:	85 c0                	test   %eax,%eax$/;"	l
c01109c3	obj/kernel.asm	/^c01109c3:	75 22                	jne    c01109e7 <dev_tryseek+0x8a>$/;"	l
c01109c5	obj/kernel.asm	/^c01109c5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01109c9	obj/kernel.asm	/^c01109c9:	78 1c                	js     c01109e7 <dev_tryseek+0x8a>$/;"	l
c01109cb	obj/kernel.asm	/^c01109cb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01109ce	obj/kernel.asm	/^c01109ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01109d1	obj/kernel.asm	/^c01109d1:	8b 08                	mov    (%eax),%ecx$/;"	l
c01109d3	obj/kernel.asm	/^c01109d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01109d6	obj/kernel.asm	/^c01109d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01109d9	obj/kernel.asm	/^c01109d9:	0f af c1             	imul   %ecx,%eax$/;"	l
c01109dc	obj/kernel.asm	/^c01109dc:	39 c2                	cmp    %eax,%edx$/;"	l
c01109de	obj/kernel.asm	/^c01109de:	73 07                	jae    c01109e7 <dev_tryseek+0x8a>$/;"	l
c01109e0	obj/kernel.asm	/^c01109e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01109e5	obj/kernel.asm	/^c01109e5:	eb 05                	jmp    c01109ec <dev_tryseek+0x8f>$/;"	l
c01109e7	obj/kernel.asm	/^c01109e7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01109ec	obj/kernel.asm	/^c01109ec:	c9                   	leave  $/;"	l
c01109ed	obj/kernel.asm	/^c01109ed:	c3                   	ret    $/;"	l
c01109ee	obj/kernel.asm	/^c01109ee <dev_lookup>:$/;"	l
c01109ee	obj/kernel.asm	/^c01109ee:	55                   	push   %ebp$/;"	l
c01109ef	obj/kernel.asm	/^c01109ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01109f1	obj/kernel.asm	/^c01109f1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01109f4	obj/kernel.asm	/^c01109f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01109f7	obj/kernel.asm	/^c01109f7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01109fa	obj/kernel.asm	/^c01109fa:	84 c0                	test   %al,%al$/;"	l
c01109fc	obj/kernel.asm	/^c01109fc:	74 07                	je     c0110a05 <dev_lookup+0x17>$/;"	l
c01109fe	obj/kernel.asm	/^c01109fe:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0110a03	obj/kernel.asm	/^c0110a03:	eb 18                	jmp    c0110a1d <dev_lookup+0x2f>$/;"	l
c0110a05	obj/kernel.asm	/^c0110a05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a08	obj/kernel.asm	/^c0110a08:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110a0b	obj/kernel.asm	/^c0110a0b:	e8 a9 e5 ff ff       	call   c010efb9 <inode_ref_inc>$/;"	l
c0110a10	obj/kernel.asm	/^c0110a10:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110a13	obj/kernel.asm	/^c0110a13:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110a16	obj/kernel.asm	/^c0110a16:	89 10                	mov    %edx,(%eax)$/;"	l
c0110a18	obj/kernel.asm	/^c0110a18:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110a1d	obj/kernel.asm	/^c0110a1d:	c9                   	leave  $/;"	l
c0110a1e	obj/kernel.asm	/^c0110a1e:	c3                   	ret    $/;"	l
c0110a1f	obj/kernel.asm	/^c0110a1f <dev_init>:$/;"	l
c0110a1f	obj/kernel.asm	/^c0110a1f:	55                   	push   %ebp$/;"	l
c0110a20	obj/kernel.asm	/^c0110a20:	89 e5                	mov    %esp,%ebp$/;"	l
c0110a22	obj/kernel.asm	/^c0110a22:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110a25	obj/kernel.asm	/^c0110a25:	e8 8f 07 00 00       	call   c01111b9 <dev_init_stdin>$/;"	l
c0110a2a	obj/kernel.asm	/^c0110a2a:	e8 0a 09 00 00       	call   c0111339 <dev_init_stdout>$/;"	l
c0110a2f	obj/kernel.asm	/^c0110a2f:	e8 26 04 00 00       	call   c0110e5a <dev_init_disk0>$/;"	l
c0110a34	obj/kernel.asm	/^c0110a34:	c9                   	leave  $/;"	l
c0110a35	obj/kernel.asm	/^c0110a35:	c3                   	ret    $/;"	l
c0110a36	obj/kernel.asm	/^c0110a36 <dev_create_inode>:$/;"	l
c0110a36	obj/kernel.asm	/^c0110a36:	55                   	push   %ebp$/;"	l
c0110a37	obj/kernel.asm	/^c0110a37:	89 e5                	mov    %esp,%ebp$/;"	l
c0110a39	obj/kernel.asm	/^c0110a39:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110a3c	obj/kernel.asm	/^c0110a3c:	c7 04 24 34 12 00 00 	movl   $0x1234,(%esp)$/;"	l
c0110a43	obj/kernel.asm	/^c0110a43:	e8 96 e4 ff ff       	call   c010eede <__alloc_inode>$/;"	l
c0110a48	obj/kernel.asm	/^c0110a48:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110a4b	obj/kernel.asm	/^c0110a4b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110a4f	obj/kernel.asm	/^c0110a4f:	74 1b                	je     c0110a6c <dev_create_inode+0x36>$/;"	l
c0110a51	obj/kernel.asm	/^c0110a51:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0110a58	obj/kernel.asm	/^c0110a58:	00 $/;"	l
c0110a59	obj/kernel.asm	/^c0110a59:	c7 44 24 04 60 8c 11 	movl   $0xc0118c60,0x4(%esp)$/;"	l
c0110a60	obj/kernel.asm	/^c0110a60:	c0 $/;"	l
c0110a61	obj/kernel.asm	/^c0110a61:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110a64	obj/kernel.asm	/^c0110a64:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110a67	obj/kernel.asm	/^c0110a67:	e8 9b e4 ff ff       	call   c010ef07 <inode_init>$/;"	l
c0110a6c	obj/kernel.asm	/^c0110a6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110a6f	obj/kernel.asm	/^c0110a6f:	c9                   	leave  $/;"	l
c0110a70	obj/kernel.asm	/^c0110a70:	c3                   	ret    $/;"	l
c0110a71	obj/kernel.asm	/^c0110a71 <lock_disk0>:$/;"	l
c0110a71	obj/kernel.asm	/^c0110a71:	55                   	push   %ebp$/;"	l
c0110a72	obj/kernel.asm	/^c0110a72:	89 e5                	mov    %esp,%ebp$/;"	l
c0110a74	obj/kernel.asm	/^c0110a74:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110a77	obj/kernel.asm	/^c0110a77:	c7 04 24 e0 1f 15 c0 	movl   $0xc0151fe0,(%esp)$/;"	l
c0110a7e	obj/kernel.asm	/^c0110a7e:	e8 7a 91 ff ff       	call   c0109bfd <down>$/;"	l
c0110a83	obj/kernel.asm	/^c0110a83:	c9                   	leave  $/;"	l
c0110a84	obj/kernel.asm	/^c0110a84:	c3                   	ret    $/;"	l
c0110a85	obj/kernel.asm	/^c0110a85 <unlock_disk0>:$/;"	l
c0110a85	obj/kernel.asm	/^c0110a85:	55                   	push   %ebp$/;"	l
c0110a86	obj/kernel.asm	/^c0110a86:	89 e5                	mov    %esp,%ebp$/;"	l
c0110a88	obj/kernel.asm	/^c0110a88:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110a8b	obj/kernel.asm	/^c0110a8b:	c7 04 24 e0 1f 15 c0 	movl   $0xc0151fe0,(%esp)$/;"	l
c0110a92	obj/kernel.asm	/^c0110a92:	e8 4b 91 ff ff       	call   c0109be2 <up>$/;"	l
c0110a97	obj/kernel.asm	/^c0110a97:	c9                   	leave  $/;"	l
c0110a98	obj/kernel.asm	/^c0110a98:	c3                   	ret    $/;"	l
c0110a99	obj/kernel.asm	/^c0110a99 <disk0_open>:$/;"	l
c0110a99	obj/kernel.asm	/^c0110a99:	55                   	push   %ebp$/;"	l
c0110a9a	obj/kernel.asm	/^c0110a9a:	89 e5                	mov    %esp,%ebp$/;"	l
c0110a9c	obj/kernel.asm	/^c0110a9c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110aa1	obj/kernel.asm	/^c0110aa1:	5d                   	pop    %ebp$/;"	l
c0110aa2	obj/kernel.asm	/^c0110aa2:	c3                   	ret    $/;"	l
c0110aa3	obj/kernel.asm	/^c0110aa3 <disk0_close>:$/;"	l
c0110aa3	obj/kernel.asm	/^c0110aa3:	55                   	push   %ebp$/;"	l
c0110aa4	obj/kernel.asm	/^c0110aa4:	89 e5                	mov    %esp,%ebp$/;"	l
c0110aa6	obj/kernel.asm	/^c0110aa6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110aab	obj/kernel.asm	/^c0110aab:	5d                   	pop    %ebp$/;"	l
c0110aac	obj/kernel.asm	/^c0110aac:	c3                   	ret    $/;"	l
c0110aad	obj/kernel.asm	/^c0110aad <disk0_read_blks_nolock>:$/;"	l
c0110aad	obj/kernel.asm	/^c0110aad:	55                   	push   %ebp$/;"	l
c0110aae	obj/kernel.asm	/^c0110aae:	89 e5                	mov    %esp,%ebp$/;"	l
c0110ab0	obj/kernel.asm	/^c0110ab0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0110ab3	obj/kernel.asm	/^c0110ab3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ab6	obj/kernel.asm	/^c0110ab6:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110ab9	obj/kernel.asm	/^c0110ab9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110abc	obj/kernel.asm	/^c0110abc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110abf	obj/kernel.asm	/^c0110abf:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110ac2	obj/kernel.asm	/^c0110ac2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110ac5	obj/kernel.asm	/^c0110ac5:	a1 dc 1f 15 c0       	mov    0xc0151fdc,%eax$/;"	l
c0110aca	obj/kernel.asm	/^c0110aca:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110acd	obj/kernel.asm	/^c0110acd:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0110ad1	obj/kernel.asm	/^c0110ad1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0110ad5	obj/kernel.asm	/^c0110ad5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110ad8	obj/kernel.asm	/^c0110ad8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110adc	obj/kernel.asm	/^c0110adc:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0110ae3	obj/kernel.asm	/^c0110ae3:	e8 b8 11 ff ff       	call   c0101ca0 <ide_read_secs>$/;"	l
c0110ae8	obj/kernel.asm	/^c0110ae8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110aeb	obj/kernel.asm	/^c0110aeb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110aef	obj/kernel.asm	/^c0110aef:	74 3f                	je     c0110b30 <disk0_read_blks_nolock+0x83>$/;"	l
c0110af1	obj/kernel.asm	/^c0110af1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110af4	obj/kernel.asm	/^c0110af4:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c0110af8	obj/kernel.asm	/^c0110af8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110afb	obj/kernel.asm	/^c0110afb:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
c0110aff	obj/kernel.asm	/^c0110aff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110b02	obj/kernel.asm	/^c0110b02:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0110b06	obj/kernel.asm	/^c0110b06:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110b09	obj/kernel.asm	/^c0110b09:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0110b0d	obj/kernel.asm	/^c0110b0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110b10	obj/kernel.asm	/^c0110b10:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0110b14	obj/kernel.asm	/^c0110b14:	c7 44 24 08 a0 8c 11 	movl   $0xc0118ca0,0x8(%esp)$/;"	l
c0110b1b	obj/kernel.asm	/^c0110b1b:	c0 $/;"	l
c0110b1c	obj/kernel.asm	/^c0110b1c:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
c0110b23	obj/kernel.asm	/^c0110b23:	00 $/;"	l
c0110b24	obj/kernel.asm	/^c0110b24:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110b2b	obj/kernel.asm	/^c0110b2b:	e8 98 03 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110b30	obj/kernel.asm	/^c0110b30:	c9                   	leave  $/;"	l
c0110b31	obj/kernel.asm	/^c0110b31:	c3                   	ret    $/;"	l
c0110b32	obj/kernel.asm	/^c0110b32 <disk0_write_blks_nolock>:$/;"	l
c0110b32	obj/kernel.asm	/^c0110b32:	55                   	push   %ebp$/;"	l
c0110b33	obj/kernel.asm	/^c0110b33:	89 e5                	mov    %esp,%ebp$/;"	l
c0110b35	obj/kernel.asm	/^c0110b35:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0110b38	obj/kernel.asm	/^c0110b38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110b3b	obj/kernel.asm	/^c0110b3b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110b3e	obj/kernel.asm	/^c0110b3e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110b41	obj/kernel.asm	/^c0110b41:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110b44	obj/kernel.asm	/^c0110b44:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110b47	obj/kernel.asm	/^c0110b47:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110b4a	obj/kernel.asm	/^c0110b4a:	a1 dc 1f 15 c0       	mov    0xc0151fdc,%eax$/;"	l
c0110b4f	obj/kernel.asm	/^c0110b4f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110b52	obj/kernel.asm	/^c0110b52:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0110b56	obj/kernel.asm	/^c0110b56:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0110b5a	obj/kernel.asm	/^c0110b5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110b5d	obj/kernel.asm	/^c0110b5d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110b61	obj/kernel.asm	/^c0110b61:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0110b68	obj/kernel.asm	/^c0110b68:	e8 75 13 ff ff       	call   c0101ee2 <ide_write_secs>$/;"	l
c0110b6d	obj/kernel.asm	/^c0110b6d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110b70	obj/kernel.asm	/^c0110b70:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110b74	obj/kernel.asm	/^c0110b74:	74 3f                	je     c0110bb5 <disk0_write_blks_nolock+0x83>$/;"	l
c0110b76	obj/kernel.asm	/^c0110b76:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110b79	obj/kernel.asm	/^c0110b79:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c0110b7d	obj/kernel.asm	/^c0110b7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110b80	obj/kernel.asm	/^c0110b80:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
c0110b84	obj/kernel.asm	/^c0110b84:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110b87	obj/kernel.asm	/^c0110b87:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0110b8b	obj/kernel.asm	/^c0110b8b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110b8e	obj/kernel.asm	/^c0110b8e:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0110b92	obj/kernel.asm	/^c0110b92:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110b95	obj/kernel.asm	/^c0110b95:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0110b99	obj/kernel.asm	/^c0110b99:	c7 44 24 08 04 8d 11 	movl   $0xc0118d04,0x8(%esp)$/;"	l
c0110ba0	obj/kernel.asm	/^c0110ba0:	c0 $/;"	l
c0110ba1	obj/kernel.asm	/^c0110ba1:	c7 44 24 04 38 00 00 	movl   $0x38,0x4(%esp)$/;"	l
c0110ba8	obj/kernel.asm	/^c0110ba8:	00 $/;"	l
c0110ba9	obj/kernel.asm	/^c0110ba9:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110bb0	obj/kernel.asm	/^c0110bb0:	e8 13 03 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110bb5	obj/kernel.asm	/^c0110bb5:	c9                   	leave  $/;"	l
c0110bb6	obj/kernel.asm	/^c0110bb6:	c3                   	ret    $/;"	l
c0110bb7	obj/kernel.asm	/^c0110bb7 <disk0_io>:$/;"	l
c0110bb7	obj/kernel.asm	/^c0110bb7:	55                   	push   %ebp$/;"	l
c0110bb8	obj/kernel.asm	/^c0110bb8:	89 e5                	mov    %esp,%ebp$/;"	l
c0110bba	obj/kernel.asm	/^c0110bba:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0110bbd	obj/kernel.asm	/^c0110bbd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110bc0	obj/kernel.asm	/^c0110bc0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110bc3	obj/kernel.asm	/^c0110bc3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0110bc6	obj/kernel.asm	/^c0110bc6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110bc9	obj/kernel.asm	/^c0110bc9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0110bcc	obj/kernel.asm	/^c0110bcc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110bcf	obj/kernel.asm	/^c0110bcf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110bd2	obj/kernel.asm	/^c0110bd2:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0110bd8	obj/kernel.asm	/^c0110bd8:	85 c0                	test   %eax,%eax$/;"	l
c0110bda	obj/kernel.asm	/^c0110bda:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0110bdd	obj/kernel.asm	/^c0110bdd:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c0110be0	obj/kernel.asm	/^c0110be0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110be3	obj/kernel.asm	/^c0110be3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110be6	obj/kernel.asm	/^c0110be6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0110be9	obj/kernel.asm	/^c0110be9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110bec	obj/kernel.asm	/^c0110bec:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110bef	obj/kernel.asm	/^c0110bef:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110bf4	obj/kernel.asm	/^c0110bf4:	85 c0                	test   %eax,%eax$/;"	l
c0110bf6	obj/kernel.asm	/^c0110bf6:	75 0c                	jne    c0110c04 <disk0_io+0x4d>$/;"	l
c0110bf8	obj/kernel.asm	/^c0110bf8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110bfb	obj/kernel.asm	/^c0110bfb:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110c00	obj/kernel.asm	/^c0110c00:	85 c0                	test   %eax,%eax$/;"	l
c0110c02	obj/kernel.asm	/^c0110c02:	74 0a                	je     c0110c0e <disk0_io+0x57>$/;"	l
c0110c04	obj/kernel.asm	/^c0110c04:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0110c09	obj/kernel.asm	/^c0110c09:	e9 7a 01 00 00       	jmp    c0110d88 <disk0_io+0x1d1>$/;"	l
c0110c0e	obj/kernel.asm	/^c0110c0e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110c11	obj/kernel.asm	/^c0110c11:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110c14	obj/kernel.asm	/^c0110c14:	01 c2                	add    %eax,%edx$/;"	l
c0110c16	obj/kernel.asm	/^c0110c16:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110c19	obj/kernel.asm	/^c0110c19:	8b 00                	mov    (%eax),%eax$/;"	l
c0110c1b	obj/kernel.asm	/^c0110c1b:	39 c2                	cmp    %eax,%edx$/;"	l
c0110c1d	obj/kernel.asm	/^c0110c1d:	76 0a                	jbe    c0110c29 <disk0_io+0x72>$/;"	l
c0110c1f	obj/kernel.asm	/^c0110c1f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0110c24	obj/kernel.asm	/^c0110c24:	e9 5f 01 00 00       	jmp    c0110d88 <disk0_io+0x1d1>$/;"	l
c0110c29	obj/kernel.asm	/^c0110c29:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110c2d	obj/kernel.asm	/^c0110c2d:	75 0a                	jne    c0110c39 <disk0_io+0x82>$/;"	l
c0110c2f	obj/kernel.asm	/^c0110c2f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110c34	obj/kernel.asm	/^c0110c34:	e9 4f 01 00 00       	jmp    c0110d88 <disk0_io+0x1d1>$/;"	l
c0110c39	obj/kernel.asm	/^c0110c39:	e8 33 fe ff ff       	call   c0110a71 <lock_disk0>$/;"	l
c0110c3e	obj/kernel.asm	/^c0110c3e:	e9 31 01 00 00       	jmp    c0110d74 <disk0_io+0x1bd>$/;"	l
c0110c43	obj/kernel.asm	/^c0110c43:	c7 45 e8 00 40 00 00 	movl   $0x4000,-0x18(%ebp)$/;"	l
c0110c4a	obj/kernel.asm	/^c0110c4a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0110c4e	obj/kernel.asm	/^c0110c4e:	0f 84 89 00 00 00    	je     c0110cdd <disk0_io+0x126>$/;"	l
c0110c54	obj/kernel.asm	/^c0110c54:	a1 dc 1f 15 c0       	mov    0xc0151fdc,%eax$/;"	l
c0110c59	obj/kernel.asm	/^c0110c59:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c0110c5c	obj/kernel.asm	/^c0110c5c:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0110c60	obj/kernel.asm	/^c0110c60:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0110c67	obj/kernel.asm	/^c0110c67:	00 $/;"	l
c0110c68	obj/kernel.asm	/^c0110c68:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110c6b	obj/kernel.asm	/^c0110c6b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0110c6f	obj/kernel.asm	/^c0110c6f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110c73	obj/kernel.asm	/^c0110c73:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110c76	obj/kernel.asm	/^c0110c76:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110c79	obj/kernel.asm	/^c0110c79:	e8 f4 a5 ff ff       	call   c010b272 <iobuf_move>$/;"	l
c0110c7e	obj/kernel.asm	/^c0110c7e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c81	obj/kernel.asm	/^c0110c81:	85 c0                	test   %eax,%eax$/;"	l
c0110c83	obj/kernel.asm	/^c0110c83:	74 14                	je     c0110c99 <disk0_io+0xe2>$/;"	l
c0110c85	obj/kernel.asm	/^c0110c85:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c88	obj/kernel.asm	/^c0110c88:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0110c8b	obj/kernel.asm	/^c0110c8b:	77 0c                	ja     c0110c99 <disk0_io+0xe2>$/;"	l
c0110c8d	obj/kernel.asm	/^c0110c8d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c90	obj/kernel.asm	/^c0110c90:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110c95	obj/kernel.asm	/^c0110c95:	85 c0                	test   %eax,%eax$/;"	l
c0110c97	obj/kernel.asm	/^c0110c97:	74 24                	je     c0110cbd <disk0_io+0x106>$/;"	l
c0110c99	obj/kernel.asm	/^c0110c99:	c7 44 24 0c 50 8d 11 	movl   $0xc0118d50,0xc(%esp)$/;"	l
c0110ca0	obj/kernel.asm	/^c0110ca0:	c0 $/;"	l
c0110ca1	obj/kernel.asm	/^c0110ca1:	c7 44 24 08 8e 8d 11 	movl   $0xc0118d8e,0x8(%esp)$/;"	l
c0110ca8	obj/kernel.asm	/^c0110ca8:	c0 $/;"	l
c0110ca9	obj/kernel.asm	/^c0110ca9:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
c0110cb0	obj/kernel.asm	/^c0110cb0:	00 $/;"	l
c0110cb1	obj/kernel.asm	/^c0110cb1:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110cb8	obj/kernel.asm	/^c0110cb8:	e8 0b 02 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110cbd	obj/kernel.asm	/^c0110cbd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110cc0	obj/kernel.asm	/^c0110cc0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0110cc3	obj/kernel.asm	/^c0110cc3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110cc6	obj/kernel.asm	/^c0110cc6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110cc9	obj/kernel.asm	/^c0110cc9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110ccd	obj/kernel.asm	/^c0110ccd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110cd0	obj/kernel.asm	/^c0110cd0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110cd3	obj/kernel.asm	/^c0110cd3:	e8 5a fe ff ff       	call   c0110b32 <disk0_write_blks_nolock>$/;"	l
c0110cd8	obj/kernel.asm	/^c0110cd8:	e9 8b 00 00 00       	jmp    c0110d68 <disk0_io+0x1b1>$/;"	l
c0110cdd	obj/kernel.asm	/^c0110cdd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110ce0	obj/kernel.asm	/^c0110ce0:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0110ce3	obj/kernel.asm	/^c0110ce3:	76 06                	jbe    c0110ceb <disk0_io+0x134>$/;"	l
c0110ce5	obj/kernel.asm	/^c0110ce5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110ce8	obj/kernel.asm	/^c0110ce8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110ceb	obj/kernel.asm	/^c0110ceb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110cee	obj/kernel.asm	/^c0110cee:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0110cf1	obj/kernel.asm	/^c0110cf1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110cf4	obj/kernel.asm	/^c0110cf4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110cf7	obj/kernel.asm	/^c0110cf7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110cfb	obj/kernel.asm	/^c0110cfb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110cfe	obj/kernel.asm	/^c0110cfe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110d01	obj/kernel.asm	/^c0110d01:	e8 a7 fd ff ff       	call   c0110aad <disk0_read_blks_nolock>$/;"	l
c0110d06	obj/kernel.asm	/^c0110d06:	a1 dc 1f 15 c0       	mov    0xc0151fdc,%eax$/;"	l
c0110d0b	obj/kernel.asm	/^c0110d0b:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c0110d0e	obj/kernel.asm	/^c0110d0e:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0110d12	obj/kernel.asm	/^c0110d12:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0110d19	obj/kernel.asm	/^c0110d19:	00 $/;"	l
c0110d1a	obj/kernel.asm	/^c0110d1a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110d1d	obj/kernel.asm	/^c0110d1d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0110d21	obj/kernel.asm	/^c0110d21:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110d25	obj/kernel.asm	/^c0110d25:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110d28	obj/kernel.asm	/^c0110d28:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110d2b	obj/kernel.asm	/^c0110d2b:	e8 42 a5 ff ff       	call   c010b272 <iobuf_move>$/;"	l
c0110d30	obj/kernel.asm	/^c0110d30:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110d33	obj/kernel.asm	/^c0110d33:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0110d36	obj/kernel.asm	/^c0110d36:	75 0c                	jne    c0110d44 <disk0_io+0x18d>$/;"	l
c0110d38	obj/kernel.asm	/^c0110d38:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110d3b	obj/kernel.asm	/^c0110d3b:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110d40	obj/kernel.asm	/^c0110d40:	85 c0                	test   %eax,%eax$/;"	l
c0110d42	obj/kernel.asm	/^c0110d42:	74 24                	je     c0110d68 <disk0_io+0x1b1>$/;"	l
c0110d44	obj/kernel.asm	/^c0110d44:	c7 44 24 0c a4 8d 11 	movl   $0xc0118da4,0xc(%esp)$/;"	l
c0110d4b	obj/kernel.asm	/^c0110d4b:	c0 $/;"	l
c0110d4c	obj/kernel.asm	/^c0110d4c:	c7 44 24 08 8e 8d 11 	movl   $0xc0118d8e,0x8(%esp)$/;"	l
c0110d53	obj/kernel.asm	/^c0110d53:	c0 $/;"	l
c0110d54	obj/kernel.asm	/^c0110d54:	c7 44 24 04 62 00 00 	movl   $0x62,0x4(%esp)$/;"	l
c0110d5b	obj/kernel.asm	/^c0110d5b:	00 $/;"	l
c0110d5c	obj/kernel.asm	/^c0110d5c:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110d63	obj/kernel.asm	/^c0110d63:	e8 60 01 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110d68	obj/kernel.asm	/^c0110d68:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110d6b	obj/kernel.asm	/^c0110d6b:	29 45 f4             	sub    %eax,-0xc(%ebp)$/;"	l
c0110d6e	obj/kernel.asm	/^c0110d6e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110d71	obj/kernel.asm	/^c0110d71:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0110d74	obj/kernel.asm	/^c0110d74:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110d78	obj/kernel.asm	/^c0110d78:	0f 85 c5 fe ff ff    	jne    c0110c43 <disk0_io+0x8c>$/;"	l
c0110d7e	obj/kernel.asm	/^c0110d7e:	e8 02 fd ff ff       	call   c0110a85 <unlock_disk0>$/;"	l
c0110d83	obj/kernel.asm	/^c0110d83:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110d88	obj/kernel.asm	/^c0110d88:	c9                   	leave  $/;"	l
c0110d89	obj/kernel.asm	/^c0110d89:	c3                   	ret    $/;"	l
c0110d8a	obj/kernel.asm	/^c0110d8a <disk0_ioctl>:$/;"	l
c0110d8a	obj/kernel.asm	/^c0110d8a:	55                   	push   %ebp$/;"	l
c0110d8b	obj/kernel.asm	/^c0110d8b:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d8d	obj/kernel.asm	/^c0110d8d:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0110d92	obj/kernel.asm	/^c0110d92:	5d                   	pop    %ebp$/;"	l
c0110d93	obj/kernel.asm	/^c0110d93:	c3                   	ret    $/;"	l
c0110d94	obj/kernel.asm	/^c0110d94 <disk0_device_init>:$/;"	l
c0110d94	obj/kernel.asm	/^c0110d94:	55                   	push   %ebp$/;"	l
c0110d95	obj/kernel.asm	/^c0110d95:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d97	obj/kernel.asm	/^c0110d97:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110d9a	obj/kernel.asm	/^c0110d9a:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0110da1	obj/kernel.asm	/^c0110da1:	e8 7c 0e ff ff       	call   c0101c22 <ide_device_valid>$/;"	l
c0110da6	obj/kernel.asm	/^c0110da6:	85 c0                	test   %eax,%eax$/;"	l
c0110da8	obj/kernel.asm	/^c0110da8:	75 1c                	jne    c0110dc6 <disk0_device_init+0x32>$/;"	l
c0110daa	obj/kernel.asm	/^c0110daa:	c7 44 24 08 d4 8d 11 	movl   $0xc0118dd4,0x8(%esp)$/;"	l
c0110db1	obj/kernel.asm	/^c0110db1:	c0 $/;"	l
c0110db2	obj/kernel.asm	/^c0110db2:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)$/;"	l
c0110db9	obj/kernel.asm	/^c0110db9:	00 $/;"	l
c0110dba	obj/kernel.asm	/^c0110dba:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110dc1	obj/kernel.asm	/^c0110dc1:	e8 02 01 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110dc6	obj/kernel.asm	/^c0110dc6:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0110dcd	obj/kernel.asm	/^c0110dcd:	e8 8f 0e ff ff       	call   c0101c61 <ide_device_size>$/;"	l
c0110dd2	obj/kernel.asm	/^c0110dd2:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0110dd5	obj/kernel.asm	/^c0110dd5:	89 c2                	mov    %eax,%edx$/;"	l
c0110dd7	obj/kernel.asm	/^c0110dd7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110dda	obj/kernel.asm	/^c0110dda:	89 10                	mov    %edx,(%eax)$/;"	l
c0110ddc	obj/kernel.asm	/^c0110ddc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ddf	obj/kernel.asm	/^c0110ddf:	c7 40 04 00 10 00 00 	movl   $0x1000,0x4(%eax)$/;"	l
c0110de6	obj/kernel.asm	/^c0110de6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110de9	obj/kernel.asm	/^c0110de9:	c7 40 08 99 0a 11 c0 	movl   $0xc0110a99,0x8(%eax)$/;"	l
c0110df0	obj/kernel.asm	/^c0110df0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110df3	obj/kernel.asm	/^c0110df3:	c7 40 0c a3 0a 11 c0 	movl   $0xc0110aa3,0xc(%eax)$/;"	l
c0110dfa	obj/kernel.asm	/^c0110dfa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110dfd	obj/kernel.asm	/^c0110dfd:	c7 40 10 b7 0b 11 c0 	movl   $0xc0110bb7,0x10(%eax)$/;"	l
c0110e04	obj/kernel.asm	/^c0110e04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110e07	obj/kernel.asm	/^c0110e07:	c7 40 14 8a 0d 11 c0 	movl   $0xc0110d8a,0x14(%eax)$/;"	l
c0110e0e	obj/kernel.asm	/^c0110e0e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0110e15	obj/kernel.asm	/^c0110e15:	00 $/;"	l
c0110e16	obj/kernel.asm	/^c0110e16:	c7 04 24 e0 1f 15 c0 	movl   $0xc0151fe0,(%esp)$/;"	l
c0110e1d	obj/kernel.asm	/^c0110e1d:	e8 4d 8c ff ff       	call   c0109a6f <sem_init>$/;"	l
c0110e22	obj/kernel.asm	/^c0110e22:	c7 04 24 00 40 00 00 	movl   $0x4000,(%esp)$/;"	l
c0110e29	obj/kernel.asm	/^c0110e29:	e8 6d 3e ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0110e2e	obj/kernel.asm	/^c0110e2e:	a3 dc 1f 15 c0       	mov    %eax,0xc0151fdc$/;"	l
c0110e33	obj/kernel.asm	/^c0110e33:	a1 dc 1f 15 c0       	mov    0xc0151fdc,%eax$/;"	l
c0110e38	obj/kernel.asm	/^c0110e38:	85 c0                	test   %eax,%eax$/;"	l
c0110e3a	obj/kernel.asm	/^c0110e3a:	75 1c                	jne    c0110e58 <disk0_device_init+0xc4>$/;"	l
c0110e3c	obj/kernel.asm	/^c0110e3c:	c7 44 24 08 f3 8d 11 	movl   $0xc0118df3,0x8(%esp)$/;"	l
c0110e43	obj/kernel.asm	/^c0110e43:	c0 $/;"	l
c0110e44	obj/kernel.asm	/^c0110e44:	c7 44 24 04 7f 00 00 	movl   $0x7f,0x4(%esp)$/;"	l
c0110e4b	obj/kernel.asm	/^c0110e4b:	00 $/;"	l
c0110e4c	obj/kernel.asm	/^c0110e4c:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110e53	obj/kernel.asm	/^c0110e53:	e8 70 00 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110e58	obj/kernel.asm	/^c0110e58:	c9                   	leave  $/;"	l
c0110e59	obj/kernel.asm	/^c0110e59:	c3                   	ret    $/;"	l
c0110e5a	obj/kernel.asm	/^c0110e5a <dev_init_disk0>:$/;"	l
c0110e5a	obj/kernel.asm	/^c0110e5a:	55                   	push   %ebp$/;"	l
c0110e5b	obj/kernel.asm	/^c0110e5b:	89 e5                	mov    %esp,%ebp$/;"	l
c0110e5d	obj/kernel.asm	/^c0110e5d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110e60	obj/kernel.asm	/^c0110e60:	e8 d1 fb ff ff       	call   c0110a36 <dev_create_inode>$/;"	l
c0110e65	obj/kernel.asm	/^c0110e65:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110e68	obj/kernel.asm	/^c0110e68:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110e6c	obj/kernel.asm	/^c0110e6c:	75 1c                	jne    c0110e8a <dev_init_disk0+0x30>$/;"	l
c0110e6e	obj/kernel.asm	/^c0110e6e:	c7 44 24 08 0f 8e 11 	movl   $0xc0118e0f,0x8(%esp)$/;"	l
c0110e75	obj/kernel.asm	/^c0110e75:	c0 $/;"	l
c0110e76	obj/kernel.asm	/^c0110e76:	c7 44 24 04 87 00 00 	movl   $0x87,0x4(%esp)$/;"	l
c0110e7d	obj/kernel.asm	/^c0110e7d:	00 $/;"	l
c0110e7e	obj/kernel.asm	/^c0110e7e:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110e85	obj/kernel.asm	/^c0110e85:	e8 3e 00 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110e8a	obj/kernel.asm	/^c0110e8a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110e8d	obj/kernel.asm	/^c0110e8d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110e90	obj/kernel.asm	/^c0110e90:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110e94	obj/kernel.asm	/^c0110e94:	74 0d                	je     c0110ea3 <dev_init_disk0+0x49>$/;"	l
c0110e96	obj/kernel.asm	/^c0110e96:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e99	obj/kernel.asm	/^c0110e99:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110e9c	obj/kernel.asm	/^c0110e9c:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110ea1	obj/kernel.asm	/^c0110ea1:	74 24                	je     c0110ec7 <dev_init_disk0+0x6d>$/;"	l
c0110ea3	obj/kernel.asm	/^c0110ea3:	c7 44 24 0c 28 8e 11 	movl   $0xc0118e28,0xc(%esp)$/;"	l
c0110eaa	obj/kernel.asm	/^c0110eaa:	c0 $/;"	l
c0110eab	obj/kernel.asm	/^c0110eab:	c7 44 24 08 8e 8d 11 	movl   $0xc0118d8e,0x8(%esp)$/;"	l
c0110eb2	obj/kernel.asm	/^c0110eb2:	c0 $/;"	l
c0110eb3	obj/kernel.asm	/^c0110eb3:	c7 44 24 04 89 00 00 	movl   $0x89,0x4(%esp)$/;"	l
c0110eba	obj/kernel.asm	/^c0110eba:	00 $/;"	l
c0110ebb	obj/kernel.asm	/^c0110ebb:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110ec2	obj/kernel.asm	/^c0110ec2:	e8 01 00 ff ff       	call   c0100ec8 <__panic>$/;"	l
c0110ec7	obj/kernel.asm	/^c0110ec7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110eca	obj/kernel.asm	/^c0110eca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110ecd	obj/kernel.asm	/^c0110ecd:	e8 c2 fe ff ff       	call   c0110d94 <disk0_device_init>$/;"	l
c0110ed2	obj/kernel.asm	/^c0110ed2:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0110ed9	obj/kernel.asm	/^c0110ed9:	00 $/;"	l
c0110eda	obj/kernel.asm	/^c0110eda:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110edd	obj/kernel.asm	/^c0110edd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110ee1	obj/kernel.asm	/^c0110ee1:	c7 04 24 5b 8e 11 c0 	movl   $0xc0118e5b,(%esp)$/;"	l
c0110ee8	obj/kernel.asm	/^c0110ee8:	e8 cb e9 ff ff       	call   c010f8b8 <vfs_add_dev>$/;"	l
c0110eed	obj/kernel.asm	/^c0110eed:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110ef0	obj/kernel.asm	/^c0110ef0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110ef4	obj/kernel.asm	/^c0110ef4:	74 23                	je     c0110f19 <dev_init_disk0+0xbf>$/;"	l
c0110ef6	obj/kernel.asm	/^c0110ef6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110ef9	obj/kernel.asm	/^c0110ef9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0110efd	obj/kernel.asm	/^c0110efd:	c7 44 24 08 61 8e 11 	movl   $0xc0118e61,0x8(%esp)$/;"	l
c0110f04	obj/kernel.asm	/^c0110f04:	c0 $/;"	l
c0110f05	obj/kernel.asm	/^c0110f05:	c7 44 24 04 8d 00 00 	movl   $0x8d,0x4(%esp)$/;"	l
c0110f0c	obj/kernel.asm	/^c0110f0c:	00 $/;"	l
c0110f0d	obj/kernel.asm	/^c0110f0d:	c7 04 24 e8 8c 11 c0 	movl   $0xc0118ce8,(%esp)$/;"	l
c0110f14	obj/kernel.asm	/^c0110f14:	e8 af ff fe ff       	call   c0100ec8 <__panic>$/;"	l
c0110f19	obj/kernel.asm	/^c0110f19:	c9                   	leave  $/;"	l
c0110f1a	obj/kernel.asm	/^c0110f1a:	c3                   	ret    $/;"	l
c0110f1b	obj/kernel.asm	/^c0110f1b <__intr_save>:$/;"	l
c0110f1b	obj/kernel.asm	/^c0110f1b:	55                   	push   %ebp$/;"	l
c0110f1c	obj/kernel.asm	/^c0110f1c:	89 e5                	mov    %esp,%ebp$/;"	l
c0110f1e	obj/kernel.asm	/^c0110f1e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110f21	obj/kernel.asm	/^c0110f21:	9c                   	pushf  $/;"	l
c0110f22	obj/kernel.asm	/^c0110f22:	58                   	pop    %eax$/;"	l
c0110f23	obj/kernel.asm	/^c0110f23:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110f26	obj/kernel.asm	/^c0110f26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110f29	obj/kernel.asm	/^c0110f29:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0110f2e	obj/kernel.asm	/^c0110f2e:	85 c0                	test   %eax,%eax$/;"	l
c0110f30	obj/kernel.asm	/^c0110f30:	74 0c                	je     c0110f3e <__intr_save+0x23>$/;"	l
c0110f32	obj/kernel.asm	/^c0110f32:	e8 f3 11 ff ff       	call   c010212a <intr_disable>$/;"	l
c0110f37	obj/kernel.asm	/^c0110f37:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0110f3c	obj/kernel.asm	/^c0110f3c:	eb 05                	jmp    c0110f43 <__intr_save+0x28>$/;"	l
c0110f3e	obj/kernel.asm	/^c0110f3e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110f43	obj/kernel.asm	/^c0110f43:	c9                   	leave  $/;"	l
c0110f44	obj/kernel.asm	/^c0110f44:	c3                   	ret    $/;"	l
c0110f45	obj/kernel.asm	/^c0110f45 <__intr_restore>:$/;"	l
c0110f45	obj/kernel.asm	/^c0110f45:	55                   	push   %ebp$/;"	l
c0110f46	obj/kernel.asm	/^c0110f46:	89 e5                	mov    %esp,%ebp$/;"	l
c0110f48	obj/kernel.asm	/^c0110f48:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110f4b	obj/kernel.asm	/^c0110f4b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0110f4f	obj/kernel.asm	/^c0110f4f:	74 05                	je     c0110f56 <__intr_restore+0x11>$/;"	l
c0110f51	obj/kernel.asm	/^c0110f51:	e8 ce 11 ff ff       	call   c0102124 <intr_enable>$/;"	l
c0110f56	obj/kernel.asm	/^c0110f56:	c9                   	leave  $/;"	l
c0110f57	obj/kernel.asm	/^c0110f57:	c3                   	ret    $/;"	l
c0110f58	obj/kernel.asm	/^c0110f58 <dev_stdin_write>:$/;"	l
c0110f58	obj/kernel.asm	/^c0110f58:	55                   	push   %ebp$/;"	l
c0110f59	obj/kernel.asm	/^c0110f59:	89 e5                	mov    %esp,%ebp$/;"	l
c0110f5b	obj/kernel.asm	/^c0110f5b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110f5e	obj/kernel.asm	/^c0110f5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f61	obj/kernel.asm	/^c0110f61:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
c0110f64	obj/kernel.asm	/^c0110f64:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)$/;"	l
c0110f68	obj/kernel.asm	/^c0110f68:	0f 84 80 00 00 00    	je     c0110fee <dev_stdin_write+0x96>$/;"	l
c0110f6e	obj/kernel.asm	/^c0110f6e:	e8 a8 ff ff ff       	call   c0110f1b <__intr_save>$/;"	l
c0110f73	obj/kernel.asm	/^c0110f73:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110f76	obj/kernel.asm	/^c0110f76:	a1 04 30 15 c0       	mov    0xc0153004,%eax$/;"	l
c0110f7b	obj/kernel.asm	/^c0110f7b:	99                   	cltd   $/;"	l
c0110f7c	obj/kernel.asm	/^c0110f7c:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c0110f7f	obj/kernel.asm	/^c0110f7f:	01 d0                	add    %edx,%eax$/;"	l
c0110f81	obj/kernel.asm	/^c0110f81:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0110f86	obj/kernel.asm	/^c0110f86:	29 d0                	sub    %edx,%eax$/;"	l
c0110f88	obj/kernel.asm	/^c0110f88:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx$/;"	l
c0110f8c	obj/kernel.asm	/^c0110f8c:	88 90 00 20 15 c0    	mov    %dl,-0x3feae000(%eax)$/;"	l
c0110f92	obj/kernel.asm	/^c0110f92:	8b 15 04 30 15 c0    	mov    0xc0153004,%edx$/;"	l
c0110f98	obj/kernel.asm	/^c0110f98:	a1 00 30 15 c0       	mov    0xc0153000,%eax$/;"	l
c0110f9d	obj/kernel.asm	/^c0110f9d:	29 c2                	sub    %eax,%edx$/;"	l
c0110f9f	obj/kernel.asm	/^c0110f9f:	89 d0                	mov    %edx,%eax$/;"	l
c0110fa1	obj/kernel.asm	/^c0110fa1:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0110fa6	obj/kernel.asm	/^c0110fa6:	7f 0d                	jg     c0110fb5 <dev_stdin_write+0x5d>$/;"	l
c0110fa8	obj/kernel.asm	/^c0110fa8:	a1 04 30 15 c0       	mov    0xc0153004,%eax$/;"	l
c0110fad	obj/kernel.asm	/^c0110fad:	83 c0 01             	add    $0x1,%eax$/;"	l
c0110fb0	obj/kernel.asm	/^c0110fb0:	a3 04 30 15 c0       	mov    %eax,0xc0153004$/;"	l
c0110fb5	obj/kernel.asm	/^c0110fb5:	a1 c0 ee 14 c0       	mov    0xc014eec0,%eax$/;"	l
c0110fba	obj/kernel.asm	/^c0110fba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110fbd	obj/kernel.asm	/^c0110fbd:	e8 a7 8f ff ff       	call   c0109f69 <wait_queue_empty>$/;"	l
c0110fc2	obj/kernel.asm	/^c0110fc2:	85 c0                	test   %eax,%eax$/;"	l
c0110fc4	obj/kernel.asm	/^c0110fc4:	75 1d                	jne    c0110fe3 <dev_stdin_write+0x8b>$/;"	l
c0110fc6	obj/kernel.asm	/^c0110fc6:	a1 c0 ee 14 c0       	mov    0xc014eec0,%eax$/;"	l
c0110fcb	obj/kernel.asm	/^c0110fcb:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0110fd2	obj/kernel.asm	/^c0110fd2:	00 $/;"	l
c0110fd3	obj/kernel.asm	/^c0110fd3:	c7 44 24 04 04 00 00 	movl   $0x80000004,0x4(%esp)$/;"	l
c0110fda	obj/kernel.asm	/^c0110fda:	80 $/;"	l
c0110fdb	obj/kernel.asm	/^c0110fdb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110fde	obj/kernel.asm	/^c0110fde:	e8 3d 90 ff ff       	call   c010a020 <wakeup_queue>$/;"	l
c0110fe3	obj/kernel.asm	/^c0110fe3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110fe6	obj/kernel.asm	/^c0110fe6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110fe9	obj/kernel.asm	/^c0110fe9:	e8 57 ff ff ff       	call   c0110f45 <__intr_restore>$/;"	l
c0110fee	obj/kernel.asm	/^c0110fee:	c9                   	leave  $/;"	l
c0110fef	obj/kernel.asm	/^c0110fef:	c3                   	ret    $/;"	l
c0110ff0	obj/kernel.asm	/^c0110ff0 <dev_stdin_read>:$/;"	l
c0110ff0	obj/kernel.asm	/^c0110ff0:	55                   	push   %ebp$/;"	l
c0110ff1	obj/kernel.asm	/^c0110ff1:	89 e5                	mov    %esp,%ebp$/;"	l
c0110ff3	obj/kernel.asm	/^c0110ff3:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0110ff6	obj/kernel.asm	/^c0110ff6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0110ffd	obj/kernel.asm	/^c0110ffd:	e8 19 ff ff ff       	call   c0110f1b <__intr_save>$/;"	l
c0111002	obj/kernel.asm	/^c0111002:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111005	obj/kernel.asm	/^c0111005:	e9 bb 00 00 00       	jmp    c01110c5 <dev_stdin_read+0xd5>$/;"	l
c011100a	obj/kernel.asm	/^c011100a:	8b 15 00 30 15 c0    	mov    0xc0153000,%edx$/;"	l
c0111010	obj/kernel.asm	/^c0111010:	a1 04 30 15 c0       	mov    0xc0153004,%eax$/;"	l
c0111015	obj/kernel.asm	/^c0111015:	39 c2                	cmp    %eax,%edx$/;"	l
c0111017	obj/kernel.asm	/^c0111017:	7d 3d                	jge    c0111056 <dev_stdin_read+0x66>$/;"	l
c0111019	obj/kernel.asm	/^c0111019:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011101c	obj/kernel.asm	/^c011101c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c011101f	obj/kernel.asm	/^c011101f:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0111022	obj/kernel.asm	/^c0111022:	8b 15 00 30 15 c0    	mov    0xc0153000,%edx$/;"	l
c0111028	obj/kernel.asm	/^c0111028:	89 d1                	mov    %edx,%ecx$/;"	l
c011102a	obj/kernel.asm	/^c011102a:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
c011102d	obj/kernel.asm	/^c011102d:	c1 e9 14             	shr    $0x14,%ecx$/;"	l
c0111030	obj/kernel.asm	/^c0111030:	01 ca                	add    %ecx,%edx$/;"	l
c0111032	obj/kernel.asm	/^c0111032:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
c0111038	obj/kernel.asm	/^c0111038:	29 ca                	sub    %ecx,%edx$/;"	l
c011103a	obj/kernel.asm	/^c011103a:	0f b6 92 00 20 15 c0 	movzbl -0x3feae000(%edx),%edx$/;"	l
c0111041	obj/kernel.asm	/^c0111041:	88 10                	mov    %dl,(%eax)$/;"	l
c0111043	obj/kernel.asm	/^c0111043:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0111047	obj/kernel.asm	/^c0111047:	a1 00 30 15 c0       	mov    0xc0153000,%eax$/;"	l
c011104c	obj/kernel.asm	/^c011104c:	83 c0 01             	add    $0x1,%eax$/;"	l
c011104f	obj/kernel.asm	/^c011104f:	a3 00 30 15 c0       	mov    %eax,0xc0153000$/;"	l
c0111054	obj/kernel.asm	/^c0111054:	eb 6f                	jmp    c01110c5 <dev_stdin_read+0xd5>$/;"	l
c0111056	obj/kernel.asm	/^c0111056:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0111059	obj/kernel.asm	/^c0111059:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011105c	obj/kernel.asm	/^c011105c:	a1 c0 ee 14 c0       	mov    0xc014eec0,%eax$/;"	l
c0111061	obj/kernel.asm	/^c0111061:	c7 44 24 08 04 00 00 	movl   $0x80000004,0x8(%esp)$/;"	l
c0111068	obj/kernel.asm	/^c0111068:	80 $/;"	l
c0111069	obj/kernel.asm	/^c0111069:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c011106c	obj/kernel.asm	/^c011106c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111070	obj/kernel.asm	/^c0111070:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111073	obj/kernel.asm	/^c0111073:	e8 3d 90 ff ff       	call   c010a0b5 <wait_current_set>$/;"	l
c0111078	obj/kernel.asm	/^c0111078:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011107b	obj/kernel.asm	/^c011107b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011107e	obj/kernel.asm	/^c011107e:	e8 c2 fe ff ff       	call   c0110f45 <__intr_restore>$/;"	l
c0111083	obj/kernel.asm	/^c0111083:	e8 cc d4 ff ff       	call   c010e554 <schedule>$/;"	l
c0111088	obj/kernel.asm	/^c0111088:	e8 8e fe ff ff       	call   c0110f1b <__intr_save>$/;"	l
c011108d	obj/kernel.asm	/^c011108d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111090	obj/kernel.asm	/^c0111090:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111093	obj/kernel.asm	/^c0111093:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111096	obj/kernel.asm	/^c0111096:	e8 eb 8e ff ff       	call   c0109f86 <wait_in_queue>$/;"	l
c011109b	obj/kernel.asm	/^c011109b:	85 c0                	test   %eax,%eax$/;"	l
c011109d	obj/kernel.asm	/^c011109d:	74 14                	je     c01110b3 <dev_stdin_read+0xc3>$/;"	l
c011109f	obj/kernel.asm	/^c011109f:	a1 c0 ee 14 c0       	mov    0xc014eec0,%eax$/;"	l
c01110a4	obj/kernel.asm	/^c01110a4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01110a7	obj/kernel.asm	/^c01110a7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01110ab	obj/kernel.asm	/^c01110ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01110ae	obj/kernel.asm	/^c01110ae:	e8 ce 8c ff ff       	call   c0109d81 <wait_queue_del>$/;"	l
c01110b3	obj/kernel.asm	/^c01110b3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01110b6	obj/kernel.asm	/^c01110b6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01110b9	obj/kernel.asm	/^c01110b9:	3d 04 00 00 80       	cmp    $0x80000004,%eax$/;"	l
c01110be	obj/kernel.asm	/^c01110be:	75 11                	jne    c01110d1 <dev_stdin_read+0xe1>$/;"	l
c01110c0	obj/kernel.asm	/^c01110c0:	e9 45 ff ff ff       	jmp    c011100a <dev_stdin_read+0x1a>$/;"	l
c01110c5	obj/kernel.asm	/^c01110c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01110c8	obj/kernel.asm	/^c01110c8:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01110cb	obj/kernel.asm	/^c01110cb:	0f 82 39 ff ff ff    	jb     c011100a <dev_stdin_read+0x1a>$/;"	l
c01110d1	obj/kernel.asm	/^c01110d1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01110d4	obj/kernel.asm	/^c01110d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01110d7	obj/kernel.asm	/^c01110d7:	e8 69 fe ff ff       	call   c0110f45 <__intr_restore>$/;"	l
c01110dc	obj/kernel.asm	/^c01110dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01110df	obj/kernel.asm	/^c01110df:	c9                   	leave  $/;"	l
c01110e0	obj/kernel.asm	/^c01110e0:	c3                   	ret    $/;"	l
c01110e1	obj/kernel.asm	/^c01110e1 <stdin_open>:$/;"	l
c01110e1	obj/kernel.asm	/^c01110e1:	55                   	push   %ebp$/;"	l
c01110e2	obj/kernel.asm	/^c01110e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01110e4	obj/kernel.asm	/^c01110e4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01110e8	obj/kernel.asm	/^c01110e8:	74 07                	je     c01110f1 <stdin_open+0x10>$/;"	l
c01110ea	obj/kernel.asm	/^c01110ea:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01110ef	obj/kernel.asm	/^c01110ef:	eb 05                	jmp    c01110f6 <stdin_open+0x15>$/;"	l
c01110f1	obj/kernel.asm	/^c01110f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01110f6	obj/kernel.asm	/^c01110f6:	5d                   	pop    %ebp$/;"	l
c01110f7	obj/kernel.asm	/^c01110f7:	c3                   	ret    $/;"	l
c01110f8	obj/kernel.asm	/^c01110f8 <stdin_close>:$/;"	l
c01110f8	obj/kernel.asm	/^c01110f8:	55                   	push   %ebp$/;"	l
c01110f9	obj/kernel.asm	/^c01110f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01110fb	obj/kernel.asm	/^c01110fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111100	obj/kernel.asm	/^c0111100:	5d                   	pop    %ebp$/;"	l
c0111101	obj/kernel.asm	/^c0111101:	c3                   	ret    $/;"	l
c0111102	obj/kernel.asm	/^c0111102 <stdin_io>:$/;"	l
c0111102	obj/kernel.asm	/^c0111102:	55                   	push   %ebp$/;"	l
c0111103	obj/kernel.asm	/^c0111103:	89 e5                	mov    %esp,%ebp$/;"	l
c0111105	obj/kernel.asm	/^c0111105:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111108	obj/kernel.asm	/^c0111108:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c011110c	obj/kernel.asm	/^c011110c:	75 36                	jne    c0111144 <stdin_io+0x42>$/;"	l
c011110e	obj/kernel.asm	/^c011110e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111111	obj/kernel.asm	/^c0111111:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0111114	obj/kernel.asm	/^c0111114:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111117	obj/kernel.asm	/^c0111117:	8b 00                	mov    (%eax),%eax$/;"	l
c0111119	obj/kernel.asm	/^c0111119:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011111d	obj/kernel.asm	/^c011111d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111120	obj/kernel.asm	/^c0111120:	e8 cb fe ff ff       	call   c0110ff0 <dev_stdin_read>$/;"	l
c0111125	obj/kernel.asm	/^c0111125:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111128	obj/kernel.asm	/^c0111128:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011112c	obj/kernel.asm	/^c011112c:	7e 11                	jle    c011113f <stdin_io+0x3d>$/;"	l
c011112e	obj/kernel.asm	/^c011112e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111131	obj/kernel.asm	/^c0111131:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0111134	obj/kernel.asm	/^c0111134:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111137	obj/kernel.asm	/^c0111137:	29 c2                	sub    %eax,%edx$/;"	l
c0111139	obj/kernel.asm	/^c0111139:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011113c	obj/kernel.asm	/^c011113c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c011113f	obj/kernel.asm	/^c011113f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111142	obj/kernel.asm	/^c0111142:	eb 05                	jmp    c0111149 <stdin_io+0x47>$/;"	l
c0111144	obj/kernel.asm	/^c0111144:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111149	obj/kernel.asm	/^c0111149:	c9                   	leave  $/;"	l
c011114a	obj/kernel.asm	/^c011114a:	c3                   	ret    $/;"	l
c011114b	obj/kernel.asm	/^c011114b <stdin_ioctl>:$/;"	l
c011114b	obj/kernel.asm	/^c011114b:	55                   	push   %ebp$/;"	l
c011114c	obj/kernel.asm	/^c011114c:	89 e5                	mov    %esp,%ebp$/;"	l
c011114e	obj/kernel.asm	/^c011114e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111153	obj/kernel.asm	/^c0111153:	5d                   	pop    %ebp$/;"	l
c0111154	obj/kernel.asm	/^c0111154:	c3                   	ret    $/;"	l
c0111155	obj/kernel.asm	/^c0111155 <stdin_device_init>:$/;"	l
c0111155	obj/kernel.asm	/^c0111155:	55                   	push   %ebp$/;"	l
c0111156	obj/kernel.asm	/^c0111156:	89 e5                	mov    %esp,%ebp$/;"	l
c0111158	obj/kernel.asm	/^c0111158:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011115b	obj/kernel.asm	/^c011115b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011115e	obj/kernel.asm	/^c011115e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0111164	obj/kernel.asm	/^c0111164:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111167	obj/kernel.asm	/^c0111167:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c011116e	obj/kernel.asm	/^c011116e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111171	obj/kernel.asm	/^c0111171:	c7 40 08 e1 10 11 c0 	movl   $0xc01110e1,0x8(%eax)$/;"	l
c0111178	obj/kernel.asm	/^c0111178:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011117b	obj/kernel.asm	/^c011117b:	c7 40 0c f8 10 11 c0 	movl   $0xc01110f8,0xc(%eax)$/;"	l
c0111182	obj/kernel.asm	/^c0111182:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111185	obj/kernel.asm	/^c0111185:	c7 40 10 02 11 11 c0 	movl   $0xc0111102,0x10(%eax)$/;"	l
c011118c	obj/kernel.asm	/^c011118c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011118f	obj/kernel.asm	/^c011118f:	c7 40 14 4b 11 11 c0 	movl   $0xc011114b,0x14(%eax)$/;"	l
c0111196	obj/kernel.asm	/^c0111196:	c7 05 04 30 15 c0 00 	movl   $0x0,0xc0153004$/;"	l
c011119d	obj/kernel.asm	/^c011119d:	00 00 00 $/;"	l
c01111a0	obj/kernel.asm	/^c01111a0:	a1 04 30 15 c0       	mov    0xc0153004,%eax$/;"	l
c01111a5	obj/kernel.asm	/^c01111a5:	a3 00 30 15 c0       	mov    %eax,0xc0153000$/;"	l
c01111aa	obj/kernel.asm	/^c01111aa:	a1 c0 ee 14 c0       	mov    0xc014eec0,%eax$/;"	l
c01111af	obj/kernel.asm	/^c01111af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01111b2	obj/kernel.asm	/^c01111b2:	e8 07 8b ff ff       	call   c0109cbe <wait_queue_init>$/;"	l
c01111b7	obj/kernel.asm	/^c01111b7:	c9                   	leave  $/;"	l
c01111b8	obj/kernel.asm	/^c01111b8:	c3                   	ret    $/;"	l
c01111b9	obj/kernel.asm	/^c01111b9 <dev_init_stdin>:$/;"	l
c01111b9	obj/kernel.asm	/^c01111b9:	55                   	push   %ebp$/;"	l
c01111ba	obj/kernel.asm	/^c01111ba:	89 e5                	mov    %esp,%ebp$/;"	l
c01111bc	obj/kernel.asm	/^c01111bc:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01111bf	obj/kernel.asm	/^c01111bf:	e8 72 f8 ff ff       	call   c0110a36 <dev_create_inode>$/;"	l
c01111c4	obj/kernel.asm	/^c01111c4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01111c7	obj/kernel.asm	/^c01111c7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01111cb	obj/kernel.asm	/^c01111cb:	75 1c                	jne    c01111e9 <dev_init_stdin+0x30>$/;"	l
c01111cd	obj/kernel.asm	/^c01111cd:	c7 44 24 08 7c 8e 11 	movl   $0xc0118e7c,0x8(%esp)$/;"	l
c01111d4	obj/kernel.asm	/^c01111d4:	c0 $/;"	l
c01111d5	obj/kernel.asm	/^c01111d5:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)$/;"	l
c01111dc	obj/kernel.asm	/^c01111dc:	00 $/;"	l
c01111dd	obj/kernel.asm	/^c01111dd:	c7 04 24 95 8e 11 c0 	movl   $0xc0118e95,(%esp)$/;"	l
c01111e4	obj/kernel.asm	/^c01111e4:	e8 df fc fe ff       	call   c0100ec8 <__panic>$/;"	l
c01111e9	obj/kernel.asm	/^c01111e9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01111ec	obj/kernel.asm	/^c01111ec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01111ef	obj/kernel.asm	/^c01111ef:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01111f3	obj/kernel.asm	/^c01111f3:	74 0d                	je     c0111202 <dev_init_stdin+0x49>$/;"	l
c01111f5	obj/kernel.asm	/^c01111f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01111f8	obj/kernel.asm	/^c01111f8:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01111fb	obj/kernel.asm	/^c01111fb:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0111200	obj/kernel.asm	/^c0111200:	74 24                	je     c0111226 <dev_init_stdin+0x6d>$/;"	l
c0111202	obj/kernel.asm	/^c0111202:	c7 44 24 0c b0 8e 11 	movl   $0xc0118eb0,0xc(%esp)$/;"	l
c0111209	obj/kernel.asm	/^c0111209:	c0 $/;"	l
c011120a	obj/kernel.asm	/^c011120a:	c7 44 24 08 e3 8e 11 	movl   $0xc0118ee3,0x8(%esp)$/;"	l
c0111211	obj/kernel.asm	/^c0111211:	c0 $/;"	l
c0111212	obj/kernel.asm	/^c0111212:	c7 44 24 04 77 00 00 	movl   $0x77,0x4(%esp)$/;"	l
c0111219	obj/kernel.asm	/^c0111219:	00 $/;"	l
c011121a	obj/kernel.asm	/^c011121a:	c7 04 24 95 8e 11 c0 	movl   $0xc0118e95,(%esp)$/;"	l
c0111221	obj/kernel.asm	/^c0111221:	e8 a2 fc fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111226	obj/kernel.asm	/^c0111226:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111229	obj/kernel.asm	/^c0111229:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011122c	obj/kernel.asm	/^c011122c:	e8 24 ff ff ff       	call   c0111155 <stdin_device_init>$/;"	l
c0111231	obj/kernel.asm	/^c0111231:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0111238	obj/kernel.asm	/^c0111238:	00 $/;"	l
c0111239	obj/kernel.asm	/^c0111239:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011123c	obj/kernel.asm	/^c011123c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111240	obj/kernel.asm	/^c0111240:	c7 04 24 f8 8e 11 c0 	movl   $0xc0118ef8,(%esp)$/;"	l
c0111247	obj/kernel.asm	/^c0111247:	e8 6c e6 ff ff       	call   c010f8b8 <vfs_add_dev>$/;"	l
c011124c	obj/kernel.asm	/^c011124c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011124f	obj/kernel.asm	/^c011124f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111253	obj/kernel.asm	/^c0111253:	74 23                	je     c0111278 <dev_init_stdin+0xbf>$/;"	l
c0111255	obj/kernel.asm	/^c0111255:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111258	obj/kernel.asm	/^c0111258:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011125c	obj/kernel.asm	/^c011125c:	c7 44 24 08 fe 8e 11 	movl   $0xc0118efe,0x8(%esp)$/;"	l
c0111263	obj/kernel.asm	/^c0111263:	c0 $/;"	l
c0111264	obj/kernel.asm	/^c0111264:	c7 44 24 04 7b 00 00 	movl   $0x7b,0x4(%esp)$/;"	l
c011126b	obj/kernel.asm	/^c011126b:	00 $/;"	l
c011126c	obj/kernel.asm	/^c011126c:	c7 04 24 95 8e 11 c0 	movl   $0xc0118e95,(%esp)$/;"	l
c0111273	obj/kernel.asm	/^c0111273:	e8 50 fc fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111278	obj/kernel.asm	/^c0111278:	c9                   	leave  $/;"	l
c0111279	obj/kernel.asm	/^c0111279:	c3                   	ret    $/;"	l
c011127a	obj/kernel.asm	/^c011127a <stdout_open>:$/;"	l
c011127a	obj/kernel.asm	/^c011127a:	55                   	push   %ebp$/;"	l
c011127b	obj/kernel.asm	/^c011127b:	89 e5                	mov    %esp,%ebp$/;"	l
c011127d	obj/kernel.asm	/^c011127d:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0111281	obj/kernel.asm	/^c0111281:	74 07                	je     c011128a <stdout_open+0x10>$/;"	l
c0111283	obj/kernel.asm	/^c0111283:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111288	obj/kernel.asm	/^c0111288:	eb 05                	jmp    c011128f <stdout_open+0x15>$/;"	l
c011128a	obj/kernel.asm	/^c011128a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011128f	obj/kernel.asm	/^c011128f:	5d                   	pop    %ebp$/;"	l
c0111290	obj/kernel.asm	/^c0111290:	c3                   	ret    $/;"	l
c0111291	obj/kernel.asm	/^c0111291 <stdout_close>:$/;"	l
c0111291	obj/kernel.asm	/^c0111291:	55                   	push   %ebp$/;"	l
c0111292	obj/kernel.asm	/^c0111292:	89 e5                	mov    %esp,%ebp$/;"	l
c0111294	obj/kernel.asm	/^c0111294:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111299	obj/kernel.asm	/^c0111299:	5d                   	pop    %ebp$/;"	l
c011129a	obj/kernel.asm	/^c011129a:	c3                   	ret    $/;"	l
c011129b	obj/kernel.asm	/^c011129b <stdout_io>:$/;"	l
c011129b	obj/kernel.asm	/^c011129b:	55                   	push   %ebp$/;"	l
c011129c	obj/kernel.asm	/^c011129c:	89 e5                	mov    %esp,%ebp$/;"	l
c011129e	obj/kernel.asm	/^c011129e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01112a1	obj/kernel.asm	/^c01112a1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01112a5	obj/kernel.asm	/^c01112a5:	74 41                	je     c01112e8 <stdout_io+0x4d>$/;"	l
c01112a7	obj/kernel.asm	/^c01112a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01112aa	obj/kernel.asm	/^c01112aa:	8b 00                	mov    (%eax),%eax$/;"	l
c01112ac	obj/kernel.asm	/^c01112ac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01112af	obj/kernel.asm	/^c01112af:	eb 26                	jmp    c01112d7 <stdout_io+0x3c>$/;"	l
c01112b1	obj/kernel.asm	/^c01112b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01112b4	obj/kernel.asm	/^c01112b4:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01112b7	obj/kernel.asm	/^c01112b7:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01112ba	obj/kernel.asm	/^c01112ba:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01112bd	obj/kernel.asm	/^c01112bd:	0f be c0             	movsbl %al,%eax$/;"	l
c01112c0	obj/kernel.asm	/^c01112c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01112c3	obj/kernel.asm	/^c01112c3:	e8 c3 f0 fe ff       	call   c010038b <cputchar>$/;"	l
c01112c8	obj/kernel.asm	/^c01112c8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01112cb	obj/kernel.asm	/^c01112cb:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01112ce	obj/kernel.asm	/^c01112ce:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01112d1	obj/kernel.asm	/^c01112d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01112d4	obj/kernel.asm	/^c01112d4:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01112d7	obj/kernel.asm	/^c01112d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01112da	obj/kernel.asm	/^c01112da:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01112dd	obj/kernel.asm	/^c01112dd:	85 c0                	test   %eax,%eax$/;"	l
c01112df	obj/kernel.asm	/^c01112df:	75 d0                	jne    c01112b1 <stdout_io+0x16>$/;"	l
c01112e1	obj/kernel.asm	/^c01112e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01112e6	obj/kernel.asm	/^c01112e6:	eb 05                	jmp    c01112ed <stdout_io+0x52>$/;"	l
c01112e8	obj/kernel.asm	/^c01112e8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01112ed	obj/kernel.asm	/^c01112ed:	c9                   	leave  $/;"	l
c01112ee	obj/kernel.asm	/^c01112ee:	c3                   	ret    $/;"	l
c01112ef	obj/kernel.asm	/^c01112ef <stdout_ioctl>:$/;"	l
c01112ef	obj/kernel.asm	/^c01112ef:	55                   	push   %ebp$/;"	l
c01112f0	obj/kernel.asm	/^c01112f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01112f2	obj/kernel.asm	/^c01112f2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01112f7	obj/kernel.asm	/^c01112f7:	5d                   	pop    %ebp$/;"	l
c01112f8	obj/kernel.asm	/^c01112f8:	c3                   	ret    $/;"	l
c01112f9	obj/kernel.asm	/^c01112f9 <stdout_device_init>:$/;"	l
c01112f9	obj/kernel.asm	/^c01112f9:	55                   	push   %ebp$/;"	l
c01112fa	obj/kernel.asm	/^c01112fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01112fc	obj/kernel.asm	/^c01112fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01112ff	obj/kernel.asm	/^c01112ff:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0111305	obj/kernel.asm	/^c0111305:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111308	obj/kernel.asm	/^c0111308:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c011130f	obj/kernel.asm	/^c011130f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111312	obj/kernel.asm	/^c0111312:	c7 40 08 7a 12 11 c0 	movl   $0xc011127a,0x8(%eax)$/;"	l
c0111319	obj/kernel.asm	/^c0111319:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011131c	obj/kernel.asm	/^c011131c:	c7 40 0c 91 12 11 c0 	movl   $0xc0111291,0xc(%eax)$/;"	l
c0111323	obj/kernel.asm	/^c0111323:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111326	obj/kernel.asm	/^c0111326:	c7 40 10 9b 12 11 c0 	movl   $0xc011129b,0x10(%eax)$/;"	l
c011132d	obj/kernel.asm	/^c011132d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111330	obj/kernel.asm	/^c0111330:	c7 40 14 ef 12 11 c0 	movl   $0xc01112ef,0x14(%eax)$/;"	l
c0111337	obj/kernel.asm	/^c0111337:	5d                   	pop    %ebp$/;"	l
c0111338	obj/kernel.asm	/^c0111338:	c3                   	ret    $/;"	l
c0111339	obj/kernel.asm	/^c0111339 <dev_init_stdout>:$/;"	l
c0111339	obj/kernel.asm	/^c0111339:	55                   	push   %ebp$/;"	l
c011133a	obj/kernel.asm	/^c011133a:	89 e5                	mov    %esp,%ebp$/;"	l
c011133c	obj/kernel.asm	/^c011133c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011133f	obj/kernel.asm	/^c011133f:	e8 f2 f6 ff ff       	call   c0110a36 <dev_create_inode>$/;"	l
c0111344	obj/kernel.asm	/^c0111344:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111347	obj/kernel.asm	/^c0111347:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011134b	obj/kernel.asm	/^c011134b:	75 1c                	jne    c0111369 <dev_init_stdout+0x30>$/;"	l
c011134d	obj/kernel.asm	/^c011134d:	c7 44 24 08 18 8f 11 	movl   $0xc0118f18,0x8(%esp)$/;"	l
c0111354	obj/kernel.asm	/^c0111354:	c0 $/;"	l
c0111355	obj/kernel.asm	/^c0111355:	c7 44 24 04 37 00 00 	movl   $0x37,0x4(%esp)$/;"	l
c011135c	obj/kernel.asm	/^c011135c:	00 $/;"	l
c011135d	obj/kernel.asm	/^c011135d:	c7 04 24 32 8f 11 c0 	movl   $0xc0118f32,(%esp)$/;"	l
c0111364	obj/kernel.asm	/^c0111364:	e8 5f fb fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111369	obj/kernel.asm	/^c0111369:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011136c	obj/kernel.asm	/^c011136c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011136f	obj/kernel.asm	/^c011136f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111373	obj/kernel.asm	/^c0111373:	74 0d                	je     c0111382 <dev_init_stdout+0x49>$/;"	l
c0111375	obj/kernel.asm	/^c0111375:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111378	obj/kernel.asm	/^c0111378:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011137b	obj/kernel.asm	/^c011137b:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0111380	obj/kernel.asm	/^c0111380:	74 24                	je     c01113a6 <dev_init_stdout+0x6d>$/;"	l
c0111382	obj/kernel.asm	/^c0111382:	c7 44 24 0c 4c 8f 11 	movl   $0xc0118f4c,0xc(%esp)$/;"	l
c0111389	obj/kernel.asm	/^c0111389:	c0 $/;"	l
c011138a	obj/kernel.asm	/^c011138a:	c7 44 24 08 7f 8f 11 	movl   $0xc0118f7f,0x8(%esp)$/;"	l
c0111391	obj/kernel.asm	/^c0111391:	c0 $/;"	l
c0111392	obj/kernel.asm	/^c0111392:	c7 44 24 04 39 00 00 	movl   $0x39,0x4(%esp)$/;"	l
c0111399	obj/kernel.asm	/^c0111399:	00 $/;"	l
c011139a	obj/kernel.asm	/^c011139a:	c7 04 24 32 8f 11 c0 	movl   $0xc0118f32,(%esp)$/;"	l
c01113a1	obj/kernel.asm	/^c01113a1:	e8 22 fb fe ff       	call   c0100ec8 <__panic>$/;"	l
c01113a6	obj/kernel.asm	/^c01113a6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01113a9	obj/kernel.asm	/^c01113a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01113ac	obj/kernel.asm	/^c01113ac:	e8 48 ff ff ff       	call   c01112f9 <stdout_device_init>$/;"	l
c01113b1	obj/kernel.asm	/^c01113b1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01113b8	obj/kernel.asm	/^c01113b8:	00 $/;"	l
c01113b9	obj/kernel.asm	/^c01113b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01113bc	obj/kernel.asm	/^c01113bc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01113c0	obj/kernel.asm	/^c01113c0:	c7 04 24 94 8f 11 c0 	movl   $0xc0118f94,(%esp)$/;"	l
c01113c7	obj/kernel.asm	/^c01113c7:	e8 ec e4 ff ff       	call   c010f8b8 <vfs_add_dev>$/;"	l
c01113cc	obj/kernel.asm	/^c01113cc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01113cf	obj/kernel.asm	/^c01113cf:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01113d3	obj/kernel.asm	/^c01113d3:	74 23                	je     c01113f8 <dev_init_stdout+0xbf>$/;"	l
c01113d5	obj/kernel.asm	/^c01113d5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01113d8	obj/kernel.asm	/^c01113d8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01113dc	obj/kernel.asm	/^c01113dc:	c7 44 24 08 9b 8f 11 	movl   $0xc0118f9b,0x8(%esp)$/;"	l
c01113e3	obj/kernel.asm	/^c01113e3:	c0 $/;"	l
c01113e4	obj/kernel.asm	/^c01113e4:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
c01113eb	obj/kernel.asm	/^c01113eb:	00 $/;"	l
c01113ec	obj/kernel.asm	/^c01113ec:	c7 04 24 32 8f 11 c0 	movl   $0xc0118f32,(%esp)$/;"	l
c01113f3	obj/kernel.asm	/^c01113f3:	e8 d0 fa fe ff       	call   c0100ec8 <__panic>$/;"	l
c01113f8	obj/kernel.asm	/^c01113f8:	c9                   	leave  $/;"	l
c01113f9	obj/kernel.asm	/^c01113f9:	c3                   	ret    $/;"	l
c01113fa	obj/kernel.asm	/^c01113fa <bitmap_create>:$/;"	l
c01113fa	obj/kernel.asm	/^c01113fa:	55                   	push   %ebp$/;"	l
c01113fb	obj/kernel.asm	/^c01113fb:	89 e5                	mov    %esp,%ebp$/;"	l
c01113fd	obj/kernel.asm	/^c01113fd:	56                   	push   %esi$/;"	l
c01113fe	obj/kernel.asm	/^c01113fe:	53                   	push   %ebx$/;"	l
c01113ff	obj/kernel.asm	/^c01113ff:	83 ec 30             	sub    $0x30,%esp$/;"	l
c0111402	obj/kernel.asm	/^c0111402:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0111406	obj/kernel.asm	/^c0111406:	74 0b                	je     c0111413 <bitmap_create+0x19>$/;"	l
c0111408	obj/kernel.asm	/^c0111408:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011140b	obj/kernel.asm	/^c011140b:	83 c0 20             	add    $0x20,%eax$/;"	l
c011140e	obj/kernel.asm	/^c011140e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0111411	obj/kernel.asm	/^c0111411:	77 24                	ja     c0111437 <bitmap_create+0x3d>$/;"	l
c0111413	obj/kernel.asm	/^c0111413:	c7 44 24 0c b8 8f 11 	movl   $0xc0118fb8,0xc(%esp)$/;"	l
c011141a	obj/kernel.asm	/^c011141a:	c0 $/;"	l
c011141b	obj/kernel.asm	/^c011141b:	c7 44 24 08 e0 8f 11 	movl   $0xc0118fe0,0x8(%esp)$/;"	l
c0111422	obj/kernel.asm	/^c0111422:	c0 $/;"	l
c0111423	obj/kernel.asm	/^c0111423:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c011142a	obj/kernel.asm	/^c011142a:	00 $/;"	l
c011142b	obj/kernel.asm	/^c011142b:	c7 04 24 f5 8f 11 c0 	movl   $0xc0118ff5,(%esp)$/;"	l
c0111432	obj/kernel.asm	/^c0111432:	e8 91 fa fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111437	obj/kernel.asm	/^c0111437:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)$/;"	l
c011143e	obj/kernel.asm	/^c011143e:	e8 58 38 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0111443	obj/kernel.asm	/^c0111443:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111446	obj/kernel.asm	/^c0111446:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011144a	obj/kernel.asm	/^c011144a:	75 0a                	jne    c0111456 <bitmap_create+0x5c>$/;"	l
c011144c	obj/kernel.asm	/^c011144c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111451	obj/kernel.asm	/^c0111451:	e9 43 01 00 00       	jmp    c0111599 <bitmap_create+0x19f>$/;"	l
c0111456	obj/kernel.asm	/^c0111456:	c7 45 ec 20 00 00 00 	movl   $0x20,-0x14(%ebp)$/;"	l
c011145d	obj/kernel.asm	/^c011145d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111460	obj/kernel.asm	/^c0111460:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0111463	obj/kernel.asm	/^c0111463:	01 d0                	add    %edx,%eax$/;"	l
c0111465	obj/kernel.asm	/^c0111465:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0111468	obj/kernel.asm	/^c0111468:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011146d	obj/kernel.asm	/^c011146d:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
c0111470	obj/kernel.asm	/^c0111470:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111473	obj/kernel.asm	/^c0111473:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111476	obj/kernel.asm	/^c0111476:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0111479	obj/kernel.asm	/^c0111479:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011147c	obj/kernel.asm	/^c011147c:	e8 1a 38 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0111481	obj/kernel.asm	/^c0111481:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111484	obj/kernel.asm	/^c0111484:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0111488	obj/kernel.asm	/^c0111488:	75 15                	jne    c011149f <bitmap_create+0xa5>$/;"	l
c011148a	obj/kernel.asm	/^c011148a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011148d	obj/kernel.asm	/^c011148d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111490	obj/kernel.asm	/^c0111490:	e8 21 38 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0111495	obj/kernel.asm	/^c0111495:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011149a	obj/kernel.asm	/^c011149a:	e9 fa 00 00 00       	jmp    c0111599 <bitmap_create+0x19f>$/;"	l
c011149f	obj/kernel.asm	/^c011149f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01114a2	obj/kernel.asm	/^c01114a2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01114a5	obj/kernel.asm	/^c01114a5:	89 10                	mov    %edx,(%eax)$/;"	l
c01114a7	obj/kernel.asm	/^c01114a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01114aa	obj/kernel.asm	/^c01114aa:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01114ad	obj/kernel.asm	/^c01114ad:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01114b0	obj/kernel.asm	/^c01114b0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01114b3	obj/kernel.asm	/^c01114b3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01114b6	obj/kernel.asm	/^c01114b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01114ba	obj/kernel.asm	/^c01114ba:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)$/;"	l
c01114c1	obj/kernel.asm	/^c01114c1:	ff $/;"	l
c01114c2	obj/kernel.asm	/^c01114c2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01114c5	obj/kernel.asm	/^c01114c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01114c8	obj/kernel.asm	/^c01114c8:	e8 4c 3f 00 00       	call   c0115419 <memset>$/;"	l
c01114cd	obj/kernel.asm	/^c01114cd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01114d0	obj/kernel.asm	/^c01114d0:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c01114d3	obj/kernel.asm	/^c01114d3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01114d6	obj/kernel.asm	/^c01114d6:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c01114d9	obj/kernel.asm	/^c01114d9:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01114dc	obj/kernel.asm	/^c01114dc:	0f 84 b4 00 00 00    	je     c0111596 <bitmap_create+0x19c>$/;"	l
c01114e2	obj/kernel.asm	/^c01114e2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01114e5	obj/kernel.asm	/^c01114e5:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01114e8	obj/kernel.asm	/^c01114e8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01114eb	obj/kernel.asm	/^c01114eb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01114ee	obj/kernel.asm	/^c01114ee:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c01114f1	obj/kernel.asm	/^c01114f1:	89 c2                	mov    %eax,%edx$/;"	l
c01114f3	obj/kernel.asm	/^c01114f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01114f6	obj/kernel.asm	/^c01114f6:	29 d0                	sub    %edx,%eax$/;"	l
c01114f8	obj/kernel.asm	/^c01114f8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01114fb	obj/kernel.asm	/^c01114fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01114fe	obj/kernel.asm	/^c01114fe:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c0111501	obj/kernel.asm	/^c0111501:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0111504	obj/kernel.asm	/^c0111504:	74 24                	je     c011152a <bitmap_create+0x130>$/;"	l
c0111506	obj/kernel.asm	/^c0111506:	c7 44 24 0c 0a 90 11 	movl   $0xc011900a,0xc(%esp)$/;"	l
c011150d	obj/kernel.asm	/^c011150d:	c0 $/;"	l
c011150e	obj/kernel.asm	/^c011150e:	c7 44 24 08 e0 8f 11 	movl   $0xc0118fe0,0x8(%esp)$/;"	l
c0111515	obj/kernel.asm	/^c0111515:	c0 $/;"	l
c0111516	obj/kernel.asm	/^c0111516:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%esp)$/;"	l
c011151d	obj/kernel.asm	/^c011151d:	00 $/;"	l
c011151e	obj/kernel.asm	/^c011151e:	c7 04 24 f5 8f 11 c0 	movl   $0xc0118ff5,(%esp)$/;"	l
c0111525	obj/kernel.asm	/^c0111525:	e8 9e f9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011152a	obj/kernel.asm	/^c011152a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011152e	obj/kernel.asm	/^c011152e:	74 06                	je     c0111536 <bitmap_create+0x13c>$/;"	l
c0111530	obj/kernel.asm	/^c0111530:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c0111534	obj/kernel.asm	/^c0111534:	76 24                	jbe    c011155a <bitmap_create+0x160>$/;"	l
c0111536	obj/kernel.asm	/^c0111536:	c7 44 24 0c 24 90 11 	movl   $0xc0119024,0xc(%esp)$/;"	l
c011153d	obj/kernel.asm	/^c011153d:	c0 $/;"	l
c011153e	obj/kernel.asm	/^c011153e:	c7 44 24 08 e0 8f 11 	movl   $0xc0118fe0,0x8(%esp)$/;"	l
c0111545	obj/kernel.asm	/^c0111545:	c0 $/;"	l
c0111546	obj/kernel.asm	/^c0111546:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
c011154d	obj/kernel.asm	/^c011154d:	00 $/;"	l
c011154e	obj/kernel.asm	/^c011154e:	c7 04 24 f5 8f 11 c0 	movl   $0xc0118ff5,(%esp)$/;"	l
c0111555	obj/kernel.asm	/^c0111555:	e8 6e f9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011155a	obj/kernel.asm	/^c011155a:	eb 34                	jmp    c0111590 <bitmap_create+0x196>$/;"	l
c011155c	obj/kernel.asm	/^c011155c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011155f	obj/kernel.asm	/^c011155f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111562	obj/kernel.asm	/^c0111562:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0111565	obj/kernel.asm	/^c0111565:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0111568	obj/kernel.asm	/^c0111568:	01 c2                	add    %eax,%edx$/;"	l
c011156a	obj/kernel.asm	/^c011156a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011156d	obj/kernel.asm	/^c011156d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111570	obj/kernel.asm	/^c0111570:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0111573	obj/kernel.asm	/^c0111573:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
c0111576	obj/kernel.asm	/^c0111576:	01 c8                	add    %ecx,%eax$/;"	l
c0111578	obj/kernel.asm	/^c0111578:	8b 18                	mov    (%eax),%ebx$/;"	l
c011157a	obj/kernel.asm	/^c011157a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011157d	obj/kernel.asm	/^c011157d:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
c0111582	obj/kernel.asm	/^c0111582:	89 c1                	mov    %eax,%ecx$/;"	l
c0111584	obj/kernel.asm	/^c0111584:	d3 e6                	shl    %cl,%esi$/;"	d
c0111586	obj/kernel.asm	/^c0111586:	89 f0                	mov    %esi,%eax$/;"	l
c0111588	obj/kernel.asm	/^c0111588:	31 d8                	xor    %ebx,%eax$/;"	l
c011158a	obj/kernel.asm	/^c011158a:	89 02                	mov    %eax,(%edx)$/;"	l
c011158c	obj/kernel.asm	/^c011158c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0111590	obj/kernel.asm	/^c0111590:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c0111594	obj/kernel.asm	/^c0111594:	76 c6                	jbe    c011155c <bitmap_create+0x162>$/;"	l
c0111596	obj/kernel.asm	/^c0111596:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111599	obj/kernel.asm	/^c0111599:	83 c4 30             	add    $0x30,%esp$/;"	l
c011159c	obj/kernel.asm	/^c011159c:	5b                   	pop    %ebx$/;"	l
c011159d	obj/kernel.asm	/^c011159d:	5e                   	pop    %esi$/;"	l
c011159e	obj/kernel.asm	/^c011159e:	5d                   	pop    %ebp$/;"	l
c011159f	obj/kernel.asm	/^c011159f:	c3                   	ret    $/;"	l
c01115a0	obj/kernel.asm	/^c01115a0 <bitmap_alloc>:$/;"	l
c01115a0	obj/kernel.asm	/^c01115a0:	55                   	push   %ebp$/;"	l
c01115a1	obj/kernel.asm	/^c01115a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01115a3	obj/kernel.asm	/^c01115a3:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01115a6	obj/kernel.asm	/^c01115a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01115a9	obj/kernel.asm	/^c01115a9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01115ac	obj/kernel.asm	/^c01115ac:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01115af	obj/kernel.asm	/^c01115af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01115b2	obj/kernel.asm	/^c01115b2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01115b5	obj/kernel.asm	/^c01115b5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01115b8	obj/kernel.asm	/^c01115b8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01115bf	obj/kernel.asm	/^c01115bf:	e9 bb 00 00 00       	jmp    c011167f <bitmap_alloc+0xdf>$/;"	l
c01115c4	obj/kernel.asm	/^c01115c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01115c7	obj/kernel.asm	/^c01115c7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01115ce	obj/kernel.asm	/^c01115ce:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01115d1	obj/kernel.asm	/^c01115d1:	01 d0                	add    %edx,%eax$/;"	l
c01115d3	obj/kernel.asm	/^c01115d3:	8b 00                	mov    (%eax),%eax$/;"	l
c01115d5	obj/kernel.asm	/^c01115d5:	85 c0                	test   %eax,%eax$/;"	l
c01115d7	obj/kernel.asm	/^c01115d7:	0f 84 9e 00 00 00    	je     c011167b <bitmap_alloc+0xdb>$/;"	l
c01115dd	obj/kernel.asm	/^c01115dd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01115e4	obj/kernel.asm	/^c01115e4:	eb 6b                	jmp    c0111651 <bitmap_alloc+0xb1>$/;"	l
c01115e6	obj/kernel.asm	/^c01115e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01115e9	obj/kernel.asm	/^c01115e9:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01115ee	obj/kernel.asm	/^c01115ee:	89 c1                	mov    %eax,%ecx$/;"	l
c01115f0	obj/kernel.asm	/^c01115f0:	d3 e2                	shl    %cl,%edx$/;"	d
c01115f2	obj/kernel.asm	/^c01115f2:	89 d0                	mov    %edx,%eax$/;"	l
c01115f4	obj/kernel.asm	/^c01115f4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01115f7	obj/kernel.asm	/^c01115f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01115fa	obj/kernel.asm	/^c01115fa:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0111601	obj/kernel.asm	/^c0111601:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111604	obj/kernel.asm	/^c0111604:	01 d0                	add    %edx,%eax$/;"	l
c0111606	obj/kernel.asm	/^c0111606:	8b 00                	mov    (%eax),%eax$/;"	l
c0111608	obj/kernel.asm	/^c0111608:	23 45 e4             	and    -0x1c(%ebp),%eax$/;"	l
c011160b	obj/kernel.asm	/^c011160b:	85 c0                	test   %eax,%eax$/;"	l
c011160d	obj/kernel.asm	/^c011160d:	74 3e                	je     c011164d <bitmap_alloc+0xad>$/;"	l
c011160f	obj/kernel.asm	/^c011160f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111612	obj/kernel.asm	/^c0111612:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0111619	obj/kernel.asm	/^c0111619:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011161c	obj/kernel.asm	/^c011161c:	01 c2                	add    %eax,%edx$/;"	l
c011161e	obj/kernel.asm	/^c011161e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111621	obj/kernel.asm	/^c0111621:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
c0111628	obj/kernel.asm	/^c0111628:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011162b	obj/kernel.asm	/^c011162b:	01 c8                	add    %ecx,%eax$/;"	l
c011162d	obj/kernel.asm	/^c011162d:	8b 00                	mov    (%eax),%eax$/;"	l
c011162f	obj/kernel.asm	/^c011162f:	33 45 e4             	xor    -0x1c(%ebp),%eax$/;"	l
c0111632	obj/kernel.asm	/^c0111632:	89 02                	mov    %eax,(%edx)$/;"	l
c0111634	obj/kernel.asm	/^c0111634:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111637	obj/kernel.asm	/^c0111637:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c011163a	obj/kernel.asm	/^c011163a:	89 c2                	mov    %eax,%edx$/;"	l
c011163c	obj/kernel.asm	/^c011163c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011163f	obj/kernel.asm	/^c011163f:	01 c2                	add    %eax,%edx$/;"	l
c0111641	obj/kernel.asm	/^c0111641:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111644	obj/kernel.asm	/^c0111644:	89 10                	mov    %edx,(%eax)$/;"	l
c0111646	obj/kernel.asm	/^c0111646:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011164b	obj/kernel.asm	/^c011164b:	eb 43                	jmp    c0111690 <bitmap_alloc+0xf0>$/;"	l
c011164d	obj/kernel.asm	/^c011164d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0111651	obj/kernel.asm	/^c0111651:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c0111655	obj/kernel.asm	/^c0111655:	76 8f                	jbe    c01115e6 <bitmap_alloc+0x46>$/;"	l
c0111657	obj/kernel.asm	/^c0111657:	c7 44 24 0c 49 90 11 	movl   $0xc0119049,0xc(%esp)$/;"	l
c011165e	obj/kernel.asm	/^c011165e:	c0 $/;"	l
c011165f	obj/kernel.asm	/^c011165f:	c7 44 24 08 e0 8f 11 	movl   $0xc0118fe0,0x8(%esp)$/;"	l
c0111666	obj/kernel.asm	/^c0111666:	c0 $/;"	l
c0111667	obj/kernel.asm	/^c0111667:	c7 44 24 04 43 00 00 	movl   $0x43,0x4(%esp)$/;"	l
c011166e	obj/kernel.asm	/^c011166e:	00 $/;"	l
c011166f	obj/kernel.asm	/^c011166f:	c7 04 24 f5 8f 11 c0 	movl   $0xc0118ff5,(%esp)$/;"	l
c0111676	obj/kernel.asm	/^c0111676:	e8 4d f8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011167b	obj/kernel.asm	/^c011167b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c011167f	obj/kernel.asm	/^c011167f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111682	obj/kernel.asm	/^c0111682:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0111685	obj/kernel.asm	/^c0111685:	0f 82 39 ff ff ff    	jb     c01115c4 <bitmap_alloc+0x24>$/;"	l
c011168b	obj/kernel.asm	/^c011168b:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0111690	obj/kernel.asm	/^c0111690:	c9                   	leave  $/;"	l
c0111691	obj/kernel.asm	/^c0111691:	c3                   	ret    $/;"	l
c0111692	obj/kernel.asm	/^c0111692 <bitmap_translate>:$/;"	l
c0111692	obj/kernel.asm	/^c0111692:	55                   	push   %ebp$/;"	l
c0111693	obj/kernel.asm	/^c0111693:	89 e5                	mov    %esp,%ebp$/;"	l
c0111695	obj/kernel.asm	/^c0111695:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111698	obj/kernel.asm	/^c0111698:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011169b	obj/kernel.asm	/^c011169b:	8b 00                	mov    (%eax),%eax$/;"	l
c011169d	obj/kernel.asm	/^c011169d:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01116a0	obj/kernel.asm	/^c01116a0:	77 24                	ja     c01116c6 <bitmap_translate+0x34>$/;"	l
c01116a2	obj/kernel.asm	/^c01116a2:	c7 44 24 0c 4b 90 11 	movl   $0xc011904b,0xc(%esp)$/;"	l
c01116a9	obj/kernel.asm	/^c01116a9:	c0 $/;"	l
c01116aa	obj/kernel.asm	/^c01116aa:	c7 44 24 08 e0 8f 11 	movl   $0xc0118fe0,0x8(%esp)$/;"	l
c01116b1	obj/kernel.asm	/^c01116b1:	c0 $/;"	l
c01116b2	obj/kernel.asm	/^c01116b2:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
c01116b9	obj/kernel.asm	/^c01116b9:	00 $/;"	l
c01116ba	obj/kernel.asm	/^c01116ba:	c7 04 24 f5 8f 11 c0 	movl   $0xc0118ff5,(%esp)$/;"	l
c01116c1	obj/kernel.asm	/^c01116c1:	e8 02 f8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01116c6	obj/kernel.asm	/^c01116c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01116c9	obj/kernel.asm	/^c01116c9:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c01116cc	obj/kernel.asm	/^c01116cc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01116cf	obj/kernel.asm	/^c01116cf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01116d2	obj/kernel.asm	/^c01116d2:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c01116d5	obj/kernel.asm	/^c01116d5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01116d8	obj/kernel.asm	/^c01116d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01116db	obj/kernel.asm	/^c01116db:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01116de	obj/kernel.asm	/^c01116de:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01116e1	obj/kernel.asm	/^c01116e1:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01116e4	obj/kernel.asm	/^c01116e4:	01 c2                	add    %eax,%edx$/;"	l
c01116e6	obj/kernel.asm	/^c01116e6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01116e9	obj/kernel.asm	/^c01116e9:	89 10                	mov    %edx,(%eax)$/;"	l
c01116eb	obj/kernel.asm	/^c01116eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01116ee	obj/kernel.asm	/^c01116ee:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01116f3	obj/kernel.asm	/^c01116f3:	89 c1                	mov    %eax,%ecx$/;"	l
c01116f5	obj/kernel.asm	/^c01116f5:	d3 e2                	shl    %cl,%edx$/;"	d
c01116f7	obj/kernel.asm	/^c01116f7:	89 d0                	mov    %edx,%eax$/;"	l
c01116f9	obj/kernel.asm	/^c01116f9:	89 c2                	mov    %eax,%edx$/;"	l
c01116fb	obj/kernel.asm	/^c01116fb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01116fe	obj/kernel.asm	/^c01116fe:	89 10                	mov    %edx,(%eax)$/;"	l
c0111700	obj/kernel.asm	/^c0111700:	c9                   	leave  $/;"	l
c0111701	obj/kernel.asm	/^c0111701:	c3                   	ret    $/;"	l
c0111702	obj/kernel.asm	/^c0111702 <bitmap_test>:$/;"	l
c0111702	obj/kernel.asm	/^c0111702:	55                   	push   %ebp$/;"	l
c0111703	obj/kernel.asm	/^c0111703:	89 e5                	mov    %esp,%ebp$/;"	l
c0111705	obj/kernel.asm	/^c0111705:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111708	obj/kernel.asm	/^c0111708:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c011170b	obj/kernel.asm	/^c011170b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011170f	obj/kernel.asm	/^c011170f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0111712	obj/kernel.asm	/^c0111712:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111716	obj/kernel.asm	/^c0111716:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111719	obj/kernel.asm	/^c0111719:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011171d	obj/kernel.asm	/^c011171d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111720	obj/kernel.asm	/^c0111720:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111723	obj/kernel.asm	/^c0111723:	e8 6a ff ff ff       	call   c0111692 <bitmap_translate>$/;"	l
c0111728	obj/kernel.asm	/^c0111728:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011172b	obj/kernel.asm	/^c011172b:	8b 10                	mov    (%eax),%edx$/;"	l
c011172d	obj/kernel.asm	/^c011172d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111730	obj/kernel.asm	/^c0111730:	21 d0                	and    %edx,%eax$/;"	l
c0111732	obj/kernel.asm	/^c0111732:	c9                   	leave  $/;"	l
c0111733	obj/kernel.asm	/^c0111733:	c3                   	ret    $/;"	l
c0111734	obj/kernel.asm	/^c0111734 <bitmap_free>:$/;"	l
c0111734	obj/kernel.asm	/^c0111734:	55                   	push   %ebp$/;"	l
c0111735	obj/kernel.asm	/^c0111735:	89 e5                	mov    %esp,%ebp$/;"	l
c0111737	obj/kernel.asm	/^c0111737:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011173a	obj/kernel.asm	/^c011173a:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c011173d	obj/kernel.asm	/^c011173d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111741	obj/kernel.asm	/^c0111741:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0111744	obj/kernel.asm	/^c0111744:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111748	obj/kernel.asm	/^c0111748:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011174b	obj/kernel.asm	/^c011174b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011174f	obj/kernel.asm	/^c011174f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111752	obj/kernel.asm	/^c0111752:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111755	obj/kernel.asm	/^c0111755:	e8 38 ff ff ff       	call   c0111692 <bitmap_translate>$/;"	l
c011175a	obj/kernel.asm	/^c011175a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011175d	obj/kernel.asm	/^c011175d:	8b 10                	mov    (%eax),%edx$/;"	l
c011175f	obj/kernel.asm	/^c011175f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111762	obj/kernel.asm	/^c0111762:	21 d0                	and    %edx,%eax$/;"	l
c0111764	obj/kernel.asm	/^c0111764:	85 c0                	test   %eax,%eax$/;"	l
c0111766	obj/kernel.asm	/^c0111766:	74 24                	je     c011178c <bitmap_free+0x58>$/;"	l
c0111768	obj/kernel.asm	/^c0111768:	c7 44 24 0c 61 90 11 	movl   $0xc0119061,0xc(%esp)$/;"	l
c011176f	obj/kernel.asm	/^c011176f:	c0 $/;"	l
c0111770	obj/kernel.asm	/^c0111770:	c7 44 24 08 e0 8f 11 	movl   $0xc0118fe0,0x8(%esp)$/;"	l
c0111777	obj/kernel.asm	/^c0111777:	c0 $/;"	l
c0111778	obj/kernel.asm	/^c0111778:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c011177f	obj/kernel.asm	/^c011177f:	00 $/;"	l
c0111780	obj/kernel.asm	/^c0111780:	c7 04 24 f5 8f 11 c0 	movl   $0xc0118ff5,(%esp)$/;"	l
c0111787	obj/kernel.asm	/^c0111787:	e8 3c f7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011178c	obj/kernel.asm	/^c011178c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011178f	obj/kernel.asm	/^c011178f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0111792	obj/kernel.asm	/^c0111792:	8b 0a                	mov    (%edx),%ecx$/;"	l
c0111794	obj/kernel.asm	/^c0111794:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0111797	obj/kernel.asm	/^c0111797:	09 ca                	or     %ecx,%edx$/;"	l
c0111799	obj/kernel.asm	/^c0111799:	89 10                	mov    %edx,(%eax)$/;"	l
c011179b	obj/kernel.asm	/^c011179b:	c9                   	leave  $/;"	l
c011179c	obj/kernel.asm	/^c011179c:	c3                   	ret    $/;"	l
c011179d	obj/kernel.asm	/^c011179d <bitmap_destroy>:$/;"	l
c011179d	obj/kernel.asm	/^c011179d:	55                   	push   %ebp$/;"	l
c011179e	obj/kernel.asm	/^c011179e:	89 e5                	mov    %esp,%ebp$/;"	l
c01117a0	obj/kernel.asm	/^c01117a0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01117a3	obj/kernel.asm	/^c01117a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117a6	obj/kernel.asm	/^c01117a6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01117a9	obj/kernel.asm	/^c01117a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01117ac	obj/kernel.asm	/^c01117ac:	e8 05 35 ff ff       	call   c0104cb6 <kfree>$/;"	l
c01117b1	obj/kernel.asm	/^c01117b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117b4	obj/kernel.asm	/^c01117b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01117b7	obj/kernel.asm	/^c01117b7:	e8 fa 34 ff ff       	call   c0104cb6 <kfree>$/;"	l
c01117bc	obj/kernel.asm	/^c01117bc:	c9                   	leave  $/;"	l
c01117bd	obj/kernel.asm	/^c01117bd:	c3                   	ret    $/;"	l
c01117be	obj/kernel.asm	/^c01117be <bitmap_getdata>:$/;"	l
c01117be	obj/kernel.asm	/^c01117be:	55                   	push   %ebp$/;"	l
c01117bf	obj/kernel.asm	/^c01117bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01117c1	obj/kernel.asm	/^c01117c1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01117c5	obj/kernel.asm	/^c01117c5:	74 12                	je     c01117d9 <bitmap_getdata+0x1b>$/;"	l
c01117c7	obj/kernel.asm	/^c01117c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117ca	obj/kernel.asm	/^c01117ca:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01117cd	obj/kernel.asm	/^c01117cd:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01117d4	obj/kernel.asm	/^c01117d4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01117d7	obj/kernel.asm	/^c01117d7:	89 10                	mov    %edx,(%eax)$/;"	l
c01117d9	obj/kernel.asm	/^c01117d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117dc	obj/kernel.asm	/^c01117dc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01117df	obj/kernel.asm	/^c01117df:	5d                   	pop    %ebp$/;"	l
c01117e0	obj/kernel.asm	/^c01117e0:	c3                   	ret    $/;"	l
c01117e1	obj/kernel.asm	/^c01117e1 <sfs_init>:$/;"	l
c01117e1	obj/kernel.asm	/^c01117e1:	55                   	push   %ebp$/;"	l
c01117e2	obj/kernel.asm	/^c01117e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01117e4	obj/kernel.asm	/^c01117e4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01117e7	obj/kernel.asm	/^c01117e7:	c7 04 24 71 90 11 c0 	movl   $0xc0119071,(%esp)$/;"	l
c01117ee	obj/kernel.asm	/^c01117ee:	e8 d6 08 00 00       	call   c01120c9 <sfs_mount>$/;"	l
c01117f3	obj/kernel.asm	/^c01117f3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01117f6	obj/kernel.asm	/^c01117f6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01117fa	obj/kernel.asm	/^c01117fa:	74 23                	je     c011181f <sfs_init+0x3e>$/;"	l
c01117fc	obj/kernel.asm	/^c01117fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01117ff	obj/kernel.asm	/^c01117ff:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111803	obj/kernel.asm	/^c0111803:	c7 44 24 08 77 90 11 	movl   $0xc0119077,0x8(%esp)$/;"	l
c011180a	obj/kernel.asm	/^c011180a:	c0 $/;"	l
c011180b	obj/kernel.asm	/^c011180b:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0111812	obj/kernel.asm	/^c0111812:	00 $/;"	l
c0111813	obj/kernel.asm	/^c0111813:	c7 04 24 94 90 11 c0 	movl   $0xc0119094,(%esp)$/;"	l
c011181a	obj/kernel.asm	/^c011181a:	e8 a9 f6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011181f	obj/kernel.asm	/^c011181f:	c9                   	leave  $/;"	l
c0111820	obj/kernel.asm	/^c0111820:	c3                   	ret    $/;"	l
c0111821	obj/kernel.asm	/^c0111821 <sfs_sync>:$/;"	l
c0111821	obj/kernel.asm	/^c0111821:	55                   	push   %ebp$/;"	l
c0111822	obj/kernel.asm	/^c0111822:	89 e5                	mov    %esp,%ebp$/;"	l
c0111824	obj/kernel.asm	/^c0111824:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0111827	obj/kernel.asm	/^c0111827:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011182a	obj/kernel.asm	/^c011182a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011182d	obj/kernel.asm	/^c011182d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111831	obj/kernel.asm	/^c0111831:	74 0a                	je     c011183d <sfs_sync+0x1c>$/;"	l
c0111833	obj/kernel.asm	/^c0111833:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111836	obj/kernel.asm	/^c0111836:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111839	obj/kernel.asm	/^c0111839:	85 c0                	test   %eax,%eax$/;"	l
c011183b	obj/kernel.asm	/^c011183b:	74 24                	je     c0111861 <sfs_sync+0x40>$/;"	l
c011183d	obj/kernel.asm	/^c011183d:	c7 44 24 0c a8 90 11 	movl   $0xc01190a8,0xc(%esp)$/;"	l
c0111844	obj/kernel.asm	/^c0111844:	c0 $/;"	l
c0111845	obj/kernel.asm	/^c0111845:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c011184c	obj/kernel.asm	/^c011184c:	c0 $/;"	l
c011184d	obj/kernel.asm	/^c011184d:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c0111854	obj/kernel.asm	/^c0111854:	00 $/;"	l
c0111855	obj/kernel.asm	/^c0111855:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c011185c	obj/kernel.asm	/^c011185c:	e8 67 f6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111861	obj/kernel.asm	/^c0111861:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111864	obj/kernel.asm	/^c0111864:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111867	obj/kernel.asm	/^c0111867:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011186a	obj/kernel.asm	/^c011186a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011186d	obj/kernel.asm	/^c011186d:	e8 f5 2f 00 00       	call   c0114867 <lock_sfs_fs>$/;"	l
c0111872	obj/kernel.asm	/^c0111872:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111875	obj/kernel.asm	/^c0111875:	83 c0 60             	add    $0x60,%eax$/;"	l
c0111878	obj/kernel.asm	/^c0111878:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011187b	obj/kernel.asm	/^c011187b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011187e	obj/kernel.asm	/^c011187e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111881	obj/kernel.asm	/^c0111881:	eb 74                	jmp    c01118f7 <sfs_sync+0xd6>$/;"	l
c0111883	obj/kernel.asm	/^c0111883:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111886	obj/kernel.asm	/^c0111886:	83 e8 1c             	sub    $0x1c,%eax$/;"	l
c0111889	obj/kernel.asm	/^c0111889:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011188c	obj/kernel.asm	/^c011188c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011188f	obj/kernel.asm	/^c011188f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111892	obj/kernel.asm	/^c0111892:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0111896	obj/kernel.asm	/^c0111896:	74 17                	je     c01118af <sfs_sync+0x8e>$/;"	l
c0111898	obj/kernel.asm	/^c0111898:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011189b	obj/kernel.asm	/^c011189b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011189e	obj/kernel.asm	/^c011189e:	85 c0                	test   %eax,%eax$/;"	l
c01118a0	obj/kernel.asm	/^c01118a0:	74 0d                	je     c01118af <sfs_sync+0x8e>$/;"	l
c01118a2	obj/kernel.asm	/^c01118a2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01118a5	obj/kernel.asm	/^c01118a5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01118a8	obj/kernel.asm	/^c01118a8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01118ab	obj/kernel.asm	/^c01118ab:	85 c0                	test   %eax,%eax$/;"	l
c01118ad	obj/kernel.asm	/^c01118ad:	75 24                	jne    c01118d3 <sfs_sync+0xb2>$/;"	l
c01118af	obj/kernel.asm	/^c01118af:	c7 44 24 0c fc 90 11 	movl   $0xc01190fc,0xc(%esp)$/;"	l
c01118b6	obj/kernel.asm	/^c01118b6:	c0 $/;"	l
c01118b7	obj/kernel.asm	/^c01118b7:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c01118be	obj/kernel.asm	/^c01118be:	c0 $/;"	l
c01118bf	obj/kernel.asm	/^c01118bf:	c7 44 24 04 1b 00 00 	movl   $0x1b,0x4(%esp)$/;"	l
c01118c6	obj/kernel.asm	/^c01118c6:	00 $/;"	l
c01118c7	obj/kernel.asm	/^c01118c7:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c01118ce	obj/kernel.asm	/^c01118ce:	e8 f5 f5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01118d3	obj/kernel.asm	/^c01118d3:	c7 44 24 04 4a 91 11 	movl   $0xc011914a,0x4(%esp)$/;"	l
c01118da	obj/kernel.asm	/^c01118da:	c0 $/;"	l
c01118db	obj/kernel.asm	/^c01118db:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01118de	obj/kernel.asm	/^c01118de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01118e1	obj/kernel.asm	/^c01118e1:	e8 db d8 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c01118e6	obj/kernel.asm	/^c01118e6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01118e9	obj/kernel.asm	/^c01118e9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01118ec	obj/kernel.asm	/^c01118ec:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01118ef	obj/kernel.asm	/^c01118ef:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01118f2	obj/kernel.asm	/^c01118f2:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01118f5	obj/kernel.asm	/^c01118f5:	ff d0                	call   *%eax$/;"	l
c01118f7	obj/kernel.asm	/^c01118f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01118fa	obj/kernel.asm	/^c01118fa:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01118fd	obj/kernel.asm	/^c01118fd:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111900	obj/kernel.asm	/^c0111900:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111903	obj/kernel.asm	/^c0111903:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111906	obj/kernel.asm	/^c0111906:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111909	obj/kernel.asm	/^c0111909:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c011190c	obj/kernel.asm	/^c011190c:	0f 85 71 ff ff ff    	jne    c0111883 <sfs_sync+0x62>$/;"	l
c0111912	obj/kernel.asm	/^c0111912:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111915	obj/kernel.asm	/^c0111915:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111918	obj/kernel.asm	/^c0111918:	e8 76 2f 00 00       	call   c0114893 <unlock_sfs_fs>$/;"	l
c011191d	obj/kernel.asm	/^c011191d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111920	obj/kernel.asm	/^c0111920:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0111923	obj/kernel.asm	/^c0111923:	85 c0                	test   %eax,%eax$/;"	l
c0111925	obj/kernel.asm	/^c0111925:	74 50                	je     c0111977 <sfs_sync+0x156>$/;"	l
c0111927	obj/kernel.asm	/^c0111927:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011192a	obj/kernel.asm	/^c011192a:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0111931	obj/kernel.asm	/^c0111931:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111934	obj/kernel.asm	/^c0111934:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111937	obj/kernel.asm	/^c0111937:	e8 bd 2d 00 00       	call   c01146f9 <sfs_sync_super>$/;"	l
c011193c	obj/kernel.asm	/^c011193c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c011193f	obj/kernel.asm	/^c011193f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111943	obj/kernel.asm	/^c0111943:	74 0f                	je     c0111954 <sfs_sync+0x133>$/;"	l
c0111945	obj/kernel.asm	/^c0111945:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111948	obj/kernel.asm	/^c0111948:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c011194f	obj/kernel.asm	/^c011194f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111952	obj/kernel.asm	/^c0111952:	eb 28                	jmp    c011197c <sfs_sync+0x15b>$/;"	l
c0111954	obj/kernel.asm	/^c0111954:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111957	obj/kernel.asm	/^c0111957:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011195a	obj/kernel.asm	/^c011195a:	e8 26 2e 00 00       	call   c0114785 <sfs_sync_freemap>$/;"	l
c011195f	obj/kernel.asm	/^c011195f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111962	obj/kernel.asm	/^c0111962:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111966	obj/kernel.asm	/^c0111966:	74 0f                	je     c0111977 <sfs_sync+0x156>$/;"	l
c0111968	obj/kernel.asm	/^c0111968:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011196b	obj/kernel.asm	/^c011196b:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0111972	obj/kernel.asm	/^c0111972:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111975	obj/kernel.asm	/^c0111975:	eb 05                	jmp    c011197c <sfs_sync+0x15b>$/;"	l
c0111977	obj/kernel.asm	/^c0111977:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011197c	obj/kernel.asm	/^c011197c:	c9                   	leave  $/;"	l
c011197d	obj/kernel.asm	/^c011197d:	c3                   	ret    $/;"	l
c011197e	obj/kernel.asm	/^c011197e <sfs_get_root>:$/;"	l
c011197e	obj/kernel.asm	/^c011197e:	55                   	push   %ebp$/;"	l
c011197f	obj/kernel.asm	/^c011197f:	89 e5                	mov    %esp,%ebp$/;"	l
c0111981	obj/kernel.asm	/^c0111981:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111984	obj/kernel.asm	/^c0111984:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111987	obj/kernel.asm	/^c0111987:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011198a	obj/kernel.asm	/^c011198a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011198e	obj/kernel.asm	/^c011198e:	74 0a                	je     c011199a <sfs_get_root+0x1c>$/;"	l
c0111990	obj/kernel.asm	/^c0111990:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111993	obj/kernel.asm	/^c0111993:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111996	obj/kernel.asm	/^c0111996:	85 c0                	test   %eax,%eax$/;"	l
c0111998	obj/kernel.asm	/^c0111998:	74 24                	je     c01119be <sfs_get_root+0x40>$/;"	l
c011199a	obj/kernel.asm	/^c011199a:	c7 44 24 0c a8 90 11 	movl   $0xc01190a8,0xc(%esp)$/;"	l
c01119a1	obj/kernel.asm	/^c01119a1:	c0 $/;"	l
c01119a2	obj/kernel.asm	/^c01119a2:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c01119a9	obj/kernel.asm	/^c01119a9:	c0 $/;"	l
c01119aa	obj/kernel.asm	/^c01119aa:	c7 44 24 04 36 00 00 	movl   $0x36,0x4(%esp)$/;"	l
c01119b1	obj/kernel.asm	/^c01119b1:	00 $/;"	l
c01119b2	obj/kernel.asm	/^c01119b2:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c01119b9	obj/kernel.asm	/^c01119b9:	e8 0a f5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01119be	obj/kernel.asm	/^c01119be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01119c1	obj/kernel.asm	/^c01119c1:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01119c8	obj/kernel.asm	/^c01119c8:	00 $/;"	l
c01119c9	obj/kernel.asm	/^c01119c9:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c01119cc	obj/kernel.asm	/^c01119cc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01119d0	obj/kernel.asm	/^c01119d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01119d3	obj/kernel.asm	/^c01119d3:	e8 e1 0b 00 00       	call   c01125b9 <sfs_load_inode>$/;"	l
c01119d8	obj/kernel.asm	/^c01119d8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01119db	obj/kernel.asm	/^c01119db:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01119df	obj/kernel.asm	/^c01119df:	74 23                	je     c0111a04 <sfs_get_root+0x86>$/;"	l
c01119e1	obj/kernel.asm	/^c01119e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01119e4	obj/kernel.asm	/^c01119e4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01119e8	obj/kernel.asm	/^c01119e8:	c7 44 24 08 50 91 11 	movl   $0xc0119150,0x8(%esp)$/;"	l
c01119ef	obj/kernel.asm	/^c01119ef:	c0 $/;"	l
c01119f0	obj/kernel.asm	/^c01119f0:	c7 44 24 04 37 00 00 	movl   $0x37,0x4(%esp)$/;"	l
c01119f7	obj/kernel.asm	/^c01119f7:	00 $/;"	l
c01119f8	obj/kernel.asm	/^c01119f8:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c01119ff	obj/kernel.asm	/^c01119ff:	e8 c4 f4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111a04	obj/kernel.asm	/^c0111a04:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a07	obj/kernel.asm	/^c0111a07:	c9                   	leave  $/;"	l
c0111a08	obj/kernel.asm	/^c0111a08:	c3                   	ret    $/;"	l
c0111a09	obj/kernel.asm	/^c0111a09 <sfs_unmount>:$/;"	l
c0111a09	obj/kernel.asm	/^c0111a09:	55                   	push   %ebp$/;"	l
c0111a0a	obj/kernel.asm	/^c0111a0a:	89 e5                	mov    %esp,%ebp$/;"	l
c0111a0c	obj/kernel.asm	/^c0111a0c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111a0f	obj/kernel.asm	/^c0111a0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111a12	obj/kernel.asm	/^c0111a12:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111a15	obj/kernel.asm	/^c0111a15:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111a19	obj/kernel.asm	/^c0111a19:	74 0a                	je     c0111a25 <sfs_unmount+0x1c>$/;"	l
c0111a1b	obj/kernel.asm	/^c0111a1b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111a1e	obj/kernel.asm	/^c0111a1e:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111a21	obj/kernel.asm	/^c0111a21:	85 c0                	test   %eax,%eax$/;"	l
c0111a23	obj/kernel.asm	/^c0111a23:	74 24                	je     c0111a49 <sfs_unmount+0x40>$/;"	l
c0111a25	obj/kernel.asm	/^c0111a25:	c7 44 24 0c a8 90 11 	movl   $0xc01190a8,0xc(%esp)$/;"	l
c0111a2c	obj/kernel.asm	/^c0111a2c:	c0 $/;"	l
c0111a2d	obj/kernel.asm	/^c0111a2d:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c0111a34	obj/kernel.asm	/^c0111a34:	c0 $/;"	l
c0111a35	obj/kernel.asm	/^c0111a35:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
c0111a3c	obj/kernel.asm	/^c0111a3c:	00 $/;"	l
c0111a3d	obj/kernel.asm	/^c0111a3d:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c0111a44	obj/kernel.asm	/^c0111a44:	e8 7f f4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111a49	obj/kernel.asm	/^c0111a49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111a4c	obj/kernel.asm	/^c0111a4c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111a4f	obj/kernel.asm	/^c0111a4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111a52	obj/kernel.asm	/^c0111a52:	83 c0 60             	add    $0x60,%eax$/;"	l
c0111a55	obj/kernel.asm	/^c0111a55:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111a58	obj/kernel.asm	/^c0111a58:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a5b	obj/kernel.asm	/^c0111a5b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111a5e	obj/kernel.asm	/^c0111a5e:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0111a61	obj/kernel.asm	/^c0111a61:	0f 94 c0             	sete   %al$/;"	l
c0111a64	obj/kernel.asm	/^c0111a64:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0111a67	obj/kernel.asm	/^c0111a67:	85 c0                	test   %eax,%eax$/;"	l
c0111a69	obj/kernel.asm	/^c0111a69:	75 07                	jne    c0111a72 <sfs_unmount+0x69>$/;"	l
c0111a6b	obj/kernel.asm	/^c0111a6b:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c0111a70	obj/kernel.asm	/^c0111a70:	eb 68                	jmp    c0111ada <sfs_unmount+0xd1>$/;"	l
c0111a72	obj/kernel.asm	/^c0111a72:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111a75	obj/kernel.asm	/^c0111a75:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0111a78	obj/kernel.asm	/^c0111a78:	85 c0                	test   %eax,%eax$/;"	l
c0111a7a	obj/kernel.asm	/^c0111a7a:	74 24                	je     c0111aa0 <sfs_unmount+0x97>$/;"	l
c0111a7c	obj/kernel.asm	/^c0111a7c:	c7 44 24 0c 69 91 11 	movl   $0xc0119169,0xc(%esp)$/;"	l
c0111a83	obj/kernel.asm	/^c0111a83:	c0 $/;"	l
c0111a84	obj/kernel.asm	/^c0111a84:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c0111a8b	obj/kernel.asm	/^c0111a8b:	c0 $/;"	l
c0111a8c	obj/kernel.asm	/^c0111a8c:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c0111a93	obj/kernel.asm	/^c0111a93:	00 $/;"	l
c0111a94	obj/kernel.asm	/^c0111a94:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c0111a9b	obj/kernel.asm	/^c0111a9b:	e8 28 f4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111aa0	obj/kernel.asm	/^c0111aa0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111aa3	obj/kernel.asm	/^c0111aa3:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0111aa6	obj/kernel.asm	/^c0111aa6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111aa9	obj/kernel.asm	/^c0111aa9:	e8 ef fc ff ff       	call   c011179d <bitmap_destroy>$/;"	l
c0111aae	obj/kernel.asm	/^c0111aae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111ab1	obj/kernel.asm	/^c0111ab1:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111ab4	obj/kernel.asm	/^c0111ab4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111ab7	obj/kernel.asm	/^c0111ab7:	e8 fa 31 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0111abc	obj/kernel.asm	/^c0111abc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111abf	obj/kernel.asm	/^c0111abf:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c0111ac2	obj/kernel.asm	/^c0111ac2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111ac5	obj/kernel.asm	/^c0111ac5:	e8 ec 31 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0111aca	obj/kernel.asm	/^c0111aca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111acd	obj/kernel.asm	/^c0111acd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111ad0	obj/kernel.asm	/^c0111ad0:	e8 e1 31 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0111ad5	obj/kernel.asm	/^c0111ad5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111ada	obj/kernel.asm	/^c0111ada:	c9                   	leave  $/;"	l
c0111adb	obj/kernel.asm	/^c0111adb:	c3                   	ret    $/;"	l
c0111adc	obj/kernel.asm	/^c0111adc <sfs_cleanup>:$/;"	l
c0111adc	obj/kernel.asm	/^c0111adc:	55                   	push   %ebp$/;"	l
c0111add	obj/kernel.asm	/^c0111add:	89 e5                	mov    %esp,%ebp$/;"	l
c0111adf	obj/kernel.asm	/^c0111adf:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0111ae2	obj/kernel.asm	/^c0111ae2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111ae5	obj/kernel.asm	/^c0111ae5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111ae8	obj/kernel.asm	/^c0111ae8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111aec	obj/kernel.asm	/^c0111aec:	74 0a                	je     c0111af8 <sfs_cleanup+0x1c>$/;"	l
c0111aee	obj/kernel.asm	/^c0111aee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111af1	obj/kernel.asm	/^c0111af1:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111af4	obj/kernel.asm	/^c0111af4:	85 c0                	test   %eax,%eax$/;"	l
c0111af6	obj/kernel.asm	/^c0111af6:	74 24                	je     c0111b1c <sfs_cleanup+0x40>$/;"	l
c0111af8	obj/kernel.asm	/^c0111af8:	c7 44 24 0c a8 90 11 	movl   $0xc01190a8,0xc(%esp)$/;"	l
c0111aff	obj/kernel.asm	/^c0111aff:	c0 $/;"	l
c0111b00	obj/kernel.asm	/^c0111b00:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c0111b07	obj/kernel.asm	/^c0111b07:	c0 $/;"	l
c0111b08	obj/kernel.asm	/^c0111b08:	c7 44 24 04 54 00 00 	movl   $0x54,0x4(%esp)$/;"	l
c0111b0f	obj/kernel.asm	/^c0111b0f:	00 $/;"	l
c0111b10	obj/kernel.asm	/^c0111b10:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c0111b17	obj/kernel.asm	/^c0111b17:	e8 ac f3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111b1c	obj/kernel.asm	/^c0111b1c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111b1f	obj/kernel.asm	/^c0111b1f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111b22	obj/kernel.asm	/^c0111b22:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111b25	obj/kernel.asm	/^c0111b25:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111b28	obj/kernel.asm	/^c0111b28:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111b2b	obj/kernel.asm	/^c0111b2b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111b2e	obj/kernel.asm	/^c0111b2e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111b31	obj/kernel.asm	/^c0111b31:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111b34	obj/kernel.asm	/^c0111b34:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111b37	obj/kernel.asm	/^c0111b37:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0111b3a	obj/kernel.asm	/^c0111b3a:	89 d1                	mov    %edx,%ecx$/;"	l
c0111b3c	obj/kernel.asm	/^c0111b3c:	29 c1                	sub    %eax,%ecx$/;"	l
c0111b3e	obj/kernel.asm	/^c0111b3e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111b41	obj/kernel.asm	/^c0111b41:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0111b44	obj/kernel.asm	/^c0111b44:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111b47	obj/kernel.asm	/^c0111b47:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0111b4b	obj/kernel.asm	/^c0111b4b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111b4e	obj/kernel.asm	/^c0111b4e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111b52	obj/kernel.asm	/^c0111b52:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0111b56	obj/kernel.asm	/^c0111b56:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111b5a	obj/kernel.asm	/^c0111b5a:	c7 04 24 7c 91 11 c0 	movl   $0xc011917c,(%esp)$/;"	l
c0111b61	obj/kernel.asm	/^c0111b61:	e8 ff e7 fe ff       	call   c0100365 <cprintf>$/;"	l
c0111b66	obj/kernel.asm	/^c0111b66:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0111b6d	obj/kernel.asm	/^c0111b6d:	eb 1d                	jmp    c0111b8c <sfs_cleanup+0xb0>$/;"	l
c0111b6f	obj/kernel.asm	/^c0111b6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111b72	obj/kernel.asm	/^c0111b72:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0111b75	obj/kernel.asm	/^c0111b75:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0111b78	obj/kernel.asm	/^c0111b78:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0111b7b	obj/kernel.asm	/^c0111b7b:	ff d0                	call   *%eax$/;"	l
c0111b7d	obj/kernel.asm	/^c0111b7d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111b80	obj/kernel.asm	/^c0111b80:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111b84	obj/kernel.asm	/^c0111b84:	75 02                	jne    c0111b88 <sfs_cleanup+0xac>$/;"	l
c0111b86	obj/kernel.asm	/^c0111b86:	eb 0a                	jmp    c0111b92 <sfs_cleanup+0xb6>$/;"	l
c0111b88	obj/kernel.asm	/^c0111b88:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0111b8c	obj/kernel.asm	/^c0111b8c:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c0111b90	obj/kernel.asm	/^c0111b90:	7e dd                	jle    c0111b6f <sfs_cleanup+0x93>$/;"	l
c0111b92	obj/kernel.asm	/^c0111b92:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111b96	obj/kernel.asm	/^c0111b96:	74 2d                	je     c0111bc5 <sfs_cleanup+0xe9>$/;"	l
c0111b98	obj/kernel.asm	/^c0111b98:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111b9b	obj/kernel.asm	/^c0111b9b:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0111b9e	obj/kernel.asm	/^c0111b9e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111ba1	obj/kernel.asm	/^c0111ba1:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0111ba5	obj/kernel.asm	/^c0111ba5:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0111ba9	obj/kernel.asm	/^c0111ba9:	c7 44 24 08 9b 91 11 	movl   $0xc011919b,0x8(%esp)$/;"	l
c0111bb0	obj/kernel.asm	/^c0111bb0:	c0 $/;"	l
c0111bb1	obj/kernel.asm	/^c0111bb1:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c0111bb8	obj/kernel.asm	/^c0111bb8:	00 $/;"	l
c0111bb9	obj/kernel.asm	/^c0111bb9:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c0111bc0	obj/kernel.asm	/^c0111bc0:	e8 6f f3 fe ff       	call   c0100f34 <__warn>$/;"	l
c0111bc5	obj/kernel.asm	/^c0111bc5:	c9                   	leave  $/;"	l
c0111bc6	obj/kernel.asm	/^c0111bc6:	c3                   	ret    $/;"	l
c0111bc7	obj/kernel.asm	/^c0111bc7 <sfs_init_read>:$/;"	l
c0111bc7	obj/kernel.asm	/^c0111bc7:	55                   	push   %ebp$/;"	l
c0111bc8	obj/kernel.asm	/^c0111bc8:	89 e5                	mov    %esp,%ebp$/;"	l
c0111bca	obj/kernel.asm	/^c0111bca:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0111bcd	obj/kernel.asm	/^c0111bcd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111bd0	obj/kernel.asm	/^c0111bd0:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0111bd3	obj/kernel.asm	/^c0111bd3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111bd7	obj/kernel.asm	/^c0111bd7:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0111bde	obj/kernel.asm	/^c0111bde:	00 $/;"	l
c0111bdf	obj/kernel.asm	/^c0111bdf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0111be2	obj/kernel.asm	/^c0111be2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111be6	obj/kernel.asm	/^c0111be6:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0111be9	obj/kernel.asm	/^c0111be9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111bec	obj/kernel.asm	/^c0111bec:	e8 53 96 ff ff       	call   c010b244 <iobuf_init>$/;"	l
c0111bf1	obj/kernel.asm	/^c0111bf1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111bf4	obj/kernel.asm	/^c0111bf4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111bf7	obj/kernel.asm	/^c0111bf7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0111bfa	obj/kernel.asm	/^c0111bfa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0111c01	obj/kernel.asm	/^c0111c01:	00 $/;"	l
c0111c02	obj/kernel.asm	/^c0111c02:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0111c05	obj/kernel.asm	/^c0111c05:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111c09	obj/kernel.asm	/^c0111c09:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0111c0c	obj/kernel.asm	/^c0111c0c:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0111c0f	obj/kernel.asm	/^c0111c0f:	ff d0                	call   *%eax$/;"	l
c0111c11	obj/kernel.asm	/^c0111c11:	c9                   	leave  $/;"	l
c0111c12	obj/kernel.asm	/^c0111c12:	c3                   	ret    $/;"	l
c0111c13	obj/kernel.asm	/^c0111c13 <sfs_init_freemap>:$/;"	l
c0111c13	obj/kernel.asm	/^c0111c13:	55                   	push   %ebp$/;"	l
c0111c14	obj/kernel.asm	/^c0111c14:	89 e5                	mov    %esp,%ebp$/;"	l
c0111c16	obj/kernel.asm	/^c0111c16:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111c19	obj/kernel.asm	/^c0111c19:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0111c1c	obj/kernel.asm	/^c0111c1c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111c20	obj/kernel.asm	/^c0111c20:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111c23	obj/kernel.asm	/^c0111c23:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111c26	obj/kernel.asm	/^c0111c26:	e8 93 fb ff ff       	call   c01117be <bitmap_getdata>$/;"	l
c0111c2b	obj/kernel.asm	/^c0111c2b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111c2e	obj/kernel.asm	/^c0111c2e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111c32	obj/kernel.asm	/^c0111c32:	74 0f                	je     c0111c43 <sfs_init_freemap+0x30>$/;"	l
c0111c34	obj/kernel.asm	/^c0111c34:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111c37	obj/kernel.asm	/^c0111c37:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0111c3a	obj/kernel.asm	/^c0111c3a:	89 c2                	mov    %eax,%edx$/;"	l
c0111c3c	obj/kernel.asm	/^c0111c3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111c3f	obj/kernel.asm	/^c0111c3f:	39 c2                	cmp    %eax,%edx$/;"	l
c0111c41	obj/kernel.asm	/^c0111c41:	74 24                	je     c0111c67 <sfs_init_freemap+0x54>$/;"	l
c0111c43	obj/kernel.asm	/^c0111c43:	c7 44 24 0c b8 91 11 	movl   $0xc01191b8,0xc(%esp)$/;"	l
c0111c4a	obj/kernel.asm	/^c0111c4a:	c0 $/;"	l
c0111c4b	obj/kernel.asm	/^c0111c4b:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c0111c52	obj/kernel.asm	/^c0111c52:	c0 $/;"	l
c0111c53	obj/kernel.asm	/^c0111c53:	c7 44 24 04 83 00 00 	movl   $0x83,0x4(%esp)$/;"	l
c0111c5a	obj/kernel.asm	/^c0111c5a:	00 $/;"	l
c0111c5b	obj/kernel.asm	/^c0111c5b:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c0111c62	obj/kernel.asm	/^c0111c62:	e8 61 f2 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111c67	obj/kernel.asm	/^c0111c67:	eb 36                	jmp    c0111c9f <sfs_init_freemap+0x8c>$/;"	l
c0111c69	obj/kernel.asm	/^c0111c69:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111c6c	obj/kernel.asm	/^c0111c6c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111c70	obj/kernel.asm	/^c0111c70:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0111c73	obj/kernel.asm	/^c0111c73:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111c77	obj/kernel.asm	/^c0111c77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111c7a	obj/kernel.asm	/^c0111c7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111c7d	obj/kernel.asm	/^c0111c7d:	e8 45 ff ff ff       	call   c0111bc7 <sfs_init_read>$/;"	l
c0111c82	obj/kernel.asm	/^c0111c82:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111c85	obj/kernel.asm	/^c0111c85:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111c89	obj/kernel.asm	/^c0111c89:	74 05                	je     c0111c90 <sfs_init_freemap+0x7d>$/;"	l
c0111c8b	obj/kernel.asm	/^c0111c8b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111c8e	obj/kernel.asm	/^c0111c8e:	eb 1a                	jmp    c0111caa <sfs_init_freemap+0x97>$/;"	l
c0111c90	obj/kernel.asm	/^c0111c90:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0111c94	obj/kernel.asm	/^c0111c94:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0111c98	obj/kernel.asm	/^c0111c98:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0111c9f	obj/kernel.asm	/^c0111c9f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0111ca3	obj/kernel.asm	/^c0111ca3:	75 c4                	jne    c0111c69 <sfs_init_freemap+0x56>$/;"	l
c0111ca5	obj/kernel.asm	/^c0111ca5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111caa	obj/kernel.asm	/^c0111caa:	c9                   	leave  $/;"	l
c0111cab	obj/kernel.asm	/^c0111cab:	c3                   	ret    $/;"	l
c0111cac	obj/kernel.asm	/^c0111cac <sfs_do_mount>:$/;"	l
c0111cac	obj/kernel.asm	/^c0111cac:	55                   	push   %ebp$/;"	l
c0111cad	obj/kernel.asm	/^c0111cad:	89 e5                	mov    %esp,%ebp$/;"	l
c0111caf	obj/kernel.asm	/^c0111caf:	83 ec 78             	sub    $0x78,%esp$/;"	l
c0111cb2	obj/kernel.asm	/^c0111cb2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111cb5	obj/kernel.asm	/^c0111cb5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111cb8	obj/kernel.asm	/^c0111cb8:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0111cbd	obj/kernel.asm	/^c0111cbd:	74 0a                	je     c0111cc9 <sfs_do_mount+0x1d>$/;"	l
c0111cbf	obj/kernel.asm	/^c0111cbf:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax$/;"	l
c0111cc4	obj/kernel.asm	/^c0111cc4:	e9 fe 03 00 00       	jmp    c01120c7 <sfs_do_mount+0x41b>$/;"	l
c0111cc9	obj/kernel.asm	/^c0111cc9:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0111cd0	obj/kernel.asm	/^c0111cd0:	e8 df d5 ff ff       	call   c010f2b4 <__alloc_fs>$/;"	l
c0111cd5	obj/kernel.asm	/^c0111cd5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111cd8	obj/kernel.asm	/^c0111cd8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111cdc	obj/kernel.asm	/^c0111cdc:	75 0a                	jne    c0111ce8 <sfs_do_mount+0x3c>$/;"	l
c0111cde	obj/kernel.asm	/^c0111cde:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0111ce3	obj/kernel.asm	/^c0111ce3:	e9 df 03 00 00       	jmp    c01120c7 <sfs_do_mount+0x41b>$/;"	l
c0111ce8	obj/kernel.asm	/^c0111ce8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111ceb	obj/kernel.asm	/^c0111ceb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111cee	obj/kernel.asm	/^c0111cee:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0111cf2	obj/kernel.asm	/^c0111cf2:	74 0a                	je     c0111cfe <sfs_do_mount+0x52>$/;"	l
c0111cf4	obj/kernel.asm	/^c0111cf4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111cf7	obj/kernel.asm	/^c0111cf7:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111cfa	obj/kernel.asm	/^c0111cfa:	85 c0                	test   %eax,%eax$/;"	l
c0111cfc	obj/kernel.asm	/^c0111cfc:	74 24                	je     c0111d22 <sfs_do_mount+0x76>$/;"	l
c0111cfe	obj/kernel.asm	/^c0111cfe:	c7 44 24 0c a8 90 11 	movl   $0xc01190a8,0xc(%esp)$/;"	l
c0111d05	obj/kernel.asm	/^c0111d05:	c0 $/;"	l
c0111d06	obj/kernel.asm	/^c0111d06:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c0111d0d	obj/kernel.asm	/^c0111d0d:	c0 $/;"	l
c0111d0e	obj/kernel.asm	/^c0111d0e:	c7 44 24 04 a3 00 00 	movl   $0xa3,0x4(%esp)$/;"	l
c0111d15	obj/kernel.asm	/^c0111d15:	00 $/;"	l
c0111d16	obj/kernel.asm	/^c0111d16:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c0111d1d	obj/kernel.asm	/^c0111d1d:	e8 a6 f1 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111d22	obj/kernel.asm	/^c0111d22:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111d25	obj/kernel.asm	/^c0111d25:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111d28	obj/kernel.asm	/^c0111d28:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111d2b	obj/kernel.asm	/^c0111d2b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0111d2e	obj/kernel.asm	/^c0111d2e:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c0111d31	obj/kernel.asm	/^c0111d31:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0111d38	obj/kernel.asm	/^c0111d38:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c0111d3f	obj/kernel.asm	/^c0111d3f:	e8 57 2f ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0111d44	obj/kernel.asm	/^c0111d44:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111d47	obj/kernel.asm	/^c0111d47:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111d4a	obj/kernel.asm	/^c0111d4a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0111d4d	obj/kernel.asm	/^c0111d4d:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c0111d50	obj/kernel.asm	/^c0111d50:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111d53	obj/kernel.asm	/^c0111d53:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111d56	obj/kernel.asm	/^c0111d56:	85 c0                	test   %eax,%eax$/;"	l
c0111d58	obj/kernel.asm	/^c0111d58:	75 05                	jne    c0111d5f <sfs_do_mount+0xb3>$/;"	l
c0111d5a	obj/kernel.asm	/^c0111d5a:	e9 5a 03 00 00       	jmp    c01120b9 <sfs_do_mount+0x40d>$/;"	l
c0111d5f	obj/kernel.asm	/^c0111d5f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111d62	obj/kernel.asm	/^c0111d62:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111d66	obj/kernel.asm	/^c0111d66:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0111d6d	obj/kernel.asm	/^c0111d6d:	00 $/;"	l
c0111d6e	obj/kernel.asm	/^c0111d6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111d71	obj/kernel.asm	/^c0111d71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111d74	obj/kernel.asm	/^c0111d74:	e8 4e fe ff ff       	call   c0111bc7 <sfs_init_read>$/;"	l
c0111d79	obj/kernel.asm	/^c0111d79:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111d7c	obj/kernel.asm	/^c0111d7c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111d80	obj/kernel.asm	/^c0111d80:	74 05                	je     c0111d87 <sfs_do_mount+0xdb>$/;"	l
c0111d82	obj/kernel.asm	/^c0111d82:	e9 27 03 00 00       	jmp    c01120ae <sfs_do_mount+0x402>$/;"	l
c0111d87	obj/kernel.asm	/^c0111d87:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0111d8e	obj/kernel.asm	/^c0111d8e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111d91	obj/kernel.asm	/^c0111d91:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0111d94	obj/kernel.asm	/^c0111d94:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111d97	obj/kernel.asm	/^c0111d97:	8b 00                	mov    (%eax),%eax$/;"	l
c0111d99	obj/kernel.asm	/^c0111d99:	3d 2a be 8d 2f       	cmp    $0x2f8dbe2a,%eax$/;"	l
c0111d9e	obj/kernel.asm	/^c0111d9e:	74 22                	je     c0111dc2 <sfs_do_mount+0x116>$/;"	l
c0111da0	obj/kernel.asm	/^c0111da0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111da3	obj/kernel.asm	/^c0111da3:	8b 00                	mov    (%eax),%eax$/;"	l
c0111da5	obj/kernel.asm	/^c0111da5:	c7 44 24 08 2a be 8d 	movl   $0x2f8dbe2a,0x8(%esp)$/;"	l
c0111dac	obj/kernel.asm	/^c0111dac:	2f $/;"	l
c0111dad	obj/kernel.asm	/^c0111dad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111db1	obj/kernel.asm	/^c0111db1:	c7 04 24 e4 91 11 c0 	movl   $0xc01191e4,(%esp)$/;"	l
c0111db8	obj/kernel.asm	/^c0111db8:	e8 a8 e5 fe ff       	call   c0100365 <cprintf>$/;"	l
c0111dbd	obj/kernel.asm	/^c0111dbd:	e9 ec 02 00 00       	jmp    c01120ae <sfs_do_mount+0x402>$/;"	l
c0111dc2	obj/kernel.asm	/^c0111dc2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111dc5	obj/kernel.asm	/^c0111dc5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0111dc8	obj/kernel.asm	/^c0111dc8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111dcb	obj/kernel.asm	/^c0111dcb:	8b 00                	mov    (%eax),%eax$/;"	l
c0111dcd	obj/kernel.asm	/^c0111dcd:	39 c2                	cmp    %eax,%edx$/;"	l
c0111dcf	obj/kernel.asm	/^c0111dcf:	76 24                	jbe    c0111df5 <sfs_do_mount+0x149>$/;"	l
c0111dd1	obj/kernel.asm	/^c0111dd1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111dd4	obj/kernel.asm	/^c0111dd4:	8b 10                	mov    (%eax),%edx$/;"	l
c0111dd6	obj/kernel.asm	/^c0111dd6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111dd9	obj/kernel.asm	/^c0111dd9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111ddc	obj/kernel.asm	/^c0111ddc:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0111de0	obj/kernel.asm	/^c0111de0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111de4	obj/kernel.asm	/^c0111de4:	c7 04 24 1c 92 11 c0 	movl   $0xc011921c,(%esp)$/;"	l
c0111deb	obj/kernel.asm	/^c0111deb:	e8 75 e5 fe ff       	call   c0100365 <cprintf>$/;"	l
c0111df0	obj/kernel.asm	/^c0111df0:	e9 b9 02 00 00       	jmp    c01120ae <sfs_do_mount+0x402>$/;"	l
c0111df5	obj/kernel.asm	/^c0111df5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111df8	obj/kernel.asm	/^c0111df8:	c6 40 2b 00          	movb   $0x0,0x2b(%eax)$/;"	l
c0111dfc	obj/kernel.asm	/^c0111dfc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111dff	obj/kernel.asm	/^c0111dff:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0111e02	obj/kernel.asm	/^c0111e02:	8b 0a                	mov    (%edx),%ecx$/;"	l
c0111e04	obj/kernel.asm	/^c0111e04:	89 08                	mov    %ecx,(%eax)$/;"	l
c0111e06	obj/kernel.asm	/^c0111e06:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c0111e09	obj/kernel.asm	/^c0111e09:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
c0111e0c	obj/kernel.asm	/^c0111e0c:	8b 4a 08             	mov    0x8(%edx),%ecx$/;"	l
c0111e0f	obj/kernel.asm	/^c0111e0f:	89 48 08             	mov    %ecx,0x8(%eax)$/;"	l
c0111e12	obj/kernel.asm	/^c0111e12:	8b 4a 0c             	mov    0xc(%edx),%ecx$/;"	l
c0111e15	obj/kernel.asm	/^c0111e15:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c0111e18	obj/kernel.asm	/^c0111e18:	8b 4a 10             	mov    0x10(%edx),%ecx$/;"	l
c0111e1b	obj/kernel.asm	/^c0111e1b:	89 48 10             	mov    %ecx,0x10(%eax)$/;"	l
c0111e1e	obj/kernel.asm	/^c0111e1e:	8b 4a 14             	mov    0x14(%edx),%ecx$/;"	l
c0111e21	obj/kernel.asm	/^c0111e21:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
c0111e24	obj/kernel.asm	/^c0111e24:	8b 4a 18             	mov    0x18(%edx),%ecx$/;"	l
c0111e27	obj/kernel.asm	/^c0111e27:	89 48 18             	mov    %ecx,0x18(%eax)$/;"	l
c0111e2a	obj/kernel.asm	/^c0111e2a:	8b 4a 1c             	mov    0x1c(%edx),%ecx$/;"	l
c0111e2d	obj/kernel.asm	/^c0111e2d:	89 48 1c             	mov    %ecx,0x1c(%eax)$/;"	l
c0111e30	obj/kernel.asm	/^c0111e30:	8b 4a 20             	mov    0x20(%edx),%ecx$/;"	l
c0111e33	obj/kernel.asm	/^c0111e33:	89 48 20             	mov    %ecx,0x20(%eax)$/;"	l
c0111e36	obj/kernel.asm	/^c0111e36:	8b 4a 24             	mov    0x24(%edx),%ecx$/;"	l
c0111e39	obj/kernel.asm	/^c0111e39:	89 48 24             	mov    %ecx,0x24(%eax)$/;"	l
c0111e3c	obj/kernel.asm	/^c0111e3c:	8b 52 28             	mov    0x28(%edx),%edx$/;"	l
c0111e3f	obj/kernel.asm	/^c0111e3f:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c0111e42	obj/kernel.asm	/^c0111e42:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0111e49	obj/kernel.asm	/^c0111e49:	c7 04 24 00 20 00 00 	movl   $0x2000,(%esp)$/;"	l
c0111e50	obj/kernel.asm	/^c0111e50:	e8 46 2e ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0111e55	obj/kernel.asm	/^c0111e55:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0111e58	obj/kernel.asm	/^c0111e58:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111e5b	obj/kernel.asm	/^c0111e5b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0111e5e	obj/kernel.asm	/^c0111e5e:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c0111e61	obj/kernel.asm	/^c0111e61:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111e64	obj/kernel.asm	/^c0111e64:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c0111e67	obj/kernel.asm	/^c0111e67:	85 c0                	test   %eax,%eax$/;"	l
c0111e69	obj/kernel.asm	/^c0111e69:	75 05                	jne    c0111e70 <sfs_do_mount+0x1c4>$/;"	l
c0111e6b	obj/kernel.asm	/^c0111e6b:	e9 3e 02 00 00       	jmp    c01120ae <sfs_do_mount+0x402>$/;"	l
c0111e70	obj/kernel.asm	/^c0111e70:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0111e77	obj/kernel.asm	/^c0111e77:	eb 2a                	jmp    c0111ea3 <sfs_do_mount+0x1f7>$/;"	l
c0111e79	obj/kernel.asm	/^c0111e79:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111e7c	obj/kernel.asm	/^c0111e7c:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0111e83	obj/kernel.asm	/^c0111e83:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0111e86	obj/kernel.asm	/^c0111e86:	01 d0                	add    %edx,%eax$/;"	l
c0111e88	obj/kernel.asm	/^c0111e88:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0111e8b	obj/kernel.asm	/^c0111e8b:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0111e8e	obj/kernel.asm	/^c0111e8e:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0111e91	obj/kernel.asm	/^c0111e91:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0111e94	obj/kernel.asm	/^c0111e94:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0111e97	obj/kernel.asm	/^c0111e97:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0111e9a	obj/kernel.asm	/^c0111e9a:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0111e9d	obj/kernel.asm	/^c0111e9d:	89 10                	mov    %edx,(%eax)$/;"	l
c0111e9f	obj/kernel.asm	/^c0111e9f:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0111ea3	obj/kernel.asm	/^c0111ea3:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
c0111eaa	obj/kernel.asm	/^c0111eaa:	76 cd                	jbe    c0111e79 <sfs_do_mount+0x1cd>$/;"	l
c0111eac	obj/kernel.asm	/^c0111eac:	c7 45 d0 00 80 00 00 	movl   $0x8000,-0x30(%ebp)$/;"	l
c0111eb3	obj/kernel.asm	/^c0111eb3:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111eb6	obj/kernel.asm	/^c0111eb6:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0111eb9	obj/kernel.asm	/^c0111eb9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0111ebc	obj/kernel.asm	/^c0111ebc:	01 d0                	add    %edx,%eax$/;"	l
c0111ebe	obj/kernel.asm	/^c0111ebe:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0111ec1	obj/kernel.asm	/^c0111ec1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0111ec4	obj/kernel.asm	/^c0111ec4:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111ec7	obj/kernel.asm	/^c0111ec7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0111ecc	obj/kernel.asm	/^c0111ecc:	f7 75 d0             	divl   -0x30(%ebp)$/;"	l
c0111ecf	obj/kernel.asm	/^c0111ecf:	89 d0                	mov    %edx,%eax$/;"	l
c0111ed1	obj/kernel.asm	/^c0111ed1:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0111ed4	obj/kernel.asm	/^c0111ed4:	29 c2                	sub    %eax,%edx$/;"	l
c0111ed6	obj/kernel.asm	/^c0111ed6:	89 d0                	mov    %edx,%eax$/;"	l
c0111ed8	obj/kernel.asm	/^c0111ed8:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0111edb	obj/kernel.asm	/^c0111edb:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0111ede	obj/kernel.asm	/^c0111ede:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111ee1	obj/kernel.asm	/^c0111ee1:	e8 14 f5 ff ff       	call   c01113fa <bitmap_create>$/;"	l
c0111ee6	obj/kernel.asm	/^c0111ee6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0111ee9	obj/kernel.asm	/^c0111ee9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111eec	obj/kernel.asm	/^c0111eec:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0111eef	obj/kernel.asm	/^c0111eef:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c0111ef2	obj/kernel.asm	/^c0111ef2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111ef5	obj/kernel.asm	/^c0111ef5:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0111ef8	obj/kernel.asm	/^c0111ef8:	85 c0                	test   %eax,%eax$/;"	l
c0111efa	obj/kernel.asm	/^c0111efa:	75 05                	jne    c0111f01 <sfs_do_mount+0x255>$/;"	l
c0111efc	obj/kernel.asm	/^c0111efc:	e9 a2 01 00 00       	jmp    c01120a3 <sfs_do_mount+0x3f7>$/;"	l
c0111f01	obj/kernel.asm	/^c0111f01:	c7 45 c0 00 80 00 00 	movl   $0x8000,-0x40(%ebp)$/;"	l
c0111f08	obj/kernel.asm	/^c0111f08:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111f0b	obj/kernel.asm	/^c0111f0b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0111f0e	obj/kernel.asm	/^c0111f0e:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0111f11	obj/kernel.asm	/^c0111f11:	01 d0                	add    %edx,%eax$/;"	l
c0111f13	obj/kernel.asm	/^c0111f13:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0111f16	obj/kernel.asm	/^c0111f16:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0111f1b	obj/kernel.asm	/^c0111f1b:	f7 75 c0             	divl   -0x40(%ebp)$/;"	l
c0111f1e	obj/kernel.asm	/^c0111f1e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0111f21	obj/kernel.asm	/^c0111f21:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111f24	obj/kernel.asm	/^c0111f24:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0111f28	obj/kernel.asm	/^c0111f28:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0111f2b	obj/kernel.asm	/^c0111f2b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111f2f	obj/kernel.asm	/^c0111f2f:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c0111f36	obj/kernel.asm	/^c0111f36:	00 $/;"	l
c0111f37	obj/kernel.asm	/^c0111f37:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0111f3a	obj/kernel.asm	/^c0111f3a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111f3e	obj/kernel.asm	/^c0111f3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111f41	obj/kernel.asm	/^c0111f41:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111f44	obj/kernel.asm	/^c0111f44:	e8 ca fc ff ff       	call   c0111c13 <sfs_init_freemap>$/;"	l
c0111f49	obj/kernel.asm	/^c0111f49:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111f4c	obj/kernel.asm	/^c0111f4c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111f50	obj/kernel.asm	/^c0111f50:	74 11                	je     c0111f63 <sfs_do_mount+0x2b7>$/;"	l
c0111f52	obj/kernel.asm	/^c0111f52:	90                   	nop$/;"	l
c0111f53	obj/kernel.asm	/^c0111f53:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0111f56	obj/kernel.asm	/^c0111f56:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111f59	obj/kernel.asm	/^c0111f59:	e8 3f f8 ff ff       	call   c011179d <bitmap_destroy>$/;"	l
c0111f5e	obj/kernel.asm	/^c0111f5e:	e9 40 01 00 00       	jmp    c01120a3 <sfs_do_mount+0x3f7>$/;"	l
c0111f63	obj/kernel.asm	/^c0111f63:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111f66	obj/kernel.asm	/^c0111f66:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111f69	obj/kernel.asm	/^c0111f69:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0111f6c	obj/kernel.asm	/^c0111f6c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0111f73	obj/kernel.asm	/^c0111f73:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0111f7a	obj/kernel.asm	/^c0111f7a:	eb 1e                	jmp    c0111f9a <sfs_do_mount+0x2ee>$/;"	l
c0111f7c	obj/kernel.asm	/^c0111f7c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111f7f	obj/kernel.asm	/^c0111f7f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111f83	obj/kernel.asm	/^c0111f83:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0111f86	obj/kernel.asm	/^c0111f86:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111f89	obj/kernel.asm	/^c0111f89:	e8 74 f7 ff ff       	call   c0111702 <bitmap_test>$/;"	l
c0111f8e	obj/kernel.asm	/^c0111f8e:	85 c0                	test   %eax,%eax$/;"	l
c0111f90	obj/kernel.asm	/^c0111f90:	74 04                	je     c0111f96 <sfs_do_mount+0x2ea>$/;"	l
c0111f92	obj/kernel.asm	/^c0111f92:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0111f96	obj/kernel.asm	/^c0111f96:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0111f9a	obj/kernel.asm	/^c0111f9a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111f9d	obj/kernel.asm	/^c0111f9d:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0111fa0	obj/kernel.asm	/^c0111fa0:	72 da                	jb     c0111f7c <sfs_do_mount+0x2d0>$/;"	l
c0111fa2	obj/kernel.asm	/^c0111fa2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111fa5	obj/kernel.asm	/^c0111fa5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111fa8	obj/kernel.asm	/^c0111fa8:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0111fab	obj/kernel.asm	/^c0111fab:	74 24                	je     c0111fd1 <sfs_do_mount+0x325>$/;"	l
c0111fad	obj/kernel.asm	/^c0111fad:	c7 44 24 0c 4c 92 11 	movl   $0xc011924c,0xc(%esp)$/;"	l
c0111fb4	obj/kernel.asm	/^c0111fb4:	c0 $/;"	l
c0111fb5	obj/kernel.asm	/^c0111fb5:	c7 44 24 08 d1 90 11 	movl   $0xc01190d1,0x8(%esp)$/;"	l
c0111fbc	obj/kernel.asm	/^c0111fbc:	c0 $/;"	l
c0111fbd	obj/kernel.asm	/^c0111fbd:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
c0111fc4	obj/kernel.asm	/^c0111fc4:	00 $/;"	l
c0111fc5	obj/kernel.asm	/^c0111fc5:	c7 04 24 e6 90 11 c0 	movl   $0xc01190e6,(%esp)$/;"	l
c0111fcc	obj/kernel.asm	/^c0111fcc:	e8 f7 ee fe ff       	call   c0100ec8 <__panic>$/;"	l
c0111fd1	obj/kernel.asm	/^c0111fd1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111fd4	obj/kernel.asm	/^c0111fd4:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0111fdb	obj/kernel.asm	/^c0111fdb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111fde	obj/kernel.asm	/^c0111fde:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c0111fe1	obj/kernel.asm	/^c0111fe1:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0111fe8	obj/kernel.asm	/^c0111fe8:	00 $/;"	l
c0111fe9	obj/kernel.asm	/^c0111fe9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111fec	obj/kernel.asm	/^c0111fec:	e8 7e 7a ff ff       	call   c0109a6f <sem_init>$/;"	l
c0111ff1	obj/kernel.asm	/^c0111ff1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111ff4	obj/kernel.asm	/^c0111ff4:	83 c0 48             	add    $0x48,%eax$/;"	l
c0111ff7	obj/kernel.asm	/^c0111ff7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0111ffe	obj/kernel.asm	/^c0111ffe:	00 $/;"	l
c0111fff	obj/kernel.asm	/^c0111fff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112002	obj/kernel.asm	/^c0112002:	e8 68 7a ff ff       	call   c0109a6f <sem_init>$/;"	l
c0112007	obj/kernel.asm	/^c0112007:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011200a	obj/kernel.asm	/^c011200a:	83 c0 54             	add    $0x54,%eax$/;"	l
c011200d	obj/kernel.asm	/^c011200d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0112014	obj/kernel.asm	/^c0112014:	00 $/;"	l
c0112015	obj/kernel.asm	/^c0112015:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112018	obj/kernel.asm	/^c0112018:	e8 52 7a ff ff       	call   c0109a6f <sem_init>$/;"	l
c011201d	obj/kernel.asm	/^c011201d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112020	obj/kernel.asm	/^c0112020:	83 c0 60             	add    $0x60,%eax$/;"	l
c0112023	obj/kernel.asm	/^c0112023:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0112026	obj/kernel.asm	/^c0112026:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0112029	obj/kernel.asm	/^c0112029:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c011202c	obj/kernel.asm	/^c011202c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c011202f	obj/kernel.asm	/^c011202f:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0112032	obj/kernel.asm	/^c0112032:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0112035	obj/kernel.asm	/^c0112035:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0112038	obj/kernel.asm	/^c0112038:	89 10                	mov    %edx,(%eax)$/;"	l
c011203a	obj/kernel.asm	/^c011203a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011203d	obj/kernel.asm	/^c011203d:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0112040	obj/kernel.asm	/^c0112040:	89 d1                	mov    %edx,%ecx$/;"	l
c0112042	obj/kernel.asm	/^c0112042:	29 c1                	sub    %eax,%ecx$/;"	l
c0112044	obj/kernel.asm	/^c0112044:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112047	obj/kernel.asm	/^c0112047:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c011204a	obj/kernel.asm	/^c011204a:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c011204d	obj/kernel.asm	/^c011204d:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112051	obj/kernel.asm	/^c0112051:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112054	obj/kernel.asm	/^c0112054:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112058	obj/kernel.asm	/^c0112058:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c011205c	obj/kernel.asm	/^c011205c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0112060	obj/kernel.asm	/^c0112060:	c7 04 24 76 92 11 c0 	movl   $0xc0119276,(%esp)$/;"	l
c0112067	obj/kernel.asm	/^c0112067:	e8 f9 e2 fe ff       	call   c0100365 <cprintf>$/;"	l
c011206c	obj/kernel.asm	/^c011206c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011206f	obj/kernel.asm	/^c011206f:	c7 40 70 21 18 11 c0 	movl   $0xc0111821,0x70(%eax)$/;"	l
c0112076	obj/kernel.asm	/^c0112076:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112079	obj/kernel.asm	/^c0112079:	c7 40 74 7e 19 11 c0 	movl   $0xc011197e,0x74(%eax)$/;"	l
c0112080	obj/kernel.asm	/^c0112080:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112083	obj/kernel.asm	/^c0112083:	c7 40 78 09 1a 11 c0 	movl   $0xc0111a09,0x78(%eax)$/;"	l
c011208a	obj/kernel.asm	/^c011208a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011208d	obj/kernel.asm	/^c011208d:	c7 40 7c dc 1a 11 c0 	movl   $0xc0111adc,0x7c(%eax)$/;"	l
c0112094	obj/kernel.asm	/^c0112094:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112097	obj/kernel.asm	/^c0112097:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011209a	obj/kernel.asm	/^c011209a:	89 10                	mov    %edx,(%eax)$/;"	l
c011209c	obj/kernel.asm	/^c011209c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01120a1	obj/kernel.asm	/^c01120a1:	eb 24                	jmp    c01120c7 <sfs_do_mount+0x41b>$/;"	l
c01120a3	obj/kernel.asm	/^c01120a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01120a6	obj/kernel.asm	/^c01120a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01120a9	obj/kernel.asm	/^c01120a9:	e8 08 2c ff ff       	call   c0104cb6 <kfree>$/;"	l
c01120ae	obj/kernel.asm	/^c01120ae:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01120b1	obj/kernel.asm	/^c01120b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01120b4	obj/kernel.asm	/^c01120b4:	e8 fd 2b ff ff       	call   c0104cb6 <kfree>$/;"	l
c01120b9	obj/kernel.asm	/^c01120b9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01120bc	obj/kernel.asm	/^c01120bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01120bf	obj/kernel.asm	/^c01120bf:	e8 f2 2b ff ff       	call   c0104cb6 <kfree>$/;"	l
c01120c4	obj/kernel.asm	/^c01120c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01120c7	obj/kernel.asm	/^c01120c7:	c9                   	leave  $/;"	l
c01120c8	obj/kernel.asm	/^c01120c8:	c3                   	ret    $/;"	l
c01120c9	obj/kernel.asm	/^c01120c9 <sfs_mount>:$/;"	l
c01120c9	obj/kernel.asm	/^c01120c9:	55                   	push   %ebp$/;"	l
c01120ca	obj/kernel.asm	/^c01120ca:	89 e5                	mov    %esp,%ebp$/;"	l
c01120cc	obj/kernel.asm	/^c01120cc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01120cf	obj/kernel.asm	/^c01120cf:	c7 44 24 04 ac 1c 11 	movl   $0xc0111cac,0x4(%esp)$/;"	l
c01120d6	obj/kernel.asm	/^c01120d6:	c0 $/;"	l
c01120d7	obj/kernel.asm	/^c01120d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01120da	obj/kernel.asm	/^c01120da:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01120dd	obj/kernel.asm	/^c01120dd:	e8 96 d8 ff ff       	call   c010f978 <vfs_mount>$/;"	l
c01120e2	obj/kernel.asm	/^c01120e2:	c9                   	leave  $/;"	l
c01120e3	obj/kernel.asm	/^c01120e3:	c3                   	ret    $/;"	l
c01120e4	obj/kernel.asm	/^c01120e4 <inode_ref_count>:$/;"	l
c01120e4	obj/kernel.asm	/^c01120e4:	55                   	push   %ebp$/;"	l
c01120e5	obj/kernel.asm	/^c01120e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01120e7	obj/kernel.asm	/^c01120e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01120ea	obj/kernel.asm	/^c01120ea:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01120ed	obj/kernel.asm	/^c01120ed:	5d                   	pop    %ebp$/;"	l
c01120ee	obj/kernel.asm	/^c01120ee:	c3                   	ret    $/;"	l
c01120ef	obj/kernel.asm	/^c01120ef <lock_sin>:$/;"	l
c01120ef	obj/kernel.asm	/^c01120ef:	55                   	push   %ebp$/;"	l
c01120f0	obj/kernel.asm	/^c01120f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01120f2	obj/kernel.asm	/^c01120f2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01120f5	obj/kernel.asm	/^c01120f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01120f8	obj/kernel.asm	/^c01120f8:	83 c0 10             	add    $0x10,%eax$/;"	l
c01120fb	obj/kernel.asm	/^c01120fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01120fe	obj/kernel.asm	/^c01120fe:	e8 fa 7a ff ff       	call   c0109bfd <down>$/;"	l
c0112103	obj/kernel.asm	/^c0112103:	c9                   	leave  $/;"	l
c0112104	obj/kernel.asm	/^c0112104:	c3                   	ret    $/;"	l
c0112105	obj/kernel.asm	/^c0112105 <unlock_sin>:$/;"	l
c0112105	obj/kernel.asm	/^c0112105:	55                   	push   %ebp$/;"	l
c0112106	obj/kernel.asm	/^c0112106:	89 e5                	mov    %esp,%ebp$/;"	l
c0112108	obj/kernel.asm	/^c0112108:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011210b	obj/kernel.asm	/^c011210b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011210e	obj/kernel.asm	/^c011210e:	83 c0 10             	add    $0x10,%eax$/;"	l
c0112111	obj/kernel.asm	/^c0112111:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112114	obj/kernel.asm	/^c0112114:	e8 c9 7a ff ff       	call   c0109be2 <up>$/;"	l
c0112119	obj/kernel.asm	/^c0112119:	c9                   	leave  $/;"	l
c011211a	obj/kernel.asm	/^c011211a:	c3                   	ret    $/;"	l
c011211b	obj/kernel.asm	/^c011211b <sfs_get_ops>:$/;"	l
c011211b	obj/kernel.asm	/^c011211b:	55                   	push   %ebp$/;"	l
c011211c	obj/kernel.asm	/^c011211c:	89 e5                	mov    %esp,%ebp$/;"	l
c011211e	obj/kernel.asm	/^c011211e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112121	obj/kernel.asm	/^c0112121:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112124	obj/kernel.asm	/^c0112124:	66 89 45 f4          	mov    %ax,-0xc(%ebp)$/;"	l
c0112128	obj/kernel.asm	/^c0112128:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c011212c	obj/kernel.asm	/^c011212c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c011212f	obj/kernel.asm	/^c011212f:	74 0c                	je     c011213d <sfs_get_ops+0x22>$/;"	l
c0112131	obj/kernel.asm	/^c0112131:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0112134	obj/kernel.asm	/^c0112134:	75 0e                	jne    c0112144 <sfs_get_ops+0x29>$/;"	l
c0112136	obj/kernel.asm	/^c0112136:	b8 a0 92 11 c0       	mov    $0xc01192a0,%eax$/;"	l
c011213b	obj/kernel.asm	/^c011213b:	eb 2b                	jmp    c0112168 <sfs_get_ops+0x4d>$/;"	l
c011213d	obj/kernel.asm	/^c011213d:	b8 e0 92 11 c0       	mov    $0xc01192e0,%eax$/;"	l
c0112142	obj/kernel.asm	/^c0112142:	eb 24                	jmp    c0112168 <sfs_get_ops+0x4d>$/;"	l
c0112144	obj/kernel.asm	/^c0112144:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0112148	obj/kernel.asm	/^c0112148:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011214c	obj/kernel.asm	/^c011214c:	c7 44 24 08 20 93 11 	movl   $0xc0119320,0x8(%esp)$/;"	l
c0112153	obj/kernel.asm	/^c0112153:	c0 $/;"	l
c0112154	obj/kernel.asm	/^c0112154:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
c011215b	obj/kernel.asm	/^c011215b:	00 $/;"	l
c011215c	obj/kernel.asm	/^c011215c:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112163	obj/kernel.asm	/^c0112163:	e8 60 ed fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112168	obj/kernel.asm	/^c0112168:	c9                   	leave  $/;"	l
c0112169	obj/kernel.asm	/^c0112169:	c3                   	ret    $/;"	l
c011216a	obj/kernel.asm	/^c011216a <sfs_hash_list>:$/;"	l
c011216a	obj/kernel.asm	/^c011216a:	55                   	push   %ebp$/;"	l
c011216b	obj/kernel.asm	/^c011216b:	89 e5                	mov    %esp,%ebp$/;"	l
c011216d	obj/kernel.asm	/^c011216d:	53                   	push   %ebx$/;"	l
c011216e	obj/kernel.asm	/^c011216e:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0112171	obj/kernel.asm	/^c0112171:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112174	obj/kernel.asm	/^c0112174:	8b 58 68             	mov    0x68(%eax),%ebx$/;"	l
c0112177	obj/kernel.asm	/^c0112177:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c011217e	obj/kernel.asm	/^c011217e:	00 $/;"	l
c011217f	obj/kernel.asm	/^c011217f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112182	obj/kernel.asm	/^c0112182:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112185	obj/kernel.asm	/^c0112185:	e8 35 27 00 00       	call   c01148bf <hash32>$/;"	l
c011218a	obj/kernel.asm	/^c011218a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c011218d	obj/kernel.asm	/^c011218d:	01 d8                	add    %ebx,%eax$/;"	l
c011218f	obj/kernel.asm	/^c011218f:	83 c4 14             	add    $0x14,%esp$/;"	l
c0112192	obj/kernel.asm	/^c0112192:	5b                   	pop    %ebx$/;"	l
c0112193	obj/kernel.asm	/^c0112193:	5d                   	pop    %ebp$/;"	l
c0112194	obj/kernel.asm	/^c0112194:	c3                   	ret    $/;"	l
c0112195	obj/kernel.asm	/^c0112195 <sfs_set_links>:$/;"	l
c0112195	obj/kernel.asm	/^c0112195:	55                   	push   %ebp$/;"	l
c0112196	obj/kernel.asm	/^c0112196:	89 e5                	mov    %esp,%ebp$/;"	l
c0112198	obj/kernel.asm	/^c0112198:	53                   	push   %ebx$/;"	l
c0112199	obj/kernel.asm	/^c0112199:	83 ec 54             	sub    $0x54,%esp$/;"	l
c011219c	obj/kernel.asm	/^c011219c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011219f	obj/kernel.asm	/^c011219f:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01121a2	obj/kernel.asm	/^c01121a2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01121a5	obj/kernel.asm	/^c01121a5:	83 c2 60             	add    $0x60,%edx$/;"	l
c01121a8	obj/kernel.asm	/^c01121a8:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01121ab	obj/kernel.asm	/^c01121ab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01121ae	obj/kernel.asm	/^c01121ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01121b1	obj/kernel.asm	/^c01121b1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01121b4	obj/kernel.asm	/^c01121b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01121b7	obj/kernel.asm	/^c01121b7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01121ba	obj/kernel.asm	/^c01121ba:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01121bd	obj/kernel.asm	/^c01121bd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01121c0	obj/kernel.asm	/^c01121c0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01121c3	obj/kernel.asm	/^c01121c3:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01121c6	obj/kernel.asm	/^c01121c6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01121c9	obj/kernel.asm	/^c01121c9:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c01121cc	obj/kernel.asm	/^c01121cc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01121cf	obj/kernel.asm	/^c01121cf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01121d2	obj/kernel.asm	/^c01121d2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01121d5	obj/kernel.asm	/^c01121d5:	89 10                	mov    %edx,(%eax)$/;"	l
c01121d7	obj/kernel.asm	/^c01121d7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01121da	obj/kernel.asm	/^c01121da:	8b 10                	mov    (%eax),%edx$/;"	l
c01121dc	obj/kernel.asm	/^c01121dc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01121df	obj/kernel.asm	/^c01121df:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01121e2	obj/kernel.asm	/^c01121e2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01121e5	obj/kernel.asm	/^c01121e5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01121e8	obj/kernel.asm	/^c01121e8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01121eb	obj/kernel.asm	/^c01121eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01121ee	obj/kernel.asm	/^c01121ee:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01121f1	obj/kernel.asm	/^c01121f1:	89 10                	mov    %edx,(%eax)$/;"	l
c01121f3	obj/kernel.asm	/^c01121f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01121f6	obj/kernel.asm	/^c01121f6:	8d 58 24             	lea    0x24(%eax),%ebx$/;"	l
c01121f9	obj/kernel.asm	/^c01121f9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01121fc	obj/kernel.asm	/^c01121fc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01121ff	obj/kernel.asm	/^c01121ff:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112203	obj/kernel.asm	/^c0112203:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112206	obj/kernel.asm	/^c0112206:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112209	obj/kernel.asm	/^c0112209:	e8 5c ff ff ff       	call   c011216a <sfs_hash_list>$/;"	l
c011220e	obj/kernel.asm	/^c011220e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0112211	obj/kernel.asm	/^c0112211:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
c0112214	obj/kernel.asm	/^c0112214:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0112217	obj/kernel.asm	/^c0112217:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c011221a	obj/kernel.asm	/^c011221a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c011221d	obj/kernel.asm	/^c011221d:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0112220	obj/kernel.asm	/^c0112220:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0112223	obj/kernel.asm	/^c0112223:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112226	obj/kernel.asm	/^c0112226:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0112229	obj/kernel.asm	/^c0112229:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c011222c	obj/kernel.asm	/^c011222c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c011222f	obj/kernel.asm	/^c011222f:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
c0112232	obj/kernel.asm	/^c0112232:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0112235	obj/kernel.asm	/^c0112235:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0112238	obj/kernel.asm	/^c0112238:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c011223b	obj/kernel.asm	/^c011223b:	89 10                	mov    %edx,(%eax)$/;"	l
c011223d	obj/kernel.asm	/^c011223d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0112240	obj/kernel.asm	/^c0112240:	8b 10                	mov    (%eax),%edx$/;"	l
c0112242	obj/kernel.asm	/^c0112242:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0112245	obj/kernel.asm	/^c0112245:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112248	obj/kernel.asm	/^c0112248:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c011224b	obj/kernel.asm	/^c011224b:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c011224e	obj/kernel.asm	/^c011224e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112251	obj/kernel.asm	/^c0112251:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0112254	obj/kernel.asm	/^c0112254:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0112257	obj/kernel.asm	/^c0112257:	89 10                	mov    %edx,(%eax)$/;"	l
c0112259	obj/kernel.asm	/^c0112259:	83 c4 54             	add    $0x54,%esp$/;"	l
c011225c	obj/kernel.asm	/^c011225c:	5b                   	pop    %ebx$/;"	l
c011225d	obj/kernel.asm	/^c011225d:	5d                   	pop    %ebp$/;"	l
c011225e	obj/kernel.asm	/^c011225e:	c3                   	ret    $/;"	l
c011225f	obj/kernel.asm	/^c011225f <sfs_remove_links>:$/;"	l
c011225f	obj/kernel.asm	/^c011225f:	55                   	push   %ebp$/;"	l
c0112260	obj/kernel.asm	/^c0112260:	89 e5                	mov    %esp,%ebp$/;"	l
c0112262	obj/kernel.asm	/^c0112262:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0112265	obj/kernel.asm	/^c0112265:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112268	obj/kernel.asm	/^c0112268:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c011226b	obj/kernel.asm	/^c011226b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c011226e	obj/kernel.asm	/^c011226e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0112271	obj/kernel.asm	/^c0112271:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112274	obj/kernel.asm	/^c0112274:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0112277	obj/kernel.asm	/^c0112277:	8b 12                	mov    (%edx),%edx$/;"	l
c0112279	obj/kernel.asm	/^c0112279:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c011227c	obj/kernel.asm	/^c011227c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011227f	obj/kernel.asm	/^c011227f:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0112282	obj/kernel.asm	/^c0112282:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0112285	obj/kernel.asm	/^c0112285:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112288	obj/kernel.asm	/^c0112288:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011228b	obj/kernel.asm	/^c011228b:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c011228e	obj/kernel.asm	/^c011228e:	89 10                	mov    %edx,(%eax)$/;"	l
c0112290	obj/kernel.asm	/^c0112290:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112293	obj/kernel.asm	/^c0112293:	83 c0 24             	add    $0x24,%eax$/;"	l
c0112296	obj/kernel.asm	/^c0112296:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112299	obj/kernel.asm	/^c0112299:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011229c	obj/kernel.asm	/^c011229c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011229f	obj/kernel.asm	/^c011229f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01122a2	obj/kernel.asm	/^c01122a2:	8b 12                	mov    (%edx),%edx$/;"	l
c01122a4	obj/kernel.asm	/^c01122a4:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01122a7	obj/kernel.asm	/^c01122a7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01122aa	obj/kernel.asm	/^c01122aa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01122ad	obj/kernel.asm	/^c01122ad:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01122b0	obj/kernel.asm	/^c01122b0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01122b3	obj/kernel.asm	/^c01122b3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01122b6	obj/kernel.asm	/^c01122b6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01122b9	obj/kernel.asm	/^c01122b9:	89 10                	mov    %edx,(%eax)$/;"	l
c01122bb	obj/kernel.asm	/^c01122bb:	c9                   	leave  $/;"	l
c01122bc	obj/kernel.asm	/^c01122bc:	c3                   	ret    $/;"	l
c01122bd	obj/kernel.asm	/^c01122bd <sfs_block_inuse>:$/;"	l
c01122bd	obj/kernel.asm	/^c01122bd:	55                   	push   %ebp$/;"	l
c01122be	obj/kernel.asm	/^c01122be:	89 e5                	mov    %esp,%ebp$/;"	l
c01122c0	obj/kernel.asm	/^c01122c0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01122c3	obj/kernel.asm	/^c01122c3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01122c7	obj/kernel.asm	/^c01122c7:	74 2a                	je     c01122f3 <sfs_block_inuse+0x36>$/;"	l
c01122c9	obj/kernel.asm	/^c01122c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01122cc	obj/kernel.asm	/^c01122cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01122cf	obj/kernel.asm	/^c01122cf:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01122d2	obj/kernel.asm	/^c01122d2:	76 1f                	jbe    c01122f3 <sfs_block_inuse+0x36>$/;"	l
c01122d4	obj/kernel.asm	/^c01122d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01122d7	obj/kernel.asm	/^c01122d7:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01122da	obj/kernel.asm	/^c01122da:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01122dd	obj/kernel.asm	/^c01122dd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01122e1	obj/kernel.asm	/^c01122e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01122e4	obj/kernel.asm	/^c01122e4:	e8 19 f4 ff ff       	call   c0111702 <bitmap_test>$/;"	l
c01122e9	obj/kernel.asm	/^c01122e9:	85 c0                	test   %eax,%eax$/;"	l
c01122eb	obj/kernel.asm	/^c01122eb:	0f 94 c0             	sete   %al$/;"	l
c01122ee	obj/kernel.asm	/^c01122ee:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01122f1	obj/kernel.asm	/^c01122f1:	eb 2d                	jmp    c0112320 <sfs_block_inuse+0x63>$/;"	l
c01122f3	obj/kernel.asm	/^c01122f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01122f6	obj/kernel.asm	/^c01122f6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01122f9	obj/kernel.asm	/^c01122f9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01122fc	obj/kernel.asm	/^c01122fc:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0112300	obj/kernel.asm	/^c0112300:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112304	obj/kernel.asm	/^c0112304:	c7 44 24 08 50 93 11 	movl   $0xc0119350,0x8(%esp)$/;"	l
c011230b	obj/kernel.asm	/^c011230b:	c0 $/;"	l
c011230c	obj/kernel.asm	/^c011230c:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c0112313	obj/kernel.asm	/^c0112313:	00 $/;"	l
c0112314	obj/kernel.asm	/^c0112314:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011231b	obj/kernel.asm	/^c011231b:	e8 a8 eb fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112320	obj/kernel.asm	/^c0112320:	c9                   	leave  $/;"	l
c0112321	obj/kernel.asm	/^c0112321:	c3                   	ret    $/;"	l
c0112322	obj/kernel.asm	/^c0112322 <sfs_block_alloc>:$/;"	l
c0112322	obj/kernel.asm	/^c0112322:	55                   	push   %ebp$/;"	l
c0112323	obj/kernel.asm	/^c0112323:	89 e5                	mov    %esp,%ebp$/;"	l
c0112325	obj/kernel.asm	/^c0112325:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112328	obj/kernel.asm	/^c0112328:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011232b	obj/kernel.asm	/^c011232b:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011232e	obj/kernel.asm	/^c011232e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112331	obj/kernel.asm	/^c0112331:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0112335	obj/kernel.asm	/^c0112335:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112338	obj/kernel.asm	/^c0112338:	e8 63 f2 ff ff       	call   c01115a0 <bitmap_alloc>$/;"	l
c011233d	obj/kernel.asm	/^c011233d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112340	obj/kernel.asm	/^c0112340:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112344	obj/kernel.asm	/^c0112344:	74 08                	je     c011234e <sfs_block_alloc+0x2c>$/;"	l
c0112346	obj/kernel.asm	/^c0112346:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112349	obj/kernel.asm	/^c0112349:	e9 9f 00 00 00       	jmp    c01123ed <sfs_block_alloc+0xcb>$/;"	l
c011234e	obj/kernel.asm	/^c011234e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112351	obj/kernel.asm	/^c0112351:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112354	obj/kernel.asm	/^c0112354:	85 c0                	test   %eax,%eax$/;"	l
c0112356	obj/kernel.asm	/^c0112356:	75 24                	jne    c011237c <sfs_block_alloc+0x5a>$/;"	l
c0112358	obj/kernel.asm	/^c0112358:	c7 44 24 0c 82 93 11 	movl   $0xc0119382,0xc(%esp)$/;"	l
c011235f	obj/kernel.asm	/^c011235f:	c0 $/;"	l
c0112360	obj/kernel.asm	/^c0112360:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112367	obj/kernel.asm	/^c0112367:	c0 $/;"	l
c0112368	obj/kernel.asm	/^c0112368:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c011236f	obj/kernel.asm	/^c011236f:	00 $/;"	l
c0112370	obj/kernel.asm	/^c0112370:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112377	obj/kernel.asm	/^c0112377:	e8 4c eb fe ff       	call   c0100ec8 <__panic>$/;"	l
c011237c	obj/kernel.asm	/^c011237c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011237f	obj/kernel.asm	/^c011237f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112382	obj/kernel.asm	/^c0112382:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0112385	obj/kernel.asm	/^c0112385:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112388	obj/kernel.asm	/^c0112388:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c011238b	obj/kernel.asm	/^c011238b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011238e	obj/kernel.asm	/^c011238e:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0112395	obj/kernel.asm	/^c0112395:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112398	obj/kernel.asm	/^c0112398:	8b 00                	mov    (%eax),%eax$/;"	l
c011239a	obj/kernel.asm	/^c011239a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011239e	obj/kernel.asm	/^c011239e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01123a1	obj/kernel.asm	/^c01123a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01123a4	obj/kernel.asm	/^c01123a4:	e8 14 ff ff ff       	call   c01122bd <sfs_block_inuse>$/;"	l
c01123a9	obj/kernel.asm	/^c01123a9:	85 c0                	test   %eax,%eax$/;"	l
c01123ab	obj/kernel.asm	/^c01123ab:	75 24                	jne    c01123d1 <sfs_block_alloc+0xaf>$/;"	l
c01123ad	obj/kernel.asm	/^c01123ad:	c7 44 24 0c b4 93 11 	movl   $0xc01193b4,0xc(%esp)$/;"	l
c01123b4	obj/kernel.asm	/^c01123b4:	c0 $/;"	l
c01123b5	obj/kernel.asm	/^c01123b5:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01123bc	obj/kernel.asm	/^c01123bc:	c0 $/;"	l
c01123bd	obj/kernel.asm	/^c01123bd:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c01123c4	obj/kernel.asm	/^c01123c4:	00 $/;"	l
c01123c5	obj/kernel.asm	/^c01123c5:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01123cc	obj/kernel.asm	/^c01123cc:	e8 f7 ea fe ff       	call   c0100ec8 <__panic>$/;"	l
c01123d1	obj/kernel.asm	/^c01123d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01123d4	obj/kernel.asm	/^c01123d4:	8b 00                	mov    (%eax),%eax$/;"	l
c01123d6	obj/kernel.asm	/^c01123d6:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01123dd	obj/kernel.asm	/^c01123dd:	00 $/;"	l
c01123de	obj/kernel.asm	/^c01123de:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01123e2	obj/kernel.asm	/^c01123e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01123e5	obj/kernel.asm	/^c01123e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01123e8	obj/kernel.asm	/^c01123e8:	e8 f4 23 00 00       	call   c01147e1 <sfs_clear_block>$/;"	l
c01123ed	obj/kernel.asm	/^c01123ed:	c9                   	leave  $/;"	l
c01123ee	obj/kernel.asm	/^c01123ee:	c3                   	ret    $/;"	l
c01123ef	obj/kernel.asm	/^c01123ef <sfs_block_free>:$/;"	l
c01123ef	obj/kernel.asm	/^c01123ef:	55                   	push   %ebp$/;"	l
c01123f0	obj/kernel.asm	/^c01123f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01123f2	obj/kernel.asm	/^c01123f2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01123f5	obj/kernel.asm	/^c01123f5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01123f8	obj/kernel.asm	/^c01123f8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01123fc	obj/kernel.asm	/^c01123fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01123ff	obj/kernel.asm	/^c01123ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112402	obj/kernel.asm	/^c0112402:	e8 b6 fe ff ff       	call   c01122bd <sfs_block_inuse>$/;"	l
c0112407	obj/kernel.asm	/^c0112407:	85 c0                	test   %eax,%eax$/;"	l
c0112409	obj/kernel.asm	/^c0112409:	75 24                	jne    c011242f <sfs_block_free+0x40>$/;"	l
c011240b	obj/kernel.asm	/^c011240b:	c7 44 24 0c d5 93 11 	movl   $0xc01193d5,0xc(%esp)$/;"	l
c0112412	obj/kernel.asm	/^c0112412:	c0 $/;"	l
c0112413	obj/kernel.asm	/^c0112413:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011241a	obj/kernel.asm	/^c011241a:	c0 $/;"	l
c011241b	obj/kernel.asm	/^c011241b:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0112422	obj/kernel.asm	/^c0112422:	00 $/;"	l
c0112423	obj/kernel.asm	/^c0112423:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011242a	obj/kernel.asm	/^c011242a:	e8 99 ea fe ff       	call   c0100ec8 <__panic>$/;"	l
c011242f	obj/kernel.asm	/^c011242f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112432	obj/kernel.asm	/^c0112432:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112435	obj/kernel.asm	/^c0112435:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112438	obj/kernel.asm	/^c0112438:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011243c	obj/kernel.asm	/^c011243c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011243f	obj/kernel.asm	/^c011243f:	e8 f0 f2 ff ff       	call   c0111734 <bitmap_free>$/;"	l
c0112444	obj/kernel.asm	/^c0112444:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112447	obj/kernel.asm	/^c0112447:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011244a	obj/kernel.asm	/^c011244a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c011244d	obj/kernel.asm	/^c011244d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112450	obj/kernel.asm	/^c0112450:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0112453	obj/kernel.asm	/^c0112453:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112456	obj/kernel.asm	/^c0112456:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c011245d	obj/kernel.asm	/^c011245d:	c9                   	leave  $/;"	l
c011245e	obj/kernel.asm	/^c011245e:	c3                   	ret    $/;"	l
c011245f	obj/kernel.asm	/^c011245f <sfs_create_inode>:$/;"	l
c011245f	obj/kernel.asm	/^c011245f:	55                   	push   %ebp$/;"	l
c0112460	obj/kernel.asm	/^c0112460:	89 e5                	mov    %esp,%ebp$/;"	l
c0112462	obj/kernel.asm	/^c0112462:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112465	obj/kernel.asm	/^c0112465:	c7 04 24 35 12 00 00 	movl   $0x1235,(%esp)$/;"	l
c011246c	obj/kernel.asm	/^c011246c:	e8 6d ca ff ff       	call   c010eede <__alloc_inode>$/;"	l
c0112471	obj/kernel.asm	/^c0112471:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112474	obj/kernel.asm	/^c0112474:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112478	obj/kernel.asm	/^c0112478:	0f 84 b5 00 00 00    	je     c0112533 <sfs_create_inode+0xd4>$/;"	l
c011247e	obj/kernel.asm	/^c011247e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112481	obj/kernel.asm	/^c0112481:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0112485	obj/kernel.asm	/^c0112485:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0112488	obj/kernel.asm	/^c0112488:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011248b	obj/kernel.asm	/^c011248b:	e8 8b fc ff ff       	call   c011211b <sfs_get_ops>$/;"	l
c0112490	obj/kernel.asm	/^c0112490:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0112493	obj/kernel.asm	/^c0112493:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0112497	obj/kernel.asm	/^c0112497:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011249b	obj/kernel.asm	/^c011249b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011249e	obj/kernel.asm	/^c011249e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01124a1	obj/kernel.asm	/^c01124a1:	e8 61 ca ff ff       	call   c010ef07 <inode_init>$/;"	l
c01124a6	obj/kernel.asm	/^c01124a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01124a9	obj/kernel.asm	/^c01124a9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01124ac	obj/kernel.asm	/^c01124ac:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01124b0	obj/kernel.asm	/^c01124b0:	74 0d                	je     c01124bf <sfs_create_inode+0x60>$/;"	l
c01124b2	obj/kernel.asm	/^c01124b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01124b5	obj/kernel.asm	/^c01124b5:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01124b8	obj/kernel.asm	/^c01124b8:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01124bd	obj/kernel.asm	/^c01124bd:	74 24                	je     c01124e3 <sfs_create_inode+0x84>$/;"	l
c01124bf	obj/kernel.asm	/^c01124bf:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c01124c6	obj/kernel.asm	/^c01124c6:	c0 $/;"	l
c01124c7	obj/kernel.asm	/^c01124c7:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01124ce	obj/kernel.asm	/^c01124ce:	c0 $/;"	l
c01124cf	obj/kernel.asm	/^c01124cf:	c7 44 24 04 77 00 00 	movl   $0x77,0x4(%esp)$/;"	l
c01124d6	obj/kernel.asm	/^c01124d6:	00 $/;"	l
c01124d7	obj/kernel.asm	/^c01124d7:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01124de	obj/kernel.asm	/^c01124de:	e8 e5 e9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01124e3	obj/kernel.asm	/^c01124e3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01124e6	obj/kernel.asm	/^c01124e6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01124e9	obj/kernel.asm	/^c01124e9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01124ec	obj/kernel.asm	/^c01124ec:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01124ef	obj/kernel.asm	/^c01124ef:	89 10                	mov    %edx,(%eax)$/;"	l
c01124f1	obj/kernel.asm	/^c01124f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01124f4	obj/kernel.asm	/^c01124f4:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01124f7	obj/kernel.asm	/^c01124f7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01124fa	obj/kernel.asm	/^c01124fa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01124fd	obj/kernel.asm	/^c01124fd:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0112504	obj/kernel.asm	/^c0112504:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112507	obj/kernel.asm	/^c0112507:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)$/;"	l
c011250e	obj/kernel.asm	/^c011250e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112511	obj/kernel.asm	/^c0112511:	83 c0 10             	add    $0x10,%eax$/;"	l
c0112514	obj/kernel.asm	/^c0112514:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c011251b	obj/kernel.asm	/^c011251b:	00 $/;"	l
c011251c	obj/kernel.asm	/^c011251c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011251f	obj/kernel.asm	/^c011251f:	e8 4b 75 ff ff       	call   c0109a6f <sem_init>$/;"	l
c0112524	obj/kernel.asm	/^c0112524:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112527	obj/kernel.asm	/^c0112527:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c011252a	obj/kernel.asm	/^c011252a:	89 10                	mov    %edx,(%eax)$/;"	l
c011252c	obj/kernel.asm	/^c011252c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112531	obj/kernel.asm	/^c0112531:	eb 05                	jmp    c0112538 <sfs_create_inode+0xd9>$/;"	l
c0112533	obj/kernel.asm	/^c0112533:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0112538	obj/kernel.asm	/^c0112538:	c9                   	leave  $/;"	l
c0112539	obj/kernel.asm	/^c0112539:	c3                   	ret    $/;"	l
c011253a	obj/kernel.asm	/^c011253a <lookup_sfs_nolock>:$/;"	l
c011253a	obj/kernel.asm	/^c011253a:	55                   	push   %ebp$/;"	l
c011253b	obj/kernel.asm	/^c011253b:	89 e5                	mov    %esp,%ebp$/;"	l
c011253d	obj/kernel.asm	/^c011253d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112540	obj/kernel.asm	/^c0112540:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112543	obj/kernel.asm	/^c0112543:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112547	obj/kernel.asm	/^c0112547:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011254a	obj/kernel.asm	/^c011254a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011254d	obj/kernel.asm	/^c011254d:	e8 18 fc ff ff       	call   c011216a <sfs_hash_list>$/;"	l
c0112552	obj/kernel.asm	/^c0112552:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112555	obj/kernel.asm	/^c0112555:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112558	obj/kernel.asm	/^c0112558:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011255b	obj/kernel.asm	/^c011255b:	eb 3e                	jmp    c011259b <lookup_sfs_nolock+0x61>$/;"	l
c011255d	obj/kernel.asm	/^c011255d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112560	obj/kernel.asm	/^c0112560:	83 e8 24             	sub    $0x24,%eax$/;"	l
c0112563	obj/kernel.asm	/^c0112563:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112566	obj/kernel.asm	/^c0112566:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112569	obj/kernel.asm	/^c0112569:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011256c	obj/kernel.asm	/^c011256c:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c011256f	obj/kernel.asm	/^c011256f:	75 2a                	jne    c011259b <lookup_sfs_nolock+0x61>$/;"	l
c0112571	obj/kernel.asm	/^c0112571:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112574	obj/kernel.asm	/^c0112574:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112577	obj/kernel.asm	/^c0112577:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011257a	obj/kernel.asm	/^c011257a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011257d	obj/kernel.asm	/^c011257d:	e8 37 ca ff ff       	call   c010efb9 <inode_ref_inc>$/;"	l
c0112582	obj/kernel.asm	/^c0112582:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0112585	obj/kernel.asm	/^c0112585:	75 0f                	jne    c0112596 <lookup_sfs_nolock+0x5c>$/;"	l
c0112587	obj/kernel.asm	/^c0112587:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011258a	obj/kernel.asm	/^c011258a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c011258d	obj/kernel.asm	/^c011258d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0112590	obj/kernel.asm	/^c0112590:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112593	obj/kernel.asm	/^c0112593:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0112596	obj/kernel.asm	/^c0112596:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112599	obj/kernel.asm	/^c0112599:	eb 1c                	jmp    c01125b7 <lookup_sfs_nolock+0x7d>$/;"	l
c011259b	obj/kernel.asm	/^c011259b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011259e	obj/kernel.asm	/^c011259e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01125a1	obj/kernel.asm	/^c01125a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01125a4	obj/kernel.asm	/^c01125a4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01125a7	obj/kernel.asm	/^c01125a7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01125aa	obj/kernel.asm	/^c01125aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01125ad	obj/kernel.asm	/^c01125ad:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01125b0	obj/kernel.asm	/^c01125b0:	75 ab                	jne    c011255d <lookup_sfs_nolock+0x23>$/;"	l
c01125b2	obj/kernel.asm	/^c01125b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01125b7	obj/kernel.asm	/^c01125b7:	c9                   	leave  $/;"	l
c01125b8	obj/kernel.asm	/^c01125b8:	c3                   	ret    $/;"	l
c01125b9	obj/kernel.asm	/^c01125b9 <sfs_load_inode>:$/;"	l
c01125b9	obj/kernel.asm	/^c01125b9:	55                   	push   %ebp$/;"	l
c01125ba	obj/kernel.asm	/^c01125ba:	89 e5                	mov    %esp,%ebp$/;"	l
c01125bc	obj/kernel.asm	/^c01125bc:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01125bf	obj/kernel.asm	/^c01125bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01125c2	obj/kernel.asm	/^c01125c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01125c5	obj/kernel.asm	/^c01125c5:	e8 9d 22 00 00       	call   c0114867 <lock_sfs_fs>$/;"	l
c01125ca	obj/kernel.asm	/^c01125ca:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01125cd	obj/kernel.asm	/^c01125cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01125d1	obj/kernel.asm	/^c01125d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01125d4	obj/kernel.asm	/^c01125d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01125d7	obj/kernel.asm	/^c01125d7:	e8 5e ff ff ff       	call   c011253a <lookup_sfs_nolock>$/;"	l
c01125dc	obj/kernel.asm	/^c01125dc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01125df	obj/kernel.asm	/^c01125df:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01125e2	obj/kernel.asm	/^c01125e2:	85 c0                	test   %eax,%eax$/;"	l
c01125e4	obj/kernel.asm	/^c01125e4:	74 05                	je     c01125eb <sfs_load_inode+0x32>$/;"	l
c01125e6	obj/kernel.asm	/^c01125e6:	e9 3c 01 00 00       	jmp    c0112727 <sfs_load_inode+0x16e>$/;"	l
c01125eb	obj/kernel.asm	/^c01125eb:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01125f2	obj/kernel.asm	/^c01125f2:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)$/;"	l
c01125f9	obj/kernel.asm	/^c01125f9:	e8 9d 26 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c01125fe	obj/kernel.asm	/^c01125fe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112601	obj/kernel.asm	/^c0112601:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112605	obj/kernel.asm	/^c0112605:	75 05                	jne    c011260c <sfs_load_inode+0x53>$/;"	l
c0112607	obj/kernel.asm	/^c0112607:	e9 40 01 00 00       	jmp    c011274c <sfs_load_inode+0x193>$/;"	l
c011260c	obj/kernel.asm	/^c011260c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011260f	obj/kernel.asm	/^c011260f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112613	obj/kernel.asm	/^c0112613:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112616	obj/kernel.asm	/^c0112616:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112619	obj/kernel.asm	/^c0112619:	e8 9f fc ff ff       	call   c01122bd <sfs_block_inuse>$/;"	l
c011261e	obj/kernel.asm	/^c011261e:	85 c0                	test   %eax,%eax$/;"	l
c0112620	obj/kernel.asm	/^c0112620:	75 24                	jne    c0112646 <sfs_load_inode+0x8d>$/;"	l
c0112622	obj/kernel.asm	/^c0112622:	c7 44 24 0c d5 93 11 	movl   $0xc01193d5,0xc(%esp)$/;"	l
c0112629	obj/kernel.asm	/^c0112629:	c0 $/;"	l
c011262a	obj/kernel.asm	/^c011262a:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112631	obj/kernel.asm	/^c0112631:	c0 $/;"	l
c0112632	obj/kernel.asm	/^c0112632:	c7 44 24 04 a8 00 00 	movl   $0xa8,0x4(%esp)$/;"	l
c0112639	obj/kernel.asm	/^c0112639:	00 $/;"	l
c011263a	obj/kernel.asm	/^c011263a:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112641	obj/kernel.asm	/^c0112641:	e8 82 e8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112646	obj/kernel.asm	/^c0112646:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c011264d	obj/kernel.asm	/^c011264d:	00 $/;"	l
c011264e	obj/kernel.asm	/^c011264e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112651	obj/kernel.asm	/^c0112651:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112655	obj/kernel.asm	/^c0112655:	c7 44 24 08 40 00 00 	movl   $0x40,0x8(%esp)$/;"	l
c011265c	obj/kernel.asm	/^c011265c:	00 $/;"	l
c011265d	obj/kernel.asm	/^c011265d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112660	obj/kernel.asm	/^c0112660:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112664	obj/kernel.asm	/^c0112664:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112667	obj/kernel.asm	/^c0112667:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011266a	obj/kernel.asm	/^c011266a:	e8 e9 1e 00 00       	call   c0114558 <sfs_rbuf>$/;"	l
c011266f	obj/kernel.asm	/^c011266f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112672	obj/kernel.asm	/^c0112672:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112676	obj/kernel.asm	/^c0112676:	74 05                	je     c011267d <sfs_load_inode+0xc4>$/;"	l
c0112678	obj/kernel.asm	/^c0112678:	e9 c4 00 00 00       	jmp    c0112741 <sfs_load_inode+0x188>$/;"	l
c011267d	obj/kernel.asm	/^c011267d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112680	obj/kernel.asm	/^c0112680:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0112684	obj/kernel.asm	/^c0112684:	66 85 c0             	test   %ax,%ax$/;"	l
c0112687	obj/kernel.asm	/^c0112687:	75 24                	jne    c01126ad <sfs_load_inode+0xf4>$/;"	l
c0112689	obj/kernel.asm	/^c0112689:	c7 44 24 0c 26 94 11 	movl   $0xc0119426,0xc(%esp)$/;"	l
c0112690	obj/kernel.asm	/^c0112690:	c0 $/;"	l
c0112691	obj/kernel.asm	/^c0112691:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112698	obj/kernel.asm	/^c0112698:	c0 $/;"	l
c0112699	obj/kernel.asm	/^c0112699:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
c01126a0	obj/kernel.asm	/^c01126a0:	00 $/;"	l
c01126a1	obj/kernel.asm	/^c01126a1:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01126a8	obj/kernel.asm	/^c01126a8:	e8 1b e8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01126ad	obj/kernel.asm	/^c01126ad:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c01126b0	obj/kernel.asm	/^c01126b0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01126b4	obj/kernel.asm	/^c01126b4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01126b7	obj/kernel.asm	/^c01126b7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01126bb	obj/kernel.asm	/^c01126bb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01126be	obj/kernel.asm	/^c01126be:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01126c2	obj/kernel.asm	/^c01126c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01126c5	obj/kernel.asm	/^c01126c5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01126c8	obj/kernel.asm	/^c01126c8:	e8 92 fd ff ff       	call   c011245f <sfs_create_inode>$/;"	l
c01126cd	obj/kernel.asm	/^c01126cd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01126d0	obj/kernel.asm	/^c01126d0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01126d4	obj/kernel.asm	/^c01126d4:	74 02                	je     c01126d8 <sfs_load_inode+0x11f>$/;"	l
c01126d6	obj/kernel.asm	/^c01126d6:	eb 69                	jmp    c0112741 <sfs_load_inode+0x188>$/;"	l
c01126d8	obj/kernel.asm	/^c01126d8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01126db	obj/kernel.asm	/^c01126db:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01126de	obj/kernel.asm	/^c01126de:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01126e2	obj/kernel.asm	/^c01126e2:	74 0d                	je     c01126f1 <sfs_load_inode+0x138>$/;"	l
c01126e4	obj/kernel.asm	/^c01126e4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01126e7	obj/kernel.asm	/^c01126e7:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01126ea	obj/kernel.asm	/^c01126ea:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01126ef	obj/kernel.asm	/^c01126ef:	74 24                	je     c0112715 <sfs_load_inode+0x15c>$/;"	l
c01126f1	obj/kernel.asm	/^c01126f1:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c01126f8	obj/kernel.asm	/^c01126f8:	c0 $/;"	l
c01126f9	obj/kernel.asm	/^c01126f9:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112700	obj/kernel.asm	/^c0112700:	c0 $/;"	l
c0112701	obj/kernel.asm	/^c0112701:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)$/;"	l
c0112708	obj/kernel.asm	/^c0112708:	00 $/;"	l
c0112709	obj/kernel.asm	/^c0112709:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112710	obj/kernel.asm	/^c0112710:	e8 b3 e7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112715	obj/kernel.asm	/^c0112715:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112718	obj/kernel.asm	/^c0112718:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011271c	obj/kernel.asm	/^c011271c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011271f	obj/kernel.asm	/^c011271f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112722	obj/kernel.asm	/^c0112722:	e8 6e fa ff ff       	call   c0112195 <sfs_set_links>$/;"	l
c0112727	obj/kernel.asm	/^c0112727:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011272a	obj/kernel.asm	/^c011272a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011272d	obj/kernel.asm	/^c011272d:	e8 61 21 00 00       	call   c0114893 <unlock_sfs_fs>$/;"	l
c0112732	obj/kernel.asm	/^c0112732:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112735	obj/kernel.asm	/^c0112735:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112738	obj/kernel.asm	/^c0112738:	89 10                	mov    %edx,(%eax)$/;"	l
c011273a	obj/kernel.asm	/^c011273a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011273f	obj/kernel.asm	/^c011273f:	eb 19                	jmp    c011275a <sfs_load_inode+0x1a1>$/;"	l
c0112741	obj/kernel.asm	/^c0112741:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112744	obj/kernel.asm	/^c0112744:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112747	obj/kernel.asm	/^c0112747:	e8 6a 25 ff ff       	call   c0104cb6 <kfree>$/;"	l
c011274c	obj/kernel.asm	/^c011274c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011274f	obj/kernel.asm	/^c011274f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112752	obj/kernel.asm	/^c0112752:	e8 3c 21 00 00       	call   c0114893 <unlock_sfs_fs>$/;"	l
c0112757	obj/kernel.asm	/^c0112757:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011275a	obj/kernel.asm	/^c011275a:	c9                   	leave  $/;"	l
c011275b	obj/kernel.asm	/^c011275b:	c3                   	ret    $/;"	l
c011275c	obj/kernel.asm	/^c011275c <sfs_bmap_get_sub_nolock>:$/;"	l
c011275c	obj/kernel.asm	/^c011275c:	55                   	push   %ebp$/;"	l
c011275d	obj/kernel.asm	/^c011275d:	89 e5                	mov    %esp,%ebp$/;"	l
c011275f	obj/kernel.asm	/^c011275f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112762	obj/kernel.asm	/^c0112762:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112769	obj/kernel.asm	/^c0112769:	76 24                	jbe    c011278f <sfs_bmap_get_sub_nolock+0x33>$/;"	l
c011276b	obj/kernel.asm	/^c011276b:	c7 44 24 0c 37 94 11 	movl   $0xc0119437,0xc(%esp)$/;"	l
c0112772	obj/kernel.asm	/^c0112772:	c0 $/;"	l
c0112773	obj/kernel.asm	/^c0112773:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011277a	obj/kernel.asm	/^c011277a:	c0 $/;"	l
c011277b	obj/kernel.asm	/^c011277b:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
c0112782	obj/kernel.asm	/^c0112782:	00 $/;"	l
c0112783	obj/kernel.asm	/^c0112783:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011278a	obj/kernel.asm	/^c011278a:	e8 39 e7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011278f	obj/kernel.asm	/^c011278f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0112796	obj/kernel.asm	/^c0112796:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112799	obj/kernel.asm	/^c0112799:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c011279c	obj/kernel.asm	/^c011279c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011279f	obj/kernel.asm	/^c011279f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01127a2	obj/kernel.asm	/^c01127a2:	8b 00                	mov    (%eax),%eax$/;"	l
c01127a4	obj/kernel.asm	/^c01127a4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01127a7	obj/kernel.asm	/^c01127a7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01127aa	obj/kernel.asm	/^c01127aa:	85 c0                	test   %eax,%eax$/;"	l
c01127ac	obj/kernel.asm	/^c01127ac:	74 50                	je     c01127fe <sfs_bmap_get_sub_nolock+0xa2>$/;"	l
c01127ae	obj/kernel.asm	/^c01127ae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01127b1	obj/kernel.asm	/^c01127b1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01127b4	obj/kernel.asm	/^c01127b4:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c01127b8	obj/kernel.asm	/^c01127b8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01127bc	obj/kernel.asm	/^c01127bc:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c01127c3	obj/kernel.asm	/^c01127c3:	00 $/;"	l
c01127c4	obj/kernel.asm	/^c01127c4:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c01127c7	obj/kernel.asm	/^c01127c7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01127cb	obj/kernel.asm	/^c01127cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01127ce	obj/kernel.asm	/^c01127ce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01127d1	obj/kernel.asm	/^c01127d1:	e8 82 1d 00 00       	call   c0114558 <sfs_rbuf>$/;"	l
c01127d6	obj/kernel.asm	/^c01127d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01127d9	obj/kernel.asm	/^c01127d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01127dd	obj/kernel.asm	/^c01127dd:	74 08                	je     c01127e7 <sfs_bmap_get_sub_nolock+0x8b>$/;"	l
c01127df	obj/kernel.asm	/^c01127df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01127e2	obj/kernel.asm	/^c01127e2:	e9 eb 00 00 00       	jmp    c01128d2 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c01127e7	obj/kernel.asm	/^c01127e7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01127ea	obj/kernel.asm	/^c01127ea:	85 c0                	test   %eax,%eax$/;"	l
c01127ec	obj/kernel.asm	/^c01127ec:	0f 85 9c 00 00 00    	jne    c011288e <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c01127f2	obj/kernel.asm	/^c01127f2:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01127f6	obj/kernel.asm	/^c01127f6:	0f 84 92 00 00 00    	je     c011288e <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c01127fc	obj/kernel.asm	/^c01127fc:	eb 2e                	jmp    c011282c <sfs_bmap_get_sub_nolock+0xd0>$/;"	l
c01127fe	obj/kernel.asm	/^c01127fe:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112802	obj/kernel.asm	/^c0112802:	75 05                	jne    c0112809 <sfs_bmap_get_sub_nolock+0xad>$/;"	l
c0112804	obj/kernel.asm	/^c0112804:	e9 85 00 00 00       	jmp    c011288e <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c0112809	obj/kernel.asm	/^c0112809:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c011280c	obj/kernel.asm	/^c011280c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112810	obj/kernel.asm	/^c0112810:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112813	obj/kernel.asm	/^c0112813:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112816	obj/kernel.asm	/^c0112816:	e8 07 fb ff ff       	call   c0112322 <sfs_block_alloc>$/;"	l
c011281b	obj/kernel.asm	/^c011281b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011281e	obj/kernel.asm	/^c011281e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112822	obj/kernel.asm	/^c0112822:	74 08                	je     c011282c <sfs_bmap_get_sub_nolock+0xd0>$/;"	l
c0112824	obj/kernel.asm	/^c0112824:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112827	obj/kernel.asm	/^c0112827:	e9 a6 00 00 00       	jmp    c01128d2 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c011282c	obj/kernel.asm	/^c011282c:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c011282f	obj/kernel.asm	/^c011282f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112833	obj/kernel.asm	/^c0112833:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112836	obj/kernel.asm	/^c0112836:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112839	obj/kernel.asm	/^c0112839:	e8 e4 fa ff ff       	call   c0112322 <sfs_block_alloc>$/;"	l
c011283e	obj/kernel.asm	/^c011283e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112841	obj/kernel.asm	/^c0112841:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112845	obj/kernel.asm	/^c0112845:	74 02                	je     c0112849 <sfs_bmap_get_sub_nolock+0xed>$/;"	l
c0112847	obj/kernel.asm	/^c0112847:	eb 68                	jmp    c01128b1 <sfs_bmap_get_sub_nolock+0x155>$/;"	l
c0112849	obj/kernel.asm	/^c0112849:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011284c	obj/kernel.asm	/^c011284c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011284f	obj/kernel.asm	/^c011284f:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0112853	obj/kernel.asm	/^c0112853:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112857	obj/kernel.asm	/^c0112857:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c011285e	obj/kernel.asm	/^c011285e:	00 $/;"	l
c011285f	obj/kernel.asm	/^c011285f:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112862	obj/kernel.asm	/^c0112862:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112866	obj/kernel.asm	/^c0112866:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112869	obj/kernel.asm	/^c0112869:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011286c	obj/kernel.asm	/^c011286c:	e8 a0 1d 00 00       	call   c0114611 <sfs_wbuf>$/;"	l
c0112871	obj/kernel.asm	/^c0112871:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112874	obj/kernel.asm	/^c0112874:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112878	obj/kernel.asm	/^c0112878:	74 14                	je     c011288e <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c011287a	obj/kernel.asm	/^c011287a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011287d	obj/kernel.asm	/^c011287d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112881	obj/kernel.asm	/^c0112881:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112884	obj/kernel.asm	/^c0112884:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112887	obj/kernel.asm	/^c0112887:	e8 63 fb ff ff       	call   c01123ef <sfs_block_free>$/;"	l
c011288c	obj/kernel.asm	/^c011288c:	eb 23                	jmp    c01128b1 <sfs_bmap_get_sub_nolock+0x155>$/;"	l
c011288e	obj/kernel.asm	/^c011288e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112891	obj/kernel.asm	/^c0112891:	8b 10                	mov    (%eax),%edx$/;"	l
c0112893	obj/kernel.asm	/^c0112893:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112896	obj/kernel.asm	/^c0112896:	39 c2                	cmp    %eax,%edx$/;"	l
c0112898	obj/kernel.asm	/^c0112898:	74 08                	je     c01128a2 <sfs_bmap_get_sub_nolock+0x146>$/;"	l
c011289a	obj/kernel.asm	/^c011289a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c011289d	obj/kernel.asm	/^c011289d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01128a0	obj/kernel.asm	/^c01128a0:	89 10                	mov    %edx,(%eax)$/;"	l
c01128a2	obj/kernel.asm	/^c01128a2:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01128a5	obj/kernel.asm	/^c01128a5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01128a8	obj/kernel.asm	/^c01128a8:	89 10                	mov    %edx,(%eax)$/;"	l
c01128aa	obj/kernel.asm	/^c01128aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01128af	obj/kernel.asm	/^c01128af:	eb 21                	jmp    c01128d2 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c01128b1	obj/kernel.asm	/^c01128b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01128b4	obj/kernel.asm	/^c01128b4:	8b 10                	mov    (%eax),%edx$/;"	l
c01128b6	obj/kernel.asm	/^c01128b6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01128b9	obj/kernel.asm	/^c01128b9:	39 c2                	cmp    %eax,%edx$/;"	l
c01128bb	obj/kernel.asm	/^c01128bb:	74 12                	je     c01128cf <sfs_bmap_get_sub_nolock+0x173>$/;"	l
c01128bd	obj/kernel.asm	/^c01128bd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01128c0	obj/kernel.asm	/^c01128c0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01128c4	obj/kernel.asm	/^c01128c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01128c7	obj/kernel.asm	/^c01128c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01128ca	obj/kernel.asm	/^c01128ca:	e8 20 fb ff ff       	call   c01123ef <sfs_block_free>$/;"	l
c01128cf	obj/kernel.asm	/^c01128cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01128d2	obj/kernel.asm	/^c01128d2:	c9                   	leave  $/;"	l
c01128d3	obj/kernel.asm	/^c01128d3:	c3                   	ret    $/;"	l
c01128d4	obj/kernel.asm	/^c01128d4 <sfs_bmap_get_nolock>:$/;"	l
c01128d4	obj/kernel.asm	/^c01128d4:	55                   	push   %ebp$/;"	l
c01128d5	obj/kernel.asm	/^c01128d5:	89 e5                	mov    %esp,%ebp$/;"	l
c01128d7	obj/kernel.asm	/^c01128d7:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01128da	obj/kernel.asm	/^c01128da:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01128dd	obj/kernel.asm	/^c01128dd:	8b 00                	mov    (%eax),%eax$/;"	l
c01128df	obj/kernel.asm	/^c01128df:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01128e2	obj/kernel.asm	/^c01128e2:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c01128e6	obj/kernel.asm	/^c01128e6:	77 5e                	ja     c0112946 <sfs_bmap_get_nolock+0x72>$/;"	l
c01128e8	obj/kernel.asm	/^c01128e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01128eb	obj/kernel.asm	/^c01128eb:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01128ee	obj/kernel.asm	/^c01128ee:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c01128f2	obj/kernel.asm	/^c01128f2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01128f5	obj/kernel.asm	/^c01128f5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01128f8	obj/kernel.asm	/^c01128f8:	85 c0                	test   %eax,%eax$/;"	l
c01128fa	obj/kernel.asm	/^c01128fa:	75 45                	jne    c0112941 <sfs_bmap_get_nolock+0x6d>$/;"	l
c01128fc	obj/kernel.asm	/^c01128fc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112900	obj/kernel.asm	/^c0112900:	74 3f                	je     c0112941 <sfs_bmap_get_nolock+0x6d>$/;"	l
c0112902	obj/kernel.asm	/^c0112902:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112905	obj/kernel.asm	/^c0112905:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112909	obj/kernel.asm	/^c0112909:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011290c	obj/kernel.asm	/^c011290c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011290f	obj/kernel.asm	/^c011290f:	e8 0e fa ff ff       	call   c0112322 <sfs_block_alloc>$/;"	l
c0112914	obj/kernel.asm	/^c0112914:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112917	obj/kernel.asm	/^c0112917:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011291b	obj/kernel.asm	/^c011291b:	74 08                	je     c0112925 <sfs_bmap_get_nolock+0x51>$/;"	l
c011291d	obj/kernel.asm	/^c011291d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112920	obj/kernel.asm	/^c0112920:	e9 2f 01 00 00       	jmp    c0112a54 <sfs_bmap_get_nolock+0x180>$/;"	l
c0112925	obj/kernel.asm	/^c0112925:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0112928	obj/kernel.asm	/^c0112928:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011292b	obj/kernel.asm	/^c011292b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c011292e	obj/kernel.asm	/^c011292e:	89 4c 90 0c          	mov    %ecx,0xc(%eax,%edx,4)$/;"	l
c0112932	obj/kernel.asm	/^c0112932:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112935	obj/kernel.asm	/^c0112935:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c011293c	obj/kernel.asm	/^c011293c:	e9 c5 00 00 00       	jmp    c0112a06 <sfs_bmap_get_nolock+0x132>$/;"	l
c0112941	obj/kernel.asm	/^c0112941:	e9 c0 00 00 00       	jmp    c0112a06 <sfs_bmap_get_nolock+0x132>$/;"	l
c0112946	obj/kernel.asm	/^c0112946:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c011294a	obj/kernel.asm	/^c011294a:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112951	obj/kernel.asm	/^c0112951:	0f 87 93 00 00 00    	ja     c01129ea <sfs_bmap_get_nolock+0x116>$/;"	l
c0112957	obj/kernel.asm	/^c0112957:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011295a	obj/kernel.asm	/^c011295a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011295d	obj/kernel.asm	/^c011295d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112960	obj/kernel.asm	/^c0112960:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112963	obj/kernel.asm	/^c0112963:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112967	obj/kernel.asm	/^c0112967:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011296a	obj/kernel.asm	/^c011296a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011296e	obj/kernel.asm	/^c011296e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112971	obj/kernel.asm	/^c0112971:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112975	obj/kernel.asm	/^c0112975:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0112978	obj/kernel.asm	/^c0112978:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011297c	obj/kernel.asm	/^c011297c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011297f	obj/kernel.asm	/^c011297f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112982	obj/kernel.asm	/^c0112982:	e8 d5 fd ff ff       	call   c011275c <sfs_bmap_get_sub_nolock>$/;"	l
c0112987	obj/kernel.asm	/^c0112987:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011298a	obj/kernel.asm	/^c011298a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011298e	obj/kernel.asm	/^c011298e:	74 08                	je     c0112998 <sfs_bmap_get_nolock+0xc4>$/;"	l
c0112990	obj/kernel.asm	/^c0112990:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112993	obj/kernel.asm	/^c0112993:	e9 bc 00 00 00       	jmp    c0112a54 <sfs_bmap_get_nolock+0x180>$/;"	l
c0112998	obj/kernel.asm	/^c0112998:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011299b	obj/kernel.asm	/^c011299b:	8b 50 3c             	mov    0x3c(%eax),%edx$/;"	l
c011299e	obj/kernel.asm	/^c011299e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01129a1	obj/kernel.asm	/^c01129a1:	39 c2                	cmp    %eax,%edx$/;"	l
c01129a3	obj/kernel.asm	/^c01129a3:	74 43                	je     c01129e8 <sfs_bmap_get_nolock+0x114>$/;"	l
c01129a5	obj/kernel.asm	/^c01129a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01129a8	obj/kernel.asm	/^c01129a8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01129ab	obj/kernel.asm	/^c01129ab:	85 c0                	test   %eax,%eax$/;"	l
c01129ad	obj/kernel.asm	/^c01129ad:	74 24                	je     c01129d3 <sfs_bmap_get_nolock+0xff>$/;"	l
c01129af	obj/kernel.asm	/^c01129af:	c7 44 24 0c 4e 94 11 	movl   $0xc011944e,0xc(%esp)$/;"	l
c01129b6	obj/kernel.asm	/^c01129b6:	c0 $/;"	l
c01129b7	obj/kernel.asm	/^c01129b7:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01129be	obj/kernel.asm	/^c01129be:	c0 $/;"	l
c01129bf	obj/kernel.asm	/^c01129bf:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
c01129c6	obj/kernel.asm	/^c01129c6:	00 $/;"	l
c01129c7	obj/kernel.asm	/^c01129c7:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01129ce	obj/kernel.asm	/^c01129ce:	e8 f5 e4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01129d3	obj/kernel.asm	/^c01129d3:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01129d6	obj/kernel.asm	/^c01129d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01129d9	obj/kernel.asm	/^c01129d9:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c01129dc	obj/kernel.asm	/^c01129dc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01129df	obj/kernel.asm	/^c01129df:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01129e6	obj/kernel.asm	/^c01129e6:	eb 1e                	jmp    c0112a06 <sfs_bmap_get_nolock+0x132>$/;"	l
c01129e8	obj/kernel.asm	/^c01129e8:	eb 1c                	jmp    c0112a06 <sfs_bmap_get_nolock+0x132>$/;"	l
c01129ea	obj/kernel.asm	/^c01129ea:	c7 44 24 08 64 94 11 	movl   $0xc0119464,0x8(%esp)$/;"	l
c01129f1	obj/kernel.asm	/^c01129f1:	c0 $/;"	l
c01129f2	obj/kernel.asm	/^c01129f2:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)$/;"	l
c01129f9	obj/kernel.asm	/^c01129f9:	00 $/;"	l
c01129fa	obj/kernel.asm	/^c01129fa:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112a01	obj/kernel.asm	/^c0112a01:	e8 c2 e4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112a06	obj/kernel.asm	/^c0112a06:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112a09	obj/kernel.asm	/^c0112a09:	85 c0                	test   %eax,%eax$/;"	l
c0112a0b	obj/kernel.asm	/^c0112a0b:	74 3a                	je     c0112a47 <sfs_bmap_get_nolock+0x173>$/;"	l
c0112a0d	obj/kernel.asm	/^c0112a0d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112a10	obj/kernel.asm	/^c0112a10:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112a14	obj/kernel.asm	/^c0112a14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a17	obj/kernel.asm	/^c0112a17:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112a1a	obj/kernel.asm	/^c0112a1a:	e8 9e f8 ff ff       	call   c01122bd <sfs_block_inuse>$/;"	l
c0112a1f	obj/kernel.asm	/^c0112a1f:	85 c0                	test   %eax,%eax$/;"	l
c0112a21	obj/kernel.asm	/^c0112a21:	75 24                	jne    c0112a47 <sfs_bmap_get_nolock+0x173>$/;"	l
c0112a23	obj/kernel.asm	/^c0112a23:	c7 44 24 0c 90 94 11 	movl   $0xc0119490,0xc(%esp)$/;"	l
c0112a2a	obj/kernel.asm	/^c0112a2a:	c0 $/;"	l
c0112a2b	obj/kernel.asm	/^c0112a2b:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112a32	obj/kernel.asm	/^c0112a32:	c0 $/;"	l
c0112a33	obj/kernel.asm	/^c0112a33:	c7 44 24 04 21 01 00 	movl   $0x121,0x4(%esp)$/;"	l
c0112a3a	obj/kernel.asm	/^c0112a3a:	00 $/;"	l
c0112a3b	obj/kernel.asm	/^c0112a3b:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112a42	obj/kernel.asm	/^c0112a42:	e8 81 e4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112a47	obj/kernel.asm	/^c0112a47:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112a4a	obj/kernel.asm	/^c0112a4a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0112a4d	obj/kernel.asm	/^c0112a4d:	89 10                	mov    %edx,(%eax)$/;"	l
c0112a4f	obj/kernel.asm	/^c0112a4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112a54	obj/kernel.asm	/^c0112a54:	c9                   	leave  $/;"	l
c0112a55	obj/kernel.asm	/^c0112a55:	c3                   	ret    $/;"	l
c0112a56	obj/kernel.asm	/^c0112a56 <sfs_bmap_free_sub_nolock>:$/;"	l
c0112a56	obj/kernel.asm	/^c0112a56:	55                   	push   %ebp$/;"	l
c0112a57	obj/kernel.asm	/^c0112a57:	89 e5                	mov    %esp,%ebp$/;"	l
c0112a59	obj/kernel.asm	/^c0112a59:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112a5c	obj/kernel.asm	/^c0112a5c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112a5f	obj/kernel.asm	/^c0112a5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112a63	obj/kernel.asm	/^c0112a63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a66	obj/kernel.asm	/^c0112a66:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112a69	obj/kernel.asm	/^c0112a69:	e8 4f f8 ff ff       	call   c01122bd <sfs_block_inuse>$/;"	l
c0112a6e	obj/kernel.asm	/^c0112a6e:	85 c0                	test   %eax,%eax$/;"	l
c0112a70	obj/kernel.asm	/^c0112a70:	74 09                	je     c0112a7b <sfs_bmap_free_sub_nolock+0x25>$/;"	l
c0112a72	obj/kernel.asm	/^c0112a72:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112a79	obj/kernel.asm	/^c0112a79:	76 24                	jbe    c0112a9f <sfs_bmap_free_sub_nolock+0x49>$/;"	l
c0112a7b	obj/kernel.asm	/^c0112a7b:	c7 44 24 0c b8 94 11 	movl   $0xc01194b8,0xc(%esp)$/;"	l
c0112a82	obj/kernel.asm	/^c0112a82:	c0 $/;"	l
c0112a83	obj/kernel.asm	/^c0112a83:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112a8a	obj/kernel.asm	/^c0112a8a:	c0 $/;"	l
c0112a8b	obj/kernel.asm	/^c0112a8b:	c7 44 24 04 2b 01 00 	movl   $0x12b,0x4(%esp)$/;"	l
c0112a92	obj/kernel.asm	/^c0112a92:	00 $/;"	l
c0112a93	obj/kernel.asm	/^c0112a93:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112a9a	obj/kernel.asm	/^c0112a9a:	e8 29 e4 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112a9f	obj/kernel.asm	/^c0112a9f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0112aa6	obj/kernel.asm	/^c0112aa6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112aa9	obj/kernel.asm	/^c0112aa9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0112aac	obj/kernel.asm	/^c0112aac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112aaf	obj/kernel.asm	/^c0112aaf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112ab2	obj/kernel.asm	/^c0112ab2:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112ab6	obj/kernel.asm	/^c0112ab6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112ab9	obj/kernel.asm	/^c0112ab9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112abd	obj/kernel.asm	/^c0112abd:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0112ac4	obj/kernel.asm	/^c0112ac4:	00 $/;"	l
c0112ac5	obj/kernel.asm	/^c0112ac5:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0112ac8	obj/kernel.asm	/^c0112ac8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112acc	obj/kernel.asm	/^c0112acc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112acf	obj/kernel.asm	/^c0112acf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112ad2	obj/kernel.asm	/^c0112ad2:	e8 81 1a 00 00       	call   c0114558 <sfs_rbuf>$/;"	l
c0112ad7	obj/kernel.asm	/^c0112ad7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112ada	obj/kernel.asm	/^c0112ada:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112ade	obj/kernel.asm	/^c0112ade:	74 05                	je     c0112ae5 <sfs_bmap_free_sub_nolock+0x8f>$/;"	l
c0112ae0	obj/kernel.asm	/^c0112ae0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112ae3	obj/kernel.asm	/^c0112ae3:	eb 54                	jmp    c0112b39 <sfs_bmap_free_sub_nolock+0xe3>$/;"	l
c0112ae5	obj/kernel.asm	/^c0112ae5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112ae8	obj/kernel.asm	/^c0112ae8:	85 c0                	test   %eax,%eax$/;"	l
c0112aea	obj/kernel.asm	/^c0112aea:	74 48                	je     c0112b34 <sfs_bmap_free_sub_nolock+0xde>$/;"	l
c0112aec	obj/kernel.asm	/^c0112aec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112aef	obj/kernel.asm	/^c0112aef:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112af3	obj/kernel.asm	/^c0112af3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112af6	obj/kernel.asm	/^c0112af6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112afa	obj/kernel.asm	/^c0112afa:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0112b01	obj/kernel.asm	/^c0112b01:	00 $/;"	l
c0112b02	obj/kernel.asm	/^c0112b02:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112b05	obj/kernel.asm	/^c0112b05:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112b09	obj/kernel.asm	/^c0112b09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b0c	obj/kernel.asm	/^c0112b0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112b0f	obj/kernel.asm	/^c0112b0f:	e8 fd 1a 00 00       	call   c0114611 <sfs_wbuf>$/;"	l
c0112b14	obj/kernel.asm	/^c0112b14:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112b17	obj/kernel.asm	/^c0112b17:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112b1b	obj/kernel.asm	/^c0112b1b:	74 05                	je     c0112b22 <sfs_bmap_free_sub_nolock+0xcc>$/;"	l
c0112b1d	obj/kernel.asm	/^c0112b1d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112b20	obj/kernel.asm	/^c0112b20:	eb 17                	jmp    c0112b39 <sfs_bmap_free_sub_nolock+0xe3>$/;"	l
c0112b22	obj/kernel.asm	/^c0112b22:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112b25	obj/kernel.asm	/^c0112b25:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112b29	obj/kernel.asm	/^c0112b29:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b2c	obj/kernel.asm	/^c0112b2c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112b2f	obj/kernel.asm	/^c0112b2f:	e8 bb f8 ff ff       	call   c01123ef <sfs_block_free>$/;"	l
c0112b34	obj/kernel.asm	/^c0112b34:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112b39	obj/kernel.asm	/^c0112b39:	c9                   	leave  $/;"	l
c0112b3a	obj/kernel.asm	/^c0112b3a:	c3                   	ret    $/;"	l
c0112b3b	obj/kernel.asm	/^c0112b3b <sfs_bmap_free_nolock>:$/;"	l
c0112b3b	obj/kernel.asm	/^c0112b3b:	55                   	push   %ebp$/;"	l
c0112b3c	obj/kernel.asm	/^c0112b3c:	89 e5                	mov    %esp,%ebp$/;"	l
c0112b3e	obj/kernel.asm	/^c0112b3e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112b41	obj/kernel.asm	/^c0112b41:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112b44	obj/kernel.asm	/^c0112b44:	8b 00                	mov    (%eax),%eax$/;"	l
c0112b46	obj/kernel.asm	/^c0112b46:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112b49	obj/kernel.asm	/^c0112b49:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c0112b4d	obj/kernel.asm	/^c0112b4d:	77 44                	ja     c0112b93 <sfs_bmap_free_nolock+0x58>$/;"	l
c0112b4f	obj/kernel.asm	/^c0112b4f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112b52	obj/kernel.asm	/^c0112b52:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112b55	obj/kernel.asm	/^c0112b55:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c0112b59	obj/kernel.asm	/^c0112b59:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112b5c	obj/kernel.asm	/^c0112b5c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112b60	obj/kernel.asm	/^c0112b60:	74 2a                	je     c0112b8c <sfs_bmap_free_nolock+0x51>$/;"	l
c0112b62	obj/kernel.asm	/^c0112b62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112b65	obj/kernel.asm	/^c0112b65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112b69	obj/kernel.asm	/^c0112b69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b6c	obj/kernel.asm	/^c0112b6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112b6f	obj/kernel.asm	/^c0112b6f:	e8 7b f8 ff ff       	call   c01123ef <sfs_block_free>$/;"	l
c0112b74	obj/kernel.asm	/^c0112b74:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112b77	obj/kernel.asm	/^c0112b77:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112b7a	obj/kernel.asm	/^c0112b7a:	c7 44 90 0c 00 00 00 	movl   $0x0,0xc(%eax,%edx,4)$/;"	l
c0112b81	obj/kernel.asm	/^c0112b81:	00 $/;"	l
c0112b82	obj/kernel.asm	/^c0112b82:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112b85	obj/kernel.asm	/^c0112b85:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112b8c	obj/kernel.asm	/^c0112b8c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112b91	obj/kernel.asm	/^c0112b91:	eb 4f                	jmp    c0112be2 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112b93	obj/kernel.asm	/^c0112b93:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c0112b97	obj/kernel.asm	/^c0112b97:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112b9e	obj/kernel.asm	/^c0112b9e:	77 3d                	ja     c0112bdd <sfs_bmap_free_nolock+0xa2>$/;"	l
c0112ba0	obj/kernel.asm	/^c0112ba0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112ba3	obj/kernel.asm	/^c0112ba3:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112ba6	obj/kernel.asm	/^c0112ba6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112ba9	obj/kernel.asm	/^c0112ba9:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112bad	obj/kernel.asm	/^c0112bad:	74 27                	je     c0112bd6 <sfs_bmap_free_nolock+0x9b>$/;"	l
c0112baf	obj/kernel.asm	/^c0112baf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112bb2	obj/kernel.asm	/^c0112bb2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112bb6	obj/kernel.asm	/^c0112bb6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112bb9	obj/kernel.asm	/^c0112bb9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112bbd	obj/kernel.asm	/^c0112bbd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112bc0	obj/kernel.asm	/^c0112bc0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112bc3	obj/kernel.asm	/^c0112bc3:	e8 8e fe ff ff       	call   c0112a56 <sfs_bmap_free_sub_nolock>$/;"	l
c0112bc8	obj/kernel.asm	/^c0112bc8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112bcb	obj/kernel.asm	/^c0112bcb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0112bcf	obj/kernel.asm	/^c0112bcf:	74 05                	je     c0112bd6 <sfs_bmap_free_nolock+0x9b>$/;"	l
c0112bd1	obj/kernel.asm	/^c0112bd1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112bd4	obj/kernel.asm	/^c0112bd4:	eb 0c                	jmp    c0112be2 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112bd6	obj/kernel.asm	/^c0112bd6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112bdb	obj/kernel.asm	/^c0112bdb:	eb 05                	jmp    c0112be2 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112bdd	obj/kernel.asm	/^c0112bdd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112be2	obj/kernel.asm	/^c0112be2:	c9                   	leave  $/;"	l
c0112be3	obj/kernel.asm	/^c0112be3:	c3                   	ret    $/;"	l
c0112be4	obj/kernel.asm	/^c0112be4 <sfs_bmap_load_nolock>:$/;"	l
c0112be4	obj/kernel.asm	/^c0112be4:	55                   	push   %ebp$/;"	l
c0112be5	obj/kernel.asm	/^c0112be5:	89 e5                	mov    %esp,%ebp$/;"	l
c0112be7	obj/kernel.asm	/^c0112be7:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112bea	obj/kernel.asm	/^c0112bea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112bed	obj/kernel.asm	/^c0112bed:	8b 00                	mov    (%eax),%eax$/;"	l
c0112bef	obj/kernel.asm	/^c0112bef:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112bf2	obj/kernel.asm	/^c0112bf2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112bf5	obj/kernel.asm	/^c0112bf5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112bf8	obj/kernel.asm	/^c0112bf8:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0112bfb	obj/kernel.asm	/^c0112bfb:	73 24                	jae    c0112c21 <sfs_bmap_load_nolock+0x3d>$/;"	l
c0112bfd	obj/kernel.asm	/^c0112bfd:	c7 44 24 0c ec 94 11 	movl   $0xc01194ec,0xc(%esp)$/;"	l
c0112c04	obj/kernel.asm	/^c0112c04:	c0 $/;"	l
c0112c05	obj/kernel.asm	/^c0112c05:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112c0c	obj/kernel.asm	/^c0112c0c:	c0 $/;"	l
c0112c0d	obj/kernel.asm	/^c0112c0d:	c7 44 24 04 64 01 00 	movl   $0x164,0x4(%esp)$/;"	l
c0112c14	obj/kernel.asm	/^c0112c14:	00 $/;"	l
c0112c15	obj/kernel.asm	/^c0112c15:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112c1c	obj/kernel.asm	/^c0112c1c:	e8 a7 e2 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112c21	obj/kernel.asm	/^c0112c21:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112c24	obj/kernel.asm	/^c0112c24:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112c27	obj/kernel.asm	/^c0112c27:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0112c2a	obj/kernel.asm	/^c0112c2a:	0f 94 c0             	sete   %al$/;"	l
c0112c2d	obj/kernel.asm	/^c0112c2d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0112c30	obj/kernel.asm	/^c0112c30:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112c33	obj/kernel.asm	/^c0112c33:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112c36	obj/kernel.asm	/^c0112c36:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112c3a	obj/kernel.asm	/^c0112c3a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112c3d	obj/kernel.asm	/^c0112c3d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112c41	obj/kernel.asm	/^c0112c41:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112c44	obj/kernel.asm	/^c0112c44:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112c48	obj/kernel.asm	/^c0112c48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c4b	obj/kernel.asm	/^c0112c4b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112c4f	obj/kernel.asm	/^c0112c4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c52	obj/kernel.asm	/^c0112c52:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112c55	obj/kernel.asm	/^c0112c55:	e8 7a fc ff ff       	call   c01128d4 <sfs_bmap_get_nolock>$/;"	l
c0112c5a	obj/kernel.asm	/^c0112c5a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112c5d	obj/kernel.asm	/^c0112c5d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112c61	obj/kernel.asm	/^c0112c61:	74 05                	je     c0112c68 <sfs_bmap_load_nolock+0x84>$/;"	l
c0112c63	obj/kernel.asm	/^c0112c63:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112c66	obj/kernel.asm	/^c0112c66:	eb 62                	jmp    c0112cca <sfs_bmap_load_nolock+0xe6>$/;"	l
c0112c68	obj/kernel.asm	/^c0112c68:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112c6b	obj/kernel.asm	/^c0112c6b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112c6f	obj/kernel.asm	/^c0112c6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c72	obj/kernel.asm	/^c0112c72:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112c75	obj/kernel.asm	/^c0112c75:	e8 43 f6 ff ff       	call   c01122bd <sfs_block_inuse>$/;"	l
c0112c7a	obj/kernel.asm	/^c0112c7a:	85 c0                	test   %eax,%eax$/;"	l
c0112c7c	obj/kernel.asm	/^c0112c7c:	75 24                	jne    c0112ca2 <sfs_bmap_load_nolock+0xbe>$/;"	l
c0112c7e	obj/kernel.asm	/^c0112c7e:	c7 44 24 0c d5 93 11 	movl   $0xc01193d5,0xc(%esp)$/;"	l
c0112c85	obj/kernel.asm	/^c0112c85:	c0 $/;"	l
c0112c86	obj/kernel.asm	/^c0112c86:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112c8d	obj/kernel.asm	/^c0112c8d:	c0 $/;"	l
c0112c8e	obj/kernel.asm	/^c0112c8e:	c7 44 24 04 6b 01 00 	movl   $0x16b,0x4(%esp)$/;"	l
c0112c95	obj/kernel.asm	/^c0112c95:	00 $/;"	l
c0112c96	obj/kernel.asm	/^c0112c96:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112c9d	obj/kernel.asm	/^c0112c9d:	e8 26 e2 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112ca2	obj/kernel.asm	/^c0112ca2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112ca6	obj/kernel.asm	/^c0112ca6:	74 0f                	je     c0112cb7 <sfs_bmap_load_nolock+0xd3>$/;"	l
c0112ca8	obj/kernel.asm	/^c0112ca8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112cab	obj/kernel.asm	/^c0112cab:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112cae	obj/kernel.asm	/^c0112cae:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0112cb1	obj/kernel.asm	/^c0112cb1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112cb4	obj/kernel.asm	/^c0112cb4:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0112cb7	obj/kernel.asm	/^c0112cb7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112cbb	obj/kernel.asm	/^c0112cbb:	74 08                	je     c0112cc5 <sfs_bmap_load_nolock+0xe1>$/;"	l
c0112cbd	obj/kernel.asm	/^c0112cbd:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112cc0	obj/kernel.asm	/^c0112cc0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112cc3	obj/kernel.asm	/^c0112cc3:	89 10                	mov    %edx,(%eax)$/;"	l
c0112cc5	obj/kernel.asm	/^c0112cc5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112cca	obj/kernel.asm	/^c0112cca:	c9                   	leave  $/;"	l
c0112ccb	obj/kernel.asm	/^c0112ccb:	c3                   	ret    $/;"	l
c0112ccc	obj/kernel.asm	/^c0112ccc <sfs_bmap_truncate_nolock>:$/;"	l
c0112ccc	obj/kernel.asm	/^c0112ccc:	55                   	push   %ebp$/;"	l
c0112ccd	obj/kernel.asm	/^c0112ccd:	89 e5                	mov    %esp,%ebp$/;"	l
c0112ccf	obj/kernel.asm	/^c0112ccf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112cd2	obj/kernel.asm	/^c0112cd2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112cd5	obj/kernel.asm	/^c0112cd5:	8b 00                	mov    (%eax),%eax$/;"	l
c0112cd7	obj/kernel.asm	/^c0112cd7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112cda	obj/kernel.asm	/^c0112cda:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112cdd	obj/kernel.asm	/^c0112cdd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112ce0	obj/kernel.asm	/^c0112ce0:	85 c0                	test   %eax,%eax$/;"	l
c0112ce2	obj/kernel.asm	/^c0112ce2:	75 24                	jne    c0112d08 <sfs_bmap_truncate_nolock+0x3c>$/;"	l
c0112ce4	obj/kernel.asm	/^c0112ce4:	c7 44 24 0c 01 95 11 	movl   $0xc0119501,0xc(%esp)$/;"	l
c0112ceb	obj/kernel.asm	/^c0112ceb:	c0 $/;"	l
c0112cec	obj/kernel.asm	/^c0112cec:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112cf3	obj/kernel.asm	/^c0112cf3:	c0 $/;"	l
c0112cf4	obj/kernel.asm	/^c0112cf4:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
c0112cfb	obj/kernel.asm	/^c0112cfb:	00 $/;"	l
c0112cfc	obj/kernel.asm	/^c0112cfc:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112d03	obj/kernel.asm	/^c0112d03:	e8 c0 e1 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112d08	obj/kernel.asm	/^c0112d08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d0b	obj/kernel.asm	/^c0112d0b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112d0e	obj/kernel.asm	/^c0112d0e:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0112d11	obj/kernel.asm	/^c0112d11:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112d15	obj/kernel.asm	/^c0112d15:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d18	obj/kernel.asm	/^c0112d18:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112d1c	obj/kernel.asm	/^c0112d1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d1f	obj/kernel.asm	/^c0112d1f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112d22	obj/kernel.asm	/^c0112d22:	e8 14 fe ff ff       	call   c0112b3b <sfs_bmap_free_nolock>$/;"	l
c0112d27	obj/kernel.asm	/^c0112d27:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112d2a	obj/kernel.asm	/^c0112d2a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112d2e	obj/kernel.asm	/^c0112d2e:	74 05                	je     c0112d35 <sfs_bmap_truncate_nolock+0x69>$/;"	l
c0112d30	obj/kernel.asm	/^c0112d30:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112d33	obj/kernel.asm	/^c0112d33:	eb 1e                	jmp    c0112d53 <sfs_bmap_truncate_nolock+0x87>$/;"	l
c0112d35	obj/kernel.asm	/^c0112d35:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d38	obj/kernel.asm	/^c0112d38:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112d3b	obj/kernel.asm	/^c0112d3b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0112d3e	obj/kernel.asm	/^c0112d3e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d41	obj/kernel.asm	/^c0112d41:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0112d44	obj/kernel.asm	/^c0112d44:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d47	obj/kernel.asm	/^c0112d47:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112d4e	obj/kernel.asm	/^c0112d4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112d53	obj/kernel.asm	/^c0112d53:	c9                   	leave  $/;"	l
c0112d54	obj/kernel.asm	/^c0112d54:	c3                   	ret    $/;"	l
c0112d55	obj/kernel.asm	/^c0112d55 <sfs_dirent_read_nolock>:$/;"	l
c0112d55	obj/kernel.asm	/^c0112d55:	55                   	push   %ebp$/;"	l
c0112d56	obj/kernel.asm	/^c0112d56:	89 e5                	mov    %esp,%ebp$/;"	l
c0112d58	obj/kernel.asm	/^c0112d58:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112d5b	obj/kernel.asm	/^c0112d5b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d5e	obj/kernel.asm	/^c0112d5e:	8b 00                	mov    (%eax),%eax$/;"	l
c0112d60	obj/kernel.asm	/^c0112d60:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0112d64	obj/kernel.asm	/^c0112d64:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0112d68	obj/kernel.asm	/^c0112d68:	75 15                	jne    c0112d7f <sfs_dirent_read_nolock+0x2a>$/;"	l
c0112d6a	obj/kernel.asm	/^c0112d6a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112d6e	obj/kernel.asm	/^c0112d6e:	78 0f                	js     c0112d7f <sfs_dirent_read_nolock+0x2a>$/;"	l
c0112d70	obj/kernel.asm	/^c0112d70:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112d73	obj/kernel.asm	/^c0112d73:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d76	obj/kernel.asm	/^c0112d76:	8b 00                	mov    (%eax),%eax$/;"	l
c0112d78	obj/kernel.asm	/^c0112d78:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112d7b	obj/kernel.asm	/^c0112d7b:	39 c2                	cmp    %eax,%edx$/;"	l
c0112d7d	obj/kernel.asm	/^c0112d7d:	72 24                	jb     c0112da3 <sfs_dirent_read_nolock+0x4e>$/;"	l
c0112d7f	obj/kernel.asm	/^c0112d7f:	c7 44 24 0c 14 95 11 	movl   $0xc0119514,0xc(%esp)$/;"	l
c0112d86	obj/kernel.asm	/^c0112d86:	c0 $/;"	l
c0112d87	obj/kernel.asm	/^c0112d87:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112d8e	obj/kernel.asm	/^c0112d8e:	c0 $/;"	l
c0112d8f	obj/kernel.asm	/^c0112d8f:	c7 44 24 04 8e 01 00 	movl   $0x18e,0x4(%esp)$/;"	l
c0112d96	obj/kernel.asm	/^c0112d96:	00 $/;"	l
c0112d97	obj/kernel.asm	/^c0112d97:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112d9e	obj/kernel.asm	/^c0112d9e:	e8 25 e1 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112da3	obj/kernel.asm	/^c0112da3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112da6	obj/kernel.asm	/^c0112da6:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c0112da9	obj/kernel.asm	/^c0112da9:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0112dad	obj/kernel.asm	/^c0112dad:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112db1	obj/kernel.asm	/^c0112db1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112db4	obj/kernel.asm	/^c0112db4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112db8	obj/kernel.asm	/^c0112db8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112dbb	obj/kernel.asm	/^c0112dbb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112dbe	obj/kernel.asm	/^c0112dbe:	e8 21 fe ff ff       	call   c0112be4 <sfs_bmap_load_nolock>$/;"	l
c0112dc3	obj/kernel.asm	/^c0112dc3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112dc6	obj/kernel.asm	/^c0112dc6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112dca	obj/kernel.asm	/^c0112dca:	74 08                	je     c0112dd4 <sfs_dirent_read_nolock+0x7f>$/;"	l
c0112dcc	obj/kernel.asm	/^c0112dcc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112dcf	obj/kernel.asm	/^c0112dcf:	e9 80 00 00 00       	jmp    c0112e54 <sfs_dirent_read_nolock+0xff>$/;"	l
c0112dd4	obj/kernel.asm	/^c0112dd4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112dd7	obj/kernel.asm	/^c0112dd7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112ddb	obj/kernel.asm	/^c0112ddb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112dde	obj/kernel.asm	/^c0112dde:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112de1	obj/kernel.asm	/^c0112de1:	e8 d7 f4 ff ff       	call   c01122bd <sfs_block_inuse>$/;"	l
c0112de6	obj/kernel.asm	/^c0112de6:	85 c0                	test   %eax,%eax$/;"	l
c0112de8	obj/kernel.asm	/^c0112de8:	75 24                	jne    c0112e0e <sfs_dirent_read_nolock+0xb9>$/;"	l
c0112dea	obj/kernel.asm	/^c0112dea:	c7 44 24 0c d5 93 11 	movl   $0xc01193d5,0xc(%esp)$/;"	l
c0112df1	obj/kernel.asm	/^c0112df1:	c0 $/;"	l
c0112df2	obj/kernel.asm	/^c0112df2:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112df9	obj/kernel.asm	/^c0112df9:	c0 $/;"	l
c0112dfa	obj/kernel.asm	/^c0112dfa:	c7 44 24 04 95 01 00 	movl   $0x195,0x4(%esp)$/;"	l
c0112e01	obj/kernel.asm	/^c0112e01:	00 $/;"	l
c0112e02	obj/kernel.asm	/^c0112e02:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112e09	obj/kernel.asm	/^c0112e09:	e8 ba e0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112e0e	obj/kernel.asm	/^c0112e0e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112e11	obj/kernel.asm	/^c0112e11:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0112e18	obj/kernel.asm	/^c0112e18:	00 $/;"	l
c0112e19	obj/kernel.asm	/^c0112e19:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112e1d	obj/kernel.asm	/^c0112e1d:	c7 44 24 08 04 01 00 	movl   $0x104,0x8(%esp)$/;"	l
c0112e24	obj/kernel.asm	/^c0112e24:	00 $/;"	l
c0112e25	obj/kernel.asm	/^c0112e25:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112e28	obj/kernel.asm	/^c0112e28:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112e2c	obj/kernel.asm	/^c0112e2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e2f	obj/kernel.asm	/^c0112e2f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112e32	obj/kernel.asm	/^c0112e32:	e8 21 17 00 00       	call   c0114558 <sfs_rbuf>$/;"	l
c0112e37	obj/kernel.asm	/^c0112e37:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112e3a	obj/kernel.asm	/^c0112e3a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112e3e	obj/kernel.asm	/^c0112e3e:	74 05                	je     c0112e45 <sfs_dirent_read_nolock+0xf0>$/;"	l
c0112e40	obj/kernel.asm	/^c0112e40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e43	obj/kernel.asm	/^c0112e43:	eb 0f                	jmp    c0112e54 <sfs_dirent_read_nolock+0xff>$/;"	l
c0112e45	obj/kernel.asm	/^c0112e45:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112e48	obj/kernel.asm	/^c0112e48:	c6 80 03 01 00 00 00 	movb   $0x0,0x103(%eax)$/;"	l
c0112e4f	obj/kernel.asm	/^c0112e4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112e54	obj/kernel.asm	/^c0112e54:	c9                   	leave  $/;"	l
c0112e55	obj/kernel.asm	/^c0112e55:	c3                   	ret    $/;"	l
c0112e56	obj/kernel.asm	/^c0112e56 <sfs_dirent_search_nolock>:$/;"	l
c0112e56	obj/kernel.asm	/^c0112e56:	55                   	push   %ebp$/;"	l
c0112e57	obj/kernel.asm	/^c0112e57:	89 e5                	mov    %esp,%ebp$/;"	l
c0112e59	obj/kernel.asm	/^c0112e59:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112e5c	obj/kernel.asm	/^c0112e5c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112e5f	obj/kernel.asm	/^c0112e5f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112e62	obj/kernel.asm	/^c0112e62:	e8 5c 22 00 00       	call   c01150c3 <strlen>$/;"	l
c0112e67	obj/kernel.asm	/^c0112e67:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c0112e6c	obj/kernel.asm	/^c0112e6c:	76 24                	jbe    c0112e92 <sfs_dirent_search_nolock+0x3c>$/;"	l
c0112e6e	obj/kernel.asm	/^c0112e6e:	c7 44 24 0c 60 95 11 	movl   $0xc0119560,0xc(%esp)$/;"	l
c0112e75	obj/kernel.asm	/^c0112e75:	c0 $/;"	l
c0112e76	obj/kernel.asm	/^c0112e76:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0112e7d	obj/kernel.asm	/^c0112e7d:	c0 $/;"	l
c0112e7e	obj/kernel.asm	/^c0112e7e:	c7 44 24 04 ba 01 00 	movl   $0x1ba,0x4(%esp)$/;"	l
c0112e85	obj/kernel.asm	/^c0112e85:	00 $/;"	l
c0112e86	obj/kernel.asm	/^c0112e86:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0112e8d	obj/kernel.asm	/^c0112e8d:	e8 36 e0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0112e92	obj/kernel.asm	/^c0112e92:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c0112e99	obj/kernel.asm	/^c0112e99:	e8 fd 1d ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0112e9e	obj/kernel.asm	/^c0112e9e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112ea1	obj/kernel.asm	/^c0112ea1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112ea5	obj/kernel.asm	/^c0112ea5:	75 0a                	jne    c0112eb1 <sfs_dirent_search_nolock+0x5b>$/;"	l
c0112ea7	obj/kernel.asm	/^c0112ea7:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0112eac	obj/kernel.asm	/^c0112eac:	e9 cb 00 00 00       	jmp    c0112f7c <sfs_dirent_search_nolock+0x126>$/;"	l
c0112eb1	obj/kernel.asm	/^c0112eb1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112eb4	obj/kernel.asm	/^c0112eb4:	8b 00                	mov    (%eax),%eax$/;"	l
c0112eb6	obj/kernel.asm	/^c0112eb6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112eb9	obj/kernel.asm	/^c0112eb9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112ebc	obj/kernel.asm	/^c0112ebc:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0112ec0	obj/kernel.asm	/^c0112ec0:	74 08                	je     c0112eca <sfs_dirent_search_nolock+0x74>$/;"	l
c0112ec2	obj/kernel.asm	/^c0112ec2:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0112ec5	obj/kernel.asm	/^c0112ec5:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112ec8	obj/kernel.asm	/^c0112ec8:	89 10                	mov    %edx,(%eax)$/;"	l
c0112eca	obj/kernel.asm	/^c0112eca:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0112ed1	obj/kernel.asm	/^c0112ed1:	e9 85 00 00 00       	jmp    c0112f5b <sfs_dirent_search_nolock+0x105>$/;"	l
c0112ed6	obj/kernel.asm	/^c0112ed6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112ed9	obj/kernel.asm	/^c0112ed9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112edd	obj/kernel.asm	/^c0112edd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112ee0	obj/kernel.asm	/^c0112ee0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112ee4	obj/kernel.asm	/^c0112ee4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112ee7	obj/kernel.asm	/^c0112ee7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112eeb	obj/kernel.asm	/^c0112eeb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112eee	obj/kernel.asm	/^c0112eee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112ef1	obj/kernel.asm	/^c0112ef1:	e8 5f fe ff ff       	call   c0112d55 <sfs_dirent_read_nolock>$/;"	l
c0112ef6	obj/kernel.asm	/^c0112ef6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112ef9	obj/kernel.asm	/^c0112ef9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112efd	obj/kernel.asm	/^c0112efd:	74 02                	je     c0112f01 <sfs_dirent_search_nolock+0xab>$/;"	l
c0112eff	obj/kernel.asm	/^c0112eff:	eb 6d                	jmp    c0112f6e <sfs_dirent_search_nolock+0x118>$/;"	l
c0112f01	obj/kernel.asm	/^c0112f01:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112f04	obj/kernel.asm	/^c0112f04:	8b 00                	mov    (%eax),%eax$/;"	l
c0112f06	obj/kernel.asm	/^c0112f06:	85 c0                	test   %eax,%eax$/;"	l
c0112f08	obj/kernel.asm	/^c0112f08:	75 12                	jne    c0112f1c <sfs_dirent_search_nolock+0xc6>$/;"	l
c0112f0a	obj/kernel.asm	/^c0112f0a:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0112f0e	obj/kernel.asm	/^c0112f0e:	74 0a                	je     c0112f1a <sfs_dirent_search_nolock+0xc4>$/;"	l
c0112f10	obj/kernel.asm	/^c0112f10:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0112f13	obj/kernel.asm	/^c0112f13:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112f16	obj/kernel.asm	/^c0112f16:	89 10                	mov    %edx,(%eax)$/;"	l
c0112f18	obj/kernel.asm	/^c0112f18:	eb 3d                	jmp    c0112f57 <sfs_dirent_search_nolock+0x101>$/;"	l
c0112f1a	obj/kernel.asm	/^c0112f1a:	eb 3b                	jmp    c0112f57 <sfs_dirent_search_nolock+0x101>$/;"	l
c0112f1c	obj/kernel.asm	/^c0112f1c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112f1f	obj/kernel.asm	/^c0112f1f:	83 c0 04             	add    $0x4,%eax$/;"	l
c0112f22	obj/kernel.asm	/^c0112f22:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112f26	obj/kernel.asm	/^c0112f26:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112f29	obj/kernel.asm	/^c0112f29:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112f2c	obj/kernel.asm	/^c0112f2c:	e8 8a 22 00 00       	call   c01151bb <strcmp>$/;"	l
c0112f31	obj/kernel.asm	/^c0112f31:	85 c0                	test   %eax,%eax$/;"	l
c0112f33	obj/kernel.asm	/^c0112f33:	75 22                	jne    c0112f57 <sfs_dirent_search_nolock+0x101>$/;"	l
c0112f35	obj/kernel.asm	/^c0112f35:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0112f39	obj/kernel.asm	/^c0112f39:	74 08                	je     c0112f43 <sfs_dirent_search_nolock+0xed>$/;"	l
c0112f3b	obj/kernel.asm	/^c0112f3b:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0112f3e	obj/kernel.asm	/^c0112f3e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112f41	obj/kernel.asm	/^c0112f41:	89 10                	mov    %edx,(%eax)$/;"	l
c0112f43	obj/kernel.asm	/^c0112f43:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112f47	obj/kernel.asm	/^c0112f47:	74 0c                	je     c0112f55 <sfs_dirent_search_nolock+0xff>$/;"	l
c0112f49	obj/kernel.asm	/^c0112f49:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112f4c	obj/kernel.asm	/^c0112f4c:	8b 10                	mov    (%eax),%edx$/;"	l
c0112f4e	obj/kernel.asm	/^c0112f4e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112f51	obj/kernel.asm	/^c0112f51:	89 10                	mov    %edx,(%eax)$/;"	l
c0112f53	obj/kernel.asm	/^c0112f53:	eb 19                	jmp    c0112f6e <sfs_dirent_search_nolock+0x118>$/;"	l
c0112f55	obj/kernel.asm	/^c0112f55:	eb 17                	jmp    c0112f6e <sfs_dirent_search_nolock+0x118>$/;"	l
c0112f57	obj/kernel.asm	/^c0112f57:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0112f5b	obj/kernel.asm	/^c0112f5b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112f5e	obj/kernel.asm	/^c0112f5e:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0112f61	obj/kernel.asm	/^c0112f61:	0f 8c 6f ff ff ff    	jl     c0112ed6 <sfs_dirent_search_nolock+0x80>$/;"	l
c0112f67	obj/kernel.asm	/^c0112f67:	c7 45 f4 f0 ff ff ff 	movl   $0xfffffff0,-0xc(%ebp)$/;"	l
c0112f6e	obj/kernel.asm	/^c0112f6e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112f71	obj/kernel.asm	/^c0112f71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112f74	obj/kernel.asm	/^c0112f74:	e8 3d 1d ff ff       	call   c0104cb6 <kfree>$/;"	l
c0112f79	obj/kernel.asm	/^c0112f79:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112f7c	obj/kernel.asm	/^c0112f7c:	c9                   	leave  $/;"	l
c0112f7d	obj/kernel.asm	/^c0112f7d:	c3                   	ret    $/;"	l
c0112f7e	obj/kernel.asm	/^c0112f7e <sfs_dirent_findino_nolock>:$/;"	l
c0112f7e	obj/kernel.asm	/^c0112f7e:	55                   	push   %ebp$/;"	l
c0112f7f	obj/kernel.asm	/^c0112f7f:	89 e5                	mov    %esp,%ebp$/;"	l
c0112f81	obj/kernel.asm	/^c0112f81:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112f84	obj/kernel.asm	/^c0112f84:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112f87	obj/kernel.asm	/^c0112f87:	8b 00                	mov    (%eax),%eax$/;"	l
c0112f89	obj/kernel.asm	/^c0112f89:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112f8c	obj/kernel.asm	/^c0112f8c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112f8f	obj/kernel.asm	/^c0112f8f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0112f96	obj/kernel.asm	/^c0112f96:	eb 43                	jmp    c0112fdb <sfs_dirent_findino_nolock+0x5d>$/;"	l
c0112f98	obj/kernel.asm	/^c0112f98:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112f9b	obj/kernel.asm	/^c0112f9b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112f9f	obj/kernel.asm	/^c0112f9f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112fa2	obj/kernel.asm	/^c0112fa2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112fa6	obj/kernel.asm	/^c0112fa6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112fa9	obj/kernel.asm	/^c0112fa9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112fad	obj/kernel.asm	/^c0112fad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112fb0	obj/kernel.asm	/^c0112fb0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112fb3	obj/kernel.asm	/^c0112fb3:	e8 9d fd ff ff       	call   c0112d55 <sfs_dirent_read_nolock>$/;"	l
c0112fb8	obj/kernel.asm	/^c0112fb8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112fbb	obj/kernel.asm	/^c0112fbb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112fbf	obj/kernel.asm	/^c0112fbf:	74 05                	je     c0112fc6 <sfs_dirent_findino_nolock+0x48>$/;"	l
c0112fc1	obj/kernel.asm	/^c0112fc1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112fc4	obj/kernel.asm	/^c0112fc4:	eb 22                	jmp    c0112fe8 <sfs_dirent_findino_nolock+0x6a>$/;"	l
c0112fc6	obj/kernel.asm	/^c0112fc6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112fc9	obj/kernel.asm	/^c0112fc9:	8b 00                	mov    (%eax),%eax$/;"	l
c0112fcb	obj/kernel.asm	/^c0112fcb:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0112fce	obj/kernel.asm	/^c0112fce:	75 07                	jne    c0112fd7 <sfs_dirent_findino_nolock+0x59>$/;"	l
c0112fd0	obj/kernel.asm	/^c0112fd0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112fd5	obj/kernel.asm	/^c0112fd5:	eb 11                	jmp    c0112fe8 <sfs_dirent_findino_nolock+0x6a>$/;"	l
c0112fd7	obj/kernel.asm	/^c0112fd7:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0112fdb	obj/kernel.asm	/^c0112fdb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112fde	obj/kernel.asm	/^c0112fde:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0112fe1	obj/kernel.asm	/^c0112fe1:	7c b5                	jl     c0112f98 <sfs_dirent_findino_nolock+0x1a>$/;"	l
c0112fe3	obj/kernel.asm	/^c0112fe3:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0112fe8	obj/kernel.asm	/^c0112fe8:	c9                   	leave  $/;"	l
c0112fe9	obj/kernel.asm	/^c0112fe9:	c3                   	ret    $/;"	l
c0112fea	obj/kernel.asm	/^c0112fea <sfs_lookup_once>:$/;"	l
c0112fea	obj/kernel.asm	/^c0112fea:	55                   	push   %ebp$/;"	l
c0112feb	obj/kernel.asm	/^c0112feb:	89 e5                	mov    %esp,%ebp$/;"	l
c0112fed	obj/kernel.asm	/^c0112fed:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112ff0	obj/kernel.asm	/^c0112ff0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112ff3	obj/kernel.asm	/^c0112ff3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112ff6	obj/kernel.asm	/^c0112ff6:	e8 f4 f0 ff ff       	call   c01120ef <lock_sin>$/;"	l
c0112ffb	obj/kernel.asm	/^c0112ffb:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)$/;"	l
c0113002	obj/kernel.asm	/^c0113002:	00 $/;"	l
c0113003	obj/kernel.asm	/^c0113003:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113006	obj/kernel.asm	/^c0113006:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c011300a	obj/kernel.asm	/^c011300a:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c011300d	obj/kernel.asm	/^c011300d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113011	obj/kernel.asm	/^c0113011:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113014	obj/kernel.asm	/^c0113014:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113018	obj/kernel.asm	/^c0113018:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011301b	obj/kernel.asm	/^c011301b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011301f	obj/kernel.asm	/^c011301f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113022	obj/kernel.asm	/^c0113022:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113025	obj/kernel.asm	/^c0113025:	e8 2c fe ff ff       	call   c0112e56 <sfs_dirent_search_nolock>$/;"	l
c011302a	obj/kernel.asm	/^c011302a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011302d	obj/kernel.asm	/^c011302d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113030	obj/kernel.asm	/^c0113030:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113033	obj/kernel.asm	/^c0113033:	e8 cd f0 ff ff       	call   c0112105 <unlock_sin>$/;"	l
c0113038	obj/kernel.asm	/^c0113038:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011303c	obj/kernel.asm	/^c011303c:	75 1c                	jne    c011305a <sfs_lookup_once+0x70>$/;"	l
c011303e	obj/kernel.asm	/^c011303e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113041	obj/kernel.asm	/^c0113041:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113045	obj/kernel.asm	/^c0113045:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113048	obj/kernel.asm	/^c0113048:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011304c	obj/kernel.asm	/^c011304c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011304f	obj/kernel.asm	/^c011304f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113052	obj/kernel.asm	/^c0113052:	e8 62 f5 ff ff       	call   c01125b9 <sfs_load_inode>$/;"	l
c0113057	obj/kernel.asm	/^c0113057:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011305a	obj/kernel.asm	/^c011305a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011305d	obj/kernel.asm	/^c011305d:	c9                   	leave  $/;"	l
c011305e	obj/kernel.asm	/^c011305e:	c3                   	ret    $/;"	l
c011305f	obj/kernel.asm	/^c011305f <sfs_opendir>:$/;"	l
c011305f	obj/kernel.asm	/^c011305f:	55                   	push   %ebp$/;"	l
c0113060	obj/kernel.asm	/^c0113060:	89 e5                	mov    %esp,%ebp$/;"	l
c0113062	obj/kernel.asm	/^c0113062:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113065	obj/kernel.asm	/^c0113065:	83 e0 03             	and    $0x3,%eax$/;"	l
c0113068	obj/kernel.asm	/^c0113068:	85 c0                	test   %eax,%eax$/;"	l
c011306a	obj/kernel.asm	/^c011306a:	74 07                	je     c0113073 <sfs_opendir+0x14>$/;"	l
c011306c	obj/kernel.asm	/^c011306c:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c0113071	obj/kernel.asm	/^c0113071:	eb 17                	jmp    c011308a <sfs_opendir+0x2b>$/;"	l
c0113073	obj/kernel.asm	/^c0113073:	90                   	nop$/;"	l
c0113074	obj/kernel.asm	/^c0113074:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113077	obj/kernel.asm	/^c0113077:	83 e0 20             	and    $0x20,%eax$/;"	l
c011307a	obj/kernel.asm	/^c011307a:	85 c0                	test   %eax,%eax$/;"	l
c011307c	obj/kernel.asm	/^c011307c:	74 07                	je     c0113085 <sfs_opendir+0x26>$/;"	l
c011307e	obj/kernel.asm	/^c011307e:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c0113083	obj/kernel.asm	/^c0113083:	eb 05                	jmp    c011308a <sfs_opendir+0x2b>$/;"	l
c0113085	obj/kernel.asm	/^c0113085:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011308a	obj/kernel.asm	/^c011308a:	5d                   	pop    %ebp$/;"	l
c011308b	obj/kernel.asm	/^c011308b:	c3                   	ret    $/;"	l
c011308c	obj/kernel.asm	/^c011308c <sfs_openfile>:$/;"	l
c011308c	obj/kernel.asm	/^c011308c:	55                   	push   %ebp$/;"	l
c011308d	obj/kernel.asm	/^c011308d:	89 e5                	mov    %esp,%ebp$/;"	l
c011308f	obj/kernel.asm	/^c011308f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113094	obj/kernel.asm	/^c0113094:	5d                   	pop    %ebp$/;"	l
c0113095	obj/kernel.asm	/^c0113095:	c3                   	ret    $/;"	l
c0113096	obj/kernel.asm	/^c0113096 <sfs_close>:$/;"	l
c0113096	obj/kernel.asm	/^c0113096:	55                   	push   %ebp$/;"	l
c0113097	obj/kernel.asm	/^c0113097:	89 e5                	mov    %esp,%ebp$/;"	l
c0113099	obj/kernel.asm	/^c0113099:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011309c	obj/kernel.asm	/^c011309c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011309f	obj/kernel.asm	/^c011309f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01130a2	obj/kernel.asm	/^c01130a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01130a6	obj/kernel.asm	/^c01130a6:	74 17                	je     c01130bf <sfs_close+0x29>$/;"	l
c01130a8	obj/kernel.asm	/^c01130a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01130ab	obj/kernel.asm	/^c01130ab:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01130ae	obj/kernel.asm	/^c01130ae:	85 c0                	test   %eax,%eax$/;"	l
c01130b0	obj/kernel.asm	/^c01130b0:	74 0d                	je     c01130bf <sfs_close+0x29>$/;"	l
c01130b2	obj/kernel.asm	/^c01130b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01130b5	obj/kernel.asm	/^c01130b5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01130b8	obj/kernel.asm	/^c01130b8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01130bb	obj/kernel.asm	/^c01130bb:	85 c0                	test   %eax,%eax$/;"	l
c01130bd	obj/kernel.asm	/^c01130bd:	75 24                	jne    c01130e3 <sfs_close+0x4d>$/;"	l
c01130bf	obj/kernel.asm	/^c01130bf:	c7 44 24 0c 84 95 11 	movl   $0xc0119584,0xc(%esp)$/;"	l
c01130c6	obj/kernel.asm	/^c01130c6:	c0 $/;"	l
c01130c7	obj/kernel.asm	/^c01130c7:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01130ce	obj/kernel.asm	/^c01130ce:	c0 $/;"	l
c01130cf	obj/kernel.asm	/^c01130cf:	c7 44 24 04 1c 02 00 	movl   $0x21c,0x4(%esp)$/;"	l
c01130d6	obj/kernel.asm	/^c01130d6:	00 $/;"	l
c01130d7	obj/kernel.asm	/^c01130d7:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01130de	obj/kernel.asm	/^c01130de:	e8 e5 dd fe ff       	call   c0100ec8 <__panic>$/;"	l
c01130e3	obj/kernel.asm	/^c01130e3:	c7 44 24 04 d2 95 11 	movl   $0xc01195d2,0x4(%esp)$/;"	l
c01130ea	obj/kernel.asm	/^c01130ea:	c0 $/;"	l
c01130eb	obj/kernel.asm	/^c01130eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01130ee	obj/kernel.asm	/^c01130ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01130f1	obj/kernel.asm	/^c01130f1:	e8 cb c0 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c01130f6	obj/kernel.asm	/^c01130f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01130f9	obj/kernel.asm	/^c01130f9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01130fc	obj/kernel.asm	/^c01130fc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01130ff	obj/kernel.asm	/^c01130ff:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113102	obj/kernel.asm	/^c0113102:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0113105	obj/kernel.asm	/^c0113105:	ff d0                	call   *%eax$/;"	l
c0113107	obj/kernel.asm	/^c0113107:	c9                   	leave  $/;"	l
c0113108	obj/kernel.asm	/^c0113108:	c3                   	ret    $/;"	l
c0113109	obj/kernel.asm	/^c0113109 <sfs_io_nolock>:$/;"	l
c0113109	obj/kernel.asm	/^c0113109:	55                   	push   %ebp$/;"	l
c011310a	obj/kernel.asm	/^c011310a:	89 e5                	mov    %esp,%ebp$/;"	l
c011310c	obj/kernel.asm	/^c011310c:	83 ec 58             	sub    $0x58,%esp$/;"	l
c011310f	obj/kernel.asm	/^c011310f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113112	obj/kernel.asm	/^c0113112:	8b 00                	mov    (%eax),%eax$/;"	l
c0113114	obj/kernel.asm	/^c0113114:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113117	obj/kernel.asm	/^c0113117:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011311a	obj/kernel.asm	/^c011311a:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c011311e	obj/kernel.asm	/^c011311e:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0113122	obj/kernel.asm	/^c0113122:	75 24                	jne    c0113148 <sfs_io_nolock+0x3f>$/;"	l
c0113124	obj/kernel.asm	/^c0113124:	c7 44 24 0c d8 95 11 	movl   $0xc01195d8,0xc(%esp)$/;"	l
c011312b	obj/kernel.asm	/^c011312b:	c0 $/;"	l
c011312c	obj/kernel.asm	/^c011312c:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113133	obj/kernel.asm	/^c0113133:	c0 $/;"	l
c0113134	obj/kernel.asm	/^c0113134:	c7 44 24 04 2b 02 00 	movl   $0x22b,0x4(%esp)$/;"	l
c011313b	obj/kernel.asm	/^c011313b:	00 $/;"	l
c011313c	obj/kernel.asm	/^c011313c:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113143	obj/kernel.asm	/^c0113143:	e8 80 dd fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113148	obj/kernel.asm	/^c0113148:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c011314b	obj/kernel.asm	/^c011314b:	8b 10                	mov    (%eax),%edx$/;"	l
c011314d	obj/kernel.asm	/^c011314d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113150	obj/kernel.asm	/^c0113150:	01 d0                	add    %edx,%eax$/;"	l
c0113152	obj/kernel.asm	/^c0113152:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113155	obj/kernel.asm	/^c0113155:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113158	obj/kernel.asm	/^c0113158:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c011315e	obj/kernel.asm	/^c011315e:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0113162	obj/kernel.asm	/^c0113162:	78 12                	js     c0113176 <sfs_io_nolock+0x6d>$/;"	l
c0113164	obj/kernel.asm	/^c0113164:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113167	obj/kernel.asm	/^c0113167:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c011316c	obj/kernel.asm	/^c011316c:	77 08                	ja     c0113176 <sfs_io_nolock+0x6d>$/;"	l
c011316e	obj/kernel.asm	/^c011316e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113171	obj/kernel.asm	/^c0113171:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0113174	obj/kernel.asm	/^c0113174:	7e 0a                	jle    c0113180 <sfs_io_nolock+0x77>$/;"	l
c0113176	obj/kernel.asm	/^c0113176:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011317b	obj/kernel.asm	/^c011317b:	e9 a0 02 00 00       	jmp    c0113420 <sfs_io_nolock+0x317>$/;"	l
c0113180	obj/kernel.asm	/^c0113180:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113183	obj/kernel.asm	/^c0113183:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0113186	obj/kernel.asm	/^c0113186:	75 0a                	jne    c0113192 <sfs_io_nolock+0x89>$/;"	l
c0113188	obj/kernel.asm	/^c0113188:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011318d	obj/kernel.asm	/^c011318d:	e9 8e 02 00 00       	jmp    c0113420 <sfs_io_nolock+0x317>$/;"	l
c0113192	obj/kernel.asm	/^c0113192:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113195	obj/kernel.asm	/^c0113195:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c011319a	obj/kernel.asm	/^c011319a:	76 07                	jbe    c01131a3 <sfs_io_nolock+0x9a>$/;"	l
c011319c	obj/kernel.asm	/^c011319c:	c7 45 f4 00 00 00 08 	movl   $0x8000000,-0xc(%ebp)$/;"	l
c01131a3	obj/kernel.asm	/^c01131a3:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01131a7	obj/kernel.asm	/^c01131a7:	75 2a                	jne    c01131d3 <sfs_io_nolock+0xca>$/;"	l
c01131a9	obj/kernel.asm	/^c01131a9:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01131ac	obj/kernel.asm	/^c01131ac:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01131af	obj/kernel.asm	/^c01131af:	8b 00                	mov    (%eax),%eax$/;"	l
c01131b1	obj/kernel.asm	/^c01131b1:	39 c2                	cmp    %eax,%edx$/;"	l
c01131b3	obj/kernel.asm	/^c01131b3:	72 0a                	jb     c01131bf <sfs_io_nolock+0xb6>$/;"	l
c01131b5	obj/kernel.asm	/^c01131b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01131ba	obj/kernel.asm	/^c01131ba:	e9 61 02 00 00       	jmp    c0113420 <sfs_io_nolock+0x317>$/;"	l
c01131bf	obj/kernel.asm	/^c01131bf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01131c2	obj/kernel.asm	/^c01131c2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01131c5	obj/kernel.asm	/^c01131c5:	8b 00                	mov    (%eax),%eax$/;"	l
c01131c7	obj/kernel.asm	/^c01131c7:	39 c2                	cmp    %eax,%edx$/;"	l
c01131c9	obj/kernel.asm	/^c01131c9:	76 08                	jbe    c01131d3 <sfs_io_nolock+0xca>$/;"	l
c01131cb	obj/kernel.asm	/^c01131cb:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01131ce	obj/kernel.asm	/^c01131ce:	8b 00                	mov    (%eax),%eax$/;"	l
c01131d0	obj/kernel.asm	/^c01131d0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01131d3	obj/kernel.asm	/^c01131d3:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01131d7	obj/kernel.asm	/^c01131d7:	74 10                	je     c01131e9 <sfs_io_nolock+0xe0>$/;"	l
c01131d9	obj/kernel.asm	/^c01131d9:	c7 45 f0 11 46 11 c0 	movl   $0xc0114611,-0x10(%ebp)$/;"	l
c01131e0	obj/kernel.asm	/^c01131e0:	c7 45 ec 28 45 11 c0 	movl   $0xc0114528,-0x14(%ebp)$/;"	l
c01131e7	obj/kernel.asm	/^c01131e7:	eb 0e                	jmp    c01131f7 <sfs_io_nolock+0xee>$/;"	l
c01131e9	obj/kernel.asm	/^c01131e9:	c7 45 f0 58 45 11 c0 	movl   $0xc0114558,-0x10(%ebp)$/;"	l
c01131f0	obj/kernel.asm	/^c01131f0:	c7 45 ec f8 44 11 c0 	movl   $0xc01144f8,-0x14(%ebp)$/;"	l
c01131f7	obj/kernel.asm	/^c01131f7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c01131fe	obj/kernel.asm	/^c01131fe:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0113205	obj/kernel.asm	/^c0113205:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113208	obj/kernel.asm	/^c0113208:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c011320e	obj/kernel.asm	/^c011320e:	85 c0                	test   %eax,%eax$/;"	l
c0113210	obj/kernel.asm	/^c0113210:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0113213	obj/kernel.asm	/^c0113213:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c0113216	obj/kernel.asm	/^c0113216:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113219	obj/kernel.asm	/^c0113219:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011321c	obj/kernel.asm	/^c011321c:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0113222	obj/kernel.asm	/^c0113222:	85 c0                	test   %eax,%eax$/;"	l
c0113224	obj/kernel.asm	/^c0113224:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0113227	obj/kernel.asm	/^c0113227:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c011322a	obj/kernel.asm	/^c011322a:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
c011322d	obj/kernel.asm	/^c011322d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113230	obj/kernel.asm	/^c0113230:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113233	obj/kernel.asm	/^c0113233:	99                   	cltd   $/;"	l
c0113234	obj/kernel.asm	/^c0113234:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c0113237	obj/kernel.asm	/^c0113237:	01 d0                	add    %edx,%eax$/;"	l
c0113239	obj/kernel.asm	/^c0113239:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c011323e	obj/kernel.asm	/^c011323e:	29 d0                	sub    %edx,%eax$/;"	l
c0113240	obj/kernel.asm	/^c0113240:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0113243	obj/kernel.asm	/^c0113243:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c0113247	obj/kernel.asm	/^c0113247:	0f 84 9f 00 00 00    	je     c01132ec <sfs_io_nolock+0x1e3>$/;"	l
c011324d	obj/kernel.asm	/^c011324d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0113251	obj/kernel.asm	/^c0113251:	74 0a                	je     c011325d <sfs_io_nolock+0x154>$/;"	l
c0113253	obj/kernel.asm	/^c0113253:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0113258	obj/kernel.asm	/^c0113258:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c011325b	obj/kernel.asm	/^c011325b:	eb 0a                	jmp    c0113267 <sfs_io_nolock+0x15e>$/;"	l
c011325d	obj/kernel.asm	/^c011325d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113260	obj/kernel.asm	/^c0113260:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113263	obj/kernel.asm	/^c0113263:	29 c2                	sub    %eax,%edx$/;"	l
c0113265	obj/kernel.asm	/^c0113265:	89 d0                	mov    %edx,%eax$/;"	l
c0113267	obj/kernel.asm	/^c0113267:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c011326a	obj/kernel.asm	/^c011326a:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c011326d	obj/kernel.asm	/^c011326d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113271	obj/kernel.asm	/^c0113271:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113274	obj/kernel.asm	/^c0113274:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113278	obj/kernel.asm	/^c0113278:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011327b	obj/kernel.asm	/^c011327b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011327f	obj/kernel.asm	/^c011327f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113282	obj/kernel.asm	/^c0113282:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113285	obj/kernel.asm	/^c0113285:	e8 5a f9 ff ff       	call   c0112be4 <sfs_bmap_load_nolock>$/;"	l
c011328a	obj/kernel.asm	/^c011328a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011328d	obj/kernel.asm	/^c011328d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113291	obj/kernel.asm	/^c0113291:	74 05                	je     c0113298 <sfs_io_nolock+0x18f>$/;"	l
c0113293	obj/kernel.asm	/^c0113293:	e9 51 01 00 00       	jmp    c01133e9 <sfs_io_nolock+0x2e0>$/;"	l
c0113298	obj/kernel.asm	/^c0113298:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c011329b	obj/kernel.asm	/^c011329b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c011329e	obj/kernel.asm	/^c011329e:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c01132a2	obj/kernel.asm	/^c01132a2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01132a6	obj/kernel.asm	/^c01132a6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01132a9	obj/kernel.asm	/^c01132a9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01132ad	obj/kernel.asm	/^c01132ad:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01132b0	obj/kernel.asm	/^c01132b0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01132b4	obj/kernel.asm	/^c01132b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01132b7	obj/kernel.asm	/^c01132b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01132ba	obj/kernel.asm	/^c01132ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01132bd	obj/kernel.asm	/^c01132bd:	ff d0                	call   *%eax$/;"	l
c01132bf	obj/kernel.asm	/^c01132bf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01132c2	obj/kernel.asm	/^c01132c2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01132c6	obj/kernel.asm	/^c01132c6:	74 05                	je     c01132cd <sfs_io_nolock+0x1c4>$/;"	l
c01132c8	obj/kernel.asm	/^c01132c8:	e9 1c 01 00 00       	jmp    c01133e9 <sfs_io_nolock+0x2e0>$/;"	l
c01132cd	obj/kernel.asm	/^c01132cd:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01132d0	obj/kernel.asm	/^c01132d0:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c01132d3	obj/kernel.asm	/^c01132d3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01132d7	obj/kernel.asm	/^c01132d7:	75 05                	jne    c01132de <sfs_io_nolock+0x1d5>$/;"	l
c01132d9	obj/kernel.asm	/^c01132d9:	e9 0b 01 00 00       	jmp    c01133e9 <sfs_io_nolock+0x2e0>$/;"	l
c01132de	obj/kernel.asm	/^c01132de:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01132e1	obj/kernel.asm	/^c01132e1:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c01132e4	obj/kernel.asm	/^c01132e4:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c01132e8	obj/kernel.asm	/^c01132e8:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
c01132ec	obj/kernel.asm	/^c01132ec:	c7 45 d0 00 10 00 00 	movl   $0x1000,-0x30(%ebp)$/;"	l
c01132f3	obj/kernel.asm	/^c01132f3:	eb 71                	jmp    c0113366 <sfs_io_nolock+0x25d>$/;"	l
c01132f5	obj/kernel.asm	/^c01132f5:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c01132f8	obj/kernel.asm	/^c01132f8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01132fc	obj/kernel.asm	/^c01132fc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01132ff	obj/kernel.asm	/^c01132ff:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113303	obj/kernel.asm	/^c0113303:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113306	obj/kernel.asm	/^c0113306:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011330a	obj/kernel.asm	/^c011330a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011330d	obj/kernel.asm	/^c011330d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113310	obj/kernel.asm	/^c0113310:	e8 cf f8 ff ff       	call   c0112be4 <sfs_bmap_load_nolock>$/;"	l
c0113315	obj/kernel.asm	/^c0113315:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113318	obj/kernel.asm	/^c0113318:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011331c	obj/kernel.asm	/^c011331c:	74 05                	je     c0113323 <sfs_io_nolock+0x21a>$/;"	l
c011331e	obj/kernel.asm	/^c011331e:	e9 c6 00 00 00       	jmp    c01133e9 <sfs_io_nolock+0x2e0>$/;"	l
c0113323	obj/kernel.asm	/^c0113323:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113326	obj/kernel.asm	/^c0113326:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c011332d	obj/kernel.asm	/^c011332d:	00 $/;"	l
c011332e	obj/kernel.asm	/^c011332e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113332	obj/kernel.asm	/^c0113332:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113335	obj/kernel.asm	/^c0113335:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113339	obj/kernel.asm	/^c0113339:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011333c	obj/kernel.asm	/^c011333c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011333f	obj/kernel.asm	/^c011333f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113342	obj/kernel.asm	/^c0113342:	ff d0                	call   *%eax$/;"	l
c0113344	obj/kernel.asm	/^c0113344:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113347	obj/kernel.asm	/^c0113347:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011334b	obj/kernel.asm	/^c011334b:	74 05                	je     c0113352 <sfs_io_nolock+0x249>$/;"	l
c011334d	obj/kernel.asm	/^c011334d:	e9 97 00 00 00       	jmp    c01133e9 <sfs_io_nolock+0x2e0>$/;"	l
c0113352	obj/kernel.asm	/^c0113352:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113355	obj/kernel.asm	/^c0113355:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c0113358	obj/kernel.asm	/^c0113358:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011335b	obj/kernel.asm	/^c011335b:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c011335e	obj/kernel.asm	/^c011335e:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c0113362	obj/kernel.asm	/^c0113362:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
c0113366	obj/kernel.asm	/^c0113366:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c011336a	obj/kernel.asm	/^c011336a:	75 89                	jne    c01132f5 <sfs_io_nolock+0x1ec>$/;"	l
c011336c	obj/kernel.asm	/^c011336c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011336f	obj/kernel.asm	/^c011336f:	99                   	cltd   $/;"	l
c0113370	obj/kernel.asm	/^c0113370:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c0113373	obj/kernel.asm	/^c0113373:	01 d0                	add    %edx,%eax$/;"	l
c0113375	obj/kernel.asm	/^c0113375:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c011337a	obj/kernel.asm	/^c011337a:	29 d0                	sub    %edx,%eax$/;"	l
c011337c	obj/kernel.asm	/^c011337c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c011337f	obj/kernel.asm	/^c011337f:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0113383	obj/kernel.asm	/^c0113383:	74 64                	je     c01133e9 <sfs_io_nolock+0x2e0>$/;"	l
c0113385	obj/kernel.asm	/^c0113385:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0113388	obj/kernel.asm	/^c0113388:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011338c	obj/kernel.asm	/^c011338c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011338f	obj/kernel.asm	/^c011338f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113393	obj/kernel.asm	/^c0113393:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113396	obj/kernel.asm	/^c0113396:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011339a	obj/kernel.asm	/^c011339a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011339d	obj/kernel.asm	/^c011339d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01133a0	obj/kernel.asm	/^c01133a0:	e8 3f f8 ff ff       	call   c0112be4 <sfs_bmap_load_nolock>$/;"	l
c01133a5	obj/kernel.asm	/^c01133a5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01133a8	obj/kernel.asm	/^c01133a8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01133ac	obj/kernel.asm	/^c01133ac:	74 02                	je     c01133b0 <sfs_io_nolock+0x2a7>$/;"	l
c01133ae	obj/kernel.asm	/^c01133ae:	eb 39                	jmp    c01133e9 <sfs_io_nolock+0x2e0>$/;"	l
c01133b0	obj/kernel.asm	/^c01133b0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01133b3	obj/kernel.asm	/^c01133b3:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c01133ba	obj/kernel.asm	/^c01133ba:	00 $/;"	l
c01133bb	obj/kernel.asm	/^c01133bb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01133bf	obj/kernel.asm	/^c01133bf:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01133c2	obj/kernel.asm	/^c01133c2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01133c6	obj/kernel.asm	/^c01133c6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01133c9	obj/kernel.asm	/^c01133c9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01133cd	obj/kernel.asm	/^c01133cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01133d0	obj/kernel.asm	/^c01133d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01133d3	obj/kernel.asm	/^c01133d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01133d6	obj/kernel.asm	/^c01133d6:	ff d0                	call   *%eax$/;"	l
c01133d8	obj/kernel.asm	/^c01133d8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01133db	obj/kernel.asm	/^c01133db:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01133df	obj/kernel.asm	/^c01133df:	74 02                	je     c01133e3 <sfs_io_nolock+0x2da>$/;"	l
c01133e1	obj/kernel.asm	/^c01133e1:	eb 06                	jmp    c01133e9 <sfs_io_nolock+0x2e0>$/;"	l
c01133e3	obj/kernel.asm	/^c01133e3:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01133e6	obj/kernel.asm	/^c01133e6:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c01133e9	obj/kernel.asm	/^c01133e9:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01133ec	obj/kernel.asm	/^c01133ec:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01133ef	obj/kernel.asm	/^c01133ef:	89 10                	mov    %edx,(%eax)$/;"	l
c01133f1	obj/kernel.asm	/^c01133f1:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01133f4	obj/kernel.asm	/^c01133f4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01133f7	obj/kernel.asm	/^c01133f7:	01 c2                	add    %eax,%edx$/;"	l
c01133f9	obj/kernel.asm	/^c01133f9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01133fc	obj/kernel.asm	/^c01133fc:	8b 00                	mov    (%eax),%eax$/;"	l
c01133fe	obj/kernel.asm	/^c01133fe:	8b 00                	mov    (%eax),%eax$/;"	l
c0113400	obj/kernel.asm	/^c0113400:	39 c2                	cmp    %eax,%edx$/;"	l
c0113402	obj/kernel.asm	/^c0113402:	76 19                	jbe    c011341d <sfs_io_nolock+0x314>$/;"	l
c0113404	obj/kernel.asm	/^c0113404:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113407	obj/kernel.asm	/^c0113407:	8b 00                	mov    (%eax),%eax$/;"	l
c0113409	obj/kernel.asm	/^c0113409:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
c011340c	obj/kernel.asm	/^c011340c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c011340f	obj/kernel.asm	/^c011340f:	01 ca                	add    %ecx,%edx$/;"	l
c0113411	obj/kernel.asm	/^c0113411:	89 10                	mov    %edx,(%eax)$/;"	l
c0113413	obj/kernel.asm	/^c0113413:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113416	obj/kernel.asm	/^c0113416:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c011341d	obj/kernel.asm	/^c011341d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113420	obj/kernel.asm	/^c0113420:	c9                   	leave  $/;"	l
c0113421	obj/kernel.asm	/^c0113421:	c3                   	ret    $/;"	l
c0113422	obj/kernel.asm	/^c0113422 <sfs_io>:$/;"	l
c0113422	obj/kernel.asm	/^c0113422:	55                   	push   %ebp$/;"	l
c0113423	obj/kernel.asm	/^c0113423:	89 e5                	mov    %esp,%ebp$/;"	l
c0113425	obj/kernel.asm	/^c0113425:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0113428	obj/kernel.asm	/^c0113428:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011342b	obj/kernel.asm	/^c011342b:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011342e	obj/kernel.asm	/^c011342e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113431	obj/kernel.asm	/^c0113431:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113435	obj/kernel.asm	/^c0113435:	74 0a                	je     c0113441 <sfs_io+0x1f>$/;"	l
c0113437	obj/kernel.asm	/^c0113437:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011343a	obj/kernel.asm	/^c011343a:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011343d	obj/kernel.asm	/^c011343d:	85 c0                	test   %eax,%eax$/;"	l
c011343f	obj/kernel.asm	/^c011343f:	74 24                	je     c0113465 <sfs_io+0x43>$/;"	l
c0113441	obj/kernel.asm	/^c0113441:	c7 44 24 0c f4 95 11 	movl   $0xc01195f4,0xc(%esp)$/;"	l
c0113448	obj/kernel.asm	/^c0113448:	c0 $/;"	l
c0113449	obj/kernel.asm	/^c0113449:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113450	obj/kernel.asm	/^c0113450:	c0 $/;"	l
c0113451	obj/kernel.asm	/^c0113451:	c7 44 24 04 90 02 00 	movl   $0x290,0x4(%esp)$/;"	l
c0113458	obj/kernel.asm	/^c0113458:	00 $/;"	l
c0113459	obj/kernel.asm	/^c0113459:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113460	obj/kernel.asm	/^c0113460:	e8 63 da fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113465	obj/kernel.asm	/^c0113465:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113468	obj/kernel.asm	/^c0113468:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011346b	obj/kernel.asm	/^c011346b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011346e	obj/kernel.asm	/^c011346e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113471	obj/kernel.asm	/^c0113471:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113475	obj/kernel.asm	/^c0113475:	74 0d                	je     c0113484 <sfs_io+0x62>$/;"	l
c0113477	obj/kernel.asm	/^c0113477:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011347a	obj/kernel.asm	/^c011347a:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011347d	obj/kernel.asm	/^c011347d:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113482	obj/kernel.asm	/^c0113482:	74 24                	je     c01134a8 <sfs_io+0x86>$/;"	l
c0113484	obj/kernel.asm	/^c0113484:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c011348b	obj/kernel.asm	/^c011348b:	c0 $/;"	l
c011348c	obj/kernel.asm	/^c011348c:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113493	obj/kernel.asm	/^c0113493:	c0 $/;"	l
c0113494	obj/kernel.asm	/^c0113494:	c7 44 24 04 91 02 00 	movl   $0x291,0x4(%esp)$/;"	l
c011349b	obj/kernel.asm	/^c011349b:	00 $/;"	l
c011349c	obj/kernel.asm	/^c011349c:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01134a3	obj/kernel.asm	/^c01134a3:	e8 20 da fe ff       	call   c0100ec8 <__panic>$/;"	l
c01134a8	obj/kernel.asm	/^c01134a8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01134ab	obj/kernel.asm	/^c01134ab:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01134ae	obj/kernel.asm	/^c01134ae:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01134b1	obj/kernel.asm	/^c01134b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01134b4	obj/kernel.asm	/^c01134b4:	e8 36 ec ff ff       	call   c01120ef <lock_sin>$/;"	l
c01134b9	obj/kernel.asm	/^c01134b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01134bc	obj/kernel.asm	/^c01134bc:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01134bf	obj/kernel.asm	/^c01134bf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01134c2	obj/kernel.asm	/^c01134c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01134c5	obj/kernel.asm	/^c01134c5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01134c8	obj/kernel.asm	/^c01134c8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01134cb	obj/kernel.asm	/^c01134cb:	8b 00                	mov    (%eax),%eax$/;"	l
c01134cd	obj/kernel.asm	/^c01134cd:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c01134d0	obj/kernel.asm	/^c01134d0:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c01134d4	obj/kernel.asm	/^c01134d4:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c01134d7	obj/kernel.asm	/^c01134d7:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c01134db	obj/kernel.asm	/^c01134db:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01134df	obj/kernel.asm	/^c01134df:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01134e3	obj/kernel.asm	/^c01134e3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01134e6	obj/kernel.asm	/^c01134e6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01134ea	obj/kernel.asm	/^c01134ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01134ed	obj/kernel.asm	/^c01134ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01134f0	obj/kernel.asm	/^c01134f0:	e8 14 fc ff ff       	call   c0113109 <sfs_io_nolock>$/;"	l
c01134f5	obj/kernel.asm	/^c01134f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01134f8	obj/kernel.asm	/^c01134f8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01134fb	obj/kernel.asm	/^c01134fb:	85 c0                	test   %eax,%eax$/;"	l
c01134fd	obj/kernel.asm	/^c01134fd:	74 12                	je     c0113511 <sfs_io+0xef>$/;"	l
c01134ff	obj/kernel.asm	/^c01134ff:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113502	obj/kernel.asm	/^c0113502:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113506	obj/kernel.asm	/^c0113506:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113509	obj/kernel.asm	/^c0113509:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011350c	obj/kernel.asm	/^c011350c:	e8 76 7e ff ff       	call   c010b387 <iobuf_skip>$/;"	l
c0113511	obj/kernel.asm	/^c0113511:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113514	obj/kernel.asm	/^c0113514:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113517	obj/kernel.asm	/^c0113517:	e8 e9 eb ff ff       	call   c0112105 <unlock_sin>$/;"	l
c011351c	obj/kernel.asm	/^c011351c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011351f	obj/kernel.asm	/^c011351f:	c9                   	leave  $/;"	l
c0113520	obj/kernel.asm	/^c0113520:	c3                   	ret    $/;"	l
c0113521	obj/kernel.asm	/^c0113521 <sfs_read>:$/;"	l
c0113521	obj/kernel.asm	/^c0113521:	55                   	push   %ebp$/;"	l
c0113522	obj/kernel.asm	/^c0113522:	89 e5                	mov    %esp,%ebp$/;"	l
c0113524	obj/kernel.asm	/^c0113524:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113527	obj/kernel.asm	/^c0113527:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c011352e	obj/kernel.asm	/^c011352e:	00 $/;"	l
c011352f	obj/kernel.asm	/^c011352f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113532	obj/kernel.asm	/^c0113532:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113536	obj/kernel.asm	/^c0113536:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113539	obj/kernel.asm	/^c0113539:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011353c	obj/kernel.asm	/^c011353c:	e8 e1 fe ff ff       	call   c0113422 <sfs_io>$/;"	l
c0113541	obj/kernel.asm	/^c0113541:	c9                   	leave  $/;"	l
c0113542	obj/kernel.asm	/^c0113542:	c3                   	ret    $/;"	l
c0113543	obj/kernel.asm	/^c0113543 <sfs_write>:$/;"	l
c0113543	obj/kernel.asm	/^c0113543:	55                   	push   %ebp$/;"	l
c0113544	obj/kernel.asm	/^c0113544:	89 e5                	mov    %esp,%ebp$/;"	l
c0113546	obj/kernel.asm	/^c0113546:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113549	obj/kernel.asm	/^c0113549:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0113550	obj/kernel.asm	/^c0113550:	00 $/;"	l
c0113551	obj/kernel.asm	/^c0113551:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113554	obj/kernel.asm	/^c0113554:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113558	obj/kernel.asm	/^c0113558:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011355b	obj/kernel.asm	/^c011355b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011355e	obj/kernel.asm	/^c011355e:	e8 bf fe ff ff       	call   c0113422 <sfs_io>$/;"	l
c0113563	obj/kernel.asm	/^c0113563:	c9                   	leave  $/;"	l
c0113564	obj/kernel.asm	/^c0113564:	c3                   	ret    $/;"	l
c0113565	obj/kernel.asm	/^c0113565 <sfs_fstat>:$/;"	l
c0113565	obj/kernel.asm	/^c0113565:	55                   	push   %ebp$/;"	l
c0113566	obj/kernel.asm	/^c0113566:	89 e5                	mov    %esp,%ebp$/;"	l
c0113568	obj/kernel.asm	/^c0113568:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011356b	obj/kernel.asm	/^c011356b:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c0113572	obj/kernel.asm	/^c0113572:	00 $/;"	l
c0113573	obj/kernel.asm	/^c0113573:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c011357a	obj/kernel.asm	/^c011357a:	00 $/;"	l
c011357b	obj/kernel.asm	/^c011357b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011357e	obj/kernel.asm	/^c011357e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113581	obj/kernel.asm	/^c0113581:	e8 93 1e 00 00       	call   c0115419 <memset>$/;"	l
c0113586	obj/kernel.asm	/^c0113586:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113589	obj/kernel.asm	/^c0113589:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011358c	obj/kernel.asm	/^c011358c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113590	obj/kernel.asm	/^c0113590:	74 17                	je     c01135a9 <sfs_fstat+0x44>$/;"	l
c0113592	obj/kernel.asm	/^c0113592:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113595	obj/kernel.asm	/^c0113595:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113598	obj/kernel.asm	/^c0113598:	85 c0                	test   %eax,%eax$/;"	l
c011359a	obj/kernel.asm	/^c011359a:	74 0d                	je     c01135a9 <sfs_fstat+0x44>$/;"	l
c011359c	obj/kernel.asm	/^c011359c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011359f	obj/kernel.asm	/^c011359f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01135a2	obj/kernel.asm	/^c01135a2:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01135a5	obj/kernel.asm	/^c01135a5:	85 c0                	test   %eax,%eax$/;"	l
c01135a7	obj/kernel.asm	/^c01135a7:	75 24                	jne    c01135cd <sfs_fstat+0x68>$/;"	l
c01135a9	obj/kernel.asm	/^c01135a9:	c7 44 24 0c 20 96 11 	movl   $0xc0119620,0xc(%esp)$/;"	l
c01135b0	obj/kernel.asm	/^c01135b0:	c0 $/;"	l
c01135b1	obj/kernel.asm	/^c01135b1:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01135b8	obj/kernel.asm	/^c01135b8:	c0 $/;"	l
c01135b9	obj/kernel.asm	/^c01135b9:	c7 44 24 04 b2 02 00 	movl   $0x2b2,0x4(%esp)$/;"	l
c01135c0	obj/kernel.asm	/^c01135c0:	00 $/;"	l
c01135c1	obj/kernel.asm	/^c01135c1:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01135c8	obj/kernel.asm	/^c01135c8:	e8 fb d8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01135cd	obj/kernel.asm	/^c01135cd:	c7 44 24 04 70 96 11 	movl   $0xc0119670,0x4(%esp)$/;"	l
c01135d4	obj/kernel.asm	/^c01135d4:	c0 $/;"	l
c01135d5	obj/kernel.asm	/^c01135d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01135d8	obj/kernel.asm	/^c01135d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01135db	obj/kernel.asm	/^c01135db:	e8 e1 bb ff ff       	call   c010f1c1 <inode_check>$/;"	l
c01135e0	obj/kernel.asm	/^c01135e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01135e3	obj/kernel.asm	/^c01135e3:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01135e6	obj/kernel.asm	/^c01135e6:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01135e9	obj/kernel.asm	/^c01135e9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01135ec	obj/kernel.asm	/^c01135ec:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01135f0	obj/kernel.asm	/^c01135f0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01135f3	obj/kernel.asm	/^c01135f3:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01135f6	obj/kernel.asm	/^c01135f6:	ff d0                	call   *%eax$/;"	l
c01135f8	obj/kernel.asm	/^c01135f8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01135fb	obj/kernel.asm	/^c01135fb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01135ff	obj/kernel.asm	/^c01135ff:	74 05                	je     c0113606 <sfs_fstat+0xa1>$/;"	l
c0113601	obj/kernel.asm	/^c0113601:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113604	obj/kernel.asm	/^c0113604:	eb 71                	jmp    c0113677 <sfs_fstat+0x112>$/;"	l
c0113606	obj/kernel.asm	/^c0113606:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113609	obj/kernel.asm	/^c0113609:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011360c	obj/kernel.asm	/^c011360c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113610	obj/kernel.asm	/^c0113610:	74 0d                	je     c011361f <sfs_fstat+0xba>$/;"	l
c0113612	obj/kernel.asm	/^c0113612:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113615	obj/kernel.asm	/^c0113615:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113618	obj/kernel.asm	/^c0113618:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c011361d	obj/kernel.asm	/^c011361d:	74 24                	je     c0113643 <sfs_fstat+0xde>$/;"	l
c011361f	obj/kernel.asm	/^c011361f:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0113626	obj/kernel.asm	/^c0113626:	c0 $/;"	l
c0113627	obj/kernel.asm	/^c0113627:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011362e	obj/kernel.asm	/^c011362e:	c0 $/;"	l
c011362f	obj/kernel.asm	/^c011362f:	c7 44 24 04 b5 02 00 	movl   $0x2b5,0x4(%esp)$/;"	l
c0113636	obj/kernel.asm	/^c0113636:	00 $/;"	l
c0113637	obj/kernel.asm	/^c0113637:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011363e	obj/kernel.asm	/^c011363e:	e8 85 d8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113643	obj/kernel.asm	/^c0113643:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113646	obj/kernel.asm	/^c0113646:	8b 00                	mov    (%eax),%eax$/;"	l
c0113648	obj/kernel.asm	/^c0113648:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011364b	obj/kernel.asm	/^c011364b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011364e	obj/kernel.asm	/^c011364e:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0113652	obj/kernel.asm	/^c0113652:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0113655	obj/kernel.asm	/^c0113655:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113658	obj/kernel.asm	/^c0113658:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c011365b	obj/kernel.asm	/^c011365b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011365e	obj/kernel.asm	/^c011365e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0113661	obj/kernel.asm	/^c0113661:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113664	obj/kernel.asm	/^c0113664:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0113667	obj/kernel.asm	/^c0113667:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011366a	obj/kernel.asm	/^c011366a:	8b 10                	mov    (%eax),%edx$/;"	l
c011366c	obj/kernel.asm	/^c011366c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011366f	obj/kernel.asm	/^c011366f:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0113672	obj/kernel.asm	/^c0113672:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113677	obj/kernel.asm	/^c0113677:	c9                   	leave  $/;"	l
c0113678	obj/kernel.asm	/^c0113678:	c3                   	ret    $/;"	l
c0113679	obj/kernel.asm	/^c0113679 <sfs_fsync>:$/;"	l
c0113679	obj/kernel.asm	/^c0113679:	55                   	push   %ebp$/;"	l
c011367a	obj/kernel.asm	/^c011367a:	89 e5                	mov    %esp,%ebp$/;"	l
c011367c	obj/kernel.asm	/^c011367c:	83 ec 48             	sub    $0x48,%esp$/;"	l
c011367f	obj/kernel.asm	/^c011367f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113682	obj/kernel.asm	/^c0113682:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113685	obj/kernel.asm	/^c0113685:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113688	obj/kernel.asm	/^c0113688:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011368c	obj/kernel.asm	/^c011368c:	74 0a                	je     c0113698 <sfs_fsync+0x1f>$/;"	l
c011368e	obj/kernel.asm	/^c011368e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113691	obj/kernel.asm	/^c0113691:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113694	obj/kernel.asm	/^c0113694:	85 c0                	test   %eax,%eax$/;"	l
c0113696	obj/kernel.asm	/^c0113696:	74 24                	je     c01136bc <sfs_fsync+0x43>$/;"	l
c0113698	obj/kernel.asm	/^c0113698:	c7 44 24 0c f4 95 11 	movl   $0xc01195f4,0xc(%esp)$/;"	l
c011369f	obj/kernel.asm	/^c011369f:	c0 $/;"	l
c01136a0	obj/kernel.asm	/^c01136a0:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01136a7	obj/kernel.asm	/^c01136a7:	c0 $/;"	l
c01136a8	obj/kernel.asm	/^c01136a8:	c7 44 24 04 c1 02 00 	movl   $0x2c1,0x4(%esp)$/;"	l
c01136af	obj/kernel.asm	/^c01136af:	00 $/;"	l
c01136b0	obj/kernel.asm	/^c01136b0:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01136b7	obj/kernel.asm	/^c01136b7:	e8 0c d8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01136bc	obj/kernel.asm	/^c01136bc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01136bf	obj/kernel.asm	/^c01136bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01136c2	obj/kernel.asm	/^c01136c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136c5	obj/kernel.asm	/^c01136c5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01136c8	obj/kernel.asm	/^c01136c8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01136cc	obj/kernel.asm	/^c01136cc:	74 0d                	je     c01136db <sfs_fsync+0x62>$/;"	l
c01136ce	obj/kernel.asm	/^c01136ce:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01136d1	obj/kernel.asm	/^c01136d1:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01136d4	obj/kernel.asm	/^c01136d4:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01136d9	obj/kernel.asm	/^c01136d9:	74 24                	je     c01136ff <sfs_fsync+0x86>$/;"	l
c01136db	obj/kernel.asm	/^c01136db:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c01136e2	obj/kernel.asm	/^c01136e2:	c0 $/;"	l
c01136e3	obj/kernel.asm	/^c01136e3:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01136ea	obj/kernel.asm	/^c01136ea:	c0 $/;"	l
c01136eb	obj/kernel.asm	/^c01136eb:	c7 44 24 04 c2 02 00 	movl   $0x2c2,0x4(%esp)$/;"	l
c01136f2	obj/kernel.asm	/^c01136f2:	00 $/;"	l
c01136f3	obj/kernel.asm	/^c01136f3:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01136fa	obj/kernel.asm	/^c01136fa:	e8 c9 d7 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01136ff	obj/kernel.asm	/^c01136ff:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113702	obj/kernel.asm	/^c0113702:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113705	obj/kernel.asm	/^c0113705:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c011370c	obj/kernel.asm	/^c011370c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011370f	obj/kernel.asm	/^c011370f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113712	obj/kernel.asm	/^c0113712:	85 c0                	test   %eax,%eax$/;"	l
c0113714	obj/kernel.asm	/^c0113714:	74 6b                	je     c0113781 <sfs_fsync+0x108>$/;"	l
c0113716	obj/kernel.asm	/^c0113716:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113719	obj/kernel.asm	/^c0113719:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011371c	obj/kernel.asm	/^c011371c:	e8 ce e9 ff ff       	call   c01120ef <lock_sin>$/;"	l
c0113721	obj/kernel.asm	/^c0113721:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113724	obj/kernel.asm	/^c0113724:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113727	obj/kernel.asm	/^c0113727:	85 c0                	test   %eax,%eax$/;"	l
c0113729	obj/kernel.asm	/^c0113729:	74 4b                	je     c0113776 <sfs_fsync+0xfd>$/;"	l
c011372b	obj/kernel.asm	/^c011372b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011372e	obj/kernel.asm	/^c011372e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0113735	obj/kernel.asm	/^c0113735:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113738	obj/kernel.asm	/^c0113738:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011373b	obj/kernel.asm	/^c011373b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011373e	obj/kernel.asm	/^c011373e:	8b 00                	mov    (%eax),%eax$/;"	l
c0113740	obj/kernel.asm	/^c0113740:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0113747	obj/kernel.asm	/^c0113747:	00 $/;"	l
c0113748	obj/kernel.asm	/^c0113748:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c011374c	obj/kernel.asm	/^c011374c:	c7 44 24 08 40 00 00 	movl   $0x40,0x8(%esp)$/;"	l
c0113753	obj/kernel.asm	/^c0113753:	00 $/;"	l
c0113754	obj/kernel.asm	/^c0113754:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113758	obj/kernel.asm	/^c0113758:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011375b	obj/kernel.asm	/^c011375b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011375e	obj/kernel.asm	/^c011375e:	e8 ae 0e 00 00       	call   c0114611 <sfs_wbuf>$/;"	l
c0113763	obj/kernel.asm	/^c0113763:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113766	obj/kernel.asm	/^c0113766:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011376a	obj/kernel.asm	/^c011376a:	74 0a                	je     c0113776 <sfs_fsync+0xfd>$/;"	l
c011376c	obj/kernel.asm	/^c011376c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011376f	obj/kernel.asm	/^c011376f:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0113776	obj/kernel.asm	/^c0113776:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113779	obj/kernel.asm	/^c0113779:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011377c	obj/kernel.asm	/^c011377c:	e8 84 e9 ff ff       	call   c0112105 <unlock_sin>$/;"	l
c0113781	obj/kernel.asm	/^c0113781:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113784	obj/kernel.asm	/^c0113784:	c9                   	leave  $/;"	l
c0113785	obj/kernel.asm	/^c0113785:	c3                   	ret    $/;"	l
c0113786	obj/kernel.asm	/^c0113786 <sfs_namefile>:$/;"	l
c0113786	obj/kernel.asm	/^c0113786:	55                   	push   %ebp$/;"	l
c0113787	obj/kernel.asm	/^c0113787:	89 e5                	mov    %esp,%ebp$/;"	l
c0113789	obj/kernel.asm	/^c0113789:	83 ec 58             	sub    $0x58,%esp$/;"	l
c011378c	obj/kernel.asm	/^c011378c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011378f	obj/kernel.asm	/^c011378f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113792	obj/kernel.asm	/^c0113792:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0113795	obj/kernel.asm	/^c0113795:	76 15                	jbe    c01137ac <sfs_namefile+0x26>$/;"	l
c0113797	obj/kernel.asm	/^c0113797:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c011379e	obj/kernel.asm	/^c011379e:	e8 f8 14 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c01137a3	obj/kernel.asm	/^c01137a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01137a6	obj/kernel.asm	/^c01137a6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01137aa	obj/kernel.asm	/^c01137aa:	75 0a                	jne    c01137b6 <sfs_namefile+0x30>$/;"	l
c01137ac	obj/kernel.asm	/^c01137ac:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01137b1	obj/kernel.asm	/^c01137b1:	e9 bd 02 00 00       	jmp    c0113a73 <sfs_namefile+0x2ed>$/;"	l
c01137b6	obj/kernel.asm	/^c01137b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01137b9	obj/kernel.asm	/^c01137b9:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01137bc	obj/kernel.asm	/^c01137bc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01137bf	obj/kernel.asm	/^c01137bf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01137c3	obj/kernel.asm	/^c01137c3:	74 0a                	je     c01137cf <sfs_namefile+0x49>$/;"	l
c01137c5	obj/kernel.asm	/^c01137c5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01137c8	obj/kernel.asm	/^c01137c8:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01137cb	obj/kernel.asm	/^c01137cb:	85 c0                	test   %eax,%eax$/;"	l
c01137cd	obj/kernel.asm	/^c01137cd:	74 24                	je     c01137f3 <sfs_namefile+0x6d>$/;"	l
c01137cf	obj/kernel.asm	/^c01137cf:	c7 44 24 0c f4 95 11 	movl   $0xc01195f4,0xc(%esp)$/;"	l
c01137d6	obj/kernel.asm	/^c01137d6:	c0 $/;"	l
c01137d7	obj/kernel.asm	/^c01137d7:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01137de	obj/kernel.asm	/^c01137de:	c0 $/;"	l
c01137df	obj/kernel.asm	/^c01137df:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
c01137e6	obj/kernel.asm	/^c01137e6:	00 $/;"	l
c01137e7	obj/kernel.asm	/^c01137e7:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01137ee	obj/kernel.asm	/^c01137ee:	e8 d5 d6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01137f3	obj/kernel.asm	/^c01137f3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01137f6	obj/kernel.asm	/^c01137f6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01137f9	obj/kernel.asm	/^c01137f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01137fc	obj/kernel.asm	/^c01137fc:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01137ff	obj/kernel.asm	/^c01137ff:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0113803	obj/kernel.asm	/^c0113803:	74 0d                	je     c0113812 <sfs_namefile+0x8c>$/;"	l
c0113805	obj/kernel.asm	/^c0113805:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113808	obj/kernel.asm	/^c0113808:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011380b	obj/kernel.asm	/^c011380b:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113810	obj/kernel.asm	/^c0113810:	74 24                	je     c0113836 <sfs_namefile+0xb0>$/;"	l
c0113812	obj/kernel.asm	/^c0113812:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0113819	obj/kernel.asm	/^c0113819:	c0 $/;"	l
c011381a	obj/kernel.asm	/^c011381a:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113821	obj/kernel.asm	/^c0113821:	c0 $/;"	l
c0113822	obj/kernel.asm	/^c0113822:	c7 44 24 04 df 02 00 	movl   $0x2df,0x4(%esp)$/;"	l
c0113829	obj/kernel.asm	/^c0113829:	00 $/;"	l
c011382a	obj/kernel.asm	/^c011382a:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113831	obj/kernel.asm	/^c0113831:	e8 92 d6 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113836	obj/kernel.asm	/^c0113836:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113839	obj/kernel.asm	/^c0113839:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011383c	obj/kernel.asm	/^c011383c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011383f	obj/kernel.asm	/^c011383f:	8b 10                	mov    (%eax),%edx$/;"	l
c0113841	obj/kernel.asm	/^c0113841:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113844	obj/kernel.asm	/^c0113844:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113847	obj/kernel.asm	/^c0113847:	01 d0                	add    %edx,%eax$/;"	l
c0113849	obj/kernel.asm	/^c0113849:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011384c	obj/kernel.asm	/^c011384c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011384f	obj/kernel.asm	/^c011384f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113852	obj/kernel.asm	/^c0113852:	83 e8 02             	sub    $0x2,%eax$/;"	l
c0113855	obj/kernel.asm	/^c0113855:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113858	obj/kernel.asm	/^c0113858:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011385b	obj/kernel.asm	/^c011385b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011385e	obj/kernel.asm	/^c011385e:	e8 56 b7 ff ff       	call   c010efb9 <inode_ref_inc>$/;"	l
c0113863	obj/kernel.asm	/^c0113863:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c011386a	obj/kernel.asm	/^c011386a:	00 $/;"	l
c011386b	obj/kernel.asm	/^c011386b:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c011386e	obj/kernel.asm	/^c011386e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113872	obj/kernel.asm	/^c0113872:	c7 44 24 08 78 96 11 	movl   $0xc0119678,0x8(%esp)$/;"	l
c0113879	obj/kernel.asm	/^c0113879:	c0 $/;"	l
c011387a	obj/kernel.asm	/^c011387a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011387d	obj/kernel.asm	/^c011387d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113881	obj/kernel.asm	/^c0113881:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113884	obj/kernel.asm	/^c0113884:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113887	obj/kernel.asm	/^c0113887:	e8 5e f7 ff ff       	call   c0112fea <sfs_lookup_once>$/;"	l
c011388c	obj/kernel.asm	/^c011388c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011388f	obj/kernel.asm	/^c011388f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113893	obj/kernel.asm	/^c0113893:	74 05                	je     c011389a <sfs_namefile+0x114>$/;"	l
c0113895	obj/kernel.asm	/^c0113895:	e9 c0 01 00 00       	jmp    c0113a5a <sfs_namefile+0x2d4>$/;"	l
c011389a	obj/kernel.asm	/^c011389a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011389d	obj/kernel.asm	/^c011389d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01138a0	obj/kernel.asm	/^c01138a0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01138a3	obj/kernel.asm	/^c01138a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01138a6	obj/kernel.asm	/^c01138a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01138a9	obj/kernel.asm	/^c01138a9:	e8 25 b7 ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c01138ae	obj/kernel.asm	/^c01138ae:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01138b1	obj/kernel.asm	/^c01138b1:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c01138b4	obj/kernel.asm	/^c01138b4:	75 76                	jne    c011392c <sfs_namefile+0x1a6>$/;"	l
c01138b6	obj/kernel.asm	/^c01138b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01138b9	obj/kernel.asm	/^c01138b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01138bc	obj/kernel.asm	/^c01138bc:	e8 12 b7 ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c01138c1	obj/kernel.asm	/^c01138c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01138c4	obj/kernel.asm	/^c01138c4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01138c7	obj/kernel.asm	/^c01138c7:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c01138ca	obj/kernel.asm	/^c01138ca:	83 e8 02             	sub    $0x2,%eax$/;"	l
c01138cd	obj/kernel.asm	/^c01138cd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01138d0	obj/kernel.asm	/^c01138d0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01138d3	obj/kernel.asm	/^c01138d3:	8b 00                	mov    (%eax),%eax$/;"	l
c01138d5	obj/kernel.asm	/^c01138d5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01138d8	obj/kernel.asm	/^c01138d8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01138db	obj/kernel.asm	/^c01138db:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01138df	obj/kernel.asm	/^c01138df:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01138e2	obj/kernel.asm	/^c01138e2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01138e6	obj/kernel.asm	/^c01138e6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01138e9	obj/kernel.asm	/^c01138e9:	e8 6a 1b 00 00       	call   c0115458 <memmove>$/;"	l
c01138ee	obj/kernel.asm	/^c01138ee:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01138f1	obj/kernel.asm	/^c01138f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01138f4	obj/kernel.asm	/^c01138f4:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01138f7	obj/kernel.asm	/^c01138f7:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c01138fa	obj/kernel.asm	/^c01138fa:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01138fd	obj/kernel.asm	/^c01138fd:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0113900	obj/kernel.asm	/^c0113900:	01 d0                	add    %edx,%eax$/;"	l
c0113902	obj/kernel.asm	/^c0113902:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0113905	obj/kernel.asm	/^c0113905:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113908	obj/kernel.asm	/^c0113908:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011390c	obj/kernel.asm	/^c011390c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011390f	obj/kernel.asm	/^c011390f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113912	obj/kernel.asm	/^c0113912:	e8 70 7a ff ff       	call   c010b387 <iobuf_skip>$/;"	l
c0113917	obj/kernel.asm	/^c0113917:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011391a	obj/kernel.asm	/^c011391a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011391d	obj/kernel.asm	/^c011391d:	e8 94 13 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0113922	obj/kernel.asm	/^c0113922:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113927	obj/kernel.asm	/^c0113927:	e9 47 01 00 00       	jmp    c0113a73 <sfs_namefile+0x2ed>$/;"	l
c011392c	obj/kernel.asm	/^c011392c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c011392f	obj/kernel.asm	/^c011392f:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0113932	obj/kernel.asm	/^c0113932:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113935	obj/kernel.asm	/^c0113935:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0113938	obj/kernel.asm	/^c0113938:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c011393c	obj/kernel.asm	/^c011393c:	74 0d                	je     c011394b <sfs_namefile+0x1c5>$/;"	l
c011393e	obj/kernel.asm	/^c011393e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113941	obj/kernel.asm	/^c0113941:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113944	obj/kernel.asm	/^c0113944:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113949	obj/kernel.asm	/^c0113949:	74 24                	je     c011396f <sfs_namefile+0x1e9>$/;"	l
c011394b	obj/kernel.asm	/^c011394b:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0113952	obj/kernel.asm	/^c0113952:	c0 $/;"	l
c0113953	obj/kernel.asm	/^c0113953:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011395a	obj/kernel.asm	/^c011395a:	c0 $/;"	l
c011395b	obj/kernel.asm	/^c011395b:	c7 44 24 04 f2 02 00 	movl   $0x2f2,0x4(%esp)$/;"	l
c0113962	obj/kernel.asm	/^c0113962:	00 $/;"	l
c0113963	obj/kernel.asm	/^c0113963:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011396a	obj/kernel.asm	/^c011396a:	e8 59 d5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c011396f	obj/kernel.asm	/^c011396f:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113972	obj/kernel.asm	/^c0113972:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113975	obj/kernel.asm	/^c0113975:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113978	obj/kernel.asm	/^c0113978:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011397b	obj/kernel.asm	/^c011397b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c011397e	obj/kernel.asm	/^c011397e:	74 0f                	je     c011398f <sfs_namefile+0x209>$/;"	l
c0113980	obj/kernel.asm	/^c0113980:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113983	obj/kernel.asm	/^c0113983:	8b 00                	mov    (%eax),%eax$/;"	l
c0113985	obj/kernel.asm	/^c0113985:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0113989	obj/kernel.asm	/^c0113989:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c011398d	obj/kernel.asm	/^c011398d:	74 24                	je     c01139b3 <sfs_namefile+0x22d>$/;"	l
c011398f	obj/kernel.asm	/^c011398f:	c7 44 24 0c 7c 96 11 	movl   $0xc011967c,0xc(%esp)$/;"	l
c0113996	obj/kernel.asm	/^c0113996:	c0 $/;"	l
c0113997	obj/kernel.asm	/^c0113997:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011399e	obj/kernel.asm	/^c011399e:	c0 $/;"	l
c011399f	obj/kernel.asm	/^c011399f:	c7 44 24 04 f3 02 00 	movl   $0x2f3,0x4(%esp)$/;"	l
c01139a6	obj/kernel.asm	/^c01139a6:	00 $/;"	l
c01139a7	obj/kernel.asm	/^c01139a7:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01139ae	obj/kernel.asm	/^c01139ae:	e8 15 d5 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01139b3	obj/kernel.asm	/^c01139b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01139b6	obj/kernel.asm	/^c01139b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01139b9	obj/kernel.asm	/^c01139b9:	e8 31 e7 ff ff       	call   c01120ef <lock_sin>$/;"	l
c01139be	obj/kernel.asm	/^c01139be:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01139c1	obj/kernel.asm	/^c01139c1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01139c5	obj/kernel.asm	/^c01139c5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01139c8	obj/kernel.asm	/^c01139c8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01139cc	obj/kernel.asm	/^c01139cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01139cf	obj/kernel.asm	/^c01139cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01139d3	obj/kernel.asm	/^c01139d3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01139d6	obj/kernel.asm	/^c01139d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01139d9	obj/kernel.asm	/^c01139d9:	e8 a0 f5 ff ff       	call   c0112f7e <sfs_dirent_findino_nolock>$/;"	l
c01139de	obj/kernel.asm	/^c01139de:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01139e1	obj/kernel.asm	/^c01139e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01139e4	obj/kernel.asm	/^c01139e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01139e7	obj/kernel.asm	/^c01139e7:	e8 19 e7 ff ff       	call   c0112105 <unlock_sin>$/;"	l
c01139ec	obj/kernel.asm	/^c01139ec:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01139f0	obj/kernel.asm	/^c01139f0:	74 03                	je     c01139f5 <sfs_namefile+0x26f>$/;"	l
c01139f2	obj/kernel.asm	/^c01139f2:	90                   	nop$/;"	l
c01139f3	obj/kernel.asm	/^c01139f3:	eb 65                	jmp    c0113a5a <sfs_namefile+0x2d4>$/;"	l
c01139f5	obj/kernel.asm	/^c01139f5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01139f8	obj/kernel.asm	/^c01139f8:	83 c0 04             	add    $0x4,%eax$/;"	l
c01139fb	obj/kernel.asm	/^c01139fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01139fe	obj/kernel.asm	/^c01139fe:	e8 c0 16 00 00       	call   c01150c3 <strlen>$/;"	l
c0113a03	obj/kernel.asm	/^c0113a03:	83 c0 01             	add    $0x1,%eax$/;"	l
c0113a06	obj/kernel.asm	/^c0113a06:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0113a09	obj/kernel.asm	/^c0113a09:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113a0c	obj/kernel.asm	/^c0113a0c:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0113a0f	obj/kernel.asm	/^c0113a0f:	76 09                	jbe    c0113a1a <sfs_namefile+0x294>$/;"	l
c0113a11	obj/kernel.asm	/^c0113a11:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c0113a18	obj/kernel.asm	/^c0113a18:	eb 40                	jmp    c0113a5a <sfs_namefile+0x2d4>$/;"	l
c0113a1a	obj/kernel.asm	/^c0113a1a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113a1d	obj/kernel.asm	/^c0113a1d:	29 45 e8             	sub    %eax,-0x18(%ebp)$/;"	l
c0113a20	obj/kernel.asm	/^c0113a20:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113a23	obj/kernel.asm	/^c0113a23:	f7 d8                	neg    %eax$/;"	l
c0113a25	obj/kernel.asm	/^c0113a25:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c0113a28	obj/kernel.asm	/^c0113a28:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113a2b	obj/kernel.asm	/^c0113a2b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113a2e	obj/kernel.asm	/^c0113a2e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113a31	obj/kernel.asm	/^c0113a31:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113a34	obj/kernel.asm	/^c0113a34:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0113a38	obj/kernel.asm	/^c0113a38:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113a3c	obj/kernel.asm	/^c0113a3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113a3f	obj/kernel.asm	/^c0113a3f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113a42	obj/kernel.asm	/^c0113a42:	e8 b4 1a 00 00       	call   c01154fb <memcpy>$/;"	l
c0113a47	obj/kernel.asm	/^c0113a47:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113a4a	obj/kernel.asm	/^c0113a4a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113a4d	obj/kernel.asm	/^c0113a4d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113a50	obj/kernel.asm	/^c0113a50:	01 d0                	add    %edx,%eax$/;"	l
c0113a52	obj/kernel.asm	/^c0113a52:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c0113a55	obj/kernel.asm	/^c0113a55:	e9 09 fe ff ff       	jmp    c0113863 <sfs_namefile+0xdd>$/;"	l
c0113a5a	obj/kernel.asm	/^c0113a5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a5d	obj/kernel.asm	/^c0113a5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113a60	obj/kernel.asm	/^c0113a60:	e8 6e b5 ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c0113a65	obj/kernel.asm	/^c0113a65:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113a68	obj/kernel.asm	/^c0113a68:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113a6b	obj/kernel.asm	/^c0113a6b:	e8 46 12 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0113a70	obj/kernel.asm	/^c0113a70:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113a73	obj/kernel.asm	/^c0113a73:	c9                   	leave  $/;"	l
c0113a74	obj/kernel.asm	/^c0113a74:	c3                   	ret    $/;"	l
c0113a75	obj/kernel.asm	/^c0113a75 <sfs_getdirentry_sub_nolock>:$/;"	l
c0113a75	obj/kernel.asm	/^c0113a75:	55                   	push   %ebp$/;"	l
c0113a76	obj/kernel.asm	/^c0113a76:	89 e5                	mov    %esp,%ebp$/;"	l
c0113a78	obj/kernel.asm	/^c0113a78:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0113a7b	obj/kernel.asm	/^c0113a7b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113a7e	obj/kernel.asm	/^c0113a7e:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a80	obj/kernel.asm	/^c0113a80:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113a83	obj/kernel.asm	/^c0113a83:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113a86	obj/kernel.asm	/^c0113a86:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113a8d	obj/kernel.asm	/^c0113a8d:	eb 4c                	jmp    c0113adb <sfs_getdirentry_sub_nolock+0x66>$/;"	l
c0113a8f	obj/kernel.asm	/^c0113a8f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113a92	obj/kernel.asm	/^c0113a92:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113a96	obj/kernel.asm	/^c0113a96:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113a99	obj/kernel.asm	/^c0113a99:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113a9d	obj/kernel.asm	/^c0113a9d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113aa0	obj/kernel.asm	/^c0113aa0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113aa4	obj/kernel.asm	/^c0113aa4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113aa7	obj/kernel.asm	/^c0113aa7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113aaa	obj/kernel.asm	/^c0113aaa:	e8 a6 f2 ff ff       	call   c0112d55 <sfs_dirent_read_nolock>$/;"	l
c0113aaf	obj/kernel.asm	/^c0113aaf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113ab2	obj/kernel.asm	/^c0113ab2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113ab6	obj/kernel.asm	/^c0113ab6:	74 05                	je     c0113abd <sfs_getdirentry_sub_nolock+0x48>$/;"	l
c0113ab8	obj/kernel.asm	/^c0113ab8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113abb	obj/kernel.asm	/^c0113abb:	eb 2b                	jmp    c0113ae8 <sfs_getdirentry_sub_nolock+0x73>$/;"	l
c0113abd	obj/kernel.asm	/^c0113abd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113ac0	obj/kernel.asm	/^c0113ac0:	8b 00                	mov    (%eax),%eax$/;"	l
c0113ac2	obj/kernel.asm	/^c0113ac2:	85 c0                	test   %eax,%eax$/;"	l
c0113ac4	obj/kernel.asm	/^c0113ac4:	74 11                	je     c0113ad7 <sfs_getdirentry_sub_nolock+0x62>$/;"	l
c0113ac6	obj/kernel.asm	/^c0113ac6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0113aca	obj/kernel.asm	/^c0113aca:	75 07                	jne    c0113ad3 <sfs_getdirentry_sub_nolock+0x5e>$/;"	l
c0113acc	obj/kernel.asm	/^c0113acc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113ad1	obj/kernel.asm	/^c0113ad1:	eb 15                	jmp    c0113ae8 <sfs_getdirentry_sub_nolock+0x73>$/;"	l
c0113ad3	obj/kernel.asm	/^c0113ad3:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0113ad7	obj/kernel.asm	/^c0113ad7:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0113adb	obj/kernel.asm	/^c0113adb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113ade	obj/kernel.asm	/^c0113ade:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0113ae1	obj/kernel.asm	/^c0113ae1:	7c ac                	jl     c0113a8f <sfs_getdirentry_sub_nolock+0x1a>$/;"	l
c0113ae3	obj/kernel.asm	/^c0113ae3:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0113ae8	obj/kernel.asm	/^c0113ae8:	c9                   	leave  $/;"	l
c0113ae9	obj/kernel.asm	/^c0113ae9:	c3                   	ret    $/;"	l
c0113aea	obj/kernel.asm	/^c0113aea <sfs_getdirentry>:$/;"	l
c0113aea	obj/kernel.asm	/^c0113aea:	55                   	push   %ebp$/;"	l
c0113aeb	obj/kernel.asm	/^c0113aeb:	89 e5                	mov    %esp,%ebp$/;"	l
c0113aed	obj/kernel.asm	/^c0113aed:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0113af0	obj/kernel.asm	/^c0113af0:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c0113af7	obj/kernel.asm	/^c0113af7:	e8 9f 11 ff ff       	call   c0104c9b <kmalloc>$/;"	l
c0113afc	obj/kernel.asm	/^c0113afc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113aff	obj/kernel.asm	/^c0113aff:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113b03	obj/kernel.asm	/^c0113b03:	75 0a                	jne    c0113b0f <sfs_getdirentry+0x25>$/;"	l
c0113b05	obj/kernel.asm	/^c0113b05:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0113b0a	obj/kernel.asm	/^c0113b0a:	e9 6b 01 00 00       	jmp    c0113c7a <sfs_getdirentry+0x190>$/;"	l
c0113b0f	obj/kernel.asm	/^c0113b0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113b12	obj/kernel.asm	/^c0113b12:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113b15	obj/kernel.asm	/^c0113b15:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113b18	obj/kernel.asm	/^c0113b18:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113b1c	obj/kernel.asm	/^c0113b1c:	74 0a                	je     c0113b28 <sfs_getdirentry+0x3e>$/;"	l
c0113b1e	obj/kernel.asm	/^c0113b1e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113b21	obj/kernel.asm	/^c0113b21:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113b24	obj/kernel.asm	/^c0113b24:	85 c0                	test   %eax,%eax$/;"	l
c0113b26	obj/kernel.asm	/^c0113b26:	74 24                	je     c0113b4c <sfs_getdirentry+0x62>$/;"	l
c0113b28	obj/kernel.asm	/^c0113b28:	c7 44 24 0c f4 95 11 	movl   $0xc01195f4,0xc(%esp)$/;"	l
c0113b2f	obj/kernel.asm	/^c0113b2f:	c0 $/;"	l
c0113b30	obj/kernel.asm	/^c0113b30:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113b37	obj/kernel.asm	/^c0113b37:	c0 $/;"	l
c0113b38	obj/kernel.asm	/^c0113b38:	c7 44 24 04 34 03 00 	movl   $0x334,0x4(%esp)$/;"	l
c0113b3f	obj/kernel.asm	/^c0113b3f:	00 $/;"	l
c0113b40	obj/kernel.asm	/^c0113b40:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113b47	obj/kernel.asm	/^c0113b47:	e8 7c d3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113b4c	obj/kernel.asm	/^c0113b4c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113b4f	obj/kernel.asm	/^c0113b4f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113b52	obj/kernel.asm	/^c0113b52:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113b55	obj/kernel.asm	/^c0113b55:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113b58	obj/kernel.asm	/^c0113b58:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0113b5c	obj/kernel.asm	/^c0113b5c:	74 0d                	je     c0113b6b <sfs_getdirentry+0x81>$/;"	l
c0113b5e	obj/kernel.asm	/^c0113b5e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113b61	obj/kernel.asm	/^c0113b61:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113b64	obj/kernel.asm	/^c0113b64:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113b69	obj/kernel.asm	/^c0113b69:	74 24                	je     c0113b8f <sfs_getdirentry+0xa5>$/;"	l
c0113b6b	obj/kernel.asm	/^c0113b6b:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0113b72	obj/kernel.asm	/^c0113b72:	c0 $/;"	l
c0113b73	obj/kernel.asm	/^c0113b73:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113b7a	obj/kernel.asm	/^c0113b7a:	c0 $/;"	l
c0113b7b	obj/kernel.asm	/^c0113b7b:	c7 44 24 04 35 03 00 	movl   $0x335,0x4(%esp)$/;"	l
c0113b82	obj/kernel.asm	/^c0113b82:	00 $/;"	l
c0113b83	obj/kernel.asm	/^c0113b83:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113b8a	obj/kernel.asm	/^c0113b8a:	e8 39 d3 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113b8f	obj/kernel.asm	/^c0113b8f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113b92	obj/kernel.asm	/^c0113b92:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113b95	obj/kernel.asm	/^c0113b95:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113b98	obj/kernel.asm	/^c0113b98:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113b9b	obj/kernel.asm	/^c0113b9b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113b9e	obj/kernel.asm	/^c0113b9e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0113ba2	obj/kernel.asm	/^c0113ba2:	78 0a                	js     c0113bae <sfs_getdirentry+0xc4>$/;"	l
c0113ba4	obj/kernel.asm	/^c0113ba4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113ba7	obj/kernel.asm	/^c0113ba7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0113baa	obj/kernel.asm	/^c0113baa:	85 c0                	test   %eax,%eax$/;"	l
c0113bac	obj/kernel.asm	/^c0113bac:	74 15                	je     c0113bc3 <sfs_getdirentry+0xd9>$/;"	l
c0113bae	obj/kernel.asm	/^c0113bae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113bb1	obj/kernel.asm	/^c0113bb1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113bb4	obj/kernel.asm	/^c0113bb4:	e8 fd 10 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0113bb9	obj/kernel.asm	/^c0113bb9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0113bbe	obj/kernel.asm	/^c0113bbe:	e9 b7 00 00 00       	jmp    c0113c7a <sfs_getdirentry+0x190>$/;"	l
c0113bc3	obj/kernel.asm	/^c0113bc3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113bc6	obj/kernel.asm	/^c0113bc6:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0113bc9	obj/kernel.asm	/^c0113bc9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113bcc	obj/kernel.asm	/^c0113bcc:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0113bcf	obj/kernel.asm	/^c0113bcf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113bd2	obj/kernel.asm	/^c0113bd2:	8b 00                	mov    (%eax),%eax$/;"	l
c0113bd4	obj/kernel.asm	/^c0113bd4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113bd7	obj/kernel.asm	/^c0113bd7:	39 c2                	cmp    %eax,%edx$/;"	l
c0113bd9	obj/kernel.asm	/^c0113bd9:	76 15                	jbe    c0113bf0 <sfs_getdirentry+0x106>$/;"	l
c0113bdb	obj/kernel.asm	/^c0113bdb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113bde	obj/kernel.asm	/^c0113bde:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113be1	obj/kernel.asm	/^c0113be1:	e8 d0 10 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0113be6	obj/kernel.asm	/^c0113be6:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0113beb	obj/kernel.asm	/^c0113beb:	e9 8a 00 00 00       	jmp    c0113c7a <sfs_getdirentry+0x190>$/;"	l
c0113bf0	obj/kernel.asm	/^c0113bf0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113bf3	obj/kernel.asm	/^c0113bf3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113bf6	obj/kernel.asm	/^c0113bf6:	e8 f4 e4 ff ff       	call   c01120ef <lock_sin>$/;"	l
c0113bfb	obj/kernel.asm	/^c0113bfb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113bfe	obj/kernel.asm	/^c0113bfe:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113c02	obj/kernel.asm	/^c0113c02:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113c05	obj/kernel.asm	/^c0113c05:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113c09	obj/kernel.asm	/^c0113c09:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113c0c	obj/kernel.asm	/^c0113c0c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113c10	obj/kernel.asm	/^c0113c10:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113c13	obj/kernel.asm	/^c0113c13:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c16	obj/kernel.asm	/^c0113c16:	e8 5a fe ff ff       	call   c0113a75 <sfs_getdirentry_sub_nolock>$/;"	l
c0113c1b	obj/kernel.asm	/^c0113c1b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113c1e	obj/kernel.asm	/^c0113c1e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113c22	obj/kernel.asm	/^c0113c22:	74 0d                	je     c0113c31 <sfs_getdirentry+0x147>$/;"	l
c0113c24	obj/kernel.asm	/^c0113c24:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113c27	obj/kernel.asm	/^c0113c27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c2a	obj/kernel.asm	/^c0113c2a:	e8 d6 e4 ff ff       	call   c0112105 <unlock_sin>$/;"	l
c0113c2f	obj/kernel.asm	/^c0113c2f:	eb 3b                	jmp    c0113c6c <sfs_getdirentry+0x182>$/;"	l
c0113c31	obj/kernel.asm	/^c0113c31:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113c34	obj/kernel.asm	/^c0113c34:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c37	obj/kernel.asm	/^c0113c37:	e8 c9 e4 ff ff       	call   c0112105 <unlock_sin>$/;"	l
c0113c3c	obj/kernel.asm	/^c0113c3c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113c3f	obj/kernel.asm	/^c0113c3f:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113c42	obj/kernel.asm	/^c0113c42:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0113c49	obj/kernel.asm	/^c0113c49:	00 $/;"	l
c0113c4a	obj/kernel.asm	/^c0113c4a:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0113c51	obj/kernel.asm	/^c0113c51:	00 $/;"	l
c0113c52	obj/kernel.asm	/^c0113c52:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c0113c59	obj/kernel.asm	/^c0113c59:	00 $/;"	l
c0113c5a	obj/kernel.asm	/^c0113c5a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113c5e	obj/kernel.asm	/^c0113c5e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113c61	obj/kernel.asm	/^c0113c61:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c64	obj/kernel.asm	/^c0113c64:	e8 09 76 ff ff       	call   c010b272 <iobuf_move>$/;"	l
c0113c69	obj/kernel.asm	/^c0113c69:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113c6c	obj/kernel.asm	/^c0113c6c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113c6f	obj/kernel.asm	/^c0113c6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c72	obj/kernel.asm	/^c0113c72:	e8 3f 10 ff ff       	call   c0104cb6 <kfree>$/;"	l
c0113c77	obj/kernel.asm	/^c0113c77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113c7a	obj/kernel.asm	/^c0113c7a:	c9                   	leave  $/;"	l
c0113c7b	obj/kernel.asm	/^c0113c7b:	c3                   	ret    $/;"	l
c0113c7c	obj/kernel.asm	/^c0113c7c <sfs_reclaim>:$/;"	l
c0113c7c	obj/kernel.asm	/^c0113c7c:	55                   	push   %ebp$/;"	l
c0113c7d	obj/kernel.asm	/^c0113c7d:	89 e5                	mov    %esp,%ebp$/;"	l
c0113c7f	obj/kernel.asm	/^c0113c7f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0113c82	obj/kernel.asm	/^c0113c82:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113c85	obj/kernel.asm	/^c0113c85:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113c88	obj/kernel.asm	/^c0113c88:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113c8b	obj/kernel.asm	/^c0113c8b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113c8f	obj/kernel.asm	/^c0113c8f:	74 0a                	je     c0113c9b <sfs_reclaim+0x1f>$/;"	l
c0113c91	obj/kernel.asm	/^c0113c91:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113c94	obj/kernel.asm	/^c0113c94:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113c97	obj/kernel.asm	/^c0113c97:	85 c0                	test   %eax,%eax$/;"	l
c0113c99	obj/kernel.asm	/^c0113c99:	74 24                	je     c0113cbf <sfs_reclaim+0x43>$/;"	l
c0113c9b	obj/kernel.asm	/^c0113c9b:	c7 44 24 0c f4 95 11 	movl   $0xc01195f4,0xc(%esp)$/;"	l
c0113ca2	obj/kernel.asm	/^c0113ca2:	c0 $/;"	l
c0113ca3	obj/kernel.asm	/^c0113ca3:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113caa	obj/kernel.asm	/^c0113caa:	c0 $/;"	l
c0113cab	obj/kernel.asm	/^c0113cab:	c7 44 24 04 52 03 00 	movl   $0x352,0x4(%esp)$/;"	l
c0113cb2	obj/kernel.asm	/^c0113cb2:	00 $/;"	l
c0113cb3	obj/kernel.asm	/^c0113cb3:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113cba	obj/kernel.asm	/^c0113cba:	e8 09 d2 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113cbf	obj/kernel.asm	/^c0113cbf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113cc2	obj/kernel.asm	/^c0113cc2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113cc5	obj/kernel.asm	/^c0113cc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113cc8	obj/kernel.asm	/^c0113cc8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113ccb	obj/kernel.asm	/^c0113ccb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113ccf	obj/kernel.asm	/^c0113ccf:	74 0d                	je     c0113cde <sfs_reclaim+0x62>$/;"	l
c0113cd1	obj/kernel.asm	/^c0113cd1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113cd4	obj/kernel.asm	/^c0113cd4:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113cd7	obj/kernel.asm	/^c0113cd7:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113cdc	obj/kernel.asm	/^c0113cdc:	74 24                	je     c0113d02 <sfs_reclaim+0x86>$/;"	l
c0113cde	obj/kernel.asm	/^c0113cde:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0113ce5	obj/kernel.asm	/^c0113ce5:	c0 $/;"	l
c0113ce6	obj/kernel.asm	/^c0113ce6:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113ced	obj/kernel.asm	/^c0113ced:	c0 $/;"	l
c0113cee	obj/kernel.asm	/^c0113cee:	c7 44 24 04 53 03 00 	movl   $0x353,0x4(%esp)$/;"	l
c0113cf5	obj/kernel.asm	/^c0113cf5:	00 $/;"	l
c0113cf6	obj/kernel.asm	/^c0113cf6:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113cfd	obj/kernel.asm	/^c0113cfd:	e8 c6 d1 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113d02	obj/kernel.asm	/^c0113d02:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113d05	obj/kernel.asm	/^c0113d05:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113d08	obj/kernel.asm	/^c0113d08:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c0113d0f	obj/kernel.asm	/^c0113d0f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113d12	obj/kernel.asm	/^c0113d12:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d15	obj/kernel.asm	/^c0113d15:	e8 4d 0b 00 00       	call   c0114867 <lock_sfs_fs>$/;"	l
c0113d1a	obj/kernel.asm	/^c0113d1a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113d1d	obj/kernel.asm	/^c0113d1d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113d20	obj/kernel.asm	/^c0113d20:	85 c0                	test   %eax,%eax$/;"	l
c0113d22	obj/kernel.asm	/^c0113d22:	7f 24                	jg     c0113d48 <sfs_reclaim+0xcc>$/;"	l
c0113d24	obj/kernel.asm	/^c0113d24:	c7 44 24 0c ae 96 11 	movl   $0xc01196ae,0xc(%esp)$/;"	l
c0113d2b	obj/kernel.asm	/^c0113d2b:	c0 $/;"	l
c0113d2c	obj/kernel.asm	/^c0113d2c:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113d33	obj/kernel.asm	/^c0113d33:	c0 $/;"	l
c0113d34	obj/kernel.asm	/^c0113d34:	c7 44 24 04 58 03 00 	movl   $0x358,0x4(%esp)$/;"	l
c0113d3b	obj/kernel.asm	/^c0113d3b:	00 $/;"	l
c0113d3c	obj/kernel.asm	/^c0113d3c:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113d43	obj/kernel.asm	/^c0113d43:	e8 80 d1 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113d48	obj/kernel.asm	/^c0113d48:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113d4b	obj/kernel.asm	/^c0113d4b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113d4e	obj/kernel.asm	/^c0113d4e:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113d51	obj/kernel.asm	/^c0113d51:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113d54	obj/kernel.asm	/^c0113d54:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0113d57	obj/kernel.asm	/^c0113d57:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113d5a	obj/kernel.asm	/^c0113d5a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113d5d	obj/kernel.asm	/^c0113d5d:	85 c0                	test   %eax,%eax$/;"	l
c0113d5f	obj/kernel.asm	/^c0113d5f:	0f 85 a1 01 00 00    	jne    c0113f06 <sfs_reclaim+0x28a>$/;"	l
c0113d65	obj/kernel.asm	/^c0113d65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113d68	obj/kernel.asm	/^c0113d68:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d6b	obj/kernel.asm	/^c0113d6b:	e8 74 e3 ff ff       	call   c01120e4 <inode_ref_count>$/;"	l
c0113d70	obj/kernel.asm	/^c0113d70:	85 c0                	test   %eax,%eax$/;"	l
c0113d72	obj/kernel.asm	/^c0113d72:	0f 85 8e 01 00 00    	jne    c0113f06 <sfs_reclaim+0x28a>$/;"	l
c0113d78	obj/kernel.asm	/^c0113d78:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113d7b	obj/kernel.asm	/^c0113d7b:	8b 00                	mov    (%eax),%eax$/;"	l
c0113d7d	obj/kernel.asm	/^c0113d7d:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0113d81	obj/kernel.asm	/^c0113d81:	66 85 c0             	test   %ax,%ax$/;"	l
c0113d84	obj/kernel.asm	/^c0113d84:	0f 85 81 00 00 00    	jne    c0113e0b <sfs_reclaim+0x18f>$/;"	l
c0113d8a	obj/kernel.asm	/^c0113d8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113d8d	obj/kernel.asm	/^c0113d8d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113d90	obj/kernel.asm	/^c0113d90:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0113d94	obj/kernel.asm	/^c0113d94:	74 17                	je     c0113dad <sfs_reclaim+0x131>$/;"	l
c0113d96	obj/kernel.asm	/^c0113d96:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113d99	obj/kernel.asm	/^c0113d99:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113d9c	obj/kernel.asm	/^c0113d9c:	85 c0                	test   %eax,%eax$/;"	l
c0113d9e	obj/kernel.asm	/^c0113d9e:	74 0d                	je     c0113dad <sfs_reclaim+0x131>$/;"	l
c0113da0	obj/kernel.asm	/^c0113da0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113da3	obj/kernel.asm	/^c0113da3:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113da6	obj/kernel.asm	/^c0113da6:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0113da9	obj/kernel.asm	/^c0113da9:	85 c0                	test   %eax,%eax$/;"	l
c0113dab	obj/kernel.asm	/^c0113dab:	75 24                	jne    c0113dd1 <sfs_reclaim+0x155>$/;"	l
c0113dad	obj/kernel.asm	/^c0113dad:	c7 44 24 0c c8 96 11 	movl   $0xc01196c8,0xc(%esp)$/;"	l
c0113db4	obj/kernel.asm	/^c0113db4:	c0 $/;"	l
c0113db5	obj/kernel.asm	/^c0113db5:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113dbc	obj/kernel.asm	/^c0113dbc:	c0 $/;"	l
c0113dbd	obj/kernel.asm	/^c0113dbd:	c7 44 24 04 5d 03 00 	movl   $0x35d,0x4(%esp)$/;"	l
c0113dc4	obj/kernel.asm	/^c0113dc4:	00 $/;"	l
c0113dc5	obj/kernel.asm	/^c0113dc5:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113dcc	obj/kernel.asm	/^c0113dcc:	e8 f7 d0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113dd1	obj/kernel.asm	/^c0113dd1:	c7 44 24 04 19 97 11 	movl   $0xc0119719,0x4(%esp)$/;"	l
c0113dd8	obj/kernel.asm	/^c0113dd8:	c0 $/;"	l
c0113dd9	obj/kernel.asm	/^c0113dd9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113ddc	obj/kernel.asm	/^c0113ddc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113ddf	obj/kernel.asm	/^c0113ddf:	e8 dd b3 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c0113de4	obj/kernel.asm	/^c0113de4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113de7	obj/kernel.asm	/^c0113de7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113dea	obj/kernel.asm	/^c0113dea:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0113ded	obj/kernel.asm	/^c0113ded:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0113df4	obj/kernel.asm	/^c0113df4:	00 $/;"	l
c0113df5	obj/kernel.asm	/^c0113df5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113df8	obj/kernel.asm	/^c0113df8:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0113dfb	obj/kernel.asm	/^c0113dfb:	ff d0                	call   *%eax$/;"	l
c0113dfd	obj/kernel.asm	/^c0113dfd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113e00	obj/kernel.asm	/^c0113e00:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113e04	obj/kernel.asm	/^c0113e04:	74 05                	je     c0113e0b <sfs_reclaim+0x18f>$/;"	l
c0113e06	obj/kernel.asm	/^c0113e06:	e9 fb 00 00 00       	jmp    c0113f06 <sfs_reclaim+0x28a>$/;"	l
c0113e0b	obj/kernel.asm	/^c0113e0b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113e0e	obj/kernel.asm	/^c0113e0e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113e11	obj/kernel.asm	/^c0113e11:	85 c0                	test   %eax,%eax$/;"	l
c0113e13	obj/kernel.asm	/^c0113e13:	74 76                	je     c0113e8b <sfs_reclaim+0x20f>$/;"	l
c0113e15	obj/kernel.asm	/^c0113e15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113e18	obj/kernel.asm	/^c0113e18:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113e1b	obj/kernel.asm	/^c0113e1b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0113e1f	obj/kernel.asm	/^c0113e1f:	74 17                	je     c0113e38 <sfs_reclaim+0x1bc>$/;"	l
c0113e21	obj/kernel.asm	/^c0113e21:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113e24	obj/kernel.asm	/^c0113e24:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113e27	obj/kernel.asm	/^c0113e27:	85 c0                	test   %eax,%eax$/;"	l
c0113e29	obj/kernel.asm	/^c0113e29:	74 0d                	je     c0113e38 <sfs_reclaim+0x1bc>$/;"	l
c0113e2b	obj/kernel.asm	/^c0113e2b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113e2e	obj/kernel.asm	/^c0113e2e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113e31	obj/kernel.asm	/^c0113e31:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0113e34	obj/kernel.asm	/^c0113e34:	85 c0                	test   %eax,%eax$/;"	l
c0113e36	obj/kernel.asm	/^c0113e36:	75 24                	jne    c0113e5c <sfs_reclaim+0x1e0>$/;"	l
c0113e38	obj/kernel.asm	/^c0113e38:	c7 44 24 0c 84 95 11 	movl   $0xc0119584,0xc(%esp)$/;"	l
c0113e3f	obj/kernel.asm	/^c0113e3f:	c0 $/;"	l
c0113e40	obj/kernel.asm	/^c0113e40:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113e47	obj/kernel.asm	/^c0113e47:	c0 $/;"	l
c0113e48	obj/kernel.asm	/^c0113e48:	c7 44 24 04 62 03 00 	movl   $0x362,0x4(%esp)$/;"	l
c0113e4f	obj/kernel.asm	/^c0113e4f:	00 $/;"	l
c0113e50	obj/kernel.asm	/^c0113e50:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113e57	obj/kernel.asm	/^c0113e57:	e8 6c d0 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113e5c	obj/kernel.asm	/^c0113e5c:	c7 44 24 04 d2 95 11 	movl   $0xc01195d2,0x4(%esp)$/;"	l
c0113e63	obj/kernel.asm	/^c0113e63:	c0 $/;"	l
c0113e64	obj/kernel.asm	/^c0113e64:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113e67	obj/kernel.asm	/^c0113e67:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113e6a	obj/kernel.asm	/^c0113e6a:	e8 52 b3 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c0113e6f	obj/kernel.asm	/^c0113e6f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113e72	obj/kernel.asm	/^c0113e72:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113e75	obj/kernel.asm	/^c0113e75:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0113e78	obj/kernel.asm	/^c0113e78:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113e7b	obj/kernel.asm	/^c0113e7b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0113e7e	obj/kernel.asm	/^c0113e7e:	ff d0                	call   *%eax$/;"	l
c0113e80	obj/kernel.asm	/^c0113e80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113e83	obj/kernel.asm	/^c0113e83:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113e87	obj/kernel.asm	/^c0113e87:	74 02                	je     c0113e8b <sfs_reclaim+0x20f>$/;"	l
c0113e89	obj/kernel.asm	/^c0113e89:	eb 7b                	jmp    c0113f06 <sfs_reclaim+0x28a>$/;"	l
c0113e8b	obj/kernel.asm	/^c0113e8b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113e8e	obj/kernel.asm	/^c0113e8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113e91	obj/kernel.asm	/^c0113e91:	e8 c9 e3 ff ff       	call   c011225f <sfs_remove_links>$/;"	l
c0113e96	obj/kernel.asm	/^c0113e96:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113e99	obj/kernel.asm	/^c0113e99:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113e9c	obj/kernel.asm	/^c0113e9c:	e8 f2 09 00 00       	call   c0114893 <unlock_sfs_fs>$/;"	l
c0113ea1	obj/kernel.asm	/^c0113ea1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ea4	obj/kernel.asm	/^c0113ea4:	8b 00                	mov    (%eax),%eax$/;"	l
c0113ea6	obj/kernel.asm	/^c0113ea6:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0113eaa	obj/kernel.asm	/^c0113eaa:	66 85 c0             	test   %ax,%ax$/;"	l
c0113ead	obj/kernel.asm	/^c0113ead:	75 38                	jne    c0113ee7 <sfs_reclaim+0x26b>$/;"	l
c0113eaf	obj/kernel.asm	/^c0113eaf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113eb2	obj/kernel.asm	/^c0113eb2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113eb5	obj/kernel.asm	/^c0113eb5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113eb9	obj/kernel.asm	/^c0113eb9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113ebc	obj/kernel.asm	/^c0113ebc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113ebf	obj/kernel.asm	/^c0113ebf:	e8 2b e5 ff ff       	call   c01123ef <sfs_block_free>$/;"	l
c0113ec4	obj/kernel.asm	/^c0113ec4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ec7	obj/kernel.asm	/^c0113ec7:	8b 00                	mov    (%eax),%eax$/;"	l
c0113ec9	obj/kernel.asm	/^c0113ec9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113ecc	obj/kernel.asm	/^c0113ecc:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113ecf	obj/kernel.asm	/^c0113ecf:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0113ed3	obj/kernel.asm	/^c0113ed3:	74 12                	je     c0113ee7 <sfs_reclaim+0x26b>$/;"	l
c0113ed5	obj/kernel.asm	/^c0113ed5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113ed8	obj/kernel.asm	/^c0113ed8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113edc	obj/kernel.asm	/^c0113edc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113edf	obj/kernel.asm	/^c0113edf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113ee2	obj/kernel.asm	/^c0113ee2:	e8 08 e5 ff ff       	call   c01123ef <sfs_block_free>$/;"	l
c0113ee7	obj/kernel.asm	/^c0113ee7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113eea	obj/kernel.asm	/^c0113eea:	8b 00                	mov    (%eax),%eax$/;"	l
c0113eec	obj/kernel.asm	/^c0113eec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113eef	obj/kernel.asm	/^c0113eef:	e8 c2 0d ff ff       	call   c0104cb6 <kfree>$/;"	l
c0113ef4	obj/kernel.asm	/^c0113ef4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113ef7	obj/kernel.asm	/^c0113ef7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113efa	obj/kernel.asm	/^c0113efa:	e8 41 b0 ff ff       	call   c010ef40 <inode_kill>$/;"	l
c0113eff	obj/kernel.asm	/^c0113eff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113f04	obj/kernel.asm	/^c0113f04:	eb 0e                	jmp    c0113f14 <sfs_reclaim+0x298>$/;"	l
c0113f06	obj/kernel.asm	/^c0113f06:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113f09	obj/kernel.asm	/^c0113f09:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113f0c	obj/kernel.asm	/^c0113f0c:	e8 82 09 00 00       	call   c0114893 <unlock_sfs_fs>$/;"	l
c0113f11	obj/kernel.asm	/^c0113f11:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113f14	obj/kernel.asm	/^c0113f14:	c9                   	leave  $/;"	l
c0113f15	obj/kernel.asm	/^c0113f15:	c3                   	ret    $/;"	l
c0113f16	obj/kernel.asm	/^c0113f16 <sfs_gettype>:$/;"	l
c0113f16	obj/kernel.asm	/^c0113f16:	55                   	push   %ebp$/;"	l
c0113f17	obj/kernel.asm	/^c0113f17:	89 e5                	mov    %esp,%ebp$/;"	l
c0113f19	obj/kernel.asm	/^c0113f19:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0113f1c	obj/kernel.asm	/^c0113f1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113f1f	obj/kernel.asm	/^c0113f1f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113f22	obj/kernel.asm	/^c0113f22:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113f26	obj/kernel.asm	/^c0113f26:	74 0d                	je     c0113f35 <sfs_gettype+0x1f>$/;"	l
c0113f28	obj/kernel.asm	/^c0113f28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113f2b	obj/kernel.asm	/^c0113f2b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113f2e	obj/kernel.asm	/^c0113f2e:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113f33	obj/kernel.asm	/^c0113f33:	74 24                	je     c0113f59 <sfs_gettype+0x43>$/;"	l
c0113f35	obj/kernel.asm	/^c0113f35:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0113f3c	obj/kernel.asm	/^c0113f3c:	c0 $/;"	l
c0113f3d	obj/kernel.asm	/^c0113f3d:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0113f44	obj/kernel.asm	/^c0113f44:	c0 $/;"	l
c0113f45	obj/kernel.asm	/^c0113f45:	c7 44 24 04 7d 03 00 	movl   $0x37d,0x4(%esp)$/;"	l
c0113f4c	obj/kernel.asm	/^c0113f4c:	00 $/;"	l
c0113f4d	obj/kernel.asm	/^c0113f4d:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113f54	obj/kernel.asm	/^c0113f54:	e8 6f cf fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113f59	obj/kernel.asm	/^c0113f59:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113f5c	obj/kernel.asm	/^c0113f5c:	8b 00                	mov    (%eax),%eax$/;"	l
c0113f5e	obj/kernel.asm	/^c0113f5e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113f61	obj/kernel.asm	/^c0113f61:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113f64	obj/kernel.asm	/^c0113f64:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0113f68	obj/kernel.asm	/^c0113f68:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0113f6b	obj/kernel.asm	/^c0113f6b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0113f6e	obj/kernel.asm	/^c0113f6e:	74 0c                	je     c0113f7c <sfs_gettype+0x66>$/;"	l
c0113f70	obj/kernel.asm	/^c0113f70:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0113f73	obj/kernel.asm	/^c0113f73:	74 27                	je     c0113f9c <sfs_gettype+0x86>$/;"	l
c0113f75	obj/kernel.asm	/^c0113f75:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0113f78	obj/kernel.asm	/^c0113f78:	74 12                	je     c0113f8c <sfs_gettype+0x76>$/;"	l
c0113f7a	obj/kernel.asm	/^c0113f7a:	eb 30                	jmp    c0113fac <sfs_gettype+0x96>$/;"	l
c0113f7c	obj/kernel.asm	/^c0113f7c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113f7f	obj/kernel.asm	/^c0113f7f:	c7 00 00 20 00 00    	movl   $0x2000,(%eax)$/;"	l
c0113f85	obj/kernel.asm	/^c0113f85:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113f8a	obj/kernel.asm	/^c0113f8a:	eb 4a                	jmp    c0113fd6 <sfs_gettype+0xc0>$/;"	l
c0113f8c	obj/kernel.asm	/^c0113f8c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113f8f	obj/kernel.asm	/^c0113f8f:	c7 00 00 10 00 00    	movl   $0x1000,(%eax)$/;"	l
c0113f95	obj/kernel.asm	/^c0113f95:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113f9a	obj/kernel.asm	/^c0113f9a:	eb 3a                	jmp    c0113fd6 <sfs_gettype+0xc0>$/;"	l
c0113f9c	obj/kernel.asm	/^c0113f9c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113f9f	obj/kernel.asm	/^c0113f9f:	c7 00 00 30 00 00    	movl   $0x3000,(%eax)$/;"	l
c0113fa5	obj/kernel.asm	/^c0113fa5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113faa	obj/kernel.asm	/^c0113faa:	eb 2a                	jmp    c0113fd6 <sfs_gettype+0xc0>$/;"	l
c0113fac	obj/kernel.asm	/^c0113fac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113faf	obj/kernel.asm	/^c0113faf:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0113fb3	obj/kernel.asm	/^c0113fb3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0113fb6	obj/kernel.asm	/^c0113fb6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113fba	obj/kernel.asm	/^c0113fba:	c7 44 24 08 20 93 11 	movl   $0xc0119320,0x8(%esp)$/;"	l
c0113fc1	obj/kernel.asm	/^c0113fc1:	c0 $/;"	l
c0113fc2	obj/kernel.asm	/^c0113fc2:	c7 44 24 04 89 03 00 	movl   $0x389,0x4(%esp)$/;"	l
c0113fc9	obj/kernel.asm	/^c0113fc9:	00 $/;"	l
c0113fca	obj/kernel.asm	/^c0113fca:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0113fd1	obj/kernel.asm	/^c0113fd1:	e8 f2 ce fe ff       	call   c0100ec8 <__panic>$/;"	l
c0113fd6	obj/kernel.asm	/^c0113fd6:	c9                   	leave  $/;"	l
c0113fd7	obj/kernel.asm	/^c0113fd7:	c3                   	ret    $/;"	l
c0113fd8	obj/kernel.asm	/^c0113fd8 <sfs_tryseek>:$/;"	l
c0113fd8	obj/kernel.asm	/^c0113fd8:	55                   	push   %ebp$/;"	l
c0113fd9	obj/kernel.asm	/^c0113fd9:	89 e5                	mov    %esp,%ebp$/;"	l
c0113fdb	obj/kernel.asm	/^c0113fdb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0113fde	obj/kernel.asm	/^c0113fde:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0113fe2	obj/kernel.asm	/^c0113fe2:	78 0a                	js     c0113fee <sfs_tryseek+0x16>$/;"	l
c0113fe4	obj/kernel.asm	/^c0113fe4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113fe7	obj/kernel.asm	/^c0113fe7:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c0113fec	obj/kernel.asm	/^c0113fec:	76 0a                	jbe    c0113ff8 <sfs_tryseek+0x20>$/;"	l
c0113fee	obj/kernel.asm	/^c0113fee:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0113ff3	obj/kernel.asm	/^c0113ff3:	e9 ca 00 00 00       	jmp    c01140c2 <sfs_tryseek+0xea>$/;"	l
c0113ff8	obj/kernel.asm	/^c0113ff8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113ffb	obj/kernel.asm	/^c0113ffb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113ffe	obj/kernel.asm	/^c0113ffe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114002	obj/kernel.asm	/^c0114002:	74 0d                	je     c0114011 <sfs_tryseek+0x39>$/;"	l
c0114004	obj/kernel.asm	/^c0114004:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114007	obj/kernel.asm	/^c0114007:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011400a	obj/kernel.asm	/^c011400a:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c011400f	obj/kernel.asm	/^c011400f:	74 24                	je     c0114035 <sfs_tryseek+0x5d>$/;"	l
c0114011	obj/kernel.asm	/^c0114011:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0114018	obj/kernel.asm	/^c0114018:	c0 $/;"	l
c0114019	obj/kernel.asm	/^c0114019:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0114020	obj/kernel.asm	/^c0114020:	c0 $/;"	l
c0114021	obj/kernel.asm	/^c0114021:	c7 44 24 04 94 03 00 	movl   $0x394,0x4(%esp)$/;"	l
c0114028	obj/kernel.asm	/^c0114028:	00 $/;"	l
c0114029	obj/kernel.asm	/^c0114029:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0114030	obj/kernel.asm	/^c0114030:	e8 93 ce fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114035	obj/kernel.asm	/^c0114035:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114038	obj/kernel.asm	/^c0114038:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011403b	obj/kernel.asm	/^c011403b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011403e	obj/kernel.asm	/^c011403e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114041	obj/kernel.asm	/^c0114041:	8b 00                	mov    (%eax),%eax$/;"	l
c0114043	obj/kernel.asm	/^c0114043:	8b 00                	mov    (%eax),%eax$/;"	l
c0114045	obj/kernel.asm	/^c0114045:	39 c2                	cmp    %eax,%edx$/;"	l
c0114047	obj/kernel.asm	/^c0114047:	76 74                	jbe    c01140bd <sfs_tryseek+0xe5>$/;"	l
c0114049	obj/kernel.asm	/^c0114049:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011404c	obj/kernel.asm	/^c011404c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011404f	obj/kernel.asm	/^c011404f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0114053	obj/kernel.asm	/^c0114053:	74 17                	je     c011406c <sfs_tryseek+0x94>$/;"	l
c0114055	obj/kernel.asm	/^c0114055:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114058	obj/kernel.asm	/^c0114058:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011405b	obj/kernel.asm	/^c011405b:	85 c0                	test   %eax,%eax$/;"	l
c011405d	obj/kernel.asm	/^c011405d:	74 0d                	je     c011406c <sfs_tryseek+0x94>$/;"	l
c011405f	obj/kernel.asm	/^c011405f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114062	obj/kernel.asm	/^c0114062:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0114065	obj/kernel.asm	/^c0114065:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0114068	obj/kernel.asm	/^c0114068:	85 c0                	test   %eax,%eax$/;"	l
c011406a	obj/kernel.asm	/^c011406a:	75 24                	jne    c0114090 <sfs_tryseek+0xb8>$/;"	l
c011406c	obj/kernel.asm	/^c011406c:	c7 44 24 0c c8 96 11 	movl   $0xc01196c8,0xc(%esp)$/;"	l
c0114073	obj/kernel.asm	/^c0114073:	c0 $/;"	l
c0114074	obj/kernel.asm	/^c0114074:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011407b	obj/kernel.asm	/^c011407b:	c0 $/;"	l
c011407c	obj/kernel.asm	/^c011407c:	c7 44 24 04 96 03 00 	movl   $0x396,0x4(%esp)$/;"	l
c0114083	obj/kernel.asm	/^c0114083:	00 $/;"	l
c0114084	obj/kernel.asm	/^c0114084:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011408b	obj/kernel.asm	/^c011408b:	e8 38 ce fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114090	obj/kernel.asm	/^c0114090:	c7 44 24 04 19 97 11 	movl   $0xc0119719,0x4(%esp)$/;"	l
c0114097	obj/kernel.asm	/^c0114097:	c0 $/;"	l
c0114098	obj/kernel.asm	/^c0114098:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011409b	obj/kernel.asm	/^c011409b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011409e	obj/kernel.asm	/^c011409e:	e8 1e b1 ff ff       	call   c010f1c1 <inode_check>$/;"	l
c01140a3	obj/kernel.asm	/^c01140a3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01140a6	obj/kernel.asm	/^c01140a6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01140a9	obj/kernel.asm	/^c01140a9:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01140ac	obj/kernel.asm	/^c01140ac:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01140af	obj/kernel.asm	/^c01140af:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01140b3	obj/kernel.asm	/^c01140b3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01140b6	obj/kernel.asm	/^c01140b6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01140b9	obj/kernel.asm	/^c01140b9:	ff d0                	call   *%eax$/;"	l
c01140bb	obj/kernel.asm	/^c01140bb:	eb 05                	jmp    c01140c2 <sfs_tryseek+0xea>$/;"	l
c01140bd	obj/kernel.asm	/^c01140bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01140c2	obj/kernel.asm	/^c01140c2:	c9                   	leave  $/;"	l
c01140c3	obj/kernel.asm	/^c01140c3:	c3                   	ret    $/;"	l
c01140c4	obj/kernel.asm	/^c01140c4 <sfs_truncfile>:$/;"	l
c01140c4	obj/kernel.asm	/^c01140c4:	55                   	push   %ebp$/;"	l
c01140c5	obj/kernel.asm	/^c01140c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01140c7	obj/kernel.asm	/^c01140c7:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01140ca	obj/kernel.asm	/^c01140ca:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01140ce	obj/kernel.asm	/^c01140ce:	78 0a                	js     c01140da <sfs_truncfile+0x16>$/;"	l
c01140d0	obj/kernel.asm	/^c01140d0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01140d3	obj/kernel.asm	/^c01140d3:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c01140d8	obj/kernel.asm	/^c01140d8:	76 0a                	jbe    c01140e4 <sfs_truncfile+0x20>$/;"	l
c01140da	obj/kernel.asm	/^c01140da:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01140df	obj/kernel.asm	/^c01140df:	e9 d4 01 00 00       	jmp    c01142b8 <sfs_truncfile+0x1f4>$/;"	l
c01140e4	obj/kernel.asm	/^c01140e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01140e7	obj/kernel.asm	/^c01140e7:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01140ea	obj/kernel.asm	/^c01140ea:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01140ed	obj/kernel.asm	/^c01140ed:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01140f1	obj/kernel.asm	/^c01140f1:	74 0a                	je     c01140fd <sfs_truncfile+0x39>$/;"	l
c01140f3	obj/kernel.asm	/^c01140f3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01140f6	obj/kernel.asm	/^c01140f6:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01140f9	obj/kernel.asm	/^c01140f9:	85 c0                	test   %eax,%eax$/;"	l
c01140fb	obj/kernel.asm	/^c01140fb:	74 24                	je     c0114121 <sfs_truncfile+0x5d>$/;"	l
c01140fd	obj/kernel.asm	/^c01140fd:	c7 44 24 0c f4 95 11 	movl   $0xc01195f4,0xc(%esp)$/;"	l
c0114104	obj/kernel.asm	/^c0114104:	c0 $/;"	l
c0114105	obj/kernel.asm	/^c0114105:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011410c	obj/kernel.asm	/^c011410c:	c0 $/;"	l
c011410d	obj/kernel.asm	/^c011410d:	c7 44 24 04 a3 03 00 	movl   $0x3a3,0x4(%esp)$/;"	l
c0114114	obj/kernel.asm	/^c0114114:	00 $/;"	l
c0114115	obj/kernel.asm	/^c0114115:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011411c	obj/kernel.asm	/^c011411c:	e8 a7 cd fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114121	obj/kernel.asm	/^c0114121:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114124	obj/kernel.asm	/^c0114124:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114127	obj/kernel.asm	/^c0114127:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011412a	obj/kernel.asm	/^c011412a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011412d	obj/kernel.asm	/^c011412d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114131	obj/kernel.asm	/^c0114131:	74 0d                	je     c0114140 <sfs_truncfile+0x7c>$/;"	l
c0114133	obj/kernel.asm	/^c0114133:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114136	obj/kernel.asm	/^c0114136:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0114139	obj/kernel.asm	/^c0114139:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c011413e	obj/kernel.asm	/^c011413e:	74 24                	je     c0114164 <sfs_truncfile+0xa0>$/;"	l
c0114140	obj/kernel.asm	/^c0114140:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0114147	obj/kernel.asm	/^c0114147:	c0 $/;"	l
c0114148	obj/kernel.asm	/^c0114148:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011414f	obj/kernel.asm	/^c011414f:	c0 $/;"	l
c0114150	obj/kernel.asm	/^c0114150:	c7 44 24 04 a4 03 00 	movl   $0x3a4,0x4(%esp)$/;"	l
c0114157	obj/kernel.asm	/^c0114157:	00 $/;"	l
c0114158	obj/kernel.asm	/^c0114158:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011415f	obj/kernel.asm	/^c011415f:	e8 64 cd fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114164	obj/kernel.asm	/^c0114164:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114167	obj/kernel.asm	/^c0114167:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011416a	obj/kernel.asm	/^c011416a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011416d	obj/kernel.asm	/^c011416d:	8b 00                	mov    (%eax),%eax$/;"	l
c011416f	obj/kernel.asm	/^c011416f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0114172	obj/kernel.asm	/^c0114172:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0114179	obj/kernel.asm	/^c0114179:	c7 45 d8 00 10 00 00 	movl   $0x1000,-0x28(%ebp)$/;"	l
c0114180	obj/kernel.asm	/^c0114180:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114183	obj/kernel.asm	/^c0114183:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114186	obj/kernel.asm	/^c0114186:	01 d0                	add    %edx,%eax$/;"	l
c0114188	obj/kernel.asm	/^c0114188:	83 e8 01             	sub    $0x1,%eax$/;"	l
c011418b	obj/kernel.asm	/^c011418b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114190	obj/kernel.asm	/^c0114190:	f7 75 d8             	divl   -0x28(%ebp)$/;"	l
c0114193	obj/kernel.asm	/^c0114193:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0114196	obj/kernel.asm	/^c0114196:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114199	obj/kernel.asm	/^c0114199:	8b 10                	mov    (%eax),%edx$/;"	l
c011419b	obj/kernel.asm	/^c011419b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011419e	obj/kernel.asm	/^c011419e:	39 c2                	cmp    %eax,%edx$/;"	l
c01141a0	obj/kernel.asm	/^c01141a0:	75 39                	jne    c01141db <sfs_truncfile+0x117>$/;"	l
c01141a2	obj/kernel.asm	/^c01141a2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01141a5	obj/kernel.asm	/^c01141a5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01141a8	obj/kernel.asm	/^c01141a8:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c01141ab	obj/kernel.asm	/^c01141ab:	74 24                	je     c01141d1 <sfs_truncfile+0x10d>$/;"	l
c01141ad	obj/kernel.asm	/^c01141ad:	c7 44 24 0c 22 97 11 	movl   $0xc0119722,0xc(%esp)$/;"	l
c01141b4	obj/kernel.asm	/^c01141b4:	c0 $/;"	l
c01141b5	obj/kernel.asm	/^c01141b5:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01141bc	obj/kernel.asm	/^c01141bc:	c0 $/;"	l
c01141bd	obj/kernel.asm	/^c01141bd:	c7 44 24 04 ab 03 00 	movl   $0x3ab,0x4(%esp)$/;"	l
c01141c4	obj/kernel.asm	/^c01141c4:	00 $/;"	l
c01141c5	obj/kernel.asm	/^c01141c5:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01141cc	obj/kernel.asm	/^c01141cc:	e8 f7 cc fe ff       	call   c0100ec8 <__panic>$/;"	l
c01141d1	obj/kernel.asm	/^c01141d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01141d6	obj/kernel.asm	/^c01141d6:	e9 dd 00 00 00       	jmp    c01142b8 <sfs_truncfile+0x1f4>$/;"	l
c01141db	obj/kernel.asm	/^c01141db:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01141de	obj/kernel.asm	/^c01141de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01141e1	obj/kernel.asm	/^c01141e1:	e8 09 df ff ff       	call   c01120ef <lock_sin>$/;"	l
c01141e6	obj/kernel.asm	/^c01141e6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01141e9	obj/kernel.asm	/^c01141e9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01141ec	obj/kernel.asm	/^c01141ec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01141ef	obj/kernel.asm	/^c01141ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01141f2	obj/kernel.asm	/^c01141f2:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c01141f5	obj/kernel.asm	/^c01141f5:	73 3f                	jae    c0114236 <sfs_truncfile+0x172>$/;"	l
c01141f7	obj/kernel.asm	/^c01141f7:	eb 33                	jmp    c011422c <sfs_truncfile+0x168>$/;"	l
c01141f9	obj/kernel.asm	/^c01141f9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0114200	obj/kernel.asm	/^c0114200:	00 $/;"	l
c0114201	obj/kernel.asm	/^c0114201:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114204	obj/kernel.asm	/^c0114204:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114208	obj/kernel.asm	/^c0114208:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011420b	obj/kernel.asm	/^c011420b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011420f	obj/kernel.asm	/^c011420f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114212	obj/kernel.asm	/^c0114212:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114215	obj/kernel.asm	/^c0114215:	e8 ca e9 ff ff       	call   c0112be4 <sfs_bmap_load_nolock>$/;"	l
c011421a	obj/kernel.asm	/^c011421a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011421d	obj/kernel.asm	/^c011421d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114221	obj/kernel.asm	/^c0114221:	74 05                	je     c0114228 <sfs_truncfile+0x164>$/;"	l
c0114223	obj/kernel.asm	/^c0114223:	e9 82 00 00 00       	jmp    c01142aa <sfs_truncfile+0x1e6>$/;"	l
c0114228	obj/kernel.asm	/^c0114228:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c011422c	obj/kernel.asm	/^c011422c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011422f	obj/kernel.asm	/^c011422f:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0114232	obj/kernel.asm	/^c0114232:	75 c5                	jne    c01141f9 <sfs_truncfile+0x135>$/;"	l
c0114234	obj/kernel.asm	/^c0114234:	eb 33                	jmp    c0114269 <sfs_truncfile+0x1a5>$/;"	l
c0114236	obj/kernel.asm	/^c0114236:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0114239	obj/kernel.asm	/^c0114239:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c011423c	obj/kernel.asm	/^c011423c:	73 2b                	jae    c0114269 <sfs_truncfile+0x1a5>$/;"	l
c011423e	obj/kernel.asm	/^c011423e:	eb 21                	jmp    c0114261 <sfs_truncfile+0x19d>$/;"	l
c0114240	obj/kernel.asm	/^c0114240:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114243	obj/kernel.asm	/^c0114243:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114247	obj/kernel.asm	/^c0114247:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011424a	obj/kernel.asm	/^c011424a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011424d	obj/kernel.asm	/^c011424d:	e8 7a ea ff ff       	call   c0112ccc <sfs_bmap_truncate_nolock>$/;"	l
c0114252	obj/kernel.asm	/^c0114252:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114255	obj/kernel.asm	/^c0114255:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114259	obj/kernel.asm	/^c0114259:	74 02                	je     c011425d <sfs_truncfile+0x199>$/;"	l
c011425b	obj/kernel.asm	/^c011425b:	eb 4d                	jmp    c01142aa <sfs_truncfile+0x1e6>$/;"	l
c011425d	obj/kernel.asm	/^c011425d:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c0114261	obj/kernel.asm	/^c0114261:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0114264	obj/kernel.asm	/^c0114264:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0114267	obj/kernel.asm	/^c0114267:	75 d7                	jne    c0114240 <sfs_truncfile+0x17c>$/;"	l
c0114269	obj/kernel.asm	/^c0114269:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011426c	obj/kernel.asm	/^c011426c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011426f	obj/kernel.asm	/^c011426f:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0114272	obj/kernel.asm	/^c0114272:	74 24                	je     c0114298 <sfs_truncfile+0x1d4>$/;"	l
c0114274	obj/kernel.asm	/^c0114274:	c7 44 24 0c 37 97 11 	movl   $0xc0119737,0xc(%esp)$/;"	l
c011427b	obj/kernel.asm	/^c011427b:	c0 $/;"	l
c011427c	obj/kernel.asm	/^c011427c:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0114283	obj/kernel.asm	/^c0114283:	c0 $/;"	l
c0114284	obj/kernel.asm	/^c0114284:	c7 44 24 04 c4 03 00 	movl   $0x3c4,0x4(%esp)$/;"	l
c011428b	obj/kernel.asm	/^c011428b:	00 $/;"	l
c011428c	obj/kernel.asm	/^c011428c:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0114293	obj/kernel.asm	/^c0114293:	e8 30 cc fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114298	obj/kernel.asm	/^c0114298:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011429b	obj/kernel.asm	/^c011429b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011429e	obj/kernel.asm	/^c011429e:	89 10                	mov    %edx,(%eax)$/;"	l
c01142a0	obj/kernel.asm	/^c01142a0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01142a3	obj/kernel.asm	/^c01142a3:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01142aa	obj/kernel.asm	/^c01142aa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01142ad	obj/kernel.asm	/^c01142ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01142b0	obj/kernel.asm	/^c01142b0:	e8 50 de ff ff       	call   c0112105 <unlock_sin>$/;"	l
c01142b5	obj/kernel.asm	/^c01142b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01142b8	obj/kernel.asm	/^c01142b8:	c9                   	leave  $/;"	l
c01142b9	obj/kernel.asm	/^c01142b9:	c3                   	ret    $/;"	l
c01142ba	obj/kernel.asm	/^c01142ba <sfs_lookup>:$/;"	l
c01142ba	obj/kernel.asm	/^c01142ba:	55                   	push   %ebp$/;"	l
c01142bb	obj/kernel.asm	/^c01142bb:	89 e5                	mov    %esp,%ebp$/;"	l
c01142bd	obj/kernel.asm	/^c01142bd:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01142c0	obj/kernel.asm	/^c01142c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01142c3	obj/kernel.asm	/^c01142c3:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01142c6	obj/kernel.asm	/^c01142c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01142c9	obj/kernel.asm	/^c01142c9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01142cd	obj/kernel.asm	/^c01142cd:	74 0a                	je     c01142d9 <sfs_lookup+0x1f>$/;"	l
c01142cf	obj/kernel.asm	/^c01142cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01142d2	obj/kernel.asm	/^c01142d2:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01142d5	obj/kernel.asm	/^c01142d5:	85 c0                	test   %eax,%eax$/;"	l
c01142d7	obj/kernel.asm	/^c01142d7:	74 24                	je     c01142fd <sfs_lookup+0x43>$/;"	l
c01142d9	obj/kernel.asm	/^c01142d9:	c7 44 24 0c f4 95 11 	movl   $0xc01195f4,0xc(%esp)$/;"	l
c01142e0	obj/kernel.asm	/^c01142e0:	c0 $/;"	l
c01142e1	obj/kernel.asm	/^c01142e1:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c01142e8	obj/kernel.asm	/^c01142e8:	c0 $/;"	l
c01142e9	obj/kernel.asm	/^c01142e9:	c7 44 24 04 d4 03 00 	movl   $0x3d4,0x4(%esp)$/;"	l
c01142f0	obj/kernel.asm	/^c01142f0:	00 $/;"	l
c01142f1	obj/kernel.asm	/^c01142f1:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c01142f8	obj/kernel.asm	/^c01142f8:	e8 cb cb fe ff       	call   c0100ec8 <__panic>$/;"	l
c01142fd	obj/kernel.asm	/^c01142fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114300	obj/kernel.asm	/^c0114300:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114303	obj/kernel.asm	/^c0114303:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114306	obj/kernel.asm	/^c0114306:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114309	obj/kernel.asm	/^c0114309:	84 c0                	test   %al,%al$/;"	l
c011430b	obj/kernel.asm	/^c011430b:	74 0a                	je     c0114317 <sfs_lookup+0x5d>$/;"	l
c011430d	obj/kernel.asm	/^c011430d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114310	obj/kernel.asm	/^c0114310:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114313	obj/kernel.asm	/^c0114313:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0114315	obj/kernel.asm	/^c0114315:	75 24                	jne    c011433b <sfs_lookup+0x81>$/;"	l
c0114317	obj/kernel.asm	/^c0114317:	c7 44 24 0c 4c 97 11 	movl   $0xc011974c,0xc(%esp)$/;"	l
c011431e	obj/kernel.asm	/^c011431e:	c0 $/;"	l
c011431f	obj/kernel.asm	/^c011431f:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c0114326	obj/kernel.asm	/^c0114326:	c0 $/;"	l
c0114327	obj/kernel.asm	/^c0114327:	c7 44 24 04 d5 03 00 	movl   $0x3d5,0x4(%esp)$/;"	l
c011432e	obj/kernel.asm	/^c011432e:	00 $/;"	l
c011432f	obj/kernel.asm	/^c011432f:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c0114336	obj/kernel.asm	/^c0114336:	e8 8d cb fe ff       	call   c0100ec8 <__panic>$/;"	l
c011433b	obj/kernel.asm	/^c011433b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011433e	obj/kernel.asm	/^c011433e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114341	obj/kernel.asm	/^c0114341:	e8 73 ac ff ff       	call   c010efb9 <inode_ref_inc>$/;"	l
c0114346	obj/kernel.asm	/^c0114346:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114349	obj/kernel.asm	/^c0114349:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011434c	obj/kernel.asm	/^c011434c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0114350	obj/kernel.asm	/^c0114350:	74 0d                	je     c011435f <sfs_lookup+0xa5>$/;"	l
c0114352	obj/kernel.asm	/^c0114352:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114355	obj/kernel.asm	/^c0114355:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0114358	obj/kernel.asm	/^c0114358:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c011435d	obj/kernel.asm	/^c011435d:	74 24                	je     c0114383 <sfs_lookup+0xc9>$/;"	l
c011435f	obj/kernel.asm	/^c011435f:	c7 44 24 0c f0 93 11 	movl   $0xc01193f0,0xc(%esp)$/;"	l
c0114366	obj/kernel.asm	/^c0114366:	c0 $/;"	l
c0114367	obj/kernel.asm	/^c0114367:	c7 44 24 08 9f 93 11 	movl   $0xc011939f,0x8(%esp)$/;"	l
c011436e	obj/kernel.asm	/^c011436e:	c0 $/;"	l
c011436f	obj/kernel.asm	/^c011436f:	c7 44 24 04 d7 03 00 	movl   $0x3d7,0x4(%esp)$/;"	l
c0114376	obj/kernel.asm	/^c0114376:	00 $/;"	l
c0114377	obj/kernel.asm	/^c0114377:	c7 04 24 37 93 11 c0 	movl   $0xc0119337,(%esp)$/;"	l
c011437e	obj/kernel.asm	/^c011437e:	e8 45 cb fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114383	obj/kernel.asm	/^c0114383:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114386	obj/kernel.asm	/^c0114386:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114389	obj/kernel.asm	/^c0114389:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011438c	obj/kernel.asm	/^c011438c:	8b 00                	mov    (%eax),%eax$/;"	l
c011438e	obj/kernel.asm	/^c011438e:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0114392	obj/kernel.asm	/^c0114392:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0114396	obj/kernel.asm	/^c0114396:	74 12                	je     c01143aa <sfs_lookup+0xf0>$/;"	l
c0114398	obj/kernel.asm	/^c0114398:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011439b	obj/kernel.asm	/^c011439b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011439e	obj/kernel.asm	/^c011439e:	e8 30 ac ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c01143a3	obj/kernel.asm	/^c01143a3:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
c01143a8	obj/kernel.asm	/^c01143a8:	eb 4e                	jmp    c01143f8 <sfs_lookup+0x13e>$/;"	l
c01143aa	obj/kernel.asm	/^c01143aa:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c01143b1	obj/kernel.asm	/^c01143b1:	00 $/;"	l
c01143b2	obj/kernel.asm	/^c01143b2:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c01143b5	obj/kernel.asm	/^c01143b5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01143b9	obj/kernel.asm	/^c01143b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01143bc	obj/kernel.asm	/^c01143bc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01143c0	obj/kernel.asm	/^c01143c0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01143c3	obj/kernel.asm	/^c01143c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01143c7	obj/kernel.asm	/^c01143c7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01143ca	obj/kernel.asm	/^c01143ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01143cd	obj/kernel.asm	/^c01143cd:	e8 18 ec ff ff       	call   c0112fea <sfs_lookup_once>$/;"	l
c01143d2	obj/kernel.asm	/^c01143d2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01143d5	obj/kernel.asm	/^c01143d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01143d8	obj/kernel.asm	/^c01143d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01143db	obj/kernel.asm	/^c01143db:	e8 f3 ab ff ff       	call   c010efd3 <inode_ref_dec>$/;"	l
c01143e0	obj/kernel.asm	/^c01143e0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01143e4	obj/kernel.asm	/^c01143e4:	74 05                	je     c01143eb <sfs_lookup+0x131>$/;"	l
c01143e6	obj/kernel.asm	/^c01143e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01143e9	obj/kernel.asm	/^c01143e9:	eb 0d                	jmp    c01143f8 <sfs_lookup+0x13e>$/;"	l
c01143eb	obj/kernel.asm	/^c01143eb:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01143ee	obj/kernel.asm	/^c01143ee:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01143f1	obj/kernel.asm	/^c01143f1:	89 10                	mov    %edx,(%eax)$/;"	l
c01143f3	obj/kernel.asm	/^c01143f3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01143f8	obj/kernel.asm	/^c01143f8:	c9                   	leave  $/;"	l
c01143f9	obj/kernel.asm	/^c01143f9:	c3                   	ret    $/;"	l
c01143fa	obj/kernel.asm	/^c01143fa <sfs_rwblock_nolock>:$/;"	l
c01143fa	obj/kernel.asm	/^c01143fa:	55                   	push   %ebp$/;"	l
c01143fb	obj/kernel.asm	/^c01143fb:	89 e5                	mov    %esp,%ebp$/;"	l
c01143fd	obj/kernel.asm	/^c01143fd:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114400	obj/kernel.asm	/^c0114400:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0114404	obj/kernel.asm	/^c0114404:	75 06                	jne    c011440c <sfs_rwblock_nolock+0x12>$/;"	l
c0114406	obj/kernel.asm	/^c0114406:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c011440a	obj/kernel.asm	/^c011440a:	75 0b                	jne    c0114417 <sfs_rwblock_nolock+0x1d>$/;"	l
c011440c	obj/kernel.asm	/^c011440c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011440f	obj/kernel.asm	/^c011440f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0114412	obj/kernel.asm	/^c0114412:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0114415	obj/kernel.asm	/^c0114415:	77 24                	ja     c011443b <sfs_rwblock_nolock+0x41>$/;"	l
c0114417	obj/kernel.asm	/^c0114417:	c7 44 24 0c 6c 97 11 	movl   $0xc011976c,0xc(%esp)$/;"	l
c011441e	obj/kernel.asm	/^c011441e:	c0 $/;"	l
c011441f	obj/kernel.asm	/^c011441f:	c7 44 24 08 a0 97 11 	movl   $0xc01197a0,0x8(%esp)$/;"	l
c0114426	obj/kernel.asm	/^c0114426:	c0 $/;"	l
c0114427	obj/kernel.asm	/^c0114427:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c011442e	obj/kernel.asm	/^c011442e:	00 $/;"	l
c011442f	obj/kernel.asm	/^c011442f:	c7 04 24 b5 97 11 c0 	movl   $0xc01197b5,(%esp)$/;"	l
c0114436	obj/kernel.asm	/^c0114436:	e8 8d ca fe ff       	call   c0100ec8 <__panic>$/;"	l
c011443b	obj/kernel.asm	/^c011443b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011443e	obj/kernel.asm	/^c011443e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0114441	obj/kernel.asm	/^c0114441:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114445	obj/kernel.asm	/^c0114445:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c011444c	obj/kernel.asm	/^c011444c:	00 $/;"	l
c011444d	obj/kernel.asm	/^c011444d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114450	obj/kernel.asm	/^c0114450:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114454	obj/kernel.asm	/^c0114454:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0114457	obj/kernel.asm	/^c0114457:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011445a	obj/kernel.asm	/^c011445a:	e8 e5 6d ff ff       	call   c010b244 <iobuf_init>$/;"	l
c011445f	obj/kernel.asm	/^c011445f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114462	obj/kernel.asm	/^c0114462:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114465	obj/kernel.asm	/^c0114465:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0114468	obj/kernel.asm	/^c0114468:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c011446b	obj/kernel.asm	/^c011446b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011446e	obj/kernel.asm	/^c011446e:	8b 52 2c             	mov    0x2c(%edx),%edx$/;"	l
c0114471	obj/kernel.asm	/^c0114471:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
c0114474	obj/kernel.asm	/^c0114474:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0114478	obj/kernel.asm	/^c0114478:	8b 4d f4             	mov    -0xc(%ebp),%ecx$/;"	l
c011447b	obj/kernel.asm	/^c011447b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c011447f	obj/kernel.asm	/^c011447f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0114482	obj/kernel.asm	/^c0114482:	ff d0                	call   *%eax$/;"	l
c0114484	obj/kernel.asm	/^c0114484:	c9                   	leave  $/;"	l
c0114485	obj/kernel.asm	/^c0114485:	c3                   	ret    $/;"	l
c0114486	obj/kernel.asm	/^c0114486 <sfs_rwblock>:$/;"	l
c0114486	obj/kernel.asm	/^c0114486:	55                   	push   %ebp$/;"	l
c0114487	obj/kernel.asm	/^c0114487:	89 e5                	mov    %esp,%ebp$/;"	l
c0114489	obj/kernel.asm	/^c0114489:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011448c	obj/kernel.asm	/^c011448c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0114493	obj/kernel.asm	/^c0114493:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114496	obj/kernel.asm	/^c0114496:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114499	obj/kernel.asm	/^c0114499:	e8 df 03 00 00       	call   c011487d <lock_sfs_io>$/;"	l
c011449e	obj/kernel.asm	/^c011449e:	eb 42                	jmp    c01144e2 <sfs_rwblock+0x5c>$/;"	l
c01144a0	obj/kernel.asm	/^c01144a0:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c01144a7	obj/kernel.asm	/^c01144a7:	00 $/;"	l
c01144a8	obj/kernel.asm	/^c01144a8:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01144ab	obj/kernel.asm	/^c01144ab:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01144af	obj/kernel.asm	/^c01144af:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01144b2	obj/kernel.asm	/^c01144b2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01144b6	obj/kernel.asm	/^c01144b6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01144b9	obj/kernel.asm	/^c01144b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01144bd	obj/kernel.asm	/^c01144bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01144c0	obj/kernel.asm	/^c01144c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01144c3	obj/kernel.asm	/^c01144c3:	e8 32 ff ff ff       	call   c01143fa <sfs_rwblock_nolock>$/;"	l
c01144c8	obj/kernel.asm	/^c01144c8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01144cb	obj/kernel.asm	/^c01144cb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01144cf	obj/kernel.asm	/^c01144cf:	74 02                	je     c01144d3 <sfs_rwblock+0x4d>$/;"	l
c01144d1	obj/kernel.asm	/^c01144d1:	eb 15                	jmp    c01144e8 <sfs_rwblock+0x62>$/;"	l
c01144d3	obj/kernel.asm	/^c01144d3:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c01144d7	obj/kernel.asm	/^c01144d7:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c01144db	obj/kernel.asm	/^c01144db:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01144e2	obj/kernel.asm	/^c01144e2:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01144e6	obj/kernel.asm	/^c01144e6:	75 b8                	jne    c01144a0 <sfs_rwblock+0x1a>$/;"	l
c01144e8	obj/kernel.asm	/^c01144e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01144eb	obj/kernel.asm	/^c01144eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01144ee	obj/kernel.asm	/^c01144ee:	e8 b6 03 00 00       	call   c01148a9 <unlock_sfs_io>$/;"	l
c01144f3	obj/kernel.asm	/^c01144f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01144f6	obj/kernel.asm	/^c01144f6:	c9                   	leave  $/;"	l
c01144f7	obj/kernel.asm	/^c01144f7:	c3                   	ret    $/;"	l
c01144f8	obj/kernel.asm	/^c01144f8 <sfs_rblock>:$/;"	l
c01144f8	obj/kernel.asm	/^c01144f8:	55                   	push   %ebp$/;"	l
c01144f9	obj/kernel.asm	/^c01144f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01144fb	obj/kernel.asm	/^c01144fb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01144fe	obj/kernel.asm	/^c01144fe:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0114505	obj/kernel.asm	/^c0114505:	00 $/;"	l
c0114506	obj/kernel.asm	/^c0114506:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114509	obj/kernel.asm	/^c0114509:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011450d	obj/kernel.asm	/^c011450d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114510	obj/kernel.asm	/^c0114510:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114514	obj/kernel.asm	/^c0114514:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114517	obj/kernel.asm	/^c0114517:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011451b	obj/kernel.asm	/^c011451b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011451e	obj/kernel.asm	/^c011451e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114521	obj/kernel.asm	/^c0114521:	e8 60 ff ff ff       	call   c0114486 <sfs_rwblock>$/;"	l
c0114526	obj/kernel.asm	/^c0114526:	c9                   	leave  $/;"	l
c0114527	obj/kernel.asm	/^c0114527:	c3                   	ret    $/;"	l
c0114528	obj/kernel.asm	/^c0114528 <sfs_wblock>:$/;"	l
c0114528	obj/kernel.asm	/^c0114528:	55                   	push   %ebp$/;"	l
c0114529	obj/kernel.asm	/^c0114529:	89 e5                	mov    %esp,%ebp$/;"	l
c011452b	obj/kernel.asm	/^c011452b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011452e	obj/kernel.asm	/^c011452e:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c0114535	obj/kernel.asm	/^c0114535:	00 $/;"	l
c0114536	obj/kernel.asm	/^c0114536:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114539	obj/kernel.asm	/^c0114539:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011453d	obj/kernel.asm	/^c011453d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114540	obj/kernel.asm	/^c0114540:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114544	obj/kernel.asm	/^c0114544:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114547	obj/kernel.asm	/^c0114547:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011454b	obj/kernel.asm	/^c011454b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011454e	obj/kernel.asm	/^c011454e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114551	obj/kernel.asm	/^c0114551:	e8 30 ff ff ff       	call   c0114486 <sfs_rwblock>$/;"	l
c0114556	obj/kernel.asm	/^c0114556:	c9                   	leave  $/;"	l
c0114557	obj/kernel.asm	/^c0114557:	c3                   	ret    $/;"	l
c0114558	obj/kernel.asm	/^c0114558 <sfs_rbuf>:$/;"	l
c0114558	obj/kernel.asm	/^c0114558:	55                   	push   %ebp$/;"	l
c0114559	obj/kernel.asm	/^c0114559:	89 e5                	mov    %esp,%ebp$/;"	l
c011455b	obj/kernel.asm	/^c011455b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011455e	obj/kernel.asm	/^c011455e:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0114562	obj/kernel.asm	/^c0114562:	78 18                	js     c011457c <sfs_rbuf+0x24>$/;"	l
c0114564	obj/kernel.asm	/^c0114564:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c011456b	obj/kernel.asm	/^c011456b:	7f 0f                	jg     c011457c <sfs_rbuf+0x24>$/;"	l
c011456d	obj/kernel.asm	/^c011456d:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0114570	obj/kernel.asm	/^c0114570:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114573	obj/kernel.asm	/^c0114573:	01 d0                	add    %edx,%eax$/;"	l
c0114575	obj/kernel.asm	/^c0114575:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c011457a	obj/kernel.asm	/^c011457a:	76 24                	jbe    c01145a0 <sfs_rbuf+0x48>$/;"	l
c011457c	obj/kernel.asm	/^c011457c:	c7 44 24 0c cc 97 11 	movl   $0xc01197cc,0xc(%esp)$/;"	l
c0114583	obj/kernel.asm	/^c0114583:	c0 $/;"	l
c0114584	obj/kernel.asm	/^c0114584:	c7 44 24 08 a0 97 11 	movl   $0xc01197a0,0x8(%esp)$/;"	l
c011458b	obj/kernel.asm	/^c011458b:	c0 $/;"	l
c011458c	obj/kernel.asm	/^c011458c:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c0114593	obj/kernel.asm	/^c0114593:	00 $/;"	l
c0114594	obj/kernel.asm	/^c0114594:	c7 04 24 b5 97 11 c0 	movl   $0xc01197b5,(%esp)$/;"	l
c011459b	obj/kernel.asm	/^c011459b:	e8 28 c9 fe ff       	call   c0100ec8 <__panic>$/;"	l
c01145a0	obj/kernel.asm	/^c01145a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01145a3	obj/kernel.asm	/^c01145a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01145a6	obj/kernel.asm	/^c01145a6:	e8 d2 02 00 00       	call   c011487d <lock_sfs_io>$/;"	l
c01145ab	obj/kernel.asm	/^c01145ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01145ae	obj/kernel.asm	/^c01145ae:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01145b1	obj/kernel.asm	/^c01145b1:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c01145b8	obj/kernel.asm	/^c01145b8:	00 $/;"	l
c01145b9	obj/kernel.asm	/^c01145b9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01145c0	obj/kernel.asm	/^c01145c0:	00 $/;"	l
c01145c1	obj/kernel.asm	/^c01145c1:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01145c4	obj/kernel.asm	/^c01145c4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01145c8	obj/kernel.asm	/^c01145c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01145cc	obj/kernel.asm	/^c01145cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01145cf	obj/kernel.asm	/^c01145cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01145d2	obj/kernel.asm	/^c01145d2:	e8 23 fe ff ff       	call   c01143fa <sfs_rwblock_nolock>$/;"	l
c01145d7	obj/kernel.asm	/^c01145d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01145da	obj/kernel.asm	/^c01145da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01145de	obj/kernel.asm	/^c01145de:	75 21                	jne    c0114601 <sfs_rbuf+0xa9>$/;"	l
c01145e0	obj/kernel.asm	/^c01145e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01145e3	obj/kernel.asm	/^c01145e3:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c01145e6	obj/kernel.asm	/^c01145e6:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01145e9	obj/kernel.asm	/^c01145e9:	01 c2                	add    %eax,%edx$/;"	l
c01145eb	obj/kernel.asm	/^c01145eb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01145ee	obj/kernel.asm	/^c01145ee:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01145f2	obj/kernel.asm	/^c01145f2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01145f6	obj/kernel.asm	/^c01145f6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01145f9	obj/kernel.asm	/^c01145f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01145fc	obj/kernel.asm	/^c01145fc:	e8 fa 0e 00 00       	call   c01154fb <memcpy>$/;"	l
c0114601	obj/kernel.asm	/^c0114601:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114604	obj/kernel.asm	/^c0114604:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114607	obj/kernel.asm	/^c0114607:	e8 9d 02 00 00       	call   c01148a9 <unlock_sfs_io>$/;"	l
c011460c	obj/kernel.asm	/^c011460c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011460f	obj/kernel.asm	/^c011460f:	c9                   	leave  $/;"	l
c0114610	obj/kernel.asm	/^c0114610:	c3                   	ret    $/;"	l
c0114611	obj/kernel.asm	/^c0114611 <sfs_wbuf>:$/;"	l
c0114611	obj/kernel.asm	/^c0114611:	55                   	push   %ebp$/;"	l
c0114612	obj/kernel.asm	/^c0114612:	89 e5                	mov    %esp,%ebp$/;"	l
c0114614	obj/kernel.asm	/^c0114614:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114617	obj/kernel.asm	/^c0114617:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c011461b	obj/kernel.asm	/^c011461b:	78 18                	js     c0114635 <sfs_wbuf+0x24>$/;"	l
c011461d	obj/kernel.asm	/^c011461d:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c0114624	obj/kernel.asm	/^c0114624:	7f 0f                	jg     c0114635 <sfs_wbuf+0x24>$/;"	l
c0114626	obj/kernel.asm	/^c0114626:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0114629	obj/kernel.asm	/^c0114629:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011462c	obj/kernel.asm	/^c011462c:	01 d0                	add    %edx,%eax$/;"	l
c011462e	obj/kernel.asm	/^c011462e:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0114633	obj/kernel.asm	/^c0114633:	76 24                	jbe    c0114659 <sfs_wbuf+0x48>$/;"	l
c0114635	obj/kernel.asm	/^c0114635:	c7 44 24 0c cc 97 11 	movl   $0xc01197cc,0xc(%esp)$/;"	l
c011463c	obj/kernel.asm	/^c011463c:	c0 $/;"	l
c011463d	obj/kernel.asm	/^c011463d:	c7 44 24 08 a0 97 11 	movl   $0xc01197a0,0x8(%esp)$/;"	l
c0114644	obj/kernel.asm	/^c0114644:	c0 $/;"	l
c0114645	obj/kernel.asm	/^c0114645:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c011464c	obj/kernel.asm	/^c011464c:	00 $/;"	l
c011464d	obj/kernel.asm	/^c011464d:	c7 04 24 b5 97 11 c0 	movl   $0xc01197b5,(%esp)$/;"	l
c0114654	obj/kernel.asm	/^c0114654:	e8 6f c8 fe ff       	call   c0100ec8 <__panic>$/;"	l
c0114659	obj/kernel.asm	/^c0114659:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011465c	obj/kernel.asm	/^c011465c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011465f	obj/kernel.asm	/^c011465f:	e8 19 02 00 00       	call   c011487d <lock_sfs_io>$/;"	l
c0114664	obj/kernel.asm	/^c0114664:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114667	obj/kernel.asm	/^c0114667:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011466a	obj/kernel.asm	/^c011466a:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c0114671	obj/kernel.asm	/^c0114671:	00 $/;"	l
c0114672	obj/kernel.asm	/^c0114672:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0114679	obj/kernel.asm	/^c0114679:	00 $/;"	l
c011467a	obj/kernel.asm	/^c011467a:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c011467d	obj/kernel.asm	/^c011467d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0114681	obj/kernel.asm	/^c0114681:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114685	obj/kernel.asm	/^c0114685:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114688	obj/kernel.asm	/^c0114688:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011468b	obj/kernel.asm	/^c011468b:	e8 6a fd ff ff       	call   c01143fa <sfs_rwblock_nolock>$/;"	l
c0114690	obj/kernel.asm	/^c0114690:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114693	obj/kernel.asm	/^c0114693:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114697	obj/kernel.asm	/^c0114697:	75 50                	jne    c01146e9 <sfs_wbuf+0xd8>$/;"	l
c0114699	obj/kernel.asm	/^c0114699:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011469c	obj/kernel.asm	/^c011469c:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c011469f	obj/kernel.asm	/^c011469f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01146a2	obj/kernel.asm	/^c01146a2:	01 c2                	add    %eax,%edx$/;"	l
c01146a4	obj/kernel.asm	/^c01146a4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01146a7	obj/kernel.asm	/^c01146a7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01146ab	obj/kernel.asm	/^c01146ab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01146ae	obj/kernel.asm	/^c01146ae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01146b2	obj/kernel.asm	/^c01146b2:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01146b5	obj/kernel.asm	/^c01146b5:	e8 41 0e 00 00       	call   c01154fb <memcpy>$/;"	l
c01146ba	obj/kernel.asm	/^c01146ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01146bd	obj/kernel.asm	/^c01146bd:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01146c0	obj/kernel.asm	/^c01146c0:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c01146c7	obj/kernel.asm	/^c01146c7:	00 $/;"	l
c01146c8	obj/kernel.asm	/^c01146c8:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c01146cf	obj/kernel.asm	/^c01146cf:	00 $/;"	l
c01146d0	obj/kernel.asm	/^c01146d0:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01146d3	obj/kernel.asm	/^c01146d3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01146d7	obj/kernel.asm	/^c01146d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01146db	obj/kernel.asm	/^c01146db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01146de	obj/kernel.asm	/^c01146de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01146e1	obj/kernel.asm	/^c01146e1:	e8 14 fd ff ff       	call   c01143fa <sfs_rwblock_nolock>$/;"	l
c01146e6	obj/kernel.asm	/^c01146e6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01146e9	obj/kernel.asm	/^c01146e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01146ec	obj/kernel.asm	/^c01146ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01146ef	obj/kernel.asm	/^c01146ef:	e8 b5 01 00 00       	call   c01148a9 <unlock_sfs_io>$/;"	l
c01146f4	obj/kernel.asm	/^c01146f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01146f7	obj/kernel.asm	/^c01146f7:	c9                   	leave  $/;"	l
c01146f8	obj/kernel.asm	/^c01146f8:	c3                   	ret    $/;"	l
c01146f9	obj/kernel.asm	/^c01146f9 <sfs_sync_super>:$/;"	l
c01146f9	obj/kernel.asm	/^c01146f9:	55                   	push   %ebp$/;"	l
c01146fa	obj/kernel.asm	/^c01146fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01146fc	obj/kernel.asm	/^c01146fc:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01146ff	obj/kernel.asm	/^c01146ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114702	obj/kernel.asm	/^c0114702:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114705	obj/kernel.asm	/^c0114705:	e8 73 01 00 00       	call   c011487d <lock_sfs_io>$/;"	l
c011470a	obj/kernel.asm	/^c011470a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011470d	obj/kernel.asm	/^c011470d:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114710	obj/kernel.asm	/^c0114710:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0114717	obj/kernel.asm	/^c0114717:	00 $/;"	l
c0114718	obj/kernel.asm	/^c0114718:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c011471f	obj/kernel.asm	/^c011471f:	00 $/;"	l
c0114720	obj/kernel.asm	/^c0114720:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114723	obj/kernel.asm	/^c0114723:	e8 f1 0c 00 00       	call   c0115419 <memset>$/;"	l
c0114728	obj/kernel.asm	/^c0114728:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011472b	obj/kernel.asm	/^c011472b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011472e	obj/kernel.asm	/^c011472e:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114731	obj/kernel.asm	/^c0114731:	c7 44 24 08 2c 00 00 	movl   $0x2c,0x8(%esp)$/;"	l
c0114738	obj/kernel.asm	/^c0114738:	00 $/;"	l
c0114739	obj/kernel.asm	/^c0114739:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011473d	obj/kernel.asm	/^c011473d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114740	obj/kernel.asm	/^c0114740:	e8 b6 0d 00 00       	call   c01154fb <memcpy>$/;"	l
c0114745	obj/kernel.asm	/^c0114745:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114748	obj/kernel.asm	/^c0114748:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011474b	obj/kernel.asm	/^c011474b:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0114752	obj/kernel.asm	/^c0114752:	00 $/;"	l
c0114753	obj/kernel.asm	/^c0114753:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c011475a	obj/kernel.asm	/^c011475a:	00 $/;"	l
c011475b	obj/kernel.asm	/^c011475b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0114762	obj/kernel.asm	/^c0114762:	00 $/;"	l
c0114763	obj/kernel.asm	/^c0114763:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114767	obj/kernel.asm	/^c0114767:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011476a	obj/kernel.asm	/^c011476a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011476d	obj/kernel.asm	/^c011476d:	e8 88 fc ff ff       	call   c01143fa <sfs_rwblock_nolock>$/;"	l
c0114772	obj/kernel.asm	/^c0114772:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114775	obj/kernel.asm	/^c0114775:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114778	obj/kernel.asm	/^c0114778:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011477b	obj/kernel.asm	/^c011477b:	e8 29 01 00 00       	call   c01148a9 <unlock_sfs_io>$/;"	l
c0114780	obj/kernel.asm	/^c0114780:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114783	obj/kernel.asm	/^c0114783:	c9                   	leave  $/;"	l
c0114784	obj/kernel.asm	/^c0114784:	c3                   	ret    $/;"	l
c0114785	obj/kernel.asm	/^c0114785 <sfs_sync_freemap>:$/;"	l
c0114785	obj/kernel.asm	/^c0114785:	55                   	push   %ebp$/;"	l
c0114786	obj/kernel.asm	/^c0114786:	89 e5                	mov    %esp,%ebp$/;"	l
c0114788	obj/kernel.asm	/^c0114788:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011478b	obj/kernel.asm	/^c011478b:	c7 45 f4 00 80 00 00 	movl   $0x8000,-0xc(%ebp)$/;"	l
c0114792	obj/kernel.asm	/^c0114792:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114795	obj/kernel.asm	/^c0114795:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114798	obj/kernel.asm	/^c0114798:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011479b	obj/kernel.asm	/^c011479b:	01 d0                	add    %edx,%eax$/;"	l
c011479d	obj/kernel.asm	/^c011479d:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01147a0	obj/kernel.asm	/^c01147a0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01147a5	obj/kernel.asm	/^c01147a5:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
c01147a8	obj/kernel.asm	/^c01147a8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01147ab	obj/kernel.asm	/^c01147ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01147ae	obj/kernel.asm	/^c01147ae:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01147b1	obj/kernel.asm	/^c01147b1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01147b8	obj/kernel.asm	/^c01147b8:	00 $/;"	l
c01147b9	obj/kernel.asm	/^c01147b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01147bc	obj/kernel.asm	/^c01147bc:	e8 fd cf ff ff       	call   c01117be <bitmap_getdata>$/;"	l
c01147c1	obj/kernel.asm	/^c01147c1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01147c4	obj/kernel.asm	/^c01147c4:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01147c8	obj/kernel.asm	/^c01147c8:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c01147cf	obj/kernel.asm	/^c01147cf:	00 $/;"	l
c01147d0	obj/kernel.asm	/^c01147d0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01147d4	obj/kernel.asm	/^c01147d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01147d7	obj/kernel.asm	/^c01147d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01147da	obj/kernel.asm	/^c01147da:	e8 49 fd ff ff       	call   c0114528 <sfs_wblock>$/;"	l
c01147df	obj/kernel.asm	/^c01147df:	c9                   	leave  $/;"	l
c01147e0	obj/kernel.asm	/^c01147e0:	c3                   	ret    $/;"	l
c01147e1	obj/kernel.asm	/^c01147e1 <sfs_clear_block>:$/;"	l
c01147e1	obj/kernel.asm	/^c01147e1:	55                   	push   %ebp$/;"	l
c01147e2	obj/kernel.asm	/^c01147e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01147e4	obj/kernel.asm	/^c01147e4:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01147e7	obj/kernel.asm	/^c01147e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01147ea	obj/kernel.asm	/^c01147ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01147ed	obj/kernel.asm	/^c01147ed:	e8 8b 00 00 00       	call   c011487d <lock_sfs_io>$/;"	l
c01147f2	obj/kernel.asm	/^c01147f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01147f5	obj/kernel.asm	/^c01147f5:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01147f8	obj/kernel.asm	/^c01147f8:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01147ff	obj/kernel.asm	/^c01147ff:	00 $/;"	l
c0114800	obj/kernel.asm	/^c0114800:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0114807	obj/kernel.asm	/^c0114807:	00 $/;"	l
c0114808	obj/kernel.asm	/^c0114808:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011480b	obj/kernel.asm	/^c011480b:	e8 09 0c 00 00       	call   c0115419 <memset>$/;"	l
c0114810	obj/kernel.asm	/^c0114810:	eb 3f                	jmp    c0114851 <sfs_clear_block+0x70>$/;"	l
c0114812	obj/kernel.asm	/^c0114812:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114815	obj/kernel.asm	/^c0114815:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114818	obj/kernel.asm	/^c0114818:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c011481f	obj/kernel.asm	/^c011481f:	00 $/;"	l
c0114820	obj/kernel.asm	/^c0114820:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0114827	obj/kernel.asm	/^c0114827:	00 $/;"	l
c0114828	obj/kernel.asm	/^c0114828:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011482b	obj/kernel.asm	/^c011482b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c011482f	obj/kernel.asm	/^c011482f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114833	obj/kernel.asm	/^c0114833:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114836	obj/kernel.asm	/^c0114836:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114839	obj/kernel.asm	/^c0114839:	e8 bc fb ff ff       	call   c01143fa <sfs_rwblock_nolock>$/;"	l
c011483e	obj/kernel.asm	/^c011483e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114841	obj/kernel.asm	/^c0114841:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114845	obj/kernel.asm	/^c0114845:	74 02                	je     c0114849 <sfs_clear_block+0x68>$/;"	l
c0114847	obj/kernel.asm	/^c0114847:	eb 0e                	jmp    c0114857 <sfs_clear_block+0x76>$/;"	l
c0114849	obj/kernel.asm	/^c0114849:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c011484d	obj/kernel.asm	/^c011484d:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0114851	obj/kernel.asm	/^c0114851:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0114855	obj/kernel.asm	/^c0114855:	75 bb                	jne    c0114812 <sfs_clear_block+0x31>$/;"	l
c0114857	obj/kernel.asm	/^c0114857:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011485a	obj/kernel.asm	/^c011485a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011485d	obj/kernel.asm	/^c011485d:	e8 47 00 00 00       	call   c01148a9 <unlock_sfs_io>$/;"	l
c0114862	obj/kernel.asm	/^c0114862:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114865	obj/kernel.asm	/^c0114865:	c9                   	leave  $/;"	l
c0114866	obj/kernel.asm	/^c0114866:	c3                   	ret    $/;"	l
c0114867	obj/kernel.asm	/^c0114867 <lock_sfs_fs>:$/;"	l
c0114867	obj/kernel.asm	/^c0114867:	55                   	push   %ebp$/;"	l
c0114868	obj/kernel.asm	/^c0114868:	89 e5                	mov    %esp,%ebp$/;"	l
c011486a	obj/kernel.asm	/^c011486a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011486d	obj/kernel.asm	/^c011486d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114870	obj/kernel.asm	/^c0114870:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c0114873	obj/kernel.asm	/^c0114873:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114876	obj/kernel.asm	/^c0114876:	e8 82 53 ff ff       	call   c0109bfd <down>$/;"	l
c011487b	obj/kernel.asm	/^c011487b:	c9                   	leave  $/;"	l
c011487c	obj/kernel.asm	/^c011487c:	c3                   	ret    $/;"	l
c011487d	obj/kernel.asm	/^c011487d <lock_sfs_io>:$/;"	l
c011487d	obj/kernel.asm	/^c011487d:	55                   	push   %ebp$/;"	l
c011487e	obj/kernel.asm	/^c011487e:	89 e5                	mov    %esp,%ebp$/;"	l
c0114880	obj/kernel.asm	/^c0114880:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0114883	obj/kernel.asm	/^c0114883:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114886	obj/kernel.asm	/^c0114886:	83 c0 48             	add    $0x48,%eax$/;"	l
c0114889	obj/kernel.asm	/^c0114889:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011488c	obj/kernel.asm	/^c011488c:	e8 6c 53 ff ff       	call   c0109bfd <down>$/;"	l
c0114891	obj/kernel.asm	/^c0114891:	c9                   	leave  $/;"	l
c0114892	obj/kernel.asm	/^c0114892:	c3                   	ret    $/;"	l
c0114893	obj/kernel.asm	/^c0114893 <unlock_sfs_fs>:$/;"	l
c0114893	obj/kernel.asm	/^c0114893:	55                   	push   %ebp$/;"	l
c0114894	obj/kernel.asm	/^c0114894:	89 e5                	mov    %esp,%ebp$/;"	l
c0114896	obj/kernel.asm	/^c0114896:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0114899	obj/kernel.asm	/^c0114899:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011489c	obj/kernel.asm	/^c011489c:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c011489f	obj/kernel.asm	/^c011489f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01148a2	obj/kernel.asm	/^c01148a2:	e8 3b 53 ff ff       	call   c0109be2 <up>$/;"	l
c01148a7	obj/kernel.asm	/^c01148a7:	c9                   	leave  $/;"	l
c01148a8	obj/kernel.asm	/^c01148a8:	c3                   	ret    $/;"	l
c01148a9	obj/kernel.asm	/^c01148a9 <unlock_sfs_io>:$/;"	l
c01148a9	obj/kernel.asm	/^c01148a9:	55                   	push   %ebp$/;"	l
c01148aa	obj/kernel.asm	/^c01148aa:	89 e5                	mov    %esp,%ebp$/;"	l
c01148ac	obj/kernel.asm	/^c01148ac:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01148af	obj/kernel.asm	/^c01148af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01148b2	obj/kernel.asm	/^c01148b2:	83 c0 48             	add    $0x48,%eax$/;"	l
c01148b5	obj/kernel.asm	/^c01148b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01148b8	obj/kernel.asm	/^c01148b8:	e8 25 53 ff ff       	call   c0109be2 <up>$/;"	l
c01148bd	obj/kernel.asm	/^c01148bd:	c9                   	leave  $/;"	l
c01148be	obj/kernel.asm	/^c01148be:	c3                   	ret    $/;"	l
c01148bf	obj/kernel.asm	/^c01148bf <hash32>:$/;"	l
c01148bf	obj/kernel.asm	/^c01148bf:	55                   	push   %ebp$/;"	l
c01148c0	obj/kernel.asm	/^c01148c0:	89 e5                	mov    %esp,%ebp$/;"	l
c01148c2	obj/kernel.asm	/^c01148c2:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01148c5	obj/kernel.asm	/^c01148c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01148c8	obj/kernel.asm	/^c01148c8:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c01148ce	obj/kernel.asm	/^c01148ce:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01148d1	obj/kernel.asm	/^c01148d1:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c01148d6	obj/kernel.asm	/^c01148d6:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c01148d9	obj/kernel.asm	/^c01148d9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01148dc	obj/kernel.asm	/^c01148dc:	89 c1                	mov    %eax,%ecx$/;"	l
c01148de	obj/kernel.asm	/^c01148de:	d3 ea                	shr    %cl,%edx$/;"	d
c01148e0	obj/kernel.asm	/^c01148e0:	89 d0                	mov    %edx,%eax$/;"	l
c01148e2	obj/kernel.asm	/^c01148e2:	c9                   	leave  $/;"	l
c01148e3	obj/kernel.asm	/^c01148e3:	c3                   	ret    $/;"	l
c01148e4	obj/kernel.asm	/^c01148e4 <printnum>:$/;"	l
c01148e4	obj/kernel.asm	/^c01148e4:	55                   	push   %ebp$/;"	l
c01148e5	obj/kernel.asm	/^c01148e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01148e7	obj/kernel.asm	/^c01148e7:	83 ec 58             	sub    $0x58,%esp$/;"	l
c01148ea	obj/kernel.asm	/^c01148ea:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01148ed	obj/kernel.asm	/^c01148ed:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01148f0	obj/kernel.asm	/^c01148f0:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01148f3	obj/kernel.asm	/^c01148f3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01148f6	obj/kernel.asm	/^c01148f6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01148f9	obj/kernel.asm	/^c01148f9:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01148fc	obj/kernel.asm	/^c01148fc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01148ff	obj/kernel.asm	/^c01148ff:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0114902	obj/kernel.asm	/^c0114902:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0114905	obj/kernel.asm	/^c0114905:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114908	obj/kernel.asm	/^c0114908:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011490b	obj/kernel.asm	/^c011490b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c011490e	obj/kernel.asm	/^c011490e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0114911	obj/kernel.asm	/^c0114911:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c0114914	obj/kernel.asm	/^c0114914:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114917	obj/kernel.asm	/^c0114917:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011491a	obj/kernel.asm	/^c011491a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011491e	obj/kernel.asm	/^c011491e:	74 1c                	je     c011493c <printnum+0x58>$/;"	l
c0114920	obj/kernel.asm	/^c0114920:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114923	obj/kernel.asm	/^c0114923:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114928	obj/kernel.asm	/^c0114928:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c011492b	obj/kernel.asm	/^c011492b:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c011492e	obj/kernel.asm	/^c011492e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114931	obj/kernel.asm	/^c0114931:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114936	obj/kernel.asm	/^c0114936:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c0114939	obj/kernel.asm	/^c0114939:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011493c	obj/kernel.asm	/^c011493c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011493f	obj/kernel.asm	/^c011493f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114942	obj/kernel.asm	/^c0114942:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c0114945	obj/kernel.asm	/^c0114945:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0114948	obj/kernel.asm	/^c0114948:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c011494b	obj/kernel.asm	/^c011494b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011494e	obj/kernel.asm	/^c011494e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0114951	obj/kernel.asm	/^c0114951:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114954	obj/kernel.asm	/^c0114954:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0114957	obj/kernel.asm	/^c0114957:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011495a	obj/kernel.asm	/^c011495a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c011495d	obj/kernel.asm	/^c011495d:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0114960	obj/kernel.asm	/^c0114960:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114965	obj/kernel.asm	/^c0114965:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0114968	obj/kernel.asm	/^c0114968:	77 64                	ja     c01149ce <printnum+0xea>$/;"	l
c011496a	obj/kernel.asm	/^c011496a:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c011496d	obj/kernel.asm	/^c011496d:	72 05                	jb     c0114974 <printnum+0x90>$/;"	l
c011496f	obj/kernel.asm	/^c011496f:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0114972	obj/kernel.asm	/^c0114972:	77 5a                	ja     c01149ce <printnum+0xea>$/;"	l
c0114974	obj/kernel.asm	/^c0114974:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c0114977	obj/kernel.asm	/^c0114977:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c011497a	obj/kernel.asm	/^c011497a:	8b 45 24             	mov    0x24(%ebp),%eax$/;"	l
c011497d	obj/kernel.asm	/^c011497d:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c0114981	obj/kernel.asm	/^c0114981:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
c0114985	obj/kernel.asm	/^c0114985:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0114988	obj/kernel.asm	/^c0114988:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c011498c	obj/kernel.asm	/^c011498c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011498f	obj/kernel.asm	/^c011498f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0114992	obj/kernel.asm	/^c0114992:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114996	obj/kernel.asm	/^c0114996:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c011499a	obj/kernel.asm	/^c011499a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011499d	obj/kernel.asm	/^c011499d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01149a1	obj/kernel.asm	/^c01149a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01149a4	obj/kernel.asm	/^c01149a4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01149a8	obj/kernel.asm	/^c01149a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01149ab	obj/kernel.asm	/^c01149ab:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149ae	obj/kernel.asm	/^c01149ae:	e8 31 ff ff ff       	call   c01148e4 <printnum>$/;"	l
c01149b3	obj/kernel.asm	/^c01149b3:	eb 23                	jmp    c01149d8 <printnum+0xf4>$/;"	l
c01149b5	obj/kernel.asm	/^c01149b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01149b8	obj/kernel.asm	/^c01149b8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01149bc	obj/kernel.asm	/^c01149bc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01149bf	obj/kernel.asm	/^c01149bf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01149c3	obj/kernel.asm	/^c01149c3:	8b 45 24             	mov    0x24(%ebp),%eax$/;"	l
c01149c6	obj/kernel.asm	/^c01149c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149c9	obj/kernel.asm	/^c01149c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01149cc	obj/kernel.asm	/^c01149cc:	ff d0                	call   *%eax$/;"	l
c01149ce	obj/kernel.asm	/^c01149ce:	83 6d 20 01          	subl   $0x1,0x20(%ebp)$/;"	l
c01149d2	obj/kernel.asm	/^c01149d2:	83 7d 20 00          	cmpl   $0x0,0x20(%ebp)$/;"	l
c01149d6	obj/kernel.asm	/^c01149d6:	7f dd                	jg     c01149b5 <printnum+0xd1>$/;"	l
c01149d8	obj/kernel.asm	/^c01149d8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01149db	obj/kernel.asm	/^c01149db:	05 24 9a 11 c0       	add    $0xc0119a24,%eax$/;"	l
c01149e0	obj/kernel.asm	/^c01149e0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01149e3	obj/kernel.asm	/^c01149e3:	0f be c0             	movsbl %al,%eax$/;"	l
c01149e6	obj/kernel.asm	/^c01149e6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01149e9	obj/kernel.asm	/^c01149e9:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01149ed	obj/kernel.asm	/^c01149ed:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01149f0	obj/kernel.asm	/^c01149f0:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01149f4	obj/kernel.asm	/^c01149f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149f7	obj/kernel.asm	/^c01149f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01149fa	obj/kernel.asm	/^c01149fa:	ff d0                	call   *%eax$/;"	l
c01149fc	obj/kernel.asm	/^c01149fc:	c9                   	leave  $/;"	l
c01149fd	obj/kernel.asm	/^c01149fd:	c3                   	ret    $/;"	l
c01149fe	obj/kernel.asm	/^c01149fe <getuint>:$/;"	l
c01149fe	obj/kernel.asm	/^c01149fe:	55                   	push   %ebp$/;"	l
c01149ff	obj/kernel.asm	/^c01149ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0114a01	obj/kernel.asm	/^c0114a01:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0114a05	obj/kernel.asm	/^c0114a05:	7e 14                	jle    c0114a1b <getuint+0x1d>$/;"	l
c0114a07	obj/kernel.asm	/^c0114a07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a0a	obj/kernel.asm	/^c0114a0a:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a0c	obj/kernel.asm	/^c0114a0c:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0114a0f	obj/kernel.asm	/^c0114a0f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114a12	obj/kernel.asm	/^c0114a12:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114a14	obj/kernel.asm	/^c0114a14:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114a17	obj/kernel.asm	/^c0114a17:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a19	obj/kernel.asm	/^c0114a19:	eb 30                	jmp    c0114a4b <getuint+0x4d>$/;"	l
c0114a1b	obj/kernel.asm	/^c0114a1b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0114a1f	obj/kernel.asm	/^c0114a1f:	74 16                	je     c0114a37 <getuint+0x39>$/;"	l
c0114a21	obj/kernel.asm	/^c0114a21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a24	obj/kernel.asm	/^c0114a24:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a26	obj/kernel.asm	/^c0114a26:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0114a29	obj/kernel.asm	/^c0114a29:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114a2c	obj/kernel.asm	/^c0114a2c:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114a2e	obj/kernel.asm	/^c0114a2e:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a30	obj/kernel.asm	/^c0114a30:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114a35	obj/kernel.asm	/^c0114a35:	eb 14                	jmp    c0114a4b <getuint+0x4d>$/;"	l
c0114a37	obj/kernel.asm	/^c0114a37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a3a	obj/kernel.asm	/^c0114a3a:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a3c	obj/kernel.asm	/^c0114a3c:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0114a3f	obj/kernel.asm	/^c0114a3f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114a42	obj/kernel.asm	/^c0114a42:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114a44	obj/kernel.asm	/^c0114a44:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a46	obj/kernel.asm	/^c0114a46:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114a4b	obj/kernel.asm	/^c0114a4b:	5d                   	pop    %ebp$/;"	l
c0114a4c	obj/kernel.asm	/^c0114a4c:	c3                   	ret    $/;"	l
c0114a4d	obj/kernel.asm	/^c0114a4d <getint>:$/;"	l
c0114a4d	obj/kernel.asm	/^c0114a4d:	55                   	push   %ebp$/;"	l
c0114a4e	obj/kernel.asm	/^c0114a4e:	89 e5                	mov    %esp,%ebp$/;"	l
c0114a50	obj/kernel.asm	/^c0114a50:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0114a54	obj/kernel.asm	/^c0114a54:	7e 14                	jle    c0114a6a <getint+0x1d>$/;"	l
c0114a56	obj/kernel.asm	/^c0114a56:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a59	obj/kernel.asm	/^c0114a59:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a5b	obj/kernel.asm	/^c0114a5b:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0114a5e	obj/kernel.asm	/^c0114a5e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114a61	obj/kernel.asm	/^c0114a61:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114a63	obj/kernel.asm	/^c0114a63:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114a66	obj/kernel.asm	/^c0114a66:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a68	obj/kernel.asm	/^c0114a68:	eb 28                	jmp    c0114a92 <getint+0x45>$/;"	l
c0114a6a	obj/kernel.asm	/^c0114a6a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0114a6e	obj/kernel.asm	/^c0114a6e:	74 12                	je     c0114a82 <getint+0x35>$/;"	l
c0114a70	obj/kernel.asm	/^c0114a70:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a73	obj/kernel.asm	/^c0114a73:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a75	obj/kernel.asm	/^c0114a75:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0114a78	obj/kernel.asm	/^c0114a78:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114a7b	obj/kernel.asm	/^c0114a7b:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114a7d	obj/kernel.asm	/^c0114a7d:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a7f	obj/kernel.asm	/^c0114a7f:	99                   	cltd   $/;"	l
c0114a80	obj/kernel.asm	/^c0114a80:	eb 10                	jmp    c0114a92 <getint+0x45>$/;"	l
c0114a82	obj/kernel.asm	/^c0114a82:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a85	obj/kernel.asm	/^c0114a85:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a87	obj/kernel.asm	/^c0114a87:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0114a8a	obj/kernel.asm	/^c0114a8a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114a8d	obj/kernel.asm	/^c0114a8d:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114a8f	obj/kernel.asm	/^c0114a8f:	8b 00                	mov    (%eax),%eax$/;"	l
c0114a91	obj/kernel.asm	/^c0114a91:	99                   	cltd   $/;"	l
c0114a92	obj/kernel.asm	/^c0114a92:	5d                   	pop    %ebp$/;"	l
c0114a93	obj/kernel.asm	/^c0114a93:	c3                   	ret    $/;"	l
c0114a94	obj/kernel.asm	/^c0114a94 <printfmt>:$/;"	l
c0114a94	obj/kernel.asm	/^c0114a94:	55                   	push   %ebp$/;"	l
c0114a95	obj/kernel.asm	/^c0114a95:	89 e5                	mov    %esp,%ebp$/;"	l
c0114a97	obj/kernel.asm	/^c0114a97:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114a9a	obj/kernel.asm	/^c0114a9a:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114a9d	obj/kernel.asm	/^c0114a9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114aa0	obj/kernel.asm	/^c0114aa0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114aa3	obj/kernel.asm	/^c0114aa3:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0114aa7	obj/kernel.asm	/^c0114aa7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114aaa	obj/kernel.asm	/^c0114aaa:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114aae	obj/kernel.asm	/^c0114aae:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114ab1	obj/kernel.asm	/^c0114ab1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114ab5	obj/kernel.asm	/^c0114ab5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114ab8	obj/kernel.asm	/^c0114ab8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114abc	obj/kernel.asm	/^c0114abc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114abf	obj/kernel.asm	/^c0114abf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114ac2	obj/kernel.asm	/^c0114ac2:	e8 02 00 00 00       	call   c0114ac9 <vprintfmt>$/;"	l
c0114ac7	obj/kernel.asm	/^c0114ac7:	c9                   	leave  $/;"	l
c0114ac8	obj/kernel.asm	/^c0114ac8:	c3                   	ret    $/;"	l
c0114ac9	obj/kernel.asm	/^c0114ac9 <vprintfmt>:$/;"	l
c0114ac9	obj/kernel.asm	/^c0114ac9:	55                   	push   %ebp$/;"	l
c0114aca	obj/kernel.asm	/^c0114aca:	89 e5                	mov    %esp,%ebp$/;"	l
c0114acc	obj/kernel.asm	/^c0114acc:	56                   	push   %esi$/;"	l
c0114acd	obj/kernel.asm	/^c0114acd:	53                   	push   %ebx$/;"	l
c0114ace	obj/kernel.asm	/^c0114ace:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0114ad1	obj/kernel.asm	/^c0114ad1:	eb 1f                	jmp    c0114af2 <vprintfmt+0x29>$/;"	l
c0114ad3	obj/kernel.asm	/^c0114ad3:	85 db                	test   %ebx,%ebx$/;"	l
c0114ad5	obj/kernel.asm	/^c0114ad5:	75 05                	jne    c0114adc <vprintfmt+0x13>$/;"	l
c0114ad7	obj/kernel.asm	/^c0114ad7:	e9 33 04 00 00       	jmp    c0114f0f <vprintfmt+0x446>$/;"	l
c0114adc	obj/kernel.asm	/^c0114adc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114adf	obj/kernel.asm	/^c0114adf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114ae3	obj/kernel.asm	/^c0114ae3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114ae6	obj/kernel.asm	/^c0114ae6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114aea	obj/kernel.asm	/^c0114aea:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0114aed	obj/kernel.asm	/^c0114aed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114af0	obj/kernel.asm	/^c0114af0:	ff d0                	call   *%eax$/;"	l
c0114af2	obj/kernel.asm	/^c0114af2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114af5	obj/kernel.asm	/^c0114af5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0114af8	obj/kernel.asm	/^c0114af8:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0114afb	obj/kernel.asm	/^c0114afb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114afe	obj/kernel.asm	/^c0114afe:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0114b01	obj/kernel.asm	/^c0114b01:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c0114b04	obj/kernel.asm	/^c0114b04:	75 cd                	jne    c0114ad3 <vprintfmt+0xa>$/;"	l
c0114b06	obj/kernel.asm	/^c0114b06:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c0114b0a	obj/kernel.asm	/^c0114b0a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0114b11	obj/kernel.asm	/^c0114b11:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114b14	obj/kernel.asm	/^c0114b14:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114b17	obj/kernel.asm	/^c0114b17:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0114b1e	obj/kernel.asm	/^c0114b1e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114b21	obj/kernel.asm	/^c0114b21:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0114b24	obj/kernel.asm	/^c0114b24:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114b27	obj/kernel.asm	/^c0114b27:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0114b2a	obj/kernel.asm	/^c0114b2a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0114b2d	obj/kernel.asm	/^c0114b2d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114b30	obj/kernel.asm	/^c0114b30:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0114b33	obj/kernel.asm	/^c0114b33:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c0114b36	obj/kernel.asm	/^c0114b36:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c0114b39	obj/kernel.asm	/^c0114b39:	0f 87 98 03 00 00    	ja     c0114ed7 <vprintfmt+0x40e>$/;"	l
c0114b3f	obj/kernel.asm	/^c0114b3f:	8b 04 85 48 9a 11 c0 	mov    -0x3fee65b8(,%eax,4),%eax$/;"	l
c0114b46	obj/kernel.asm	/^c0114b46:	ff e0                	jmp    *%eax$/;"	l
c0114b48	obj/kernel.asm	/^c0114b48:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c0114b4c	obj/kernel.asm	/^c0114b4c:	eb d6                	jmp    c0114b24 <vprintfmt+0x5b>$/;"	l
c0114b4e	obj/kernel.asm	/^c0114b4e:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c0114b52	obj/kernel.asm	/^c0114b52:	eb d0                	jmp    c0114b24 <vprintfmt+0x5b>$/;"	l
c0114b54	obj/kernel.asm	/^c0114b54:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0114b5b	obj/kernel.asm	/^c0114b5b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0114b5e	obj/kernel.asm	/^c0114b5e:	89 d0                	mov    %edx,%eax$/;"	l
c0114b60	obj/kernel.asm	/^c0114b60:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0114b63	obj/kernel.asm	/^c0114b63:	01 d0                	add    %edx,%eax$/;"	l
c0114b65	obj/kernel.asm	/^c0114b65:	01 c0                	add    %eax,%eax$/;"	l
c0114b67	obj/kernel.asm	/^c0114b67:	01 d8                	add    %ebx,%eax$/;"	l
c0114b69	obj/kernel.asm	/^c0114b69:	83 e8 30             	sub    $0x30,%eax$/;"	l
c0114b6c	obj/kernel.asm	/^c0114b6c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114b6f	obj/kernel.asm	/^c0114b6f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114b72	obj/kernel.asm	/^c0114b72:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114b75	obj/kernel.asm	/^c0114b75:	0f be d8             	movsbl %al,%ebx$/;"	l
c0114b78	obj/kernel.asm	/^c0114b78:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c0114b7b	obj/kernel.asm	/^c0114b7b:	7e 0b                	jle    c0114b88 <vprintfmt+0xbf>$/;"	l
c0114b7d	obj/kernel.asm	/^c0114b7d:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c0114b80	obj/kernel.asm	/^c0114b80:	7f 06                	jg     c0114b88 <vprintfmt+0xbf>$/;"	l
c0114b82	obj/kernel.asm	/^c0114b82:	83 45 14 01          	addl   $0x1,0x14(%ebp)$/;"	l
c0114b86	obj/kernel.asm	/^c0114b86:	eb d3                	jmp    c0114b5b <vprintfmt+0x92>$/;"	l
c0114b88	obj/kernel.asm	/^c0114b88:	eb 33                	jmp    c0114bbd <vprintfmt+0xf4>$/;"	l
c0114b8a	obj/kernel.asm	/^c0114b8a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114b8d	obj/kernel.asm	/^c0114b8d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114b90	obj/kernel.asm	/^c0114b90:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114b93	obj/kernel.asm	/^c0114b93:	8b 00                	mov    (%eax),%eax$/;"	l
c0114b95	obj/kernel.asm	/^c0114b95:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114b98	obj/kernel.asm	/^c0114b98:	eb 23                	jmp    c0114bbd <vprintfmt+0xf4>$/;"	l
c0114b9a	obj/kernel.asm	/^c0114b9a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114b9e	obj/kernel.asm	/^c0114b9e:	79 0c                	jns    c0114bac <vprintfmt+0xe3>$/;"	l
c0114ba0	obj/kernel.asm	/^c0114ba0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0114ba7	obj/kernel.asm	/^c0114ba7:	e9 78 ff ff ff       	jmp    c0114b24 <vprintfmt+0x5b>$/;"	l
c0114bac	obj/kernel.asm	/^c0114bac:	e9 73 ff ff ff       	jmp    c0114b24 <vprintfmt+0x5b>$/;"	l
c0114bb1	obj/kernel.asm	/^c0114bb1:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c0114bb8	obj/kernel.asm	/^c0114bb8:	e9 67 ff ff ff       	jmp    c0114b24 <vprintfmt+0x5b>$/;"	l
c0114bbd	obj/kernel.asm	/^c0114bbd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114bc1	obj/kernel.asm	/^c0114bc1:	79 12                	jns    c0114bd5 <vprintfmt+0x10c>$/;"	l
c0114bc3	obj/kernel.asm	/^c0114bc3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114bc6	obj/kernel.asm	/^c0114bc6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114bc9	obj/kernel.asm	/^c0114bc9:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0114bd0	obj/kernel.asm	/^c0114bd0:	e9 4f ff ff ff       	jmp    c0114b24 <vprintfmt+0x5b>$/;"	l
c0114bd5	obj/kernel.asm	/^c0114bd5:	e9 4a ff ff ff       	jmp    c0114b24 <vprintfmt+0x5b>$/;"	l
c0114bda	obj/kernel.asm	/^c0114bda:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c0114bde	obj/kernel.asm	/^c0114bde:	e9 41 ff ff ff       	jmp    c0114b24 <vprintfmt+0x5b>$/;"	l
c0114be3	obj/kernel.asm	/^c0114be3:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114be6	obj/kernel.asm	/^c0114be6:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114be9	obj/kernel.asm	/^c0114be9:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114bec	obj/kernel.asm	/^c0114bec:	8b 00                	mov    (%eax),%eax$/;"	l
c0114bee	obj/kernel.asm	/^c0114bee:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114bf1	obj/kernel.asm	/^c0114bf1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0114bf5	obj/kernel.asm	/^c0114bf5:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0114bf8	obj/kernel.asm	/^c0114bf8:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114bfc	obj/kernel.asm	/^c0114bfc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114bff	obj/kernel.asm	/^c0114bff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114c02	obj/kernel.asm	/^c0114c02:	ff d0                	call   *%eax$/;"	l
c0114c04	obj/kernel.asm	/^c0114c04:	e9 00 03 00 00       	jmp    c0114f09 <vprintfmt+0x440>$/;"	l
c0114c09	obj/kernel.asm	/^c0114c09:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114c0c	obj/kernel.asm	/^c0114c0c:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114c0f	obj/kernel.asm	/^c0114c0f:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114c12	obj/kernel.asm	/^c0114c12:	8b 18                	mov    (%eax),%ebx$/;"	l
c0114c14	obj/kernel.asm	/^c0114c14:	85 db                	test   %ebx,%ebx$/;"	l
c0114c16	obj/kernel.asm	/^c0114c16:	79 02                	jns    c0114c1a <vprintfmt+0x151>$/;"	l
c0114c18	obj/kernel.asm	/^c0114c18:	f7 db                	neg    %ebx$/;"	l
c0114c1a	obj/kernel.asm	/^c0114c1a:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c0114c1d	obj/kernel.asm	/^c0114c1d:	7f 0b                	jg     c0114c2a <vprintfmt+0x161>$/;"	l
c0114c1f	obj/kernel.asm	/^c0114c1f:	8b 34 9d c0 99 11 c0 	mov    -0x3fee6640(,%ebx,4),%esi$/;"	l
c0114c26	obj/kernel.asm	/^c0114c26:	85 f6                	test   %esi,%esi$/;"	l
c0114c28	obj/kernel.asm	/^c0114c28:	75 2a                	jne    c0114c54 <vprintfmt+0x18b>$/;"	l
c0114c2a	obj/kernel.asm	/^c0114c2a:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
c0114c2e	obj/kernel.asm	/^c0114c2e:	c7 44 24 0c 35 9a 11 	movl   $0xc0119a35,0xc(%esp)$/;"	l
c0114c35	obj/kernel.asm	/^c0114c35:	c0 $/;"	l
c0114c36	obj/kernel.asm	/^c0114c36:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114c39	obj/kernel.asm	/^c0114c39:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114c3d	obj/kernel.asm	/^c0114c3d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114c40	obj/kernel.asm	/^c0114c40:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114c44	obj/kernel.asm	/^c0114c44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114c47	obj/kernel.asm	/^c0114c47:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114c4a	obj/kernel.asm	/^c0114c4a:	e8 45 fe ff ff       	call   c0114a94 <printfmt>$/;"	l
c0114c4f	obj/kernel.asm	/^c0114c4f:	e9 b5 02 00 00       	jmp    c0114f09 <vprintfmt+0x440>$/;"	l
c0114c54	obj/kernel.asm	/^c0114c54:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0114c58	obj/kernel.asm	/^c0114c58:	c7 44 24 0c 3e 9a 11 	movl   $0xc0119a3e,0xc(%esp)$/;"	l
c0114c5f	obj/kernel.asm	/^c0114c5f:	c0 $/;"	l
c0114c60	obj/kernel.asm	/^c0114c60:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114c63	obj/kernel.asm	/^c0114c63:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114c67	obj/kernel.asm	/^c0114c67:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114c6a	obj/kernel.asm	/^c0114c6a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114c6e	obj/kernel.asm	/^c0114c6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114c71	obj/kernel.asm	/^c0114c71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114c74	obj/kernel.asm	/^c0114c74:	e8 1b fe ff ff       	call   c0114a94 <printfmt>$/;"	l
c0114c79	obj/kernel.asm	/^c0114c79:	e9 8b 02 00 00       	jmp    c0114f09 <vprintfmt+0x440>$/;"	l
c0114c7e	obj/kernel.asm	/^c0114c7e:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114c81	obj/kernel.asm	/^c0114c81:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114c84	obj/kernel.asm	/^c0114c84:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114c87	obj/kernel.asm	/^c0114c87:	8b 30                	mov    (%eax),%esi$/;"	l
c0114c89	obj/kernel.asm	/^c0114c89:	85 f6                	test   %esi,%esi$/;"	l
c0114c8b	obj/kernel.asm	/^c0114c8b:	75 05                	jne    c0114c92 <vprintfmt+0x1c9>$/;"	l
c0114c8d	obj/kernel.asm	/^c0114c8d:	be 41 9a 11 c0       	mov    $0xc0119a41,%esi$/;"	l
c0114c92	obj/kernel.asm	/^c0114c92:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114c96	obj/kernel.asm	/^c0114c96:	7e 45                	jle    c0114cdd <vprintfmt+0x214>$/;"	l
c0114c98	obj/kernel.asm	/^c0114c98:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c0114c9c	obj/kernel.asm	/^c0114c9c:	74 3f                	je     c0114cdd <vprintfmt+0x214>$/;"	l
c0114c9e	obj/kernel.asm	/^c0114c9e:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
c0114ca1	obj/kernel.asm	/^c0114ca1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114ca4	obj/kernel.asm	/^c0114ca4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114ca8	obj/kernel.asm	/^c0114ca8:	89 34 24             	mov    %esi,(%esp)$/;"	l
c0114cab	obj/kernel.asm	/^c0114cab:	e8 3b 04 00 00       	call   c01150eb <strnlen>$/;"	l
c0114cb0	obj/kernel.asm	/^c0114cb0:	29 c3                	sub    %eax,%ebx$/;"	l
c0114cb2	obj/kernel.asm	/^c0114cb2:	89 d8                	mov    %ebx,%eax$/;"	l
c0114cb4	obj/kernel.asm	/^c0114cb4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114cb7	obj/kernel.asm	/^c0114cb7:	eb 1e                	jmp    c0114cd7 <vprintfmt+0x20e>$/;"	l
c0114cb9	obj/kernel.asm	/^c0114cb9:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c0114cbd	obj/kernel.asm	/^c0114cbd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114cc0	obj/kernel.asm	/^c0114cc0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0114cc4	obj/kernel.asm	/^c0114cc4:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0114cc7	obj/kernel.asm	/^c0114cc7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114ccb	obj/kernel.asm	/^c0114ccb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114cce	obj/kernel.asm	/^c0114cce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114cd1	obj/kernel.asm	/^c0114cd1:	ff d0                	call   *%eax$/;"	l
c0114cd3	obj/kernel.asm	/^c0114cd3:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0114cd7	obj/kernel.asm	/^c0114cd7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114cdb	obj/kernel.asm	/^c0114cdb:	7f dc                	jg     c0114cb9 <vprintfmt+0x1f0>$/;"	l
c0114cdd	obj/kernel.asm	/^c0114cdd:	eb 46                	jmp    c0114d25 <vprintfmt+0x25c>$/;"	l
c0114cdf	obj/kernel.asm	/^c0114cdf:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0114ce3	obj/kernel.asm	/^c0114ce3:	74 26                	je     c0114d0b <vprintfmt+0x242>$/;"	l
c0114ce5	obj/kernel.asm	/^c0114ce5:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c0114ce8	obj/kernel.asm	/^c0114ce8:	7e 05                	jle    c0114cef <vprintfmt+0x226>$/;"	l
c0114cea	obj/kernel.asm	/^c0114cea:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c0114ced	obj/kernel.asm	/^c0114ced:	7e 1c                	jle    c0114d0b <vprintfmt+0x242>$/;"	l
c0114cef	obj/kernel.asm	/^c0114cef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114cf2	obj/kernel.asm	/^c0114cf2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114cf6	obj/kernel.asm	/^c0114cf6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114cf9	obj/kernel.asm	/^c0114cf9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114cfd	obj/kernel.asm	/^c0114cfd:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
c0114d04	obj/kernel.asm	/^c0114d04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114d07	obj/kernel.asm	/^c0114d07:	ff d0                	call   *%eax$/;"	l
c0114d09	obj/kernel.asm	/^c0114d09:	eb 16                	jmp    c0114d21 <vprintfmt+0x258>$/;"	l
c0114d0b	obj/kernel.asm	/^c0114d0b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114d0e	obj/kernel.asm	/^c0114d0e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114d12	obj/kernel.asm	/^c0114d12:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114d15	obj/kernel.asm	/^c0114d15:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114d19	obj/kernel.asm	/^c0114d19:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0114d1c	obj/kernel.asm	/^c0114d1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114d1f	obj/kernel.asm	/^c0114d1f:	ff d0                	call   *%eax$/;"	l
c0114d21	obj/kernel.asm	/^c0114d21:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0114d25	obj/kernel.asm	/^c0114d25:	89 f0                	mov    %esi,%eax$/;"	l
c0114d27	obj/kernel.asm	/^c0114d27:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c0114d2a	obj/kernel.asm	/^c0114d2a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114d2d	obj/kernel.asm	/^c0114d2d:	0f be d8             	movsbl %al,%ebx$/;"	l
c0114d30	obj/kernel.asm	/^c0114d30:	85 db                	test   %ebx,%ebx$/;"	l
c0114d32	obj/kernel.asm	/^c0114d32:	74 10                	je     c0114d44 <vprintfmt+0x27b>$/;"	l
c0114d34	obj/kernel.asm	/^c0114d34:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114d38	obj/kernel.asm	/^c0114d38:	78 a5                	js     c0114cdf <vprintfmt+0x216>$/;"	l
c0114d3a	obj/kernel.asm	/^c0114d3a:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c0114d3e	obj/kernel.asm	/^c0114d3e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114d42	obj/kernel.asm	/^c0114d42:	79 9b                	jns    c0114cdf <vprintfmt+0x216>$/;"	l
c0114d44	obj/kernel.asm	/^c0114d44:	eb 1e                	jmp    c0114d64 <vprintfmt+0x29b>$/;"	l
c0114d46	obj/kernel.asm	/^c0114d46:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114d49	obj/kernel.asm	/^c0114d49:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114d4d	obj/kernel.asm	/^c0114d4d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114d50	obj/kernel.asm	/^c0114d50:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114d54	obj/kernel.asm	/^c0114d54:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0114d5b	obj/kernel.asm	/^c0114d5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114d5e	obj/kernel.asm	/^c0114d5e:	ff d0                	call   *%eax$/;"	l
c0114d60	obj/kernel.asm	/^c0114d60:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0114d64	obj/kernel.asm	/^c0114d64:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114d68	obj/kernel.asm	/^c0114d68:	7f dc                	jg     c0114d46 <vprintfmt+0x27d>$/;"	l
c0114d6a	obj/kernel.asm	/^c0114d6a:	e9 9a 01 00 00       	jmp    c0114f09 <vprintfmt+0x440>$/;"	l
c0114d6f	obj/kernel.asm	/^c0114d6f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114d72	obj/kernel.asm	/^c0114d72:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114d76	obj/kernel.asm	/^c0114d76:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114d79	obj/kernel.asm	/^c0114d79:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114d7c	obj/kernel.asm	/^c0114d7c:	e8 cc fc ff ff       	call   c0114a4d <getint>$/;"	l
c0114d81	obj/kernel.asm	/^c0114d81:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114d84	obj/kernel.asm	/^c0114d84:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114d87	obj/kernel.asm	/^c0114d87:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114d8a	obj/kernel.asm	/^c0114d8a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114d8d	obj/kernel.asm	/^c0114d8d:	85 d2                	test   %edx,%edx$/;"	l
c0114d8f	obj/kernel.asm	/^c0114d8f:	79 2d                	jns    c0114dbe <vprintfmt+0x2f5>$/;"	l
c0114d91	obj/kernel.asm	/^c0114d91:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114d94	obj/kernel.asm	/^c0114d94:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114d98	obj/kernel.asm	/^c0114d98:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114d9b	obj/kernel.asm	/^c0114d9b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114d9f	obj/kernel.asm	/^c0114d9f:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
c0114da6	obj/kernel.asm	/^c0114da6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114da9	obj/kernel.asm	/^c0114da9:	ff d0                	call   *%eax$/;"	l
c0114dab	obj/kernel.asm	/^c0114dab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114dae	obj/kernel.asm	/^c0114dae:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114db1	obj/kernel.asm	/^c0114db1:	f7 d8                	neg    %eax$/;"	l
c0114db3	obj/kernel.asm	/^c0114db3:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0114db6	obj/kernel.asm	/^c0114db6:	f7 da                	neg    %edx$/;"	l
c0114db8	obj/kernel.asm	/^c0114db8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114dbb	obj/kernel.asm	/^c0114dbb:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114dbe	obj/kernel.asm	/^c0114dbe:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0114dc5	obj/kernel.asm	/^c0114dc5:	e9 b6 00 00 00       	jmp    c0114e80 <vprintfmt+0x3b7>$/;"	l
c0114dca	obj/kernel.asm	/^c0114dca:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114dcd	obj/kernel.asm	/^c0114dcd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114dd1	obj/kernel.asm	/^c0114dd1:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114dd4	obj/kernel.asm	/^c0114dd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114dd7	obj/kernel.asm	/^c0114dd7:	e8 22 fc ff ff       	call   c01149fe <getuint>$/;"	l
c0114ddc	obj/kernel.asm	/^c0114ddc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114ddf	obj/kernel.asm	/^c0114ddf:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114de2	obj/kernel.asm	/^c0114de2:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0114de9	obj/kernel.asm	/^c0114de9:	e9 92 00 00 00       	jmp    c0114e80 <vprintfmt+0x3b7>$/;"	l
c0114dee	obj/kernel.asm	/^c0114dee:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114df1	obj/kernel.asm	/^c0114df1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114df5	obj/kernel.asm	/^c0114df5:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114df8	obj/kernel.asm	/^c0114df8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114dfb	obj/kernel.asm	/^c0114dfb:	e8 fe fb ff ff       	call   c01149fe <getuint>$/;"	l
c0114e00	obj/kernel.asm	/^c0114e00:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114e03	obj/kernel.asm	/^c0114e03:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114e06	obj/kernel.asm	/^c0114e06:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c0114e0d	obj/kernel.asm	/^c0114e0d:	eb 71                	jmp    c0114e80 <vprintfmt+0x3b7>$/;"	l
c0114e0f	obj/kernel.asm	/^c0114e0f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114e12	obj/kernel.asm	/^c0114e12:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114e16	obj/kernel.asm	/^c0114e16:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114e19	obj/kernel.asm	/^c0114e19:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114e1d	obj/kernel.asm	/^c0114e1d:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
c0114e24	obj/kernel.asm	/^c0114e24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114e27	obj/kernel.asm	/^c0114e27:	ff d0                	call   *%eax$/;"	l
c0114e29	obj/kernel.asm	/^c0114e29:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114e2c	obj/kernel.asm	/^c0114e2c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114e30	obj/kernel.asm	/^c0114e30:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114e33	obj/kernel.asm	/^c0114e33:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114e37	obj/kernel.asm	/^c0114e37:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
c0114e3e	obj/kernel.asm	/^c0114e3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114e41	obj/kernel.asm	/^c0114e41:	ff d0                	call   *%eax$/;"	l
c0114e43	obj/kernel.asm	/^c0114e43:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0114e46	obj/kernel.asm	/^c0114e46:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0114e49	obj/kernel.asm	/^c0114e49:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0114e4c	obj/kernel.asm	/^c0114e4c:	8b 00                	mov    (%eax),%eax$/;"	l
c0114e4e	obj/kernel.asm	/^c0114e4e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114e51	obj/kernel.asm	/^c0114e51:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0114e58	obj/kernel.asm	/^c0114e58:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0114e5f	obj/kernel.asm	/^c0114e5f:	eb 1f                	jmp    c0114e80 <vprintfmt+0x3b7>$/;"	l
c0114e61	obj/kernel.asm	/^c0114e61:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114e64	obj/kernel.asm	/^c0114e64:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114e68	obj/kernel.asm	/^c0114e68:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0114e6b	obj/kernel.asm	/^c0114e6b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114e6e	obj/kernel.asm	/^c0114e6e:	e8 8b fb ff ff       	call   c01149fe <getuint>$/;"	l
c0114e73	obj/kernel.asm	/^c0114e73:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114e76	obj/kernel.asm	/^c0114e76:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0114e79	obj/kernel.asm	/^c0114e79:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0114e80	obj/kernel.asm	/^c0114e80:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c0114e84	obj/kernel.asm	/^c0114e84:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114e87	obj/kernel.asm	/^c0114e87:	89 54 24 1c          	mov    %edx,0x1c(%esp)$/;"	l
c0114e8b	obj/kernel.asm	/^c0114e8b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0114e8e	obj/kernel.asm	/^c0114e8e:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
c0114e92	obj/kernel.asm	/^c0114e92:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0114e96	obj/kernel.asm	/^c0114e96:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114e99	obj/kernel.asm	/^c0114e99:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114e9c	obj/kernel.asm	/^c0114e9c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114ea0	obj/kernel.asm	/^c0114ea0:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0114ea4	obj/kernel.asm	/^c0114ea4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114ea7	obj/kernel.asm	/^c0114ea7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114eab	obj/kernel.asm	/^c0114eab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114eae	obj/kernel.asm	/^c0114eae:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114eb2	obj/kernel.asm	/^c0114eb2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114eb5	obj/kernel.asm	/^c0114eb5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114eb8	obj/kernel.asm	/^c0114eb8:	e8 27 fa ff ff       	call   c01148e4 <printnum>$/;"	l
c0114ebd	obj/kernel.asm	/^c0114ebd:	eb 4a                	jmp    c0114f09 <vprintfmt+0x440>$/;"	l
c0114ebf	obj/kernel.asm	/^c0114ebf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114ec2	obj/kernel.asm	/^c0114ec2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114ec6	obj/kernel.asm	/^c0114ec6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114ec9	obj/kernel.asm	/^c0114ec9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114ecd	obj/kernel.asm	/^c0114ecd:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0114ed0	obj/kernel.asm	/^c0114ed0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114ed3	obj/kernel.asm	/^c0114ed3:	ff d0                	call   *%eax$/;"	l
c0114ed5	obj/kernel.asm	/^c0114ed5:	eb 32                	jmp    c0114f09 <vprintfmt+0x440>$/;"	l
c0114ed7	obj/kernel.asm	/^c0114ed7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114eda	obj/kernel.asm	/^c0114eda:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114ede	obj/kernel.asm	/^c0114ede:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114ee1	obj/kernel.asm	/^c0114ee1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114ee5	obj/kernel.asm	/^c0114ee5:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
c0114eec	obj/kernel.asm	/^c0114eec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114eef	obj/kernel.asm	/^c0114eef:	ff d0                	call   *%eax$/;"	l
c0114ef1	obj/kernel.asm	/^c0114ef1:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0114ef5	obj/kernel.asm	/^c0114ef5:	eb 04                	jmp    c0114efb <vprintfmt+0x432>$/;"	l
c0114ef7	obj/kernel.asm	/^c0114ef7:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0114efb	obj/kernel.asm	/^c0114efb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114efe	obj/kernel.asm	/^c0114efe:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0114f01	obj/kernel.asm	/^c0114f01:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114f04	obj/kernel.asm	/^c0114f04:	3c 25                	cmp    $0x25,%al$/;"	l
c0114f06	obj/kernel.asm	/^c0114f06:	75 ef                	jne    c0114ef7 <vprintfmt+0x42e>$/;"	l
c0114f08	obj/kernel.asm	/^c0114f08:	90                   	nop$/;"	l
c0114f09	obj/kernel.asm	/^c0114f09:	90                   	nop$/;"	l
c0114f0a	obj/kernel.asm	/^c0114f0a:	e9 e3 fb ff ff       	jmp    c0114af2 <vprintfmt+0x29>$/;"	l
c0114f0f	obj/kernel.asm	/^c0114f0f:	83 c4 40             	add    $0x40,%esp$/;"	l
c0114f12	obj/kernel.asm	/^c0114f12:	5b                   	pop    %ebx$/;"	l
c0114f13	obj/kernel.asm	/^c0114f13:	5e                   	pop    %esi$/;"	l
c0114f14	obj/kernel.asm	/^c0114f14:	5d                   	pop    %ebp$/;"	l
c0114f15	obj/kernel.asm	/^c0114f15:	c3                   	ret    $/;"	l
c0114f16	obj/kernel.asm	/^c0114f16 <sprintputch>:$/;"	l
c0114f16	obj/kernel.asm	/^c0114f16:	55                   	push   %ebp$/;"	l
c0114f17	obj/kernel.asm	/^c0114f17:	89 e5                	mov    %esp,%ebp$/;"	l
c0114f19	obj/kernel.asm	/^c0114f19:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f1c	obj/kernel.asm	/^c0114f1c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0114f1f	obj/kernel.asm	/^c0114f1f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0114f22	obj/kernel.asm	/^c0114f22:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f25	obj/kernel.asm	/^c0114f25:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0114f28	obj/kernel.asm	/^c0114f28:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f2b	obj/kernel.asm	/^c0114f2b:	8b 10                	mov    (%eax),%edx$/;"	l
c0114f2d	obj/kernel.asm	/^c0114f2d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f30	obj/kernel.asm	/^c0114f30:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0114f33	obj/kernel.asm	/^c0114f33:	39 c2                	cmp    %eax,%edx$/;"	l
c0114f35	obj/kernel.asm	/^c0114f35:	73 12                	jae    c0114f49 <sprintputch+0x33>$/;"	l
c0114f37	obj/kernel.asm	/^c0114f37:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f3a	obj/kernel.asm	/^c0114f3a:	8b 00                	mov    (%eax),%eax$/;"	l
c0114f3c	obj/kernel.asm	/^c0114f3c:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0114f3f	obj/kernel.asm	/^c0114f3f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114f42	obj/kernel.asm	/^c0114f42:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0114f44	obj/kernel.asm	/^c0114f44:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114f47	obj/kernel.asm	/^c0114f47:	88 10                	mov    %dl,(%eax)$/;"	l
c0114f49	obj/kernel.asm	/^c0114f49:	5d                   	pop    %ebp$/;"	l
c0114f4a	obj/kernel.asm	/^c0114f4a:	c3                   	ret    $/;"	l
c0114f4b	obj/kernel.asm	/^c0114f4b <snprintf>:$/;"	l
c0114f4b	obj/kernel.asm	/^c0114f4b:	55                   	push   %ebp$/;"	l
c0114f4c	obj/kernel.asm	/^c0114f4c:	89 e5                	mov    %esp,%ebp$/;"	l
c0114f4e	obj/kernel.asm	/^c0114f4e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0114f51	obj/kernel.asm	/^c0114f51:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0114f54	obj/kernel.asm	/^c0114f54:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114f57	obj/kernel.asm	/^c0114f57:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114f5a	obj/kernel.asm	/^c0114f5a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114f5e	obj/kernel.asm	/^c0114f5e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114f61	obj/kernel.asm	/^c0114f61:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114f65	obj/kernel.asm	/^c0114f65:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f68	obj/kernel.asm	/^c0114f68:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114f6c	obj/kernel.asm	/^c0114f6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114f6f	obj/kernel.asm	/^c0114f6f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114f72	obj/kernel.asm	/^c0114f72:	e8 08 00 00 00       	call   c0114f7f <vsnprintf>$/;"	l
c0114f77	obj/kernel.asm	/^c0114f77:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114f7a	obj/kernel.asm	/^c0114f7a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114f7d	obj/kernel.asm	/^c0114f7d:	c9                   	leave  $/;"	l
c0114f7e	obj/kernel.asm	/^c0114f7e:	c3                   	ret    $/;"	l
c0114f7f	obj/kernel.asm	/^c0114f7f <vsnprintf>:$/;"	l
c0114f7f	obj/kernel.asm	/^c0114f7f:	55                   	push   %ebp$/;"	l
c0114f80	obj/kernel.asm	/^c0114f80:	89 e5                	mov    %esp,%ebp$/;"	l
c0114f82	obj/kernel.asm	/^c0114f82:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114f85	obj/kernel.asm	/^c0114f85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114f88	obj/kernel.asm	/^c0114f88:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0114f8b	obj/kernel.asm	/^c0114f8b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114f8e	obj/kernel.asm	/^c0114f8e:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0114f91	obj/kernel.asm	/^c0114f91:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114f94	obj/kernel.asm	/^c0114f94:	01 d0                	add    %edx,%eax$/;"	l
c0114f96	obj/kernel.asm	/^c0114f96:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114f99	obj/kernel.asm	/^c0114f99:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0114fa0	obj/kernel.asm	/^c0114fa0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0114fa4	obj/kernel.asm	/^c0114fa4:	74 0a                	je     c0114fb0 <vsnprintf+0x31>$/;"	l
c0114fa6	obj/kernel.asm	/^c0114fa6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0114fa9	obj/kernel.asm	/^c0114fa9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114fac	obj/kernel.asm	/^c0114fac:	39 c2                	cmp    %eax,%edx$/;"	l
c0114fae	obj/kernel.asm	/^c0114fae:	76 07                	jbe    c0114fb7 <vsnprintf+0x38>$/;"	l
c0114fb0	obj/kernel.asm	/^c0114fb0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0114fb5	obj/kernel.asm	/^c0114fb5:	eb 32                	jmp    c0114fe9 <vsnprintf+0x6a>$/;"	l
c0114fb7	obj/kernel.asm	/^c0114fb7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114fba	obj/kernel.asm	/^c0114fba:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0114fbe	obj/kernel.asm	/^c0114fbe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114fc1	obj/kernel.asm	/^c0114fc1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114fc5	obj/kernel.asm	/^c0114fc5:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0114fc8	obj/kernel.asm	/^c0114fc8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114fcc	obj/kernel.asm	/^c0114fcc:	c7 44 24 04 d9 6a ff 	movl   $0xffff6ad9,0x4(%esp)$/;"	l
c0114fd3	obj/kernel.asm	/^c0114fd3:	ff $/;"	l
c0114fd4	obj/kernel.asm	/^c0114fd4:	c7 04 24 16 4f 11 c0 	movl   $0xc0114f16,(%esp)$/;"	l
c0114fdb	obj/kernel.asm	/^c0114fdb:	e8 e9 fa ff ff       	call   c0114ac9 <vprintfmt>$/;"	l
c0114fe0	obj/kernel.asm	/^c0114fe0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114fe3	obj/kernel.asm	/^c0114fe3:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0114fe6	obj/kernel.asm	/^c0114fe6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114fe9	obj/kernel.asm	/^c0114fe9:	c9                   	leave  $/;"	l
c0114fea	obj/kernel.asm	/^c0114fea:	c3                   	ret    $/;"	l
c0114feb	obj/kernel.asm	/^c0114feb <rand>:$/;"	l
c0114feb	obj/kernel.asm	/^c0114feb:	55                   	push   %ebp$/;"	l
c0114fec	obj/kernel.asm	/^c0114fec:	89 e5                	mov    %esp,%ebp$/;"	l
c0114fee	obj/kernel.asm	/^c0114fee:	57                   	push   %edi$/;"	l
c0114fef	obj/kernel.asm	/^c0114fef:	56                   	push   %esi$/;"	l
c0114ff0	obj/kernel.asm	/^c0114ff0:	53                   	push   %ebx$/;"	l
c0114ff1	obj/kernel.asm	/^c0114ff1:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0114ff4	obj/kernel.asm	/^c0114ff4:	a1 c8 ee 14 c0       	mov    0xc014eec8,%eax$/;"	l
c0114ff9	obj/kernel.asm	/^c0114ff9:	8b 15 cc ee 14 c0    	mov    0xc014eecc,%edx$/;"	l
c0114fff	obj/kernel.asm	/^c0114fff:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c0115005	obj/kernel.asm	/^c0115005:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c0115008	obj/kernel.asm	/^c0115008:	01 f7                	add    %esi,%edi$/;"	l
c011500a	obj/kernel.asm	/^c011500a:	be 6d e6 ec de       	mov    $0xdeece66d,%esi$/;"	l
c011500f	obj/kernel.asm	/^c011500f:	f7 e6                	mul    %esi$/;"	l
c0115011	obj/kernel.asm	/^c0115011:	8d 34 17             	lea    (%edi,%edx,1),%esi$/;"	l
c0115014	obj/kernel.asm	/^c0115014:	89 f2                	mov    %esi,%edx$/;"	l
c0115016	obj/kernel.asm	/^c0115016:	83 c0 0b             	add    $0xb,%eax$/;"	l
c0115019	obj/kernel.asm	/^c0115019:	83 d2 00             	adc    $0x0,%edx$/;"	l
c011501c	obj/kernel.asm	/^c011501c:	89 c7                	mov    %eax,%edi$/;"	l
c011501e	obj/kernel.asm	/^c011501e:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c0115021	obj/kernel.asm	/^c0115021:	89 f9                	mov    %edi,%ecx$/;"	l
c0115023	obj/kernel.asm	/^c0115023:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c0115026	obj/kernel.asm	/^c0115026:	89 0d c8 ee 14 c0    	mov    %ecx,0xc014eec8$/;"	l
c011502c	obj/kernel.asm	/^c011502c:	89 1d cc ee 14 c0    	mov    %ebx,0xc014eecc$/;"	l
c0115032	obj/kernel.asm	/^c0115032:	a1 c8 ee 14 c0       	mov    0xc014eec8,%eax$/;"	l
c0115037	obj/kernel.asm	/^c0115037:	8b 15 cc ee 14 c0    	mov    0xc014eecc,%edx$/;"	l
c011503d	obj/kernel.asm	/^c011503d:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0115041	obj/kernel.asm	/^c0115041:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0115044	obj/kernel.asm	/^c0115044:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0115047	obj/kernel.asm	/^c0115047:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c011504a	obj/kernel.asm	/^c011504a:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c0115051	obj/kernel.asm	/^c0115051:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0115054	obj/kernel.asm	/^c0115054:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0115057	obj/kernel.asm	/^c0115057:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c011505a	obj/kernel.asm	/^c011505a:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c011505d	obj/kernel.asm	/^c011505d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0115060	obj/kernel.asm	/^c0115060:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0115063	obj/kernel.asm	/^c0115063:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0115067	obj/kernel.asm	/^c0115067:	74 1c                	je     c0115085 <rand+0x9a>$/;"	l
c0115069	obj/kernel.asm	/^c0115069:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011506c	obj/kernel.asm	/^c011506c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0115071	obj/kernel.asm	/^c0115071:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c0115074	obj/kernel.asm	/^c0115074:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0115077	obj/kernel.asm	/^c0115077:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011507a	obj/kernel.asm	/^c011507a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011507f	obj/kernel.asm	/^c011507f:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c0115082	obj/kernel.asm	/^c0115082:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0115085	obj/kernel.asm	/^c0115085:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0115088	obj/kernel.asm	/^c0115088:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c011508b	obj/kernel.asm	/^c011508b:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c011508e	obj/kernel.asm	/^c011508e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0115091	obj/kernel.asm	/^c0115091:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0115094	obj/kernel.asm	/^c0115094:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0115097	obj/kernel.asm	/^c0115097:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011509a	obj/kernel.asm	/^c011509a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011509d	obj/kernel.asm	/^c011509d:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01150a0	obj/kernel.asm	/^c01150a0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01150a3	obj/kernel.asm	/^c01150a3:	83 c4 24             	add    $0x24,%esp$/;"	l
c01150a6	obj/kernel.asm	/^c01150a6:	5b                   	pop    %ebx$/;"	l
c01150a7	obj/kernel.asm	/^c01150a7:	5e                   	pop    %esi$/;"	l
c01150a8	obj/kernel.asm	/^c01150a8:	5f                   	pop    %edi$/;"	l
c01150a9	obj/kernel.asm	/^c01150a9:	5d                   	pop    %ebp$/;"	l
c01150aa	obj/kernel.asm	/^c01150aa:	c3                   	ret    $/;"	l
c01150ab	obj/kernel.asm	/^c01150ab <srand>:$/;"	l
c01150ab	obj/kernel.asm	/^c01150ab:	55                   	push   %ebp$/;"	l
c01150ac	obj/kernel.asm	/^c01150ac:	89 e5                	mov    %esp,%ebp$/;"	l
c01150ae	obj/kernel.asm	/^c01150ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01150b1	obj/kernel.asm	/^c01150b1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01150b6	obj/kernel.asm	/^c01150b6:	a3 c8 ee 14 c0       	mov    %eax,0xc014eec8$/;"	l
c01150bb	obj/kernel.asm	/^c01150bb:	89 15 cc ee 14 c0    	mov    %edx,0xc014eecc$/;"	l
c01150c1	obj/kernel.asm	/^c01150c1:	5d                   	pop    %ebp$/;"	l
c01150c2	obj/kernel.asm	/^c01150c2:	c3                   	ret    $/;"	l
c01150c3	obj/kernel.asm	/^c01150c3 <strlen>:$/;"	l
c01150c3	obj/kernel.asm	/^c01150c3:	55                   	push   %ebp$/;"	l
c01150c4	obj/kernel.asm	/^c01150c4:	89 e5                	mov    %esp,%ebp$/;"	l
c01150c6	obj/kernel.asm	/^c01150c6:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01150c9	obj/kernel.asm	/^c01150c9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01150d0	obj/kernel.asm	/^c01150d0:	eb 04                	jmp    c01150d6 <strlen+0x13>$/;"	l
c01150d2	obj/kernel.asm	/^c01150d2:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01150d6	obj/kernel.asm	/^c01150d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01150d9	obj/kernel.asm	/^c01150d9:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01150dc	obj/kernel.asm	/^c01150dc:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01150df	obj/kernel.asm	/^c01150df:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01150e2	obj/kernel.asm	/^c01150e2:	84 c0                	test   %al,%al$/;"	l
c01150e4	obj/kernel.asm	/^c01150e4:	75 ec                	jne    c01150d2 <strlen+0xf>$/;"	l
c01150e6	obj/kernel.asm	/^c01150e6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01150e9	obj/kernel.asm	/^c01150e9:	c9                   	leave  $/;"	l
c01150ea	obj/kernel.asm	/^c01150ea:	c3                   	ret    $/;"	l
c01150eb	obj/kernel.asm	/^c01150eb <strnlen>:$/;"	l
c01150eb	obj/kernel.asm	/^c01150eb:	55                   	push   %ebp$/;"	l
c01150ec	obj/kernel.asm	/^c01150ec:	89 e5                	mov    %esp,%ebp$/;"	l
c01150ee	obj/kernel.asm	/^c01150ee:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01150f1	obj/kernel.asm	/^c01150f1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01150f8	obj/kernel.asm	/^c01150f8:	eb 04                	jmp    c01150fe <strnlen+0x13>$/;"	l
c01150fa	obj/kernel.asm	/^c01150fa:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01150fe	obj/kernel.asm	/^c01150fe:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115101	obj/kernel.asm	/^c0115101:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0115104	obj/kernel.asm	/^c0115104:	73 10                	jae    c0115116 <strnlen+0x2b>$/;"	l
c0115106	obj/kernel.asm	/^c0115106:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115109	obj/kernel.asm	/^c0115109:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c011510c	obj/kernel.asm	/^c011510c:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c011510f	obj/kernel.asm	/^c011510f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115112	obj/kernel.asm	/^c0115112:	84 c0                	test   %al,%al$/;"	l
c0115114	obj/kernel.asm	/^c0115114:	75 e4                	jne    c01150fa <strnlen+0xf>$/;"	l
c0115116	obj/kernel.asm	/^c0115116:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115119	obj/kernel.asm	/^c0115119:	c9                   	leave  $/;"	l
c011511a	obj/kernel.asm	/^c011511a:	c3                   	ret    $/;"	l
c011511b	obj/kernel.asm	/^c011511b <strcat>:$/;"	l
c011511b	obj/kernel.asm	/^c011511b:	55                   	push   %ebp$/;"	l
c011511c	obj/kernel.asm	/^c011511c:	89 e5                	mov    %esp,%ebp$/;"	l
c011511e	obj/kernel.asm	/^c011511e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0115121	obj/kernel.asm	/^c0115121:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115124	obj/kernel.asm	/^c0115124:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115127	obj/kernel.asm	/^c0115127:	e8 97 ff ff ff       	call   c01150c3 <strlen>$/;"	l
c011512c	obj/kernel.asm	/^c011512c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011512f	obj/kernel.asm	/^c011512f:	01 c2                	add    %eax,%edx$/;"	l
c0115131	obj/kernel.asm	/^c0115131:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115134	obj/kernel.asm	/^c0115134:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115138	obj/kernel.asm	/^c0115138:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011513b	obj/kernel.asm	/^c011513b:	e8 02 00 00 00       	call   c0115142 <strcpy>$/;"	l
c0115140	obj/kernel.asm	/^c0115140:	c9                   	leave  $/;"	l
c0115141	obj/kernel.asm	/^c0115141:	c3                   	ret    $/;"	l
c0115142	obj/kernel.asm	/^c0115142 <strcpy>:$/;"	l
c0115142	obj/kernel.asm	/^c0115142:	55                   	push   %ebp$/;"	l
c0115143	obj/kernel.asm	/^c0115143:	89 e5                	mov    %esp,%ebp$/;"	l
c0115145	obj/kernel.asm	/^c0115145:	57                   	push   %edi$/;"	l
c0115146	obj/kernel.asm	/^c0115146:	56                   	push   %esi$/;"	l
c0115147	obj/kernel.asm	/^c0115147:	83 ec 20             	sub    $0x20,%esp$/;"	l
c011514a	obj/kernel.asm	/^c011514a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011514d	obj/kernel.asm	/^c011514d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115150	obj/kernel.asm	/^c0115150:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115153	obj/kernel.asm	/^c0115153:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115156	obj/kernel.asm	/^c0115156:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0115159	obj/kernel.asm	/^c0115159:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011515c	obj/kernel.asm	/^c011515c:	89 d1                	mov    %edx,%ecx$/;"	l
c011515e	obj/kernel.asm	/^c011515e:	89 c2                	mov    %eax,%edx$/;"	l
c0115160	obj/kernel.asm	/^c0115160:	89 ce                	mov    %ecx,%esi$/;"	l
c0115162	obj/kernel.asm	/^c0115162:	89 d7                	mov    %edx,%edi$/;"	l
c0115164	obj/kernel.asm	/^c0115164:	ac                   	lods   %ds:(%esi),%al$/;"	l
c0115165	obj/kernel.asm	/^c0115165:	aa                   	stos   %al,%es:(%edi)$/;"	l
c0115166	obj/kernel.asm	/^c0115166:	84 c0                	test   %al,%al$/;"	l
c0115168	obj/kernel.asm	/^c0115168:	75 fa                	jne    c0115164 <strcpy+0x22>$/;"	l
c011516a	obj/kernel.asm	/^c011516a:	89 fa                	mov    %edi,%edx$/;"	l
c011516c	obj/kernel.asm	/^c011516c:	89 f1                	mov    %esi,%ecx$/;"	l
c011516e	obj/kernel.asm	/^c011516e:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c0115171	obj/kernel.asm	/^c0115171:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0115174	obj/kernel.asm	/^c0115174:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0115177	obj/kernel.asm	/^c0115177:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011517a	obj/kernel.asm	/^c011517a:	83 c4 20             	add    $0x20,%esp$/;"	l
c011517d	obj/kernel.asm	/^c011517d:	5e                   	pop    %esi$/;"	l
c011517e	obj/kernel.asm	/^c011517e:	5f                   	pop    %edi$/;"	l
c011517f	obj/kernel.asm	/^c011517f:	5d                   	pop    %ebp$/;"	l
c0115180	obj/kernel.asm	/^c0115180:	c3                   	ret    $/;"	l
c0115181	obj/kernel.asm	/^c0115181 <strncpy>:$/;"	l
c0115181	obj/kernel.asm	/^c0115181:	55                   	push   %ebp$/;"	l
c0115182	obj/kernel.asm	/^c0115182:	89 e5                	mov    %esp,%ebp$/;"	l
c0115184	obj/kernel.asm	/^c0115184:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0115187	obj/kernel.asm	/^c0115187:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011518a	obj/kernel.asm	/^c011518a:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c011518d	obj/kernel.asm	/^c011518d:	eb 21                	jmp    c01151b0 <strncpy+0x2f>$/;"	l
c011518f	obj/kernel.asm	/^c011518f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115192	obj/kernel.asm	/^c0115192:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c0115195	obj/kernel.asm	/^c0115195:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115198	obj/kernel.asm	/^c0115198:	88 10                	mov    %dl,(%eax)$/;"	l
c011519a	obj/kernel.asm	/^c011519a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c011519d	obj/kernel.asm	/^c011519d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01151a0	obj/kernel.asm	/^c01151a0:	84 c0                	test   %al,%al$/;"	l
c01151a2	obj/kernel.asm	/^c01151a2:	74 04                	je     c01151a8 <strncpy+0x27>$/;"	l
c01151a4	obj/kernel.asm	/^c01151a4:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c01151a8	obj/kernel.asm	/^c01151a8:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01151ac	obj/kernel.asm	/^c01151ac:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c01151b0	obj/kernel.asm	/^c01151b0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01151b4	obj/kernel.asm	/^c01151b4:	75 d9                	jne    c011518f <strncpy+0xe>$/;"	l
c01151b6	obj/kernel.asm	/^c01151b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01151b9	obj/kernel.asm	/^c01151b9:	c9                   	leave  $/;"	l
c01151ba	obj/kernel.asm	/^c01151ba:	c3                   	ret    $/;"	l
c01151bb	obj/kernel.asm	/^c01151bb <strcmp>:$/;"	l
c01151bb	obj/kernel.asm	/^c01151bb:	55                   	push   %ebp$/;"	l
c01151bc	obj/kernel.asm	/^c01151bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01151be	obj/kernel.asm	/^c01151be:	57                   	push   %edi$/;"	l
c01151bf	obj/kernel.asm	/^c01151bf:	56                   	push   %esi$/;"	l
c01151c0	obj/kernel.asm	/^c01151c0:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01151c3	obj/kernel.asm	/^c01151c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01151c6	obj/kernel.asm	/^c01151c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01151c9	obj/kernel.asm	/^c01151c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01151cc	obj/kernel.asm	/^c01151cc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01151cf	obj/kernel.asm	/^c01151cf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01151d2	obj/kernel.asm	/^c01151d2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01151d5	obj/kernel.asm	/^c01151d5:	89 d1                	mov    %edx,%ecx$/;"	l
c01151d7	obj/kernel.asm	/^c01151d7:	89 c2                	mov    %eax,%edx$/;"	l
c01151d9	obj/kernel.asm	/^c01151d9:	89 ce                	mov    %ecx,%esi$/;"	l
c01151db	obj/kernel.asm	/^c01151db:	89 d7                	mov    %edx,%edi$/;"	l
c01151dd	obj/kernel.asm	/^c01151dd:	ac                   	lods   %ds:(%esi),%al$/;"	l
c01151de	obj/kernel.asm	/^c01151de:	ae                   	scas   %es:(%edi),%al$/;"	l
c01151df	obj/kernel.asm	/^c01151df:	75 08                	jne    c01151e9 <strcmp+0x2e>$/;"	l
c01151e1	obj/kernel.asm	/^c01151e1:	84 c0                	test   %al,%al$/;"	l
c01151e3	obj/kernel.asm	/^c01151e3:	75 f8                	jne    c01151dd <strcmp+0x22>$/;"	l
c01151e5	obj/kernel.asm	/^c01151e5:	31 c0                	xor    %eax,%eax$/;"	l
c01151e7	obj/kernel.asm	/^c01151e7:	eb 04                	jmp    c01151ed <strcmp+0x32>$/;"	l
c01151e9	obj/kernel.asm	/^c01151e9:	19 c0                	sbb    %eax,%eax$/;"	l
c01151eb	obj/kernel.asm	/^c01151eb:	0c 01                	or     $0x1,%al$/;"	l
c01151ed	obj/kernel.asm	/^c01151ed:	89 fa                	mov    %edi,%edx$/;"	l
c01151ef	obj/kernel.asm	/^c01151ef:	89 f1                	mov    %esi,%ecx$/;"	l
c01151f1	obj/kernel.asm	/^c01151f1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01151f4	obj/kernel.asm	/^c01151f4:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c01151f7	obj/kernel.asm	/^c01151f7:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01151fa	obj/kernel.asm	/^c01151fa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01151fd	obj/kernel.asm	/^c01151fd:	83 c4 20             	add    $0x20,%esp$/;"	l
c0115200	obj/kernel.asm	/^c0115200:	5e                   	pop    %esi$/;"	l
c0115201	obj/kernel.asm	/^c0115201:	5f                   	pop    %edi$/;"	l
c0115202	obj/kernel.asm	/^c0115202:	5d                   	pop    %ebp$/;"	l
c0115203	obj/kernel.asm	/^c0115203:	c3                   	ret    $/;"	l
c0115204	obj/kernel.asm	/^c0115204 <strncmp>:$/;"	l
c0115204	obj/kernel.asm	/^c0115204:	55                   	push   %ebp$/;"	l
c0115205	obj/kernel.asm	/^c0115205:	89 e5                	mov    %esp,%ebp$/;"	l
c0115207	obj/kernel.asm	/^c0115207:	eb 0c                	jmp    c0115215 <strncmp+0x11>$/;"	l
c0115209	obj/kernel.asm	/^c0115209:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c011520d	obj/kernel.asm	/^c011520d:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0115211	obj/kernel.asm	/^c0115211:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c0115215	obj/kernel.asm	/^c0115215:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115219	obj/kernel.asm	/^c0115219:	74 1a                	je     c0115235 <strncmp+0x31>$/;"	l
c011521b	obj/kernel.asm	/^c011521b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011521e	obj/kernel.asm	/^c011521e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115221	obj/kernel.asm	/^c0115221:	84 c0                	test   %al,%al$/;"	l
c0115223	obj/kernel.asm	/^c0115223:	74 10                	je     c0115235 <strncmp+0x31>$/;"	l
c0115225	obj/kernel.asm	/^c0115225:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115228	obj/kernel.asm	/^c0115228:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c011522b	obj/kernel.asm	/^c011522b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011522e	obj/kernel.asm	/^c011522e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115231	obj/kernel.asm	/^c0115231:	38 c2                	cmp    %al,%dl$/;"	l
c0115233	obj/kernel.asm	/^c0115233:	74 d4                	je     c0115209 <strncmp+0x5>$/;"	l
c0115235	obj/kernel.asm	/^c0115235:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115239	obj/kernel.asm	/^c0115239:	74 18                	je     c0115253 <strncmp+0x4f>$/;"	l
c011523b	obj/kernel.asm	/^c011523b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011523e	obj/kernel.asm	/^c011523e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115241	obj/kernel.asm	/^c0115241:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0115244	obj/kernel.asm	/^c0115244:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115247	obj/kernel.asm	/^c0115247:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011524a	obj/kernel.asm	/^c011524a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c011524d	obj/kernel.asm	/^c011524d:	29 c2                	sub    %eax,%edx$/;"	l
c011524f	obj/kernel.asm	/^c011524f:	89 d0                	mov    %edx,%eax$/;"	l
c0115251	obj/kernel.asm	/^c0115251:	eb 05                	jmp    c0115258 <strncmp+0x54>$/;"	l
c0115253	obj/kernel.asm	/^c0115253:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0115258	obj/kernel.asm	/^c0115258:	5d                   	pop    %ebp$/;"	l
c0115259	obj/kernel.asm	/^c0115259:	c3                   	ret    $/;"	l
c011525a	obj/kernel.asm	/^c011525a <strchr>:$/;"	l
c011525a	obj/kernel.asm	/^c011525a:	55                   	push   %ebp$/;"	l
c011525b	obj/kernel.asm	/^c011525b:	89 e5                	mov    %esp,%ebp$/;"	l
c011525d	obj/kernel.asm	/^c011525d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0115260	obj/kernel.asm	/^c0115260:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115263	obj/kernel.asm	/^c0115263:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c0115266	obj/kernel.asm	/^c0115266:	eb 14                	jmp    c011527c <strchr+0x22>$/;"	l
c0115268	obj/kernel.asm	/^c0115268:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011526b	obj/kernel.asm	/^c011526b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011526e	obj/kernel.asm	/^c011526e:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c0115271	obj/kernel.asm	/^c0115271:	75 05                	jne    c0115278 <strchr+0x1e>$/;"	l
c0115273	obj/kernel.asm	/^c0115273:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115276	obj/kernel.asm	/^c0115276:	eb 13                	jmp    c011528b <strchr+0x31>$/;"	l
c0115278	obj/kernel.asm	/^c0115278:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011527c	obj/kernel.asm	/^c011527c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011527f	obj/kernel.asm	/^c011527f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115282	obj/kernel.asm	/^c0115282:	84 c0                	test   %al,%al$/;"	l
c0115284	obj/kernel.asm	/^c0115284:	75 e2                	jne    c0115268 <strchr+0xe>$/;"	l
c0115286	obj/kernel.asm	/^c0115286:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011528b	obj/kernel.asm	/^c011528b:	c9                   	leave  $/;"	l
c011528c	obj/kernel.asm	/^c011528c:	c3                   	ret    $/;"	l
c011528d	obj/kernel.asm	/^c011528d <strfind>:$/;"	l
c011528d	obj/kernel.asm	/^c011528d:	55                   	push   %ebp$/;"	l
c011528e	obj/kernel.asm	/^c011528e:	89 e5                	mov    %esp,%ebp$/;"	l
c0115290	obj/kernel.asm	/^c0115290:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0115293	obj/kernel.asm	/^c0115293:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115296	obj/kernel.asm	/^c0115296:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c0115299	obj/kernel.asm	/^c0115299:	eb 11                	jmp    c01152ac <strfind+0x1f>$/;"	l
c011529b	obj/kernel.asm	/^c011529b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011529e	obj/kernel.asm	/^c011529e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01152a1	obj/kernel.asm	/^c01152a1:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c01152a4	obj/kernel.asm	/^c01152a4:	75 02                	jne    c01152a8 <strfind+0x1b>$/;"	l
c01152a6	obj/kernel.asm	/^c01152a6:	eb 0e                	jmp    c01152b6 <strfind+0x29>$/;"	l
c01152a8	obj/kernel.asm	/^c01152a8:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01152ac	obj/kernel.asm	/^c01152ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152af	obj/kernel.asm	/^c01152af:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01152b2	obj/kernel.asm	/^c01152b2:	84 c0                	test   %al,%al$/;"	l
c01152b4	obj/kernel.asm	/^c01152b4:	75 e5                	jne    c011529b <strfind+0xe>$/;"	l
c01152b6	obj/kernel.asm	/^c01152b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152b9	obj/kernel.asm	/^c01152b9:	c9                   	leave  $/;"	l
c01152ba	obj/kernel.asm	/^c01152ba:	c3                   	ret    $/;"	l
c01152bb	obj/kernel.asm	/^c01152bb <strtol>:$/;"	l
c01152bb	obj/kernel.asm	/^c01152bb:	55                   	push   %ebp$/;"	l
c01152bc	obj/kernel.asm	/^c01152bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01152be	obj/kernel.asm	/^c01152be:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01152c1	obj/kernel.asm	/^c01152c1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01152c8	obj/kernel.asm	/^c01152c8:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c01152cf	obj/kernel.asm	/^c01152cf:	eb 04                	jmp    c01152d5 <strtol+0x1a>$/;"	l
c01152d1	obj/kernel.asm	/^c01152d1:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01152d5	obj/kernel.asm	/^c01152d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152d8	obj/kernel.asm	/^c01152d8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01152db	obj/kernel.asm	/^c01152db:	3c 20                	cmp    $0x20,%al$/;"	l
c01152dd	obj/kernel.asm	/^c01152dd:	74 f2                	je     c01152d1 <strtol+0x16>$/;"	l
c01152df	obj/kernel.asm	/^c01152df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152e2	obj/kernel.asm	/^c01152e2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01152e5	obj/kernel.asm	/^c01152e5:	3c 09                	cmp    $0x9,%al$/;"	l
c01152e7	obj/kernel.asm	/^c01152e7:	74 e8                	je     c01152d1 <strtol+0x16>$/;"	l
c01152e9	obj/kernel.asm	/^c01152e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152ec	obj/kernel.asm	/^c01152ec:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01152ef	obj/kernel.asm	/^c01152ef:	3c 2b                	cmp    $0x2b,%al$/;"	l
c01152f1	obj/kernel.asm	/^c01152f1:	75 06                	jne    c01152f9 <strtol+0x3e>$/;"	l
c01152f3	obj/kernel.asm	/^c01152f3:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01152f7	obj/kernel.asm	/^c01152f7:	eb 15                	jmp    c011530e <strtol+0x53>$/;"	l
c01152f9	obj/kernel.asm	/^c01152f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152fc	obj/kernel.asm	/^c01152fc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01152ff	obj/kernel.asm	/^c01152ff:	3c 2d                	cmp    $0x2d,%al$/;"	l
c0115301	obj/kernel.asm	/^c0115301:	75 0b                	jne    c011530e <strtol+0x53>$/;"	l
c0115303	obj/kernel.asm	/^c0115303:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0115307	obj/kernel.asm	/^c0115307:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c011530e	obj/kernel.asm	/^c011530e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115312	obj/kernel.asm	/^c0115312:	74 06                	je     c011531a <strtol+0x5f>$/;"	l
c0115314	obj/kernel.asm	/^c0115314:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c0115318	obj/kernel.asm	/^c0115318:	75 24                	jne    c011533e <strtol+0x83>$/;"	l
c011531a	obj/kernel.asm	/^c011531a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011531d	obj/kernel.asm	/^c011531d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115320	obj/kernel.asm	/^c0115320:	3c 30                	cmp    $0x30,%al$/;"	l
c0115322	obj/kernel.asm	/^c0115322:	75 1a                	jne    c011533e <strtol+0x83>$/;"	l
c0115324	obj/kernel.asm	/^c0115324:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115327	obj/kernel.asm	/^c0115327:	83 c0 01             	add    $0x1,%eax$/;"	l
c011532a	obj/kernel.asm	/^c011532a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011532d	obj/kernel.asm	/^c011532d:	3c 78                	cmp    $0x78,%al$/;"	l
c011532f	obj/kernel.asm	/^c011532f:	75 0d                	jne    c011533e <strtol+0x83>$/;"	l
c0115331	obj/kernel.asm	/^c0115331:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c0115335	obj/kernel.asm	/^c0115335:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c011533c	obj/kernel.asm	/^c011533c:	eb 2a                	jmp    c0115368 <strtol+0xad>$/;"	l
c011533e	obj/kernel.asm	/^c011533e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115342	obj/kernel.asm	/^c0115342:	75 17                	jne    c011535b <strtol+0xa0>$/;"	l
c0115344	obj/kernel.asm	/^c0115344:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115347	obj/kernel.asm	/^c0115347:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011534a	obj/kernel.asm	/^c011534a:	3c 30                	cmp    $0x30,%al$/;"	l
c011534c	obj/kernel.asm	/^c011534c:	75 0d                	jne    c011535b <strtol+0xa0>$/;"	l
c011534e	obj/kernel.asm	/^c011534e:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0115352	obj/kernel.asm	/^c0115352:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c0115359	obj/kernel.asm	/^c0115359:	eb 0d                	jmp    c0115368 <strtol+0xad>$/;"	l
c011535b	obj/kernel.asm	/^c011535b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c011535f	obj/kernel.asm	/^c011535f:	75 07                	jne    c0115368 <strtol+0xad>$/;"	l
c0115361	obj/kernel.asm	/^c0115361:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c0115368	obj/kernel.asm	/^c0115368:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011536b	obj/kernel.asm	/^c011536b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011536e	obj/kernel.asm	/^c011536e:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0115370	obj/kernel.asm	/^c0115370:	7e 1b                	jle    c011538d <strtol+0xd2>$/;"	l
c0115372	obj/kernel.asm	/^c0115372:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115375	obj/kernel.asm	/^c0115375:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115378	obj/kernel.asm	/^c0115378:	3c 39                	cmp    $0x39,%al$/;"	l
c011537a	obj/kernel.asm	/^c011537a:	7f 11                	jg     c011538d <strtol+0xd2>$/;"	l
c011537c	obj/kernel.asm	/^c011537c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011537f	obj/kernel.asm	/^c011537f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115382	obj/kernel.asm	/^c0115382:	0f be c0             	movsbl %al,%eax$/;"	l
c0115385	obj/kernel.asm	/^c0115385:	83 e8 30             	sub    $0x30,%eax$/;"	l
c0115388	obj/kernel.asm	/^c0115388:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011538b	obj/kernel.asm	/^c011538b:	eb 48                	jmp    c01153d5 <strtol+0x11a>$/;"	l
c011538d	obj/kernel.asm	/^c011538d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115390	obj/kernel.asm	/^c0115390:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115393	obj/kernel.asm	/^c0115393:	3c 60                	cmp    $0x60,%al$/;"	l
c0115395	obj/kernel.asm	/^c0115395:	7e 1b                	jle    c01153b2 <strtol+0xf7>$/;"	l
c0115397	obj/kernel.asm	/^c0115397:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011539a	obj/kernel.asm	/^c011539a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011539d	obj/kernel.asm	/^c011539d:	3c 7a                	cmp    $0x7a,%al$/;"	l
c011539f	obj/kernel.asm	/^c011539f:	7f 11                	jg     c01153b2 <strtol+0xf7>$/;"	l
c01153a1	obj/kernel.asm	/^c01153a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153a4	obj/kernel.asm	/^c01153a4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01153a7	obj/kernel.asm	/^c01153a7:	0f be c0             	movsbl %al,%eax$/;"	l
c01153aa	obj/kernel.asm	/^c01153aa:	83 e8 57             	sub    $0x57,%eax$/;"	l
c01153ad	obj/kernel.asm	/^c01153ad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01153b0	obj/kernel.asm	/^c01153b0:	eb 23                	jmp    c01153d5 <strtol+0x11a>$/;"	l
c01153b2	obj/kernel.asm	/^c01153b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153b5	obj/kernel.asm	/^c01153b5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01153b8	obj/kernel.asm	/^c01153b8:	3c 40                	cmp    $0x40,%al$/;"	l
c01153ba	obj/kernel.asm	/^c01153ba:	7e 3d                	jle    c01153f9 <strtol+0x13e>$/;"	l
c01153bc	obj/kernel.asm	/^c01153bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153bf	obj/kernel.asm	/^c01153bf:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01153c2	obj/kernel.asm	/^c01153c2:	3c 5a                	cmp    $0x5a,%al$/;"	l
c01153c4	obj/kernel.asm	/^c01153c4:	7f 33                	jg     c01153f9 <strtol+0x13e>$/;"	l
c01153c6	obj/kernel.asm	/^c01153c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153c9	obj/kernel.asm	/^c01153c9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01153cc	obj/kernel.asm	/^c01153cc:	0f be c0             	movsbl %al,%eax$/;"	l
c01153cf	obj/kernel.asm	/^c01153cf:	83 e8 37             	sub    $0x37,%eax$/;"	l
c01153d2	obj/kernel.asm	/^c01153d2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01153d5	obj/kernel.asm	/^c01153d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01153d8	obj/kernel.asm	/^c01153d8:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01153db	obj/kernel.asm	/^c01153db:	7c 02                	jl     c01153df <strtol+0x124>$/;"	l
c01153dd	obj/kernel.asm	/^c01153dd:	eb 1a                	jmp    c01153f9 <strtol+0x13e>$/;"	l
c01153df	obj/kernel.asm	/^c01153df:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01153e3	obj/kernel.asm	/^c01153e3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01153e6	obj/kernel.asm	/^c01153e6:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c01153ea	obj/kernel.asm	/^c01153ea:	89 c2                	mov    %eax,%edx$/;"	l
c01153ec	obj/kernel.asm	/^c01153ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01153ef	obj/kernel.asm	/^c01153ef:	01 d0                	add    %edx,%eax$/;"	l
c01153f1	obj/kernel.asm	/^c01153f1:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01153f4	obj/kernel.asm	/^c01153f4:	e9 6f ff ff ff       	jmp    c0115368 <strtol+0xad>$/;"	l
c01153f9	obj/kernel.asm	/^c01153f9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01153fd	obj/kernel.asm	/^c01153fd:	74 08                	je     c0115407 <strtol+0x14c>$/;"	l
c01153ff	obj/kernel.asm	/^c01153ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115402	obj/kernel.asm	/^c0115402:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115405	obj/kernel.asm	/^c0115405:	89 10                	mov    %edx,(%eax)$/;"	l
c0115407	obj/kernel.asm	/^c0115407:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c011540b	obj/kernel.asm	/^c011540b:	74 07                	je     c0115414 <strtol+0x159>$/;"	l
c011540d	obj/kernel.asm	/^c011540d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0115410	obj/kernel.asm	/^c0115410:	f7 d8                	neg    %eax$/;"	l
c0115412	obj/kernel.asm	/^c0115412:	eb 03                	jmp    c0115417 <strtol+0x15c>$/;"	l
c0115414	obj/kernel.asm	/^c0115414:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0115417	obj/kernel.asm	/^c0115417:	c9                   	leave  $/;"	l
c0115418	obj/kernel.asm	/^c0115418:	c3                   	ret    $/;"	l
c0115419	obj/kernel.asm	/^c0115419 <memset>:$/;"	l
c0115419	obj/kernel.asm	/^c0115419:	55                   	push   %ebp$/;"	l
c011541a	obj/kernel.asm	/^c011541a:	89 e5                	mov    %esp,%ebp$/;"	l
c011541c	obj/kernel.asm	/^c011541c:	57                   	push   %edi$/;"	l
c011541d	obj/kernel.asm	/^c011541d:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0115420	obj/kernel.asm	/^c0115420:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115423	obj/kernel.asm	/^c0115423:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c0115426	obj/kernel.asm	/^c0115426:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c011542a	obj/kernel.asm	/^c011542a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011542d	obj/kernel.asm	/^c011542d:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c0115430	obj/kernel.asm	/^c0115430:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c0115433	obj/kernel.asm	/^c0115433:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115436	obj/kernel.asm	/^c0115436:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115439	obj/kernel.asm	/^c0115439:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c011543c	obj/kernel.asm	/^c011543c:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c0115440	obj/kernel.asm	/^c0115440:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0115443	obj/kernel.asm	/^c0115443:	89 d7                	mov    %edx,%edi$/;"	l
c0115445	obj/kernel.asm	/^c0115445:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c0115447	obj/kernel.asm	/^c0115447:	89 fa                	mov    %edi,%edx$/;"	l
c0115449	obj/kernel.asm	/^c0115449:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c011544c	obj/kernel.asm	/^c011544c:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c011544f	obj/kernel.asm	/^c011544f:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0115452	obj/kernel.asm	/^c0115452:	83 c4 24             	add    $0x24,%esp$/;"	l
c0115455	obj/kernel.asm	/^c0115455:	5f                   	pop    %edi$/;"	l
c0115456	obj/kernel.asm	/^c0115456:	5d                   	pop    %ebp$/;"	l
c0115457	obj/kernel.asm	/^c0115457:	c3                   	ret    $/;"	l
c0115458	obj/kernel.asm	/^c0115458 <memmove>:$/;"	l
c0115458	obj/kernel.asm	/^c0115458:	55                   	push   %ebp$/;"	l
c0115459	obj/kernel.asm	/^c0115459:	89 e5                	mov    %esp,%ebp$/;"	l
c011545b	obj/kernel.asm	/^c011545b:	57                   	push   %edi$/;"	l
c011545c	obj/kernel.asm	/^c011545c:	56                   	push   %esi$/;"	l
c011545d	obj/kernel.asm	/^c011545d:	53                   	push   %ebx$/;"	l
c011545e	obj/kernel.asm	/^c011545e:	83 ec 30             	sub    $0x30,%esp$/;"	l
c0115461	obj/kernel.asm	/^c0115461:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115464	obj/kernel.asm	/^c0115464:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115467	obj/kernel.asm	/^c0115467:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011546a	obj/kernel.asm	/^c011546a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011546d	obj/kernel.asm	/^c011546d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115470	obj/kernel.asm	/^c0115470:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0115473	obj/kernel.asm	/^c0115473:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115476	obj/kernel.asm	/^c0115476:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0115479	obj/kernel.asm	/^c0115479:	73 42                	jae    c01154bd <memmove+0x65>$/;"	l
c011547b	obj/kernel.asm	/^c011547b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011547e	obj/kernel.asm	/^c011547e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0115481	obj/kernel.asm	/^c0115481:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0115484	obj/kernel.asm	/^c0115484:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0115487	obj/kernel.asm	/^c0115487:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011548a	obj/kernel.asm	/^c011548a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c011548d	obj/kernel.asm	/^c011548d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0115490	obj/kernel.asm	/^c0115490:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c0115493	obj/kernel.asm	/^c0115493:	89 c1                	mov    %eax,%ecx$/;"	l
c0115495	obj/kernel.asm	/^c0115495:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0115498	obj/kernel.asm	/^c0115498:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011549b	obj/kernel.asm	/^c011549b:	89 d7                	mov    %edx,%edi$/;"	l
c011549d	obj/kernel.asm	/^c011549d:	89 c6                	mov    %eax,%esi$/;"	l
c011549f	obj/kernel.asm	/^c011549f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c01154a1	obj/kernel.asm	/^c01154a1:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c01154a4	obj/kernel.asm	/^c01154a4:	83 e1 03             	and    $0x3,%ecx$/;"	l
c01154a7	obj/kernel.asm	/^c01154a7:	74 02                	je     c01154ab <memmove+0x53>$/;"	l
c01154a9	obj/kernel.asm	/^c01154a9:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c01154ab	obj/kernel.asm	/^c01154ab:	89 f0                	mov    %esi,%eax$/;"	l
c01154ad	obj/kernel.asm	/^c01154ad:	89 fa                	mov    %edi,%edx$/;"	l
c01154af	obj/kernel.asm	/^c01154af:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c01154b2	obj/kernel.asm	/^c01154b2:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01154b5	obj/kernel.asm	/^c01154b5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01154b8	obj/kernel.asm	/^c01154b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01154bb	obj/kernel.asm	/^c01154bb:	eb 36                	jmp    c01154f3 <memmove+0x9b>$/;"	l
c01154bd	obj/kernel.asm	/^c01154bd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01154c0	obj/kernel.asm	/^c01154c0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01154c3	obj/kernel.asm	/^c01154c3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01154c6	obj/kernel.asm	/^c01154c6:	01 c2                	add    %eax,%edx$/;"	l
c01154c8	obj/kernel.asm	/^c01154c8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01154cb	obj/kernel.asm	/^c01154cb:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c01154ce	obj/kernel.asm	/^c01154ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01154d1	obj/kernel.asm	/^c01154d1:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c01154d4	obj/kernel.asm	/^c01154d4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01154d7	obj/kernel.asm	/^c01154d7:	89 c1                	mov    %eax,%ecx$/;"	l
c01154d9	obj/kernel.asm	/^c01154d9:	89 d8                	mov    %ebx,%eax$/;"	l
c01154db	obj/kernel.asm	/^c01154db:	89 d6                	mov    %edx,%esi$/;"	l
c01154dd	obj/kernel.asm	/^c01154dd:	89 c7                	mov    %eax,%edi$/;"	l
c01154df	obj/kernel.asm	/^c01154df:	fd                   	std    $/;"	l
c01154e0	obj/kernel.asm	/^c01154e0:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c01154e2	obj/kernel.asm	/^c01154e2:	fc                   	cld    $/;"	l
c01154e3	obj/kernel.asm	/^c01154e3:	89 f8                	mov    %edi,%eax$/;"	l
c01154e5	obj/kernel.asm	/^c01154e5:	89 f2                	mov    %esi,%edx$/;"	l
c01154e7	obj/kernel.asm	/^c01154e7:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c01154ea	obj/kernel.asm	/^c01154ea:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c01154ed	obj/kernel.asm	/^c01154ed:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c01154f0	obj/kernel.asm	/^c01154f0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01154f3	obj/kernel.asm	/^c01154f3:	83 c4 30             	add    $0x30,%esp$/;"	l
c01154f6	obj/kernel.asm	/^c01154f6:	5b                   	pop    %ebx$/;"	l
c01154f7	obj/kernel.asm	/^c01154f7:	5e                   	pop    %esi$/;"	l
c01154f8	obj/kernel.asm	/^c01154f8:	5f                   	pop    %edi$/;"	l
c01154f9	obj/kernel.asm	/^c01154f9:	5d                   	pop    %ebp$/;"	l
c01154fa	obj/kernel.asm	/^c01154fa:	c3                   	ret    $/;"	l
c01154fb	obj/kernel.asm	/^c01154fb <memcpy>:$/;"	l
c01154fb	obj/kernel.asm	/^c01154fb:	55                   	push   %ebp$/;"	l
c01154fc	obj/kernel.asm	/^c01154fc:	89 e5                	mov    %esp,%ebp$/;"	l
c01154fe	obj/kernel.asm	/^c01154fe:	57                   	push   %edi$/;"	l
c01154ff	obj/kernel.asm	/^c01154ff:	56                   	push   %esi$/;"	l
c0115500	obj/kernel.asm	/^c0115500:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0115503	obj/kernel.asm	/^c0115503:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115506	obj/kernel.asm	/^c0115506:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115509	obj/kernel.asm	/^c0115509:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011550c	obj/kernel.asm	/^c011550c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011550f	obj/kernel.asm	/^c011550f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115512	obj/kernel.asm	/^c0115512:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0115515	obj/kernel.asm	/^c0115515:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0115518	obj/kernel.asm	/^c0115518:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c011551b	obj/kernel.asm	/^c011551b:	89 c1                	mov    %eax,%ecx$/;"	l
c011551d	obj/kernel.asm	/^c011551d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0115520	obj/kernel.asm	/^c0115520:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115523	obj/kernel.asm	/^c0115523:	89 d7                	mov    %edx,%edi$/;"	l
c0115525	obj/kernel.asm	/^c0115525:	89 c6                	mov    %eax,%esi$/;"	l
c0115527	obj/kernel.asm	/^c0115527:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0115529	obj/kernel.asm	/^c0115529:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c011552c	obj/kernel.asm	/^c011552c:	83 e1 03             	and    $0x3,%ecx$/;"	l
c011552f	obj/kernel.asm	/^c011552f:	74 02                	je     c0115533 <memcpy+0x38>$/;"	l
c0115531	obj/kernel.asm	/^c0115531:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0115533	obj/kernel.asm	/^c0115533:	89 f0                	mov    %esi,%eax$/;"	l
c0115535	obj/kernel.asm	/^c0115535:	89 fa                	mov    %edi,%edx$/;"	l
c0115537	obj/kernel.asm	/^c0115537:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c011553a	obj/kernel.asm	/^c011553a:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c011553d	obj/kernel.asm	/^c011553d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0115540	obj/kernel.asm	/^c0115540:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115543	obj/kernel.asm	/^c0115543:	83 c4 20             	add    $0x20,%esp$/;"	l
c0115546	obj/kernel.asm	/^c0115546:	5e                   	pop    %esi$/;"	l
c0115547	obj/kernel.asm	/^c0115547:	5f                   	pop    %edi$/;"	l
c0115548	obj/kernel.asm	/^c0115548:	5d                   	pop    %ebp$/;"	l
c0115549	obj/kernel.asm	/^c0115549:	c3                   	ret    $/;"	l
c011554a	obj/kernel.asm	/^c011554a <memcmp>:$/;"	l
c011554a	obj/kernel.asm	/^c011554a:	55                   	push   %ebp$/;"	l
c011554b	obj/kernel.asm	/^c011554b:	89 e5                	mov    %esp,%ebp$/;"	l
c011554d	obj/kernel.asm	/^c011554d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0115550	obj/kernel.asm	/^c0115550:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115553	obj/kernel.asm	/^c0115553:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0115556	obj/kernel.asm	/^c0115556:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115559	obj/kernel.asm	/^c0115559:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c011555c	obj/kernel.asm	/^c011555c:	eb 30                	jmp    c011558e <memcmp+0x44>$/;"	l
c011555e	obj/kernel.asm	/^c011555e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115561	obj/kernel.asm	/^c0115561:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c0115564	obj/kernel.asm	/^c0115564:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0115567	obj/kernel.asm	/^c0115567:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011556a	obj/kernel.asm	/^c011556a:	38 c2                	cmp    %al,%dl$/;"	l
c011556c	obj/kernel.asm	/^c011556c:	74 18                	je     c0115586 <memcmp+0x3c>$/;"	l
c011556e	obj/kernel.asm	/^c011556e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115571	obj/kernel.asm	/^c0115571:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115574	obj/kernel.asm	/^c0115574:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0115577	obj/kernel.asm	/^c0115577:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011557a	obj/kernel.asm	/^c011557a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011557d	obj/kernel.asm	/^c011557d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0115580	obj/kernel.asm	/^c0115580:	29 c2                	sub    %eax,%edx$/;"	l
c0115582	obj/kernel.asm	/^c0115582:	89 d0                	mov    %edx,%eax$/;"	l
c0115584	obj/kernel.asm	/^c0115584:	eb 1a                	jmp    c01155a0 <memcmp+0x56>$/;"	l
c0115586	obj/kernel.asm	/^c0115586:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c011558a	obj/kernel.asm	/^c011558a:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c011558e	obj/kernel.asm	/^c011558e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115591	obj/kernel.asm	/^c0115591:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0115594	obj/kernel.asm	/^c0115594:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c0115597	obj/kernel.asm	/^c0115597:	85 c0                	test   %eax,%eax$/;"	l
c0115599	obj/kernel.asm	/^c0115599:	75 c3                	jne    c011555e <memcmp+0x14>$/;"	l
c011559b	obj/kernel.asm	/^c011559b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01155a0	obj/kernel.asm	/^c01155a0:	c9                   	leave  $/;"	l
c01155a1	obj/kernel.asm	/^c01155a1:	c3                   	ret    $/;"	l
can_write	obj/kernel.asm	/^        can_write = 1;$/;"	d
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
char	obj/kernel.asm	/^char *$/;"	l
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cond_signal	obj/kernel.asm	/^cond_signal (condvar_t *cvp) {$/;"	l
cond_wait	obj/kernel.asm	/^cond_wait (condvar_t *cvp) {$/;"	l
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/kernel.asm	/^const char *$/;"	l
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default: ret = -E_INVAL;$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
ebp	obj/kernel.asm	/^        ebp = *((uint32_t*)ebp);$/;"	d
eip	obj/kernel.asm	/^        eip = *(((uint32_t*)ebp)+4);$/;"	d
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
endpos	obj/kernel.asm	/^            endpos = din->size;$/;"	d
endpos	obj/kernel.asm	/^        endpos = SFS_MAX_FILE_SIZE;$/;"	d
ent	obj/kernel.asm	/^        ent = din->indirect;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern void vfs_devlist_init(void);$/;"	l
failed	obj/kernel.asm	/^failed:$/;"	l
failed_cleanup	obj/kernel.asm	/^failed_cleanup:$/;"	l
failed_cleanup_din	obj/kernel.asm	/^failed_cleanup_din:$/;"	l
failed_cleanup_freemap	obj/kernel.asm	/^failed_cleanup_freemap:$/;"	l
failed_cleanup_fs	obj/kernel.asm	/^failed_cleanup_fs:$/;"	l
failed_cleanup_hash_list	obj/kernel.asm	/^failed_cleanup_hash_list:$/;"	l
failed_cleanup_name	obj/kernel.asm	/^failed_cleanup_name:$/;"	l
failed_cleanup_sfs_buffer	obj/kernel.asm	/^failed_cleanup_sfs_buffer:$/;"	l
failed_cleanup_vdev	obj/kernel.asm	/^failed_cleanup_vdev:$/;"	l
failed_nomem	obj/kernel.asm	/^failed_nomem:$/;"	l
failed_unlock	obj/kernel.asm	/^failed_unlock:$/;"	l
filesp	obj/kernel.asm	/^        filesp = old_filesp;$/;"	d
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^                        found = fsop_get_root(vdev->fs);$/;"	d
found	obj/kernel.asm	/^                        found = vdev->devnode;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
good_files_struct	obj/kernel.asm	/^good_files_struct:$/;"	l
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
inside	obj/kernel.asm	/^    inside:$/;"	l
int	obj/kernel.asm	/^int dup_files(struct files_struct *to, struct files_struct *from);$/;"	l
int	obj/kernel.asm	/^int file_dup(int fd1, int fd2);$/;"	l
int	obj/kernel.asm	/^int file_mkfifo(const char *name, uint32_t open_flags);$/;"	l
int	obj/kernel.asm	/^int file_pipe(int fd[]);$/;"	l
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	l
int	obj/kernel.asm	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	l
int	obj/kernel.asm	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	l
int	obj/kernel.asm	/^int$/;"	l
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a, b->right, comp);$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a->right, b, comp);$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
le	obj/kernel.asm	/^                le = list_next(le);$/;"	d
le	obj/kernel.asm	/^            le = list_next(le);$/;"	d
le	obj/kernel.asm	/^          le = len;$/;"	d
le	obj/kernel.asm	/^          le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list_prev(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = list_prev(&(base->page_link));$/;"	d
le2timer	obj/kernel.asm	/^#define le2timer(le, member)            \\$/;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
len	obj/kernel.asm	/^          len = list_next(le);$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
long	obj/kernel.asm	/^long SYSTEM_READ_TIMER( void ){$/;"	l
long	obj/kernel.asm	/^long$/;"	l
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
monitor_init	obj/kernel.asm	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	l
monitor_t	obj/kernel.asm	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	l
nblks	obj/kernel.asm	/^            nblks = alen \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^            nblks = copied \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^    nblks = din->blocks;$/;"	d
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
node	obj/kernel.asm	/^            node = info2node(sin, sfs_inode);$/;"	d
node	obj/kernel.asm	/^        node = parent, sin = vop_info(node, sfs_inode);$/;"	d
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
old	obj/kernel.asm	/^        old = bootfs_node, bootfs_node = node;$/;"	d
open_count	obj/kernel.asm	/^    open_count = node->open_count;$/;"	d
out	obj/kernel.asm	/^out:$/;"	l
out_unlock	obj/kernel.asm	/^out_unlock:$/;"	l
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^               p = q;$/;"	d
p	obj/kernel.asm	/^        p = le2page(le,page_link);$/;"	d
p	obj/kernel.asm	/^      p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p	obj/kernel.asm	/^    p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = le2page(le,page_link) ;$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p_rpos	obj/kernel.asm	/^    p_rpos = p_wpos = 0;$/;"	d
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
part	obj/kernel.asm	/^            part = maxn;$/;"	d
part	obj/kernel.asm	/^        part = PGSIZE;$/;"	d
path	obj/kernel.asm	/^    path = argv[0];$/;"	d
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptep	obj/kernel.asm	/^    ptep = get_pte(mm->pgdir, addr, 1);              \/\/(1) try to find a pte, if pte's PT(Page Table) isn't existed, then create a PT.$/;"	d
ptr	obj/kernel.asm	/^    ptr = memmove(iob->io_base + 1, ptr, alen);$/;"	d
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
r	obj/kernel.asm	/^          r = a->left;$/;"	d
r	obj/kernel.asm	/^          r = b->left;$/;"	d
readable	obj/kernel.asm	/^        readable = writable = 1;$/;"	d
ref_count	obj/kernel.asm	/^    ref_count = node->ref_count;$/;"	d
relocated	obj/kernel.asm	/^relocated:$/;"	l
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^                        ret = -E_NA_DEV;$/;"	d
ret	obj/kernel.asm	/^                        ret = 0, *node_store = found;$/;"	d
ret	obj/kernel.asm	/^                    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NOTDIR;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^            ret = file_write(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_dirent_findino_nolock(sfs, sin, ino, entry);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 1, 1);$/;"	d
ret	obj/kernel.asm	/^            ret = vfs_getcwd(iob);$/;"	d
ret	obj/kernel.asm	/^            ret = vop_create(dir, name, excl, &node);$/;"	d
ret	obj/kernel.asm	/^        ret = -E_BUSY;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = file_read(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^        ret = page_insert(to, npage, start, perm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_load_inode(sfs, node_store, ino);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, SFS_BLKN_SUPER, 1, 0);$/;"	d
ret	obj/kernel.asm	/^        ret = vfs_set_curdir(node);$/;"	d
ret	obj/kernel.asm	/^        ret = vop_lookup(node, path, node_store);$/;"	d
ret	obj/kernel.asm	/^    ret = -E_EXISTS;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NOENT;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = file_open(path, open_flags);$/;"	d
ret	obj/kernel.asm	/^    ret = iobuf_move(iob, entry->name, sfs_dentry_size, 1, NULL);$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_chdir(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_link(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_lookup(path, &node);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_rename(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_unlink(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fstat(file->node, stat);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fsync(file->node);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_namefile(node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_read(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_write(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
rq	obj/kernel.asm	/^    rq = &__rq;$/;"	d
sched_class	obj/kernel.asm	/^    sched_class = &default_sched_class;$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
semaphore_t	obj/kernel.asm	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	l
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
set_pvalue	obj/kernel.asm	/^#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)$/;"	d
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;$/;"	d
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;$/;"	d
size	obj/kernel.asm	/^        size = (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);$/;"	d
size	obj/kernel.asm	/^    size = SFS_BLKSIZE;$/;"	d
size_t	obj/kernel.asm	/^size_t$/;"	l
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
spin	obj/kernel.asm	/^spin:$/;"	l
src	obj/kernel.asm	/^            src = dst, dst = tmp;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
stacktop	obj/kernel.asm	/^    stacktop = (uintptr_t)uargv - sizeof(int);$/;"	d
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
static	obj/kernel.asm	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static bool$/;"	l
static	obj/kernel.asm	/^static char *disk0_buffer;$/;"	l
static	obj/kernel.asm	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static const struct inode_ops *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline skew_heap_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline struct proc_struct *$/;"	l
static	obj/kernel.asm	/^static inline timer_t *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static list_entry_t *$/;"	l
static	obj/kernel.asm	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static off_t p_rpos, p_wpos;$/;"	l
static	obj/kernel.asm	/^static semaphore_t disk0_sem;$/;"	l
static	obj/kernel.asm	/^static semaphore_t vdev_list_sem;$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct file *$/;"	t
static	obj/kernel.asm	/^static struct inode *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static struct run_queue *rq;$/;"	t
static	obj/kernel.asm	/^static struct run_queue __rq;$/;"	t
static	obj/kernel.asm	/^static struct sched_class *sched_class;$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/kernel.asm	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	l
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
testfd	obj/kernel.asm	/^#define testfd(fd)                          ((fd) >= 0 && (fd) < FILES_STRUCT_NENTRY)$/;"	d
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
timer	obj/kernel.asm	/^                timer = le2timer(le, timer_link);$/;"	d
try_again	obj/kernel.asm	/^        try_again:$/;"	l
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
void	obj/kernel.asm	/^void     $/;"	l
void	obj/kernel.asm	/^void $/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void check_sync(void){$/;"	l
void	obj/kernel.asm	/^void files_closeall(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void files_destroy(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void grade_backtrace(void);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_test_condvar (i) { $/;"	l
void	obj/kernel.asm	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile size_t ticks;$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vop_open_dec	obj/kernel.asm	/^#define vop_open_dec(node)                                          inode_open_dec(node)$/;"	d
vop_open_inc	obj/kernel.asm	/^#define vop_open_inc(node)                                          inode_open_inc(node)$/;"	d
wait_t	obj/kernel.asm	/^wait_t *$/;"	l
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/badarg.asm	/^DIR *$/;"	l
DIR	obj/user/badarg.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/badarg.asm	/^_start:$/;"	l
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
char	obj/user/badarg.asm	/^char *$/;"	l
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/badarg.asm	/^        default:$/;"	l
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/badarg.asm	/^failed:$/;"	l
int	obj/user/badarg.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/badarg.asm	/^long$/;"	l
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/badarg.asm	/^        number:$/;"	l
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
ret	obj/user/badarg.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/badarg.asm	/^size_t$/;"	l
static	obj/user/badarg.asm	/^static char$/;"	l
static	obj/user/badarg.asm	/^static inline bool$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static inline void$/;"	l
static	obj/user/badarg.asm	/^static int$/;"	l
static	obj/user/badarg.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
step	obj/user/badarg.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
unsigned	obj/user/badarg.asm	/^unsigned int$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/badsegment.asm	/^DIR *$/;"	l
DIR	obj/user/badsegment.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
char	obj/user/badsegment.asm	/^char *$/;"	l
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/badsegment.asm	/^        default:$/;"	l
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/badsegment.asm	/^failed:$/;"	l
int	obj/user/badsegment.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/badsegment.asm	/^long$/;"	l
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/badsegment.asm	/^        number:$/;"	l
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
ret	obj/user/badsegment.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
static	obj/user/badsegment.asm	/^static char$/;"	l
static	obj/user/badsegment.asm	/^static inline bool$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static inline void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
step	obj/user/badsegment.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/divzero.asm	/^DIR *$/;"	l
DIR	obj/user/divzero.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/divzero.asm	/^_start:$/;"	l
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
char	obj/user/divzero.asm	/^char *$/;"	l
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/divzero.asm	/^        default:$/;"	l
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/divzero.asm	/^failed:$/;"	l
int	obj/user/divzero.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/divzero.asm	/^long$/;"	l
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/divzero.asm	/^        number:$/;"	l
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
ret	obj/user/divzero.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/divzero.asm	/^size_t$/;"	l
static	obj/user/divzero.asm	/^static char$/;"	l
static	obj/user/divzero.asm	/^static inline bool$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static inline void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
step	obj/user/divzero.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/exit.asm	/^DIR *$/;"	l
DIR	obj/user/exit.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/exit.asm	/^_start:$/;"	l
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
char	obj/user/exit.asm	/^char *$/;"	l
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/exit.asm	/^        default:$/;"	l
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/exit.asm	/^failed:$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/exit.asm	/^long$/;"	l
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/exit.asm	/^        number:$/;"	l
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
ret	obj/user/exit.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/exit.asm	/^size_t$/;"	l
static	obj/user/exit.asm	/^static char$/;"	l
static	obj/user/exit.asm	/^static inline bool$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static inline void$/;"	l
static	obj/user/exit.asm	/^static int$/;"	l
static	obj/user/exit.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
step	obj/user/exit.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
unsigned	obj/user/exit.asm	/^unsigned int$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/faultread.asm	/^DIR *$/;"	l
DIR	obj/user/faultread.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/faultread.asm	/^_start:$/;"	l
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
char	obj/user/faultread.asm	/^char *$/;"	l
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/faultread.asm	/^        default:$/;"	l
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/faultread.asm	/^failed:$/;"	l
int	obj/user/faultread.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/faultread.asm	/^long$/;"	l
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultread.asm	/^        number:$/;"	l
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
ret	obj/user/faultread.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/faultread.asm	/^size_t$/;"	l
static	obj/user/faultread.asm	/^static char$/;"	l
static	obj/user/faultread.asm	/^static inline bool$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static inline void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
step	obj/user/faultread.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/faultreadkernel.asm	/^DIR *$/;"	l
DIR	obj/user/faultreadkernel.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/faultreadkernel.asm	/^failed:$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/faultreadkernel.asm	/^long$/;"	l
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
ret	obj/user/faultreadkernel.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static char$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline bool$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
step	obj/user/faultreadkernel.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/forktest.asm	/^DIR *$/;"	l
DIR	obj/user/forktest.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/forktest.asm	/^_start:$/;"	l
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
char	obj/user/forktest.asm	/^char *$/;"	l
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/forktest.asm	/^failed:$/;"	l
int	obj/user/forktest.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/forktest.asm	/^long$/;"	l
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktest.asm	/^        number:$/;"	l
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
ret	obj/user/forktest.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/forktest.asm	/^size_t$/;"	l
static	obj/user/forktest.asm	/^static char$/;"	l
static	obj/user/forktest.asm	/^static inline bool$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static inline void$/;"	l
static	obj/user/forktest.asm	/^static int$/;"	l
static	obj/user/forktest.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
step	obj/user/forktest.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
unsigned	obj/user/forktest.asm	/^unsigned int$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DIR	obj/user/forktree.asm	/^DIR *$/;"	l
DIR	obj/user/forktree.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
SLEEP_TIME	obj/user/forktree.asm	/^#define SLEEP_TIME 400$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/forktree.asm	/^_start:$/;"	l
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
char	obj/user/forktree.asm	/^char *$/;"	l
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/forktree.asm	/^        default:$/;"	l
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/forktree.asm	/^failed:$/;"	l
int	obj/user/forktree.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/forktree.asm	/^long$/;"	l
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktree.asm	/^        number:$/;"	l
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
ret	obj/user/forktree.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/forktree.asm	/^size_t$/;"	l
static	obj/user/forktree.asm	/^static char$/;"	l
static	obj/user/forktree.asm	/^static inline bool$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static inline void$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
step	obj/user/forktree.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/hello.asm	/^DIR *$/;"	l
DIR	obj/user/hello.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/hello.asm	/^_start:$/;"	l
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
char	obj/user/hello.asm	/^char *$/;"	l
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/hello.asm	/^        default:$/;"	l
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/hello.asm	/^failed:$/;"	l
int	obj/user/hello.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/hello.asm	/^long$/;"	l
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/hello.asm	/^        number:$/;"	l
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
ret	obj/user/hello.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/hello.asm	/^size_t$/;"	l
static	obj/user/hello.asm	/^static char$/;"	l
static	obj/user/hello.asm	/^static inline bool$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static inline void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
step	obj/user/hello.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
BUFSIZE	obj/user/ls.asm	/^#define BUFSIZE                         4096$/;"	d
DIR	obj/user/ls.asm	/^DIR *$/;"	l
DIR	obj/user/ls.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/ls.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/ls.asm	/^_start:$/;"	l
altflag	obj/user/ls.asm	/^            altflag = 1;$/;"	d
base	obj/user/ls.asm	/^            base = 10;$/;"	d
base	obj/user/ls.asm	/^            base = 16;$/;"	d
base	obj/user/ls.asm	/^            base = 8;$/;"	d
base	obj/user/ls.asm	/^        base = 10;$/;"	d
ch	obj/user/ls.asm	/^                ch = *fmt;$/;"	d
char	obj/user/ls.asm	/^char *$/;"	l
cnt	obj/user/ls.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/ls.asm	/^        default:$/;"	l
default	obj/user/ls.asm	/^    default:  type = 5; break;$/;"	l
dig	obj/user/ls.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/ls.asm	/^                err = -err;$/;"	d
err	obj/user/ls.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/ls.asm	/^failed:$/;"	l
int	obj/user/ls.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
lflag	obj/user/ls.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/ls.asm	/^long$/;"	l
next	obj/user/ls.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/ls.asm	/^    next = seed;$/;"	d
num	obj/user/ls.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/ls.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/ls.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/ls.asm	/^        number:$/;"	l
p	obj/user/ls.asm	/^                p = "(null)";$/;"	d
padc	obj/user/ls.asm	/^            padc = '-';$/;"	d
padc	obj/user/ls.asm	/^            padc = '0';$/;"	d
precision	obj/user/ls.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^            precision = va_arg(ap, int);$/;"	d
printf	obj/user/ls.asm	/^#define printf(...)                     fprintf(1, __VA_ARGS__)$/;"	d
process_precision	obj/user/ls.asm	/^        process_precision:$/;"	l
reswitch	obj/user/ls.asm	/^    reswitch:$/;"	l
ret	obj/user/ls.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/ls.asm	/^    ret = fstat(fd, stat);$/;"	d
size_t	obj/user/ls.asm	/^size_t$/;"	l
static	obj/user/ls.asm	/^static char$/;"	l
static	obj/user/ls.asm	/^static inline bool$/;"	l
static	obj/user/ls.asm	/^static inline char *$/;"	l
static	obj/user/ls.asm	/^static inline int$/;"	l
static	obj/user/ls.asm	/^static inline void *$/;"	l
static	obj/user/ls.asm	/^static inline void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
step	obj/user/ls.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/ls.asm	/^uint32_t$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
width	obj/user/ls.asm	/^                width = 0;$/;"	d
width	obj/user/ls.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/matrix.asm	/^DIR *$/;"	l
DIR	obj/user/matrix.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/matrix.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/matrix.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/matrix.asm	/^_start:$/;"	l
altflag	obj/user/matrix.asm	/^            altflag = 1;$/;"	d
base	obj/user/matrix.asm	/^            base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 16;$/;"	d
base	obj/user/matrix.asm	/^            base = 8;$/;"	d
base	obj/user/matrix.asm	/^        base = 10;$/;"	d
ch	obj/user/matrix.asm	/^                ch = *fmt;$/;"	d
char	obj/user/matrix.asm	/^char *$/;"	l
cnt	obj/user/matrix.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/user/matrix.asm	/^const int total = 21;$/;"	l
default	obj/user/matrix.asm	/^        default:$/;"	l
dig	obj/user/matrix.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/matrix.asm	/^                err = -err;$/;"	d
err	obj/user/matrix.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/matrix.asm	/^failed:$/;"	l
int	obj/user/matrix.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/matrix.asm	/^int$/;"	l
lflag	obj/user/matrix.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/matrix.asm	/^long$/;"	l
next	obj/user/matrix.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/matrix.asm	/^    next = seed;$/;"	d
num	obj/user/matrix.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/matrix.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/matrix.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/matrix.asm	/^        number:$/;"	l
p	obj/user/matrix.asm	/^                p = "(null)";$/;"	d
padc	obj/user/matrix.asm	/^            padc = '-';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '0';$/;"	d
precision	obj/user/matrix.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/matrix.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/matrix.asm	/^        process_precision:$/;"	l
reswitch	obj/user/matrix.asm	/^    reswitch:$/;"	l
ret	obj/user/matrix.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/matrix.asm	/^size_t$/;"	l
static	obj/user/matrix.asm	/^static char$/;"	l
static	obj/user/matrix.asm	/^static inline bool$/;"	l
static	obj/user/matrix.asm	/^static inline char *$/;"	l
static	obj/user/matrix.asm	/^static inline int$/;"	l
static	obj/user/matrix.asm	/^static inline void *$/;"	l
static	obj/user/matrix.asm	/^static inline void$/;"	l
static	obj/user/matrix.asm	/^static int mata[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matb[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matc[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int$/;"	l
static	obj/user/matrix.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/matrix.asm	/^static long long$/;"	l
static	obj/user/matrix.asm	/^static unsigned long long$/;"	l
static	obj/user/matrix.asm	/^static void$/;"	l
step	obj/user/matrix.asm	/^                step = 0;$/;"	d
times	obj/user/matrix.asm	/^            times = (times * times + 10) * 100;$/;"	d
uint32_t	obj/user/matrix.asm	/^uint32_t$/;"	l
unsigned	obj/user/matrix.asm	/^unsigned int$/;"	l
void	obj/user/matrix.asm	/^void *$/;"	l
void	obj/user/matrix.asm	/^void$/;"	l
width	obj/user/matrix.asm	/^                width = 0;$/;"	d
width	obj/user/matrix.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/matrix.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/pgdir.asm	/^DIR *$/;"	l
DIR	obj/user/pgdir.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/pgdir.asm	/^_start:$/;"	l
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
char	obj/user/pgdir.asm	/^char *$/;"	l
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/pgdir.asm	/^        default:$/;"	l
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/pgdir.asm	/^failed:$/;"	l
int	obj/user/pgdir.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/pgdir.asm	/^long$/;"	l
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/pgdir.asm	/^        number:$/;"	l
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
ret	obj/user/pgdir.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
static	obj/user/pgdir.asm	/^static char$/;"	l
static	obj/user/pgdir.asm	/^static inline bool$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static inline void$/;"	l
static	obj/user/pgdir.asm	/^static int$/;"	l
static	obj/user/pgdir.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
step	obj/user/pgdir.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
unsigned	obj/user/pgdir.asm	/^unsigned int$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/priority.asm	/^DIR *$/;"	l
DIR	obj/user/priority.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/priority.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/priority.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/priority.asm	/^_start:$/;"	l
altflag	obj/user/priority.asm	/^            altflag = 1;$/;"	d
base	obj/user/priority.asm	/^            base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 16;$/;"	d
base	obj/user/priority.asm	/^            base = 8;$/;"	d
base	obj/user/priority.asm	/^        base = 10;$/;"	d
ch	obj/user/priority.asm	/^                ch = *fmt;$/;"	d
char	obj/user/priority.asm	/^char *$/;"	l
cnt	obj/user/priority.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/priority.asm	/^        default:$/;"	l
dig	obj/user/priority.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/priority.asm	/^                err = -err;$/;"	d
err	obj/user/priority.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/priority.asm	/^failed:$/;"	l
int	obj/user/priority.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/priority.asm	/^int pids[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int status[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int$/;"	l
j	obj/user/priority.asm	/^          j = !j;$/;"	d
lflag	obj/user/priority.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/priority.asm	/^long$/;"	l
next	obj/user/priority.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/priority.asm	/^    next = seed;$/;"	d
num	obj/user/priority.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/priority.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/priority.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/priority.asm	/^        number:$/;"	l
p	obj/user/priority.asm	/^                p = "(null)";$/;"	d
padc	obj/user/priority.asm	/^            padc = '-';$/;"	d
padc	obj/user/priority.asm	/^            padc = '0';$/;"	d
precision	obj/user/priority.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/priority.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/priority.asm	/^        process_precision:$/;"	l
reswitch	obj/user/priority.asm	/^    reswitch:$/;"	l
ret	obj/user/priority.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/priority.asm	/^size_t$/;"	l
static	obj/user/priority.asm	/^static char$/;"	l
static	obj/user/priority.asm	/^static inline bool$/;"	l
static	obj/user/priority.asm	/^static inline char *$/;"	l
static	obj/user/priority.asm	/^static inline int$/;"	l
static	obj/user/priority.asm	/^static inline void *$/;"	l
static	obj/user/priority.asm	/^static inline void$/;"	l
static	obj/user/priority.asm	/^static int$/;"	l
static	obj/user/priority.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/priority.asm	/^static long long$/;"	l
static	obj/user/priority.asm	/^static unsigned long long$/;"	l
static	obj/user/priority.asm	/^static void$/;"	l
step	obj/user/priority.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/priority.asm	/^uint32_t$/;"	l
unsigned	obj/user/priority.asm	/^unsigned int$/;"	l
void	obj/user/priority.asm	/^void *$/;"	l
void	obj/user/priority.asm	/^void$/;"	l
width	obj/user/priority.asm	/^                width = 0;$/;"	d
width	obj/user/priority.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/priority.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sh.asm	/^DIR *$/;"	l
DIR	obj/user/sh.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sh.asm	/^#define MAX_ARGS            5$/;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS                         "<|>&;"$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sh.asm	/^_start:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
altflag	obj/user/sh.asm	/^            altflag = 1;$/;"	d
argc	obj/user/sh.asm	/^    argc = 0;$/;"	d
base	obj/user/sh.asm	/^            base = 10;$/;"	d
base	obj/user/sh.asm	/^            base = 16;$/;"	d
base	obj/user/sh.asm	/^            base = 8;$/;"	d
base	obj/user/sh.asm	/^        base = 10;$/;"	d
ch	obj/user/sh.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char shcwd[BUFSIZE];$/;"	l
cnt	obj/user/sh.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sh.asm	/^        default:$/;"	l
dig	obj/user/sh.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sh.asm	/^                err = -err;$/;"	d
err	obj/user/sh.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sh.asm	/^failed:$/;"	l
fd1	obj/user/sh.asm	/^        fd1 = ret, ret = dup2(fd1, fd2);$/;"	d
int	obj/user/sh.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
interactive	obj/user/sh.asm	/^        interactive = 0;$/;"	d
lflag	obj/user/sh.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sh.asm	/^long$/;"	l
next	obj/user/sh.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sh.asm	/^    next = seed;$/;"	d
num	obj/user/sh.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sh.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sh.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sh.asm	/^        number:$/;"	l
p	obj/user/sh.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sh.asm	/^            padc = '-';$/;"	d
padc	obj/user/sh.asm	/^            padc = '0';$/;"	d
precision	obj/user/sh.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sh.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sh.asm	/^    reswitch:$/;"	l
ret	obj/user/sh.asm	/^                ret = 0;$/;"	d
ret	obj/user/sh.asm	/^            ret = runcmd(buffer);$/;"	d
ret	obj/user/sh.asm	/^        ret = dup2(fd1, fd2);$/;"	d
runit	obj/user/sh.asm	/^runit:$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
static	obj/user/sh.asm	/^static char$/;"	l
static	obj/user/sh.asm	/^static inline bool$/;"	l
static	obj/user/sh.asm	/^static inline char *$/;"	l
static	obj/user/sh.asm	/^static inline int$/;"	l
static	obj/user/sh.asm	/^static inline void *$/;"	l
static	obj/user/sh.asm	/^static inline void$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
step	obj/user/sh.asm	/^                step = 0;$/;"	d
token	obj/user/sh.asm	/^        token = *s, *s ++ = '\\0';$/;"	d
uint32_t	obj/user/sh.asm	/^uint32_t$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
width	obj/user/sh.asm	/^                width = 0;$/;"	d
width	obj/user/sh.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sleep.asm	/^DIR *$/;"	l
DIR	obj/user/sleep.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sleep.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sleep.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sleep.asm	/^_start:$/;"	l
altflag	obj/user/sleep.asm	/^            altflag = 1;$/;"	d
base	obj/user/sleep.asm	/^            base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 16;$/;"	d
base	obj/user/sleep.asm	/^            base = 8;$/;"	d
base	obj/user/sleep.asm	/^        base = 10;$/;"	d
ch	obj/user/sleep.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sleep.asm	/^char *$/;"	l
cnt	obj/user/sleep.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sleep.asm	/^        default:$/;"	l
dig	obj/user/sleep.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sleep.asm	/^                err = -err;$/;"	d
err	obj/user/sleep.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sleep.asm	/^failed:$/;"	l
int	obj/user/sleep.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleep.asm	/^int$/;"	l
lflag	obj/user/sleep.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sleep.asm	/^long$/;"	l
next	obj/user/sleep.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleep.asm	/^    next = seed;$/;"	d
num	obj/user/sleep.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleep.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleep.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sleep.asm	/^        number:$/;"	l
p	obj/user/sleep.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sleep.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '0';$/;"	d
precision	obj/user/sleep.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleep.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sleep.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sleep.asm	/^    reswitch:$/;"	l
ret	obj/user/sleep.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/sleep.asm	/^size_t$/;"	l
static	obj/user/sleep.asm	/^static char$/;"	l
static	obj/user/sleep.asm	/^static inline bool$/;"	l
static	obj/user/sleep.asm	/^static inline char *$/;"	l
static	obj/user/sleep.asm	/^static inline int$/;"	l
static	obj/user/sleep.asm	/^static inline void *$/;"	l
static	obj/user/sleep.asm	/^static inline void$/;"	l
static	obj/user/sleep.asm	/^static int$/;"	l
static	obj/user/sleep.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleep.asm	/^static long long$/;"	l
static	obj/user/sleep.asm	/^static unsigned long long$/;"	l
static	obj/user/sleep.asm	/^static void$/;"	l
step	obj/user/sleep.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/sleep.asm	/^uint32_t$/;"	l
unsigned	obj/user/sleep.asm	/^unsigned int$/;"	l
void	obj/user/sleep.asm	/^void *$/;"	l
void	obj/user/sleep.asm	/^void$/;"	l
width	obj/user/sleep.asm	/^                width = 0;$/;"	d
width	obj/user/sleep.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleep.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sleepkill.asm	/^DIR *$/;"	l
DIR	obj/user/sleepkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sleepkill.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sleepkill.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sleepkill.asm	/^_start:$/;"	l
altflag	obj/user/sleepkill.asm	/^            altflag = 1;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 16;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 8;$/;"	d
base	obj/user/sleepkill.asm	/^        base = 10;$/;"	d
ch	obj/user/sleepkill.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sleepkill.asm	/^char *$/;"	l
cnt	obj/user/sleepkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sleepkill.asm	/^        default:$/;"	l
dig	obj/user/sleepkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sleepkill.asm	/^                err = -err;$/;"	d
err	obj/user/sleepkill.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sleepkill.asm	/^failed:$/;"	l
int	obj/user/sleepkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleepkill.asm	/^int$/;"	l
lflag	obj/user/sleepkill.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sleepkill.asm	/^long$/;"	l
next	obj/user/sleepkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleepkill.asm	/^    next = seed;$/;"	d
num	obj/user/sleepkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleepkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sleepkill.asm	/^        number:$/;"	l
p	obj/user/sleepkill.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '0';$/;"	d
precision	obj/user/sleepkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleepkill.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sleepkill.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sleepkill.asm	/^    reswitch:$/;"	l
ret	obj/user/sleepkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/sleepkill.asm	/^size_t$/;"	l
static	obj/user/sleepkill.asm	/^static char$/;"	l
static	obj/user/sleepkill.asm	/^static inline bool$/;"	l
static	obj/user/sleepkill.asm	/^static inline char *$/;"	l
static	obj/user/sleepkill.asm	/^static inline int$/;"	l
static	obj/user/sleepkill.asm	/^static inline void *$/;"	l
static	obj/user/sleepkill.asm	/^static inline void$/;"	l
static	obj/user/sleepkill.asm	/^static int$/;"	l
static	obj/user/sleepkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleepkill.asm	/^static long long$/;"	l
static	obj/user/sleepkill.asm	/^static unsigned long long$/;"	l
static	obj/user/sleepkill.asm	/^static void$/;"	l
step	obj/user/sleepkill.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/sleepkill.asm	/^uint32_t$/;"	l
unsigned	obj/user/sleepkill.asm	/^unsigned int$/;"	l
void	obj/user/sleepkill.asm	/^void *$/;"	l
void	obj/user/sleepkill.asm	/^void$/;"	l
width	obj/user/sleepkill.asm	/^                width = 0;$/;"	d
width	obj/user/sleepkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/softint.asm	/^DIR *$/;"	l
DIR	obj/user/softint.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/softint.asm	/^_start:$/;"	l
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
char	obj/user/softint.asm	/^char *$/;"	l
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/softint.asm	/^        default:$/;"	l
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/softint.asm	/^failed:$/;"	l
int	obj/user/softint.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/softint.asm	/^long$/;"	l
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/softint.asm	/^        number:$/;"	l
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
ret	obj/user/softint.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/softint.asm	/^size_t$/;"	l
static	obj/user/softint.asm	/^static char$/;"	l
static	obj/user/softint.asm	/^static inline bool$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static inline void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
step	obj/user/softint.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/spin.asm	/^DIR *$/;"	l
DIR	obj/user/spin.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/spin.asm	/^_start:$/;"	l
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
char	obj/user/spin.asm	/^char *$/;"	l
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/spin.asm	/^        default:$/;"	l
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/spin.asm	/^failed:$/;"	l
int	obj/user/spin.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/spin.asm	/^long$/;"	l
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/spin.asm	/^        number:$/;"	l
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
ret	obj/user/spin.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/spin.asm	/^size_t$/;"	l
static	obj/user/spin.asm	/^static char$/;"	l
static	obj/user/spin.asm	/^static inline bool$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static inline void$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
step	obj/user/spin.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
DIR	obj/user/testbss.asm	/^DIR *$/;"	l
DIR	obj/user/testbss.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/testbss.asm	/^_start:$/;"	l
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
char	obj/user/testbss.asm	/^char *$/;"	l
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/testbss.asm	/^        default:$/;"	l
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/testbss.asm	/^failed:$/;"	l
int	obj/user/testbss.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/testbss.asm	/^long$/;"	l
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/testbss.asm	/^        number:$/;"	l
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
ret	obj/user/testbss.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/testbss.asm	/^size_t$/;"	l
static	obj/user/testbss.asm	/^static char$/;"	l
static	obj/user/testbss.asm	/^static inline bool$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static inline void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
step	obj/user/testbss.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/waitkill.asm	/^DIR *$/;"	l
DIR	obj/user/waitkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/waitkill.asm	/^_start:$/;"	l
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
char	obj/user/waitkill.asm	/^char *$/;"	l
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/waitkill.asm	/^        default:$/;"	l
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/waitkill.asm	/^failed:$/;"	l
int	obj/user/waitkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/waitkill.asm	/^long$/;"	l
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/waitkill.asm	/^        number:$/;"	l
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
ret	obj/user/waitkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
static	obj/user/waitkill.asm	/^static char$/;"	l
static	obj/user/waitkill.asm	/^static inline bool$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static inline void$/;"	l
static	obj/user/waitkill.asm	/^static int$/;"	l
static	obj/user/waitkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
step	obj/user/waitkill.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
unsigned	obj/user/waitkill.asm	/^unsigned int$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/yield.asm	/^DIR *$/;"	l
DIR	obj/user/yield.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/yield.asm	/^_start:$/;"	l
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
char	obj/user/yield.asm	/^char *$/;"	l
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/yield.asm	/^        default:$/;"	l
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/yield.asm	/^failed:$/;"	l
int	obj/user/yield.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/yield.asm	/^long$/;"	l
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/yield.asm	/^        number:$/;"	l
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/user/yield.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/yield.asm	/^size_t$/;"	l
static	obj/user/yield.asm	/^static char$/;"	l
static	obj/user/yield.asm	/^static inline bool$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static inline void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
step	obj/user/yield.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
build_run	tools/grade.sh	/^build_run() {$/;"	f
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
default_check	tools/grade.sh	/^default_check() {$/;"	f
fail	tools/grade.sh	/^fail() {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
pass	tools/grade.sh	/^pass() {$/;"	f
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_test	tools/grade.sh	/^run_test() {$/;"	f
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
update_score	tools/grade.sh	/^update_score() {$/;"	f
GOLDEN_RATIO_PRIME_32	tools/mksfs.c	37;"	d	file:
HASH_LIST_SIZE	tools/mksfs.c	40;"	d	file:
HASH_SHIFT	tools/mksfs.c	39;"	d	file:
SFS_BLKBITS	tools/mksfs.c	118;"	d	file:
SFS_BLKN_FREEMAP	tools/mksfs.c	125;"	d	file:
SFS_BLKN_ROOT	tools/mksfs.c	124;"	d	file:
SFS_BLKN_SUPER	tools/mksfs.c	123;"	d	file:
SFS_BLKSIZE	tools/mksfs.c	112;"	d	file:
SFS_BLK_NENTRY	tools/mksfs.c	376;"	d	file:
SFS_L0_NBLKS	tools/mksfs.c	377;"	d	file:
SFS_L1_NBLKS	tools/mksfs.c	378;"	d	file:
SFS_L2_NBLKS	tools/mksfs.c	379;"	d	file:
SFS_LN_NBLKS	tools/mksfs.c	380;"	d	file:
SFS_MAGIC	tools/mksfs.c	110;"	d	file:
SFS_MAX_FILE_SIZE	tools/mksfs.c	116;"	d	file:
SFS_MAX_FNAME_LEN	tools/mksfs.c	115;"	d	file:
SFS_MAX_INFO_LEN	tools/mksfs.c	114;"	d	file:
SFS_MAX_NBLKS	tools/mksfs.c	113;"	d	file:
SFS_NDIRECT	tools/mksfs.c	111;"	d	file:
SFS_TYPE_DIR	tools/mksfs.c	120;"	d	file:
SFS_TYPE_FILE	tools/mksfs.c	119;"	d	file:
SFS_TYPE_LINK	tools/mksfs.c	121;"	d	file:
_GNU_SOURCE	tools/mksfs.c	1;"	d	file:
__error	tools/mksfs.c	17;"	d	file:
__hash32	tools/mksfs.c	/^__hash32(uint32_t val, unsigned int bits) {$/;"	f	file:
__sp_nil	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
add_dir	tools/mksfs.c	/^add_dir(struct sfs_fs *sfs, struct cache_inode *parent, const char *dirname, int curfd, int fd, ino_t real) {$/;"	f	file:
add_entry	tools/mksfs.c	/^add_entry(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *file, const char *name) {$/;"	f	file:
add_file	tools/mksfs.c	/^add_file(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, int fd, ino_t real) {$/;"	f	file:
add_link	tools/mksfs.c	/^add_link(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, ino_t real) {$/;"	f	file:
alloc_cache_block	tools/mksfs.c	/^alloc_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
alloc_cache_inode	tools/mksfs.c	/^alloc_cache_inode(struct sfs_fs *sfs, ino_t real, uint32_t ino, uint16_t type) {$/;"	f	file:
append_block	tools/mksfs.c	/^append_block(struct sfs_fs *sfs, struct cache_inode *file, size_t size, uint32_t ino, const char *filename) {$/;"	f	file:
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:cache_inode::inode	file:
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:sfs_fs::__anon16	file:
blocks	tools/mksfs.c	/^    struct cache_block *blocks[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_block	file:
bool	tools/mksfs.c	/^typedef int bool;$/;"	t	file:
bug	tools/mksfs.c	31;"	d	file:
cache	tools/mksfs.c	/^    void *cache;$/;"	m	struct:cache_block	file:
cache_block	tools/mksfs.c	/^struct cache_block {$/;"	s	file:
cache_inode	tools/mksfs.c	/^struct cache_inode {$/;"	s	file:
close_sfs	tools/mksfs.c	/^close_sfs(struct sfs_fs *sfs) {$/;"	f
create_img	tools/mksfs.c	/^create_img(struct sfs_fs *sfs, const char *home) {$/;"	f
create_sfs	tools/mksfs.c	/^create_sfs(int imgfd) {$/;"	f
db_indirect	tools/mksfs.c	/^        uint32_t db_indirect;$/;"	m	struct:cache_inode::inode	file:
direct	tools/mksfs.c	/^        uint32_t direct[SFS_NDIRECT];$/;"	m	struct:cache_inode::inode	file:
flush_cache_block	tools/mksfs.c	/^flush_cache_block(struct sfs_fs *sfs, struct cache_block *cb) {$/;"	f	file:
flush_cache_inode	tools/mksfs.c	/^flush_cache_inode(struct sfs_fs *sfs, struct cache_inode *ci) {$/;"	f	file:
hash32	tools/mksfs.c	/^hash32(uint32_t val) {$/;"	f	file:
hash64	tools/mksfs.c	/^hash64(uint64_t val) {$/;"	f	file:
hash_next	tools/mksfs.c	/^    struct cache_block *hash_next;$/;"	m	struct:cache_block	typeref:struct:cache_block::cache_block	file:
hash_next	tools/mksfs.c	/^    struct cache_inode *hash_next;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_inode	file:
imgfd	tools/mksfs.c	/^    int imgfd;$/;"	m	struct:sfs_fs	file:
indirect	tools/mksfs.c	/^        uint32_t indirect;$/;"	m	struct:cache_inode::inode	file:
info	tools/mksfs.c	/^        char info[SFS_MAX_INFO_LEN + 1];$/;"	m	struct:sfs_fs::__anon16	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_block	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_inode	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:sfs_entry	file:
inode	tools/mksfs.c	/^    struct inode {$/;"	s	struct:cache_inode	file:
inode	tools/mksfs.c	/^    } inode;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::inode	file:
inodes	tools/mksfs.c	/^    struct cache_inode *inodes[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
l1	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_block	file:
l2	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::	file:
magic	tools/mksfs.c	/^        uint32_t magic;$/;"	m	struct:sfs_fs::__anon16	file:
main	tools/mksfs.c	/^main(int argc, char **argv) {$/;"	f
name	tools/mksfs.c	/^    char name[SFS_MAX_FNAME_LEN + 1];$/;"	m	struct:sfs_entry	file:
nblks	tools/mksfs.c	/^    uint32_t nblks;$/;"	m	struct:cache_inode	file:
next	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::subpath	file:
next_ino	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
ninos	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
nlinks	tools/mksfs.c	/^        uint16_t nlinks;$/;"	m	struct:cache_inode::inode	file:
open_bug	tools/mksfs.c	364;"	d	file:
open_dir	tools/mksfs.c	/^open_dir(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *parent) {$/;"	f
open_file	tools/mksfs.c	/^open_file(struct sfs_fs *sfs, struct cache_inode *file, const char *filename, int fd) {$/;"	f
open_img	tools/mksfs.c	/^open_img(const char *imgname) {$/;"	f
open_link	tools/mksfs.c	/^open_link(struct sfs_fs *sfs, struct cache_inode *file, const char *filename) {$/;"	f
prev	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::	file:
real	tools/mksfs.c	/^    ino_t real;$/;"	m	struct:cache_inode	file:
root	tools/mksfs.c	/^    struct cache_inode *root;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
safe_fchdir	tools/mksfs.c	/^safe_fchdir(int fd) {$/;"	f
safe_fstat	tools/mksfs.c	/^safe_fstat(int fd) {$/;"	f
safe_lstat	tools/mksfs.c	/^safe_lstat(const char *name) {$/;"	f
safe_malloc	tools/mksfs.c	/^safe_malloc(size_t size) {$/;"	f
safe_stat	tools/mksfs.c	/^safe_stat(const char *filename) {$/;"	f
safe_strdup	tools/mksfs.c	/^safe_strdup(const char *str) {$/;"	f
search_cache_block	tools/mksfs.c	/^search_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f
search_cache_inode	tools/mksfs.c	/^search_cache_inode(struct sfs_fs *sfs, ino_t real) {$/;"	f
sfs_alloc_ino	tools/mksfs.c	/^sfs_alloc_ino(struct sfs_fs *sfs) {$/;"	f	file:
sfs_entry	tools/mksfs.c	/^struct sfs_entry {$/;"	s	file:
sfs_fs	tools/mksfs.c	/^struct sfs_fs {$/;"	s	file:
show_fullpath	tools/mksfs.c	370;"	d	file:
size	tools/mksfs.c	/^        uint32_t size;$/;"	m	struct:cache_inode::inode	file:
sp_end	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
sp_root	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
static_assert	tools/mksfs.c	33;"	d	file:
static_check	tools/mksfs.c	/^static_check(void) {$/;"	f	file:
subname	tools/mksfs.c	/^        char *subname;$/;"	m	struct:sfs_fs::subpath	file:
subpath	tools/mksfs.c	/^    struct subpath {$/;"	s	struct:sfs_fs	file:
subpath_pop	tools/mksfs.c	/^subpath_pop(struct sfs_fs *sfs) {$/;"	f	file:
subpath_push	tools/mksfs.c	/^subpath_push(struct sfs_fs *sfs, const char *subname) {$/;"	f	file:
subpath_show	tools/mksfs.c	/^subpath_show(FILE *fout, struct sfs_fs *sfs, const char *name) {$/;"	f	file:
super	tools/mksfs.c	/^    } super;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::__anon16	file:
type	tools/mksfs.c	/^        uint16_t type;$/;"	m	struct:cache_inode::inode	file:
unused_blocks	tools/mksfs.c	/^        uint32_t unused_blocks;$/;"	m	struct:sfs_fs::__anon16	file:
update_cache	tools/mksfs.c	/^update_cache(struct sfs_fs *sfs, struct cache_block **cbp, uint32_t *inop) {$/;"	f	file:
warn	tools/mksfs.c	30;"	d	file:
write_block	tools/mksfs.c	/^write_block(struct sfs_fs *sfs, void *data, size_t len, uint32_t ino) {$/;"	f	file:
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
zero	user/divzero.c	/^int zero;$/;"	v
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
DEPTH	user/forktree.c	5;"	d	file:
SLEEP_TIME	user/forktree.c	6;"	d	file:
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
closedir	user/libs/dir.c	/^closedir(DIR *dirp) {$/;"	f
dir	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
dirp	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
getcwd	user/libs/dir.c	/^getcwd(char *buffer, size_t len) {$/;"	f
opendir	user/libs/dir.c	/^opendir(const char *path) {$/;"	f
readdir	user/libs/dir.c	/^readdir(DIR *dirp) {$/;"	f
DIR	user/libs/dir.h	/^} DIR;$/;"	t	typeref:struct:__anon1
__USER_LIBS_DIR_H__	user/libs/dir.h	2;"	d
dirent	user/libs/dir.h	/^    struct dirent dirent;$/;"	m	struct:__anon1	typeref:struct:__anon1::dirent
fd	user/libs/dir.h	/^    int fd;$/;"	m	struct:__anon1
close	user/libs/file.c	/^close(int fd) {$/;"	f
dup2	user/libs/file.c	/^dup2(int fd1, int fd2) {$/;"	f
fstat	user/libs/file.c	/^fstat(int fd, struct stat *stat) {$/;"	f
fsync	user/libs/file.c	/^fsync(int fd) {$/;"	f
open	user/libs/file.c	/^open(const char *path, uint32_t open_flags) {$/;"	f
print_stat	user/libs/file.c	/^print_stat(const char *name, int fd, struct stat *stat) {$/;"	f
read	user/libs/file.c	/^read(int fd, void *base, size_t len) {$/;"	f
seek	user/libs/file.c	/^seek(int fd, off_t pos, int whence) {$/;"	f
transmode	user/libs/file.c	/^transmode(struct stat *stat) {$/;"	f	file:
write	user/libs/file.c	/^write(int fd, void *base, size_t len) {$/;"	f
__USER_LIBS_FILE_H__	user/libs/file.h	2;"	d
_start	user/libs/initcode.S	/^_start:$/;"	l
INIT_LOCK	user/libs/lock.h	8;"	d
__USER_LIBS_LOCK_H__	user/libs/lock.h	2;"	d
lock	user/libs/lock.h	/^lock(lock_t *l) {$/;"	f
lock_init	user/libs/lock.h	/^lock_init(lock_t *l) {$/;"	f
lock_t	user/libs/lock.h	/^typedef volatile bool lock_t;$/;"	t
try_lock	user/libs/lock.h	/^try_lock(lock_t *l) {$/;"	f
unlock	user/libs/lock.h	/^unlock(lock_t *l) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
fprintf	user/libs/stdio.c	/^fprintf(int fd, const char *fmt, ...) {$/;"	f
fputch	user/libs/stdio.c	/^fputch(char c, int *cnt, int fd) {$/;"	f	file:
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vfprintf	user/libs/stdio.c	/^vfprintf(int fd, const char *fmt, va_list ap) {$/;"	f
MAX_ARGS	user/libs/syscall.c	9;"	d	file:
sys_close	user/libs/syscall.c	/^sys_close(int fd) {$/;"	f
sys_dup	user/libs/syscall.c	/^sys_dup(int fd1, int fd2) {$/;"	f
sys_exec	user/libs/syscall.c	/^sys_exec(const char *name, int argc, const char **argv) {$/;"	f
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_fstat	user/libs/syscall.c	/^sys_fstat(int fd, struct stat *stat) {$/;"	f
sys_fsync	user/libs/syscall.c	/^sys_fsync(int fd) {$/;"	f
sys_getcwd	user/libs/syscall.c	/^sys_getcwd(char *buffer, size_t len) {$/;"	f
sys_getdirentry	user/libs/syscall.c	/^sys_getdirentry(int fd, struct dirent *dirent) {$/;"	f
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_gettime	user/libs/syscall.c	/^sys_gettime(void) {$/;"	f
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_lab6_set_priority	user/libs/syscall.c	/^sys_lab6_set_priority(uint32_t priority)$/;"	f
sys_open	user/libs/syscall.c	/^sys_open(const char *path, uint32_t open_flags) {$/;"	f
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_read	user/libs/syscall.c	/^sys_read(int fd, void *base, size_t len) {$/;"	f
sys_seek	user/libs/syscall.c	/^sys_seek(int fd, off_t pos, int whence) {$/;"	f
sys_sleep	user/libs/syscall.c	/^sys_sleep(unsigned int time) {$/;"	f
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_write	user/libs/syscall.c	/^sys_write(int fd, void *base, size_t len) {$/;"	f
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
__exec	user/libs/ulib.c	/^__exec(const char *name, const char **argv) {$/;"	f
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_lock	user/libs/ulib.c	/^static lock_t fork_lock = INIT_LOCK;$/;"	v	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
gettime_msec	user/libs/ulib.c	/^gettime_msec(void) {$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
lab6_set_priority	user/libs/ulib.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lock_fork	user/libs/ulib.c	/^lock_fork(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
sleep	user/libs/ulib.c	/^sleep(unsigned int time) {$/;"	f
unlock_fork	user/libs/ulib.c	/^unlock_fork(void) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
__exec0	user/libs/ulib.h	40;"	d
assert	user/libs/ulib.h	15;"	d
exec	user/libs/ulib.h	43;"	d
nexec	user/libs/ulib.h	44;"	d
panic	user/libs/ulib.h	12;"	d
static_assert	user/libs/ulib.h	23;"	d
warn	user/libs/ulib.h	9;"	d
initfd	user/libs/umain.c	/^initfd(int fd2, const char *path, uint32_t open_flags) {$/;"	f	file:
umain	user/libs/umain.c	/^umain(int argc, char *argv[]) {$/;"	f
BUFSIZE	user/ls.c	11;"	d	file:
getmode	user/ls.c	/^getmode(uint32_t st_mode) {$/;"	f	file:
getstat	user/ls.c	/^getstat(const char *name, struct stat *stat) {$/;"	f	file:
ls	user/ls.c	/^ls(const char *path) {$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path) {$/;"	f
lsstat	user/ls.c	/^lsstat(struct stat *stat, const char *filename) {$/;"	f
main	user/ls.c	/^main(int argc, char **argv) {$/;"	f
printf	user/ls.c	10;"	d	file:
MATSIZE	user/matrix.c	6;"	d	file:
main	user/matrix.c	/^main(void) {$/;"	f
mata	user/matrix.c	/^static int mata[MATSIZE][MATSIZE];$/;"	v	file:
matb	user/matrix.c	/^static int matb[MATSIZE][MATSIZE];$/;"	v	file:
matc	user/matrix.c	/^static int matc[MATSIZE][MATSIZE];$/;"	v	file:
total	user/matrix.c	/^const int total = 21;$/;"	v
work	user/matrix.c	/^work(unsigned int times) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
MAX_TIME	user/priority.c	8;"	d	file:
SLEEP_TIME	user/priority.c	9;"	d	file:
TOTAL	user/priority.c	6;"	d	file:
acc	user/priority.c	/^unsigned int acc[TOTAL];$/;"	v
main	user/priority.c	/^main(void) {$/;"	f
pids	user/priority.c	/^int pids[TOTAL];$/;"	v
spin_delay	user/priority.c	/^spin_delay(void)$/;"	f	file:
status	user/priority.c	/^int status[TOTAL];$/;"	v
BUFSIZE	user/sh.c	12;"	d	file:
SYMBOLS	user/sh.c	14;"	d	file:
WHITESPACE	user/sh.c	13;"	d	file:
gettoken	user/sh.c	/^gettoken(char **p1, char **p2) {$/;"	f
main	user/sh.c	/^main(int argc, char **argv) {$/;"	f
printf	user/sh.c	9;"	d	file:
putc	user/sh.c	10;"	d	file:
readline	user/sh.c	/^readline(const char *prompt) {$/;"	f
reopen	user/sh.c	/^reopen(int fd2, const char *filename, uint32_t open_flags) {$/;"	f
runcmd	user/sh.c	/^runcmd(char *cmd) {$/;"	f
shcwd	user/sh.c	/^char shcwd[BUFSIZE];$/;"	v
testfile	user/sh.c	/^testfile(const char *name) {$/;"	f
usage	user/sh.c	/^usage(void) {$/;"	f
main	user/sleep.c	/^main(void) {$/;"	f
sleepy	user/sleep.c	/^sleepy(int pid) {$/;"	f
main	user/sleepkill.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
ARRAYSIZE	user/testbss.c	4;"	d	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
main	user/testbss.c	/^main(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
loop	user/waitkill.c	/^loop(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
work	user/waitkill.c	/^work(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
